uint64_t Journaling.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t variable initialization expression of LRUCache.size()
{
  return 0;
}

uint64_t variable initialization expression of OperationBase.lock()
{
  sub_10004CA00();
  type metadata accessor for OperationBase.Locked();
  uint64_t v0 = sub_100004B54();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

id variable initialization expression of OperationsManager.mapTableAssetMetadataQueue()
{
  id v0 = [self strongToWeakObjectsMapTable];

  return v0;
}

uint64_t variable initialization expression of LRUCache.lru()
{
  return DoublyLinkedList.__allocating_init()();
}

uint64_t variable initialization expression of CanvasGridCollectionView._isExpanded()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.delegate()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.bundleId@<X0>(uint64_t a1@<X8>)
{
  return sub_10000340C((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t variable initialization expression of Journaling.EntryViewModel.changeEventPublisher()
{
  return sub_1001099E0();
}

uint64_t variable initialization expression of Journaling.EntryViewModel.dateSource()
{
  return 5;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.originalUpdatedDate@<X0>(uint64_t a1@<X8>)
{
  return sub_10000340C((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

void *variable initialization expression of Journaling.EntryViewModel.assetsAll()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10000340C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t sub_100003480(uint64_t a1, uint64_t a2)
{
  return sub_1000048D0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_1000034A4()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_1000034AC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100109680();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_100003500(uint64_t a1, uint64_t a2)
{
  char v3 = sub_100109690();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_100003558@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1001096A0();
  *a1 = v3;
  return result;
}

uint64_t sub_100003580(uint64_t a1, uint64_t a2)
{
  return sub_1000048D0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void *sub_1000035A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1000035B4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1000035E4(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1000035F8(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_10000360C()
{
  return sub_1001096F0();
}

uint64_t sub_100003658()
{
  return sub_1001096E0();
}

Swift::Int sub_1000036B0()
{
  return sub_10010AE20();
}

void sub_100003718(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_100003720@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_100003734@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100003760@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_100003784@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100003798(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000037AC(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1000037C0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1000037D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_1000037EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_100003800(void *result)
{
  *v1 ^= *result;
  return result;
}

BOOL sub_100003814()
{
  return *v0 == 0;
}

void *sub_100003824(void *result)
{
  *v1 &= ~*result;
  return result;
}

NSNumber sub_10000383C()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_100003844(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10010A100();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_100003898(uint64_t a1, uint64_t a2)
{
  char v3 = sub_10010A110();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_1000038F0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_10010A120();
  *a1 = v3;
  return result;
}

uint64_t sub_10000391C(uint64_t a1, id *a2)
{
  uint64_t result = sub_100109D10();
  *a2 = 0;
  return result;
}

uint64_t sub_100003994(uint64_t a1, id *a2)
{
  char v3 = sub_100109D20();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100003A14@<X0>(void *a1@<X8>)
{
  sub_100109D30();
  NSString v2 = sub_100109CF0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

NSNumber sub_100003A58()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_100003A60(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10010A1A0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_100003AB4(uint64_t a1, uint64_t a2)
{
  char v3 = sub_10010A1B0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_100003B0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10010A1C0();
  *a1 = result;
  return result;
}

void *sub_100003B34@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100003B40()
{
  swift_getWitnessTable();

  return sub_1001096D0();
}

uint64_t sub_100003BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100109D30();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100003BD8()
{
  sub_100004E50(&qword_100159168, type metadata accessor for URLResourceKey);
  sub_100004E50(&qword_100159170, type metadata accessor for URLResourceKey);

  return sub_10010AAE0();
}

uint64_t sub_100003C94()
{
  sub_100004E50(&qword_100158E58, type metadata accessor for FileProtectionType);
  sub_100004E50(&qword_100158E60, type metadata accessor for FileProtectionType);

  return sub_10010AAE0();
}

uint64_t sub_100003D50()
{
  sub_100004E50(&qword_100159118, type metadata accessor for URLFileProtection);
  sub_100004E50(&qword_100159120, type metadata accessor for URLFileProtection);

  return sub_10010AAE0();
}

uint64_t sub_100003E0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_100004B1C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

BOOL sub_100003E4C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100003E60()
{
  sub_100004E50(&qword_1001591F0, type metadata accessor for Key);
  sub_100004E50(&qword_1001591F8, type metadata accessor for Key);

  return sub_10010AAE0();
}

void *sub_100003F1C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_100003F2C@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_100003F38()
{
  return sub_10010AAE0();
}

uint64_t sub_100004000()
{
  sub_100004E50((unint64_t *)&qword_1001591A0, type metadata accessor for AttributeName);
  sub_100004E50(&qword_1001591A8, type metadata accessor for AttributeName);

  return sub_10010AAE0();
}

uint64_t sub_1000040BC()
{
  sub_100004E50(&qword_100159138, type metadata accessor for FeatureKey);
  sub_100004E50(&qword_100159140, type metadata accessor for FeatureKey);

  return sub_10010AAE0();
}

uint64_t sub_100004178()
{
  sub_100004E50(&qword_100159178, type metadata accessor for TraitKey);
  sub_100004E50(&qword_100159180, type metadata accessor for TraitKey);

  return sub_10010AAE0();
}

uint64_t sub_100004234()
{
  sub_100004E50(&qword_100159148, type metadata accessor for MKPointOfInterestCategory);
  sub_100004E50(&qword_100159150, type metadata accessor for MKPointOfInterestCategory);

  return sub_10010AAE0();
}

uint64_t sub_1000042F0()
{
  sub_100004E50(&qword_100159128, type metadata accessor for FileAttributeKey);
  sub_100004E50(&qword_100159130, type metadata accessor for FileAttributeKey);

  return sub_10010AAE0();
}

void sub_1000043AC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000043B8()
{
  sub_100004E50(&qword_1001591B0, type metadata accessor for DocumentAttributeKey);
  sub_100004E50(&qword_1001591B8, type metadata accessor for DocumentAttributeKey);

  return sub_10010AAE0();
}

uint64_t sub_100004474()
{
  sub_100004E50(&qword_1001591C0, type metadata accessor for DocumentType);
  sub_100004E50(&qword_1001591C8, type metadata accessor for DocumentType);

  return sub_10010AAE0();
}

_DWORD *sub_100004530@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_100004540@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_10000454C()
{
  return sub_10010AAE0();
}

uint64_t sub_100004608()
{
  sub_100004E50(&qword_1001591D0, type metadata accessor for DocumentReadingOptionKey);
  sub_100004E50(&qword_1001591D8, type metadata accessor for DocumentReadingOptionKey);

  return sub_10010AAE0();
}

uint64_t sub_1000046C4@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_100109CF0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10000470C()
{
  sub_100004E50((unint64_t *)&qword_1001591E0, type metadata accessor for OptionKey);
  sub_100004E50(&qword_1001591E8, type metadata accessor for OptionKey);

  return sub_10010AAE0();
}

uint64_t sub_1000047C8()
{
  return sub_10010AAE0();
}

uint64_t sub_100004884()
{
  return Double.hashValue.getter(*v0);
}

void sub_10000488C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_10010AE00(v1);
}

uint64_t sub_1000048C0()
{
  return sub_10010ADB0();
}

uint64_t sub_1000048D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_100109D30();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100004914()
{
  sub_100109D30();
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100004968()
{
  sub_100109D30();
  sub_10010ADC0();
  sub_100109DB0();
  Swift::Int v0 = sub_10010AE20();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000049DC()
{
  return Float.hashValue.getter(*v0);
}

void sub_1000049E4()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  sub_10010ADF0(v1);
}

uint64_t sub_100004A18(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_100004A2C()
{
  return Int.hashValue.getter(*v0);
}

void sub_100004A34()
{
  sub_10010ADD0(*v0);
}

uint64_t sub_100004A60()
{
  return sub_10010ADB0();
}

BOOL sub_100004A68(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100004A7C()
{
  uint64_t v0 = sub_100109D30();
  uint64_t v2 = v1;
  if (v0 == sub_100109D30() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_10010ACA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_100004B08(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100004B1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100004B54()
{
  return sub_10010A960();
}

uint64_t sub_100004BD4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for Cropping()
{
  return self;
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for LinkAssetGridView.LinkItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_100004C9C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100004CB0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100004CD0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for CACornerRadii(uint64_t a1)
{
}

__n128 _s9IconStyleVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 _s15ReflectionAssetC14ReflectionDataVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100004D4C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100004D6C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

uint64_t sub_100004DC0()
{
  return sub_100004E50(&qword_100158E18, type metadata accessor for FileProtectionType);
}

uint64_t sub_100004E08()
{
  return sub_100004E50(&qword_100158E20, type metadata accessor for FileProtectionType);
}

uint64_t sub_100004E50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100004E98()
{
  return sub_100004E50(&qword_100158E28, type metadata accessor for FileProtectionType);
}

uint64_t sub_100004EE0()
{
  return sub_100004E50(&qword_100158E30, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100004F28()
{
  return sub_100004E50(&qword_100158E38, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100004F70()
{
  return sub_100004E50(&qword_100158E40, type metadata accessor for UIBackgroundTaskIdentifier);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_100004FCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4
                                                                             + class metadata base offset for ManagedBuffer)
                                                                 - 8)
                                                     + 16))(a2, v3);
}

void type metadata accessor for CGRectEdge(uint64_t a1)
{
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
}

void type metadata accessor for Status(uint64_t a1)
{
}

void type metadata accessor for NSMergePolicyType(uint64_t a1)
{
}

void type metadata accessor for URLFileProtection(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for NSUnderlineStyle(uint64_t a1)
{
}

void type metadata accessor for MKPointOfInterestCategory(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

uint64_t sub_10000512C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000514C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

__n128 sub_1000051B0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1000051C4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000051E4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
}

void type metadata accessor for DocumentType(uint64_t a1)
{
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
}

void type metadata accessor for OptionKey(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_100005300()
{
  return sub_100004E50(&qword_100158F98, type metadata accessor for Key);
}

uint64_t sub_100005348()
{
  return sub_100004E50(&qword_100158FA0, type metadata accessor for Key);
}

uint64_t sub_100005390()
{
  return sub_100004E50(&qword_100158FA8, type metadata accessor for OptionKey);
}

uint64_t sub_1000053D8()
{
  return sub_100004E50(&qword_100158FB0, type metadata accessor for OptionKey);
}

uint64_t sub_100005420()
{
  return sub_100004E50(&qword_100158FB8, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100005468()
{
  return sub_100004E50(&qword_100158FC0, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_1000054B0()
{
  return sub_100004E50(&qword_100158FC8, type metadata accessor for DocumentType);
}

uint64_t sub_1000054F8()
{
  return sub_100004E50(&qword_100158FD0, type metadata accessor for DocumentType);
}

uint64_t sub_100005540()
{
  return sub_100004E50(&qword_100158FD8, type metadata accessor for DocumentType);
}

uint64_t sub_100005588()
{
  return sub_100004E50(&qword_100158FE0, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_1000055D0()
{
  return sub_100004E50(&qword_100158FE8, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100005618()
{
  return sub_100004E50(&qword_100158FF0, type metadata accessor for AttributeName);
}

uint64_t sub_100005660()
{
  return sub_100004E50(&qword_100158FF8, type metadata accessor for AttributeName);
}

uint64_t sub_1000056A8()
{
  return sub_100004E50(&qword_100159000, type metadata accessor for Weight);
}

uint64_t sub_1000056F0()
{
  return sub_100004E50(&qword_100159008, type metadata accessor for Weight);
}

uint64_t sub_100005738()
{
  return sub_100004E50(&qword_100159010, type metadata accessor for Weight);
}

uint64_t sub_100005780()
{
  return sub_100004E50(&qword_100159018, type metadata accessor for TraitKey);
}

uint64_t sub_1000057C8()
{
  return sub_100004E50(&qword_100159020, type metadata accessor for TraitKey);
}

uint64_t sub_100005810()
{
  return sub_100004E50(&qword_100159028, type metadata accessor for TraitKey);
}

uint64_t sub_100005858()
{
  return sub_100004E50(&qword_100159030, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000058A0()
{
  return sub_100004E50(&qword_100159038, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000058E8()
{
  return sub_100004E50(&qword_100159040, type metadata accessor for URLResourceKey);
}

uint64_t sub_100005930()
{
  return sub_100004E50(&qword_100159048, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100005978()
{
  return sub_100004E50(&qword_100159050, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1000059C0()
{
  return sub_100004E50(&qword_100159058, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100005A08()
{
  return sub_100004E50(&qword_100159060, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100005A50()
{
  return sub_100004E50(&qword_100159068, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100005A98()
{
  return sub_100004E50(&qword_100159070, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100005AE0()
{
  return sub_100004E50(&qword_100159078, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_100005B28()
{
  return sub_100004E50(&qword_100159080, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_100005B70()
{
  return sub_100004E50(&qword_100159088, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_100005BB8()
{
  return sub_100004E50(&qword_100159090, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_100005C00()
{
  return sub_100004E50(&qword_100159098, type metadata accessor for FeatureKey);
}

uint64_t sub_100005C48()
{
  return sub_100004E50(&qword_1001590A0, type metadata accessor for FeatureKey);
}

uint64_t sub_100005C90()
{
  return sub_100004E50(&qword_1001590A8, type metadata accessor for FeatureKey);
}

uint64_t sub_100005CD8()
{
  return sub_100004E50(&qword_1001590B0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100005D20()
{
  return sub_100004E50(&qword_1001590B8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100005D68()
{
  return sub_100004E50(&qword_1001590C0, type metadata accessor for URLFileProtection);
}

uint64_t sub_100005DB0()
{
  return sub_100004E50(&qword_1001590C8, type metadata accessor for URLFileProtection);
}

uint64_t sub_100005DF8()
{
  return sub_100004E50(&qword_1001590D0, type metadata accessor for URLFileProtection);
}

uint64_t sub_100005E40()
{
  return sub_100004E50(&qword_1001590D8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100005E88()
{
  return sub_100004E50(&qword_1001590E0, type metadata accessor for AttributeName);
}

uint64_t sub_100005ED0()
{
  return sub_100004E50(&qword_1001590E8, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100005F18()
{
  return sub_100004E50(&qword_1001590F0, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100005F60()
{
  return sub_100004E50(&qword_1001590F8, type metadata accessor for OptionKey);
}

uint64_t sub_100005FA8()
{
  return sub_100004E50(&qword_100159100, type metadata accessor for Key);
}

uint64_t sub_100005FF0()
{
  return sub_100004E50((unint64_t *)&qword_100159108, type metadata accessor for CFString);
}

uint64_t sub_100006038()
{
  return sub_100004E50(&qword_100159110, type metadata accessor for CFString);
}

unint64_t sub_100006080()
{
  unint64_t result = qword_100159198;
  if (!qword_100159198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159198);
  }
  return result;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

void sub_1000060FC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10000619C()
{
  sub_10010A700();
  uint64_t result = sub_10010A700();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s8MetadataC5InputOMa();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10000628C()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_100159330);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_100159330);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100006354(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_100006394(a1);
  return v2;
}

uint64_t sub_100006394(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  uint64_t v4 = sub_10010A700();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_OWORD *)(v1 + *(void *)(*(void *)v1 + 112)) = xmmword_100121E30;
  uint64_t v5 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v6 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v1;
}

uint64_t sub_1000064DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 112));
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v5 = *v2;
  if (v4 >> 60 == 11)
  {
    uint64_t v5 = sub_10000657C(v1);
    uint64_t v6 = *v2;
    unint64_t v7 = v2[1];
    uint64_t *v2 = v5;
    v2[1] = v8;
    sub_1000084E0(v5, v8);
    sub_1000084F4(v6, v7);
  }
  sub_10000851C(v3, v4);
  return v5;
}

uint64_t sub_10000657C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = _s8MetadataC5InputOMa();
  __chkstk_darwin(v7);
  v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v8, (uint64_t)a1 + *(void *)(v2 + 120), v7);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v9;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  uint64_t v11 = sub_10000677C(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11;
}

uint64_t sub_10000677C(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  __chkstk_darwin(v1);
  sub_100108D60();
  swift_allocObject();
  sub_100108D50();
  uint64_t v2 = sub_100108D40();
  swift_release();
  return v2;
}

uint64_t sub_100006B38()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  sub_10010A700();
  uint64_t v2 = sub_10010A700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1000084F4(*(void *)(v0 + *(void *)(*(void *)v0 + 112)), *(void *)(v0 + *(void *)(*(void *)v0 + 112) + 8));
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v4 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_100006C74()
{
  sub_100006B38();

  return swift_deallocClassInstance();
}

uint64_t _s8MetadataCMa()
{
  return sub_100008550();
}

uint64_t _s8MetadataC5InputOMa()
{
  return sub_100008550();
}

uint64_t sub_100006CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100006D04()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100006D9C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      uint64_t v14 = *(void *)a2;
      unint64_t v15 = *((void *)a2 + 1);
      sub_100006F28(*(void *)a2, v15);
      *uint64_t v3 = v14;
      v3[1] = v15;
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_100006F28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100006F80(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return sub_100007084(*(void *)a1, *((void *)a1 + 1));
  }
}

uint64_t sub_100007084(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_1000070DC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    unint64_t v12 = *((void *)a2 + 1);
    sub_100006F28(*(void *)a2, v12);
    char v10 = 0;
    *a1 = v11;
    a1[1] = v12;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_100007228(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_100007084(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      uint64_t v20 = *(void *)a2;
      unint64_t v19 = *((void *)a2 + 1);
      sub_100006F28(v20, v19);
      char v18 = 0;
      *(void *)a1 = v20;
      *((void *)a1 + 1) = v19;
    }
    a1[v7] = v18;
  }
  return a1;
}

_OWORD *sub_10000744C(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_100007584(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_100007084(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_10000779C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1000078D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x100007A98);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100007AC0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_100007B7C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t *sub_100007C54(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100007CB8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

BOOL sub_100007CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 32))();
  if (v2) {
    swift_release();
  }
  return v2 == 0;
}

void sub_100007D38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a2 + 32))();
  if (v3)
  {
    uint64_t v4 = sub_1000064DC();
    unint64_t v6 = v5;
    uint64_t v3 = swift_release();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  int v7 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140);
  uint64_t v8 = ((uint64_t (*)(uint64_t))v7)(v3);
  if (v8)
  {
    int v9 = (void *)v8;
    if (v6 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      sub_100006F28(v4, v6);
      Class isa = sub_100109240().super.isa;
      sub_100008508(v4, v6);
    }
    [v9 setAssetMetaData:isa];
  }
  int v11 = (void *)v7();
  if (v11)
  {
    id v12 = v11;
    [v11 setIsUploadedToCloud:0];
    sub_100008508(v4, v6);
  }
  else
  {
    sub_100008508(v4, v6);
  }
}

uint64_t sub_100007ED0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
  if (v5)
  {
    unint64_t v6 = v5;
    id v7 = [v5 assetMetaData];

    if (v7)
    {
      uint64_t v9 = sub_100109250();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    uint64_t v16 = v9;
    unint64_t v17 = v11;
    __chkstk_darwin(v8);
    v15[2] = a1;
    v15[3] = a2;
    sub_100004BD4(&qword_100159448);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v12 = _s8MetadataCMa();
    sub_100008238((void (*)(char *, char *))sub_100008530, (uint64_t)v15, (uint64_t)&type metadata for Never, v12, v13, (uint64_t)&v18);
    sub_100008508(v16, v17);
    unint64_t v5 = v18;
  }
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(a2 + 40))(v5, a1, a2);
}

uint64_t sub_1000080C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s8MetadataC5InputOMa();
  __chkstk_darwin(v4);
  unint64_t v6 = (uint64_t *)((char *)&v11 - v5);
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  _s8MetadataCMa();
  *unint64_t v6 = v8;
  v6[1] = v7;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = swift_allocObject();
  sub_100006394((uint64_t)v6);
  *a2 = v9;
  return sub_100006F28(v8, v7);
}

uint64_t sub_100008238@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  char v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1000084E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100006F28(a1, a2);
  }
  return a1;
}

uint64_t sub_1000084F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100008508(a1, a2);
  }
  return a1;
}

uint64_t sub_100008508(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100007084(a1, a2);
  }
  return a1;
}

uint64_t sub_10000851C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_1000084E0(a1, a2);
  }
  return a1;
}

uint64_t sub_100008530@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000080C8(a1, a2);
}

uint64_t sub_100008550()
{
  return swift_getGenericMetadata();
}

uint64_t BatchRecordDownloadOperation.main@Sendable ()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_1000085A0, 0, 0);
}

uint64_t sub_1000085A0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + qword_100159460);
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  uint64_t v5 = sub_100004BD4(&qword_100159478);
  *uint64_t v4 = v0;
  v4[1] = sub_1000086AC;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_100159470, v3, v5);
}

uint64_t sub_1000086AC()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000087E4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000087C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000087C8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1000087E4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100008848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_10000886C, 0, 0);
}

uint64_t sub_10000886C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + qword_100159480);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  void *v2 = v0;
  v2[1] = sub_100008918;
  return CKDatabase.records(for:desiredKeys:)(v1, 0);
}

uint64_t sub_100008918(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return _swift_task_switch(sub_100008A64, 0, 0);
  }
}

uint64_t sub_100008A64()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100008A88(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1000091E4;
  v7[2] = a1;
  return _swift_task_switch(sub_10000886C, 0, 0);
}

id AssetMetadataDownloadOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void BatchRecordDownloadOperation.init()()
{
}

void sub_100008BA8()
{
}

void sub_100008BD8()
{
  swift_bridgeObjectRelease();

  id v1 = *(void **)(v0 + qword_100159460);
}

id BatchRecordDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchRecordDownloadOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for BatchRecordDownloadOperation()
{
  uint64_t result = qword_1001594B0;
  if (!qword_1001594B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100008CAC(uint64_t a1)
{
  swift_bridgeObjectRelease();

  objc_super v2 = *(void **)(a1 + qword_100159460);
}

uint64_t sub_100008D08()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100008D60(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_100008D80, 0, 0);
}

uint64_t sub_100008D80()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_100159460);
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = sub_100004BD4(&qword_100159478);
  *uint64_t v4 = v0;
  v4[1] = sub_100008E8C;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_1001595B0, v3, v5);
}

uint64_t sub_100008E8C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100008FC8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100008FA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100008FA8()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100008FC8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000902C()
{
  return type metadata accessor for BatchRecordDownloadOperation();
}

uint64_t sub_100009034(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1000090F0;
  v7[2] = a1;
  return _swift_task_switch(sub_10000886C, 0, 0);
}

uint64_t sub_1000090F0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_1000091E8(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 2:
      unint64_t result = 0x614E747369747261;
      break;
    case 3:
      unint64_t result = 1735290739;
      break;
    case 4:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1000092E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000092FC()
{
  Swift::UInt v1 = *v0;
  sub_10010ADC0();
  sub_10010ADD0(v1);
  return sub_10010AE20();
}

void sub_100009344()
{
  sub_10010ADD0(*v0);
}

Swift::Int sub_100009370()
{
  Swift::UInt v1 = *v0;
  sub_10010ADC0();
  sub_10010ADD0(v1);
  return sub_10010AE20();
}

unint64_t sub_1000093B4()
{
  return sub_1000091E8(*v0);
}

uint64_t sub_1000093BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10000BD44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000093E4()
{
  return 0;
}

void sub_1000093F0(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1000093FC(uint64_t a1)
{
  unint64_t v2 = sub_10000B75C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100009438(uint64_t a1)
{
  unint64_t v2 = sub_10000B75C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100009474(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_100159710);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_10000B75C();
  sub_10010AE60();
  v11[15] = 0;
  sub_10010AC10();
  if (!v2)
  {
    uint64_t v9 = _s10MusicAssetC9MusicDataVMa(0);
    v11[14] = 1;
    sub_1001091E0();
    sub_10000B6D0(&qword_100159718, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10010AC00();
    v11[13] = 2;
    sub_10010ABC0();
    v11[12] = 3;
    sub_10010ABC0();
    v11[11] = 4;
    sub_10010ABC0();
    v11[10] = 5;
    sub_10010ABF0();
    v11[9] = 6;
    sub_100109460();
    sub_10000B6D0(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    v11[8] = *(unsigned char *)(v3 + *(int *)(v9 + 44));
    v11[7] = 7;
    sub_10000B978();
    sub_10010AC00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000097B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004BD4(&qword_1001596E8);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = _s10MusicAssetC9MusicDataVMa(0);
  __chkstk_darwin(v37);
  uint64_t v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  v38 = a1;
  sub_10000B718(a1, v15);
  sub_10000B75C();
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)v38);
  }
  uint64_t v16 = (uint64_t)v6;
  uint64_t v17 = v10;
  char v47 = 0;
  *uint64_t v14 = sub_10010AB70();
  v14[1] = v18;
  sub_1001091E0();
  char v46 = 1;
  sub_10000B6D0(&qword_1001596F8, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_10010AB60();
  uint64_t v19 = (int *)v37;
  sub_10000B800((uint64_t)v9, (uint64_t)v14 + *(int *)(v37 + 20), (uint64_t *)&unk_100159D40);
  char v45 = 2;
  uint64_t v20 = sub_10010AB20();
  uint64_t v21 = (uint64_t *)((char *)v14 + v19[6]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  char v44 = 3;
  uint64_t v23 = sub_10010AB20();
  uint64_t v24 = (uint64_t *)((char *)v14 + v19[7]);
  *uint64_t v24 = v23;
  v24[1] = v25;
  char v43 = 4;
  uint64_t v26 = sub_10010AB20();
  uint64_t v27 = (uint64_t)v38;
  uint64_t v28 = (uint64_t *)((char *)v14 + v19[8]);
  *uint64_t v28 = v26;
  v28[1] = v29;
  char v42 = 5;
  uint64_t v30 = sub_10010AB50();
  uint64_t v34 = 0;
  v31 = (char *)v14 + v19[9];
  *(void *)v31 = v30;
  v31[8] = v32 & 1;
  sub_100109460();
  char v41 = 6;
  sub_10000B6D0(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_10000B800(v16, (uint64_t)v14 + v19[10], (uint64_t *)&unk_10015CDE0);
  char v39 = 7;
  sub_10000B864();
  sub_10010AB60();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v36);
  *((unsigned char *)v14 + v19[11]) = v40;
  sub_10000B8B8((uint64_t)v14, v35);
  sub_10000B7B0(v27);
  return sub_10000B91C((uint64_t)v14);
}

uint64_t sub_100009E40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000097B0(a1, a2);
}

uint64_t sub_100009E58(void *a1)
{
  return sub_100009474(a1);
}

uint64_t sub_100009E70()
{
  uint64_t v1 = sub_100004BD4(&qword_100159728);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = (int *)_s10MusicAssetC9MusicDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10MusicAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100024CA4((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_100159728);
    return 0;
  }
  sub_10000BA28((uint64_t)v3, (uint64_t)v7);
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100121F30;
  uint64_t v9 = &v7[v4[7]];
  uint64_t v10 = v9[1];
  *(void *)(inited + 32) = *v9;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = &v7[v4[8]];
  uint64_t v12 = v11[1];
  *(void *)(inited + 48) = *v11;
  *(void *)(inited + 56) = v12;
  uint64_t v13 = &v7[v4[6]];
  uint64_t v14 = v13[1];
  *(void *)(inited + 64) = *v13;
  *(void *)(inited + 72) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100042280(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  sub_10000B91C((uint64_t)v7);
  return v15;
}

uint64_t sub_10000A0B8()
{
  return swift_release();
}

id sub_10000A0C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10MusicAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10000A110()
{
  return _s10MusicAssetCMa(0);
}

uint64_t _s10MusicAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_1001595E0);
}

uint64_t sub_10000A138()
{
  return swift_updateClassMetadata2();
}

void *sub_10000A17C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001091E0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)((char *)v4 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v4 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[10];
    __dst = (char *)v4 + v31;
    char v32 = (char *)a2 + v31;
    uint64_t v33 = sub_100109460();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v32, 1, v33))
    {
      uint64_t v35 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t sub_10000A464(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001091E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_100109460();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_10000A5F8(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  uint64_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (char *)a1 + v22;
  uint64_t v27 = (char *)a2 + v22;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[10];
  __dst = (char *)a1 + v28;
  uint64_t v29 = (char *)a2 + v28;
  uint64_t v30 = sub_100109460();
  uint64_t v31 = *(void *)(v30 - 8);
  char v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    uint64_t v33 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_10000A890(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_100109460();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v36 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *sub_10000AC10(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100109460();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_10000AE50(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001091E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v31;
  int v34 = (char *)a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  int v35 = (char *)a1 + v32;
  uint64_t v36 = (char *)a2 + v32;
  uint64_t v37 = sub_100109460();
  uint64_t v38 = *(void *)(v37 - 8);
  char v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_12;
  }
  if (v41)
  {
LABEL_12:
    uint64_t v42 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10000B18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000B1A0);
}

uint64_t sub_10000B1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10000B2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000B2E8);
}

uint64_t sub_10000B2E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s10MusicAssetC9MusicDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_100159648);
}

uint64_t sub_10000B43C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000B474()
{
  sub_10000B5A0(319, (unint64_t *)&qword_100159658, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10000B5A0(319, (unint64_t *)&qword_10015A7C0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10000B5A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10010A700();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10000B5F4()
{
  return swift_retain();
}

uint64_t sub_10000B604(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10MusicAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10000B61C()
{
  return sub_100009E70();
}

uint64_t sub_10000B640()
{
  return sub_10000B6D0(&qword_1001596A0, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_10000B688()
{
  return sub_10000B6D0(&qword_1001596A8, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_10000B6D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10000B718(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10000B75C()
{
  unint64_t result = qword_1001596F0;
  if (!qword_1001596F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001596F0);
  }
  return result;
}

uint64_t sub_10000B7B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000B800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004BD4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10000B864()
{
  unint64_t result = qword_100159708;
  if (!qword_100159708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159708);
  }
  return result;
}

uint64_t sub_10000B8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000B91C(uint64_t a1)
{
  uint64_t v2 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10000B978()
{
  unint64_t result = qword_100159720;
  if (!qword_100159720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159720);
  }
  return result;
}

uint64_t sub_10000B9CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004BD4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000BA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *initializeBufferWithCopyOfBuffer for Journaling.AssetType(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s10MusicAssetC9MusicDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10MusicAssetC9MusicDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000BBF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_10000BC1C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000BC24(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s10MusicAssetC9MusicDataV10CodingKeysOMa()
{
  return &_s10MusicAssetC9MusicDataV10CodingKeysON;
}

unint64_t sub_10000BC40()
{
  unint64_t result = qword_100159740;
  if (!qword_100159740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159740);
  }
  return result;
}

unint64_t sub_10000BC98()
{
  unint64_t result = qword_100159748;
  if (!qword_100159748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159748);
  }
  return result;
}

unint64_t sub_10000BCF0()
{
  unint64_t result = qword_100159750;
  if (!qword_100159750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159750);
  }
  return result;
}

uint64_t sub_10000BD44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010010D190 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_10000C0A0()
{
  type metadata accessor for HealthManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10000CE20();
  qword_10016DC78 = v0;
  return result;
}

id sub_10000C118()
{
  id v1 = *(id *)(v0 + 24);
  if (v1)
  {
    NSString v2 = sub_100109CF0();
    unsigned int v3 = [v1 BOOLForKey:v2];

    if (v3)
    {
      NSString v4 = sub_100109CF0();
      id v1 = [v1 BOOLForKey:v4];
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

id sub_10000C2BC(char a1)
{
  if (![self isHealthDataAvailable])
  {
    uint64_t v5 = sub_100109940();
    os_log_type_t v6 = sub_10010A2D0();
    if (os_log_type_enabled(v5, v6))
    {
      BOOL v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "HealthKit is not available on this device", v7, 2u);
      swift_slowDealloc();
    }
LABEL_6:

    return 0;
  }
  sub_10000CF50();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if ((a1 & 1) == 0)
  {
    id v4 = [ObjCClassFromMetadata stateOfMindType];
    goto LABEL_8;
  }
  id v4 = [ObjCClassFromMetadata categoryTypeForIdentifier:HKCategoryTypeIdentifierMindfulSession];
  if (!v4)
  {
    uint64_t v5 = sub_100109940();
    uint64_t v10 = sub_10010A2D0();
    if (os_log_type_enabled(v5, (os_log_type_t)v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_1000C50D4(0x4D6C7566646E696DLL, 0xEE00736574756E69, &v12);
      sub_10010A730();
      _os_log_impl((void *)&_mh_execute_header, v5, (os_log_type_t)v10, "Couldn't create a HKSampleType for %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }
    goto LABEL_6;
  }
LABEL_8:
  id v8 = [v1[2] authorizationStatusForType:v4];
  if (v8 && ([v1 hasSeenBothHealthTCCs] & 1) != 0) {
    [v1 setHasSeenBothHealthTCCs:1];
  }

  return v8;
}

uint64_t sub_10000C554(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return _swift_task_switch(sub_10000C578, 0, 0);
}

uint64_t sub_10000C578()
{
  if ([self isHealthDataAvailable])
  {
    sub_10000CF50();
    id v1 = [(id)swift_getObjCClassFromMetadata() categoryTypeForIdentifier:HKCategoryTypeIdentifierMindfulSession];
    v0[18] = v1;
    if (v1)
    {
      uint64_t v2 = v1;
      self;
      uint64_t v3 = swift_dynamicCastObjCClass();
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = v0[17];
        id v6 = v2;
        Class isa = sub_1001093D0().super.isa;
        Class v8 = sub_1001093D0().super.isa;
        id v9 = [self categorySampleWithType:v4 value:0 startDate:isa endDate:v8];
        v0[19] = v9;

        uint64_t v10 = *(void **)(v5 + 16);
        v0[2] = v0;
        v0[3] = sub_10000C870;
        uint64_t v11 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_10000CBD4;
        v0[13] = &unk_100140DE0;
        v0[14] = v11;
        [v10 saveObject:v9 withCompletion:v0 + 10];
        return _swift_continuation_await(v0 + 2);
      }
    }
    uint64_t v12 = sub_100109940();
    os_log_type_t v13 = sub_10010A2D0();
    if (os_log_type_enabled(v12, v13))
    {
      int v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v14 = 0;
      uint64_t v15 = "Couldn't create a HKCategoryType of type .mindfulSession";
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v12 = sub_100109940();
    os_log_type_t v13 = sub_10010A2D0();
    if (os_log_type_enabled(v12, v13))
    {
      int v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v14 = 0;
      uint64_t v15 = "HealthKit is not available on this device";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
      swift_slowDealloc();
    }
  }

  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10000C870()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_10000C9E4;
  }
  else {
    uint64_t v2 = sub_10000C980;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000C980()
{
  uint64_t v1 = *(void **)(v0 + 152);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10000C9E4()
{
  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v10 = *(void **)(v0 + 152);
    uint64_t v3 = *(void **)(v0 + 144);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v6;
    sub_10010A730();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Saving a mindfulSessionCategory type encountered an error : %@", v4, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    BOOL v7 = *(void **)(v0 + 152);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  Class v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10000CBD4(uint64_t a1, int a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    a1 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(a1);
  }
  if (!a3)
  {
    __break(1u);
    return _swift_continuation_throwingResume(a1);
  }
  sub_100004BD4(&qword_100159850);
  uint64_t v5 = swift_allocError();
  *uint64_t v6 = a3;
  id v7 = a3;

  return _swift_continuation_throwingResumeWithError(v3, v5);
}

uint64_t sub_10000CC74()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension13HealthManager_logger;
  uint64_t v2 = sub_100109960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10000CD24()
{
  return type metadata accessor for HealthManager();
}

uint64_t type metadata accessor for HealthManager()
{
  uint64_t result = qword_100159788;
  if (!qword_100159788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000CD78()
{
  uint64_t result = sub_100109960();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000CE20()
{
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)HKHealthStore) init];
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_100109CF0();
  id v3 = [v1 initWithSuiteName:v2];

  *(void *)(v0 + 24) = v3;
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    sub_100109D30();
  }
  sub_100109950();
  return v0;
}

unint64_t sub_10000CF50()
{
  unint64_t result = qword_100159848;
  if (!qword_100159848)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100159848);
  }
  return result;
}

id sub_10000D048()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderAssetView();
  [super dealloc];
}

uint64_t type metadata accessor for PlaceholderAssetView()
{
  return self;
}

uint64_t sub_10000D0A0()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_100159880);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_100159880);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10000D168(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  return _swift_task_switch(sub_10000D18C, 0, 0);
}

uint64_t sub_10000D18C()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  *(CFAbsoluteTime *)(v0 + 24) = CFAbsoluteTimeGetCurrent();
  double v2 = sub_1000D6E04(v1);
  double v4 = v3;
  sub_1000D6E04(v1);
  double v6 = -116.0;
  if (v1 != 5) {
    double v6 = -16.0;
  }
  if (v1 == 2) {
    double v6 = -70.0;
  }
  double v7 = (v6 + v5) * 0.5;
  *(double *)(v0 + 32) = v4;
  *(double *)(v0 + 40) = v2;
  Class v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *Class v8 = v0;
  v8[1] = sub_10000D28C;
  return sub_10000D770(v2, v4, v7);
}

uint64_t sub_10000D28C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10000D38C, 0, 0);
}

uint64_t sub_10000D38C()
{
  sub_10000D3F8(v0[2]);
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[7];
  return v1(v2);
}

void sub_10000D3F8(uint64_t a1)
{
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_10010A8D0(83);
  v12._object = (void *)0x800000010010D540;
  v12._countAndFlagsBits = 0xD000000000000021;
  sub_100109E00(v12);
  type metadata accessor for CGSize(0);
  sub_10010AA40();
  v13._countAndFlagsBits = 0x497465737361202CLL;
  v13._object = (void *)0xEB00000000203A64;
  sub_100109E00(v13);
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_id);
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_id + 8);
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v2;
  v14._object = v3;
  sub_100109E00(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x73746E696F70202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  sub_100109E00(v15);
  if (*(void *)(a1 + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  v16._countAndFlagsBits = sub_10010AC60();
  sub_100109E00(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x6574756365786520;
  v17._object = (void *)0xED0000206E692064;
  sub_100109E00(v17);
  CFAbsoluteTimeGetCurrent();
  sub_10010A0D0();
  v18._countAndFlagsBits = 0x73646E6F63657320;
  v18._object = (void *)0xE800000000000000;
  sub_100109E00(v18);
  uint64_t v5 = v10;
  unint64_t v4 = v11;
  if (qword_1001588B0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100109960();
  sub_100007CB8(v6, (uint64_t)qword_100159880);
  swift_bridgeObjectRetain();
  double v7 = sub_100109940();
  os_log_type_t v8 = sub_10010A2F0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000C50D4(v5, v4, &v10);
    sub_10010A730();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10000D770(double a1, double a2, double a3)
{
  *(void *)(v4 + 168) = v3;
  *(double *)(v4 + 152) = a2;
  *(double *)(v4 + 160) = a3;
  *(double *)(v4 + 144) = a1;
  sub_10010A060();
  *(void *)(v4 + 176) = sub_10010A050();
  uint64_t v6 = sub_100109FF0();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 192) = v5;
  return _swift_task_switch(sub_10000D810, v6, v5);
}

uint64_t sub_10000D810()
{
  if (((void)v0[18] & 0x7FFFFFFFFFFFFFFFLL) != 0 && ((void)v0[19] & 0x7FFFFFFFFFFFFFFFLL) != 0 && v0[20] > 0.0)
  {
    unint64_t v1 = *(void *)(*((void *)v0 + 21) + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_10010AA80();
      if (!v2) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_19;
      }
    }
    uint64_t v3 = sub_1000BDD20(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_10010A920();
      }
      else {
        id v7 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      [v7 coordinate];
      MKMapPoint v9 = MKMapPointForCoordinate(v27);

      double v11 = _swiftEmptyArrayStorage[2];
      double v10 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v11 >= *(void *)&v10 >> 1) {
        sub_1000BDD20(*(void *)&v10 > 1uLL, *(void *)&v11 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v11 + 1;
      *(MKMapPoint *)&_swiftEmptyArrayStorage[2 * *(void *)&v11 + 4] = v9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    *((void *)v0 + 25) = _swiftEmptyArrayStorage;
    CGFloat v15 = v0[19];
    double v14 = v0[20];
    CGFloat v16 = v0[18];
    Swift::String v17 = (double *)swift_bridgeObjectRetain();
    double v18 = sub_10000F970(v17, v16, v15, v14);
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v25 = swift_task_alloc();
    *((void *)v0 + 26) = v25;
    *(void *)uint64_t v25 = v0;
    *(void *)(v25 + 8) = sub_10000DAD0;
    *(_OWORD *)(v25 + 48) = *((_OWORD *)v0 + 9);
    *(void *)(v25 + 32) = v22;
    *(void *)(v25 + 40) = v24;
    *(double *)(v25 + 16) = v18;
    *(void *)(v25 + 24) = v20;
    uint64_t v3 = (uint64_t)sub_10000FF18;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    return _swift_task_switch(v3, v4, v5);
  }
  swift_release();
  Swift::String v12 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v12(0);
}

uint64_t sub_10000DAD0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  return _swift_task_switch(sub_10000DBF8, v4, v3);
}

uint64_t sub_10000DBF8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_mapSnapshotter;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_mapSnapshotter);
  if (v3)
  {
    [v3 cancel];
    uint64_t v4 = *(void **)(v1 + v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v0[27];
  *(void *)(v1 + v2) = 0;

  id v6 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v5];
  id v7 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v6;

  uint64_t v8 = *(void **)(v1 + v2);
  v0[28] = v8;
  if (v8)
  {
    uint64_t v9 = qword_100158900;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_10016DCA0;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_10000DE00;
    uint64_t v12 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10000E354;
    v0[13] = &unk_100140DF8;
    v0[14] = v12;
    [v10 startWithQueue:v11 completionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    Swift::String v13 = (void *)v0[27];
    swift_release();

    swift_bridgeObjectRelease();
    double v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
}

uint64_t sub_10000DE00()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  if (v2) {
    uint64_t v5 = sub_10000E058;
  }
  else {
    uint64_t v5 = sub_10000DF30;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10000DF30()
{
  uint64_t v1 = (void *)v0[28];
  swift_release();
  uint64_t v2 = (void *)v0[15];

  uint64_t v3 = (void *)v0[27];
  uint64_t v4 = v0[25];
  if (v2)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    id v6 = self;
    id v7 = v2;
    id v8 = [v6 polylineWithPoints:v4 + 32 count:v5];
    swift_bridgeObjectRelease();
    [v3 mapRect];
    unint64_t v13 = sub_10001023C(v8, v7, v9, v10, v11, v12);
  }
  else
  {

    swift_bridgeObjectRelease();
    unint64_t v13 = 0;
  }
  double v14 = (uint64_t (*)(unint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_10000E058()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[28];
  swift_release();
  swift_willThrow();

  if (qword_1001588B0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = sub_100109960();
  sub_100007CB8(v3, (uint64_t)qword_100159880);
  id v4 = v2;
  swift_errorRetain();
  id v5 = v4;
  swift_errorRetain();
  id v6 = sub_100109940();
  os_log_type_t v7 = sub_10010A2D0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  double v9 = (void *)v0[27];
  CGFloat v10 = (char *)v0[21];
  if (v8)
  {
    double v18 = (void *)v0[27];
    uint64_t v11 = swift_slowAlloc();
    double v12 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_id];
    unint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_id + 8];
    swift_bridgeObjectRetain();
    v0[16] = sub_1000C50D4(v14, v13, &v19);
    sub_10010A730();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v15;
    sub_10010A730();
    *double v12 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "RouteMapGenerator [assetId: %s]: error generating snapshot: %@", (uint8_t *)v11, 0x16u);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t sub_10000E354(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100004BD4(&qword_100159850);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

void sub_10000E414(void *a1, id a2, char a3, uint64_t a4, uint64_t a5, CLLocationDegrees a6, CLLocationDegrees a7, double a8, double a9, double a10, double a11, CLLocationDegrees a12, CLLocationDegrees a13)
{
  v49.latitude = a12;
  v49.longitude = a13;
  id v24 = [a2 image];
  [v24 size];
  double v26 = v25;

  id v27 = [a2 image];
  [v27 size];
  double v29 = v28;

  id v30 = [a2 image];
  [v30 drawInRect:0.0, 0.0, v26, v29];

  id v50 = sub_100010714(0, a3);
  double v31 = 2.0;
  if ((a3 - 2) <= 3u) {
    double v31 = dbl_100122370[(char)(a3 - 2)];
  }
  uint64_t v32 = OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates;
  unint64_t v33 = *(void *)(a4 + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v36 == 1) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t v37 = *(void *)(a4 + v32);
    uint64_t v38 = (objc_class *)type metadata accessor for WorkoutGradientPathRenderer();
    char v39 = (char *)objc_allocWithZone(v38);
    *(void *)&v39[OBJC_IVAR____TtC21JournalShareExtension27WorkoutGradientPathRenderer_routeCoordinates] = v37;
    v51.receiver = v39;
    v51.super_class = v38;
    swift_bridgeObjectRetain();
    int v40 = (CGContext *)[v51 initWithOverlay:a5];
    int v41 = (CGContext *)[a1 CGContext];
    id v42 = a2;
    sub_100010B30(v41, v40, v42, a8, a9, a10, a11, v31);

    char v43 = (CGContext *)[a1 CGContext];
    CGContextStrokePath(v43);

    id v44 = sub_100010714(1, a3);
    MKMapPoint v45 = MKMapPointForCoordinate(v49);
    char v46 = (CGContext *)[a1 CGContext];
    sub_100010A20(v44, v42, v46, v45.x, v45.y);

    v54.latitude = a6;
    v54.longitude = a7;
    MKMapPoint v47 = MKMapPointForCoordinate(v54);
    v48 = (CGContext *)[a1 CGContext];
    sub_100010A20(v50, v42, v48, v47.x, v47.y);

    return;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
    goto LABEL_9;
  }
LABEL_5:
  v53.latitude = a6;
  v53.longitude = a7;
  MKMapPoint v34 = MKMapPointForCoordinate(v53);
  int v35 = (CGContext *)[a1 CGContext];
  sub_100010A20(v50, a2, v35, v34.x, v34.y);
}

void sub_10000E7A4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_10000E7F0()
{
  off_100159898 = &_swiftEmptyDictionarySingleton;
}

uint64_t type metadata accessor for RouteMapGenerator()
{
  return self;
}

uint64_t type metadata accessor for WorkoutStartLocationAnnotation()
{
  return self;
}

uint64_t type metadata accessor for WorkoutEndLocationAnnotation()
{
  return self;
}

BOOL sub_10000E94C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_10000E964()
{
  off_1001598A0 = &_swiftEmptyDictionarySingleton;
}

void (*sub_10000E978(void *a1, unsigned __int8 a2))(void *a1)
{
  id v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_10000F6D8(v4, a2);
  return sub_10000E9D8;
}

void sub_10000E9D8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

id sub_10000EA24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v5[OBJC_IVAR____TtC21JournalShareExtension29WorkoutLocationAnnotationView_assetSizeType] = a4;
  if (a3)
  {
    NSString v10 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v20.receiver = v5;
  v20.super_class = ObjectType;
  id v11 = [super initWithAnnotation:a1 reuseIdentifier:v10];

  double v12 = 7.0;
  if ((a4 - 2) <= 3u) {
    double v12 = dbl_100122390[(char)(a4 - 2)];
  }
  id v13 = v11;
  [v13 setFrame:0.0, 0.0, v12, v12];
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = [v14 clearColor];
  [v15 setBackgroundColor:v16];

  [v15 setCanShowCallout:1];
  if (!a1) {
    goto LABEL_11;
  }
  type metadata accessor for WorkoutStartLocationAnnotation();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for WorkoutEndLocationAnnotation();
    if (swift_dynamicCastClass())
    {
      id v17 = (id)HKUIStandardMapRedColor();
      goto LABEL_12;
    }
LABEL_11:
    id v17 = [v14 whiteColor];
    goto LABEL_12;
  }
  id v17 = (id)HKUIStandardMapGreenColor();
LABEL_12:
  id v18 = v17;
  [v15 setTintColor:v18];

  swift_unknownObjectRelease();
  return v15;
}

void sub_10000EC48(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v9 = UIGraphicsGetCurrentContext();
  if (v9)
  {
    CGFloat v10 = 1.0;
    if ((v4[OBJC_IVAR____TtC21JournalShareExtension29WorkoutLocationAnnotationView_assetSizeType] - 2) <= 3u) {
      CGFloat v10 = dbl_1001223B0[(char)(v4[OBJC_IVAR____TtC21JournalShareExtension29WorkoutLocationAnnotationView_assetSizeType]
    }
                               - 2)];
    c = v9;
    CGContextSetLineWidth(v9, v10);
    id v11 = [v4 tintColor];
    if (v11)
    {
      double v12 = v11;
      id v13 = (CGColor *)[v11 CGColor];

      CGContextSetFillColorWithColor(c, v13);
      id v14 = [self whiteColor];
      id v15 = (CGColor *)[v14 CGColor];

      CGContextSetStrokeColorWithColor(c, v15);
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRect v19 = CGRectInset(v18, v10, v10);
      CGContextAddEllipseInRect(c, v19);
      CGContextDrawPath(c, kCGPathFillStroke);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10000EE98()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutLocationAnnotationView()
{
  return self;
}

void sub_10000F020(CGContext *a1, char a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  sub_10010A330();
  sub_10010A340();
  if (a2)
  {
    sub_100004BD4(&qword_1001599C8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100122220;
    *(void *)(v12 + 32) = 0;
    *(CGFloat *)(v12 + 40) = a8 + a8;
    id v13 = (const CGPath *)sub_10010A6C0();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v13);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    id v14 = [self grayColor];
    id v15 = (CGColor *)[v14 CGColor];

    CGContextSetStrokeColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathStroke;
  }
  else
  {
    id v13 = (const CGPath *)sub_10010A6D0();
    CGContextAddPath(a1, v13);
    id v15 = (CGColor *)sub_10000F20C(a7);
    CGContextSetFillColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathFill;
  }

  CGContextDrawPath(a1, v16);
}

uint64_t sub_10000F20C(double a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension27WorkoutGradientPathRenderer_routeCoordinates);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10010AA80();
  if (!v4) {
    goto LABEL_34;
  }
LABEL_3:
  uint64_t result = sub_1000BDD48(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_10010A920();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      id v8 = v7;
      [v7 speed];
      double v10 = v9;

      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_1000BDD48(v11 > 1, v12 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13)
    {
LABEL_12:
      double v14 = _swiftEmptyArrayStorage[4];
      uint64_t v15 = v13 - 1;
      if (v13 != 1)
      {
        CGPathDrawingMode v16 = &_swiftEmptyArrayStorage[5];
        do
        {
          double v17 = *v16++;
          double v18 = v17;
          if (v17 < v14) {
            double v14 = v18;
          }
          --v15;
        }
        while (v15);
      }
      double v19 = (double)v13;
      if ((unint64_t)v13 >= 4)
      {
        uint64_t v20 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        float64x2_t v22 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0);
        uint64_t v23 = (float64x2_t *)&_swiftEmptyArrayStorage[6];
        double v21 = 0.0;
        uint64_t v24 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v25 = vdivq_f64(v23[-1], v22);
          float64x2_t v26 = vdivq_f64(*v23, v22);
          double v21 = v21 + v25.f64[0] + v25.f64[1] + v26.f64[0] + v26.f64[1];
          v23 += 2;
          v24 -= 4;
        }
        while (v24);
        if (v13 == v20)
        {
LABEL_24:
          double v30 = _swiftEmptyArrayStorage[4];
          uint64_t v31 = v13 - 1;
          if (v31)
          {
            uint64_t v32 = &_swiftEmptyArrayStorage[5];
            do
            {
              double v33 = *v32++;
              double v34 = v33;
              if (v30 < v33) {
                double v30 = v34;
              }
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease();
          if (v21 * 0.9 >= a1)
          {
            if (a1 < 0.0 || v21 == 0.0) {
              goto LABEL_41;
            }
LABEL_39:
            double v35 = (a1 - v14) / (v30 - v14);
            if (v35 >= 0.5)
            {
              double v41 = v35 + -0.5 + v35 + -0.5;
              double v37 = round(v41 * -179.0 + 255.0);
              double v38 = round(v41 * 13.0 + 204.0);
              double v39 = v41 * 100.0 + 0.0;
            }
            else
            {
              double v36 = v35 + v35;
              double v37 = round(v36 * 0.0 + 255.0);
              double v38 = round(v36 * 145.0 + 59.0);
              double v39 = 48.0 - v36 * 48.0;
            }
            id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:v37 / 255.0 green:v38 / 255.0 blue:round(v39) / 255.0 alpha:0.85];
            goto LABEL_44;
          }
LABEL_36:
          if (a1 < 0.0 || v21 == 0.0 || v21 * 1.1 > a1) {
            goto LABEL_41;
          }
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
      }
      uint64_t v27 = v13 - v20;
      double v28 = &_swiftEmptyArrayStorage[v20 + 4];
      do
      {
        double v29 = *v28++;
        double v21 = v21 + v29 / v19;
        --v27;
      }
      while (v27);
      goto LABEL_24;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    double v21 = 0.0;
    double v14 = 0.0;
    double v30 = 0.0;
    if (a1 <= 0.0)
    {
LABEL_41:
      id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
LABEL_44:
      id v42 = v40;
      id v43 = [v40 CGColor];

      return (uint64_t)v43;
    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id sub_10000F670()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientPathRenderer();
  [super dealloc];
}

uint64_t type metadata accessor for WorkoutGradientPathRenderer()
{
  return self;
}

void (*sub_10000F6D8(void *a1, unsigned __int8 a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_10000F934(v4);
  v4[9] = sub_10000F7C8((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_10000F768;
}

void sub_10000F768(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

unint64_t (*sub_10000F7C8(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000FCD70(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_10000F8EC;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100100250();
      goto LABEL_7;
    }
    sub_1000FD444(v13, a3 & 1);
    unint64_t v17 = sub_1000FCD70(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t))sub_10010AD20();
  __break(1u);
  return result;
}

unint64_t sub_10000F8EC(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    objc_super v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25)) {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else {
      return sub_1000FF55C(*(void *)(result + 16), *(unsigned char *)(result + 24), v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return sub_1000CD148(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

uint64_t (*sub_10000F934(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_10000F964;
}

uint64_t sub_10000F964(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

double sub_10000F970(double *a1, CGFloat a2, CGFloat a3, double a4)
{
  double v7 = 0.0;
  v52.origin.CGFloat x = 0.0;
  v52.origin.y = 0.0;
  v52.size.width = a2;
  v52.size.height = a3;
  CGFloat v8 = CGRectGetWidth(v52) * 0.5;
  CGFloat v10 = v8 + 0.0 - (0.0 - v8);
  v53.origin.y = 0.0;
  v53.origin.CGFloat x = 0.0 - v8;
  CGFloat x = v53.origin.x;
  v53.size.width = v10;
  v53.size.height = a3;
  CGFloat Height = CGRectGetHeight(v53);
  char v12 = sub_100056010(x, 0.0 - Height * 0.5, v10, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
  uint64_t v13 = *((void *)a1 + 2);
  double v14 = 0.0;
  double v15 = 0.0;
  double v16 = 0.0;
  if (v13)
  {
    double v15 = a1[4];
    double v16 = a1[5];
    uint64_t v17 = (uint64_t)&a1[2 * v13 + 4];
    double v7 = *(double *)(v17 - 16);
    double v14 = *(double *)(v17 - 8);
  }
  double v50 = v16;
  double v51 = v15;
  id v18 = [self polylineWithPoints:a1 + 4 count:v13];
  swift_bridgeObjectRelease();
  [v18 boundingMapRect];
  double v22 = v21;
  double v24 = v23;
  double v25 = v19;
  double v26 = v20;
  if (a2 >= 1.0 && a3 >= 1.0)
  {
    double v45 = sqrt(v19 * v19 + v20 * v20) * 0.5;
    double rect2 = v14;
    double v27 = 8.0;
    switch(v12)
    {
      case 2:
        double v27 = 35.0;
        goto LABEL_7;
      case 5:
        swift_bridgeObjectRelease();
        double v30 = v45 / (a4 + -20.0);
        double v33 = v30 * a4;
        double v49 = v30 * a2;
        double v44 = v33;
        double v46 = v30 * a3;
        double v32 = v30 * 58.0;
        double v34 = 24.0;
        break;
      default:
LABEL_7:
        double v43 = v27;
        char v28 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        double v29 = 20.0;
        if (v28)
        {
LABEL_17:
          double v30 = v45 / (a4 - v29);
          double v38 = v30 * a4;
          double v39 = v30 * a2;
          double v32 = v43 * v30;
          double v49 = v39;
          double v44 = v38;
          double v46 = v30 * a3;
          switch(v12)
          {
            case 5:
              double v34 = 24.0;
              break;
            case 4:
              double v34 = 4.0;
              break;
            case 2:
              double v34 = 12.0;
              break;
            default:
LABEL_21:
              double v34 = 7.0;
              break;
          }
        }
        else
        {
          switch(v12)
          {
            case 1:
            case 2:
            case 3:
            case 4:
              char v35 = sub_10010ACA0();
              swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_17;
              }
              switch(v12)
              {
                case 2:
                  swift_bridgeObjectRelease();
                  double v30 = v45 / (a4 + -15.0);
                  double v36 = v30 * a4;
                  double v49 = v30 * a2;
                  double v44 = v36;
                  double v46 = v30 * a3;
                  double v32 = v30 * v43;
                  double v34 = 12.0;
                  break;
                default:
                  char v37 = sub_10010ACA0();
                  swift_bridgeObjectRelease();
                  if (v37) {
                    double v29 = 15.0;
                  }
                  else {
                    double v29 = 10.0;
                  }
                  goto LABEL_17;
              }
              break;
            default:
              swift_bridgeObjectRelease();
              double v30 = v45 / (a4 + -20.0);
              double v31 = v30 * a4;
              double v49 = v30 * a2;
              double v44 = v31;
              double v46 = v30 * a3;
              double v32 = v30 * v43;
              goto LABEL_21;
          }
        }
        break;
    }
    double v40 = v30 * v34 * 0.5;
    v54.origin.CGFloat x = v22;
    v54.origin.y = v24;
    v54.size.width = v25;
    v54.size.height = v26;
    v58.origin.y = v50;
    v58.origin.CGFloat x = v51;
    v58.size.width = v40;
    v58.size.height = v40;
    MKMapRect v55 = MKMapRectUnion(v54, v58);
    v59.origin.CGFloat x = v7;
    v59.origin.y = rect2;
    v59.size.width = v40;
    v59.size.height = v40;
    MKMapRect v56 = MKMapRectUnion(v55, v59);
    double v26 = v46;
    double v22 = v56.origin.x + v56.size.width * 0.5 - (v32 + v44);
    double v24 = v56.origin.y + v56.size.height * 0.5 - (v32 + v44);
    double v25 = v49;
  }
  v57.origin.CGFloat x = v22;
  v57.origin.y = v24;
  v57.size.width = v25;
  v57.size.height = v26;
  *(void *)&double v41 = (unint64_t)MKCoordinateRegionForMapRect(v57);

  return v41;
}

uint64_t sub_10000FEF0(double a1, double a2, double a3, double a4, double a5, double a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_10000FF18, 0, 0);
}

uint64_t sub_10000FF18()
{
  double v2 = *(double *)(v0 + 32);
  double v1 = *(double *)(v0 + 40);
  CLLocationDegrees v4 = *(double *)(v0 + 16);
  CLLocationDegrees v3 = *(double *)(v0 + 24);
  id v5 = [objc_allocWithZone((Class)MKMapSnapshotOptions) init];
  id v6 = [self traitCollectionWithUserInterfaceStyle:2];
  [v5 setTraitCollection:v6];

  v14.latitude = v4;
  v14.longitude = v3;
  if (CLLocationCoordinate2DIsValid(v14) && v2 >= 0.0 && v1 >= 0.0) {
    [v5 setRegion:*(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40)];
  }
  double v8 = *(double *)(v0 + 48);
  double v7 = *(double *)(v0 + 56);
  [v5 setMapType:0];
  [v5 setSize:v8, v7];
  id v9 = [objc_allocWithZone((Class)MKStandardMapConfiguration) init];
  id v10 = [self filterExcludingAllCategories];
  [v9 setPointOfInterestFilter:v10];

  [v5 setPreferredConfiguration:v9];
  uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v5);
}

id sub_1000100C4(double a1, double a2)
{
  if (qword_1001588B8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_100159898;
  if (*((void *)off_100159898 + 2) && (unint64_t v5 = sub_1000FCCE4(a1, a2), (v6 & 1) != 0))
  {
    id v11 = *(id *)(v4[7] + 8 * v5);
    swift_endAccess();
    return v11;
  }
  else
  {
    swift_endAccess();
    id v8 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a1, a2];
    swift_beginAccess();
    id v9 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v12 = off_100159898;
    off_100159898 = (_UNKNOWN *)0x8000000000000000;
    sub_1000FEA3C((uint64_t)v9, isUniquelyReferenced_nonNull_native, a1, a2);
    off_100159898 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v9;
  }
}

unint64_t sub_10001023C(id a1, void *a2, double a3, CGFloat a4, double a5, double a6)
{
  double v16 = (char *)OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates;
  unint64_t v17 = *(void *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates);
  if (v17 >> 62) {
    goto LABEL_15;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      id v19 = (id)sub_10010A920();
    }
    else
    {
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_19;
      }
      id v19 = *(id *)(v17 + 32);
    }
    double v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t p_type = (uint64_t)&stru_10014DFF0.type;
    [v20 coordinate];
    uint64_t v8 = v21;
    double v9 = v22;

    unint64_t v17 = *(void *)&v16[isEscapingClosureAtFileLocation];
    if (!(v17 >> 62))
    {
      uint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v23) {
        goto LABEL_20;
      }
      goto LABEL_8;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10010AA80();
    if (!v23) {
      goto LABEL_20;
    }
LABEL_8:
    unint64_t result = v23 - 1;
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
LABEL_23:
      id v25 = (id)sub_10010A920();
      goto LABEL_13;
    }
    double v50 = a5;
    double v51 = a6;
    uint64_t v48 = v8;
    CGFloat v49 = a4;
    double v47 = v9;
    if ((v17 & 0xC000000000000001) != 0) {
      goto LABEL_23;
    }
    if ((result & 0x8000000000000000) != 0) {
      break;
    }
    if (result >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_25;
    }
    id v25 = *(id *)(v17 + 8 * result + 32);
LABEL_13:
    double v26 = v25;
    swift_bridgeObjectRelease();
    [v26 *(SEL *)(p_type + 3688)];
    uint64_t v28 = v27;
    uint64_t v30 = v29;

    id v31 = [a2 image];
    [v31 size];
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    uint64_t v8 = 0;
    v53.origin.CGFloat x = 0.0;
    v53.origin.y = 0.0;
    v53.size.width = v33;
    v53.size.height = v35;
    double v9 = 0.5;
    CGFloat v36 = CGRectGetWidth(v53) * 0.5;
    a4 = v36 + 0.0 - (0.0 - v36);
    v54.origin.y = 0.0;
    v54.origin.CGFloat x = 0.0 - v36;
    CGFloat x = v54.origin.x;
    v54.size.width = a4;
    v54.size.height = v35;
    CGFloat Height = CGRectGetHeight(v54);
    char v39 = sub_100056010(x, 0.0 - Height * 0.5, a4, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
    id v40 = [a2 image];
    [v40 size];
    a6 = v41;
    a5 = v42;

    id v43 = sub_1000100C4(a6, a5);
    unint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(unsigned char *)(v17 + 24) = v39;
    *(void *)(v17 + 32) = isEscapingClosureAtFileLocation;
    *(void *)(v17 + 40) = v48;
    *(double *)(v17 + 48) = v47;
    *(void *)(v17 + 56) = a1;
    *(double *)(v17 + 64) = a3;
    *(CGFloat *)(v17 + 72) = v49;
    *(double *)(v17 + 80) = v50;
    *(double *)(v17 + 88) = v51;
    *(void *)(v17 + 96) = v28;
    *(void *)(v17 + 104) = v30;
    uint64_t p_type = swift_allocObject();
    *(void *)(p_type + 16) = sub_1000106A0;
    *(void *)(p_type + 24) = v17;
    aBlock[4] = sub_1000106D4;
    aBlock[5] = p_type;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000E7A4;
    aBlock[3] = &unk_100140E60;
    double v16 = (char *)_Block_copy(aBlock);
    id v44 = a2;
    id v45 = (id)isEscapingClosureAtFileLocation;
    id v46 = a1;
    swift_retain();
    swift_release();
    a1 = [v43 imageWithActions:v16];

    _Block_release(v16);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (unint64_t)a1;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    if (!sub_10010AA80()) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100010658()
{
  return _swift_deallocObject(v0, 112, 7);
}

void sub_1000106A0(void *a1)
{
  sub_10000E414(a1, *(id *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 56), *(CLLocationDegrees *)(v1 + 40), *(CLLocationDegrees *)(v1 + 48), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(CLLocationDegrees *)(v1 + 96), *(CLLocationDegrees *)(v1 + 104));
}

uint64_t sub_1000106C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000106D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000106FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001070C()
{
  return swift_release();
}

id sub_100010714(char a1, char a2)
{
  int v3 = a1 & 1;
  if (qword_1001588C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_1001598A0;
  if (*((void *)off_1001598A0 + 2)
    && (unint64_t v5 = sub_1000FCD70(a2), (v6 & 1) != 0)
    && (uint64_t v7 = *(void *)(v4[7] + 8 * v5), *(void *)(v7 + 16))
    && (unint64_t v8 = sub_1000FCEA0(v3), (v9 & 1) != 0))
  {
    id v26 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    return v26;
  }
  else
  {
    uint64_t v11 = 0xD000000000000027;
    swift_endAccess();
    if (v3)
    {
      started = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
      uint64_t v13 = "WorkoutLocationAnnotationView.endingPin";
    }
    else
    {
      started = (objc_class *)type metadata accessor for WorkoutStartLocationAnnotation();
      uint64_t v11 = 0xD000000000000029;
      uint64_t v13 = "WorkoutLocationAnnotationView.startingPin";
    }
    unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    id v15 = [objc_allocWithZone(started) init];
    id v16 = objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView());
    id v17 = sub_10000EA24((uint64_t)v15, v11, v14, a2);
    swift_beginAccess();
    if (*((void *)off_1001598A0 + 2) && (sub_1000FCD70(a2), (v18 & 1) != 0))
    {
      swift_endAccess();
      swift_beginAccess();
      double v20 = sub_10000E978(v28, a2);
      if (*v19)
      {
        uint64_t v21 = v19;
        id v17 = v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = *v21;
        *uint64_t v21 = 0x8000000000000000;
        sub_1000FECB4((uint64_t)v17, v3, isUniquelyReferenced_nonNull_native);
        *uint64_t v21 = v27;
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v20)(v28, 0);
    }
    else
    {
      swift_endAccess();
      sub_100004BD4(&qword_1001599B8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100122230;
      *(unsigned char *)(inited + 32) = v3;
      *(void *)(inited + 40) = v17;
      unint64_t v24 = sub_10007D02C(inited);
      swift_setDeallocating();
      id v17 = v17;
      sub_100004BD4(&qword_1001599C0);
      swift_arrayDestroy();
      swift_beginAccess();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = off_1001598A0;
      off_1001598A0 = (_UNKNOWN *)0x8000000000000000;
      sub_1000FEB7C(v24, a2, v25);
      off_1001598A0 = v29;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    return v17;
  }
}

void sub_100010A20(void *a1, void *a2, CGContext *a3, double a4, double a5)
{
  CLLocationCoordinate2D v8 = MKCoordinateForMapPoint(*(MKMapPoint *)&a4);
  [a2 pointForCoordinate:v8.latitude, v8.longitude];
  double v10 = v9;
  double v12 = v11;
  [a1 bounds];
  double v13 = v10 - CGRectGetMidX(v21);
  [a1 centerOffset];
  CGFloat v15 = v13 + v14;
  [a1 bounds];
  double v16 = v12 - CGRectGetMidY(v22);
  [a1 centerOffset];
  CGFloat v18 = v16 + v17;
  CGContextSaveGState(a3);
  CGContextTranslateCTM(a3, v15, v18);
  [a1 prepareForSnapshotting];
  id v19 = [a1 layer];
  [v19 renderInContext:a3];

  CGContextRestoreGState(a3);
}

void sub_100010B30(CGContext *a1, CGContext *a2, void *a3, double a4, double a5, double a6, double a7, double a8)
{
  double v45 = a8;
  v46.origin.CGFloat x = a4;
  v46.size.width = a6;
  v46.size.height = a7;
  v46.origin.y = a5;
  uint64_t v50 = sub_100109460();
  uint64_t v11 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  double v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v44[1] = a2;
  unint64_t v14 = *(void *)((char *)a2 + OBJC_IVAR____TtC21JournalShareExtension27WorkoutGradientPathRenderer_routeCoordinates);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_10010AA80())
    {
LABEL_3:
      unint64_t v48 = v14 & 0xC000000000000001;
      if ((v14 & 0xC000000000000001) != 0)
      {
        id v16 = (id)sub_10010A920();
      }
      else
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v16 = *(id *)(v14 + 32);
      }
      id v17 = v16;
      swift_bridgeObjectRelease();
      id v18 = [v17 timestamp];
      sub_100109420();

      sub_100109270();
      double v20 = v19;
      CGRect v21 = *(void (**)(char *, uint64_t))(v11 + 8);
      v21(v13, v50);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_10010AA80();
        if (!v22)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v22) {
          goto LABEL_20;
        }
      }
      if (v22 >= 1)
      {
        uint64_t v23 = 0;
        double v47 = v45 * v45;
        do
        {
          double v49 = v20;
          if (v48) {
            id v26 = (id)sub_10010A920();
          }
          else {
            id v26 = *(id *)(v14 + 8 * v23 + 32);
          }
          uint64_t v27 = v26;
          [v17 coordinate];
          MKMapPoint v28 = MKMapPointForCoordinate(v52);
          [v27 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v53);
          CLLocationCoordinate2D v30 = MKCoordinateForMapPoint(v28);
          [a3 pointForCoordinate:v30.latitude, v30.longitude];
          double v32 = v31;
          double v34 = v33;
          CLLocationCoordinate2D v35 = MKCoordinateForMapPoint(v29);
          [a3 pointForCoordinate:v35.latitude, v35.longitude];
          double v37 = v36;
          double v39 = v38;
          if (v47 <= (v36 - v32) * (v36 - v32) + (v38 - v34) * (v38 - v34))
          {
            v54.origin.CGFloat x = fmin(v28.x, v29.x);
            v54.origin.y = fmin(v28.y, v29.y);
            v54.size.width = vabdd_f64(v28.x, v29.x);
            v54.size.height = vabdd_f64(v28.y, v29.y);
            if (MKMapRectIntersectsRect(v46, v54))
            {
              id v40 = [v27 timestamp];
              sub_100109420();

              sub_100109270();
              double v42 = v41;
              v21(v13, v50);
              LOBYTE(v40) = v42 - v49 > 5.0;
              [v27 speed:v42 - v49];
              sub_10000F020(v44[0], (char)v40, v32, v34, v37, v39, v43, v45);
            }

            id v17 = v27;
          }
          ++v23;
          id v24 = [v27 timestamp];
          sub_100109420();

          sub_100109270();
          double v20 = v25;

          v21(v13, v50);
        }
        while (v22 != v23);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_100010F9C(CGContext *a1, CGContext *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v42 = a9;
  double v38 = a7;
  v39.origin.CGFloat x = a3;
  v39.size.width = a5;
  v39.size.height = a6;
  v39.origin.y = a4;
  uint64_t v43 = sub_100109460();
  uint64_t v12 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v37[1] = a2;
  unint64_t v15 = *(void *)((char *)a2 + OBJC_IVAR____TtC21JournalShareExtension27WorkoutGradientPathRenderer_routeCoordinates);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_10010AA80())
    {
LABEL_3:
      unint64_t v41 = v15 & 0xC000000000000001;
      if ((v15 & 0xC000000000000001) != 0)
      {
        id v17 = (id)sub_10010A920();
      }
      else
      {
        if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v17 = *(id *)(v15 + 32);
      }
      id v18 = v17;
      swift_bridgeObjectRelease();
      id v19 = [v18 timestamp];
      sub_100109420();

      sub_100109270();
      double v21 = v20;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
      v22(v14, v43);
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_10010AA80();
        if (!v23)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_20;
        }
      }
      if (v23 >= 1)
      {
        uint64_t v24 = 0;
        double v40 = v38 * v38;
        do
        {
          if (v41) {
            id v27 = (id)sub_10010A920();
          }
          else {
            id v27 = *(id *)(v15 + 8 * v24 + 32);
          }
          MKMapPoint v28 = v27;
          [v18 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v45);
          [v28 coordinate];
          MKMapPoint v30 = MKMapPointForCoordinate(v46);
          double v31 = v29.y - v42;
          double v32 = v30.y - v42;
          if (v40 <= (v30.x - a8 - (v29.x - a8)) * (v30.x - a8 - (v29.x - a8)) + (v32 - v31) * (v32 - v31))
          {
            v47.origin.CGFloat x = fmin(v29.x, v30.x);
            v47.origin.y = fmin(v29.y, v30.y);
            v47.size.width = vabdd_f64(v29.x, v30.x);
            v47.size.height = vabdd_f64(v29.y, v30.y);
            if (MKMapRectIntersectsRect(v39, v47))
            {
              id v33 = [v28 timestamp];
              sub_100109420();

              sub_100109270();
              double v35 = v34;
              v22(v14, v43);
              [v28 speed:v35 - v21, 5.0];
              sub_10000F020(v37[0], v35 - v21 > 5.0, v29.x - a8, v31, v30.x - a8, v32, v36, v38);
            }

            id v18 = v28;
          }
          ++v24;
          id v25 = [v28 timestamp];
          sub_100109420();

          sub_100109270();
          double v21 = v26;

          v22(v14, v43);
        }
        while (v23 != v24);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100011520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100011548(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType()
{
  return &type metadata for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType;
}

unint64_t sub_100011568()
{
  unint64_t result = qword_1001599D0;
  if (!qword_1001599D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001599D0);
  }
  return result;
}

double *sub_1000115BC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000BDD68(0, v1, 0);
    uint64_t v3 = type metadata accessor for TranscriptViewModelSegment();
    uint64_t v4 = a1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    do
    {
      unsigned int v6 = (uint64_t *)(v4 + *(int *)(v3 + 20));
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      double v9 = _swiftEmptyArrayStorage[2];
      double v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (*(void *)&v9 >= *(void *)&v10 >> 1) {
        sub_1000BDD68(*(void *)&v10 > 1uLL, *(void *)&v9 + 1, 1);
      }
      v4 += v5;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v9 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * *(void *)&v9];
      *((void *)v11 + 4) = v8;
      *((void *)v11 + 5) = v7;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100011700(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_100159B30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_100012EB4();
  sub_10010AE60();
  LOBYTE(v12) = 0;
  sub_10010ABE0();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 16);
    HIBYTE(v11) = 1;
    sub_100004BD4(&qword_100159B00);
    sub_1000130CC(&qword_100159B38, (void (*)(void))sub_10001313C);
    sub_10010AC00();
    uint64_t v9 = _s10AudioAssetC9AudioDataVMa(0);
    LOBYTE(v12) = 2;
    sub_100109460();
    sub_100012E6C(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    sub_100004BD4(&qword_100159B18);
    sub_100013190(&qword_100159B48, &qword_100159B50);
    sub_10010AC00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000119C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004BD4(&qword_100159AF0);
  uint64_t v7 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s10AudioAssetC9AudioDataVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  double v20 = a1;
  sub_10000B718(a1, v13);
  sub_100012EB4();
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)v20);
  }
  uint64_t v14 = v7;
  LOBYTE(v22) = 0;
  uint64_t v15 = v19;
  *(void *)uint64_t v12 = sub_10010AB40();
  v12[8] = v16 & 1;
  sub_100004BD4(&qword_100159B00);
  char v21 = 1;
  sub_1000130CC(&qword_100159B08, (void (*)(void))sub_100012F50);
  sub_10010AB60();
  *((void *)v12 + 2) = v22;
  sub_100109460();
  LOBYTE(v22) = 2;
  sub_100012E6C(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_100012FA4((uint64_t)v6, (uint64_t)&v12[*(int *)(v10 + 24)]);
  sub_100004BD4(&qword_100159B18);
  char v21 = 3;
  sub_100013190(&qword_100159B20, &qword_100159B28);
  sub_10010AB60();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  *(void *)&v12[*(int *)(v10 + 28)] = v22;
  sub_10001300C((uint64_t)v12, v18);
  sub_10000B7B0((uint64_t)v20);
  return sub_100013070((uint64_t)v12);
}

unint64_t sub_100011DF8()
{
  unint64_t result = 0x6E6F697461727564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7469736E65746E69;
      break;
    case 2:
      unint64_t result = 0x6E6964726F636572;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100011EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000136E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100011EC8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100011ED4(uint64_t a1)
{
  unint64_t v2 = sub_100012EB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100011F10(uint64_t a1)
{
  unint64_t v2 = sub_100012EB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100011F4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000119C4(a1, a2);
}

uint64_t sub_100011F64(void *a1)
{
  return sub_100011700(a1);
}

uint64_t sub_100011F7C()
{
  uint64_t v1 = sub_100004BD4(&qword_100159B58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (double *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10AudioAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_9;
  }
  swift_retain();
  sub_100024FD8((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_9:
    sub_10000B9CC((uint64_t)v3, &qword_100159B58);
    return 0;
  }
  sub_1000133E0((uint64_t)v3, (uint64_t)v7);
  if ((_BYTE)v7[1]) {
    goto LABEL_10;
  }
  double v8 = *v7;
  if (qword_100158CA0 != -1)
  {
    double v14 = *v7;
    swift_once();
    double v8 = v14;
  }
  id v9 = [(id)qword_100160590 stringFromTimeInterval:v8 + 0.5];
  if (!v9)
  {
LABEL_10:
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100109D30();
  }
  sub_100013070((uint64_t)v7);
  return v11;
}

uint64_t sub_1000121A0()
{
  return swift_release();
}

id sub_1000121B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10AudioAssetCMa(0);
  [super dealloc];
}

uint64_t sub_1000121F8()
{
  return _s10AudioAssetCMa(0);
}

uint64_t _s10AudioAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_100159A00);
}

uint64_t sub_100012220()
{
  return swift_updateClassMetadata2();
}

void *sub_100012264(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v7 = *(int *)(a3 + 24);
    double v8 = (void *)(a1 + v7);
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100109460();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100012408(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000124D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10001262C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  double v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000127F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100012930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100012AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100012AF8);
}

uint64_t sub_100012AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100012BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100012BCC);
}

uint64_t sub_100012BCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    double v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10AudioAssetC9AudioDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_100159A68);
}

void sub_100012C98()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100012D38()
{
  if (!qword_10015A7C0)
  {
    sub_100109460();
    unint64_t v0 = sub_10010A700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015A7C0);
    }
  }
}

uint64_t sub_100012D90()
{
  return swift_retain();
}

uint64_t sub_100012DA0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10AudioAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100012DB8()
{
  return sub_100011F7C();
}

uint64_t sub_100012DDC()
{
  return sub_100012E6C(&qword_100159AA8, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa);
}

uint64_t sub_100012E24()
{
  return sub_100012E6C(&qword_100159AB0, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa);
}

uint64_t sub_100012E6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012EB4()
{
  unint64_t result = qword_100159AF8;
  if (!qword_100159AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159AF8);
  }
  return result;
}

uint64_t sub_100012F08(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100012F50()
{
  unint64_t result = qword_100159B10;
  if (!qword_100159B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159B10);
  }
  return result;
}

uint64_t sub_100012FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001300C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013070(uint64_t a1)
{
  uint64_t v2 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000130CC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(&qword_100159B00);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001313C()
{
  unint64_t result = qword_100159B40;
  if (!qword_100159B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159B40);
  }
  return result;
}

uint64_t sub_100013190(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(&qword_100159B18);
    sub_100012E6C(a2, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100013224()
{
  uint64_t v0 = sub_100004BD4(&qword_100159B58);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F2898((uint64_t)v2);
  uint64_t v3 = _s10AudioAssetC9AudioDataVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_10000B9CC((uint64_t)v2, &qword_100159B58);
    return 0;
  }
  else
  {
    uint64_t v4 = *(void *)&v2[*(int *)(v3 + 28)];
    swift_bridgeObjectRetain();
    sub_100013070((uint64_t)v2);
    if (v4)
    {
      uint64_t v5 = sub_1000115BC(v4);
      swift_bridgeObjectRelease();
      uint64_t v6 = *((void *)v5 + 2);
      if (v6)
      {
        swift_bridgeObjectRetain();
        uint64_t v4 = 0;
        uint64_t v7 = (void **)(v5 + 5);
        unint64_t v8 = 0xE000000000000000;
        do
        {
          uint64_t v9 = (uint64_t)*(v7 - 1);
          uint64_t v10 = *v7;
          uint64_t v12 = v4;
          unint64_t v13 = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14._countAndFlagsBits = v9;
          v14._object = v10;
          sub_100109E00(v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v12;
          unint64_t v8 = v13;
          v7 += 2;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return v4;
}

uint64_t sub_1000133E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s10AudioAssetC9AudioDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10AudioAssetC9AudioDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000135A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AudioAssetC9AudioDataV10CodingKeysOMa()
{
  return &_s10AudioAssetC9AudioDataV10CodingKeysON;
}

unint64_t sub_1000135DC()
{
  unint64_t result = qword_100159B60;
  if (!qword_100159B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159B60);
  }
  return result;
}

unint64_t sub_100013634()
{
  unint64_t result = qword_100159B68;
  if (!qword_100159B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159B68);
  }
  return result;
}

unint64_t sub_10001368C()
{
  unint64_t result = qword_100159B70;
  if (!qword_100159B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159B70);
  }
  return result;
}

uint64_t sub_1000136E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736E65746E69 && a2 == 0xEB00000000736569 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6964726F636572 && a2 == 0xED00006574614467 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010010D760)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_1000138D4()
{
  qword_10016DC88 = 0x4024000000000000;
}

uint64_t sub_1000138E4()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_100159B78);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_100159B78);
  if (qword_100158C18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E018);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

__n128 sub_1000139AC@<Q0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MosaicLayout.Attributes();
  [super copyWithZone:a1];
  sub_10010A7B0();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v6 = v11 + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii;
  __n128 result = *(__n128 *)&v2[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii];
  long long v8 = *(_OWORD *)&v2[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 16];
  long long v9 = *(_OWORD *)&v2[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 32];
  long long v10 = *(_OWORD *)&v2[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 48];
  *(__n128 *)uint64_t v6 = result;
  *(_OWORD *)(v6 + 16) = v8;
  *(_OWORD *)(v6 + 32) = v9;
  *(_OWORD *)(v6 + 48) = v10;
  a2[3] = ObjectType;
  *a2 = v11;
  return result;
}

uint64_t sub_100013AD0(uint64_t a1)
{
  swift_getObjectType();
  sub_100017760(a1, (uint64_t)&v20);
  uint64_t v3 = *((void *)&v21 + 1);
  if (*((void *)&v21 + 1))
  {
    unsigned int v4 = sub_10000B718(&v20, *((uint64_t *)&v21 + 1));
    uint64_t v5 = *(void *)(v3 - 8);
    __chkstk_darwin(v4);
    BOOL v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_10010AC90();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_10000B7B0((uint64_t)&v20);
  }
  else
  {
    uint64_t v8 = 0;
  }
  long long v9 = (objc_class *)type metadata accessor for MosaicLayout.Attributes();
  v24.receiver = v1;
  v24.super_class = v9;
  unsigned int v10 = [super isEqual:v8];
  swift_unknownObjectRelease();
  if (v10)
  {
    sub_100017760(a1, (uint64_t)&v20);
    if (*((void *)&v21 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v11 = *(void **)&v19[0];
        long long v12 = *(_OWORD *)(*(void *)&v19[0]
                        + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii
                        + 16);
        long long v13 = *(_OWORD *)(*(void *)&v19[0]
                        + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii
                        + 32);
        long long v14 = *(_OWORD *)(*(void *)&v19[0]
                        + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii
                        + 48);
        long long v20 = *(_OWORD *)(*(void *)&v19[0]
                        + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii);
        long long v21 = v12;
        long long v22 = v13;
        long long v23 = v14;
        long long v15 = *(_OWORD *)&v1[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 16];
        v19[0] = *(_OWORD *)&v1[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii];
        v19[1] = v15;
        long long v16 = *(_OWORD *)&v1[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 48];
        v19[2] = *(_OWORD *)&v1[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 32];
        v19[3] = v16;
        char v17 = CACornerRadiiEqualToRadii();

        if (v17) {
          return 1;
        }
      }
    }
    else
    {
      sub_100017700((uint64_t)&v20);
    }
  }
  return 0;
}

id sub_100013D9C()
{
  return sub_100017670(type metadata accessor for MosaicLayout.Attributes);
}

void sub_100013DDC()
{
  v486.receiver = v0;
  v486.super_class = (Class)type metadata accessor for MosaicLayout();
  [super prepareLayout];
  id v1 = [v0 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = &v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes];
    swift_beginAccess();
    *(void *)uint64_t v3 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    [v2 bounds];
    CGFloat Width = CGRectGetWidth(v487);
    uint64_t v5 = &v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_contentBounds];
    *(void *)uint64_t v5 = 0;
    *((void *)v5 + 1) = 0;
    *((CGFloat *)v5 + 2) = Width;
    *((void *)v5 + 3) = 0;
    if ((uint64_t)[v2 numberOfSections] >= 1)
    {
      uint64_t v6 = (uint64_t)[v2 numberOfItemsInSection:0];
      [v2 bounds];
      double v477 = v7;
      if (qword_100158988 != -1) {
        swift_once();
      }
      double v8 = (v477 - (*(double *)&qword_10016DD80 + *(double *)&qword_10016DD80)) * 0.5;
      if (qword_100158998 != -1) {
        swift_once();
      }
      double v9 = v8 + *(double *)&qword_10016DD90;
      if (v6 > 5) {
        double v9 = v9 + v9;
      }
      double v476 = v9;
      if (v6 == 1)
      {
        switch(v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_sizeType])
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_13;
          default:
            char v10 = sub_10010ACA0();
            swift_bridgeObjectRelease();
            if (v10) {
LABEL_13:
            }
              double v476 = v476 * 0.5;
            break;
        }
      }
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = 0;
      long long v12 = (uint64_t *)(v11 + 16);
      long long v13 = (double *)&v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius];
      double v474 = 4.0;
      double v475 = 4.0;
      double v473 = 4.0;
      if ((v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius + 16] & 1) == 0)
      {
        double v473 = *v13;
        double v474 = v13[1];
      }
      long long v14 = (double *)&v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius];
      double v472 = 4.0;
      if ((v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius + 16] & 1) == 0)
      {
        double v475 = v14[1];
        double v472 = *v14;
      }
      uint64_t v15 = OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_isExpanded;
      swift_beginAccess();
      while (*v12 < v6)
      {
        if (v6 != 1)
        {
          switch(v6)
          {
            case 2:
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              double v51 = v482;
              double v52 = v483;
              double v53 = v484;
              double v54 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              sub_100016714(1, 1, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v42 = v51;
              CGFloat v43 = v52;
              CGFloat v44 = v53;
              CGFloat v45 = v54;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_29;
            case 3:
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v55 = v482;
              CGFloat v56 = v483;
              CGFloat v57 = v484;
              CGFloat v58 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v59 = v478;
              CGFloat v60 = v479;
              CGFloat v61 = v480;
              CGFloat v62 = v481;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v55, v56, v57, v58);
              CGFloat v63 = v480;
              CGFloat v378 = v479;
              CGFloat v394 = v478;
              CGFloat v64 = v481;
              double v442 = v483;
              double v458 = v482;
              double v410 = v485;
              double v426 = v484;
              sub_100016714(1, 1, 0, 0, v11, (uint64_t)v0, v59, v60, v61, v62, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v394, v378, v63, v64, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v442;
              CGFloat v42 = v458;
              CGFloat v45 = v410;
              CGFloat v44 = v426;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 4:
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v65 = v482;
              CGFloat v66 = v483;
              CGFloat v67 = v484;
              CGFloat v68 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v69 = v478;
              CGFloat v70 = v479;
              double v71 = v480;
              CGFloat v72 = v481;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v65, v66, v67, v68);
              CGFloat v73 = v480;
              CGFloat v316 = v479;
              CGFloat v332 = v478;
              CGFloat v74 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v379 = v479;
              CGFloat v395 = v478;
              CGFloat v348 = v481;
              CGFloat v363 = v480;
              double v443 = v483;
              double v459 = v482;
              double v411 = v485;
              double v427 = v484;
              CGFloat v75 = v71;
              double v31 = v475;
              sub_100016714(1, 1, 0, 0, v11, (uint64_t)v0, v69, v70, v75, v72, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v332, v316, v73, v74, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v395, v379, v363, v348, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v443;
              CGFloat v42 = v459;
              CGFloat v45 = v411;
              CGFloat v44 = v427;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              goto LABEL_24;
            case 5:
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v333 = v478;
              CGFloat v301 = v479;
              CGFloat v273 = v480;
              CGFloat v247 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v76 = v482;
              CGFloat v77 = v483;
              CGFloat v78 = v484;
              CGFloat v79 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v80 = v478;
              CGFloat v81 = v479;
              CGFloat v82 = v480;
              CGFloat v83 = v481;
              CGFloat v317 = v482;
              CGFloat v286 = v483;
              CGFloat v260 = v484;
              CGFloat v234 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v76, v77, v78, v79);
              CGFloat v380 = v479;
              CGFloat v396 = v478;
              CGFloat v349 = v481;
              CGFloat v364 = v480;
              double v444 = v483;
              double v460 = v482;
              double v412 = v485;
              double v428 = v484;
              sub_100016714(1, 1, 0, 0, v11, (uint64_t)v0, v333, v301, v273, v247, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v80, v81, v82, v83, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v317, v286, v260, v234, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v396, v380, v364, v349, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v444;
              CGFloat v42 = v460;
              CGFloat v45 = v412;
              CGFloat v44 = v428;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 6:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              double v445 = v483;
              double v461 = v482;
              double v413 = v485;
              double v429 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v274 = v478;
              CGFloat v248 = v479;
              CGFloat v225 = v480;
              CGFloat v214 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v84 = v482;
              CGFloat v85 = v483;
              CGFloat v86 = v484;
              CGFloat v87 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v88 = v478;
              CGFloat v89 = v479;
              CGFloat v90 = v480;
              CGFloat v91 = v481;
              CGFloat v261 = v482;
              CGFloat v235 = v483;
              CGFloat v217 = v484;
              CGFloat v213 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v84, v85, v86, v87);
              CGFloat v318 = v479;
              CGFloat v334 = v478;
              CGFloat v287 = v481;
              CGFloat v302 = v480;
              CGFloat v381 = v483;
              CGFloat v397 = v482;
              CGFloat v350 = v485;
              CGFloat v365 = v484;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v274, v248, v225, v214, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v88, v89, v90, v91, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v261, v235, v217, v213, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v334, v318, v302, v287, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v397, v381, v365, v350, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v445;
              CGFloat v42 = v461;
              CGFloat v45 = v413;
              CGFloat v44 = v429;
              char v46 = 0;
              char v47 = 1;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 7:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v446 = v483;
              CGFloat v462 = v482;
              CGFloat v414 = v485;
              CGFloat v430 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v92 = v478;
              double v93 = v479;
              CGFloat v303 = v480;
              CGFloat v275 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v94 = v482;
              CGFloat v95 = v483;
              CGFloat v96 = v484;
              CGFloat v97 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v236 = v479;
              CGFloat v249 = v478;
              CGFloat v218 = v481;
              CGFloat v226 = v480;
              CGFloat v319 = v483;
              CGFloat v335 = v482;
              CGFloat v288 = v484;
              CGFloat v262 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v94, v95, v96, v97);
              CGFloat v382 = v479;
              CGFloat v398 = v478;
              CGFloat v98 = v482;
              CGFloat v351 = v481;
              CGFloat v366 = v480;
              CGFloat v99 = v483;
              CGFloat v100 = v484;
              CGFloat v101 = v485;
              double v103 = v473;
              double v102 = v474;
              CGFloat v104 = v92;
              CGFloat v105 = v93;
              double v30 = v472;
              double v31 = v475;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v104, v105, v303, v275, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v249, v236, v226, v218, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v335, v319, v288, v262, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v398, v382, v366, v351, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v98, v99, v100, v101, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v462, v446, v430, v414);
              double v106 = v482;
              double v107 = v483;
              double v108 = v484;
              double v109 = v485;
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              goto LABEL_40;
            case 8:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v447 = v483;
              CGFloat v463 = v482;
              CGFloat v415 = v485;
              CGFloat v431 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v110 = v478;
              CGFloat v289 = v479;
              CGFloat v263 = v480;
              CGFloat v237 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v111 = v482;
              CGFloat v112 = v483;
              CGFloat v113 = v484;
              CGFloat v114 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v115 = v480;
              CGFloat v215 = v479;
              CGFloat v219 = v478;
              CGFloat v116 = v481;
              CGFloat v304 = v482;
              CGFloat v276 = v483;
              CGFloat v250 = v484;
              CGFloat v227 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v111, v112, v113, v114);
              CGFloat v352 = v479;
              CGFloat v367 = v478;
              CGFloat v117 = v482;
              CGFloat v320 = v481;
              CGFloat v336 = v480;
              CGFloat v118 = v483;
              CGFloat v383 = v485;
              CGFloat v399 = v484;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v110, v289, v263, v237, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v219, v215, v115, v116, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v304, v276, v250, v227, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v367, v352, v336, v320, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v117, v118, v399, v383, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v463, v447, v431, v415);
              double v464 = v482;
              double v448 = v483;
              double v432 = v484;
              double v416 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v119 = v482;
              CGFloat v120 = v483;
              CGFloat v121 = v484;
              CGFloat v122 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v119, v120, v121, v122, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v448;
              CGFloat v42 = v464;
              CGFloat v45 = v416;
              CGFloat v44 = v432;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 9:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v449 = v483;
              CGFloat v465 = v482;
              CGFloat v417 = v485;
              CGFloat v433 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v123 = v478;
              double v124 = v479;
              CGFloat v305 = v480;
              CGFloat v277 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v125 = v482;
              CGFloat v126 = v483;
              CGFloat v127 = v484;
              CGFloat v128 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v238 = v479;
              CGFloat v251 = v478;
              CGFloat v220 = v481;
              CGFloat v228 = v480;
              CGFloat v321 = v483;
              CGFloat v337 = v482;
              CGFloat v290 = v484;
              CGFloat v264 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v125, v126, v127, v128);
              CGFloat v384 = v479;
              CGFloat v400 = v478;
              CGFloat v129 = v482;
              CGFloat v353 = v481;
              CGFloat v368 = v480;
              CGFloat v130 = v483;
              CGFloat v131 = v484;
              CGFloat v132 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v133 = v123;
              CGFloat v134 = v124;
              double v30 = v472;
              double v31 = v475;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v133, v134, v305, v277, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v251, v238, v228, v220, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v337, v321, v290, v264, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v400, v384, v368, v353, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v129, v130, v131, v132, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v465, v449, v433, v417);
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v135 = v478;
              CGFloat v136 = v479;
              CGFloat v137 = v480;
              CGFloat v138 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v338 = v478;
              CGFloat v322 = v479;
              CGFloat v306 = v480;
              CGFloat v291 = v481;
              CGFloat v393 = v482;
              CGFloat v377 = v483;
              CGFloat v362 = v484;
              CGFloat v347 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v135, v136, v137, v138, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v338, v322, v306, v291, v472, v475, 4.0, 4.0, v473, v474);
              goto LABEL_21;
            case 10:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v440 = v483;
              CGFloat v456 = v482;
              CGFloat v408 = v485;
              CGFloat v424 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v16 = v478;
              double v17 = v479;
              CGFloat v299 = v480;
              CGFloat v271 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v18 = v482;
              CGFloat v19 = v483;
              CGFloat v20 = v484;
              CGFloat v21 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v232 = v479;
              CGFloat v245 = v478;
              CGFloat v216 = v481;
              CGFloat v224 = v480;
              CGFloat v314 = v483;
              CGFloat v330 = v482;
              CGFloat v284 = v484;
              CGFloat v258 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v18, v19, v20, v21);
              CGFloat v376 = v479;
              CGFloat v392 = v478;
              CGFloat v22 = v482;
              CGFloat v346 = v481;
              CGFloat v361 = v480;
              CGFloat v23 = v483;
              CGFloat v24 = v484;
              CGFloat v25 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v28 = v16;
              CGFloat v29 = v17;
              double v30 = v472;
              double v31 = v475;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v28, v29, v299, v271, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v245, v232, v224, v216, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v330, v314, v284, v258, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v392, v376, v361, v346, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v22, v23, v24, v25, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v456, v440, v424, v408);
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v32 = v482;
              CGFloat v33 = v483;
              CGFloat v34 = v484;
              CGFloat v35 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v272 = v478;
              CGFloat v259 = v479;
              CGFloat v246 = v480;
              CGFloat v233 = v481;
              CGFloat v331 = v482;
              CGFloat v315 = v483;
              CGFloat v300 = v484;
              CGFloat v285 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v32, v33, v34, v35);
              CGFloat v36 = v478;
              CGFloat v37 = v479;
              CGFloat v38 = v480;
              CGFloat v39 = v481;
              CGFloat v393 = v482;
              CGFloat v377 = v483;
              CGFloat v362 = v484;
              CGFloat v347 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v272, v259, v246, v233, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v331, v315, v300, v285, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v36, v37, v38, v39, v472, v475, 4.0, 4.0, v473, v474);
LABEL_21:
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v393, v377, v362, v347, v30, v31, 4.0, 4.0, v27, v26);
              goto LABEL_22;
            case 11:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v450 = v483;
              CGFloat v466 = v482;
              CGFloat v418 = v485;
              CGFloat v434 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v139 = v478;
              double v140 = v479;
              CGFloat v307 = v480;
              CGFloat v278 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v141 = v482;
              CGFloat v142 = v483;
              CGFloat v143 = v484;
              CGFloat v144 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v239 = v479;
              CGFloat v252 = v478;
              CGFloat v221 = v481;
              CGFloat v229 = v480;
              CGFloat v323 = v483;
              CGFloat v339 = v482;
              CGFloat v292 = v484;
              CGFloat v265 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v141, v142, v143, v144);
              CGFloat v385 = v479;
              CGFloat v401 = v478;
              CGFloat v145 = v482;
              CGFloat v354 = v481;
              CGFloat v369 = v480;
              CGFloat v146 = v483;
              CGFloat v147 = v484;
              CGFloat v148 = v485;
              double v103 = v473;
              double v102 = v474;
              CGFloat v149 = v139;
              CGFloat v150 = v140;
              double v30 = v472;
              double v31 = v475;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v149, v150, v307, v278, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v252, v239, v229, v221, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v339, v323, v292, v265, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v401, v385, v369, v354, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v145, v146, v147, v148, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v466, v450, v434, v418);
              CGFloat v467 = v482;
              CGFloat v451 = v483;
              CGFloat v435 = v484;
              CGFloat v419 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v151 = v482;
              CGFloat v152 = v483;
              CGFloat v153 = v484;
              CGFloat v154 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v279 = v478;
              CGFloat v266 = v479;
              CGFloat v253 = v480;
              CGFloat v240 = v481;
              CGFloat v340 = v482;
              CGFloat v324 = v483;
              CGFloat v308 = v484;
              CGFloat v293 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v151, v152, v153, v154);
              CGFloat v155 = v478;
              CGFloat v156 = v479;
              CGFloat v157 = v480;
              CGFloat v158 = v481;
              CGFloat v402 = v482;
              CGFloat v386 = v483;
              CGFloat v370 = v484;
              CGFloat v355 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v279, v266, v253, v240, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v340, v324, v308, v293, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v155, v156, v157, v158, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v402, v386, v370, v355, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v467, v451, v435, v419);
              double v106 = v482;
              double v107 = v483;
              double v108 = v484;
              double v109 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
LABEL_40:
              double v211 = v103;
              double v212 = v102;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v42 = v106;
              CGFloat v43 = v107;
              CGFloat v44 = v108;
              CGFloat v45 = v109;
              goto LABEL_23;
            case 12:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v452 = v483;
              CGFloat v468 = v482;
              CGFloat v420 = v485;
              CGFloat v436 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v159 = v478;
              double v160 = v479;
              CGFloat v309 = v480;
              CGFloat v280 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v161 = v482;
              CGFloat v162 = v483;
              CGFloat v163 = v484;
              CGFloat v164 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v241 = v479;
              CGFloat v254 = v478;
              CGFloat v222 = v481;
              CGFloat v230 = v480;
              CGFloat v325 = v483;
              CGFloat v341 = v482;
              CGFloat v294 = v484;
              CGFloat v267 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v161, v162, v163, v164);
              CGFloat v387 = v479;
              CGFloat v403 = v478;
              CGFloat v165 = v482;
              CGFloat v356 = v481;
              CGFloat v371 = v480;
              CGFloat v166 = v483;
              CGFloat v167 = v484;
              CGFloat v168 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v169 = v159;
              CGFloat v170 = v160;
              double v30 = v472;
              double v31 = v475;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v169, v170, v309, v280, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v254, v241, v230, v222, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v341, v325, v294, v267, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v403, v387, v371, v356, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v165, v166, v167, v168, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v468, v452, v436, v420);
              CGFloat v469 = v482;
              CGFloat v453 = v483;
              CGFloat v437 = v484;
              CGFloat v421 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v171 = v482;
              CGFloat v172 = v483;
              CGFloat v173 = v484;
              CGFloat v174 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v281 = v478;
              CGFloat v268 = v479;
              CGFloat v255 = v480;
              CGFloat v242 = v481;
              CGFloat v342 = v482;
              CGFloat v326 = v483;
              CGFloat v310 = v484;
              CGFloat v295 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v171, v172, v173, v174);
              CGFloat v175 = v478;
              CGFloat v176 = v479;
              CGFloat v177 = v480;
              CGFloat v178 = v481;
              CGFloat v404 = v482;
              CGFloat v388 = v483;
              CGFloat v372 = v484;
              CGFloat v357 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v281, v268, v255, v242, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v342, v326, v310, v295, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v175, v176, v177, v178, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v404, v388, v372, v357, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v469, v453, v437, v421);
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v179 = v482;
              CGFloat v180 = v483;
              CGFloat v181 = v484;
              CGFloat v182 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v179, v180, v181, v182, v472, v475, 4.0, 4.0, v473, v474);
              goto LABEL_22;
            case 13:
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v454 = v483;
              CGFloat v470 = v482;
              CGFloat v422 = v485;
              CGFloat v438 = v484;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v183 = v478;
              double v184 = v479;
              CGFloat v311 = v480;
              CGFloat v282 = v481;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v185 = v482;
              CGFloat v186 = v483;
              CGFloat v187 = v484;
              CGFloat v188 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v243 = v479;
              CGFloat v256 = v478;
              CGFloat v223 = v481;
              CGFloat v231 = v480;
              CGFloat v327 = v483;
              CGFloat v343 = v482;
              CGFloat v296 = v484;
              CGFloat v269 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v185, v186, v187, v188);
              CGFloat v389 = v479;
              CGFloat v405 = v478;
              CGFloat v189 = v482;
              CGFloat v358 = v481;
              CGFloat v373 = v480;
              CGFloat v190 = v483;
              CGFloat v191 = v484;
              CGFloat v192 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v193 = v183;
              CGFloat v194 = v184;
              double v30 = v472;
              double v31 = v475;
              sub_100016714(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v193, v194, v311, v282, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v256, v243, v231, v223, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v343, v327, v296, v269, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 1, 0, v11, (uint64_t)v0, v405, v389, v373, v358, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v189, v190, v191, v192, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v470, v454, v438, v422);
              CGFloat v471 = v482;
              CGFloat v455 = v483;
              CGFloat v439 = v484;
              CGFloat v423 = v485;
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v195 = v482;
              CGFloat v196 = v483;
              CGFloat v197 = v484;
              CGFloat v198 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v283 = v478;
              CGFloat v270 = v479;
              CGFloat v257 = v480;
              CGFloat v244 = v481;
              CGFloat v344 = v482;
              CGFloat v328 = v483;
              CGFloat v312 = v484;
              CGFloat v297 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v195, v196, v197, v198);
              CGFloat v199 = v478;
              CGFloat v200 = v479;
              CGFloat v201 = v480;
              CGFloat v202 = v481;
              CGFloat v406 = v482;
              CGFloat v390 = v483;
              CGFloat v374 = v484;
              CGFloat v359 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v283, v270, v257, v244, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 1, 0, 0, v11, (uint64_t)v0, v344, v328, v312, v297, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v199, v200, v201, v202, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v406, v390, v374, v359, v472, v475, 4.0, 4.0, v473, v474);
              sub_10009DBAC(CGRectMinXEdge, (uint64_t)&v478, 0.5, v471, v455, v439, v423);
              CGFloat v203 = v482;
              CGFloat v204 = v483;
              CGFloat v205 = v484;
              CGFloat v206 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v345 = v478;
              CGFloat v329 = v479;
              CGFloat v313 = v480;
              CGFloat v298 = v481;
              CGFloat v407 = v482;
              CGFloat v391 = v483;
              CGFloat v375 = v484;
              CGFloat v360 = v485;
              sub_10009DBAC(CGRectMinYEdge, (uint64_t)&v478, 0.5, v203, v204, v205, v206);
              CGFloat v207 = v478;
              CGFloat v208 = v479;
              CGFloat v209 = v480;
              CGFloat v210 = v481;
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v345, v329, v313, v298, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v407, v391, v375, v360, v472, v475, 4.0, 4.0, v473, v474);
              sub_100016714(0, 0, 0, 0, v11, (uint64_t)v0, v207, v208, v209, v210, v472, v475, 4.0, 4.0, v473, v474);
LABEL_22:
              double v211 = v27;
              double v212 = v26;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v441;
              CGFloat v42 = v457;
              CGFloat v45 = v409;
              CGFloat v44 = v425;
LABEL_23:
              char v46 = 0;
              char v47 = 0;
              double v48 = v30;
LABEL_24:
              double v49 = v31;
LABEL_25:
              int v50 = 0;
              goto LABEL_26;
            default:
              goto LABEL_43;
          }
        }
        double v49 = v475;
        double v48 = v472;
        double v211 = v473;
        double v212 = v474;
        CGFloat v42 = 0.0;
        CGFloat v43 = 0.0;
        double v40 = 4.0;
        double v41 = 4.0;
        CGFloat v45 = v476;
        CGFloat v44 = v477;
        char v46 = 1;
        char v47 = 1;
LABEL_29:
        int v50 = 1;
LABEL_26:
        sub_100016714(v46, v47, v50, 1, v11, (uint64_t)v0, v42, v43, v44, v45, v48, v49, v40, v41, v211, v212);
      }
LABEL_43:
      swift_release();
    }
  }
}

uint64_t sub_100016714(char a1, char a2, int a3, int a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, double a11, double a12, double a13, double a14, double a15, double a16)
{
  int v56 = a4;
  int v57 = a3;
  double v54 = a11;
  double v55 = a12;
  uint64_t v28 = sub_100109630();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  double v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v32 = (void *)(a5 + 16);
  type metadata accessor for MosaicLayout.Attributes();
  sub_100004BD4(&qword_100159C28);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100122220;
  *(void *)(v33 + 32) = 0;
  swift_beginAccess();
  *(void *)(v33 + 40) = *(void *)(a5 + 16);
  sub_1001095F0();
  Class isa = sub_100109600().super.isa;
  CGFloat v35 = (char *)[(id)swift_getObjCClassFromMetadata() layoutAttributesForCellWithIndexPath:isa];

  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  CGFloat v58 = a7;
  CGFloat v59 = a8;
  CGFloat v60 = a9;
  [v35 setFrame:a7, a8, a9, a10];
  double v36 = v54;
  double v37 = v55;
  if (a2) {
    double v38 = v54;
  }
  else {
    double v38 = a13;
  }
  if (a2) {
    double v39 = v55;
  }
  else {
    double v39 = a14;
  }
  if ((v56 & 1) == 0)
  {
    double v36 = a13;
    double v37 = a14;
  }
  if (v57) {
    double v40 = a15;
  }
  else {
    double v40 = a13;
  }
  if (v57) {
    double v41 = a16;
  }
  else {
    double v41 = a14;
  }
  if (a1) {
    double v42 = a15;
  }
  else {
    double v42 = a13;
  }
  if (a1) {
    double v43 = a16;
  }
  else {
    double v43 = a14;
  }
  CGFloat v44 = (double *)&v35[OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii];
  *CGFloat v44 = v38;
  v44[1] = v39;
  v44[2] = v36;
  v44[3] = v37;
  v44[4] = v40;
  v44[5] = v41;
  v44[6] = v42;
  v44[7] = v43;
  CGFloat v45 = (void *)(a6 + OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes);
  swift_beginAccess();
  char v46 = v35;
  sub_100109F10();
  if (*(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_100109F70();
  }
  sub_100109FA0();
  sub_100109F50();
  swift_endAccess();
  char v47 = (CGFloat *)(a6 + OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_contentBounds);
  v62.origin.CGFloat x = v58;
  v62.origin.CGFloat y = v59;
  v62.size.CGFloat width = v60;
  v62.size.CGFloat height = a10;
  CGRect v61 = CGRectUnion(*(CGRect *)(a6 + OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_contentBounds), v62);
  CGFloat x = v61.origin.x;
  CGFloat y = v61.origin.y;
  CGFloat width = v61.size.width;
  CGFloat height = v61.size.height;

  *char v47 = x;
  v47[1] = y;
  v47[2] = width;
  v47[3] = height;
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*v32, 1)) {
    __break(1u);
  }
  else {
    ++*v32;
  }
  return result;
}

unint64_t sub_100016B24()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes);
  swift_beginAccess();
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (sub_100109620() >= v2) {
    return 0;
  }
  unint64_t result = sub_100109620();
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_10010A920();
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void **)(v4 + 8 * result + 32);
    id v6 = v5;
    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100016D30(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = (unint64_t *)(v4 + OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes);
  swift_beginAccess();
  Swift::Int v12 = *v11;
  if (!(*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v13 < 0) {
      break;
    }
LABEL_3:
    if (!v13) {
      return v42;
    }
    uint64_t v14 = sub_1000172D4(0, v13 - 1, a1, a2, a3, a4);
    if (v15) {
      return v42;
    }
    Swift::Int v6 = v14;
    if (v14 < 0) {
      goto LABEL_54;
    }
    unint64_t v4 = *v11;
    Swift::Int v12 = *v11 >> 62;
    if (v12) {
      goto LABEL_55;
    }
    Swift::Int v16 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16 < v6) {
      goto LABEL_57;
    }
LABEL_8:
    if (v6) {
      BOOL v17 = (v4 & 0xC000000000000001) == 0;
    }
    else {
      BOOL v17 = 1;
    }
    if (!v17)
    {
      sub_1000177C8();
      Swift::Int v18 = 0;
      do
      {
        Swift::Int v19 = v18 + 1;
        sub_10010A900(v18);
        Swift::Int v18 = v19;
      }
      while (v6 != v19);
    }
    if (v12)
    {
      swift_bridgeObjectRetain();
      sub_10010AA90();
      uint64_t v5 = v21;
      CGFloat v20 = v22;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease_n();
      Swift::Int v12 = v24 >> 1;
    }
    else
    {
      CGFloat v20 = 0;
      uint64_t v5 = (id *)((v4 & 0xFFFFFFFFFFFFFF8) + 32);
      Swift::Int v12 = v6;
    }
    if ((double **)v12 != v20)
    {
      uint64_t v25 = v12;
      while (!__OFSUB__(v25--, 1))
      {
        if (v25 < (uint64_t)v20 || v25 >= v12) {
          goto LABEL_50;
        }
        id v27 = v5[v25];
        [v27 frame];
        double MaxY = CGRectGetMaxY(v43);
        v44.origin.CGFloat x = a1;
        v44.origin.CGFloat y = a2;
        v44.size.CGFloat width = a3;
        v44.size.CGFloat height = a4;
        if (CGRectGetMinY(v44) > MaxY)
        {

          goto LABEL_28;
        }
        id v29 = v27;
        sub_100109F10();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100109F70();
        }
        sub_100109FA0();
        unint64_t v4 = (unint64_t)&v42;
        sub_100109F50();

        if ((double **)v25 == v20) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_28:
    uint64_t result = swift_unknownObjectRelease();
    unint64_t v4 = *v11;
    uint64_t v5 = (id *)(*v11 >> 62);
    if (v5) {
      goto LABEL_58;
    }
    uint64_t v11 = *(unint64_t **)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v11 < v6) {
      goto LABEL_62;
    }
    uint64_t result = swift_bridgeObjectRetain();
LABEL_31:
    if ((v4 & 0xC000000000000001) != 0 && (unint64_t *)v6 != v11)
    {
      if (v6 >= (uint64_t)v11) {
        goto LABEL_63;
      }
      sub_1000177C8();
      Swift::Int v31 = v6;
      do
      {
        Swift::Int v12 = v31 + 1;
        sub_10010A900(v31);
        Swift::Int v31 = v12;
      }
      while (v11 != (unint64_t *)v12);
    }
    if (!v5)
    {
      uint64_t v32 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
      if ((unint64_t *)v6 != v11) {
        goto LABEL_40;
      }
LABEL_47:
      swift_unknownObjectRelease();
      return v42;
    }
    swift_bridgeObjectRetain();
    sub_10010AA90();
    uint64_t v32 = v33;
    Swift::Int v6 = v34;
    unint64_t v36 = v35;
    swift_bridgeObjectRelease_n();
    uint64_t v11 = (unint64_t *)(v36 >> 1);
    if ((unint64_t *)v6 == v11) {
      goto LABEL_47;
    }
LABEL_40:
    while (v6 < (uint64_t)v11)
    {
      id v37 = *(id *)(v32 + 8 * v6);
      [v37 frame];
      double MinY = CGRectGetMinY(v45);
      v46.origin.CGFloat x = a1;
      v46.origin.CGFloat y = a2;
      v46.size.CGFloat width = a3;
      v46.size.CGFloat height = a4;
      if (MinY > CGRectGetMaxY(v46))
      {

        goto LABEL_47;
      }
      uint64_t v5 = (id *)v37;
      sub_100109F10();
      if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_100109F70();
      }
      ++v6;
      sub_100109FA0();
      unint64_t v4 = (unint64_t)&v42;
      sub_100109F50();

      if (v11 == (unint64_t *)v6) {
        goto LABEL_47;
      }
    }
LABEL_51:
    __break(1u);
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  swift_bridgeObjectRetain();
  uint64_t result = sub_10010AA80();
  if (result < 0) {
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_10010AA80();
  swift_bridgeObjectRelease();
  if (v39 >= v6) {
    goto LABEL_8;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  swift_bridgeObjectRetain_n();
  uint64_t v11 = (unint64_t *)sub_10010AA80();
  uint64_t result = swift_bridgeObjectRelease();
  if ((uint64_t)v11 < v6) {
    goto LABEL_65;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_10010AA80();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40 < v6) {
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_10010AA80();
  uint64_t result = swift_bridgeObjectRelease();
  if (v41 >= (uint64_t)v11) {
    goto LABEL_31;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1000172D4(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  if (a2 < a1) {
    return 0;
  }
  uint64_t v14 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    id v19 = (id)sub_10010A920();
    swift_bridgeObjectRelease();
LABEL_11:
    [v19 frame];
    v30.origin.CGFloat x = v11;
    v30.origin.CGFloat y = v10;
    v30.size.CGFloat width = v9;
    v30.size.CGFloat height = v8;
    if (CGRectIntersectsRect(v27, v30))
    {
    }
    else
    {
      [v19 frame];
      double MaxY = CGRectGetMaxY(v28);
      v29.origin.CGFloat x = v11;
      v29.origin.CGFloat y = v10;
      v29.size.CGFloat width = v9;
      v29.size.CGFloat height = v8;
      if (MaxY >= CGRectGetMinY(v29))
      {
        uint64_t v26 = v6 - 1;
        v21.n128_f64[0] = v11;
        v22.n128_f64[0] = v10;
        v23.n128_f64[0] = v9;
        v24.n128_f64[0] = v8;
        uint64_t v25 = a1;
      }
      else
      {
        uint64_t v25 = v6 + 1;
        v21.n128_f64[0] = v11;
        v22.n128_f64[0] = v10;
        v23.n128_f64[0] = v9;
        v24.n128_f64[0] = v8;
        uint64_t v26 = a2;
      }
      uint64_t v6 = sub_1000172D4(v25, v26, v21, v22, v23, v24);
    }
    return v6;
  }
  CGFloat v8 = a6;
  CGFloat v9 = a5;
  CGFloat v10 = a4;
  CGFloat v11 = a3;
  if (v14 >= 0) {
    uint64_t v15 = a1 + a2;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  uint64_t v6 = v15 >> 1;
  Swift::Int v16 = (uint64_t *)(v7 + OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v16;
  if ((*v16 & 0xC000000000000001) != 0) {
    goto LABEL_19;
  }
  if (v14 < -1)
  {
    __break(1u);
  }
  else if (v6 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v18 + 8 * v6 + 32);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

id sub_100017498()
{
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes] = _swiftEmptyArrayStorage;
  id v1 = &v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_contentBounds];
  _OWORD *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_sizeType] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  uint64_t v3 = &v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_isExpanded] = 0;
  v0[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_skipLayoutInvalidation] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MosaicLayout();
  return [super init];
}

id sub_100017568(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_cachedAttributes] = _swiftEmptyArrayStorage;
  uint64_t v3 = &v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_contentBounds];
  *uint64_t v3 = 0u;
  v3[1] = 0u;
  v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_sizeType] = 1;
  unint64_t v4 = &v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius];
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  objc_super v5 = &v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius];
  *(void *)objc_super v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_isExpanded] = 0;
  v1[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_skipLayoutInvalidation] = 0;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MosaicLayout();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id sub_100017658()
{
  return sub_100017670(type metadata accessor for MosaicLayout);
}

id sub_100017670(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for MosaicLayout()
{
  return self;
}

uint64_t type metadata accessor for MosaicLayout.Attributes()
{
  return self;
}

uint64_t sub_100017700(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015A8A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100017760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000177C8()
{
  unint64_t result = qword_100159C20;
  if (!qword_100159C20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100159C20);
  }
  return result;
}

uint64_t sub_100017808()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100017858()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CommonTransitions();
  return [super dealloc];
}

uint64_t type metadata accessor for CommonTransitions()
{
  return self;
}

uint64_t sub_1000178B0()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_100159C60);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_100159C60);
  if (qword_100158C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E0A8);
  objc_super v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100017978()
{
  uint64_t v0 = sub_1001094F0();
  sub_100007C54(v0, qword_100159C78);
  sub_100007CB8(v0, (uint64_t)qword_100159C78);
  return sub_1001094E0();
}

UIContentSizeCategory sub_1000179C4()
{
  qword_100159C90 = (uint64_t)UIContentSizeCategoryMedium;
  return UIContentSizeCategoryMedium;
}

uint64_t sub_1000179DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100109A70();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  CGRect v28 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100109AC0();
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  CGFloat v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v10 - 8);
  Swift::Int v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001091E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::Int v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019290(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_1000192F8((uint64_t)v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  uint64_t v26 = sub_10010A410();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100019AD4;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_100141008;
  id v19 = _Block_copy(aBlock);
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v24 = v7;
  uint64_t v25 = v2;
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  CGFloat v20 = v28;
  sub_10010A7D0();
  __n128 v21 = (void *)v26;
  sub_10010A420();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v24);
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100019BB4((uint64_t)v16, (uint64_t)sub_100019BAC, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

id sub_100017E48(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v13 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_labelStack;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v14 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_titleLabel;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_subtitleLabel;
  *(void *)&v11[v15] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v16 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkLabel;
  *(void *)&v11[v16] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView;
  uint64_t v18 = self;
  id v19 = [v18 effectWithStyle:6];
  id v20 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v19];

  *(void *)&v11[v17] = v20;
  uint64_t v21 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteLabel;
  *(void *)&v11[v21] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView] = 0;
  uint64_t v22 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView;
  id v23 = [v18 effectWithStyle:6];
  id v24 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v23];

  *(void *)&v11[v22] = v24;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_sizeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkAsset] = 0;
  uint64_t v25 = &v11[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkURL];
  uint64_t v26 = sub_1001091E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);

  v29.receiver = v11;
  v29.super_class = (Class)type metadata accessor for LinkAssetGridView();
  id v27 = [super initWithFrame:a1, a2, a3, a4];
  sub_1000180EC();

  return v27;
}

void sub_1000180EC()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView);
  [v0 addSubview:v1];
  uint64_t v21 = (char *)OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView;
  [v1 addSubview:*(void *)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView)];
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView) setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:*(void *)((char *)v0 + v2)];
  [v1 setAlpha:0.0];
  [v1 setContentMode:2];
  [*(id *)((char *)v0 + v2) setAlpha:0.0];
  [*(id *)((char *)v0 + v2) setContentMode:2];
  [*(id *)((char *)v0 + v2) setClipsToBounds:1];
  [*(id *)((char *)v0 + v2) setAccessibilityIgnoresInvertColors:1];
  [*(id *)((char *)v0 + v2) setIsAccessibilityElement:1];
  objc_super v3 = *(void **)((char *)v0 + v2);
  uint64_t v4 = qword_1001589F8;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  NSString v6 = sub_100109CF0();
  [v5 setAccessibilityLabel:v6];

  uint64_t v7 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_titleLabel);
  uint64_t v8 = self;
  id v9 = [v8 secondaryLabelColor];
  [v7 setTextColor:v9];

  [v7 setPreferredVibrancy:1];
  if (qword_100158960 != -1) {
    swift_once();
  }
  [v7 setFont:qword_10016DD58];
  [v7 setNumberOfLines:1];
  [v7 setLineBreakMode:0];
  [v7 setAdjustsFontForContentSizeCategory:1];
  if (qword_1001588E8 != -1) {
    swift_once();
  }
  [v7 setMaximumContentSizeCategory:qword_100159C90];
  id v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_subtitleLabel);
  id v11 = [v8 secondaryLabelColor];
  [v10 setTextColor:v11];

  [v10 setPreferredVibrancy:1];
  if (qword_100158950 != -1) {
    swift_once();
  }
  [v10 setFont:qword_10016DD48];
  [v10 setAdjustsFontForContentSizeCategory:1];
  uint64_t v12 = qword_100159C90;
  [v10 setMaximumContentSizeCategory:qword_100159C90];
  uint64_t v13 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_labelStack);
  [v13 setAxis:1];
  [v13 setAlignment:1];
  [v13 setDistribution:4];
  [v13 setSpacing:5.0];
  [v13 setMaximumContentSizeCategory:v12];
  uint64_t v14 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkLabel);
  id v15 = [v8 tertiaryLabelColor];
  [v14 setTextColor:v15];

  [v14 setPreferredVibrancy:1];
  [v14 setFont:qword_10016DD48];
  [v14 setAdjustsFontForContentSizeCategory:1];
  [v14 setMaximumContentSizeCategory:qword_100159C90];
  id v16 = [objc_allocWithZone((Class)UIStackView) init];
  [v16 setAxis:1];
  [v16 setDistribution:4];
  [v16 setAlignment:1];
  [v16 addArrangedSubview:v7];
  [v16 addArrangedSubview:v10];
  [v16 setMaximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  [v13 addArrangedSubview:v16];
  [v13 addArrangedSubview:v14];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v17 = [*(id *)&v21[(void)v0] contentView];
  [v17 addSubview:v13];

  uint64_t v18 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteLabel);
  id v19 = [v8 secondaryLabelColor];
  [v18 setTextColor:v19];

  [v18 setPreferredVibrancy:1];
  [v18 setTextAlignment:1];
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = *(void **)((char *)v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView);
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v20];
  id v22 = [v20 contentView];
  [v22 addSubview:v18];
}

id sub_100018768(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView;
  id v3 = objc_allocWithZone((Class)UIImageView);
  uint64_t v4 = v1;
  *(void *)&v1[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView;
  *(void *)&v4[v5] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v6 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_labelStack;
  *(void *)&v4[v6] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v7 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_titleLabel;
  *(void *)&v4[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_subtitleLabel;
  *(void *)&v4[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkLabel;
  *(void *)&v4[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView;
  id v11 = self;
  id v12 = [v11 effectWithStyle:6];
  id v13 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v12];

  *(void *)&v4[v10] = v13;
  uint64_t v14 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteLabel;
  *(void *)&v4[v14] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView] = 0;
  uint64_t v15 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView;
  id v16 = [v11 effectWithStyle:6];
  id v17 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v16];

  *(void *)&v4[v15] = v17;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_sizeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkAsset] = 0;
  uint64_t v18 = &v4[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkURL];
  uint64_t v19 = sub_1001091E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);

  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for LinkAssetGridView();
  [super initWithCoder:a1];

  return v20;
}

id sub_100018AC4(double a1, double a2, double a3, double a4)
{
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for LinkAssetGridView();
  [super setBounds:a1, a2, a3, a4];
  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView];
  [v4 bounds];
  [v9 setFrame:];
  [v9 setAutoresizingMask:18];
  uint64_t v10 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView;
  id v11 = *(id *)&v4[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView];
  [v4 bounds];
  [v11 setFrame:];

  return [*(id *)&v4[v10] setAutoresizingMask:18];
}

void sub_100018BC4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView];
  if (!v1)
  {
    id v3 = self;
    uint64_t v4 = &v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_sizeConstraints];
    swift_beginAccess();
    sub_10001CB98(0, (unint64_t *)&qword_100159E00);
    swift_bridgeObjectRetain();
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    *(void *)uint64_t v4 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    sub_10001BAA4();
    unsigned int v6 = v0[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType];
    if (v6 - 2 >= 3)
    {
      if (v6 >= 2)
      {
LABEL_12:
        swift_bridgeObjectRetain();
        Class v12 = sub_100109F20().super.isa;
        swift_bridgeObjectRelease();
        [v3 activateConstraints:v12];

        return;
      }
      [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView] setHidden:0];
      [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView] setHidden:1];
      id v7 = [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView] widthAnchor];
      id v8 = [v0 heightAnchor];
      id v9 = [v7 constraintEqualToAnchor:v8];
    }
    else
    {
      [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView] setHidden:1];
      [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView] setHidden:0];
      id v7 = [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView] trailingAnchor];
      id v8 = [v0 trailingAnchor];
      id v9 = [v7 constraintEqualToAnchor:v8];
    }
    id v10 = v9;

    swift_beginAccess();
    id v11 = v10;
    sub_100109F10();
    if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_100109F70();
    sub_100109FA0();
    sub_100109F50();
    swift_endAccess();

    goto LABEL_12;
  }
  unint64_t v2 = v0[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType];
  id v13 = v1;
  sub_10007DA44((void *)v2);
}

uint64_t sub_100018EF8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkURL;

  return sub_1000192F8(v1);
}

id sub_100018FE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkAssetGridView();
  return [super dealloc];
}

uint64_t sub_10001911C()
{
  return type metadata accessor for LinkAssetGridView();
}

uint64_t type metadata accessor for LinkAssetGridView()
{
  uint64_t result = qword_100159D28;
  if (!qword_100159D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100019170()
{
  sub_100019238();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100019238()
{
  if (!qword_100159658)
  {
    sub_1001091E0();
    unint64_t v0 = sub_10010A700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100159658);
    }
  }
}

uint64_t sub_100019290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_100159D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000192F8(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_100159D40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100019358()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100019390(uint64_t *a1)
{
  uint64_t v2 = sub_100109A70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  id v10 = (void *)sub_10010A410();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  sub_10000B800((uint64_t)a1, v12 + 24, &qword_100159DE8);
  aBlock[4] = sub_10001CA2C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_100141238;
  id v13 = _Block_copy(aBlock);
  sub_10001CA38(a1);
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100019690(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100109A70();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100109AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100158908 != -1) {
    swift_once();
  }
  v20[0] = qword_10016DCA8;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v3;
  v15[4] = a2;
  void v15[5] = a3;
  aBlock[4] = sub_10001C87C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_1001410D0;
  id v16 = _Block_copy(aBlock);
  id v17 = a1;
  id v18 = v3;
  swift_retain();
  sub_100109A90();
  v20[1] = _swiftEmptyArrayStorage;
  sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_100019974()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    type metadata accessor for SymbolAndTextFallbackView();
    uint64_t v2 = sub_10007D2C4(1802398060, 0xE400000000000000, 11565, 0xE200000000000000, 0, 0, 0, 0);
    uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView];
    *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView] = v2;
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView);
    id v7 = v6;

    if (v6)
    {
      swift_beginAccess();
      uint64_t v8 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
      if (v8)
      {
        uint64_t v9 = (void *)v8[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType];

        swift_beginAccess();
        id v10 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v10)
        {
          uint64_t v11 = v10;
          [v10 addSubview:v7];
        }
        sub_10009CD30(0.0);
        swift_bridgeObjectRelease();
        sub_10007DA44(v9);
      }
    }
  }
}

void sub_100019AD4()
{
}

uint64_t sub_100019ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100019AEC()
{
  return swift_release();
}

unint64_t sub_100019AF4()
{
  unint64_t result = qword_100159D60;
  if (!qword_100159D60)
  {
    sub_100012F08((uint64_t *)&unk_10015A5E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159D60);
  }
  return result;
}

void sub_100019B50(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_100019390(a1);
  }
}

void sub_100019BAC(uint64_t *a1)
{
}

void sub_100019BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)LPMetadataProvider) init];
  sub_1001090F0(v6);
  uint64_t v8 = v7;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a2;
  v10[4] = a3;
  v12[4] = sub_10001A164;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10009F890;
  v12[3] = &unk_100141058;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  [v5 startFetchingMetadataForURL:v8 completionHandler:v11];
  _Block_release(v11);
}

void sub_100019CFC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  if (a2 || !a1)
  {
    if (qword_1001588D8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100109960();
    sub_100007CB8(v13, (uint64_t)qword_100159C60);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v14 = sub_100109940();
    os_log_type_t v15 = sub_10010A2D0();
    if (os_log_type_enabled(v14, v15))
    {
      objc_super v23 = a4;
      uint64_t v16 = swift_slowAlloc();
      id v17 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315650;
      if (qword_1001588E0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1001094F0();
      sub_100007CB8(v18, (uint64_t)qword_100159C78);
      sub_10001C78C((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v19 = sub_10010AC60();
      sub_1000C50D4(v19, v20, &v24);
      sub_10010A730();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2112;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      sub_10010A730();
      *id v17 = Strong;
      swift_release_n();
      *(_WORD *)(v16 + 22) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
        sub_10010A730();
      }
      else
      {
        sub_10010A730();
        uint64_t v22 = 0;
      }
      v17[1] = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s %@ error while fetching the metadata: %@", (uint8_t *)v16, 0x20u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a4 = v23;
    }
    else
    {
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v24 = 1;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    a4(&v24);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      id v10 = (void *)v9;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = a4;
      *(void *)(v11 + 24) = a5;
      id v12 = a1;
      swift_retain();
      sub_100019690(v12, (uint64_t)sub_10001C80C, v11);

      swift_release();
    }
  }
}

void sub_10001A164(void *a1, uint64_t a2)
{
  sub_100019CFC(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32));
}

void sub_10001A170(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v79 = a4;
  CGFloat v78 = a3;
  v72[1] = a2;
  uint64_t v76 = sub_100109A70();
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v6 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100109AC0();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v8 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)LPLinkMetadataPresentationTransformer) init];
  id v77 = a1;
  [v9 setMetadata:a1];
  id v80 = v9;
  id v10 = [v9 presentationProperties];
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(void *)(v11 + 64) = 0;
  id v12 = 0;
  uint64_t v13 = 0;
  if ([v10 respondsToSelector:"captionBar"])
  {
    id v14 = [v10 captionBar];
    id v12 = v14;
    if (v14)
    {
      id v15 = [v14 top];

      id v16 = [v15 leading];
      id v17 = [v16 text];

      if (v17)
      {
        id v12 = (void *)sub_100109D30();
        uint64_t v13 = v18;

        goto LABEL_7;
      }
      id v12 = 0;
    }
    uint64_t v13 = 0;
  }
LABEL_7:
  *(void *)(v11 + 24) = v12;
  *(void *)(v11 + 32) = v13;
  swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  if (([v10 respondsToSelector:"captionBar"] & 1) == 0) {
    goto LABEL_13;
  }
  id v21 = [v10 captionBar];
  uint64_t v19 = v21;
  if (v21)
  {
    id v22 = [v21 bottom];

    id v23 = [v22 leading];
    id v24 = [v23 text];

    if (v24)
    {
      uint64_t v19 = (void *)sub_100109D30();
      uint64_t v20 = v25;

      goto LABEL_13;
    }
    uint64_t v19 = 0;
  }
  uint64_t v20 = 0;
LABEL_13:
  *(void *)(v11 + 40) = v19;
  *(void *)(v11 + 48) = v20;
  swift_bridgeObjectRelease();
  long long v26 = 0;
  uint64_t v27 = 0;
  if ([v10 respondsToSelector:"captionBar"])
  {
    id v28 = [v10 captionBar];
    long long v26 = v28;
    if (v28)
    {
      id v29 = [v28 belowBottom];

      id v30 = [v29 leading];
      id v31 = [v30 text];

      if (v31)
      {
        long long v26 = (void *)sub_100109D30();
        uint64_t v27 = v32;

        goto LABEL_19;
      }
      long long v26 = 0;
    }
    uint64_t v27 = 0;
  }
LABEL_19:
  *(void *)(v11 + 56) = v26;
  *(void *)(v11 + 64) = v27;
  swift_bridgeObjectRelease();
  if ([v10 respondsToSelector:"dominantImageBackgroundColor"])
  {
    id v33 = [v10 dominantImageBackgroundColor];
    if (v33)
    {
      Swift::Int v34 = v33;
      id v35 = [v33 CGColor];
      UISColorLuminance();
      double v37 = v36;

      sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
      double v38 = (void *)sub_10010A410();
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(unsigned char *)(v40 + 24) = v37 > 0.5;
      *(void *)&aBlock[2] = sub_10001C960;
      *((void *)&aBlock[2] + 1) = v40;
      *(void *)&aBlock[0] = _NSConcreteStackBlock;
      *((void *)&aBlock[0] + 1) = 1107296256;
      *(void *)&aBlock[1] = sub_10001DEE8;
      *((void *)&aBlock[1] + 1) = &unk_100141198;
      uint64_t v41 = _Block_copy(aBlock);
      swift_release();
      sub_100109A90();
      *(void *)&aBlock[0] = _swiftEmptyArrayStorage;
      sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004BD4((uint64_t *)&unk_10015A5E0);
      sub_100019AF4();
      uint64_t v42 = v76;
      sub_10010A7D0();
      sub_10010A420();
      _Block_release(v41);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v6, v42);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v8, v74);
    }
  }
  id v43 = [v77 imageProvider];
  if (v43)
  {
    CGRect v44 = v43;
    sub_10001CB98(0, (unint64_t *)&qword_100159D80);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    CGRect v46 = (void *)swift_allocObject();
    char v47 = v78;
    v46[2] = v11;
    v46[3] = v47;
    v46[4] = v79;
    *(void *)&aBlock[2] = sub_10001C91C;
    *((void *)&aBlock[2] + 1) = v46;
    *(void *)&aBlock[0] = _NSConcreteStackBlock;
    *((void *)&aBlock[0] + 1) = 1107296256;
    *(void *)&aBlock[1] = sub_10005B840;
    *((void *)&aBlock[1] + 1) = &unk_100141148;
    double v48 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v49 = [v44 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v48];
    swift_unknownObjectRelease();

    _Block_release(v48);
    swift_release();

    goto LABEL_45;
  }
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100121F30;
  uint64_t v51 = *(void *)(v11 + 24);
  uint64_t v52 = *(void *)(v11 + 32);
  *(void *)(inited + 32) = v51;
  *(void *)(inited + 40) = v52;
  uint64_t v54 = *(void *)(v11 + 40);
  uint64_t v53 = *(void *)(v11 + 48);
  *(void *)(inited + 48) = v54;
  *(void *)(inited + 56) = v53;
  id v56 = *(id *)(v11 + 56);
  uint64_t v55 = *(void *)(v11 + 64);
  *(void *)(inited + 64) = v56;
  *(void *)(inited + 72) = v55;
  if (v52)
  {
    uint64_t v76 = v54;
    id v77 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    int v57 = sub_10009E5BC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v59 = *((void *)v57 + 2);
    unint64_t v58 = *((void *)v57 + 3);
    if (v59 >= v58 >> 1) {
      int v57 = sub_10009E5BC((char *)(v58 > 1), v59 + 1, 1, v57);
    }
    *((void *)v57 + 2) = v59 + 1;
    CGFloat v60 = &v57[16 * v59];
    *((void *)v60 + 4) = v51;
    *((void *)v60 + 5) = v52;
    id v56 = v77;
    uint64_t v54 = v76;
    if (!v53) {
      goto LABEL_35;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v57 = (char *)_swiftEmptyArrayStorage;
  if (v53)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v57 = sub_10009E5BC(0, *((void *)v57 + 2) + 1, 1, v57);
    }
    unint64_t v62 = *((void *)v57 + 2);
    unint64_t v61 = *((void *)v57 + 3);
    if (v62 >= v61 >> 1) {
      int v57 = sub_10009E5BC((char *)(v61 > 1), v62 + 1, 1, v57);
    }
    *((void *)v57 + 2) = v62 + 1;
    CGFloat v63 = &v57[16 * v62];
    *((void *)v63 + 4) = v54;
    *((void *)v63 + 5) = v53;
  }
LABEL_35:
  if (v55)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v57 = sub_10009E5BC(0, *((void *)v57 + 2) + 1, 1, v57);
    }
    unint64_t v65 = *((void *)v57 + 2);
    unint64_t v64 = *((void *)v57 + 3);
    if (v65 >= v64 >> 1) {
      int v57 = sub_10009E5BC((char *)(v64 > 1), v65 + 1, 1, v57);
    }
    *((void *)v57 + 2) = v65 + 1;
    CGFloat v66 = &v57[16 * v65];
    *((void *)v66 + 4) = v56;
    *((void *)v66 + 5) = v55;
  }
  swift_release();
  uint64_t v67 = *((void *)v57 + 2);
  swift_bridgeObjectRelease();
  if (v67)
  {
    uint64_t v68 = *(void *)(v11 + 64);
    long long v69 = *(_OWORD *)(v11 + 32);
    aBlock[0] = *(_OWORD *)(v11 + 16);
    aBlock[1] = v69;
    aBlock[2] = *(_OWORD *)(v11 + 48);
    *(void *)&aBlock[3] = v68;
    CGFloat v70 = *(void **)&aBlock[0];
    swift_bridgeObjectRetain();
    id v71 = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78(aBlock);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&aBlock[0] = 1;
    memset((char *)aBlock + 8, 0, 48);
    v78(aBlock);
    swift_release();
  }
  swift_unknownObjectRelease();
  id v49 = v80;
LABEL_45:
}

void sub_10001ABD4(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurredEffectView);

    if (a2) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = 2;
    }
    [v5 setOverrideUserInterfaceStyle:v6];
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = *(id *)(v7 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteLabel);

    if (a2) {
      uint64_t v10 = 1;
    }
    else {
      uint64_t v10 = 2;
    }
    [v9 setOverrideUserInterfaceStyle:v10];
  }
}

uint64_t sub_10001ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100109A70();
  uint64_t v23 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100109AC0();
  uint64_t v13 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  uint64_t v21 = sub_10010A410();
  id v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  _OWORD aBlock[4] = sub_10001C9BC;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_1001411E8;
  id v17 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  uint64_t v18 = (void *)v21;
  sub_10010A420();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v22);
}

void sub_10001AFB8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  uint64_t v6 = (void **)(a3 + 16);
  if (!a1)
  {
    if (a2)
    {
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        swift_beginAccess();
        id v9 = *v6;
        *uint64_t v6 = v8;
        swift_unknownObjectRetain();
      }
    }
  }
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 64);
  long long v11 = *(_OWORD *)(a3 + 32);
  v13[0] = *(_OWORD *)(a3 + 16);
  v13[1] = v11;
  v13[2] = *(_OWORD *)(a3 + 48);
  uint64_t v14 = v10;
  swift_bridgeObjectRetain();
  id v12 = *(id *)&v13[0];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a4(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_10001B0D8(uint64_t a1, uint64_t a2)
{
  sub_10000B800(a2, (uint64_t)v35, &qword_100159DE8);
  uint64_t v3 = v36;
  uint64_t v4 = v37;
  uint64_t v6 = v38;
  uint64_t v5 = v39;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = *(void **)(Strong + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView);
    id v10 = v9;

    if (v9)
    {
      [v10 removeFromSuperview];
    }
  }
  sub_10000B800(a2, (uint64_t)v43, &qword_100159DE8);
  if (*(void *)&v43[0] != 1)
  {
    v45[0] = v43[0];
    v45[1] = v43[1];
    v45[2] = v43[2];
    uint64_t v46 = v44;
    sub_10000B800((uint64_t)v45, (uint64_t)v47, (uint64_t *)&unk_100159DF0);
    sub_10000B800((uint64_t)v47, (uint64_t)v48, (uint64_t *)&unk_100159DF0);
    if (v48[0])
    {
      swift_beginAccess();
      uint64_t v11 = swift_unknownObjectWeakLoadStrong();
      if (v11)
      {
        id v12 = (void *)v11;
        sub_10001B4BC(a2);
      }
LABEL_30:
      swift_beginAccess();
      uint64_t v33 = swift_unknownObjectWeakLoadStrong();
      if (v33)
      {
        Swift::Int v34 = (void *)v33;
        sub_100018BC4();
      }
      return;
    }
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    id v15 = *(id *)(v13 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView);

    [v15 setHidden:1];
  }
  swift_beginAccess();
  uint64_t v16 = swift_unknownObjectWeakLoadStrong();
  if (v16)
  {
    id v17 = (void *)v16;
    id v18 = *(id *)(v16 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView);

    [v18 setHidden:1];
  }
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (v19)
  {
    uint64_t v20 = (char *)v19;
    sub_10000B800(a2, (uint64_t)v41, &qword_100159DE8);
    uint64_t v21 = 0xE200000000000000;
    if (v41[0] == 1)
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v22 = 11565;
    }
    else
    {
      if (v42) {
        uint64_t v22 = v41[1];
      }
      else {
        uint64_t v22 = 11565;
      }
      if (v42) {
        uint64_t v21 = v42;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    type metadata accessor for SymbolAndTextFallbackView();
    uint64_t v23 = sub_10007D2C4(1802398060, 0xE400000000000000, v22, v21, v3, v4, v6, v5);
    id v24 = *(void **)&v20[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView];
    *(void *)&v20[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView] = v23;
  }
  swift_beginAccess();
  uint64_t v25 = swift_unknownObjectWeakLoadStrong();
  if (v25)
  {
    long long v26 = (void *)v25;
    uint64_t v27 = *(void **)(v25 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkFallbackView);
    id v28 = v27;

    if (v27)
    {
      swift_beginAccess();
      id v29 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
      if (v29)
      {
        id v30 = (void *)v29[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType];

        swift_beginAccess();
        id v31 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v31)
        {
          uint64_t v32 = v31;
          [v31 addSubview:v28];
        }
        sub_10009CD30(0.0);
        swift_bridgeObjectRelease();
        sub_10007DA44(v30);
      }
    }
  }
  sub_10000B800(a2, (uint64_t)v40, &qword_100159DE8);
  if (v40[0] != 1) {
    goto LABEL_30;
  }
}

void sub_10001B4BC(uint64_t a1)
{
  sub_10000B800(a1, (uint64_t)v30, &qword_100159DE8);
  uint64_t v3 = (void *)v30[0];
  uint64_t v4 = v30[4];
  uint64_t v6 = v30[5];
  uint64_t v5 = v30[6];
  uint64_t v27 = v30[3];
  id v28 = *(id *)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_titleLabel];
  sub_10000B800(a1, (uint64_t)v53, &qword_100159DE8);
  if (v53[0] == 1 || !v53[2]) {
    swift_bridgeObjectRelease();
  }
  else {
    swift_bridgeObjectRetain();
  }
  NSString v7 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v28 setText:v7];

  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_subtitleLabel];
  sub_10000B800(a1, (uint64_t)v48, &qword_100159DE8);
  if (*(void *)&v48[0] == 1
    || (long long v50 = v48[0],
        v51[0] = v48[1],
        v51[1] = v48[2],
        uint64_t v52 = v49,
        sub_10000B800((uint64_t)v51 + 8, (uint64_t)v54, &qword_100159738),
        sub_10000B800((uint64_t)v54, (uint64_t)v61, &qword_100159738),
        !v61[1]))
  {
    NSString v9 = 0;
  }
  else
  {
    NSString v9 = sub_100109CF0();
  }
  [v8 setText:v9];

  id v10 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkLabel];
  sub_10000B800(a1, (uint64_t)v42, &qword_100159DE8);
  if (*(void *)&v42[0] == 1
    || (long long v44 = v42[0],
        long long v45 = v42[1],
        long long v46 = v42[2],
        uint64_t v47 = v43,
        sub_10000B800((uint64_t)&v46 + 8, (uint64_t)v55, &qword_100159738),
        sub_10000B800((uint64_t)v55, (uint64_t)v60, &qword_100159738),
        !v60[1]))
  {
    NSString v11 = 0;
  }
  else
  {
    NSString v11 = sub_100109CF0();
  }
  [v10 setText:v11];

  id v12 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteLabel];
  sub_10000B800(a1, (uint64_t)v41, &qword_100159DE8);
  uint64_t v26 = v6;
  if (v41[0] == 1) {
    goto LABEL_14;
  }
  if (v41[6])
  {
    uint64_t v14 = v4;
  }
  else
  {
    if (!v4)
    {
LABEL_14:
      NSString v13 = 0;
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = v4;
  }
  swift_bridgeObjectRetain();
  NSString v13 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v4 = v14;
LABEL_20:
  [v12 setText:v13];

  sub_10000B800(a1, (uint64_t)v36, &qword_100159DE8);
  if (*(void *)&v36[0] != 1)
  {
    long long v38 = v36[0];
    v39[0] = v36[1];
    v39[1] = v36[2];
    uint64_t v40 = v37;
    sub_10000B800((uint64_t)v39 + 8, (uint64_t)v56, &qword_100159738);
    sub_10000B800((uint64_t)v56, (uint64_t)v58, &qword_100159738);
    if (v59)
    {
      if (v5) {
        goto LABEL_24;
      }
    }
  }
  [v28 setNumberOfLines:2];
  sub_10000B800(a1, (uint64_t)&v35, &qword_100159DE8);
  uint64_t v3 = v35;
  if (v35 != (void *)1)
  {
LABEL_24:
    if (v3)
    {
      id v15 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView];
      id v16 = v3;
      [v15 setImage:v16];
      [*(id *)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView] setImage:v16];
    }
  }
  sub_100004BD4(&qword_100159730);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100121F30;
  id v18 = (_OWORD *)(v17 + 32);
  sub_10000B800(a1, (uint64_t)v31, &qword_100159DE8);
  if (*(void *)&v31[0] == 1)
  {
    *(_OWORD *)(v17 + 48) = 0u;
    *(_OWORD *)(v17 + 64) = 0u;
    *id v18 = 0u;
  }
  else
  {
    v33[0] = v31[0];
    v33[1] = v31[1];
    v33[2] = v31[2];
    uint64_t v34 = v32;
    sub_10000B800((uint64_t)v33 + 8, (uint64_t)v57, &qword_100159738);
    sub_10000B800((uint64_t)v57, (uint64_t)v18, &qword_100159738);
    *(void *)(v17 + 48) = v27;
    *(void *)(v17 + 56) = v4;
    *(void *)(v17 + 64) = v26;
    *(void *)(v17 + 72) = v5;
    sub_10001CB6C((uint64_t)v57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_100042280(2570, 0xE200000000000000, v17);
  uint64_t v20 = v19;
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v20)
  {
    NSString v21 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  [v1 setAccessibilityValue:v21];

  uint64_t v22 = self;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v1;
  _OWORD aBlock[4] = sub_10001CB0C;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_100141288;
  id v24 = _Block_copy(aBlock);
  uint64_t v25 = v1;
  swift_release();
  [v22 animateWithDuration:65568 delay:v24 options:0 animations:0.1 completion:0.0];
  _Block_release(v24);
}

void sub_10001BAA4()
{
  uint64_t v1 = v0;
  sub_100004BD4(qword_100159E08);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100122610;
  uint64_t v3 = OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView;
  id v4 = [*(id *)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView] leadingAnchor];
  id v5 = [v1 leadingAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v2 + 32) = v6;
  id v7 = [*(id *)&v1[v3] topAnchor];
  id v8 = [v1 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v2 + 40) = v9;
  id v10 = [*(id *)&v1[v3] bottomAnchor];
  id v11 = [v1 bottomAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v2 + 48) = v12;
  NSString v13 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_labelStack];
  id v14 = [v13 leadingAnchor];
  id v15 = [*(id *)&v1[v3] trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:12.0];

  *(void *)(v2 + 56) = v16;
  id v17 = [v13 trailingAnchor];
  id v18 = [v1 trailingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:-12.0];

  *(void *)(v2 + 64) = v19;
  id v20 = [v13 centerYAnchor];
  id v21 = [v1 centerYAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v2 + 72) = v22;
  id v23 = [v13 topAnchor];
  id v24 = [v1 topAnchor];
  id v25 = [v23 constraintGreaterThanOrEqualToAnchor:v24 constant:8.0];

  *(void *)(v2 + 80) = v25;
  id v26 = [v13 bottomAnchor];
  id v27 = [v1 bottomAnchor];
  id v28 = [v26 constraintLessThanOrEqualToAnchor:v27 constant:8.0];

  *(void *)(v2 + 88) = v28;
  sub_100109F50();
  uint64_t v29 = v2;
  id v30 = (uint64_t *)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_sizeConstraints];
  swift_beginAccess();
  *id v30 = v29;
  swift_bridgeObjectRelease();
  sub_10001BE68();
}

void sub_10001BE68()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType;
  switch(v0[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType])
  {
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v3 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_4:
        id v4 = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
        id v5 = sub_100042EB8(UIFontWeightMedium);
      }
      else
      {
        if (qword_100158948 != -1) {
          swift_once();
        }
        id v5 = (id)qword_10016DD40;
      }
      id v6 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteLabel];
      [v6 setFont:v5];
      switch(v1[v2])
      {
        case 4:
          swift_bridgeObjectRelease();
          double v7 = 0.0;
          break;
        default:
          char v8 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          if (v8) {
            double v7 = 0.0;
          }
          else {
            double v7 = 4.0;
          }
          break;
      }
      id v9 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_footnoteBlurView];
      id v10 = [v9 layer];
      [v10 setCornerRadius:v7];

      id v11 = [v9 layer];
      [v11 setMasksToBounds:v7 != 0.0];

      switch(v1[v2])
      {
        case 4:
          swift_bridgeObjectRelease();
          double v12 = 0.0;
          break;
        default:
          char v13 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          if (v13) {
            double v12 = 0.0;
          }
          else {
            double v12 = 4.0;
          }
          break;
      }
      sub_100004BD4(qword_100159E08);
      unint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100122620;
      id v15 = [v9 leadingAnchor];
      id v16 = [v1 leadingAnchor];
      id v17 = [v15 constraintEqualToAnchor:v16 constant:v12];

      *(void *)(inited + 32) = v17;
      id v18 = [v9 trailingAnchor];
      id v19 = [v1 trailingAnchor];
      double v20 = -v12;
      id v21 = [v18 constraintEqualToAnchor:v19 constant:v20];

      *(void *)(inited + 40) = v21;
      id v22 = [v9 bottomAnchor];
      id v23 = [v1 bottomAnchor];
      id v24 = [v22 constraintEqualToAnchor:v23 constant:v20];

      *(void *)(inited + 48) = v24;
      id v25 = [v6 leadingAnchor];
      id v26 = [v9 leadingAnchor];
      id v27 = [v25 constraintEqualToAnchor:v26 constant:8.0];

      *(void *)(inited + 56) = v27;
      id v28 = [v6 trailingAnchor];
      id v29 = [v9 trailingAnchor];
      id v30 = [v28 constraintEqualToAnchor:v29 constant:-8.0];

      *(void *)(inited + 64) = v30;
      id v31 = [v6 topAnchor];
      id v32 = [v9 topAnchor];
      id v33 = [v31 constraintEqualToAnchor:v32 constant:8.0];

      *(void *)(inited + 72) = v33;
      id v34 = [v6 bottomAnchor];
      id v35 = [v9 bottomAnchor];
      id v36 = [v34 constraintEqualToAnchor:v35 constant:-8.0];

      *(void *)(inited + 80) = v36;
      sub_100109F50();
      swift_beginAccess();
      sub_10001C5C0(inited);
      swift_endAccess();

      return;
  }
}

uint64_t sub_10001C5C0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10010AA80();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10010A930();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1000C0DF0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_100109F50();
}

uint64_t sub_10001C78C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001C7D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001C80C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10001C834()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10001C87C()
{
  sub_10001A170(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10001C888()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10001C8DC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001C91C(uint64_t a1, uint64_t a2)
{
  return sub_10001ACC4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10001C928()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_10001C960()
{
  sub_10001ABD4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10001C96C()
{
  swift_errorRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10001C9BC()
{
  sub_10001AFB8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(_OWORD *))(v0 + 40));
}

uint64_t sub_10001C9CC()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10001CA2C()
{
  sub_10001B0D8(*(void *)(v0 + 16), v0 + 24);
}

uint64_t *sub_10001CA38(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10001CA70(uint64_t result)
{
  if (result != 1)
  {
    uint64_t v2 = (void *)result;
    swift_bridgeObjectRetain();
    id v3 = v2;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10001CAD4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10001CB0C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  [*(id *)(v1 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_blurImageView) setAlpha:1.0];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_assetImageView);

  return [v2 setAlpha:1.0];
}

uint64_t sub_10001CB6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001CB98(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t destroy for LinkAssetGridView.LinkItem(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LinkAssetGridView.LinkItem(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  a1[6] = *(void *)(a2 + 48);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LinkAssetGridView.LinkItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LinkAssetGridView.LinkItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LinkAssetGridView.LinkItem(uint64_t a1, void *a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkAssetGridView.LinkItem(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkAssetGridView.LinkItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkAssetGridView.LinkItem()
{
  return &type metadata for LinkAssetGridView.LinkItem;
}

uint64_t Node.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t Node.value.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*Node.value.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Node.next.getter()
{
  return swift_retain();
}

uint64_t Node.next.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 96));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*Node.next.modify())()
{
  return j__swift_endAccess;
}

uint64_t Node.previous.getter()
{
  return swift_weakLoadStrong();
}

uint64_t Node.previous.setter()
{
  return swift_release();
}

void (*Node.previous.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_10001D2E4;
}

void sub_10001D2E4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }

  free(v3);
}

uint64_t Node.isLinked.getter()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 96));
  swift_beginAccess();
  if (!*v1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    swift_release();
  }
  return 1;
}

uint64_t Node.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Node.init(value:)(a1);
  return v2;
}

uint64_t *Node.init(value:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(uint64_t *)((char *)v1 + *(void *)(*v1 + 96)) = 0;
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 88), a1);
  return v1;
}

uint64_t Node.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  swift_weakDestroy();
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(v0 + v1);
  *(void *)(v0 + v1) = 0;
  if (v2)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v3 = *(void *)(v2 + *(void *)(*(void *)v2 + 96));
      swift_retain();
      swift_release();
      uint64_t v2 = v3;
    }
    while (v3);
  }
  swift_release();
  return v0;
}

uint64_t Node.__deallocating_deinit()
{
  Node.deinit();

  return swift_deallocClassInstance();
}

uint64_t DoublyLinkedList.head.getter()
{
  return swift_retain();
}

uint64_t DoublyLinkedList.tail.getter()
{
  return swift_retain();
}

uint64_t DoublyLinkedList.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t DoublyLinkedList.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  return result;
}

uint64_t DoublyLinkedList.prepend(node:)(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 16))
  {
    swift_beginAccess();
    swift_weakAssign();
    uint64_t v4 = *v3;
    uint64_t v5 = (void *)(a1 + *(void *)(*(void *)a1 + 96));
    swift_beginAccess();
    *uint64_t v5 = v4;
    swift_retain();
    swift_release();
    swift_beginAccess();
    swift_weakAssign();
    *uint64_t v3 = a1;
  }
  else
  {
    *(void *)(v1 + 16) = a1;
    swift_beginAccess();
    *(void *)(v1 + 24) = a1;
    swift_retain();
  }
  swift_release();
  return swift_retain();
}

uint64_t DoublyLinkedList.append(node:)(uint64_t a1)
{
  swift_beginAccess();
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = (void *)(v1 + 24);
    swift_beginAccess();
    swift_beginAccess();
    swift_weakAssign();
    uint64_t v4 = *(void *)(v1 + 24);
    if (v4)
    {
      uint64_t v5 = (void *)(v4 + *(void *)(*(void *)v4 + 96));
      swift_beginAccess();
      *uint64_t v5 = a1;
      swift_retain();
      swift_release();
      swift_retain();
      swift_release();
    }
    *uint64_t v3 = a1;
  }
  else
  {
    *(void *)(v1 + 16) = a1;
    swift_beginAccess();
    *(void *)(v1 + 24) = a1;
    swift_retain();
  }
  swift_release();
  return swift_retain();
}

uint64_t DoublyLinkedList.remove(node:)(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v3 = *(uint64_t **)(v1 + 16);
  uint64_t v4 = *a1;
  if (v3) {
    BOOL v5 = v3 == a1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    id v10 = (uint64_t *)((char *)a1 + *(void *)(v4 + 96));
    swift_beginAccess();
    uint64_t v11 = *v10;
    if (v11)
    {
      *(void *)(v1 + 16) = v11;
      swift_retain_n();
      swift_release();
      swift_beginAccess();
      swift_weakAssign();
    }
    else
    {
      *(void *)(v1 + 16) = 0;
      swift_release();
      swift_beginAccess();
      *(void *)(v1 + 24) = 0;
    }
    goto LABEL_15;
  }
  uint64_t v6 = (uint64_t *)((char *)a1 + *(void *)(v4 + 96));
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*v6)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v9 = (void *)(Strong + *(void *)(*(void *)Strong + 96));
      swift_beginAccess();
      void *v9 = v7;
      swift_retain_n();
      swift_release();
      swift_release();
      if (!*v6)
      {
LABEL_15:
        swift_release();
        goto LABEL_16;
      }
    }
    else
    {
      swift_retain();
      if (!*v6) {
        goto LABEL_15;
      }
    }
    swift_weakLoadStrong();
    swift_retain();
    swift_release();
    swift_beginAccess();
    swift_weakAssign();
    swift_release();
    goto LABEL_15;
  }
  swift_beginAccess();
  uint64_t v12 = swift_weakLoadStrong();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = (void *)(v12 + *(void *)(*(void *)v12 + 96));
    swift_beginAccess();
    *uint64_t v14 = 0;
    swift_release();
    swift_beginAccess();
    *(void *)(v1 + 24) = v13;
    goto LABEL_15;
  }
LABEL_16:
  swift_beginAccess();
  swift_weakAssign();
  uint64_t v15 = (uint64_t *)((char *)a1 + *(void *)(*a1 + 96));
  swift_beginAccess();
  *uint64_t v15 = 0;
  return swift_release();
}

Swift::Void __swiftcall DoublyLinkedList.removeAll()()
{
  swift_beginAccess();
  while (*(void *)(v0 + 16))
  {
    uint64_t v1 = (uint64_t *)swift_retain();
    DoublyLinkedList.remove(node:)(v1);
    swift_release();
  }
}

uint64_t DoublyLinkedList.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t DoublyLinkedList.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10001DDC8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Node()
{
  return sub_100008550();
}

uint64_t sub_10001DE88()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DoublyLinkedList()
{
  return sub_100008550();
}

uint64_t sub_10001DEE8(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10001DF2C()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_100159F10);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_100159F10);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10001DFF4()
{
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView____lazy_storage___player;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView____lazy_storage___player);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView____lazy_storage___player);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)AVPlayer) init];
    BOOL v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10001E068(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_didThumbnailFinishLoading) = result;
  return result;
}

void sub_10001E078(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset;
  id v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset);
  if (a1)
  {
    if (!v4) {
      goto LABEL_9;
    }
    BOOL v5 = a1;
    _s10VideoAssetCMa(0);
    id v6 = v4;
    id v7 = v5;
    LOBYTE(v5) = sub_10010A6A0();

    if (v5) {
      return;
    }
    id v4 = *(void **)((char *)v2 + v3);
    if (!v4) {
      goto LABEL_9;
    }
  }
  else if (!v4)
  {
    return;
  }
  sub_100081540(*((unsigned char *)v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type));
  if (!v8)
  {
LABEL_9:
    NSString v9 = 0;
    goto LABEL_10;
  }
  NSString v9 = sub_100109CF0();
  swift_bridgeObjectRelease();
LABEL_10:
  [v2 setAccessibilityLabel:v9];

  sub_10001ED7C();
  id v10 = *(id *)((char *)v2 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
  if (v10) {
    id v10 = [v10 setAlpha:0.0];
  }
  (*(void (**)(id))((swift_isaMask & *v2) + 0x2C8))(v10);
  uint64_t v11 = *(void *)((char *)v2 + v3);
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (void (**)())(v11 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdate);
    uint64_t v14 = *(void *)(v11 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdate);
    *uint64_t v13 = sub_100024224;
    v13[1] = (void (*)())v12;
    sub_10002422C(v14);
    uint64_t v15 = *(void *)((char *)v2 + v3);
    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v17 = (void (**)())(v15 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdateMediaFile);
      uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdateMediaFile);
      *id v17 = sub_10002423C;
      v17[1] = (void (*)())v16;
      sub_10002422C(v18);
    }
  }
}

void sub_10001E28C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10001ED7C();
  }
}

void sub_10001E2E0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x2C8))();
  }
}

void *sub_10001E36C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  NSString v9 = &v4[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_timeObserver];
  *(_OWORD *)NSString v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v10 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView] = 0;
  uint64_t v13 = &v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded] = 0;
  v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset] = 0;
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_latestImageRequestID];
  uint64_t v15 = sub_1001094F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v16 = [super initWithFrame:a1, a2, a3, a4];
  id v17 = *(void (**)(void))((swift_isaMask & *v16) + 0x298);
  uint64_t v18 = v16;
  v17();

  return v18;
}

void *sub_10001E580(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_timeObserver];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v4 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView;
  id v5 = objc_allocWithZone((Class)UIImageView);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView] = 0;
  id v7 = &v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded] = 0;
  v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset] = 0;
  *(void *)&v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v8 = &v6[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_latestImageRequestID];
  uint64_t v9 = sub_1001094F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v10 = [super initWithCoder:a1];
  id v11 = v10;
  if (v10)
  {
    uint64_t v12 = *(void (**)(void))((swift_isaMask & *v10) + 0x298);
    uint64_t v13 = v10;
    v12();
  }
  return v11;
}

id sub_10001E778()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = sub_100109CF0();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];

  return [v0 setClipsToBounds:0];
}

uint64_t sub_10001E878()
{
  sub_100024244(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_delegate);
  sub_10000B9CC(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_timeObserver, &qword_10015A8A0);

  sub_10002422C(*(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction));
  return sub_10000B9CC(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_latestImageRequestID, (uint64_t *)&unk_10015A850);
}

id sub_10001E950()
{
  sub_10001EBB8();
  sub_1000239FC();
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  NSString v2 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView];
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView] = 0;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VideoAssetView();
  return [super dealloc];
}

uint64_t sub_10001EB64()
{
  return type metadata accessor for VideoAssetView();
}

uint64_t type metadata accessor for VideoAssetView()
{
  uint64_t result = qword_100159FB8;
  if (!qword_100159FB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001EBB8()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction);
  void *v1 = 0;
  v1[1] = 0;
  sub_10002422C(v2);
  uint64_t v3 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView;
  objc_super v4 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    id v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    [v8 pause];

    uint64_t v9 = *(void **)(v0 + v3);
    if (v9)
    {
      id v10 = v9;
      id v11 = [v10 layer];
      self;
      uint64_t v12 = (void *)swift_dynamicCastObjCClass();
      if (!v12) {

      }
      id v13 = [v12 player];
      if (v13)
      {
        [v13 replaceCurrentItemWithPlayerItem:0];
      }
      uint64_t v14 = *(void **)(v0 + v3);
      if (v14)
      {
        id v15 = v14;
        id v16 = [v15 layer];
        self;
        id v17 = (void *)swift_dynamicCastObjCClass();
        if (!v17) {

        }
        [v17 setPlayer:0];
      }
    }
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded) = 0;
}

uint64_t sub_10001ED7C()
{
  uint64_t v1 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  id v13 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v12);
  id v17 = (char *)&v32 - v16;
  uint64_t v18 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset);
  if (v18 && !*(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailOverride))
  {
    uint64_t v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v15;
    uint64_t v41 = result;
    id v38 = v18;
    uint64_t v42 = v17;
    sub_100109450();
    uint64_t v37 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType;
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v19 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if (v19)
        {
LABEL_9:
          if (qword_100158908 != -1) {
            swift_once();
          }
          objc_super v20 = &qword_10016DCA8;
        }
        else
        {
          if (qword_100158900 != -1) {
            swift_once();
          }
          objc_super v20 = &qword_10016DCA0;
        }
        id v36 = (id)*v20;
        sub_1001094E0();
        id v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v34(v3, v9, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
        id v35 = v9;
        uint64_t v21 = v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_latestImageRequestID;
        swift_beginAccess();
        sub_10002440C((uint64_t)v3, v21, (uint64_t *)&unk_10015A850);
        swift_endAccess();
        LODWORD(v37) = *(unsigned __int8 *)(v0 + v37);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v22 = v39;
        v34(v39, v9, v4);
        uint64_t v24 = v40;
        uint64_t v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v13, v42, v41);
        unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        unint64_t v26 = (v6 + *(unsigned __int8 *)(v24 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v33;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v25, v22, v4);
        (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v26, v13, v23);
        id v28 = self;
        swift_retain();
        id v29 = [v28 currentTraitCollection];
        id v30 = v36;
        id v31 = v38;
        sub_10003956C(v37, 0, 1, v36, v29, (uint64_t)sub_1000245C8, v27);

        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v23);
        uint64_t result = swift_release();
        break;
    }
  }
  return result;
}

uint64_t sub_10001F31C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = sub_100109A70();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  id v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109AC0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  id v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100109460();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  id v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001094F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  uint64_t v32 = sub_10010A410();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  char v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  _OWORD aBlock[4] = sub_100024800;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_100141728;
  objc_super v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  id v22 = v34;
  sub_100109A90();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  sub_10010A7D0();
  unint64_t v25 = (void *)v32;
  sub_10010A420();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_10001F7F0(uint64_t a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v68 = a4;
  CGFloat v72 = a3;
  uint64_t v5 = sub_100109460();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v64 = (char *)&v63 - v8;
  uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v66 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v71 = (char *)&v63 - v12;
  uint64_t v13 = sub_1001094F0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v67 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004BD4(&qword_10015A010);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  id v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v25 = (char *)&v63 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v63 - v26;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      uint64_t v29 = a2;
      uint64_t v30 = Strong;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v72, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      CGFloat v72 = v30;
      uint64_t v31 = (uint64_t)&v30[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_latestImageRequestID];
      swift_beginAccess();
      sub_1000248D8(v31, (uint64_t)v25, (uint64_t *)&unk_10015A850);
      uint64_t v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
      sub_1000248D8((uint64_t)v27, (uint64_t)v18, (uint64_t *)&unk_10015A850);
      sub_1000248D8((uint64_t)v25, v32, (uint64_t *)&unk_10015A850);
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      if (v33((uint64_t)v18, 1, v13) == 1)
      {
        id v34 = a2;
        id v35 = a2;
        sub_10000B9CC((uint64_t)v25, (uint64_t *)&unk_10015A850);
        sub_10000B9CC((uint64_t)v27, (uint64_t *)&unk_10015A850);
        if (v33(v32, 1, v13) == 1)
        {
          sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015A850);
          goto LABEL_18;
        }
      }
      else
      {
        sub_1000248D8((uint64_t)v18, (uint64_t)v22, (uint64_t *)&unk_10015A850);
        if (v33(v32, 1, v13) != 1)
        {
          long long v45 = v67;
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v67, v32, v13);
          sub_10001C78C(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
          id v46 = v29;
          char v47 = sub_100109C70();
          double v48 = *(void (**)(char *, uint64_t))(v14 + 8);
          v48(v45, v13);
          sub_10000B9CC((uint64_t)v25, (uint64_t *)&unk_10015A850);
          sub_10000B9CC((uint64_t)v27, (uint64_t *)&unk_10015A850);
          v48(v22, v13);
          id v34 = v29;
          sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015A850);
          if (v47)
          {
LABEL_18:
            uint64_t v49 = v72;
            [*(id *)&v72[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView] setImage:v34];
            char v50 = 1;
            (*(void (**)(uint64_t))((swift_isaMask & *(void *)v49) + 0x258))(1);
            swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v52 = v70;
            uint64_t v51 = (uint64_t)v71;
            uint64_t v53 = v69;
            switch(v49[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType])
            {
              case 5:
                break;
              default:
                char v50 = sub_10010ACA0();
                break;
            }
            swift_retain_n();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v51, v68, v52);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
            if ((v50 & 1) == 0)
            {
              uint64_t v54 = v66;
              sub_1000248D8(v51, v66, (uint64_t *)&unk_10015CDE0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v52) == 1)
              {
                sub_10000B9CC(v54, (uint64_t *)&unk_10015CDE0);
LABEL_27:
                sub_100109A60();
                sub_10001CB98(0, (unint64_t *)&qword_10015A018);
                sub_10010A660();
                swift_release();
                goto LABEL_28;
              }
              uint64_t v55 = v64;
              (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v64, v54, v52);
              id v56 = v65;
              sub_100109430();
              sub_1001093B0();
              double v58 = v57;
              uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
              v59(v56, v52);
              v59(v55, v52);
              if (v58 >= 0.1) {
                goto LABEL_27;
              }
            }
            swift_beginAccess();
            uint64_t v60 = swift_unknownObjectWeakLoadStrong();
            if (v60)
            {
              unint64_t v61 = (void *)v60;
              id v62 = *(id *)(v60 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView);

              [v62 setAlpha:1.0];
              swift_release_n();

LABEL_29:
              sub_10000B9CC(v51, (uint64_t *)&unk_10015CDE0);
              swift_release();
              return;
            }
LABEL_28:
            swift_release();
            swift_release();

            goto LABEL_29;
          }
LABEL_19:

          return;
        }
        id v44 = a2;
        sub_10000B9CC((uint64_t)v25, (uint64_t *)&unk_10015A850);
        sub_10000B9CC((uint64_t)v27, (uint64_t *)&unk_10015A850);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
        id v34 = a2;
      }
      sub_10000B9CC((uint64_t)v18, &qword_10015A010);
      goto LABEL_19;
    }
  }
  swift_beginAccess();
  uint64_t v36 = swift_unknownObjectWeakLoadStrong();
  if (v36)
  {
    uint64_t v37 = (void *)v36;
    int v38 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v36 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v38 == 1
      || (uint64_t v39 = v36 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_loadingDelegate,
          !swift_unknownObjectWeakLoadStrong()))
    {
    }
    else
    {
      uint64_t v40 = *(void *)(v39 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v40 + 8))(v37, ObjectType, v40);

      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v42)
  {
    uint64_t v43 = v42;
    (*(void (**)(void))((swift_isaMask & *v42) + 0x258))(0);
  }
}

void sub_10002022C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView);

    [v2 setAlpha:1.0];
  }
}

uint64_t sub_1000202A8()
{
  uint64_t v1 = sub_100109A70();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109AC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded) = 1;
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset);
    if (v10)
    {
      uint64_t v18 = v2;
      uint64_t v11 = qword_100158900;
      id v12 = v10;
      if (v11 != -1) {
        swift_once();
      }
      v17[1] = qword_10016DCA0;
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = v12;
      _OWORD aBlock[4] = sub_100024404;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001DEE8;
      aBlock[3] = &unk_1001416B0;
      uint64_t v15 = _Block_copy(aBlock);
      id v16 = v12;
      swift_retain();
      sub_100109A90();
      uint64_t v19 = _swiftEmptyArrayStorage;
      sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004BD4((uint64_t *)&unk_10015A5E0);
      sub_100019AF4();
      sub_10010A7D0();
      sub_10010A420();
      _Block_release(v15);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000205E8(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100109A70();
  uint64_t v65 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109AC0();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001091E0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (unsigned char *)result;
    uint64_t v62 = v3;
    sub_100021028(0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_100159D40);
      char v18 = v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading];
      v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading] = 1;
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = &v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_loadingDelegate];
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v20 = *((void *)v19 + 1);
          swift_getObjectType();
          uint64_t v21 = *(void (**)(void))(v20 + 8);
          id v22 = v17;
          v21();

          swift_unknownObjectRelease();
        }
      }
      sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
      uint64_t v23 = (void *)sub_10010A410();
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v71 = sub_100024044;
      CGFloat v72 = (void *)v24;
      aBlock = _NSConcreteStackBlock;
      uint64_t v68 = 1107296256;
      uint64_t v69 = sub_10001DEE8;
      uint64_t v70 = &unk_100141548;
      unint64_t v25 = _Block_copy(&aBlock);
      swift_release();
      sub_100109A90();
      aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004BD4((uint64_t *)&unk_10015A5E0);
      sub_100019AF4();
      uint64_t v26 = v62;
      sub_10010A7D0();
      sub_10010A420();
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v8, v64);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      if (sub_10007AB40(v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType]))
      {
        id v27 = [self sharedInstance];
        aBlock = 0;
        unsigned int v28 = [v27 setCategory:AVAudioSessionCategoryPlayback withOptions:1 error:&aBlock];

        if (v28)
        {
          uint64_t v29 = aBlock;
        }
        else
        {
          id v35 = aBlock;
          uint64_t v36 = (void *)sub_100108FC0();

          swift_willThrow();
          if (qword_1001588F0 != -1) {
            swift_once();
          }
          uint64_t v37 = sub_100109960();
          sub_100007CB8(v37, (uint64_t)qword_100159F10);
          swift_errorRetain();
          swift_errorRetain();
          int v38 = sub_100109940();
          os_log_type_t v39 = sub_10010A2D0();
          if (os_log_type_enabled(v38, v39))
          {
            os_log_t v60 = v38;
            uint64_t v40 = (uint8_t *)swift_slowAlloc();
            uint64_t v59 = (void **)swift_slowAlloc();
            aBlock = v59;
            id v61 = v36;
            double v58 = v40;
            *(_DWORD *)uint64_t v40 = 136315138;
            double v57 = v40 + 4;
            swift_getErrorValue();
            uint64_t v41 = sub_10010AD50();
            uint64_t v66 = sub_1000C50D4(v41, v42, (uint64_t *)&aBlock);
            sub_10010A730();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            os_log_t v43 = v60;
            _os_log_impl((void *)&_mh_execute_header, v60, v39, "Failed to set video player audio: %s", v58, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
        }
        id v44 = objc_allocWithZone((Class)AVURLAsset);
        sub_1001090F0(v45);
        char v47 = v46;
        id v48 = [v44 initWithURL:v46 options:0];
        id v61 = v48;

        id v49 = [objc_allocWithZone((Class)AVPlayerItem) initWithAsset:v48];
        id v50 = sub_10001DFF4();
        [v50 replaceCurrentItemWithPlayerItem:v49];

        sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
        os_log_t v60 = (os_log_t)sub_10010A410();
        uint64_t v51 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v52 = (void *)swift_allocObject();
        v52[2] = v51;
        v52[3] = a2;
        v52[4] = v49;
        id v71 = sub_1000240AC;
        CGFloat v72 = v52;
        aBlock = _NSConcreteStackBlock;
        uint64_t v68 = 1107296256;
        uint64_t v69 = sub_10001DEE8;
        uint64_t v70 = &unk_100141598;
        uint64_t v53 = _Block_copy(&aBlock);
        id v54 = a2;
        uint64_t v59 = (void **)v49;
        swift_release();
        sub_100109A90();
        aBlock = (void **)_swiftEmptyArrayStorage;
        sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100004BD4((uint64_t *)&unk_10015A5E0);
        sub_100019AF4();
        uint64_t v55 = v62;
        sub_10010A7D0();
        os_log_t v56 = v60;
        sub_10010A420();
        _Block_release(v53);

        (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v55);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v64);
      }
      else
      {
        int v30 = v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading];
        v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading] = 1;
        if (v30 == 1
          || (uint64_t v31 = &v17[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_loadingDelegate],
              !swift_unknownObjectWeakLoadStrong()))
        {
        }
        else
        {
          uint64_t v32 = *((void *)v31 + 1);
          swift_getObjectType();
          uint64_t v33 = *(void (**)(void))(v32 + 8);
          id v34 = v17;
          v33();

          swift_unknownObjectRelease();
        }
      }
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return result;
}

uint64_t sub_100021028@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v164 = a2;
  uint64_t v163 = a1;
  double v139 = a3;
  uint64_t v4 = sub_100004BD4(&qword_10015A000);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  CGFloat v144 = (void (**)(char *, char *, uint64_t))((char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  CGFloat v141 = (char *)&v124 - v7;
  uint64_t v160 = sub_100109880();
  uint64_t v143 = *(void *)(v160 - 8);
  uint64_t v8 = __chkstk_darwin(v160);
  CGFloat v134 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  CGFloat v133 = (char *)&v124 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  double v140 = (char *)&v124 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  CGFloat v151 = (char *)&v124 - v15;
  __chkstk_darwin(v14);
  CGFloat v131 = (char *)&v124 - v16;
  uint64_t v161 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v17 = __chkstk_darwin(v161);
  CGFloat v157 = (void (**)(char *, uint64_t, uint64_t))((char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  CGFloat v162 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v124 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t)&v124 - v22;
  __chkstk_darwin(v21);
  uint64_t v159 = (uint64_t)&v124 - v24;
  uint64_t v25 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v142 = (uint64_t)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  CGFloat v155 = (char *)&v124 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v136 = (uint64_t)&v124 - v31;
  __chkstk_darwin(v30);
  CGFloat v148 = (char *)&v124 - v32;
  uint64_t v168 = sub_1001091E0();
  uint64_t v146 = *(void *)(v168 - 8);
  uint64_t v33 = __chkstk_darwin(v168);
  CGFloat v132 = (char *)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  CGFloat v154 = (char *)&v124 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  CGFloat v130 = (char *)&v124 - v38;
  __chkstk_darwin(v37);
  CGFloat v149 = (char *)&v124 - v39;
  uint64_t v169 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v40 = __chkstk_darwin(v169);
  CGFloat v156 = (id *)((char *)&v124 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (uint64_t)&v124 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  CGFloat v152 = (id *)((char *)&v124 - v46);
  __chkstk_darwin(v45);
  id v48 = (void **)((char *)&v124 - v47);
  uint64_t v135 = v3;
  unint64_t v49 = *(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments);
  if (v49 >> 62) {
    goto LABEL_86;
  }
  uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    uint64_t v145 = v23;
    CGFloat v166 = v48;
    if (!v50)
    {
LABEL_39:
      swift_bridgeObjectRelease_n();
      CGFloat v84 = (unint64_t *)(v135 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments);
      swift_beginAccess();
      unint64_t v85 = *v84;
      if (*v84 >> 62)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v167 = sub_10010AA80();
        if (v167) {
          goto LABEL_41;
        }
      }
      else
      {
        unint64_t v167 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v167)
        {
LABEL_41:
          unint64_t v49 = v85 & 0xC000000000000001;
          CGFloat v162 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
          CGFloat v156 = (id *)(v146 + 56);
          CGFloat v157 = (void (**)(char *, uint64_t, uint64_t))(v146 + 32);
          CGFloat v155 = (char *)(v143 + 48);
          CGFloat v150 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 32);
          CGFloat v86 = (char *)(v143 + 8);
          CGFloat v144 = (void (**)(char *, char *, uint64_t))(v143 + 16);
          CGFloat v87 = (void (**)(char *, uint64_t))(v146 + 8);
          uint64_t v44 = 4;
          CGFloat v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 & 0xC000000000000001);
          unint64_t v147 = v85;
          CGFloat v154 = (char *)(v143 + 8);
          while (1)
          {
            uint64_t v89 = v44 - 4;
            if (v49)
            {
              uint64_t v90 = sub_10010A920();
              uint64_t v23 = v44 - 3;
              if (__OFADD__(v89, 1)) {
                goto LABEL_85;
              }
            }
            else
            {
              uint64_t v90 = *(void *)(v85 + 8 * v44);
              swift_retain();
              uint64_t v23 = v44 - 3;
              if (__OFADD__(v89, 1)) {
                goto LABEL_85;
              }
            }
            uint64_t v91 = v90 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
            sub_1000241BC(v90 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v48, type metadata accessor for AssetAttachment.AssetType);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                CGFloat v88 = *v48;
                swift_release();

                goto LABEL_43;
              case 2u:
                if (v164)
                {
                  uint64_t v122 = (uint64_t)v48;
                  goto LABEL_79;
                }
                uint64_t v92 = *(void *)(v90 + 16);
                uint64_t v93 = (uint64_t)v48;
LABEL_53:
                sub_1000240FC(v93);
                if (v92 == v163) {
                  goto LABEL_80;
                }
LABEL_76:
                swift_release();
                id v48 = v166;
LABEL_43:
                ++v44;
                if (v23 == v167) {
                  goto LABEL_88;
                }
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v94 = v91;
                CGFloat v95 = v152;
                sub_1000241BC(v94, (uint64_t)v152, type metadata accessor for AssetAttachment.AssetType);
                uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                uint64_t v97 = (uint64_t)v95;
                switch(EnumCaseMultiPayload)
                {
                  case 1:

                    uint64_t v98 = (uint64_t)v148;
                    ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v156)(v148, 1, 1, v168);
                    break;
                  case 4:
                    swift_bridgeObjectRelease();
                    uint64_t v99 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
                    uint64_t v97 = (uint64_t)v152 + *(int *)(v99 + 48);
                    goto LABEL_58;
                  default:
LABEL_58:
                    uint64_t v100 = v159;
                    sub_100024158(v97, v159);
                    uint64_t v101 = v145;
                    sub_1000241BC(v100, v145, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      uint64_t v98 = (uint64_t)v148;
                      (*v157)(v148, v101, v168);
                      uint64_t v102 = 0;
                      unint64_t v49 = (unint64_t)v158;
                    }
                    else
                    {
                      type metadata accessor for Journaling();
                      uint64_t v103 = v136;
                      sub_1000CEC08(v136);
                      swift_bridgeObjectRelease();
                      if ((*v162)(v103, 1, v168) == 1)
                      {
                        sub_10000B9CC(v103, (uint64_t *)&unk_100159D40);
                        uint64_t v102 = 1;
                        uint64_t v98 = (uint64_t)v148;
                      }
                      else
                      {
                        CGFloat v104 = *v157;
                        CGFloat v105 = v130;
                        uint64_t v106 = v103;
                        uint64_t v107 = v168;
                        (*v157)(v130, v106, v168);
                        double v108 = v148;
                        v104(v148, (uint64_t)v105, v107);
                        uint64_t v98 = (uint64_t)v108;
                        uint64_t v102 = 0;
                      }
                      unint64_t v49 = (unint64_t)v158;
                      CGFloat v86 = v154;
                    }
                    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v156)(v98, v102, 1, v168);
                    sub_1000240FC(v159);
                    break;
                }
                uint64_t v109 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
                uint64_t v165 = (uint64_t)v166 + *(int *)(v109 + 48);
                if ((*v162)(v98, 1, v168) == 1)
                {
                  sub_10000B9CC(v98, (uint64_t *)&unk_100159D40);
                  goto LABEL_75;
                }
                (*v157)(v149, v98, v168);
                sub_100109080();
                CGFloat v111 = v110;
                swift_bridgeObjectRetain();
                CGFloat v112 = v151;
                sub_1001097D0();
                uint64_t v113 = v160;
                uint64_t v114 = (uint64_t)v141;
                sub_100109790();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v155)(v114, 1, v113) == 1)
                {
                  sub_10000B9CC(v114, &qword_10015A000);
                  swift_bridgeObjectRelease();
LABEL_74:
                  (*v87)(v149, v168);
                  unint64_t v85 = v147;
                  unint64_t v49 = (unint64_t)v158;
LABEL_75:
                  sub_1000240FC(v165);
                  goto LABEL_76;
                }
                CGFloat v153 = v111;
                CGFloat v115 = (void (**)(char *, uint64_t))v86;
                CGFloat v116 = v131;
                ((void (*)(char *, uint64_t, uint64_t))*v150)(v131, v114, v113);
                sub_100109840();
                char v117 = sub_100109860();
                CGFloat v118 = *v115;
                (*v115)(v112, v113);
                (*v144)(v140, v116, v113);
                if (v117)
                {
                  v118(v116, v113);
                  v118(v140, v113);
                  swift_bridgeObjectRelease();
                  CGFloat v86 = (char *)v115;
                }
                else
                {
                  sub_100109830();
                  CGFloat v119 = v140;
                  LODWORD(v143) = sub_100109860();
                  v118(v112, v113);
                  v118(v116, v113);
                  v118(v119, v113);
                  swift_bridgeObjectRelease();
                  CGFloat v86 = (char *)v115;
                  if ((v143 & 1) == 0) {
                    goto LABEL_74;
                  }
                }
                CGFloat v120 = *v87;
                unint64_t v85 = v147;
                unint64_t v49 = (unint64_t)v158;
                if (v164)
                {
                  v120(v149, v168);
                  uint64_t v122 = v165;
                  goto LABEL_79;
                }
                uint64_t v92 = *(void *)(v90 + 16);
                v120(v149, v168);
                uint64_t v93 = v165;
                goto LABEL_53;
              default:
                sub_1000240FC((uint64_t)v48);
                swift_release();
                goto LABEL_43;
            }
          }
        }
      }
LABEL_88:
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v139, 1, 1, v168);
    }
    unint64_t v167 = v49 & 0xC000000000000001;
    CGFloat v150 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56);
    CGFloat v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
    CGFloat v153 = (void (**)(char *, uint64_t, uint64_t))(v146 + 32);
    CGFloat v138 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
    CGFloat v126 = (void (**)(char *, uint64_t, uint64_t))(v143 + 32);
    CGFloat v125 = (void (**)(char *, uint64_t))(v143 + 8);
    double v124 = (void (**)(char *, char *, uint64_t))(v143 + 16);
    uint64_t v23 = 4;
    unint64_t v147 = v49;
    CGFloat v137 = (void (**)(char *, uint64_t))(v146 + 8);
LABEL_7:
    uint64_t v53 = v23 - 4;
    if (v167) {
      break;
    }
    unint64_t v54 = v49;
    uint64_t v55 = *(void *)(v49 + 8 * v23);
    swift_retain();
    unint64_t v49 = v23 - 3;
    if (!__OFADD__(v53, 1)) {
      goto LABEL_12;
    }
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    swift_bridgeObjectRetain_n();
    uint64_t v50 = sub_10010AA80();
  }
  unint64_t v54 = v49;
  uint64_t v55 = sub_10010A920();
  unint64_t v49 = v23 - 3;
  if (__OFADD__(v53, 1)) {
    goto LABEL_84;
  }
LABEL_12:
  uint64_t v56 = v55 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
  sub_1000241BC(v55 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, v44, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v51 = *(void **)v44;
      swift_release();

      goto LABEL_6;
    case 2u:
      if ((v164 & 1) == 0)
      {
        uint64_t v57 = *(void *)(v55 + 16);
        uint64_t v58 = v44;
LABEL_16:
        sub_1000240FC(v58);
        if (v57 == v163)
        {
          CGFloat v121 = v139;
          goto LABEL_81;
        }
LABEL_33:
        swift_release();
LABEL_6:
        ++v23;
        BOOL v52 = v49 == v50;
        unint64_t v49 = v54;
        if (v52) {
          goto LABEL_39;
        }
        goto LABEL_7;
      }
      uint64_t v122 = v44;
LABEL_79:
      sub_1000240FC(v122);
LABEL_80:
      CGFloat v121 = v139;
LABEL_81:
      swift_bridgeObjectRelease_n();
      sub_1000C7FA4(v121);
      return swift_release();
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v59 = v56;
      os_log_t v60 = v156;
      sub_1000241BC(v59, (uint64_t)v156, type metadata accessor for AssetAttachment.AssetType);
      uint64_t v61 = swift_getEnumCaseMultiPayload();
      uint64_t v62 = (uint64_t)v60;
      uint64_t v63 = (uint64_t)v157;
      switch(v61)
      {
        case 1:
          uint64_t v64 = v160;

          uint64_t v65 = (uint64_t)v155;
          (*v150)(v155, 1, 1, v168);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v62 = (uint64_t)v60 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
          goto LABEL_21;
        default:
LABEL_21:
          uint64_t v66 = v162;
          sub_100024158(v62, (uint64_t)v162);
          sub_1000241BC((uint64_t)v66, v63, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v65 = (uint64_t)v155;
            (*v153)(v155, v63, v168);
            uint64_t v67 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v68 = v142;
            sub_1000CEC08(v142);
            swift_bridgeObjectRelease();
            if ((*v158)(v68, 1, v168) == 1)
            {
              sub_10000B9CC(v68, (uint64_t *)&unk_100159D40);
              uint64_t v67 = 1;
              id v48 = v166;
              uint64_t v65 = (uint64_t)v155;
            }
            else
            {
              uint64_t v69 = *v153;
              uint64_t v70 = v132;
              (*v153)(v132, v68, v168);
              id v71 = v69;
              CGFloat v72 = v155;
              v71(v155, (uint64_t)v70, v168);
              uint64_t v65 = (uint64_t)v72;
              uint64_t v67 = 0;
              id v48 = v166;
            }
          }
          uint64_t v64 = v160;
          (*v150)((char *)v65, v67, 1, v168);
          sub_1000240FC((uint64_t)v162);
          break;
      }
      uint64_t v165 = v44 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
      if ((*v158)(v65, 1, v168) == 1)
      {
        sub_10000B9CC(v65, (uint64_t *)&unk_100159D40);
        goto LABEL_32;
      }
      (*v153)(v154, v65, v168);
      sub_100109080();
      uint64_t v74 = v73;
      swift_bridgeObjectRetain();
      uint64_t v75 = v151;
      sub_1001097D0();
      uint64_t v76 = (uint64_t)v144;
      sub_100109790();
      if ((*v138)(v76, 1, v64) == 1)
      {
        sub_10000B9CC(v76, &qword_10015A000);
        swift_bridgeObjectRelease();
LABEL_31:
        (*v137)(v154, v168);
        id v48 = v166;
LABEL_32:
        sub_1000240FC(v165);
        goto LABEL_33;
      }
      uint64_t v129 = v74;
      id v77 = v133;
      (*v126)(v133, v76, v64);
      sub_100109840();
      int v127 = sub_100109860();
      CGFloat v128 = *v125;
      v128(v75, v64);
      CGFloat v78 = v134;
      (*v124)(v134, v77, v64);
      if (v127)
      {
        uint64_t v79 = v77;
        id v80 = v128;
        v128(v79, v64);
        v80(v78, v64);
        swift_bridgeObjectRelease();
        unint64_t v54 = v147;
      }
      else
      {
        sub_100109830();
        int v127 = sub_100109860();
        CGFloat v81 = v75;
        CGFloat v82 = v128;
        v128(v81, v64);
        v82(v77, v64);
        v82(v78, v64);
        swift_bridgeObjectRelease();
        unint64_t v54 = v147;
        if ((v127 & 1) == 0) {
          goto LABEL_31;
        }
      }
      CGFloat v83 = *v137;
      id v48 = v166;
      if (v164)
      {
        v83(v154, v168);
        uint64_t v122 = v165;
        goto LABEL_79;
      }
      uint64_t v57 = *(void *)(v55 + 16);
      v83(v154, v168);
      uint64_t v58 = v165;
      goto LABEL_16;
    default:
      sub_1000240FC(v44);
      swift_release();
      goto LABEL_6;
  }
}

void sub_10002245C(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView;
    uint64_t v7 = *(void **)(Strong + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
    if (v7) {
      goto LABEL_8;
    }
    type metadata accessor for VideoPlayerView();
    id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v9 = [v8 layer];
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10) {
      [v10 setVideoGravity:AVLayerVideoGravityResizeAspectFill];
    }

    id v11 = [v8 layer];
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    if (v12) {
      [v12 setToneMapToStandardDynamicRange:(*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x2D0))() & 1];
    }

    uint64_t v13 = *(void **)((char *)v5 + v6);
    *(void *)((char *)v5 + v6) = v8;
    id v14 = v8;

    [v5 addSubview:v14];
    uint64_t v7 = *(void **)((char *)v5 + v6);
    if (v7)
    {
LABEL_8:
      id v15 = v7;
      id v16 = [v15 layer];
      self;
      uint64_t v17 = (void *)swift_dynamicCastObjCClass();

      if (v17)
      {
        id v18 = sub_10001DFF4();
        [v17 setPlayer:v18];

        id v16 = v18;
      }

      uint64_t v19 = *(void **)((char *)v5 + v6);
      if (v19)
      {
        id v20 = v19;
        id v21 = [v20 layer];
        self;
        uint64_t v22 = (void *)swift_dynamicCastObjCClass();
        if (!v22) {

        }
        id v23 = [v22 player];
        if (v23)
        {
          id v24 = [v23 currentItem];

          if (v24)
          {

            uint64_t v25 = *(void **)((char *)v5 + v6);
            if (v25)
            {
              id v26 = v25;
              id v27 = [v26 layer];
              self;
              uint64_t v28 = (void *)swift_dynamicCastObjCClass();
              if (!v28) {

              }
              id v29 = [v28 player];
              if (v29)
              {
                id v30 = [v29 currentItem];

                if (v30)
                {

                  if ((sub_10007AB40(*((unsigned char *)v5 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType)) & 1) != 0
                    && !UIAccessibilityIsReduceMotionEnabled())
                  {
                    uint64_t v31 = self;
                    uint64_t v32 = swift_allocObject();
                    swift_unknownObjectWeakInit();
                    uint64_t v33 = swift_allocObject();
                    *(void *)(v33 + 16) = v32;
                    *(void *)(v33 + 24) = 0x3FF0000000000000;
                    uint64_t v61 = sub_1000240F0;
                    uint64_t v62 = v33;
                    aBlock = _NSConcreteStackBlock;
                    unint64_t v58 = 1107296256;
                    uint64_t v59 = sub_10001DEE8;
                    os_log_t v60 = &unk_1001415E8;
                    uint64_t v34 = _Block_copy(&aBlock);
                    swift_release();
                    [v31 animateWithDuration:0 delay:v34 options:0 animations:0.3 completion:0.0];
                    _Block_release(v34);
                  }
                }
              }
            }
            if ((sub_10007AB40(*((unsigned char *)v5 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType)) & 1) != 0
              && !UIAccessibilityIsReduceMotionEnabled())
            {
              uint64_t v35 = *(void **)((char *)v5 + v6);
              if (v35)
              {
                id v36 = v35;
                id v37 = [v36 layer];
                self;
                uint64_t v38 = (void *)swift_dynamicCastObjCClass();
                if (!v38) {

                }
                id v39 = [v38 player];
                [v39 setMuted:1];

                uint64_t v40 = *(void **)((char *)v5 + v6);
                if (v40)
                {
                  id v41 = v40;
                  id v42 = [v41 layer];
                  self;
                  uint64_t v43 = (void *)swift_dynamicCastObjCClass();
                  if (!v43) {

                  }
                  id v44 = [v43 player];
                  [v44 play];
                }
              }
              id v45 = [self defaultCenter];
              if (qword_100158AA8 != -1) {
                swift_once();
              }
              uint64_t v46 = qword_10016DEE8;
              sub_100004BD4(&qword_100159FF8);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_100122230;
              aBlock = (void **)0xD000000000000015;
              unint64_t v58 = 0x800000010010DD50;
              sub_10010A860();
              uint64_t v48 = sub_100109470();
              *(void *)(inited + 96) = &type metadata for String;
              *(void *)(inited + 72) = v48;
              *(void *)(inited + 80) = v49;
              sub_10007B4AC(inited);
              Class isa = sub_100109B60().super.isa;
              swift_bridgeObjectRelease();
              [v45 postNotificationName:v46 object:0 userInfo:isa];
            }
          }
        }
      }
    }
    [*(id *)((char *)v5 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView) setHidden:1];
    [*(id *)((char *)v5 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView) setAlpha:1.0];
    uint64_t v51 = self;
    id v52 = [v51 defaultCenter];
    [v52 removeObserver:v5 name:AVPlayerItemDidPlayToEndTimeNotification object:0];

    id v53 = [v51 defaultCenter];
    unint64_t v54 = v5;
    id v55 = sub_10001DFF4();
    id v56 = [v55 currentItem];

    [v53 addObserver:v54 selector:"finishedPlayingWithNotification:" name:AVPlayerItemDidPlayToEndTimeNotification object:v56];
    sub_10002307C(a3);
  }
}

void sub_100022C0C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView) setAlpha:1.0];
  }
}

void sub_100022DC4(SEL *a1, double a2, double a3, double a4, double a5)
{
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  [super a1:a2 a3:a3 a4:a4 a5:a5];
  id v11 = *(id *)&v5[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView];
  [v5 bounds];
  [v11 setFrame:];

  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView];
  [v5 bounds];
  [v12 setFrame:];
  uint64_t v13 = *(void **)&v5[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView];
  if (v13)
  {
    id v14 = v13;
    [v5 bounds];
    [v14 setFrame:];
  }
}

void sub_100022ED0()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for VideoAssetView();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView];
  [v0 bounds];
  [v1 setFrame:];

  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView];
  [v0 bounds];
  [v2 setFrame:];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView];
  if (v3)
  {
    id v4 = v3;
    [v0 bounds];
    [v4 setFrame:];
  }
}

void sub_100022FF4(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = *(void **)(Strong + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
    if (v4)
    {
      id v5 = v4;
      [v5 setAlpha:a1];
    }
  }
}

uint64_t sub_10002307C(void **a1)
{
  uint64_t v2 = v1;
  memset(v32, 0, sizeof(v32));
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
  if (!v4) {
    goto LABEL_6;
  }
  id v5 = v4;
  id v6 = [v5 layer];
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7) {

  }
  id v8 = [v7 player];
  if (v8)
  {
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v9 = (void *)sub_100109010();
    swift_release();
    swift_release();
    unint64_t v10 = sub_10010A5C0(1, 600);
    unsigned int v12 = v11;
    id v14 = v13;
    unint64_t v15 = HIDWORD(v11);
    sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
    id v16 = (void *)sub_10010A410();
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v30 = sub_10002430C;
    uint64_t v31 = v17;
    aBlock = _NSConcreteStackBlock;
    unint64_t v27 = 1107296256;
    uint64_t v28 = sub_100023584;
    id v29 = &unk_100141610;
    id v18 = _Block_copy(&aBlock);
    swift_release();
    aBlock = (void **)v10;
    unint64_t v27 = __PAIR64__(v15, v12);
    uint64_t v28 = v14;
    id v19 = [v8 addPeriodicTimeObserverForInterval:&aBlock queue:v16 usingBlock:v18];
    _Block_release(v18);

    sub_10010A7B0();
    swift_unknownObjectRelease();
    sub_10000B9CC((uint64_t)v32, &qword_10015A8A0);
    sub_100024314((uint64_t)&aBlock, (uint64_t)v32);
  }
  else
  {
LABEL_6:
    id v9 = 0;
  }
  id v20 = *(void **)(v2 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerTimeControlStatusObserver);
  *(void *)(v2 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerTimeControlStatusObserver) = v9;
  id v21 = v9;

  sub_1000248D8((uint64_t)v32, (uint64_t)&aBlock, &qword_10015A8A0);
  uint64_t v22 = v2 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_timeObserver;
  swift_beginAccess();
  sub_10002440C((uint64_t)&aBlock, v22, &qword_10015A8A0);
  swift_endAccess();
  aBlock = a1;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = sub_100109010();
  swift_release();
  swift_release();
  id v24 = *(void **)(v2 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerStatusObserver);
  *(void *)(v2 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerStatusObserver) = v23;

  return sub_10000B9CC((uint64_t)v32, &qword_10015A8A0);
}

void sub_10002341C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_delegate;
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    uint64_t v4 = *(void *)(v2 + 8);

    if (v3)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1000234BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = Strong + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_delegate;
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    uint64_t v10 = *(void *)(v8 + 8);

    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, ObjectType, v10);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100023584(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);

  return swift_release();
}

uint64_t sub_1000235F0(void **a1)
{
  uint64_t v2 = sub_100109A70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unsigned int v12 = (void *)result;
    sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
    uint64_t v13 = (void *)sub_10010A410();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = v10;
    _OWORD aBlock[4] = sub_1000243BC;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001DEE8;
    aBlock[3] = &unk_100141660;
    unint64_t v15 = _Block_copy(aBlock);
    uint64_t v19 = v6;
    id v16 = v15;
    id v17 = v12;
    id v18 = v10;
    swift_release();
    sub_100109A90();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10001C78C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004BD4((uint64_t *)&unk_10015A5E0);
    sub_100019AF4();
    sub_10010A7D0();
    sub_10010A420();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  return result;
}

id sub_1000238EC(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 24))(ObjectType, v5);
    swift_unknownObjectRelease();
  }
  id result = [a2 status];
  if (result == (id)1)
  {
    char v8 = *(unsigned char *)(a1 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(a1 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading) = 1;
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = a1 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_loadingDelegate;
      id result = (id)swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        uint64_t v10 = *(void *)(v9 + 8);
        uint64_t v11 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v11, v10);
        return (id)swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1000239FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerStatusObserver) = 0;

  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerTimeControlStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerTimeControlStatusObserver) = 0;

  uint64_t v3 = v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_timeObserver;
  swift_beginAccess();
  sub_1000248D8(v3, (uint64_t)&v10, &qword_10015A8A0);
  if (!*((void *)&v11 + 1)) {
    return sub_10000B9CC((uint64_t)&v10, &qword_10015A8A0);
  }
  sub_10002426C(&v10, &v12);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    if (v8)
    {
      sub_10000B718(&v12, v13);
      [v8 removeTimeObserver:sub_10010AC90()];

      swift_unknownObjectRelease();
    }
  }
  long long v10 = 0u;
  long long v11 = 0u;
  swift_beginAccess();
  sub_10002440C((uint64_t)&v10, v3, &qword_10015A8A0);
  swift_endAccess();
  return sub_10000B7B0((uint64_t)&v12);
}

void sub_100023C4C()
{
  sub_100023D28();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100023D28()
{
  if (!qword_100159FC8)
  {
    sub_1001094F0();
    unint64_t v0 = sub_10010A700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100159FC8);
    }
  }
}

id sub_100023E08(void *a1, uint64_t a2, uint64_t (*a3)(void), SEL *a4)
{
  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return [super a4];
}

void sub_100023E5C(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for VideoPlayerView();
  long long v12 = *a7;
  id v13 = v14.receiver;
  [super v12:a2, a3, a4, a5];
  [v13 layoutSubviews];
}

id sub_100023FB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoPlayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for VideoPlayerView()
{
  return self;
}

uint64_t sub_10002400C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100024044()
{
}

uint64_t sub_10002404C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002405C()
{
  return swift_release();
}

uint64_t sub_100024064()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000240AC()
{
  sub_10002245C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1000240B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000240F0()
{
  sub_100022FF4(*(double *)(v0 + 24));
}

uint64_t sub_1000240FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100024158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000241BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100024224()
{
}

uint64_t sub_10002422C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_10002423C()
{
}

uint64_t sub_100024244(uint64_t a1)
{
  return a1;
}

_OWORD *sub_10002426C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

const char *sub_10002427C()
{
  return "status";
}

id sub_100024288@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 status];
  *a2 = result;
  return result;
}

uint64_t sub_1000242BC(void **a1)
{
  return sub_1000235F0(a1);
}

const char *sub_1000242C4()
{
  return "timeControlStatus";
}

id sub_1000242D0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 timeControlStatus];
  *a2 = result;
  return result;
}

void sub_100024304()
{
}

void sub_10002430C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100024314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002437C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000243BC()
{
  return sub_1000238EC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000243C4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100024404()
{
  return sub_1000205E8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10002440C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004BD4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100024470()
{
  uint64_t v1 = sub_1001094F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_100109460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000245C8(void *a1)
{
  uint64_t v3 = *(void *)(sub_1001094F0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_100109460() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10001F31C(a1, v7, v1 + v4, v8);
}

uint64_t sub_1000246A0()
{
  uint64_t v1 = sub_1001094F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_100109460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_100024800()
{
  uint64_t v1 = *(void *)(sub_1001094F0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100109460() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_10001F7F0(v5, v6, (char *)(v0 + v2), v7);
}

void sub_1000248D0()
{
}

uint64_t sub_1000248D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004BD4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002493C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10002497C()
{
  uint64_t v0 = sub_100004BD4(&qword_10015A028);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v12 - v4;
  sub_100004BD4(&qword_10015A030);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = NSURLFileSizeKey;
  uint64_t v7 = NSURLFileSizeKey;
  sub_10002DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1001090A0();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_100108F90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
  sub_100024BDC((uint64_t)v5, (uint64_t)v3);
  sub_100108F90();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
  {
    sub_100024C44((uint64_t)v5);
    sub_100024C44((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v10 = sub_100108F80();
    sub_100024C44((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
  }
  return v10;
}

uint64_t sub_100024BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100024C44(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015A028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100024CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A3E0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A3E8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A3E8);
  uint64_t v13 = sub_100004BD4(&qword_100159728);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_100159728);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A3E8);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A3E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s10MusicAssetC9MusicDataVMa);
    uint64_t v15 = _s10MusicAssetC9MusicDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s10MusicAssetC9MusicDataVMa, &qword_1001596A0, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_100159728);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A3E8);
  return swift_endAccess();
}

uint64_t sub_100024FD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A3F0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A3F8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A3F8);
  uint64_t v13 = sub_100004BD4(&qword_100159B58);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_100159B58);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A3F8);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A3F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s10AudioAssetC9AudioDataVMa);
    uint64_t v15 = _s10AudioAssetC9AudioDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s10AudioAssetC9AudioDataVMa, &qword_100159AA8, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_100159B58);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A3F8);
  return swift_endAccess();
}

uint64_t sub_10002530C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1;
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    unint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    if (*(unsigned char *)(v0 + 89))
    {
      char v5 = *(unsigned char *)(v0 + 88) & 1;
      uint64_t v6 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      uint64_t v14 = 2;
    }
    else
    {
      unsigned int v15 = *(unsigned __int8 *)(v0 + 88);
      sub_100006F28(*(void *)(v0 + 64), *(void *)(v0 + 72));
      uint64_t v7 = sub_10002827C();
      uint64_t v12 = v8;
      uint64_t v13 = v7;
      uint64_t v6 = v9;
      char v5 = v10;
      sub_10002E794(v2, v3, v4, v15, 0);
      uint64_t v14 = *(void *)(v0 + 16);
      uint64_t v4 = v12;
      uint64_t v2 = v13;
    }
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v6;
    *(void *)(v0 + 32) = v4;
    *(unsigned char *)(v0 + 40) = v5;
    sub_10002E754(v2);
    sub_10002E764(v14);
  }
  sub_10002E784(v1);
  return v2;
}

uint64_t sub_100025470@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A1D8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A1E0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A1E0);
  uint64_t v13 = sub_100004BD4(&qword_10015A180);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A180);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A1E0);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A1D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    uint64_t v15 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s16WorkoutIconAssetC15WorkoutIconDataVMa, &qword_10015A138, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A180);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A1E0);
  return swift_endAccess();
}

uint64_t sub_1000257A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A230);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A238);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A238);
  uint64_t v13 = sub_100004BD4(&qword_10015A240);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A240);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A238);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A230);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s15GenericMapAssetC14GenericMapDataVMa);
    uint64_t v15 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s15GenericMapAssetC14GenericMapDataVMa, &qword_10015A248, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A240);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A238);
  return swift_endAccess();
}

uint64_t sub_100025AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A208);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A210);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A210);
  uint64_t v13 = sub_100004BD4(&qword_10015A218);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A218);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A210);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A208);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
    uint64_t v15 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, &qword_10015A220, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A218);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A210);
  return swift_endAccess();
}

uint64_t sub_100025E0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A1E8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A1F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A1F0);
  uint64_t v13 = sub_100004BD4(&qword_10015A1F8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A1F8);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A1F0);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A1E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s19MotionActivityAssetC18MotionActivityDataVMa);
    uint64_t v15 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s19MotionActivityAssetC18MotionActivityDataVMa, &qword_10015A200, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A1F8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A1F0);
  return swift_endAccess();
}

uint64_t sub_100026140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A2E8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A2F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A2F0);
  uint64_t v13 = sub_100004BD4(&qword_10015A2F8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A2F8);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A2F0);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A2E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s9LinkAssetC8LinkDataVMa);
    uint64_t v15 = _s9LinkAssetC8LinkDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s9LinkAssetC8LinkDataVMa, &qword_10015A300, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A2F8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A2F0);
  return swift_endAccess();
}

uint64_t sub_100026474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A350);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A358);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A358);
  uint64_t v13 = sub_100004BD4(&qword_10015A360);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A360);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A358);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A350);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s12PodcastAssetC11PodcastDataVMa);
    uint64_t v15 = _s12PodcastAssetC11PodcastDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s12PodcastAssetC11PodcastDataVMa, &qword_10015A368, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A360);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A358);
  return swift_endAccess();
}

uint64_t sub_1000267A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A328);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A330);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A330);
  uint64_t v13 = sub_100004BD4(&qword_10015A338);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A338);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A330);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A328);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s9BookAssetC8BookDataVMa);
    uint64_t v15 = _s9BookAssetC8BookDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s9BookAssetC8BookDataVMa, &qword_10015A340, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A338);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A330);
  return swift_endAccess();
}

uint64_t sub_100026ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A280);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A288);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A288);
  uint64_t v13 = sub_100004BD4(&qword_10015A290);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A290);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A288);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A280);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
    uint64_t v15 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s20ThirdPartyMediaAssetC12MetadataTypeVMa, &qword_10015A298, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A290);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A288);
  return swift_endAccess();
}

uint64_t sub_100026E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A308);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A310);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A310);
  uint64_t v13 = sub_100004BD4(&qword_10015A318);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A318);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A310);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A308);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s12ContactAssetC11ContactDataVMa);
    uint64_t v15 = _s12ContactAssetC11ContactDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s12ContactAssetC11ContactDataVMa, &qword_10015A320, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A318);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A310);
  return swift_endAccess();
}

uint64_t sub_100027144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A400);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A408);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A408);
  uint64_t v13 = sub_100004BD4(&qword_10015A410);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A410);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A408);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A400);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s16StateOfMindAssetC15StateOfMindDataVMa);
    uint64_t v15 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s16StateOfMindAssetC15StateOfMindDataVMa, &qword_10015A418, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A410);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A408);
  return swift_endAccess();
}

uint64_t sub_100027478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A370);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A378);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A378);
  uint64_t v13 = sub_100004BD4(&qword_10015A380);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A380);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A378);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t v15 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s14LivePhotoAssetC13LivePhotoDataVMa, &qword_10015A388, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A380);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A378);
  return swift_endAccess();
}

uint64_t sub_1000277AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A3C0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A3C8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A3C8);
  uint64_t v13 = sub_100004BD4(&qword_10015A3D0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A3D0);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A3C8);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A3C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s10VideoAssetC9VideoDataVMa);
    uint64_t v15 = _s10VideoAssetC9VideoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s10VideoAssetC9VideoDataVMa, &qword_10015A3D8, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A3D0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A3C8);
  return swift_endAccess();
}

uint64_t sub_100027AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A2C8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A2D0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A2D0);
  uint64_t v13 = sub_100004BD4(&qword_10015A2D8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A2D8);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A2D0);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A2C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s10PhotoAssetC9PhotoDataVMa);
    uint64_t v15 = _s10PhotoAssetC9PhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s10PhotoAssetC9PhotoDataVMa, &qword_10015A2E0, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A2D8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A2D0);
  return swift_endAccess();
}

uint64_t sub_100027E14@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  unint64_t v6 = *(void *)(v1 + 40);
  if (v6 >> 60 == 7)
  {
    uint64_t v17 = *(void *)(v1 + 32);
    uint64_t v18 = *(void *)(v1 + 24);
    uint64_t v19 = *(void *)(v1 + 16);
    uint64_t v7 = *(void *)(v1 + 64);
    unint64_t v8 = *(void *)(v1 + 72);
    uint64_t v9 = *(void *)(v1 + 80);
    unint64_t v10 = *(void *)(v1 + 88);
    if (*(unsigned char *)(v1 + 96))
    {
      uint64_t v11 = *(void *)(v1 + 72) & 1;
      *a1 = v7;
      a1[1] = v11;
      a1[2] = v9;
      a1[3] = v10;
      sub_1000084E0(v9, v10);
    }
    else
    {
      sub_100006F28(*(void *)(v1 + 64), *(void *)(v1 + 72));
      sub_100028700();
      sub_10002EF00(v7, v8, v9, v10, 0);
      uint64_t v7 = *a1;
      uint64_t v11 = a1[1];
      uint64_t v9 = a1[2];
      unint64_t v10 = a1[3];
    }
    uint64_t v13 = *(void *)(v1 + 16);
    uint64_t v12 = *(void *)(v1 + 24);
    uint64_t v14 = *(void *)(v1 + 32);
    unint64_t v15 = *(void *)(v1 + 40);
    *(void *)(v1 + 16) = v7;
    *(void *)(v1 + 24) = v11;
    *(void *)(v1 + 32) = v9;
    *(void *)(v1 + 40) = v10;
    sub_10002EEA0(v7, v11, v9, v10);
    sub_10002EEBC(v13, v12, v14, v15);
    uint64_t v4 = v18;
    uint64_t v3 = v19;
    uint64_t v5 = v17;
  }
  else
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
  return sub_10002EEEC(v3, v4, v5, v6);
}

uint64_t sub_100027F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A390);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4(&qword_10015A398);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, &qword_10015A398);
  uint64_t v13 = sub_100004BD4(&qword_10015A3A0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10000B800((uint64_t)v11, a1, &qword_10015A3A0);
  }
  sub_10000B9CC((uint64_t)v11, &qword_10015A398);
  sub_1000248D8(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_10015A390);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002E6EC((uint64_t)v5, a1, _s10VisitAssetC9VisitDataVMa);
    uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_100028930(_s10VisitAssetC9VisitDataVMa, &qword_10015A3A8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
    sub_100007084(v17, v18);
  }
  sub_1000248D8(a1, (uint64_t)v9, &qword_10015A3A0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002440C((uint64_t)v9, v12, &qword_10015A398);
  return swift_endAccess();
}

uint64_t sub_10002827C()
{
  sub_100108D30();
  swift_allocObject();
  sub_100108D20();
  sub_10002E7A0();
  sub_100108D10();
  swift_release();
  return v1;
}

uint64_t sub_1000284CC()
{
  sub_100108D30();
  swift_allocObject();
  sub_100108D20();
  sub_100004BD4(&qword_10015A2B0);
  sub_10002EDF4();
  sub_100108D10();
  swift_release();
  return v1;
}

uint64_t sub_100028700()
{
  return swift_release();
}

uint64_t sub_100028930@<X0>(uint64_t (*a1)(void)@<X2>, unint64_t *a2@<X3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  sub_100108D30();
  swift_allocObject();
  sub_100108D20();
  uint64_t v8 = a1(0);
  sub_10002D9FC(a2, a3);
  sub_100108D10();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a4, 0, 1, v8);
}

unint64_t sub_100028C1C(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      unint64_t result = 0x6D69547472617473;
      break;
    case 3:
      unint64_t result = 0x656D6954646E65;
      break;
    case 4:
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 6:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000026;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100028DE0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015A270);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_10002E7F4();
  sub_10010AE60();
  LOBYTE(v13) = 0;
  sub_10010ABC0();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_10010ABE0();
    uint64_t v9 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    LOBYTE(v13) = 2;
    sub_100109460();
    sub_10002D9FC(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v13) = 3;
    sub_10010AC00();
    LOBYTE(v13) = 4;
    sub_10010ABE0();
    LOBYTE(v13) = 5;
    sub_10010ABE0();
    LOBYTE(v13) = 6;
    sub_10010ABC0();
    LOBYTE(v13) = 7;
    sub_10010ABC0();
    LOBYTE(v13) = 8;
    sub_10010ABF0();
    LOBYTE(v13) = 9;
    sub_10010ABE0();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 56));
    char v12 = 10;
    sub_100004BD4(&qword_10015A260);
    sub_10002E848(&qword_10015A278, &qword_10015F2F0);
    sub_10010AC00();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 60));
    char v12 = 11;
    sub_10010AC00();
    LOBYTE(v13) = 12;
    sub_10010ABE0();
    LOBYTE(v13) = 13;
    sub_10010ABE0();
    LOBYTE(v13) = 14;
    sub_10010ABC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100029298@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v52 - v9;
  uint64_t v54 = sub_100004BD4(&qword_10015A250);
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  __chkstk_darwin(v57);
  id v55 = a1;
  id v56 = (void *)((char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B718(a1, a1[3]);
  sub_10002E7F4();
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)v55);
  }
  uint64_t v53 = a2;
  uint64_t v15 = v11;
  LOBYTE(v59) = 0;
  uint64_t v16 = sub_10010AB20();
  uint64_t v17 = v56;
  *id v56 = v16;
  v17[1] = v18;
  LOBYTE(v59) = 1;
  uint64_t v19 = sub_10010AB40();
  id v20 = v57;
  void v17[2] = v19;
  *((unsigned char *)v17 + 24) = v21 & 1;
  sub_100109460();
  LOBYTE(v59) = 2;
  v52[1] = sub_10002D9FC(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_10000B800((uint64_t)v10, (uint64_t)v17 + v20[6], (uint64_t *)&unk_10015CDE0);
  LOBYTE(v59) = 3;
  sub_10010AB60();
  sub_10000B800((uint64_t)v8, (uint64_t)v17 + v20[7], (uint64_t *)&unk_10015CDE0);
  LOBYTE(v59) = 4;
  uint64_t v22 = sub_10010AB40();
  uint64_t v23 = (char *)v17 + v20[8];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v59) = 5;
  uint64_t v25 = sub_10010AB40();
  id v26 = (char *)v17 + v20[9];
  *(void *)id v26 = v25;
  v26[8] = v27 & 1;
  LOBYTE(v59) = 6;
  uint64_t v28 = sub_10010AB20();
  id v29 = (uint64_t *)((char *)v17 + v20[10]);
  *id v29 = v28;
  v29[1] = v30;
  LOBYTE(v59) = 7;
  uint64_t v31 = sub_10010AB20();
  uint64_t v32 = (uint64_t *)((char *)v17 + v20[11]);
  *uint64_t v32 = v31;
  v32[1] = v33;
  LOBYTE(v59) = 8;
  uint64_t v34 = sub_10010AB50();
  uint64_t v35 = (char *)v17 + v20[12];
  *(void *)uint64_t v35 = v34;
  v35[8] = v36 & 1;
  LOBYTE(v59) = 9;
  uint64_t v37 = sub_10010AB40();
  uint64_t v38 = (char *)v56 + v57[13];
  *(void *)uint64_t v38 = v37;
  v38[8] = v39 & 1;
  sub_100004BD4(&qword_10015A260);
  char v58 = 10;
  sub_10002E848(&qword_10015A268, &qword_100159700);
  sub_10010AB60();
  *(uint64_t *)((char *)v56 + v57[14]) = v59;
  char v58 = 11;
  sub_10010AB60();
  *(uint64_t *)((char *)v56 + v57[15]) = v59;
  LOBYTE(v59) = 12;
  uint64_t v40 = sub_10010AB40();
  id v41 = (char *)v56 + v57[16];
  *(void *)id v41 = v40;
  v41[8] = v42 & 1;
  LOBYTE(v59) = 13;
  uint64_t v43 = sub_10010AB40();
  id v44 = (char *)v56 + v57[17];
  *(void *)id v44 = v43;
  v44[8] = v45 & 1;
  LOBYTE(v59) = 14;
  uint64_t v46 = sub_10010AB20();
  uint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v54);
  uint64_t v49 = (uint64_t)v56;
  uint64_t v50 = (uint64_t *)((char *)v56 + v57[18]);
  *uint64_t v50 = v46;
  v50[1] = v48;
  sub_10002E624(v49, v53, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  sub_10000B7B0((uint64_t)v55);
  return sub_10002E68C(v49, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

unint64_t sub_100029B14()
{
  return sub_100028C1C(*v0);
}

uint64_t sub_100029B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002DC74(a1, a2);
  *a3 = result;
  return result;
}

void sub_100029B44(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_100029B50(uint64_t a1)
{
  unint64_t v2 = sub_10002E7F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100029B8C(uint64_t a1)
{
  unint64_t v2 = sub_10002E7F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100029BC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100029298(a1, a2);
}

uint64_t sub_100029BE0(void *a1)
{
  return sub_100028DE0(a1);
}

uint64_t sub_100029BF8()
{
  return swift_release();
}

id sub_100029C08()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16WorkoutIconAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100029C50()
{
  return _s16WorkoutIconAssetCMa(0);
}

uint64_t _s16WorkoutIconAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015A060);
}

uint64_t sub_100029C78()
{
  return swift_updateClassMetadata2();
}

void *sub_100029CBC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100109460();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    uint64_t v28 = (void *)((char *)v4 + v26);
    id v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)((char *)v4 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[12];
    uint64_t v35 = a3[13];
    char v36 = (char *)v4 + v34;
    uint64_t v37 = (uint64_t)a2 + v34;
    *(void *)char v36 = *(void *)v37;
    v36[8] = *(unsigned char *)(v37 + 8);
    uint64_t v38 = (char *)v4 + v35;
    uint64_t v39 = (uint64_t)a2 + v35;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = *(unsigned char *)(v39 + 8);
    uint64_t v40 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v40) = *(uint64_t *)((char *)a2 + v40);
    uint64_t v41 = a3[16];
    uint64_t v42 = a3[17];
    uint64_t v43 = (char *)v4 + v41;
    uint64_t v44 = (uint64_t)a2 + v41;
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = *(unsigned char *)(v44 + 8);
    char v45 = (char *)v4 + v42;
    uint64_t v46 = (uint64_t)a2 + v42;
    *(void *)char v45 = *(void *)v46;
    v45[8] = *(unsigned char *)(v46 + 8);
    uint64_t v47 = a3[18];
    uint64_t v48 = (void *)((char *)v4 + v47);
    uint64_t v49 = (uint64_t *)((char *)a2 + v47);
    uint64_t v50 = v49[1];
    void *v48 = *v49;
    v48[1] = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100029FF8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A14C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  id v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *id v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  uint64_t v39 = a3[16];
  uint64_t v40 = a3[17];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a1 + v40;
  uint64_t v44 = a2 + v40;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a3[18];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002A438(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  *(unsigned char *)(v37 + 8) = *((unsigned char *)v38 + 8);
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[16];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = a3[17];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  LOBYTE(v47) = *(unsigned char *)(v50 + 8);
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v47;
  uint64_t v51 = a3[18];
  id v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  *id v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002A848(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = (uint64_t *)(a2 + v25);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[16];
  uint64_t v33 = a3[17];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_10002AAF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  uint64_t v42 = a1 + v39;
  uint64_t v43 = a2 + v39;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[16];
  uint64_t v45 = a3[17];
  uint64_t v46 = a1 + v44;
  uint64_t v47 = a2 + v44;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  uint64_t v48 = a1 + v45;
  uint64_t v49 = a2 + v45;
  *(void *)uint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)(a1 + v50);
  id v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002AEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002AEB8);
}

uint64_t sub_10002AEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10002AF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002AF8C);
}

uint64_t sub_10002AF8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s16WorkoutIconAssetC15WorkoutIconDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015A0C8);
}

void sub_10002B058()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10002B120()
{
  return swift_retain();
}

uint64_t sub_10002B130(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16WorkoutIconAsset_metadata) = a1;
  return swift_release();
}

void sub_10002B148()
{
  uint64_t v1 = sub_100109520();
  __chkstk_darwin(v1 - 8);
  int v127 = (char *)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100109CE0();
  __chkstk_darwin(v3 - 8);
  CGFloat v126 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v5 - 8);
  CGFloat v130 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v125 = (uint64_t)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  CGFloat v128 = (char *)&v116 - v11;
  __chkstk_darwin(v10);
  int v13 = (char *)&v116 - v12;
  uint64_t v14 = sub_100109880();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004BD4(&qword_10015A180);
  __chkstk_darwin(v18 - 8);
  int v20 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v116 - v25;
  __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v116 - v28;
  uint64_t v129 = v0;
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16WorkoutIconAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v22 + 56))(v20, 1, 1, v21);
    goto LABEL_6;
  }
  uint64_t v124 = v27;
  swift_retain();
  sub_100025470((uint64_t)v20);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21) == 1)
  {
LABEL_6:
    sub_10000B9CC((uint64_t)v20, &qword_10015A180);
    return;
  }
  sub_10002E6EC((uint64_t)v20, (uint64_t)v29, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  sub_1001097F0();
  id v30 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class isa = sub_1001097B0().super.isa;
  id v32 = [v30 initWithContentType:isa];

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v33 = *(void *)v29;
  if (!*((void *)v29 + 1))
  {
    uint64_t v34 = (objc_class *)[self mainBundle];
    v115._countAndFlagsBits = 0x800000010010DDC0;
    v132._countAndFlagsBits = 0x74756F6B726F57;
    v132._object = (void *)0xE700000000000000;
    v133.value._countAndFlagsBits = v33;
    v133.value._object = 0;
    v35.super.Class isa = v34;
    v134._countAndFlagsBits = 0;
    v134._object = (void *)0xE000000000000000;
    sub_100108F60(v132, v133, v35, v134, v115);
  }
  swift_bridgeObjectRetain();
  NSString v36 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v32 setDisplayName:v36];

  uint64_t v122 = &v29[v21[6]];
  sub_1000248D8((uint64_t)v122, (uint64_t)v13, (uint64_t *)&unk_10015CDE0);
  uint64_t v37 = sub_100109460();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  uint64_t v123 = v37;
  CGFloat v120 = v39;
  uint64_t v121 = v38 + 48;
  Class v40 = 0;
  if (((unsigned int (*)(char *, uint64_t))v39)(v13, 1) != 1)
  {
    Class v40 = sub_1001093D0().super.isa;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v123);
  }
  [v32 setTimestamp:v40];

  id v41 = [objc_allocWithZone((Class)FIUIFormattingManager) init];
  uint64_t v42 = &v29[v21[12]];
  char v43 = v42[8];
  uint64_t v119 = v38;
  if (v43)
  {
    uint64_t v118 = sub_10002C4F4((uint64_t)v29);
    uint64_t v45 = v44;
    double v46 = *((double *)v29 + 2);
    int v47 = v29[24];
    sub_10002E624((uint64_t)v29, (uint64_t)v26, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    if (v47 == 1)
    {
      double v46 = COERCE_DOUBLE(sub_10002CA04((uint64_t)v26));
      char v49 = v48 & 1;
    }
    else
    {
      char v49 = 0;
    }
    sub_10002E68C((uint64_t)v26, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  }
  else
  {
    uint64_t v50 = *(void *)v42;
    if (qword_1001589C0 != -1) {
      swift_once();
    }
    sub_100004BD4(&qword_10015A190);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_100122230;
    *(void *)(v51 + 56) = &type metadata for Int;
    *(void *)(v51 + 64) = &protocol witness table for Int;
    *(void *)(v51 + 32) = v50;
    sub_100109D00();
    swift_bridgeObjectRelease();
    NSString v52 = sub_100109CF0();
    swift_bridgeObjectRelease();
    [v32 setDisplayName:v52];

    uint64_t v118 = sub_10002BFE4((uint64_t)v29);
    uint64_t v45 = v53;
    uint64_t v54 = &v29[v21[13]];
    double v46 = *(double *)v54;
    char v49 = v54[8];
  }
  id v55 = &v29[v21[11]];
  unint64_t v56 = *((void *)v55 + 1);
  if (v56)
  {
    uint64_t v117 = *(void *)&v46;
    id v57 = v32;
    id v58 = v41;
    uint64_t v59 = *(void *)v55;
    uint64_t v60 = HIBYTE(v56) & 0xF;
    if ((v56 & 0x2000000000000000) == 0) {
      uint64_t v60 = v59 & 0xFFFFFFFFFFFFLL;
    }
    if (v60)
    {
      uint64_t v116 = v45;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_10009E5BC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v63 = *((void *)v61 + 2);
      unint64_t v62 = *((void *)v61 + 3);
      if (v63 >= v62 >> 1) {
        uint64_t v61 = sub_10009E5BC((char *)(v62 > 1), v63 + 1, 1, v61);
      }
      *((void *)v61 + 2) = v63 + 1;
      uint64_t v64 = &v61[16 * v63];
      *((void *)v64 + 4) = v59;
      *((void *)v64 + 5) = v56;
      id v41 = v58;
      id v32 = v57;
      uint64_t v45 = v116;
    }
    else
    {
      uint64_t v61 = (char *)_swiftEmptyArrayStorage;
      id v41 = v58;
      id v32 = v57;
    }
    double v46 = *(double *)&v117;
    uint64_t v65 = v130;
    if (v49) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v61 = (char *)_swiftEmptyArrayStorage;
    uint64_t v65 = v130;
    if (v49)
    {
LABEL_36:
      uint64_t v67 = v129;
      goto LABEL_37;
    }
  }
  if (v46 <= 0.0) {
    goto LABEL_36;
  }
  id v66 = [v41 stringWithDuration:2 durationFormat:v46];
  uint64_t v67 = v129;
  if (v66)
  {
    uint64_t v68 = v66;
    uint64_t v117 = sub_100109D30();
    uint64_t v70 = v69;

    uint64_t v71 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v61 = sub_10009E5BC(0, *((void *)v61 + 2) + 1, 1, v61);
    }
    unint64_t v73 = *((void *)v61 + 2);
    unint64_t v72 = *((void *)v61 + 3);
    if (v73 >= v72 >> 1) {
      uint64_t v61 = sub_10009E5BC((char *)(v72 > 1), v73 + 1, 1, v61);
    }
    *((void *)v61 + 2) = v73 + 1;
    uint64_t v74 = &v61[16 * v73];
    *((void *)v74 + 4) = v117;
    *((void *)v74 + 5) = v70;
    uint64_t v65 = v130;
    uint64_t v45 = v71;
  }
LABEL_37:
  if (v45)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v61 = sub_10009E5BC(0, *((void *)v61 + 2) + 1, 1, v61);
    }
    unint64_t v76 = *((void *)v61 + 2);
    unint64_t v75 = *((void *)v61 + 3);
    if (v76 >= v75 >> 1) {
      uint64_t v61 = sub_10009E5BC((char *)(v75 > 1), v76 + 1, 1, v61);
    }
    *((void *)v61 + 2) = v76 + 1;
    id v77 = &v61[16 * v76];
    *((void *)v77 + 4) = v118;
    *((void *)v77 + 5) = v45;
  }
  CGFloat v78 = &v29[v21[8]];
  double v79 = *(double *)v78;
  char v80 = v78[8];
  uint64_t v81 = v124;
  sub_10002E624((uint64_t)v29, v124, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  if ((v80 & 1) == 0)
  {
    sub_10002E68C(v81, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
LABEL_47:
    id v84 = [objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierHeartRate];
    if (v84)
    {
      unint64_t v85 = v84;
      id v86 = [v84 canonicalUnit];

      if (v86)
      {
        id v87 = [self quantityWithUnit:v86 doubleValue:v79 / 60.0];

        id v88 = [v41 localizedStringWithHeartRate:v87 unitStyle:1];
        if (v88)
        {
          sub_100109D30();

          uint64_t v89 = sub_100109D80();
          uint64_t v91 = v90;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v61 = sub_10009E5BC(0, *((void *)v61 + 2) + 1, 1, v61);
          }
          unint64_t v93 = *((void *)v61 + 2);
          unint64_t v92 = *((void *)v61 + 3);
          if (v93 >= v92 >> 1) {
            uint64_t v61 = sub_10009E5BC((char *)(v92 > 1), v93 + 1, 1, v61);
          }
          *((void *)v61 + 2) = v93 + 1;
          uint64_t v94 = &v61[16 * v93];
          *((void *)v94 + 4) = v89;
          *((void *)v94 + 5) = v91;
          goto LABEL_55;
        }
LABEL_67:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v82 = v81 + v21[16];
  double v79 = *(double *)v82;
  char v83 = *(unsigned char *)(v82 + 8);
  sub_10002E68C(v81, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  if ((v83 & 1) == 0) {
    goto LABEL_47;
  }
LABEL_55:
  sub_10002CED4(0, 1, v65);
  uint64_t v95 = sub_1001091E0();
  uint64_t v96 = *(void *)(v95 - 8);
  uint64_t v98 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v65, 1, v95) != 1)
  {
    sub_1001090F0(v97);
    uint64_t v98 = v99;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v65, v95);
  }
  [v32 setThumbnailURL:v98];

  CGFloat v131 = v61;
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_10002E5E0((unint64_t *)&qword_10015A188, (uint64_t *)&unk_10015F2A0);
  sub_100109C30();
  swift_bridgeObjectRelease();
  NSString v100 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v32 setContentDescription:v100];

  uint64_t v101 = v125;
  sub_1000248D8((uint64_t)v122, v125, (uint64_t *)&unk_10015CDE0);
  uint64_t v102 = v123;
  if (v120(v101, 1, v123) == 1)
  {
    uint64_t v103 = *(void **)(v67 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    CGFloat v104 = v128;
    if (v103 && (id v105 = [v103 entry]) != 0)
    {
      uint64_t v106 = v105;
      sub_100072EE4(v104);

      uint64_t v107 = 0;
    }
    else
    {
      uint64_t v107 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v104, v107, 1, v102);
    sub_10000B9CC(v101, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    uint64_t v108 = v119;
    CGFloat v104 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v128, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v104, 0, 1, v102);
  }
  sub_100109C80();
  sub_100109510();
  uint64_t v109 = sub_100109D60();
  uint64_t v111 = v110;
  sub_100004BD4((uint64_t *)&unk_10015F2B0);
  uint64_t v112 = swift_allocObject();
  *(_OWORD *)(v112 + 16) = xmmword_100122230;
  *(void *)(v112 + 32) = sub_100084A54(v109, v111, (uint64_t)v104);
  *(void *)(v112 + 40) = v113;
  Class v114 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v32 setAlternateNames:v114];

  swift_bridgeObjectRelease();
  sub_10000B9CC((uint64_t)v104, (uint64_t *)&unk_10015CDE0);
  sub_10002E68C((uint64_t)v29, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_10002BFE4(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_100109520();
  __chkstk_darwin(v1 - 8);
  uint64_t v37 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015F250);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015A198);
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015F260);
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4(&qword_10015A1A0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015F270);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  int v20 = (uint64_t *)(v40 + *(int *)(v19 + 72));
  if (v20[1])
  {
    uint64_t v21 = *v20;
  }
  else
  {
    uint64_t v29 = v10;
    id v30 = v18;
    uint64_t v31 = v14;
    uint64_t v32 = v8;
    uint64_t v33 = v16;
    uint64_t v34 = v12;
    uint64_t v22 = (uint64_t)v39;
    uint64_t v35 = v5;
    if (*(unsigned char *)(v40 + *(int *)(v19 + 68) + 8))
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v40 = 0;
      id v23 = [self kilocalories];
      sub_10002E54C();
      uint64_t v24 = v30;
      sub_100108D70();
      uint64_t v25 = v29;
      sub_100108D90();
      sub_100109000();
      sub_100109500();
      sub_10002E58C();
      sub_100108FD0();
      uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015F290);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v22, 0, 1, v26);
      uint64_t v27 = v31;
      sub_100108CE0();
      sub_10000B9CC(v22, (uint64_t *)&unk_10015F250);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v35);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v32);
      sub_10002E5E0((unint64_t *)&qword_10015A1B0, &qword_10015A1A0);
      sub_100108DA0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v11);
      uint64_t v21 = sub_100109D80();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v15);
    }
  }
  swift_bridgeObjectRetain();
  return v21;
}

uint64_t sub_10002C4F4(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_100109520();
  __chkstk_darwin(v1 - 8);
  uint64_t v37 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015F250);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015A198);
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015F260);
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4(&qword_10015A1A0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015F270);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  int v20 = (uint64_t *)(v40 + *(int *)(v19 + 40));
  if (v20[1])
  {
    uint64_t v21 = *v20;
  }
  else
  {
    uint64_t v29 = v10;
    id v30 = v18;
    uint64_t v31 = v14;
    uint64_t v32 = v8;
    uint64_t v33 = v16;
    uint64_t v34 = v12;
    uint64_t v22 = (uint64_t)v39;
    uint64_t v35 = v5;
    if (*(unsigned char *)(v40 + *(int *)(v19 + 36) + 8))
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v40 = 0;
      id v23 = [self kilocalories];
      sub_10002E54C();
      uint64_t v24 = v30;
      sub_100108D70();
      uint64_t v25 = v29;
      sub_100108D90();
      sub_100109000();
      sub_100109500();
      sub_10002E58C();
      sub_100108FD0();
      uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015F290);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v22, 0, 1, v26);
      uint64_t v27 = v31;
      sub_100108CE0();
      sub_10000B9CC(v22, (uint64_t *)&unk_10015F250);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v35);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v32);
      sub_10002E5E0((unint64_t *)&qword_10015A1B0, &qword_10015A1A0);
      sub_100108DA0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v11);
      uint64_t v21 = sub_100109D80();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v15);
    }
  }
  swift_bridgeObjectRetain();
  return v21;
}

uint64_t sub_10002CA04(uint64_t a1)
{
  uint64_t v2 = sub_1001095C0();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100108F10();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_100109460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v20 = a1;
  sub_1000248D8(a1 + *(int *)(v19 + 24), (uint64_t)v11, (uint64_t *)&unk_10015CDE0);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v11, 1, v12) == 1)
  {
    sub_100109450();
    sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  }
  sub_1000248D8(v20 + *(int *)(v19 + 28), (uint64_t)v9, (uint64_t *)&unk_10015CDE0);
  if (v21(v9, 1, v12) == 1)
  {
    sub_100109450();
    sub_10000B9CC((uint64_t)v9, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v9, v12);
  }
  uint64_t v22 = v32;
  sub_1001095A0();
  sub_100004BD4(&qword_10015A1B8);
  uint64_t v23 = sub_1001095B0();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100122230;
  (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v26 + v25, enum case for Calendar.Component.second(_:), v23);
  sub_10002E234(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v27 = v33;
  sub_100109560();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v37);
  uint64_t v28 = sub_100108EE0();
  LOBYTE(v22) = v29;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v35);
  id v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v16, v12);
  v30(v18, v12);
  if (v22) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = (double)v28;
  }
  return result;
}

uint64_t sub_10002CED4@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v79 = a2;
  unint64_t v62 = a3;
  uint64_t v5 = sub_100004BD4(&qword_10015A000);
  __chkstk_darwin(v5 - 8);
  id v66 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = sub_100109880();
  uint64_t v7 = *(void *)(v65 - 8);
  uint64_t v8 = __chkstk_darwin(v65 - 8);
  uint64_t v64 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  unint64_t v63 = &v54[-v10];
  uint64_t v71 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v11 = __chkstk_darwin(v71);
  uint64_t v74 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  CGFloat v78 = &v54[-v13];
  uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v61 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v18 = &v54[-v17];
  uint64_t v80 = sub_1001091E0();
  uint64_t v69 = *(void *)(v80 - 8);
  uint64_t v19 = __chkstk_darwin(v80);
  id v58 = &v54[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v22 = &v54[-v21];
  uint64_t v84 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v23 = __chkstk_darwin(v84);
  id v77 = (id *)&v54[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v26 = (id *)&v54[-v25];
  unint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments);
  if (v27 >> 62) {
    goto LABEL_40;
  }
  uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v28)
  {
LABEL_41:
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v62, 1, 1, v80);
  }
  while (1)
  {
    unint64_t v83 = v27 & 0xC000000000000001;
    unint64_t v76 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v69 + 48);
    unint64_t v72 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
    unint64_t v73 = (void (**)(void))(v69 + 32);
    uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    id v57 = (void (**)(void))(v7 + 32);
    unint64_t v56 = (void (**)(unsigned char *, uint64_t))(v7 + 8);
    uint64_t v59 = (void (**)(unsigned char *, uint64_t))(v69 + 8);
    uint64_t v29 = 4;
    uint64_t v70 = a1;
    unint64_t v75 = v18;
    uint64_t v81 = v28;
    unint64_t v82 = v27;
    uint64_t v67 = v22;
LABEL_7:
    uint64_t v31 = v29 - 4;
    if (v83) {
      break;
    }
    uint64_t v7 = *(void *)(v27 + 8 * v29);
    swift_retain();
    uint64_t v32 = v29 - 3;
    if (!__OFADD__(v31, 1)) {
      goto LABEL_12;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_10010AA80();
    if (!v28) {
      goto LABEL_41;
    }
  }
  uint64_t v7 = sub_10010A920();
  uint64_t v32 = v29 - 3;
  if (__OFADD__(v31, 1)) {
    goto LABEL_39;
  }
LABEL_12:
  uint64_t v33 = v7 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
  sub_10002E624(v7 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v26, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (v79) {
        goto LABEL_38;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      uint64_t v30 = (uint64_t)v26;
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v34 = v77;
      sub_10002E624(v33, (uint64_t)v77, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v36 = (uint64_t)v34;
      uint64_t v37 = (uint64_t)v74;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          (*v72)(v18, 1, 1, v80);
          break;
        case 4:
          uint64_t v38 = v77;
          swift_bridgeObjectRelease();
          uint64_t v36 = (uint64_t)v38 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
          goto LABEL_21;
        default:
LABEL_21:
          uint64_t v39 = v80;
          uint64_t v40 = v78;
          sub_10002E6EC(v36, (uint64_t)v78, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          sub_10002E624((uint64_t)v40, v37, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v18 = v75;
            (*v73)();
            uint64_t v41 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v42 = v61;
            sub_1000CEC08((uint64_t)v61);
            swift_bridgeObjectRelease();
            if ((*v76)(v42, 1, v39) == 1)
            {
              sub_10000B9CC((uint64_t)v42, (uint64_t *)&unk_100159D40);
              uint64_t v41 = 1;
              a1 = v70;
              uint64_t v18 = v75;
            }
            else
            {
              char v43 = *v73;
              uint64_t v44 = v58;
              uint64_t v45 = v80;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))*v73)(v58, v42, v80);
              uint64_t v18 = v75;
              double v46 = v44;
              uint64_t v22 = v67;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v43)(v75, v46, v45);
              uint64_t v41 = 0;
              a1 = v70;
            }
          }
          (*v72)(v18, v41, 1, v80);
          sub_10002E68C((uint64_t)v78, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          break;
      }
      uint64_t v47 = (uint64_t)v26 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
      if ((*v76)(v18, 1, v80) == 1)
      {
        sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_100159D40);
        goto LABEL_36;
      }
      uint64_t v68 = v47;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))*v73)(v22, v18, v80);
      sub_100109080();
      swift_bridgeObjectRetain();
      char v48 = v64;
      sub_1001097D0();
      uint64_t v49 = (uint64_t)v66;
      sub_100109790();
      uint64_t v50 = v65;
      if ((*v60)(v49, 1, v65) == 1)
      {
        sub_10000B9CC(v49, &qword_10015A000);
        swift_bridgeObjectRelease();
LABEL_35:
        uint64_t v22 = v67;
        (*v59)(v67, v80);
        a1 = v70;
        uint64_t v18 = v75;
        uint64_t v47 = v68;
LABEL_36:
        uint64_t v30 = v47;
LABEL_5:
        sub_10002E68C(v30, type metadata accessor for AssetAttachment.AssetType.FilePathType);
        goto LABEL_6;
      }
      (*v57)();
      sub_100109820();
      int v55 = sub_100109860();
      uint64_t v51 = *v56;
      (*v56)(v48, v50);
      v51(v63, v50);
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0) {
        goto LABEL_35;
      }
      a1 = v70;
      uint64_t v18 = v75;
      uint64_t v22 = v67;
      if ((v79 & 1) == 0)
      {
        uint64_t v52 = *(void *)(v7 + 16);
        (*v59)(v67, v80);
        sub_10002E68C(v68, type metadata accessor for AssetAttachment.AssetType.FilePathType);
        if (v52 == a1) {
          goto LABEL_38;
        }
LABEL_6:
        swift_release();
        unint64_t v27 = v82;
        ++v29;
        if (v32 == v81) {
          goto LABEL_41;
        }
        goto LABEL_7;
      }
      (*v59)(v67, v80);
      sub_10002E68C(v68, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_38:
      swift_bridgeObjectRelease_n();
      sub_1000C7FA4(v62);
      return swift_release();
    default:
      sub_10002E68C((uint64_t)v26, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      if (v79) {
        goto LABEL_38;
      }
LABEL_16:
      if (*(void *)(v7 + 16) == a1) {
        goto LABEL_38;
      }
      goto LABEL_6;
  }
}

void sub_10002D948()
{
}

uint64_t sub_10002D96C()
{
  return sub_10002D9FC(&qword_10015A138, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_10002D9B4()
{
  return sub_10002D9FC(&qword_10015A140, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_10002D9FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10002DA44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004BD4(&qword_10015A348);
    uint64_t v3 = sub_10010A8A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_100109D30();
      sub_10010ADC0();
      id v7 = v6;
      sub_100109DB0();
      Swift::Int v8 = sub_10010AE20();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_100109D30();
        uint64_t v17 = v16;
        if (v15 == sub_100109D30() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_100109D30();
          uint64_t v24 = v23;
          if (v22 == sub_100109D30() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10002DC74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010010DE10 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010010DE30 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000010010DE50 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000010010DE70 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010010DE90 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010010DEB0 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000010010DED0 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000010010DEF0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

void *sub_10002E234(uint64_t a1)
{
  uint64_t v2 = sub_1001095B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100004BD4(&qword_10015A1C0);
    uint64_t v9 = sub_10010A8A0();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_10002D9FC(&qword_10015A1C8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_100109C00();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_10002D9FC(&qword_10015A1D0, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_100109C70();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_10002E54C()
{
  unint64_t result = qword_10015F280;
  if (!qword_10015F280)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015F280);
  }
  return result;
}

unint64_t sub_10002E58C()
{
  unint64_t result = qword_10015A1A8;
  if (!qword_10015A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A1A8);
  }
  return result;
}

uint64_t sub_10002E5E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002E624(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002E68C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002E6EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002E754(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10002E764(uint64_t result)
{
  if (result != 2) {
    return sub_10002E774(result);
  }
  return result;
}

uint64_t sub_10002E774(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10002E784(uint64_t result)
{
  if (result != 2) {
    return sub_10002E754(result);
  }
  return result;
}

uint64_t sub_10002E794(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_100007084(a1, a2);
  }
}

unint64_t sub_10002E7A0()
{
  unint64_t result = qword_10015A228;
  if (!qword_10015A228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A228);
  }
  return result;
}

unint64_t sub_10002E7F4()
{
  unint64_t result = qword_10015A258;
  if (!qword_10015A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A258);
  }
  return result;
}

uint64_t sub_10002E848(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(&qword_10015A260);
    sub_10002D9FC(a2, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_10002E8DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004BD4(&qword_10015A2A0);
    uint64_t v3 = sub_10010A8A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_10010ADC0();
      sub_10010ADD0(v7);
      Swift::Int result = sub_10010AE20();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_10002EA20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004BD4(&qword_10015A3B0);
    uint64_t v3 = sub_10010A8A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_10010ADC0();
      swift_bridgeObjectRetain();
      sub_100109DB0();
      Swift::Int result = sub_10010AE20();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_10010ACA0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          unint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_10010ACA0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_10002EBC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004BD4(&qword_10015A2A8);
    uint64_t v3 = sub_10010A8A0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_100109D30();
      sub_10010ADC0();
      id v7 = v6;
      sub_100109DB0();
      Swift::Int v8 = sub_10010AE20();
      Swift::Int result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_100109D30();
        uint64_t v17 = v16;
        if (v15 == sub_100109D30() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        Swift::Int result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_100109D30();
          uint64_t v24 = v23;
          if (v22 == sub_100109D30() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          Swift::Int result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_10002EDF4()
{
  unint64_t result = qword_10015A2B8;
  if (!qword_10015A2B8)
  {
    sub_100012F08(&qword_10015A2B0);
    sub_10002D9FC(&qword_10015A2C0, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A2B8);
  }
  return result;
}

uint64_t sub_10002EEA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 11) {
    return sub_1000084E0(a3, a4);
  }
  return result;
}

uint64_t sub_10002EEBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 7) {
    return sub_10002EED0(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_10002EED0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 11) {
    return sub_100008508(a3, a4);
  }
  return result;
}

uint64_t sub_10002EEEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 7) {
    return sub_10002EEA0(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_10002EF00(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    return sub_100008508(a3, a4);
  }
  else {
    return sub_100007084(a1, a2);
  }
}

unint64_t sub_10002EF14()
{
  unint64_t result = qword_10015A3B8;
  if (!qword_10015A3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A3B8);
  }
  return result;
}

uint64_t _s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002F0C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOMa()
{
  return &_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysON;
}

unint64_t sub_10002F100()
{
  unint64_t result = qword_10015A420;
  if (!qword_10015A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A420);
  }
  return result;
}

unint64_t sub_10002F158()
{
  unint64_t result = qword_10015A428;
  if (!qword_10015A428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A428);
  }
  return result;
}

unint64_t sub_10002F1B0()
{
  unint64_t result = qword_10015A430;
  if (!qword_10015A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A430);
  }
  return result;
}

double sub_10002F204()
{
  uint64_t v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin
                 + 8) & 1) == 0)
    return *(double *)v1;
  if (qword_100158988 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10016DD80 + *(double *)&qword_10016DD80;
  *(double *)uint64_t v1 = *(double *)&qword_10016DD80 + *(double *)&qword_10016DD80;
  v1[8] = 0;
  return result;
}

id sub_10002F280()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_coordinator];
  int v2 = self;
  swift_retain();
  id v3 = [v2 defaultCenter];
  [v3 removeObserver:v1];
  swift_release();

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for JurassicShareViewController();
  return [super dealloc];
}

void sub_10002F518()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_super v5 = (objc_class *)type metadata accessor for JurassicShareViewController();
  v16.receiver = v0;
  v16.super_class = v5;
  [super viewDidLoad];
  [v0 setEdgesForExtendedLayout:1];
  [v0 setModalInPresentation:1];
  sub_10002F740();
  sub_10002FD2C();
  sub_1000D153C(v1, 0, *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView], 0, (uint64_t)nullsub_1, 0);
  uint64_t v14 = &type metadata for JournalFeatureFlags;
  unint64_t v15 = sub_100037914();
  v13[0] = 8;
  char v6 = sub_1001096C0();
  sub_10000B7B0((uint64_t)v13);
  if (v6)
  {
    uint64_t v7 = sub_10010A080();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_10010A060();
    int v8 = v1;
    uint64_t v9 = sub_10010A050();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    v10[4] = v8;
    sub_10004C59C((uint64_t)v4, (uint64_t)&unk_10015A690, (uint64_t)v10);
    swift_release();
    id v11 = [self defaultCenter];
    [v11 addObserver:v8 selector:"extensionWillEnterForeground" name:NSExtensionHostWillEnterForegroundNotification object:0];
  }
}

void sub_10002F740()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100109460();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)v45 - v7;
  id v9 = [v1 navigationItem];
  sub_100109450();
  sub_100109430();
  sub_10006CDE0(2, 0, (uint64_t)v6);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  NSString v11 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v9 setTitle:v11];

  unint64_t v12 = self;
  uint64_t v13 = (objc_class *)[v12 mainBundle];
  v43._countAndFlagsBits = 0x800000010010E290;
  v47._countAndFlagsBits = 0x6C65636E6143;
  v47._object = (void *)0xE600000000000000;
  v49.value._countAndFlagsBits = 0;
  v49.value._object = 0;
  v14.super.Class isa = v13;
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  sub_100108F60(v47, v49, v14, v51, v43);

  uint64_t v15 = type metadata accessor for JurassicShareViewController();
  uint64_t v46 = v15;
  v45[0] = v1;
  id v16 = v1;
  NSString v17 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v18 = v46;
  if (v46)
  {
    unint64_t v19 = sub_10000B718(v45, v46);
    uint64_t v20 = *(void *)(v18 - 8);
    __chkstk_darwin(v19);
    uint64_t v22 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v22);
    uint64_t v23 = sub_10010AC90();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
    sub_10000B7B0((uint64_t)v45);
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v24 = NSKeyedUnarchiver_ptr;
  id v25 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:v17 style:0 target:v23 action:"cancelTapped:"];

  swift_unknownObjectRelease();
  uint64_t v26 = self;
  char v27 = &selRef_layoutAttributesForCellWithIndexPath_;
  id v28 = [v26 systemIndigoColor];
  [v25 setTintColor:v28];

  id v29 = [v16 navigationItem];
  [v29 setLeftBarButtonItem:v25];

  uint64_t v30 = (objc_class *)[v12 mainBundle];
  v44._countAndFlagsBits = 0x800000010010E2B0;
  v48._countAndFlagsBits = 1702256979;
  v48._object = (void *)0xE400000000000000;
  v50.value._countAndFlagsBits = 0;
  v50.value._object = 0;
  v31.super.Class isa = v30;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  sub_100108F60(v48, v50, v31, v52, v44);

  uint64_t v46 = v15;
  v45[0] = v16;
  id v32 = v16;
  NSString v33 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v34 = v46;
  if (v46)
  {
    uint64_t v35 = sub_10000B718(v45, v46);
    uint64_t v36 = *(void *)(v34 - 8);
    __chkstk_darwin(v35);
    uint64_t v38 = (char *)v45 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v36 + 16))(v38);
    uint64_t v39 = sub_10010AC90();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v34);
    char v27 = &selRef_layoutAttributesForCellWithIndexPath_;
    uint64_t v24 = NSKeyedUnarchiver_ptr;
    sub_10000B7B0((uint64_t)v45);
  }
  else
  {
    uint64_t v39 = 0;
  }
  id v40 = [objc_allocWithZone((Class)v24[37]) initWithTitle:v33 style:2 target:v39 action:"doneTapped:"];

  swift_unknownObjectRelease();
  id v41 = [v26 v27[159]];
  [v40 setTintColor:v41];

  id v42 = [v32 navigationItem];
  [v42 setRightBarButtonItem:v40];
}

void sub_10002FD2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView];
  [v2 setKeyboardDismissMode:2];
  [v2 setAlwaysBounceVertical:1];
  [v2 setDelegate:v1];
  if (qword_100158970 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_10016DD68;
  if (qword_100158988 != -1) {
    swift_once();
  }
  [v2 setTextContainerInset:0.0, v3, *(double *)&qword_10016DD80];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_containerView];
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView];
  *(void *)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView] = v4;
  id v6 = v4;
  sub_10005BAB4(v5);

  id v7 = [v1 view];
  if (!v7)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  int v8 = v7;
  [v7 insertSubview:v2 atIndex:0];

  id v9 = [v2 superview];
  if (v9)
  {
    uint64_t v10 = v9;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v2 topAnchor];
    id v12 = [v10 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:0.0];
    id v14 = v13;
    [v14 setActive:1];
  }
  double v15 = *(double *)&qword_10016DD80;
  id v16 = [v2 superview];
  if (v16)
  {
    NSString v17 = v16;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v2 leadingAnchor];
    id v19 = [v17 leadingAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:v15];
    id v21 = v20;
    [v21 setActive:1];
  }
  double v22 = *(double *)&qword_10016DD80;
  id v23 = [v2 superview];
  if (v23)
  {
    uint64_t v24 = v23;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v25 = [v2 trailingAnchor];
    id v26 = [v24 trailingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    [v27 setConstant:-v22];
    id v28 = v27;
    [v28 setActive:1];
  }
  id v29 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"presentKeyboard"];
  id v30 = [v1 view];
  if (!v30) {
    goto LABEL_17;
  }
  id v31 = v30;
  [v30 addGestureRecognizer:v29];
}

uint64_t sub_1000301E4()
{
  v0[2] = sub_10010A060();
  v0[3] = sub_10010A050();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100030290;
  return sub_10003042C();
}

uint64_t sub_100030290()
{
  swift_task_dealloc();
  uint64_t v1 = sub_100109FF0();
  return _swift_task_switch(sub_1000303CC, v1, v0);
}

uint64_t sub_1000303CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003042C()
{
  v1[7] = v0;
  uint64_t v2 = sub_100109460();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  sub_10010A060();
  v1[11] = sub_10010A050();
  uint64_t v4 = sub_100109FF0();
  v1[12] = v4;
  v1[13] = v3;
  return _swift_task_switch(sub_100030520, v4, v3);
}

uint64_t sub_100030520()
{
  uint64_t v26 = v0;
  *(void *)(v0 + 40) = &type metadata for JournalFeatureFlags;
  unint64_t v1 = sub_100037914();
  *(unsigned char *)(v0 + 16) = 8;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_1001096C0();
  sub_10000B7B0(v0 + 16);
  if ((v2 & 1) == 0) {
    goto LABEL_6;
  }
  if (qword_1001588A8 != -1) {
    swift_once();
  }
  id v3 = sub_10000C2BC(1);
  if ((v4 & 1) == 0 && !v3)
  {
LABEL_6:
    swift_release();
    if (qword_100158C78 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_100109960();
    sub_100007CB8(v5, (uint64_t)qword_10016E128);
    uint64_t v6 = sub_100109940();
    os_log_type_t v7 = sub_10010A2C0();
    if (os_log_type_enabled(v6, v7))
    {
      int v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "The mindful minutes flag is turned off, or the user hasn't seen the mindfulMinutes TCC yet so no mindfulness sessions will be recorded", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 56);

    *(void *)(v9 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager) = 0;
    swift_release();
    uint64_t v10 = 0;
    id v11 = (uint64_t *)(v9 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker);
    goto LABEL_11;
  }
  id v14 = sub_10000C2BC(1);
  if ((v15 & 1) == 0 && v14 == (id)2)
  {
    uint64_t v16 = *(void *)(v0 + 56);
    swift_release();
    uint64_t v17 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager;
    if (!*(void *)(v16 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager))
    {
      uint64_t v18 = qword_10016DC78;
      v25[3] = type metadata accessor for HealthManager();
      v25[4] = &off_100140DB8;
      v25[0] = v18;
      type metadata accessor for MindfulnessManager();
      swift_allocObject();
      swift_retain();
      *(void *)(v16 + v17) = sub_1000E0E00((uint64_t)v25, 1);
      swift_release();
    }
    id v11 = (uint64_t *)(*(void *)(v0 + 56)
                    + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker);
    if (*v11) {
      goto LABEL_12;
    }
    type metadata accessor for CanvasIdleTracker();
    swift_allocObject();
    uint64_t v10 = sub_10009B368();
LABEL_11:
    *id v11 = v10;
    swift_release();
LABEL_12:
    swift_task_dealloc();
    id v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  uint64_t v19 = *(void *)(v0 + 56);
  uint64_t v20 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager;
  *(void *)(v0 + 112) = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager;
  uint64_t v21 = *(void *)(v19 + v20);
  *(void *)(v0 + 120) = v21;
  if (!v21)
  {
    swift_release();
    uint64_t v24 = *(void *)(v0 + 56);
    id v11 = (uint64_t *)(v24 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker);
    if (*(void *)(v24 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker))
    {
      swift_retain();
      sub_10009C1E8();
      swift_release();
      uint64_t v24 = *(void *)(v0 + 56);
    }
    *(void *)(v24 + *(void *)(v0 + 112)) = 0;
    swift_release();
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  swift_retain();
  sub_100109430();
  double v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v22;
  *double v22 = v0;
  v22[1] = sub_1000308C0;
  uint64_t v23 = *(void *)(v0 + 80);
  return sub_1000E4050(v23, 0);
}

uint64_t sub_1000308C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = *(void *)(*v0 + 72);
  uint64_t v4 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_100030A60, v6, v5);
}

uint64_t sub_100030A60()
{
  swift_release();
  uint64_t v1 = v0[7];
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker;
  uint64_t v3 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker))
  {
    swift_retain();
    sub_10009C1E8();
    swift_release();
    uint64_t v3 = v0[7];
  }
  *(void *)(v3 + v0[14]) = 0;
  swift_release();
  *(void *)(v1 + v2) = 0;
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100030B64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100109460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 extensionContext];
  if (!v6)
  {
    if (qword_100158C78 != -1) {
LABEL_57:
    }
      swift_once();
    uint64_t v34 = sub_100109960();
    sub_100007CB8(v34, (uint64_t)qword_10016E128);
    os_log_t v62 = (os_log_t)sub_100109940();
    os_log_type_t v35 = sub_10010A2C0();
    if (os_log_type_enabled(v62, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v35, "Empty NSExtensionContext", v36, 2u);
      swift_slowDealloc();
    }
    os_log_t v37 = v62;

    return;
  }
  os_log_type_t v7 = v6;
  Swift::String_optional v50 = v5;
  id v8 = [v6 inputItems];

  uint64_t v9 = sub_100109F30();
  unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    id v11 = 0;
    unint64_t v32 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_53;
    }
LABEL_42:
    uint64_t v38 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38) {
      goto LABEL_43;
    }
    goto LABEL_44;
  }
  uint64_t v47 = v3;
  uint64_t v48 = v2;
  Swift::String_optional v49 = v1;
  id v11 = 0;
  unint64_t v12 = 0;
  Swift::String v52 = &v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeImage];
  uint64_t v53 = v10;
  os_log_t v62 = (os_log_t)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeVideo];
  uint64_t v59 = &v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeURL];
  id v60 = 0;
  id v58 = &v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeText];
  uint64_t v13 = v9 + 32;
  uint64_t v54 = v9;
  int v55 = (char *)&type metadata for Any + 8;
  uint64_t v51 = v9 + 32;
  do
  {
    if (v12 >= *(void *)(v9 + 16))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    sub_100037A20(v13 + 32 * v12, (uint64_t)v64);
    sub_10001CB98(0, &qword_10015A660);
    if (swift_dynamicCast())
    {
      id v57 = v63;
      id v14 = [v63 attachments];
      if (v14)
      {
        char v15 = v14;
        sub_10001CB98(0, &qword_10015A668);
        unint64_t v16 = sub_100109F30();

        if (!(v16 >> 62)) {
          goto LABEL_10;
        }
      }
      else
      {
        unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        {
LABEL_10:
          uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v17) {
            goto LABEL_32;
          }
LABEL_11:
          if (v17 < 1) {
            goto LABEL_56;
          }
          unint64_t v56 = v12;
          uint64_t v61 = v11;
          for (uint64_t i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0) {
              id v24 = (id)sub_10010A920();
            }
            else {
              id v24 = *(id *)(v16 + 8 * i + 32);
            }
            id v25 = v24;
            NSString v26 = sub_100109CF0();
            unsigned __int8 v27 = [v25 hasItemConformingToTypeIdentifier:v26];

            if ((v27 & 1) != 0
              || (NSString v28 = sub_100109CF0(),
                  unsigned int v29 = [v25 hasItemConformingToTypeIdentifier:v28],
                  v28,
                  v29))
            {
              id v23 = v25;
              sub_100109F10();
              if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_100109F70();
              }
              sub_100109FA0();
              sub_100109F50();
            }
            else
            {
              NSString v30 = sub_100109CF0();
              unsigned int v31 = [v25 hasItemConformingToTypeIdentifier:v30];

              if (v31)
              {
                id v23 = v60;
                id v60 = v25;
              }
              else
              {
                NSString v19 = sub_100109CF0();
                unsigned int v20 = [v25 hasItemConformingToTypeIdentifier:v19];

                BOOL v21 = v20 == 0;
                double v22 = v61;
                if (v20) {
                  id v23 = v61;
                }
                else {
                  id v23 = v25;
                }
                if (!v21) {
                  double v22 = v25;
                }
                uint64_t v61 = v22;
              }
            }
          }
          swift_bridgeObjectRelease();
          id v11 = v61;
          uint64_t v9 = v54;
          uint64_t v10 = v53;
          unint64_t v12 = v56;
          uint64_t v13 = v51;
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_10010AA80();
      swift_bridgeObjectRelease();
      if (!v17)
      {
LABEL_32:

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      goto LABEL_11;
    }
LABEL_5:
    ++v12;
  }
  while (v12 != v10);
  swift_bridgeObjectRelease();
  unint64_t v32 = v65;
  if (v60)
  {
    id v33 = v60;
    swift_bridgeObjectRelease();
    uint64_t v1 = v49;
    sub_100032C7C();
    v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_hasLinkViewDisplayed] = 1;
    sub_1000332A8();
    [v1 presentKeyboard];

    uint64_t v2 = v48;
    uint64_t v3 = v47;
    goto LABEL_45;
  }
  uint64_t v2 = v48;
  uint64_t v1 = v49;
  uint64_t v3 = v47;
  if (!(v65 >> 62)) {
    goto LABEL_42;
  }
LABEL_53:
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_10010AA80();
  swift_bridgeObjectRelease();
  if (v45)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_10010AA80();
    swift_bridgeObjectRelease();
LABEL_43:
    sub_100033560(v38);
    v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_hasGridViewDisplayed] = 1;
    sub_1000344C0(v32);
  }
LABEL_44:
  swift_bridgeObjectRelease();
  id v60 = 0;
LABEL_45:
  sub_100034810();
  if (v11)
  {
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v1;
    id v40 = v11;
    id v41 = v1;
    sub_10008D0DC(v40, (uint64_t)sub_100037A7C, v39);

    swift_release();
  }
  id v42 = [self mainScreen];
  id v43 = [v42 traitCollection];

  sub_100031600(v43);
  if (*(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager])
  {
    swift_retain();
    uint64_t v44 = (uint64_t)v50;
    sub_100109430();
    sub_1000E24F4(v44);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v44, v2);
  }
  if (*(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker])
  {
    swift_retain();
    sub_10009BF1C();
    swift_release();
  }
}

void sub_100031484(void *a1)
{
  id v3 = [v1 traitCollection];
  id v4 = [v3 verticalSizeClass];

  if (!a1
    || v4 != [a1 verticalSizeClass]
    || (id v5 = [v1 traitCollection],
        id v6 = [v5 horizontalSizeClass],
        v5,
        v6 != [a1 horizontalSizeClass]))
  {
    id v7 = [v1 traitCollection];
    sub_100031600(v7);
  }
}

void sub_100031600(void *a1)
{
  if ([a1 horizontalSizeClass] == (id)1) {
    [a1 verticalSizeClass];
  }
  uint64_t v2 = self;
  swift_beginAccess();
  sub_10001CB98(0, (unint64_t *)&qword_100159E00);
  swift_bridgeObjectRetain();
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v2 deactivateConstraints:isa];

  swift_beginAccess();
  swift_bridgeObjectRetain();
  Class v4 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:v4];
}

uint64_t sub_1000317D0()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v1 - 8);
  id v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = &type metadata for JournalFeatureFlags;
  unint64_t v13 = sub_100037914();
  v11[0] = 8;
  char v4 = sub_1001096C0();
  uint64_t result = sub_10000B7B0((uint64_t)v11);
  if (v4)
  {
    uint64_t v6 = sub_10010A080();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    sub_10010A060();
    id v7 = v0;
    uint64_t v8 = sub_10010A050();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v7;
    sub_10004C59C((uint64_t)v3, (uint64_t)&unk_10015A648, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_100031920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = sub_10010A060();
  v4[4] = sub_10010A050();
  id v5 = (void *)swift_task_alloc();
  v4[5] = v5;
  *id v5 = v4;
  v5[1] = sub_1000319D0;
  return sub_10003042C();
}

uint64_t sub_1000319D0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_100109FF0();
  return _swift_task_switch(sub_100031B0C, v1, v0);
}

uint64_t sub_100031B0C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager)
    && *(void *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker))
  {
    swift_retain();
    swift_retain();
    sub_10009BF1C();
    sub_1000E3D78();
    swift_release();
    swift_release();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100031C14(uint64_t a1, uint64_t a2, void *a3)
{
  v44[1] = a1;
  uint64_t v6 = sub_100109880();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)&v3[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeImage];
  id v11 = v3;
  sub_100109820();
  uint64_t v12 = sub_100109770();
  uint64_t v14 = v13;
  char v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  *uint64_t v10 = v12;
  v10[1] = v14;
  unint64_t v16 = (uint64_t *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeURL];
  sub_1001097C0();
  uint64_t v17 = sub_100109770();
  uint64_t v19 = v18;
  v15(v9, v6);
  *unint64_t v16 = v17;
  v16[1] = v19;
  unsigned int v20 = (uint64_t *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeText];
  sub_100109800();
  uint64_t v21 = sub_100109770();
  uint64_t v23 = v22;
  v15(v9, v6);
  *unsigned int v20 = v21;
  v20[1] = v23;
  id v24 = (uint64_t *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeVideo];
  sub_100109830();
  uint64_t v25 = sub_100109770();
  uint64_t v27 = v26;
  v15(v9, v6);
  *id v24 = v25;
  v24[1] = v27;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_photoAssets] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkAsset] = 0;
  uint64_t v28 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_containerView;
  *(void *)&v11[v28] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridCollectionView] = 0;
  uint64_t v29 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkView;
  type metadata accessor for LinkAssetGridView();
  *(void *)&v11[v29] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v30 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView;
  type metadata accessor for CanvasTextView();
  *(void *)&v11[v30] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v31 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_coordinator;
  type metadata accessor for CanvasLayoutCoordinator();
  swift_allocObject();
  *(void *)&v11[v31] = sub_1000D2F64();
  v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_hasLinkViewDisplayed] = 0;
  v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_hasGridViewDisplayed] = 0;
  uint64_t v32 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_dataManager;
  type metadata accessor for ShareSheetDataManger();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v33 + 24) = 0;
  *(void *)(v33 + 32) = 0;
  *(void *)&v11[v32] = v33;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager] = 0;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker] = 0;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridViewTopConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_regularConstraints] = _swiftEmptyArrayStorage;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)&v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_outerCornerRadius] = _Q0;
  uint64_t v39 = &v11[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin];
  *(void *)uint64_t v39 = 0;
  v39[8] = 1;

  if (a2)
  {
    NSString v40 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v40 = 0;
  }
  id v41 = (objc_class *)type metadata accessor for JurassicShareViewController();
  v45.receiver = v11;
  v45.super_class = v41;
  id v42 = [super initWithNibName:v40 bundle:a3];

  return v42;
}

id sub_100031FF8(void *a1)
{
  uint64_t v3 = sub_100109880();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeImage];
  uint64_t v8 = v1;
  sub_100109820();
  uint64_t v9 = sub_100109770();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  *uint64_t v7 = v9;
  v7[1] = v11;
  uint64_t v13 = (uint64_t *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeURL];
  sub_1001097C0();
  uint64_t v14 = sub_100109770();
  uint64_t v16 = v15;
  v12(v6, v3);
  *uint64_t v13 = v14;
  v13[1] = v16;
  uint64_t v17 = (uint64_t *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeText];
  sub_100109800();
  uint64_t v18 = sub_100109770();
  uint64_t v20 = v19;
  v12(v6, v3);
  *uint64_t v17 = v18;
  v17[1] = v20;
  uint64_t v21 = (uint64_t *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_typeVideo];
  sub_100109830();
  uint64_t v22 = sub_100109770();
  uint64_t v24 = v23;
  v12(v6, v3);
  *uint64_t v21 = v22;
  v21[1] = v24;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_photoAssets] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkAsset] = 0;
  uint64_t v25 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_containerView;
  *(void *)&v8[v25] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridCollectionView] = 0;
  uint64_t v26 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkView;
  type metadata accessor for LinkAssetGridView();
  *(void *)&v8[v26] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v27 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView;
  type metadata accessor for CanvasTextView();
  *(void *)&v8[v27] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v28 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_coordinator;
  type metadata accessor for CanvasLayoutCoordinator();
  swift_allocObject();
  *(void *)&v8[v28] = sub_1000D2F64();
  v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_hasLinkViewDisplayed] = 0;
  v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_hasGridViewDisplayed] = 0;
  uint64_t v29 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_dataManager;
  type metadata accessor for ShareSheetDataManger();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = 0;
  *(void *)&v8[v29] = v30;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager] = 0;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker] = 0;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridViewTopConstraint] = 0;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_regularConstraints] = _swiftEmptyArrayStorage;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)&v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_outerCornerRadius] = _Q0;
  uint64_t v36 = &v8[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin];
  *(void *)uint64_t v36 = 0;
  v36[8] = 1;

  os_log_t v37 = (objc_class *)type metadata accessor for JurassicShareViewController();
  v40.receiver = v8;
  v40.super_class = v37;
  id v38 = [super initWithCoder:a1];

  return v38;
}

uint64_t type metadata accessor for JurassicShareViewController()
{
  return self;
}

void sub_100032394()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100158A70 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1001091E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  id v9 = objc_allocWithZone((Class)type metadata accessor for CoreDataStackShared());
  uint64_t v10 = swift_retain();
  uint64_t v11 = (void *)sub_100056524(v10, (uint64_t)v7);
  uint64_t v12 = sub_10010A080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  sub_10010A060();
  id v13 = v11;
  id v14 = v1;
  uint64_t v15 = sub_10010A050();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v13;
  v16[5] = v14;
  sub_1000E0A88((uint64_t)v4, (uint64_t)&unk_10015A620, (uint64_t)v16);
  swift_release();
}

uint64_t sub_100032610(char a1)
{
  uint64_t v2 = sub_100109A70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
    uint64_t v11 = (void *)sub_10010A410();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _OWORD aBlock[4] = sub_100037664;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001DEE8;
    aBlock[3] = &unk_100141840;
    id v13 = _Block_copy(aBlock);
    swift_release();
    sub_100109A90();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100037A8C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004BD4((uint64_t *)&unk_10015A5E0);
    sub_100019AF4();
    sub_10010A7D0();
    sub_10010A420();
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_1000328D8()
{
  uint64_t v0 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong extensionContext];

    if (v5)
    {
      sub_100109D30();
      id v6 = objc_allocWithZone((Class)NSError);
      NSString v7 = sub_100109CF0();
      swift_bridgeObjectRelease();
      id v8 = [v6 initWithDomain:v7 code:3072 userInfo:0];

      uint64_t v9 = (void *)sub_100108FB0();
      [v5 cancelRequestWithError:v9];
    }
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    uint64_t v12 = sub_10010A080();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
    sub_10010A060();
    id v13 = v11;
    uint64_t v14 = sub_10010A050();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v13;
    sub_10004C59C((uint64_t)v2, (uint64_t)&unk_10015A600, (uint64_t)v15);

    return swift_release();
  }
  return result;
}

void sub_100032BA0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    if (([Strong isFirstResponder] & 1) == 0
      && ([v1 canBecomeFirstResponder] & 1) != 0)
    {
      [v1 becomeFirstResponder];
    }
  }
}

void sub_100032C7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkView;
  uint64_t v3 = *(unsigned char **)(v0 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkView);
  uint64_t v4 = v3[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType];
  v3[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType] = 1;
  uint64_t v5 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_hasCalledSizeTypeUpdated;
  if (v3[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
  {
    switch(v4)
    {
      case 1:
        swift_bridgeObjectRelease();
        break;
      default:
        char v7 = sub_10010ACA0();
        id v8 = v3;
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          goto LABEL_7;
        }

        break;
    }
  }
  else
  {
    id v6 = v3;
LABEL_7:
    sub_100018BC4();
    v3[v5] = 1;
  }
  id v9 = [*(id *)(v1 + v2) layer];
  [v9 setCornerRadius:8.0];

  id v10 = [*(id *)(v1 + v2) layer];
  [v10 setMasksToBounds:1];

  uint64_t v11 = *(void **)(v1 + v2);
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = [v12 systemGroupedBackgroundColor];
  [v13 setBackgroundColor:v14];

  [*(id *)(v1 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_containerView) addSubview:*(void *)(v1 + v2)];
  id v15 = *(id *)(v1 + v2);
  id v16 = [v15 superview];
  uint64_t v17 = &selRef_layoutAttributesForCellWithIndexPath_;
  if (v16)
  {
    uint64_t v18 = v16;
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v15 topAnchor];
    id v20 = [v18 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:0.0];
    if (v21)
    {
      id v21 = v21;
      [v21 setActive:1];

      id v15 = v21;
    }

    uint64_t v17 = &selRef_layoutAttributesForCellWithIndexPath_;
  }
  else
  {
    id v21 = 0;
    uint64_t v18 = v15;
  }

  id v22 = *(id *)(v1 + v2);
  double v23 = sub_10002F204();
  id v24 = [v22 superview];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = v17;
    [v22 v17[45]];
    id v27 = [v22 leadingAnchor];
    id v28 = [v25 leadingAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:v23];
    if (v29)
    {
      id v29 = v29;
      [v29 setActive:1];

      id v22 = v29;
    }

    uint64_t v17 = v26;
  }
  else
  {
    id v29 = 0;
    uint64_t v25 = v22;
  }

  double v30 = *(double *)(v1
                  + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin);
  id v31 = *(id *)(v1 + v2);
  id v32 = [v31 superview];
  if (v32)
  {
    uint64_t v33 = v32;
    [v31 v17[45]];
    id v34 = [v31 trailingAnchor];
    id v35 = [v33 trailingAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    [v36 setConstant:-v30];
    if (v36)
    {
      id v36 = v36;
      [v36 setActive:1];

      id v31 = v36;
    }
  }
  else
  {
    id v36 = 0;
    uint64_t v33 = v31;
  }

  uint64_t v37 = qword_100158970;
  id v38 = *(id *)(v1 + v2);
  if (v37 != -1) {
    swift_once();
  }
  id v39 = sub_10009D208(0, 1, *(double *)&qword_10016DD68);

  id v40 = [*(id *)(v1 + v2) heightAnchor];
  id v41 = [*(id *)(v1 + v2) widthAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 multiplier:0.25];

  [v42 setActive:1];
}

uint64_t sub_1000332A8()
{
  uint64_t v0 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = sub_1001091E0();
  sub_100037A8C((unint64_t *)&unk_10015A670, (void (*)(uint64_t))&type metadata accessor for URL);
  swift_retain_n();
  if (sub_10010A310())
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100037A84;
    *(void *)(v5 + 24) = v3;
    swift_retain();
    id v6 = (void *)sub_10010A300();
    swift_release_n();

    return swift_release();
  }
  else
  {
    if (qword_100158C78 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_100109960();
    sub_100007CB8(v8, (uint64_t)qword_10016E128);
    id v9 = sub_100109940();
    os_log_type_t v10 = sub_10010A2D0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to load object of URL type", v11, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    sub_100035088((uint64_t)v2);
    sub_10000B9CC((uint64_t)v2, (uint64_t *)&unk_100159D40);
    return swift_release_n();
  }
}

void sub_100033560(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (char *)[objc_allocWithZone((Class)type metadata accessor for MosaicLayout()) init];
  uint64_t v5 = v4[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_sizeType];
  v4[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_sizeType] = 0;
  Class v114 = v4;
  switch(v5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      char v6 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        [v114 invalidateLayout];
      }
      break;
    default:
      swift_bridgeObjectRelease();
      break;
  }
  double v8 = *(double *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_outerCornerRadius];
  double v7 = *(double *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_outerCornerRadius + 8];
  id v9 = v114;
  os_log_type_t v10 = (double *)&v114[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius];
  double v11 = *(double *)&v114[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius];
  double v12 = *(double *)&v114[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius + 8];
  int v13 = v114[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerTopCornerRadius + 16];
  *os_log_type_t v10 = v8;
  v10[1] = v7;
  *((unsigned char *)v10 + 16) = 0;
  if (v13 == 1 || v8 != v11 || v7 != v12)
  {
    [v114 invalidateLayout];
    id v9 = v114;
  }
  id v16 = &v9[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius];
  double v17 = *(double *)&v9[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius];
  double v18 = *(double *)&v9[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius + 8];
  int v19 = v9[OBJC_IVAR____TtC21JournalShareExtension12MosaicLayout_outerBottomCornerRadius + 16];
  *(double *)id v16 = v8;
  *((double *)v16 + 1) = v7;
  v16[16] = 0;
  if (v19 == 1 || v8 != v17 || v7 != v18) {
    [v114 invalidateLayout];
  }
  id v22 = [objc_allocWithZone((Class)type metadata accessor for CanvasGridCollectionView()) initWithFrame:v114 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  uint64_t v23 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridCollectionView;
  id v24 = *(void **)&v2[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridCollectionView];
  *(void *)&v2[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridCollectionView] = v22;

  uint64_t v25 = *(void **)&v2[v23];
  if (v25)
  {
    id v26 = v25;
    [v26 setDataSource:v2];
    sub_1000512E4(v26);
    id v112 = *(id *)&v2[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_containerView];
    [v112 addSubview:v26];
    id v27 = [v26 heightAnchor];
    id v28 = [v2 view];
    if (v28)
    {
      id v29 = v28;
      if (a1 >= 5) {
        double v30 = 0.5;
      }
      else {
        double v30 = 0.25;
      }
      id v31 = [v28 widthAnchor];

      id v32 = [v27 constraintEqualToAnchor:v31 multiplier:v30 constant:-sub_10002F204()];
      id v33 = [v26 widthAnchor];
      id v34 = [v2 view];
      if (v34)
      {
        id v35 = v34;
        id v36 = [v34 heightAnchor];

        id v37 = [v33 constraintEqualToAnchor:v36];
        id v38 = [v26 centerXAnchor];
        id v39 = [v2 view];
        if (v39)
        {
          id v40 = v39;
          uint64_t v113 = a1;
          id v41 = [v39 centerXAnchor];

          id v42 = [v38 constraintEqualToAnchor:v41];
          id v43 = &v2[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_regularConstraints];
          swift_beginAccess();
          if (*(void *)v43 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v44 = sub_10010AA80();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v44 = *(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (__OFADD__(v44, 3))
          {
            __break(1u);
          }
          else
          {
            sub_100037418(v44 + 3);
            sub_100109F50();
            id v32 = v32;
            sub_100109F10();
            if (*(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
              goto LABEL_32;
          }
          sub_100109F70();
LABEL_32:
          sub_100109FA0();
          sub_100109F50();
          id v45 = v37;
          sub_100109F10();
          if (*(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            sub_100109F70();
          sub_100109FA0();
          sub_100109F50();
          id v46 = v42;
          sub_100109F10();
          if (*(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v43 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            sub_100109F70();
          sub_100109FA0();
          sub_100109F50();
          swift_endAccess();

          id v47 = [v2 view];
          if (v47)
          {
            uint64_t v48 = v47;
            [v47 frame];
            double v50 = v49;

            id v51 = [v2 view];
            if (v51)
            {
              Swift::String v52 = v51;
              [v51 frame];
              double v54 = v53;

              if (v54 >= v50) {
                double v55 = v50;
              }
              else {
                double v55 = v54;
              }
              uint64_t v56 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin;
              double v57 = v55
                  - *(double *)&v2[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController____lazy_storage___contentMargin];
              if (qword_100158988 != -1) {
                swift_once();
              }
              double v58 = (v57 - (*(double *)&qword_10016DD80 + *(double *)&qword_10016DD80)) * 0.5;
              if (qword_100158998 != -1) {
                swift_once();
              }
              if (v113 <= 5) {
                double v59 = v58 + *(double *)&qword_10016DD90;
              }
              else {
                double v59 = v58 + *(double *)&qword_10016DD90 + v58 + *(double *)&qword_10016DD90;
              }
              id v60 = [v26 heightAnchor];
              id v61 = [v60 constraintEqualToConstant:v59];

              id v62 = [v26 leadingAnchor];
              id v63 = [v2 view];
              if (v63)
              {
                uint64_t v64 = v63;
                id v65 = [v63 leadingAnchor];

                id v66 = [v62 constraintEqualToAnchor:v65 constant:*(double *)&v2[v56]];
                id v67 = [v26 trailingAnchor];
                id v68 = [v2 view];
                if (v68)
                {
                  uint64_t v69 = v68;
                  id v70 = [v68 trailingAnchor];

                  id v71 = [v67 constraintEqualToAnchor:v70 constant:-*(double *)&v2[v56]];
                  unint64_t v72 = &v2[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_compactConstraints];
                  swift_beginAccess();
                  if (*(void *)v72 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v110 = sub_10010AA80();
                    swift_bridgeObjectRelease();
                    uint64_t v74 = v110 + 3;
                    if (!__OFADD__(v110, 3))
                    {
LABEL_52:
                      sub_100037418(v74);
                      sub_100109F50();
                      id v61 = v61;
                      sub_100109F10();
                      if (*(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8)
                                                                                                  + 0x18) >> 1)
                        goto LABEL_53;
                      goto LABEL_84;
                    }
                  }
                  else
                  {
                    uint64_t v73 = *(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    uint64_t v74 = v73 + 3;
                    if (!__OFADD__(v73, 3)) {
                      goto LABEL_52;
                    }
                  }
                  __break(1u);
LABEL_84:
                  sub_100109F70();
LABEL_53:
                  sub_100109FA0();
                  sub_100109F50();
                  id v75 = v66;
                  sub_100109F10();
                  if (*(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
                    sub_100109F70();
                  sub_100109FA0();
                  sub_100109F50();
                  id v76 = v71;
                  sub_100109F10();
                  if (*(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v72 & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
                    sub_100109F70();
                  sub_100109FA0();
                  sub_100109F50();
                  swift_endAccess();

                  if (v113 < 14)
                  {
                    id v106 = [v26 superview];
                    if (!v106)
                    {
LABEL_73:
                      if (qword_100158970 != -1) {
                        swift_once();
                      }

                      if (v113 <= 5) {
                        [v2 presentKeyboard];
                      }

                      return;
                    }
                    id v105 = v106;
                    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
                    id v107 = [v26 topAnchor];
                    id v108 = [v105 topAnchor];
                    id v109 = [v107 constraintEqualToAnchor:v108];

                    [v109 setConstant:0.0];
                    id v77 = v109;
                    [v77 setActive:1];
                  }
                  else
                  {
                    id v77 = [objc_allocWithZone((Class)UILabel) init];
                    [v77 setNumberOfLines:2];
                    [v77 setLineBreakMode:0];
                    if (qword_100158948 != -1) {
                      swift_once();
                    }
                    [v77 setFont:qword_10016DD40];
                    id v78 = [self labelColor];
                    [v77 setTextColor:v78];

                    [v77 setTextAlignment:1];
                    int v79 = (objc_class *)[self mainBundle];
                    v116._countAndFlagsBits = 0xD00000000000003ALL;
                    v111._countAndFlagsBits = 0x800000010010E260;
                    v116._object = (void *)0x800000010010E220;
                    v117.value._countAndFlagsBits = 0;
                    v117.value._object = 0;
                    v80.super.Class isa = v79;
                    v118._countAndFlagsBits = 0;
                    v118._object = (void *)0xE000000000000000;
                    sub_100108F60(v116, v117, v80, v118, v111);

                    NSString v81 = sub_100109CF0();
                    swift_bridgeObjectRelease();
                    [v77 setText:v81];

                    [v77 sizeToFit];
                    [v112 addSubview:v77];
                    double v82 = *(double *)&qword_10016DD80;
                    id v83 = [v77 superview];
                    if (v83)
                    {
                      uint64_t v84 = v83;
                      [v77 setTranslatesAutoresizingMaskIntoConstraints:0];
                      id v85 = [v77 topAnchor];
                      id v86 = [v84 topAnchor];
                      id v87 = [v85 constraintEqualToAnchor:v86];

                      [v87 setConstant:v82];
                      id v88 = v87;
                      [v88 setActive:1];
                    }
                    double v89 = *(double *)&qword_10016DD80;
                    id v90 = [v77 superview];
                    if (v90)
                    {
                      uint64_t v91 = v90;
                      [v77 setTranslatesAutoresizingMaskIntoConstraints:0];
                      id v92 = [v77 leadingAnchor];
                      id v93 = [v91 leadingAnchor];
                      id v94 = [v92 constraintEqualToAnchor:v93];

                      [v94 setConstant:v89];
                      id v95 = v94;
                      [v95 setActive:1];
                    }
                    double v96 = *(double *)&qword_10016DD80;
                    id v97 = [v77 superview];
                    if (v97)
                    {
                      uint64_t v98 = v97;
                      [v77 setTranslatesAutoresizingMaskIntoConstraints:0];
                      id v99 = [v77 trailingAnchor];
                      id v100 = [v98 trailingAnchor];
                      id v101 = [v99 constraintEqualToAnchor:v100];

                      [v101 setConstant:-v96];
                      id v102 = v101;
                      [v102 setActive:1];
                    }
                    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
                    id v103 = [v26 topAnchor];
                    id v104 = [v77 bottomAnchor];
                    id v105 = [v103 constraintEqualToAnchor:v104];

                    [v105 setConstant:0.0];
                    [v105 setActive:1];
                  }

                  goto LABEL_73;
                }
LABEL_91:
                __break(1u);
                JUMPOUT(0x1000344A8);
              }
LABEL_90:
              __break(1u);
              goto LABEL_91;
            }
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
LABEL_88:
          __break(1u);
          goto LABEL_89;
        }
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_87;
  }
}

uint64_t sub_1000344C0(unint64_t a1)
{
  uint64_t v2 = sub_100109A70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10010AA80();
    uint64_t result = swift_bridgeObjectRelease();
    if (v15 < 1) {
      return result;
    }
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return result;
  }
  double v11 = dispatch_group_create();
  uint64_t v18 = v6;
  sub_10008AF38(a1, v11);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  uint64_t v17 = sub_10010A410();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  _OWORD aBlock[4] = sub_100037BC8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_1001419F8;
  int v13 = _Block_copy(aBlock);
  swift_retain();
  sub_100109A90();
  int v19 = _swiftEmptyArrayStorage;
  sub_100037A8C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  id v14 = (void *)v17;
  sub_10010A380();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v18);
  swift_release();
  return swift_release();
}

void sub_100034810()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView);
  if (qword_1001589C8 != -1) {
    swift_once();
  }
  id v2 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v3 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithString:v3 attributes:0];

  [v1 setAttributedPlaceholder:v4];
  id v5 = [v1 _placeholderLabel];
  if (v5)
  {
    id v6 = v5;
    [v5 setNumberOfLines:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100034934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100109A70();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100109AC0();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  os_log_type_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  double v11 = (void *)sub_10010A410();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v13 = (void *)swift_allocObject();
  v13[2] = v12;
  _OWORD v13[3] = a1;
  v13[4] = a2;
  _OWORD aBlock[4] = sub_100037BBC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_1001419D0;
  id v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100037A8C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

void sub_100034C24(uint64_t a1, uint64_t a2, NSString a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView);

    if (a3) {
      a3 = sub_100109CF0();
    }
    [v6 setText:a3];
  }
  swift_beginAccess();
  uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 presentKeyboard];
  }
}

void sub_100034D04()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v1 = (char *)Strong;
  uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_dataManager);
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    uint64_t v4 = v1;
    sub_1000DBD18(v4, (uint64_t)sub_100037BD0, v3);

    swift_release();
    return;
  }
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10010AA80();
    if (v6) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_6:
      sub_10010A9D0();
      if (v6 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v7 = 0;
      do
      {
        if ((v5 & 0xC000000000000001) != 0) {
          sub_10010A920();
        }
        else {
          id v8 = *(id *)(v5 + 8 * v7 + 32);
        }
        ++v7;
        sub_10010A9B0();
        sub_10010A9E0();
        sub_10010A9F0();
        sub_10010A9C0();
      }
      while (v6 != v7);
    }
  }
  swift_bridgeObjectRelease();
  *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_photoAssets] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_gridCollectionView];
  if (v9)
  {
    id v10 = v9;
    [v10 reloadData];
  }
}

void sub_100034F18(void *a1)
{
  id v1 = [a1 extensionContext];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_100004BD4(&qword_10015A680);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100122230;
    *(void *)(inited + 32) = sub_100109D30();
    *(void *)(inited + 40) = v4;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD00000000000002DLL;
    *(void *)(inited + 56) = 0x800000010010E1F0;
    sub_10007B770(inited);
    id v5 = objc_allocWithZone((Class)NSError);
    NSString v6 = sub_100109CF0();
    Class isa = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    id v8 = [v5 initWithDomain:v6 code:-1 userInfo:isa];

    uint64_t v9 = (void *)sub_100108FB0();
    [v2 cancelRequestWithError:v9];
  }
}

uint64_t sub_100035088(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  double v11 = &v31[-v10];
  __chkstk_darwin(v9);
  int v13 = &v31[-v12];
  uint64_t v14 = sub_1001091E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = &v31[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  id v20 = &v31[-v19];
  sub_100019290(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_10000B9CC((uint64_t)v13, (uint64_t *)&unk_100159D40);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v20, v13, v14);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (void *)Strong;
    id v24 = *(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkView);

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v11, v20, v14);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    uint64_t v25 = (uint64_t)v24 + OBJC_IVAR____TtC21JournalShareExtension17LinkAssetGridView_linkURL;
    swift_beginAccess();
    sub_100037B14((uint64_t)v11, v25);
    swift_endAccess();
    sub_100019290(v25, (uint64_t)v8);
    sub_1000179DC((uint64_t)v8);
    sub_10000B9CC((uint64_t)v8, (uint64_t *)&unk_100159D40);
    sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_100159D40);
  }
  swift_beginAccess();
  uint64_t v26 = swift_unknownObjectWeakLoadStrong();
  if (v26)
  {
    id v27 = (char *)v26;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v18, v20, v14);
    sub_100109450();
    uint64_t v28 = sub_100109460();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v4, 0, 1, v28);
    id v29 = sub_1000A39FC(6, (uint64_t)v18, (uint64_t)v4);
    double v30 = *(void **)&v27[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkAsset];
    *(void *)&v27[OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkAsset] = v29;
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(v20, v14);
}

uint64_t sub_100035460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_100004BD4((uint64_t *)&unk_10015A850);
  v5[5] = swift_task_alloc();
  uint64_t v6 = sub_10010A4C0();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  sub_10010A060();
  v5[9] = sub_10010A050();
  uint64_t v8 = sub_100109FF0();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_100035584, v8, v7);
}

uint64_t sub_100035584()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 96) = v4;
  *(void *)(v4 + 16) = v3;
  *(_DWORD *)(v0 + 264) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v5 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v5(v1);
  id v6 = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v7;
  uint64_t v8 = type metadata accessor for Journaling.EntryViewModel();
  *uint64_t v7 = v0;
  v7[1] = sub_1000356DC;
  uint64_t v9 = *(void *)(v0 + 64);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 16, v9, sub_100037848, v4, v8);
}

uint64_t sub_1000356DC()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  uint64_t v4 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v1[16] = v5;
  v1[17] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  uint64_t v6 = v1[11];
  uint64_t v7 = v1[10];
  return _swift_task_switch(sub_10003588C, v7, v6);
}

uint64_t sub_10003588C()
{
  uint64_t v1 = v0[4];
  v0[18] = v0[2];
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_photoAssets);
  v0[19] = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10010AA80();
    v0[20] = v3;
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
      }
      else
      {
        v0[23] = 0;
        uint64_t v4 = v0[19];
        if ((v4 & 0xC000000000000001) != 0) {
          id v5 = (id)sub_10010A920();
        }
        else {
          id v5 = *(id *)(v4 + 32);
        }
        v0[24] = v5;
        if (qword_100158C98 == -1) {
          goto LABEL_8;
        }
      }
      swift_once();
LABEL_8:
      uint64_t v6 = qword_10016E178;
      v0[25] = qword_10016E178;
      return _swift_task_switch(sub_100035D74, v6, 0);
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[20] = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = v0[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(v7 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkAsset);
  v0[21] = v8;
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[22] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100035B38;
    return sub_1000B4AE8((uint64_t)v9);
  }
  else
  {
    id v11 = [*(id *)(v0[4] + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView) attributedText];
    id v12 = v11;
    uint64_t v13 = v0[18];
    if (v11)
    {
      if (*(void *)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text))
      {
        unsigned __int8 v14 = [v11 isEqualToAttributedString:];
        uint64_t v13 = v0[18];
        if ((v14 & 1) == 0)
        {
          *(unsigned char *)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged) = 1;
          uint64_t v13 = v0[18];
        }
      }
    }
    uint64_t v15 = *(void **)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
    *(void *)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text) = v12;

    uint64_t v16 = (void *)swift_task_alloc();
    v0[30] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_10003656C;
    return sub_1000EE3B8();
  }
}

uint64_t sub_100035B38()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100035C58, v3, v2);
}

uint64_t sub_100035C58()
{
  id v1 = [*(id *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView) attributedText];
  id v2 = v1;
  uint64_t v3 = *(void *)(v0 + 144);
  if (v1)
  {
    if (*(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text))
    {
      unsigned __int8 v4 = [v1 isEqualToAttributedString:];
      uint64_t v3 = *(void *)(v0 + 144);
      if ((v4 & 1) == 0)
      {
        *(unsigned char *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged) = 1;
        uint64_t v3 = *(void *)(v0 + 144);
      }
    }
  }
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
  *(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text) = v2;

  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10003656C;
  return sub_1000EE3B8();
}

uint64_t sub_100035D74()
{
  *(CFAbsoluteTime *)(v0 + 208) = CFAbsoluteTimeGetCurrent();
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  void *v1 = v0;
  v1[1] = sub_100035E1C;
  uint64_t v2 = *(void *)(v0 + 192);
  return sub_1000B8F64(v2, 0, 1);
}

uint64_t sub_100035E1C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100035F18, 0, 0);
}

uint64_t sub_100035F18()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104);
  uint64_t v2 = *(unsigned int *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  *(void *)(v0 + 224) = swift_allocObject();
  swift_weakInit();
  v1(v3, v2, v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100036038;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_100036038()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 128);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1000361BC, 0, 0);
}

uint64_t sub_1000361BC()
{
  return _swift_task_switch(sub_1000361D8, *(void *)(v0 + 200), 0);
}

uint64_t sub_1000361D8()
{
  uint64_t v1 = (char *)v0[24];
  uint64_t v2 = v0[5];
  uint64_t v3 = &v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id];
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v2, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  sub_1000B8D20(v2);
  sub_10000B9CC(v2, (uint64_t *)&unk_10015A850);
  sub_1000BAAE8(v1);
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  return _swift_task_switch(sub_100036308, v6, v7);
}

uint64_t sub_100036308()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);

  if (v1 + 1 == v2)
  {
    uint64_t v3 = *(void *)(v0 + 32);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_linkAsset);
    *(void *)(v0 + 168) = v4;
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_100035B38;
      return sub_1000B4AE8((uint64_t)v5);
    }
    else
    {
      id v11 = [*(id *)(*(void *)(v0 + 32)+ OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_textView) attributedText];
      id v12 = v11;
      uint64_t v13 = *(void *)(v0 + 144);
      if (v11)
      {
        if (*(void *)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text))
        {
          unsigned __int8 v14 = [v11 isEqualToAttributedString:];
          uint64_t v13 = *(void *)(v0 + 144);
          if ((v14 & 1) == 0)
          {
            *(unsigned char *)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged) = 1;
            uint64_t v13 = *(void *)(v0 + 144);
          }
        }
      }
      uint64_t v15 = *(void **)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
      *(void *)(v13 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text) = v12;

      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_10003656C;
      return sub_1000EE3B8();
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v8;
    uint64_t v9 = *(void *)(v0 + 152);
    if ((v9 & 0xC000000000000001) != 0) {
      id v10 = (id)sub_10010A920();
    }
    else {
      id v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    *(void *)(v0 + 192) = v10;
    if (qword_100158C98 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_10016E178;
    *(void *)(v0 + 200) = qword_10016E178;
    return _swift_task_switch(sub_100035D74, v17, 0);
  }
}

uint64_t sub_10003656C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_10015CF20 + dword_10015CF20);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 248) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1000366C4;
  uint64_t v4 = *(void *)(v1 + 144);
  return v6(v4);
}

uint64_t sub_1000366C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    id v5 = sub_10003688C;
  }
  else {
    id v5 = sub_100036800;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100036800()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003688C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100036918@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Journaling.EntrySource();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_10015A630);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 2, v10);
  id v11 = *(id *)(a1 + OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_context);
  sub_1001094E0();
  uint64_t v12 = sub_1001094F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
  id v13 = sub_10006C7AC((uint64_t)v9, (uint64_t)v11, (uint64_t)v6);
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  uint64_t v14 = sub_1000ECAF8(v13, 1, 1, v11);
  sub_10000B9CC((uint64_t)v6, (uint64_t *)&unk_10015A850);
  uint64_t result = sub_1000378B8((uint64_t)v9);
  *a2 = v14;
  return result;
}

uint64_t sub_100036AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_100109460();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_10010A060();
  v4[6] = sub_10010A050();
  uint64_t v7 = sub_100109FF0();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_100036BE8, v7, v6);
}

uint64_t sub_100036BE8()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_mindfulnessManager);
  v0[9] = v1;
  if (v1)
  {
    swift_retain();
    sub_100109430();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    void *v2 = v0;
    v2[1] = sub_100036D14;
    uint64_t v3 = v0[5];
    return sub_1000E4050(v3, 0);
  }
  else
  {
    swift_release();
    if (*(void *)(v0[2] + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker))
    {
      swift_retain();
      sub_10009C1E8();
      swift_release();
    }
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100036D14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100036EB4, v6, v5);
}

uint64_t sub_100036EB4()
{
  swift_release();
  if (*(void *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_canvasIdleTracker))
  {
    swift_retain();
    sub_10009C1E8();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100036FE0(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = sub_100109CF0();
  Class isa = sub_100109600().super.isa;
  unint64_t v6 = (unint64_t)[a1 dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  type metadata accessor for MosaicCell();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v8 = v7;
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_photoAssets;
  unint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension27JurassicShareViewController_photoAssets);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v15 != 1) {
      goto LABEL_15;
    }
  }
  else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_15;
  }
  unint64_t v6 = *(void *)(v1 + v9);
  if (!(v6 >> 62))
  {
    uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_6;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  if (!sub_10010AA80()) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0xC000000000000001) != 0) {
    goto LABEL_23;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_25:

    __break(1u);
    return;
  }
  for (id i = *(id *)(v6 + 32); ; id i = (id)sub_10010A920())
  {
    id v13 = i;
    swift_bridgeObjectRelease();
    _s10PhotoAssetCMa(0);
    uint64_t v14 = swift_dynamicCastClass();

    if (v14) {
      *(unsigned char *)(v8 + OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_hasOnlyOneImage) = 1;
    }
LABEL_15:
    unint64_t v16 = sub_100109620();
    uint64_t v17 = *(void *)(v2 + v9);
    if ((v17 & 0xC000000000000001) != 0) {
      break;
    }
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v18 = *(id *)(v17 + 8 * v16 + 32);
      goto LABEL_19;
    }
    __break(1u);
LABEL_23:
    ;
  }
  swift_bridgeObjectRetain();
  id v18 = (id)sub_10010A920();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v19 = *(void **)(v8 + OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_journalAsset);
  *(void *)(v8 + OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_journalAsset) = v18;
  id v20 = v18;

  sub_100074028();
}

uint64_t sub_1000373D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100037410(char a1)
{
  return sub_100032610(a1);
}

uint64_t sub_100037418(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_10010AA80();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_10010A930();
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_1000374D8()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032394();
  id v4 = [v0 extensionContext];
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 completeRequestReturningItems:0 completionHandler:0];
  }
  uint64_t v6 = sub_10010A080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  sub_10010A060();
  id v7 = v0;
  uint64_t v8 = sub_10010A050();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v7;
  sub_10004C59C((uint64_t)v3, (uint64_t)&unk_10015A608, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_10003762C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100037664()
{
  return sub_1000328D8();
}

uint64_t sub_10003766C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003767C()
{
  return swift_release();
}

uint64_t sub_100037688(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1000091E4;
  return sub_100036AF4(a1, v4, v5, v6);
}

uint64_t sub_100037740()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100037788(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000090F0;
  return sub_100035460(a1, v4, v5, v7, v6);
}

uint64_t sub_100037848@<X0>(uint64_t *a1@<X8>)
{
  return sub_100036918(*(void *)(v1 + 16), a1);
}

uint64_t sub_100037864()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10003789C()
{
}

uint64_t sub_1000378B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Journaling.EntrySource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100037914()
{
  unint64_t result = qword_10015A840;
  if (!qword_10015A840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A840);
  }
  return result;
}

uint64_t sub_10003796C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000091E4;
  return sub_100031920(a1, v4, v5, v6);
}

uint64_t sub_100037A20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100037A7C(uint64_t a1, uint64_t a2)
{
  return sub_100034934(a1, a2);
}

uint64_t sub_100037A84(uint64_t a1)
{
  return sub_100035088(a1);
}

uint64_t sub_100037A8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100037AD4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100037B0C(uint64_t a1, uint64_t a2)
{
  return sub_10008B81C(a1, a2, *(void (**)(char *))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100037B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_100159D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037B7C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100037BBC()
{
  sub_100034C24(*(void *)(v0 + 16), *(void *)(v0 + 24), *(NSString *)(v0 + 32));
}

void sub_100037BC8()
{
}

void sub_100037BD0()
{
  sub_100034F18(*(void **)(v0 + 16));
}

uint64_t sub_100037BDC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100037C1C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000090F0;
  return sub_1000301E4();
}

char *sub_100037CEC(uint64_t a1, long long *a2, void *a3, void *a4)
{
  uint64_t v8 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_basePOICircleView;
  id v9 = objc_allocWithZone((Class)UIImageView);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v10[v13] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v14 = &v10[OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration];
  long long v15 = *a2;
  long long v16 = a2[1];
  *((void *)v14 + 4) = *((void *)a2 + 4);
  *(_OWORD *)uint64_t v14 = v15;
  *((_OWORD *)v14 + 1) = v16;
  sub_100038934((id *)a2);

  v46.receiver = v10;
  v46.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  uint64_t v17 = (char *)[v46 initWithAnnotation:a1 reuseIdentifier:0];
  uint64_t v18 = sub_10009202C();
  double v19 = 0.0;
  double v20 = 0.0;
  double v21 = 0.0;
  double v22 = 0.0;
  double v23 = 0.0;
  if ((v24 & 1) == 0) {
    double v20 = nullsub_1(0.0, 0.0, *(double *)&v18, *(double *)&v18);
  }
  [v17 setFrame:v20, v21, v22, v23];
  uint64_t v25 = &v17[OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_basePOICircleView];
  id v26 = *(id *)&v17[OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_basePOICircleView];
  double v27 = COERCE_DOUBLE(sub_10009202C());
  double v28 = 0.0;
  double v29 = 0.0;
  double v30 = 0.0;
  if ((v31 & 1) == 0)
  {
    if ((*((uint64_t *)a2 + 2) > 1
       || (*((unsigned char *)a2 + 24) & 1) != 0
       || (*((unsigned char *)a2 + 26) & 1) != 0 && (*((unsigned char *)a2 + 9) & 1) == 0)
      && (*((unsigned char *)a2 + 25) & 1) != 0)
    {
      double v34 = v27 * 0.45;
      double v32 = (v27 - v27 * 0.45) * 0.5;
      double v33 = v32;
    }
    else
    {
      double v32 = v27 * 0.55 * 0.5;
      double v33 = *((double *)a2 + 4);
      double v34 = v27 * 0.45;
    }
    double v19 = nullsub_1(v32, v33, v34, v34);
  }
  [v26 setFrame:v19, v28, v29, v30];

  sub_100038518(a3, a4);
  if (*((uint64_t *)a2 + 2) > 1)
  {
    sub_1000389CC();
    sub_10003829C();
    [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView]];
    uint64_t v25 = &v17[OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_clusterCountLabel];
    goto LABEL_20;
  }
  if (*((unsigned char *)a2 + 24))
  {
    sub_1000389CC();
    uint64_t v35 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView;
    goto LABEL_19;
  }
  if (*((unsigned char *)a2 + 26) & 1) == 0 || (*((unsigned char *)a2 + 9))
  {
    sub_1000380F8();
    uint64_t v35 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_downArrowView;
LABEL_19:
    [v17 addSubview:*(void *)&v17[v35]];
  }
LABEL_20:
  [v17 addSubview:*(void *)v25];
  uint64_t v36 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView;
  id v37 = [*(id *)&v17[OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView] layer];
  id v38 = [self secondarySystemBackgroundColor];
  id v39 = [v38 CGColor];

  [v37 setShadowColor:v39];
  id v40 = [*(id *)&v17[v36] layer];
  LODWORD(v41) = 0.5;
  [v40 setShadowOpacity:v41];

  id v42 = [*(id *)&v17[v36] layer];
  [v42 setShadowRadius:5.0];

  id v43 = [*(id *)&v17[v36] layer];
  [v43 setShadowPathIsBounds:1];
  sub_100038960(a3, a4);
  sub_1000389A0((id *)a2);

  swift_unknownObjectRelease();
  return v17;
}

void sub_1000380F8()
{
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration + 16) <= 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration + 24) == 0
    && (*(unsigned __int8 *)(v0
                           + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration
                           + 26) ^ 1 | *(unsigned __int8 *)(v0
                                                          + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration
                                                          + 9)) != 0)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_downArrowView);
    double v4 = *(double *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration + 32);
    double v5 = COERCE_DOUBLE(sub_10009202C());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v6 & 1) == 0) {
      double v7 = nullsub_1(v5 * 0.4, v4 + v5 * 0.3, v5 * 0.2, v5 * 0.2);
    }
    [v3 setFrame:v7, v8, v9, v10];
    NSString v11 = sub_100109CF0();
    id v12 = [self systemImageNamed:v11];

    [v3 setImage:v12];
    [v3 setContentMode:2];
  }
}

void sub_10003829C()
{
  uint64_t v1 = (double *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration + 16);
  if (v2 >= 2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_clusterCountLabel);
    int v4 = *((unsigned __int8 *)v1 + 25);
    double v5 = v1[4];
    uint64_t v23 = *(void *)v1;
    LOWORD(v24) = *((_WORD *)v1 + 4);
    uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_configuration + 16);
    LOWORD(v26) = *((_WORD *)v1 + 12);
    BYTE2(v26) = *((unsigned char *)v1 + 26);
    double v6 = COERCE_DOUBLE(sub_10009202C());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v11 & 1) == 0)
    {
      if (v4)
      {
        double v12 = v6 * 0.45;
        double v13 = (v6 - v6 * 0.45) * 0.5;
        double v14 = v13;
      }
      else
      {
        double v13 = v6 * 0.55 * 0.5;
        double v12 = v6 * 0.45;
        double v14 = v5;
      }
      double v7 = nullsub_1(v13, v14, v12, v12);
    }
    [v3 setFrame:v7, v8, v9, v10];
    uint64_t v22 = v2;
    sub_10010AC60();
    NSString v15 = sub_100109CF0();
    swift_bridgeObjectRelease();
    [v3 setText:v15, v22, v23, v24, v25, v26, *(void *)&v5];

    [v3 setTextAlignment:1];
    id v16 = [self whiteColor];
    [v3 setTextColor:v16];

    double v17 = COERCE_DOUBLE(sub_10009202C());
    double v18 = 15.0;
    if ((v19 & 1) == 0) {
      double v18 = v17 / 6.0;
    }
    id v20 = [self boldSystemFontOfSize:v18];
    [v3 setFont:v20];

    [v3 setAdjustsFontSizeToFitWidth:1];
    [v3 setClipsToBounds:1];
    id v21 = [v3 layer];
    [v3 frame];
    [v21 setCornerRadius:CGRectGetWidth(v27) * 0.5];
  }
}

void sub_100038518(void *a1, void *a2)
{
  if (a1)
  {
    int v4 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_basePOICircleView);
    id v19 = a1;
    id v5 = a2;
    [v4 setImage:v5];
    [*(id *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v19];
    [*(id *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v19];
  }
  else
  {
    double v6 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_basePOICircleView);
    [v6 frame];
    double v7 = CGRectGetWidth(v21) * 0.25;
    [v6 frame];
    double v8 = CGRectGetHeight(v22) * 0.23;
    [v6 frame];
    double v9 = CGRectGetWidth(v23) * 0.5;
    [v6 frame];
    CGFloat Height = CGRectGetHeight(v24);
    double v11 = nullsub_1(v7, v8, v9, Height * 0.5);
    id v15 = [objc_allocWithZone((Class)UIImageView) initWithFrame:v11, v12, v13, v14];
    id v19 = v15;
    if (qword_100158A08 != -1)
    {
      swift_once();
      id v15 = v19;
    }
    [v15 setImage:qword_10016DE60];
    id v16 = [self systemWhiteColor];
    [v19 setTintColor:v16];

    if (qword_100158928 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_10016DD20;
    [v6 setBackgroundColor:qword_10016DD20];
    [*(id *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v17];
    [*(id *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v17];
    id v18 = [v6 layer];
    [v6 frame];
    [v18 setCornerRadius:CGRectGetHeight(v25) * 0.5];

    [v6 addSubview:v19];
  }
}

id sub_100038860()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  return [super dealloc];
}

uint64_t _s19MOPOIAnnotationViewCMa()
{
  return self;
}

id *sub_100038934(id *a1)
{
  id v2 = *a1;
  return a1;
}

void sub_100038960(void *a1, void *a2)
{
  if (a1)
  {
  }
}

id *sub_1000389A0(id *a1)
{
  return a1;
}

void sub_1000389CC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView);
  [v1 setFrame:sub_100091DDC()];
  id v2 = [v1 layer];
  id v3 = [self whiteColor];
  id v4 = [v3 CGColor];

  [v2 setBackgroundColor:v4];
  [v1 setClipsToBounds:1];
  id v5 = [v1 layer];
  [v1 frame];
  [v5 setCornerRadius:CGRectGetWidth(v7) * 0.5];
}

void sub_100038B24()
{
  uint64_t v1 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_basePOICircleView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];

  sub_10010AA60();
  __break(1u);
}

void *sub_100038C0C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  id v2 = v1;
  return v1;
}

uint64_t sub_100038C3C(uint64_t a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v3 = v2;
  sub_100004BD4(&qword_10015A8C8);
  sub_10010A4B0();

  return v5 & 1;
}

uint64_t sub_100038CF4(uint64_t a1)
{
  return sub_100038D44(a1, (uint64_t)&unk_100141CC0, (uint64_t)sub_100041FA0, (uint64_t)&unk_100141CD8);
}

uint64_t sub_100038D1C(uint64_t a1)
{
  return sub_100038D44(a1, (uint64_t)&unk_100141C70, (uint64_t)sub_100041F98, (uint64_t)&unk_100141C88);
}

uint64_t sub_100038D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CGRect v7 = v4;
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v8 - 8);
  double v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001094F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100108E30();
  if (!v23)
  {
    sub_10000B9CC((uint64_t)aBlock, &qword_10015A8A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_10000B9CC((uint64_t)v10, (uint64_t *)&unk_10015A850);
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v15 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10000B9CC((uint64_t)v10, (uint64_t *)&unk_10015A850);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (sub_1001094A0())
  {
    id v16 = *(void **)&v4[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context];
    if (v16)
    {
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v4;
      uint64_t v24 = a3;
      uint64_t v25 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001DEE8;
      uint64_t v23 = a4;
      id v18 = _Block_copy(aBlock);
      id v19 = v16;
      id v20 = v7;
      swift_release();
      [v19 performBlock:v18];
      _Block_release(v18);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_100039014(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  double v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context);
  *(void *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context) = a1;
  id v15 = a1;

  type metadata accessor for JournalEntryAssetMO();
  id v16 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v15];
  Class isa = sub_100109480().super.isa;
  [v16 setId:isa];

  sub_100109450();
  Class v18 = sub_1001093D0().super.isa;
  id v37 = *(void (**)(char *, uint64_t))(v11 + 8);
  v37(v13, v10);
  [v16 setCreatedDate:v18];

  sub_10008215C(*(unsigned char *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type));
  NSString v19 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v16 setAssetType:v19];

  id v20 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title);
  if (v20 && (id v21 = v20, v22 = sub_1000823F0(), v24 = v23, v21, v24 >> 60 != 15))
  {
    Class v25 = sub_100109240().super.isa;
    sub_100008508(v22, v24);
  }
  else
  {
    Class v25 = 0;
  }
  [v16 setTitle:v25];

  sub_1000828C8(*(unsigned char *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_source));
  NSString v26 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v16 setSource:v26];

  uint64_t v27 = v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionId;
  swift_beginAccess();
  sub_1000248D8(v27, (uint64_t)v9, (uint64_t *)&unk_10015A850);
  uint64_t v28 = sub_1001094F0();
  uint64_t v29 = *(void *)(v28 - 8);
  Class v30 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v28) != 1)
  {
    Class v30 = sub_100109480().super.isa;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
  }
  [v16 setSuggestionId:v30];

  uint64_t v31 = v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_1000248D8(v31, (uint64_t)v6, (uint64_t *)&unk_10015CDE0);
  Class v32 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
  {
    Class v32 = sub_1001093D0().super.isa;
    v37(v6, v10);
  }
  [v16 setSuggestionDate:v32];

  [v16 setIsHidden:*(unsigned __int8 *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_isHidden)];
  double v33 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  *(void *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO) = v16;
  id v34 = v16;

  return v34;
}

id sub_1000394B0(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for ThumbnailCacheOperation());
  double v14 = v6;
  swift_bridgeObjectRetain();
  return sub_1000F780C(v14, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_100039544(uint64_t a1, char a2)
{
  return sub_10007AEE8(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id, a1, 0, 1, 0, 1, a2);
}

uint64_t sub_10003956C(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a6;
  uint64_t v35 = a4;
  uint64_t v34 = sub_100109A70();
  uint64_t v38 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  double v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100109AC0();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = &v31[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v32 = a3 & 1;
  if (a3) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = a2;
  }
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, void *))((swift_isaMask & *v7) + 0x2E0))(v18, a1, a5);
  uint64_t v21 = v20;
  uint64_t v22 = (void *)((char *)v7 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_thumbnailCacheKey);
  *uint64_t v22 = v19;
  v22[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v33;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = a7;
  *(void *)(v24 + 40) = v19;
  *(void *)(v24 + 48) = v21;
  *(unsigned char *)(v24 + 56) = a1;
  *(void *)(v24 + 64) = a2;
  *(unsigned char *)(v24 + 72) = v32;
  NSString v26 = v35;
  *(void *)(v24 + 80) = a5;
  *(void *)(v24 + 88) = v26;
  _OWORD aBlock[4] = sub_100041DE4;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  void aBlock[3] = &unk_100141B20;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v28 = a5;
  v26;
  sub_100109A90();
  id v39 = _swiftEmptyArrayStorage;
  sub_100041E3C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  uint64_t v29 = v34;
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v27);
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v14, v29);
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v17, v37);
  swift_release();
  return swift_release();
}

uint64_t sub_10003990C(uint64_t a1)
{
  return sub_10003997C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD000000000000023, 0x800000010010E620, &qword_10016DC98);
}

uint64_t sub_100039944(uint64_t a1)
{
  return sub_10003997C(a1, (void (*)(void))&static DispatchQoS.userInitiated.getter, 0xD000000000000016, 0x800000010010E5D0, &qword_10016DCA0);
}

uint64_t sub_10003997C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_10010A3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10010A3A0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_100109AC0();
  __chkstk_darwin(v12 - 8);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  a2();
  sub_10010A390();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = sub_10010A430();
  *a5 = result;
  return result;
}

uint64_t sub_100039B44(uint64_t a1)
{
  return sub_10003997C(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD000000000000024, 0x800000010010E5F0, &qword_10016DCA8);
}

uint64_t sub_100039B8C(uint64_t a1)
{
  uint64_t v3 = sub_100109460();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015A8A8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  sub_1000248D8(a1, (uint64_t)v57, &qword_10015A8A0);
  if (!v58)
  {
    sub_10000B9CC((uint64_t)v57, &qword_10015A8A0);
    goto LABEL_29;
  }
  _s5AssetCMa();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    char v51 = 0;
    return v51 & 1;
  }
  uint64_t v55 = v4;
  uint64_t v19 = v56;
  uint64_t ObjectType = swift_getObjectType();
  if (ObjectType != swift_getObjectType() || (sub_1001094A0() & 1) == 0) {
    goto LABEL_28;
  }
  double v53 = v1;
  double v54 = v19;
  char v21 = v19[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type];
  uint64_t v22 = sub_10008215C(*((unsigned char *)v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type));
  uint64_t v24 = v23;
  if (v22 == sub_10008215C(v21) && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
    NSString v26 = v54;
  }
  else
  {
    char v27 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v26 = v54;
    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
  }
  char v28 = v26[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_source];
  uint64_t v29 = sub_1000828C8(*((unsigned char *)v53 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_source));
  uint64_t v31 = v30;
  if (v29 == sub_1000828C8(v28) && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_22;
    }
  }
  uint64_t v34 = *(void **)((char *)v53 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title);
  uint64_t v35 = *(void **)&v54[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title];
  if (!v34)
  {
    if (!v35) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (!v35
    || (sub_10001CB98(0, &qword_10015B6F0),
        id v36 = v35,
        id v37 = v34,
        char v38 = sub_10010A6A0(),
        v37,
        v36,
        (v38 & 1) == 0))
  {
LABEL_22:

    goto LABEL_29;
  }
LABEL_17:
  uint64_t v39 = (uint64_t)v53 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_1000248D8(v39, (uint64_t)v18, (uint64_t *)&unk_10015CDE0);
  id v40 = &v54[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionDate];
  swift_beginAccess();
  sub_1000248D8((uint64_t)v40, (uint64_t)v16, (uint64_t *)&unk_10015CDE0);
  uint64_t v41 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000248D8((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_10015CDE0);
  sub_1000248D8((uint64_t)v16, v41, (uint64_t *)&unk_10015CDE0);
  uint64_t v42 = v55;
  id v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v43((uint64_t)v9, 1, v3) != 1)
  {
    sub_1000248D8((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_10015CDE0);
    uint64_t v46 = v42;
    if (v43(v41, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v6, v41, v3);
      sub_100041E3C((unint64_t *)&unk_10015A8B0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v47 = sub_100109C70();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v48(v6, v3);
      sub_10000B9CC((uint64_t)v16, (uint64_t *)&unk_10015CDE0);
      sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015CDE0);
      v48(v13, v3);
      uint64_t v45 = sub_10000B9CC((uint64_t)v9, (uint64_t *)&unk_10015CDE0);
      uint64_t v19 = v54;
      if (v47) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    sub_10000B9CC((uint64_t)v16, (uint64_t *)&unk_10015CDE0);
    sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015CDE0);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v3);
    uint64_t v19 = v54;
    goto LABEL_25;
  }
  sub_10000B9CC((uint64_t)v16, (uint64_t *)&unk_10015CDE0);
  sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015CDE0);
  unsigned int v44 = v43(v41, 1, v3);
  uint64_t v19 = v54;
  if (v44 != 1)
  {
LABEL_25:
    sub_10000B9CC((uint64_t)v9, &qword_10015A8A8);
LABEL_28:

    goto LABEL_29;
  }
  uint64_t v45 = sub_10000B9CC((uint64_t)v9, (uint64_t *)&unk_10015CDE0);
LABEL_27:
  char v49 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v53) + 0x200))(v45);
  char v50 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v19) + 0x200))();

  char v51 = v49 ^ v50 ^ 1;
  return v51 & 1;
}

Swift::Int sub_10003A308()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100109460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10010AE30();
  sub_1001094F0();
  sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_100109C10();
  sub_10008215C(*(unsigned char *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type));
  sub_100109DB0();
  swift_bridgeObjectRelease();
  sub_1000828C8(*(unsigned char *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_source));
  sub_100109DB0();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title);
  if (v9)
  {
    sub_10010ADE0(1u);
    id v10 = v9;
    sub_10010A6B0();
  }
  else
  {
    sub_10010ADE0(0);
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_1000248D8(v11, (uint64_t)v8, (uint64_t *)&unk_10015CDE0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_10010ADE0(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_10010ADE0(1u);
    sub_100041E3C(&qword_10015A898, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100109C10();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  long long v21 = v16;
  long long v22 = v17;
  uint64_t v23 = v18;
  long long v19 = v14;
  long long v20 = v15;
  return sub_10010AE10();
}

uint64_t sub_10003A62C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v3) {
    uint64_t result = (uint64_t)[v3 isSlim];
  }
  else {
    uint64_t result = 2;
  }
  *a2 = result;
  return result;
}

id sub_10003A67C(void *a1)
{
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v3 - 8);
  id v94 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v103 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  id v92 = (char *)&v91 - v9;
  __chkstk_darwin(v8);
  id v95 = (char *)&v91 - v10;
  uint64_t v11 = sub_1001094F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v93 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentIdsMissingFile] = &_swiftEmptySetSingleton;
  uint64_t v14 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context;
  *(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context] = 0;
  uint64_t v15 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO;
  *(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO] = 0;
  uint64_t v96 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title;
  *(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title] = 0;
  id v106 = *(void (**)(void))(v12 + 56);
  id v97 = &v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionId];
  v106();
  long long v16 = &v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionDate];
  uint64_t v17 = sub_100109460();
  uint64_t v18 = *(void *)(v17 - 8);
  long long v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v101 = v17;
  uint64_t v102 = (uint64_t)v16;
  uint64_t v99 = v18 + 56;
  id v100 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v16, 1, 1);
  long long v20 = &v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath];
  *long long v20 = 0;
  v20[1] = 0;
  long long v21 = &v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryURL];
  uint64_t v22 = sub_1001091E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = &v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_thumbnailCacheKey];
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v98 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_isHidden;
  v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_isHidden] = 0;
  uint64_t v24 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_delegates;
  uint64_t v25 = self;
  NSString v26 = v1;
  *(void *)&v1[v24] = [v25 weakObjectsHashTable];
  char v27 = &v26[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdate];
  *(void *)char v27 = 0;
  *((void *)v27 + 1) = 0;
  char v28 = v26;
  uint64_t v29 = &v26[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdateMediaFile];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  id v30 = [a1 managedObjectContext];
  uint64_t v31 = *(void **)&v1[v14];
  *(void *)&v1[v14] = v30;

  uint64_t v32 = *(void **)&v1[v15];
  *(void *)&v1[v15] = a1;
  id v33 = a1;

  uint64_t v104 = v15;
  uint64_t v105 = v11;
  uint64_t v34 = *(void **)&v1[v15];
  if (!v34)
  {
    uint64_t v35 = (uint64_t)v95;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v106)(v95, 1, 1, v11);
    uint64_t v44 = v11;
    uint64_t v41 = v33;
    uint64_t v42 = v26;
    uint64_t v45 = v104;
    uint64_t v46 = v93;
LABEL_7:
    sub_1001094E0();
    sub_10000B9CC(v35, (uint64_t *)&unk_10015A850);
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v42[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id], v46, v44);
    goto LABEL_9;
  }
  uint64_t v35 = (uint64_t)v95;
  id v36 = [v34 id];
  if (v36)
  {
    id v37 = v36;
    char v38 = v92;
    sub_1001094B0();

    uint64_t v39 = v38;
    uint64_t v40 = 0;
    uint64_t v41 = v33;
    uint64_t v42 = v28;
    id v43 = v106;
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v41 = v33;
    uint64_t v42 = v26;
    id v43 = v106;
    uint64_t v39 = v92;
  }
  uint64_t v46 = v93;
  uint64_t v47 = (uint64_t)v39;
  uint64_t v44 = v105;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v43)(v39, v40, 1, v105);
  sub_100041BC8(v47, v35);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v35, 1, v44);
  uint64_t v45 = v104;
  if (v48 == 1) {
    goto LABEL_7;
  }
  char v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  v49(v46, v35, v105);
  uint64_t v44 = v105;
  v49(&v42[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id], (uint64_t)v46, v105);
LABEL_9:
  char v50 = *(void **)&v1[v45];
  if (v50)
  {
    id v51 = [v50 assetType];
    if (v51)
    {
      Swift::String v52 = v51;
      sub_100109D30();
    }
    uint64_t v53 = (uint64_t)v94;
    uint64_t v45 = v104;
  }
  else
  {
    uint64_t v53 = (uint64_t)v94;
  }
  char v54 = sub_10008564C();
  if (v54 == 21) {
    char v55 = 20;
  }
  else {
    char v55 = v54;
  }
  v42[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type] = v55;
  uint64_t v56 = *(void **)&v1[v45];
  if (v56)
  {
    id v57 = [v56 title];
    if (v57)
    {
      uint64_t v58 = sub_100109250();
      unint64_t v60 = v59;

      id v57 = sub_100081C44(v58, v60);
      unint64_t v61 = v60;
      uint64_t v44 = v105;
      sub_100007084(v58, v61);
    }
  }
  else
  {
    id v57 = 0;
  }
  id v62 = *(void **)&v1[v96];
  *(void *)&v1[v96] = v57;

  id v63 = *(void **)&v1[v45];
  if (v63)
  {
    id v64 = [v63 source];
    uint64_t v65 = (uint64_t)v103;
    if (v64)
    {
      id v66 = v64;
      uint64_t v67 = sub_100109D30();
      uint64_t v69 = v68;
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v69 = (void *)0xE000000000000000;
    }
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v69 = (void *)0xE000000000000000;
    uint64_t v65 = (uint64_t)v103;
  }
  char v70 = sub_1000856A0(v67, v69);
  if (v70 == 10) {
    char v71 = 9;
  }
  else {
    char v71 = v70;
  }
  v42[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_source] = v71;
  id v72 = [v41 suggestionId];
  if (v72)
  {
    uint64_t v73 = v72;
    sub_1001094B0();

    uint64_t v74 = 0;
  }
  else
  {
    uint64_t v74 = 1;
  }
  uint64_t v75 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v106)(v65, v74, 1, v44);
  uint64_t v76 = (uint64_t)v97;
  swift_beginAccess();
  sub_10002440C(v65, v76, (uint64_t *)&unk_10015A850);
  swift_endAccess();
  id v77 = [v41 suggestionDate];
  if (v77)
  {
    id v78 = v77;
    sub_100109420();

    uint64_t v75 = 0;
  }
  v100(v53, v75, 1, v101);
  uint64_t v79 = v102;
  swift_beginAccess();
  sub_10002440C(v53, v79, (uint64_t *)&unk_10015CDE0);
  swift_endAccess();
  unsigned __int8 v80 = [v41 isHidden];
  v1[v98] = v80;

  NSString v81 = (objc_class *)_s5AssetCMa();
  v107.receiver = v42;
  v107.super_class = v81;
  [super init];
  sub_10003AF70();
  id v83 = self;
  id v84 = [v83 defaultCenter];
  uint64_t v85 = qword_100158A98;
  id v86 = v82;
  if (v85 != -1) {
    swift_once();
  }
  [v84 addObserver:v86 selector:"assetUpdatedNotificationWithNotification:" name:qword_10016DED8 object:0];

  id v87 = [v83 defaultCenter];
  uint64_t v88 = qword_100158AA0;
  id v89 = v86;
  if (v88 != -1) {
    swift_once();
  }
  [v87 addObserver:v89 selector:"mediaFileUpdatedNotificationWithNotification:" name:qword_10016DEE0 object:0];

  return v89;
}

void sub_10003AF70()
{
  uint64_t v1 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1001094F0();
  uint64_t v4 = *(void *)(v75 - 8);
  uint64_t v5 = __chkstk_darwin(v75);
  char v71 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v74 = (uint64_t)&v64 - v8;
  __chkstk_darwin(v7);
  char v70 = (char *)&v64 - v9;
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1001091E0();
  uint64_t v13 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100108FF0();
  uint64_t v17 = __chkstk_darwin(v16);
  long long v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v21 = _swiftEmptyArrayStorage;
  uint64_t v22 = &_swiftEmptySetSingleton;
  id v86 = &_swiftEmptySetSingleton;
  id v87 = _swiftEmptyArrayStorage;
  unsigned __int8 v80 = v0;
  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO];
  if (v23)
  {
    uint64_t v68 = v18;
    uint64_t v69 = v17;
    id v67 = v23;
    id v24 = [v67 fileAttachments];
    if (!v24)
    {
      sub_10001CB98(0, (unint64_t *)&qword_10015A838);
      id v24 = (id)sub_10010A5A0();
    }
    sub_10010A5B0();

    sub_100108FE0();
    if (v85)
    {
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v79 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
      id v72 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      id v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v4 + 16);
      id v64 = (void (**)(uint64_t, uint64_t))(v4 + 8);
      id v77 = (void (**)(char *, uint64_t))(v13 + 8);
      id v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v76 = v12;
      do
      {
        sub_10002426C(&v84, &v83);
        type metadata accessor for JournalEntryAssetFileAttachmentMO();
        if (swift_dynamicCast())
        {
          NSString v26 = v15;
          uint64_t v27 = (uint64_t)v3;
          id v28 = v82;
          if (sub_1000CB83C(v28))
          {
            swift_retain();
            sub_100109F10();
            if (*(void *)(((unint64_t)v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v87 & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_100109F70();
            sub_100109FA0();
            sub_100109F50();
            swift_release();
          }
          id v29 = [v28 filePath:v64];
          if (v29)
          {
            id v30 = v29;
            sub_100109D30();

            type metadata accessor for Journaling();
            sub_1000CEC08((uint64_t)v12);
            swift_bridgeObjectRelease();
            uint64_t v31 = v12;
            uint64_t v32 = (uint64_t)v12;
            uint64_t v33 = v81;
            if ((*v25)(v31, 1, v81) != 1)
            {
              (*v79)(v15, v32, v33);
              id v34 = [self defaultManager];
              sub_100109160();
              NSString v35 = sub_100109CF0();
              swift_bridgeObjectRelease();
              unsigned __int8 v36 = [v34 fileExistsAtPath:v35];

              if (v36)
              {
                (*v77)(v26, v33);

                uint64_t v3 = (char *)v27;
                uint64_t v15 = v26;
LABEL_23:
                uint64_t v25 = v78;
                uint64_t v12 = v76;
                goto LABEL_7;
              }
              id v37 = [v28 id];
              uint64_t v3 = (char *)v27;
              if (v37)
              {
                char v38 = v37;
                uint64_t v39 = v74;
                sub_1001094B0();

                uint64_t v40 = *v72;
                uint64_t v41 = v39;
                uint64_t v42 = v75;
                (*v72)(v27, v41, v75);
                (*v73)(v27, 0, 1, v42);
                if ((*v66)(v27, 1, v42) != 1)
                {
                  id v43 = v70;
                  uint64_t v44 = v75;
                  v40((uint64_t)v70, v27, v75);
                  uint64_t v45 = v71;
                  (*v65)(v71, v43, v44);
                  uint64_t v46 = v74;
                  sub_10003D428(v74, v45);

                  uint64_t v47 = *v64;
                  (*v64)(v46, v44);
                  v47((uint64_t)v43, v44);
                  uint64_t v15 = v26;
                  (*v77)(v26, v81);
                  goto LABEL_23;
                }
              }
              else
              {
                (*v73)(v27, 1, 1, v75);
              }

              uint64_t v15 = v26;
              (*v77)(v26, v81);
              sub_10000B9CC(v27, (uint64_t *)&unk_10015A850);
              goto LABEL_23;
            }

            sub_10000B9CC(v32, (uint64_t *)&unk_100159D40);
            uint64_t v12 = (char *)v32;
          }
          else
          {
          }
        }
LABEL_7:
        sub_100108FE0();
      }
      while (v85);
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v69);

    uint64_t v22 = v86;
    long long v21 = v87;
  }
  int v48 = v80;
  *(void *)&v80[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentIdsMissingFile] = v22;
  swift_bridgeObjectRelease();
  *(void *)((char *)v48 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments) = v21;
  uint64_t v49 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v48) + 0x2C0))(v49);
  swift_getObjectType();
  uint64_t v50 = swift_conformsToProtocol2();
  if (v50) {
    uint64_t v51 = v50;
  }
  else {
    uint64_t v51 = 0;
  }
  if (v50) {
    Swift::String v52 = v48;
  }
  else {
    Swift::String v52 = 0;
  }
  if (v52)
  {
    uint64_t ObjectType = swift_getObjectType();
    char v54 = v80;
    sub_100007ED0(ObjectType, v51);
  }
  char v55 = v80;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v56 = v55;
  }
  else {
    uint64_t v56 = 0;
  }
  if (v56)
  {
    id v57 = *(void **)&v56[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO];
    if (v57)
    {
      uint64_t v58 = v80;
      id v59 = [v57 contentType];
      if (v59)
      {
        unint64_t v60 = v59;
        id v57 = (void *)sub_100109D30();
        id v62 = v61;

LABEL_43:
        v56[OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_contentType] = sub_100076E40((uint64_t)v57, v62);

        return;
      }
      id v57 = 0;
    }
    else
    {
      id v63 = v80;
    }
    id v62 = (void *)0xE000000000000000;
    goto LABEL_43;
  }
}

id sub_10003B8A4(uint64_t a1, char a2, char a3)
{
  *(void *)&v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentIdsMissingFile] = &_swiftEmptySetSingleton;
  *(void *)&v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context] = 0;
  *(void *)&v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO] = 0;
  *(void *)&v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title] = 0;
  uint64_t v7 = &v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionId];
  uint64_t v8 = sub_1001094F0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  uint64_t v10 = &v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionDate];
  uint64_t v11 = sub_100109460();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = &v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath];
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = &v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryURL];
  uint64_t v14 = sub_1001091E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = &v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_thumbnailCacheKey];
  *uint64_t v15 = 0;
  v15[1] = 0;
  v3[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_isHidden] = 0;
  uint64_t v16 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_delegates;
  uint64_t v17 = self;
  uint64_t v18 = v3;
  *(void *)&v3[v16] = [v17 weakObjectsHashTable];
  uint64_t v19 = &v18[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdate];
  *uint64_t v19 = 0;
  v19[1] = 0;
  long long v20 = &v18[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdateMediaFile];
  *long long v20 = 0;
  v20[1] = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v18[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id], a1, v8);
  v18[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type] = a2;
  v18[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_source] = a3;

  v23.receiver = v18;
  v23.super_class = (Class)_s5AssetCMa();
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v21;
}

id sub_10003BB54()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_thumbnailCacheKey + 8];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_thumbnailCacheKey];
    swift_bridgeObjectRetain();
    _s21JournalShareExtension17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(v2, v1, 0);
    swift_bridgeObjectRelease();
  }
  sub_1000A44EC(1);
  id v3 = [self defaultCenter];
  [v3 removeObserver:v0];

  v5.receiver = v0;
  v5.super_class = (Class)_s5AssetCMa();
  return [super dealloc];
}

uint64_t sub_10003BDB4()
{
  return _s5AssetCMa();
}

uint64_t _s5AssetCMa()
{
  uint64_t result = qword_10015A7A8;
  if (!qword_10015A7A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003BE08(uint64_t a1)
{
  sub_10003AF70();
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_delegates), "allObjects"));
  unint64_t v3 = sub_100109F30();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_18;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = sub_10010A920();
    }
    else
    {
      uint64_t v6 = *(void *)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    swift_getObjectType();
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    }
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdate);
  if (v11)
  {
    uint64_t v12 = swift_retain();
    v11(v12);
    sub_10002422C((uint64_t)v11);
  }
}

void sub_10003BFE4(uint64_t a1)
{
  sub_10003AF70();
  id v2 = *(void (**)(uint64_t))(a1
                                      + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_didUpdateMediaFile);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_10002422C((uint64_t)v2);
  }
}

uint64_t sub_10003C06C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_100108E50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100108E10();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10003C15C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v65 = a7;
  unsigned int v64 = a6;
  uint64_t v15 = sub_100109AC0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  id v21 = &v58[-v20];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a2();
    return;
  }
  objc_super v23 = (void *)Strong;
  uint64_t v66 = a3;
  id v67 = a2;
  if (qword_100158BF8 != -1) {
    swift_once();
  }
  id v24 = sub_1000F726C(a4, a5);
  id v25 = [v24 imageByPreparingForDisplay];

  if (v25)
  {
    id v26 = v25;
    ((void (*)(id))v67)(v25);

    return;
  }
  int v27 = a8 & 1;
  uint64_t v63 = a10;
  id v28 = (char *)_s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a4, a5);
  if (!v28)
  {
    _s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailjH0C_So17OS_dispatch_queueCtSgSS_tFZ_0(a4, a5);
    if (!v41)
    {
      sub_10003C7D4(v23, v64, v65, a8 & 1, a4, a5, a9, (uint64_t)v67, v66);
      sub_1000A44EC(0);

      return;
    }
    id v43 = v41;
    int v59 = v27;
    uint64_t v60 = a9;
    id v62 = v42;
    sub_10010A400();
    uint64_t v61 = sub_100109AA0();
    uint64_t v44 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
    v44(v21, v15);
    sub_10010A400();
    uint64_t v45 = sub_100109AA0();
    v44(v19, v15);
    uint64_t v46 = v67;
    if (v61 >= v45)
    {
      unint64_t v47 = *(void *)&v43[qword_100160318];
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_10010AA80();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v49 = *(void *)((char *)v23 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments);
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = v67;
        uint64_t v57 = sub_10010AA80();
        swift_bridgeObjectRelease();
        if (v48 == v57) {
          goto LABEL_20;
        }
      }
      else if (v48 == *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_20:
        uint64_t v50 = swift_allocObject();
        uint64_t v51 = v66;
        *(void *)(v50 + 16) = v46;
        *(void *)(v50 + 24) = v51;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = sub_100041EBC;
        *(void *)(v52 + 24) = v50;
        __chkstk_darwin(v52);
        uint64_t v54 = (uint64_t)&v53[4];
        char v55 = v53 + 10;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v55);
        sub_100041EEC(v54);
        os_unfair_lock_unlock(v55);
        swift_release();

        goto LABEL_13;
      }
    }
    sub_10003C7D4(v23, v64, v65, v59, a4, a5, v60, (uint64_t)v46, v66);

    return;
  }
  id v29 = v28;
  char v30 = v27;
  unint64_t v31 = *(void *)&v28[qword_100160318];
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v33 = v67;
  unint64_t v34 = *(void *)((char *)v23 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments);
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = v67;
    uint64_t v56 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v32 == v56) {
      goto LABEL_12;
    }
  }
  else if (v32 == *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v66;
    *(void *)(v35 + 16) = v33;
    *(void *)(v35 + 24) = v36;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1000421E8;
    *(void *)(v37 + 24) = v35;
    __chkstk_darwin(v37);
    uint64_t v39 = (uint64_t)&v38[4];
    uint64_t v40 = v38 + 10;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_100042210(v39);
    os_unfair_lock_unlock(v40);

    swift_release();
LABEL_13:
    swift_release();
    return;
  }
  sub_10003C7D4(v23, v64, v65, v30, a4, a5, a9, (uint64_t)v33, v66);
}

void sub_10003C7D4(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))((swift_isaMask & *a1)
                                                                                               + 0x2D8))(a2, a3, a4 & 1, a5, a6, a7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a8;
  *(void *)(v11 + 24) = a9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000421E8;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = *(os_unfair_lock_s **)&v10[qword_10015AD08];
  uint64_t v14 = (uint64_t)&v13[4];
  uint64_t v15 = v13 + 10;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_100042210(v14);
  os_unfair_lock_unlock(v15);
  swift_release();
  swift_release();
  sub_10001CB98(0, &qword_10015A8C0);
  if (qword_1001588F8 != -1) {
    swift_once();
  }
  if (sub_10010A6A0())
  {
    [v10 setQualityOfService:9];
  }
  else
  {
    if (qword_100158900 != -1) {
      swift_once();
    }
    if (sub_10010A6A0())
    {
      uint64_t v16 = v10;
      uint64_t v17 = -1;
    }
    else
    {
      uint64_t v16 = v10;
      uint64_t v17 = 25;
    }
    [v16 setQualityOfService:v17];
  }
  _s21JournalShareExtension17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0G14CacheOperationC_So03OS_I6_queueCtFZ_0((uint64_t)v10);
}

void sub_10003CA40()
{
  sub_1001094F0();
  if (v0 <= 0x3F)
  {
    sub_10003CC2C(319, (unint64_t *)&qword_100159FC8, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      sub_10003CC2C(319, (unint64_t *)&qword_10015A7C0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        sub_10003CC2C(319, (unint64_t *)&qword_100159658, (void (*)(uint64_t))&type metadata accessor for URL);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_10003CC2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10010A700();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10003CC80(void *a1, void *a2)
{
  return static UUID.< infix(_:_:)(*a1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id, *a2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id);
}

id sub_10003CCA8()
{
  id v1 = [v0 assetType];
  if (v1)
  {
    unint64_t v2 = v1;
    sub_100109D30();
  }
  switch(sub_10008564C())
  {
    case 1u:
      uint64_t v6 = (char *)objc_allocWithZone((Class)_s14LivePhotoAssetCMa(0));
      *(void *)&v6[OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_metadata] = 0;
      uint64_t v7 = &v6[OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
      *(_DWORD *)uint64_t v7 = 0;
      v7[4] = 1;
      *(void *)&v6[OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_livePhotoAttachments] = 0;
      return sub_10003A67C(v0);
    case 2u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s10VideoAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VideoAsset_metadata;
      goto LABEL_24;
    case 3u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s10MusicAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling10MusicAsset_metadata;
      goto LABEL_24;
    case 4u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s12PodcastAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling12PodcastAsset_metadata;
      goto LABEL_24;
    case 5u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s9BookAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling9BookAsset_metadata;
      goto LABEL_24;
    case 6u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s10AudioAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling10AudioAsset_metadata;
      goto LABEL_24;
    case 7u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s10VisitAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VisitAsset_metadata;
      goto LABEL_24;
    case 8u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s16MultiPinMapAssetCMa());
      *(void *)&v4[OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata] = 0;
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_isWorkArray;
      goto LABEL_24;
    case 9u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling15GenericMapAsset_metadata;
      goto LABEL_24;
    case 0xAu:
      uint64_t v8 = objc_allocWithZone((Class)_s9LinkAssetCMa(0));
      *(void *)&v8[OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata] = 0;
      v8[OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_contentType] = 6;
      return sub_10003A67C(v0);
    case 0xBu:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s12ContactAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling12ContactAsset_metadata;
      goto LABEL_24;
    case 0xCu:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s16WorkoutIconAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling16WorkoutIconAsset_metadata;
      goto LABEL_24;
    case 0xDu:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s17WorkoutRouteAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata;
      goto LABEL_24;
    case 0xEu:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s15ReflectionAssetCMa());
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling15ReflectionAsset_metadata;
      goto LABEL_24;
    case 0xFu:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s16StateOfMindAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StateOfMindAsset_metadata;
      goto LABEL_24;
    case 0x10u:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s19MotionActivityAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling19MotionActivityAsset_metadata;
      goto LABEL_24;
    case 0x11u:
      uint64_t v12 = &type metadata for JournalFeatureFlags;
      unint64_t v13 = sub_100037914();
      v11[0] = 13;
      char v9 = sub_1001096C0();
      sub_10000B7B0((uint64_t)v11);
      if ((v9 & 1) == 0) {
        goto LABEL_4;
      }
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s20ThirdPartyMediaAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling20ThirdPartyMediaAsset_metadata;
      goto LABEL_24;
    case 0x12u:
      unint64_t v3 = (objc_class *)_s16PlaceholderAssetCMa();
      goto LABEL_26;
    case 0x13u:
    case 0x14u:
    case 0x15u:
LABEL_4:
      unint64_t v3 = (objc_class *)_s12UnknownAssetCMa();
LABEL_26:
      objc_allocWithZone(v3);
      return sub_10003A67C(v0);
    default:
      unint64_t v4 = (char *)objc_allocWithZone((Class)_s10PhotoAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata;
LABEL_24:
      *(void *)&v4[*v5] = 0;
      return sub_10003A67C(v0);
  }
}

id sub_10003D050(uint64_t a1)
{
  uint64_t v3 = sub_100108FF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 dataAttachments];
  if (!v7)
  {
    sub_10001CB98(0, (unint64_t *)&qword_10015A838);
    id v7 = (id)sub_10010A5A0();
  }
  sub_10010A5B0();

  sub_100108FE0();
  while (v14)
  {
    sub_10002426C(&v13, &v12);
    type metadata accessor for JournalEntryAssetAttachmentMO();
    if (swift_dynamicCast())
    {
      id v8 = v11;
      if ((int)[v11 index] == a1) {
        goto LABEL_11;
      }
    }
    sub_100108FE0();
  }
  id v8 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_10003D278()
{
  return sub_100041E3C(&qword_10015A830, (void (*)(uint64_t))_s5AssetCMa);
}

uint64_t sub_10003D2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 8);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10009E6CC(0, *(void *)(v7 + 16) + 1, 1, (double *)v7);
    uint64_t v7 = result;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_10009E6CC((double *)(v9 > 1), v10 + 1, 1, (double *)v7);
    uint64_t v7 = result;
  }
  *(void *)(v7 + 16) = v10 + 1;
  unint64_t v11 = v7 + 16 * v10;
  *(void *)(v11 + 32) = sub_100041F08;
  *(void *)(v11 + 40) = v6;
  *(void *)(a1 + 8) = v7;
  return result;
}

void sub_10003D3A4(void *a1, char a2, void (*a3)(id *))
{
  uint64_t v4 = a1;
  if (a2)
  {
    id v6 = a1;
    sub_100004BD4(&qword_100159850);
    swift_willThrowTypedImpl();
    uint64_t v4 = 0;
  }
  else
  {
    id v5 = a1;
  }
  id v6 = v4;
  a3(&v6);
}

uint64_t sub_10003D428(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_100109C00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100041E3C(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_100109C70();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10003F660((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10003D74C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10010ADC0();
  sub_1001094F0();
  sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  sub_100109C10();
  Swift::Int v10 = sub_10010AE20();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v19 = v2;
    uint64_t v20 = a2;
    uint64_t v21 = a1;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v22 + 72);
    while (1)
    {
      sub_100041C30(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8);
      char v15 = sub_1001094A0();
      sub_100041C94((uint64_t)v8);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v20;
        a1 = v21;
        uint64_t v3 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_100041C94(v20);
    sub_100041C30(*(void *)(*v19 + 48) + v14 * v12, v21);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100041C30(a2, (uint64_t)v8);
    uint64_t v23 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10003F900((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v23;
    swift_bridgeObjectRelease();
    sub_100041CF0(a2, a1);
    return 1;
  }
}

uint64_t sub_10003D9C8(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_10010ADC0();
  sub_1000ADFA0(a2);
  swift_bridgeObjectRetain();
  sub_100109DB0();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_10010AE20();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_10003FB58(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_46;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE400000000000000;
    unint64_t v10 = 1954047348;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x64724F7465737361;
        unint64_t v9 = 0xED0000676E697265;
        break;
      case 2:
        unint64_t v10 = 0xD000000000000015;
        unint64_t v9 = 0x800000010010CF30;
        break;
      case 3:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x656C746974;
        break;
      case 4:
        unint64_t v10 = 0x7461447972746E65;
        unint64_t v9 = 0xE900000000000065;
        break;
      case 5:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x6449656C646E7562;
        break;
      case 6:
        unint64_t v9 = 0xEA00000000006574;
        unint64_t v10 = 0x6144656C646E7562;
        break;
      case 7:
        unint64_t v10 = 0x72756F5365746164;
        unint64_t v9 = 0xEA00000000006563;
        break;
      case 8:
        unint64_t v9 = 0xE700000000000000;
        unint64_t v10 = 0x64656767616C66;
        break;
      case 9:
        unint64_t v9 = 0xE600000000000000;
        unint64_t v10 = 0x74706D6F7270;
        break;
      case 0xA:
        unint64_t v9 = 0x800000010010CF80;
        unint64_t v10 = 0xD000000000000011;
        break;
      case 0xB:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x726568746FLL;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE400000000000000;
    unint64_t v12 = 1954047348;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xED0000676E697265;
        if (v10 == 0x64724F7465737361) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        unint64_t v11 = 0x800000010010CF30;
        if (v10 != 0xD000000000000015) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x656C746974) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        unint64_t v11 = 0xE900000000000065;
        if (v10 != 0x7461447972746E65) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 5:
        unint64_t v11 = 0xE800000000000000;
        if (v10 != 0x6449656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 6:
        unint64_t v11 = 0xEA00000000006574;
        if (v10 != 0x6144656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 7:
        unint64_t v11 = 0xEA00000000006563;
        if (v10 != 0x72756F5365746164) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 8:
        unint64_t v11 = 0xE700000000000000;
        if (v10 != 0x64656767616C66) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 9:
        unint64_t v11 = 0xE600000000000000;
        if (v10 != 0x74706D6F7270) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 10:
        unint64_t v11 = 0x800000010010CF80;
        unint64_t v12 = 0xD000000000000011;
        goto LABEL_35;
      case 11:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x726568746FLL) {
          goto LABEL_37;
        }
        goto LABEL_36;
      default:
LABEL_35:
        if (v10 != v12) {
          goto LABEL_37;
        }
LABEL_36:
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_45;
        }
LABEL_37:
        char v13 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_45:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_46:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_10003DEBC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_10010A820();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_10001CB98(0, &qword_10015A880);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_10010A810();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_10003E27C(v7, result + 1);
    id v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10003F090();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10003F5DC((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_10010A690(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_10001CB98(0, &qword_10015A880);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_10010A6A0();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_10010A6A0();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100040064((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_10003E15C(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_10010ADC0();
  sub_10010ADD0(a2);
  Swift::Int v6 = sub_10010AE20();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1000401EC(a2, v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_10003E27C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100004BD4(&qword_10015A888);
    uint64_t v2 = sub_10010A890();
    uint64_t v14 = v2;
    sub_10010A800();
    if (sub_10010A830())
    {
      sub_10001CB98(0, &qword_10015A880);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10003F090();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_10010A690(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_10010A830());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10003E474()
{
  id v1 = v0;
  uint64_t v42 = sub_1001094F0();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100004BD4(&qword_10015A870);
  uint64_t v5 = sub_10010A880();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                id v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_100109C00();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10003E870()
{
  id v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100004BD4(&qword_10015A890);
  uint64_t v6 = sub_10010A880();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v30 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    BOOL v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                id v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_100041CF0(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_10010ADC0();
      sub_1001094F0();
      sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_100109C10();
      uint64_t result = sub_10010AE20();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_100041CF0((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_10003EC40()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BD4(&qword_10015A878);
  uint64_t v3 = sub_10010A880();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_10010ADC0();
    sub_100109DB0();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_10010AE20();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x10003F060);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  id v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10003F090()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BD4(&qword_10015A888);
  uint64_t v3 = sub_10010A880();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                id v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_10010A690(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10003F330()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BD4(&qword_10015A2A0);
  uint64_t result = sub_10010A880();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                id v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_10010ADC0();
      sub_10010ADD0(v18);
      uint64_t result = sub_10010AE20();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_10003F5DC(uint64_t a1, void *a2)
{
  sub_10010A690(a2[5]);
  unint64_t result = sub_10010A7F0();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_10003F660(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10003E474();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10004034C();
      goto LABEL_12;
    }
    sub_100040B70();
  }
  uint64_t v12 = *v3;
  sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = sub_100109C00();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100041E3C(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_100109C70();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10010AD10();
  __break(1u);
  return result;
}

uint64_t sub_10003F900(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v27 = v3;
  uint64_t v28 = a1;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v13 = v8;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10003E870();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_100040F20();
LABEL_8:
    uint64_t v14 = *v3;
    sub_10010ADC0();
    sub_1001094F0();
    sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100109C10();
    Swift::Int v15 = sub_10010AE20();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        sub_100041C30(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10);
        char v19 = sub_1001094A0();
        sub_100041C94((uint64_t)v10);
        if (v19) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v13 = v8;
  sub_1000405F0();
LABEL_14:
  uint64_t v20 = v28;
  uint64_t v21 = *v27;
  *(void *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_100041CF0(v20, *(void *)(v21 + 48) + *(void *)(v13 + 72) * a2);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_10010AD10();
  __break(1u);
  return result;
}

Swift::Int sub_10003FB58(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_10003EC40();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1000409E4(&qword_10015A878);
        goto LABEL_49;
      }
      sub_1000412B4();
    }
    uint64_t v8 = *v3;
    sub_10010ADC0();
    sub_1000ADFA0(v5);
    sub_100109DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10010AE20();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x64724F7465737361;
            unint64_t v11 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v12 = 0xD000000000000015;
            unint64_t v11 = 0x800000010010CF30;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x656C746974;
            break;
          case 4:
            unint64_t v12 = 0x7461447972746E65;
            unint64_t v11 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            unint64_t v12 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v12 = 0x72756F5365746164;
            unint64_t v11 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            unint64_t v12 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v11 = 0x800000010010CF80;
            unint64_t v12 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1954047348;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xED0000676E697265;
            if (v12 != 0x64724F7465737361) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 2:
            unint64_t v13 = 0x800000010010CF30;
            if (v12 != 0xD000000000000015) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x656C746974) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 4:
            unint64_t v13 = 0xE900000000000065;
            if (v12 != 0x7461447972746E65) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x6449656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 6:
            unint64_t v13 = 0xEA00000000006574;
            if (v12 != 0x6144656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 7:
            unint64_t v13 = 0xEA00000000006563;
            if (v12 != 0x72756F5365746164) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 8:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x64656767616C66;
            goto LABEL_42;
          case 9:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x74706D6F7270) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 10:
            unint64_t v13 = 0x800000010010CF80;
            if (v12 != 0xD000000000000011) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 11:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x726568746FLL) {
              goto LABEL_44;
            }
            goto LABEL_43;
          default:
LABEL_42:
            if (v12 != v14) {
              goto LABEL_44;
            }
LABEL_43:
            if (v11 == v13) {
              goto LABEL_52;
            }
LABEL_44:
            char v15 = sub_10010ACA0();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_53;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_49:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_52:
    swift_bridgeObjectRelease_n();
LABEL_53:
    sub_10010AD10();
    __break(1u);
    JUMPOUT(0x100040004);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

void sub_100040064(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10003F090();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10004082C();
      goto LABEL_14;
    }
    sub_1000416D0();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_10010A690(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10001CB98(0, &qword_10015A880);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_10010A6A0();

    if (v12)
    {
LABEL_13:
      sub_10010AD10();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_10010A6A0();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

Swift::Int sub_1000401EC(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10003F330();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000409E4(&qword_10015A2A0);
      goto LABEL_14;
    }
    sub_10004194C();
  }
  uint64_t v8 = *v3;
  sub_10010ADC0();
  sub_10010ADD0(v5);
  uint64_t result = sub_10010AE20();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_10010AD10();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_10004034C()
{
  id v1 = v0;
  uint64_t v2 = sub_1001094F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::UInt v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BD4(&qword_10015A870);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_10010A870();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    id v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1000405F0()
{
  id v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  Swift::UInt v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BD4(&qword_10015A890);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_10010A870();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_100041C30(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t result = (void *)sub_100041CF0((uint64_t)v5, *(void *)(v8 + 48) + v19);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_10004082C()
{
  id v1 = v0;
  sub_100004BD4(&qword_10015A888);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10010A870();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000409D8()
{
  return sub_1000409E4(&qword_10015A2A0);
}

void *sub_1000409E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100004BD4(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10010A870();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100040B70()
{
  id v1 = v0;
  uint64_t v2 = sub_1001094F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100004BD4(&qword_10015A870);
  uint64_t v7 = sub_10010A880();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_100109C00();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100040F20()
{
  id v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100004BD4(&qword_10015A890);
  uint64_t v6 = sub_10010A880();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  char v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_100041C30(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    sub_10010ADC0();
    sub_1001094F0();
    sub_100041E3C((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100109C10();
    uint64_t result = sub_10010AE20();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_100041CF0((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000412B4()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BD4(&qword_10015A878);
  uint64_t v3 = sub_10010A880();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_10010ADC0();
    sub_100109DB0();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_10010AE20();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1000416A0);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  id v1 = v0;
LABEL_36:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000416D0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BD4(&qword_10015A888);
  uint64_t v3 = sub_10010A880();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_10010A690(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004194C()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_100004BD4(&qword_10015A2A0);
  uint64_t result = sub_10010A880();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_10010ADC0();
    sub_10010ADD0(v18);
    uint64_t result = sub_10010AE20();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100041BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015A850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100041C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100041C94(uint64_t a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100041CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100041D54()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100041D8C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_100041DE4()
{
  sub_10003C15C(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_100041E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100041E34()
{
  return swift_release();
}

uint64_t sub_100041E3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100041E84()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100041EBC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100041EEC(uint64_t a1)
{
  return sub_10003D2C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100041F08(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

void sub_100041F4C(uint64_t a1)
{
  sub_10003D3A4(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(id *))(v1 + 16));
}

uint64_t sub_100041F60()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100041F98()
{
  sub_10003BFE4(*(void *)(v0 + 16));
}

void sub_100041FA0()
{
  sub_10003BE08(*(void *)(v0 + 16));
}

uint64_t sub_100041FA8@<X0>(unsigned char *a1@<X8>)
{
  char v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v3) {
    uint64_t result = (uint64_t)[v3 isSlim];
  }
  else {
    uint64_t result = 2;
  }
  *a1 = result;
  return result;
}

uint64_t _s10AssetErrorOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10AssetErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100042158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AssetErrorOMa()
{
  return &_s10AssetErrorON;
}

unint64_t sub_100042194()
{
  unint64_t result = qword_10015A8D0[0];
  if (!qword_10015A8D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10015A8D0);
  }
  return result;
}

uint64_t sub_100042210(uint64_t a1)
{
  return sub_100041EEC(a1);
}

uint64_t sub_100042230()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100042280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (unint64_t *)(a3 + 40);
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      unint64_t v8 = *v5;
      if (*v5)
      {
        uint64_t v9 = *(v5 - 1);
        uint64_t v10 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
        }
        if (v10)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v6 = sub_10009E5BC(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v12 = *((void *)v6 + 2);
          unint64_t v11 = *((void *)v6 + 3);
          if (v12 >= v11 >> 1) {
            unsigned int v6 = sub_10009E5BC((char *)(v11 > 1), v12 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v12 + 1;
          BOOL v7 = &v6[16 * v12];
          *((void *)v7 + 4) = v9;
          *((void *)v7 + 5) = v8;
        }
      }
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    if (*((void *)v6 + 2)) {
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_16;
  }
LABEL_14:
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_1000424EC();
  uint64_t v13 = sub_100109C30();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for ThreadSafeSet()
{
  return sub_100008550();
}

uint64_t sub_100042424()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100042474()
{
  return v0;
}

uint64_t sub_100042480()
{
  return sub_100042474();
}

uint64_t sub_10004249C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ThreadSafeArray()
{
  return sub_100008550();
}

unint64_t sub_1000424EC()
{
  unint64_t result = qword_10015A188;
  if (!qword_10015A188)
  {
    sub_100012F08((uint64_t *)&unk_10015F2A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A188);
  }
  return result;
}

uint64_t type metadata accessor for JournalSortingUtilities()
{
  return self;
}

id sub_100042714()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JurassicAlertController();
  return [super dealloc];
}

uint64_t type metadata accessor for JurassicAlertController()
{
  return self;
}

id sub_10004276C(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC21JournalShareExtension15CanvasPhotoView_sizeType] = 4;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension15CanvasPhotoView_fallbackView] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for CanvasPhotoView();
  [super initWithFrame:a1, a2, a3, a4];
  [v9 setContentMode:2];
  id v10 = [v9 layer];
  [v10 setCornerRadius:7.0];

  [v9 setClipsToBounds:1];
  return v9;
}

id sub_100042904(void *a1)
{
  id v3 = [v1 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setImage:a1];
  [v3 setIsAccessibilityElement:1];
  UIAccessibilityTraits v4 = UIAccessibilityTraitImage;
  id v5 = v3;
  unint64_t v6 = (unint64_t)[v5 accessibilityTraits];
  if ((v4 & ~v6) != 0) {
    UIAccessibilityTraits v7 = v4;
  }
  else {
    UIAccessibilityTraits v7 = 0;
  }
  [v5 setAccessibilityTraits:v7 | v6];

  [v5 setAccessibilityIgnoresInvertColors:1];
  return v5;
}

id sub_100042A4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasPhotoView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasPhotoView()
{
  return self;
}

BOOL static SharedDeviceInfoProvider.isDeviceLocked()()
{
  return MKBGetDeviceLockState() == 1;
}

id SharedDeviceInfoProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDeviceInfoProvider();
  return [super init];
}

uint64_t type metadata accessor for SharedDeviceInfoProvider()
{
  return self;
}

id SharedDeviceInfoProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDeviceInfoProvider();
  return [super dealloc];
}

uint64_t _s13MOMapLocationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s13MOMapLocationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  id v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13MOMapLocationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13MOMapLocationVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13MOMapLocationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13MOMapLocationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13MOMapLocationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13MOMapLocationVMa()
{
  return &_s13MOMapLocationVN;
}

id sub_100042EB8(double a1)
{
  unint64_t v2 = v1;
  id v4 = [v1 fontDescriptor];
  id v5 = [v4 fontAttributes];

  type metadata accessor for AttributeName(0);
  sub_100043244();
  uint64_t v6 = sub_100109B70();

  uint64_t v33 = v6;
  if (!*(void *)(v6 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = UIFontDescriptorTraitsAttribute;
  uint64_t v8 = sub_1000FCC0C();
  if ((v9 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_100037A20(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v31);

  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_8:
    sub_100017700((uint64_t)&v31);
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015AB00);
  if (!swift_dynamicCast())
  {
LABEL_9:
    unint64_t v10 = sub_10007B748((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)&v30[0];
LABEL_10:
  type metadata accessor for Weight(0);
  *((void *)&v32 + 1) = v11;
  *(double *)&long long v31 = a1;
  sub_10002426C(&v31, v30);
  objc_super v12 = UIFontWeightTrait;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000FEE0C(v30, v12, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  unint64_t v14 = UIFontDescriptorNameAttribute;
  sub_1000CCFAC((uint64_t)v14, &v31);

  sub_100017700((uint64_t)&v31);
  *((void *)&v32 + 1) = sub_100004BD4(&qword_10015AB00);
  *(void *)&long long v31 = v10;
  sub_10002426C(&v31, v30);
  int64_t v15 = UIFontDescriptorTraitsAttribute;
  uint64_t v16 = v33;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000FEDEC(v30, v15, v17);

  swift_bridgeObjectRelease();
  Swift::UInt v18 = UIFontDescriptorFamilyAttribute;
  id v19 = [v2 familyName];
  uint64_t v20 = sub_100109D30();
  uint64_t v22 = v21;

  *((void *)&v32 + 1) = &type metadata for String;
  *(void *)&long long v31 = v20;
  *((void *)&v31 + 1) = v22;
  sub_10002426C(&v31, v30);
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000FEDEC(v30, v18, v23);
  uint64_t v33 = v16;

  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone((Class)UIFontDescriptor);
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithFontAttributes:isa];

  [v2 pointSize];
  id v28 = [self fontWithDescriptor:v26 size:v27];

  return v28;
}

unint64_t sub_100043244()
{
  unint64_t result = qword_1001591A0;
  if (!qword_1001591A0)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001591A0);
  }
  return result;
}

void sub_10004329C(id *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  id v3 = *a1;
  uint64_t v4 = *a2;
  switch(*((unsigned char *)a2 + 16))
  {
    case 1:
      id v6 = [v3 fontDescriptorWithSymbolicTraits:[*a1 symbolicTraits] & ~v4];
      goto LABEL_4;
    case 2:
      uint64_t v23 = a2[1];
      sub_100004BD4(&qword_10015AB08);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100122230;
      *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
      sub_100004BD4(&qword_10015AB20);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_100122230;
      sub_100004BD4(&qword_10015AB28);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_100122220;
      uint64_t v11 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 40) = v4;
      objc_super v12 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 56) = v23;
      uint64_t v13 = UIFontDescriptorFeatureSettingsAttribute;
      id v14 = v11;
      id v15 = v12;
      *(void *)(v9 + 32) = sub_10007BC04(v10);
      *(void *)(inited + 64) = sub_100004BD4(&qword_10015AB30);
      *(void *)(inited + 40) = v9;
      sub_10007BD04(inited);
      type metadata accessor for AttributeName(0);
      sub_100043244();
      v16.super.Class isa = sub_100109B60().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v3 fontDescriptorByAddingAttributes:v16.super.isa];
      goto LABEL_8;
    case 3:
      sub_100004BD4(&qword_10015AB08);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_100122230;
      *(void *)(v18 + 32) = UIFontDescriptorTraitsAttribute;
      sub_100004BD4(&qword_10015AB10);
      uint64_t v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_100122230;
      *(void *)(v19 + 32) = UIFontWeightTrait;
      *(void *)(v19 + 40) = v4;
      uint64_t v20 = UIFontDescriptorTraitsAttribute;
      uint64_t v21 = UIFontWeightTrait;
      unint64_t v22 = sub_10007BD2C(v19);
      *(void *)(v18 + 64) = sub_100004BD4(&qword_10015AB18);
      *(void *)(v18 + 40) = v22;
      sub_10007BD04(v18);
      type metadata accessor for AttributeName(0);
      sub_100043244();
      v16.super.Class isa = sub_100109B60().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v3 fontDescriptorByAddingAttributes:v16.super.isa];
LABEL_8:
      id v7 = v17;

      break;
    default:
      id v6 = [v3 fontDescriptorWithSymbolicTraits:[*a1 symbolicTraits] | v4];
LABEL_4:
      id v7 = v6;
      if (!v7) {
        id v7 = v3;
      }
      break;
  }
  *a3 = v7;
}

uint64_t getEnumTagSinglePayload for CanvasContentInputType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7B) {
    goto LABEL_17;
  }
  if (a2 + 133 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 133) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 133;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *unint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100043750);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_100043778(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_100043794(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1000437A4(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *unint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType()
{
  return &type metadata for CanvasContentInputType;
}

void sub_1000437E8(uint64_t a1, unsigned __int8 a2)
{
  switch(a2 >> 5)
  {
    case 1:
      sub_10010ADD0(5uLL);
      sub_10010ADE0(a2 & 1);
      return;
    case 2:
      if (a2 == 64) {
        Swift::UInt v3 = 1;
      }
      else {
        Swift::UInt v3 = 2;
      }
      goto LABEL_14;
    case 3:
      if (a2 == 96) {
        Swift::UInt v3 = 3;
      }
      else {
        Swift::UInt v3 = 4;
      }
      goto LABEL_14;
    case 4:
      if (a2 == 128) {
        Swift::UInt v3 = 6;
      }
      else {
        Swift::UInt v3 = 7;
      }
      goto LABEL_14;
    case 5:
      Swift::UInt v3 = 8;
      goto LABEL_14;
    default:
      sub_10010ADD0(0);
      Swift::UInt v3 = a2 & 1;
LABEL_14:
      sub_10010ADD0(v3);
      return;
  }
}

Swift::Int sub_1000438CC()
{
  unsigned __int8 v1 = *v0;
  sub_10010ADC0();
  sub_1000437E8((uint64_t)v3, v1);
  return sub_10010AE20();
}

void sub_100043914(uint64_t a1)
{
  sub_1000437E8(a1, *v1);
}

Swift::Int sub_10004391C()
{
  unsigned __int8 v1 = *v0;
  sub_10010ADC0();
  sub_1000437E8((uint64_t)v3, v1);
  return sub_10010AE20();
}

uint64_t sub_100043960(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000439C4(*a1, *a2);
}

unint64_t sub_100043970()
{
  unint64_t result = qword_10015AB38;
  if (!qword_10015AB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AB38);
  }
  return result;
}

uint64_t sub_1000439C4(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 5)
  {
    case 1:
      if ((a2 & 0xE0) != 0x20) {
        return 0;
      }
      return (((a1 & 1) == 0) ^ a2) & 1;
    case 2:
      if (a1 == 64) {
        return a2 == 64;
      }
      return a2 == 65;
    case 3:
      if (a1 == 96)
      {
        if (a2 == 96) {
          return 1;
        }
      }
      else if (a2 == 97)
      {
        return 1;
      }
      return 0;
    case 4:
      if (a1 == 128) {
        return a2 == 128;
      }
      return a2 == 129;
    case 5:
      return a2 == 160;
    default:
      if (a2 >= 0x20u) {
        return 0;
      }
      return ((a2 ^ a1) & 1) == 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType.KeyboardFocus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100043B88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType.KeyboardFocus()
{
  return &type metadata for CanvasContentInputType.KeyboardFocus;
}

unint64_t sub_100043BC4()
{
  unint64_t result = qword_10015AB40;
  if (!qword_10015AB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AB40);
  }
  return result;
}

uint64_t sub_100043C18()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 28));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = 0;
      unsigned int v4 = (char *)_swiftEmptyArrayStorage;
      do
      {
        id v5 = (id)HKUILocalizedStringForStateOfMindLabel();
        uint64_t v6 = sub_100109D30();
        uint64_t v8 = v7;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v4 = sub_10009E5BC(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v10 = *((void *)v4 + 2);
        unint64_t v9 = *((void *)v4 + 3);
        if (v10 >= v9 >> 1) {
          unsigned int v4 = sub_10009E5BC((char *)(v9 > 1), v10 + 1, 1, v4);
        }
        ++v3;
        *((void *)v4 + 2) = v10 + 1;
        uint64_t v11 = &v4[16 * v10];
        *((void *)v11 + 4) = v6;
        *((void *)v11 + 5) = v8;
      }
      while (v2 != v3);
      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_1001589A8 != -1) {
    swift_once();
  }
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_1000424EC();
  uint64_t v12 = sub_100109C30();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100043DC4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 32));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = 0;
      unsigned int v4 = (char *)_swiftEmptyArrayStorage;
      do
      {
        HKStateOfMindDomainFromAssociation();
        id v5 = (id)HKUILocalizedStringForStateOfMindDomain();
        uint64_t v6 = sub_100109D30();
        uint64_t v8 = v7;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v4 = sub_10009E5BC(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v10 = *((void *)v4 + 2);
        unint64_t v9 = *((void *)v4 + 3);
        if (v10 >= v9 >> 1) {
          unsigned int v4 = sub_10009E5BC((char *)(v9 > 1), v10 + 1, 1, v4);
        }
        ++v3;
        *((void *)v4 + 2) = v10 + 1;
        uint64_t v11 = &v4[16 * v10];
        *((void *)v11 + 4) = v6;
        *((void *)v11 + 5) = v8;
      }
      while (v2 != v3);
      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_1001589A8 != -1) {
    swift_once();
  }
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_1000424EC();
  uint64_t v12 = sub_100109C30();
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_100043F74(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x736E69616D6F64;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100044050(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015ACA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000459B0();
  sub_10010AE60();
  LOBYTE(v13) = 0;
  sub_10010ABC0();
  if (!v2)
  {
    unint64_t v9 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
    LOBYTE(v13) = 1;
    sub_100109460();
    sub_100045940(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v13) = 2;
    sub_10010ABF0();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    sub_100004BD4(&qword_10015AC78);
    sub_100045BB4(&qword_10015ACA8);
    sub_10010AC00();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    sub_10010AC00();
    LOBYTE(v13) = 5;
    sub_10010ABF0();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v12 = 6;
    sub_100004BD4(&qword_10015AC88);
    sub_100045C54(&qword_10015ACB0, &qword_10015AC88, (void (*)(void))sub_100045C18);
    sub_10010AC30();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    sub_10010AC30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000443F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015AC68);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
  __chkstk_darwin(v10);
  char v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  sub_10000B718(a1, v13);
  sub_1000459B0();
  id v14 = v9;
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)v30);
  }
  uint64_t v15 = (uint64_t)v6;
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  LOBYTE(v32) = 0;
  *char v12 = sub_10010AB20();
  v12[1] = v18;
  sub_100109460();
  LOBYTE(v32) = 1;
  sub_100045940(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_100012FA4(v15, (uint64_t)v12 + v10[5]);
  LOBYTE(v32) = 2;
  uint64_t v19 = sub_10010AB50();
  uint64_t v20 = (char *)v12 + v10[6];
  *(void *)uint64_t v20 = v19;
  v20[8] = v21 & 1;
  sub_100004BD4(&qword_10015AC78);
  char v31 = 3;
  sub_100045BB4(&qword_10015AC80);
  sub_10010AB60();
  *(uint64_t *)((char *)v12 + v10[7]) = v32;
  char v31 = 4;
  sub_10010AB60();
  *(uint64_t *)((char *)v12 + v10[8]) = v32;
  LOBYTE(v32) = 5;
  uint64_t v22 = sub_10010AB50();
  uint64_t v23 = (char *)v12 + v10[9];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  sub_100004BD4(&qword_10015AC88);
  char v31 = 6;
  sub_100045C54(&qword_10015AC90, &qword_10015AC88, (void (*)(void))sub_100045A64);
  sub_10010AB90();
  *(uint64_t *)((char *)v12 + v10[10]) = v32;
  char v31 = 7;
  sub_10010AB90();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  *(uint64_t *)((char *)v12 + v10[11]) = v32;
  sub_100045AF4((uint64_t)v12, v27);
  sub_10000B7B0((uint64_t)v30);
  return sub_100045B58((uint64_t)v12);
}

unint64_t sub_1000449A0()
{
  return sub_100043F74(*v0);
}

uint64_t sub_1000449A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100045F20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000449D0(uint64_t a1)
{
  unint64_t v2 = sub_1000459B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100044A0C(uint64_t a1)
{
  unint64_t v2 = sub_1000459B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100044A48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000443F8(a1, a2);
}

uint64_t sub_100044A60(void *a1)
{
  return sub_100044050(a1);
}

uint64_t sub_100044A78(int a1, char a2, id a3)
{
  BOOL v5 = [a3 userInterfaceStyle] != (id)1;
  uint64_t v6 = v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id;

  return sub_10007AEE8(v6, v5, 0, 1, 0, 1, a2);
}

uint64_t sub_100044AE4()
{
  return swift_release();
}

id sub_100044AF4()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StateOfMindAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100044B3C()
{
  return _s16StateOfMindAssetCMa(0);
}

uint64_t _s16StateOfMindAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015AB70);
}

uint64_t sub_100044B64()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100044BA8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100109460();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v20 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100044DA4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100044E98(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v18 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100045044(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10004528C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v16 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  return a1;
}

void *sub_10004540C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004561C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100045630);
}

uint64_t sub_100045630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000456F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004570C);
}

uint64_t sub_10004570C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t _s16StateOfMindAssetC15StateOfMindDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015ABD8);
}

void sub_1000457F0()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000458B0()
{
  return sub_100045940(&qword_10015A418, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_1000458F8()
{
  return sub_100045940(&qword_10015AC28, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_100045940(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100045988()
{
  return swift_retain();
}

uint64_t sub_100045998(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StateOfMindAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_1000459B0()
{
  unint64_t result = qword_10015AC70;
  if (!qword_10015AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AC70);
  }
  return result;
}

uint64_t sub_100045A04(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100045A64()
{
  return sub_100045C54(&qword_10015AC98, &qword_100159448, (void (*)(void))sub_100045AA0);
}

unint64_t sub_100045AA0()
{
  unint64_t result = qword_10015F2D0;
  if (!qword_10015F2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F2D0);
  }
  return result;
}

uint64_t sub_100045AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100045B58(uint64_t a1)
{
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100045BB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(&qword_10015AC78);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100045C18()
{
  return sub_100045C54(&qword_10015ACB8, &qword_100159448, (void (*)(void))sub_100045CC0);
}

uint64_t sub_100045C54(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100045CC0()
{
  unint64_t result = qword_10015ACC0;
  if (!qword_10015ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ACC0);
  }
  return result;
}

unsigned char *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100045DE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOMa()
{
  return &_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysON;
}

unint64_t sub_100045E1C()
{
  unint64_t result = qword_10015ACC8;
  if (!qword_10015ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ACC8);
  }
  return result;
}

unint64_t sub_100045E74()
{
  unint64_t result = qword_10015ACD0;
  if (!qword_10015ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ACD0);
  }
  return result;
}

unint64_t sub_100045ECC()
{
  unint64_t result = qword_10015ACD8;
  if (!qword_10015ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ACD8);
  }
  return result;
}

uint64_t sub_100045F20(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000010010E850 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010010E870 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E69616D6F64 && a2 == 0xE700000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010010E890 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010010E8B0 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010010E8D0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_100046220()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015ACE0);
  sub_100007CB8(v0, (uint64_t)qword_10015ACE0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

id sub_10004631C()
{
  id v1 = v0;
  uint64_t v2 = sub_100109520();
  __chkstk_darwin(v2 - 8);
  uint64_t v69 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100109CE0();
  __chkstk_darwin(v4 - 8);
  id v67 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109460();
  uint64_t v66 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unsigned int v64 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v70 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v60 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v60 - v14;
  __chkstk_darwin(v13);
  id v62 = (char *)&v60 - v16;
  uint64_t v61 = sub_100109880();
  uint64_t v17 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)sub_100046BC4(v1);
  unint64_t v22 = v21;
  id v68 = v1;
  id v23 = [v1 text];
  uint64_t v63 = v15;
  if (v23
    && (uint64_t v24 = sub_100109250(), v26 = v25, v23, v23 = sub_100081C44(v24, v26), sub_100007084(v24, v26), v23))
  {
    id v27 = [v23 string];

    uint64_t v28 = sub_100109D30();
    id v23 = v29;
  }
  else
  {
    uint64_t v28 = 0;
  }
  if (v22) {
    uint64_t v30 = v20 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v22) {
    unint64_t v31 = v22;
  }
  else {
    unint64_t v31 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0) {
    uint64_t v32 = v30;
  }
  if (v32) {
    goto LABEL_23;
  }
  uint64_t v33 = v28 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (v23) {
    unint64_t v34 = (unint64_t)v23;
  }
  else {
    unint64_t v34 = 0xE000000000000000;
  }
  if (!v23) {
    uint64_t v33 = 0;
  }
  swift_bridgeObjectRelease();
  if ((v34 & 0x2000000000000000) != 0 ? HIBYTE(v34) & 0xF : v33)
  {
LABEL_23:
    sub_1001097F0();
    id v36 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
    Class isa = sub_1001097B0().super.isa;
    id v38 = [v36 initWithContentType:isa];

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v61);
    sub_100083154(v20, v22, v28, (unint64_t)v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v39 = v68;
    Class v40 = (Class)[v68 updatedDate];
    if (v40)
    {
      uint64_t v41 = v64;
      sub_100109420();

      uint64_t v42 = v66;
      id v43 = v62;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v62, v41, v6);
      uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
      v44(v43, 0, 1, v6);
      int v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v43, 1, v6);
      uint64_t v46 = v63;
      if (v45 == 1)
      {
        Class v40 = 0;
      }
      else
      {
        unint64_t v47 = v43;
        Class v40 = sub_1001093D0().super.isa;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v6);
      }
    }
    else
    {
      uint64_t v42 = v66;
      uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
      v44(v62, 1, 1, v6);
      uint64_t v46 = v63;
      uint64_t v41 = v64;
    }
    [v38 setLastUsedDate:v40];

    Class v48 = (Class)[v39 createdDate];
    if (v48)
    {
      sub_100109420();

      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v46, v41, v6);
      v44(v46, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v46, 1, v6) == 1)
      {
        Class v48 = 0;
      }
      else
      {
        Class v48 = sub_1001093D0().super.isa;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v6);
      }
    }
    else
    {
      v44(v46, 1, 1, v6);
    }
    [v38 setContentCreationDate:v48];

    Class v49 = (Class)[v39 updatedDate];
    if (v49)
    {
      sub_100109420();

      uint64_t v50 = v65;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v65, v41, v6);
      v44(v50, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v50, 1, v6) == 1)
      {
        Class v49 = 0;
      }
      else
      {
        Class v49 = sub_1001093D0().super.isa;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v50, v6);
      }
    }
    else
    {
      v44(v65, 1, 1, v6);
    }
    [v38 setContentModificationDate:v49];

    id v51 = [objc_allocWithZone((Class)NSNumber) initWithBool:sub_100092C40() != 4];
    [v38 setDisableSearchInSpotlight:v51];

    uint64_t v52 = v70;
    sub_100072EE4(v70);
    v44(v52, 0, 1, v6);
    sub_100109C80();
    sub_100109510();
    uint64_t v53 = sub_100109D60();
    uint64_t v55 = v54;
    sub_100004BD4((uint64_t *)&unk_10015F2B0);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_100122230;
    *(void *)(v56 + 32) = sub_100084A54(v53, v55, (uint64_t)v52);
    *(void *)(v56 + 40) = v57;
    Class v58 = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v38 setAlternateNames:v58];
    swift_bridgeObjectRelease();

    sub_10000B9CC((uint64_t)v52, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v38;
}

id sub_100046BC4(void *a1)
{
  if (![a1 showTitle]) {
    return 0;
  }
  id v2 = [a1 title];
  if (v2)
  {
    uint64_t v3 = sub_100109250();
    unint64_t v5 = v4;

    id v2 = sub_100081C44(v3, v5);
    sub_100007084(v3, v5);
    if (v2)
    {
      id v6 = [v2 string];

      id v2 = (id)sub_100109D30();
    }
  }
  return v2;
}

id sub_100046C98()
{
  uint64_t v1 = sub_1001091E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  Class v48 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v46 - v17;
  id v19 = sub_10003CCA8();
  id v20 = sub_100047274(v19, v0);
  id v21 = v20;
  if (v20)
  {
    unint64_t v47 = v5;
    id v22 = v20;
    id v23 = (objc_class *)[v0 entry];
    Class isa = v23;
    uint64_t v49 = v2;
    if (v23)
    {
      id v25 = [(objc_class *)v23 updatedDate];

      if (v25)
      {
        sub_100109420();

        uint64_t v26 = sub_100109460();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 0, 1, v26);
      }
      else
      {
        uint64_t v26 = sub_100109460();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 1, 1, v26);
      }
      sub_10000B800((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_10015CDE0);
      sub_100109460();
      uint64_t v28 = *(void *)(v26 - 8);
      Class isa = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v18, 1, v26) != 1)
      {
        Class isa = sub_1001093D0().super.isa;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v26);
      }
    }
    else
    {
      uint64_t v27 = sub_100109460();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 1, 1, v27);
    }
    [v22 setLastUsedDate:isa];

    id v29 = v22;
    id v30 = [v29 thumbnailURL];
    if (v30)
    {
      unint64_t v31 = v30;
      sub_100109140();

      uint64_t v32 = v49;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v12, v7, v1);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v12, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v1) != 1)
      {
        sub_10000B9CC((uint64_t)v12, (uint64_t *)&unk_100159D40);

LABEL_18:
        id v43 = v29;
        id v44 = [objc_allocWithZone((Class)NSNumber) initWithBool:sub_100092C40() != 4];
        [v43 setDisableSearchInSpotlight:v44];

        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v32 = v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v12, 1, 1, v1);
    }
    sub_10000B9CC((uint64_t)v12, (uint64_t *)&unk_100159D40);
    id v33 = [v29 thumbnailData];
    if (v33)
    {
      unint64_t v34 = v33;
      uint64_t v35 = sub_100109250();
      unint64_t v37 = v36;

      sub_100007084(v35, v37);
    }
    else
    {
      uint64_t v38 = (uint64_t)v48;
      sub_10002CED0(0, 1);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v38, 1, v1) == 1)
      {

        sub_10000B9CC(v38, (uint64_t *)&unk_100159D40);
      }
      else
      {
        id v39 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v47, v38, v1);
        sub_1001090F0(v40);
        uint64_t v42 = v41;
        [v29 setThumbnailURL:v41];

        (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v1);
      }
    }
    goto LABEL_18;
  }
LABEL_19:

  return v21;
}

id sub_100047274(void *a1, void *a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A410);
  __chkstk_darwin(v4 - 8);
  uint64_t v524 = (uint64_t)&v511 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v520 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v518 = *(void *)(v520 - 8);
  __chkstk_darwin(v520);
  uint64_t v517 = (uint64_t)&v511 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v521 = _s9LinkAssetC8LinkDataVMa(0);
  uint64_t v519 = *(void *)(v521 - 8);
  __chkstk_darwin(v521);
  uint64_t v514 = (uint64_t)&v511 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4(&qword_10015A2F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v525 = (uint64_t)&v511 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v573 = sub_1001091E0();
  uint64_t v574 = *(void *)(v573 - 8);
  __chkstk_darwin(v573);
  v516 = (char *)&v511 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4(&qword_10015A318);
  __chkstk_darwin(v11 - 8);
  uint64_t v537 = (uint64_t)&v511 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v536 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v534 = *(void *)(v536 - 8);
  __chkstk_darwin(v536);
  v529 = (uint64_t *)((char *)&v511 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v533 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v531 = *(void *)(v533 - 8);
  __chkstk_darwin(v533);
  uint64_t v523 = (uint64_t)&v511 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BD4(&qword_100159B58);
  __chkstk_darwin(v15 - 8);
  uint64_t v535 = (uint64_t)&v511 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004BD4(&qword_10015A290);
  __chkstk_darwin(v17 - 8);
  uint64_t v547 = (uint64_t)&v511 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v546 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v540 = (uint64_t)&v511 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v545 = (uint64_t *)((char *)&v511 - v22);
  uint64_t v23 = sub_100004BD4(&qword_10015A338);
  __chkstk_darwin(v23 - 8);
  uint64_t v553 = (uint64_t)&v511 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v552 = _s9BookAssetC8BookDataVMa(0);
  uint64_t v551 = *(void *)(v552 - 8);
  __chkstk_darwin(v552);
  uint64_t v26 = (char *)&v511 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100004BD4(&qword_100159728);
  __chkstk_darwin(v27 - 8);
  uint64_t v559 = (uint64_t)&v511 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v560 = _s10MusicAssetC9MusicDataVMa(0);
  uint64_t v558 = *(void *)(v560 - 8);
  uint64_t v29 = __chkstk_darwin(v560);
  uint64_t v548 = (uint64_t)&v511 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v554 = (char *)&v511 - v31;
  uint64_t v32 = sub_100004BD4(&qword_10015A360);
  __chkstk_darwin(v32 - 8);
  uint64_t v564 = (uint64_t)&v511 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v565 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v563 = *(void *)(v565 - 8);
  __chkstk_darwin(v565);
  uint64_t v35 = (char *)&v511 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004BD4(&qword_10015A380);
  __chkstk_darwin(v36 - 8);
  uint64_t v571 = (uint64_t)&v511 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v572 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v570 = *(void *)(v572 - 8);
  __chkstk_darwin(v572);
  v566 = (char *)&v511 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v40 = __chkstk_darwin(v39 - 8);
  v522 = (char *)&v511 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v526 = (uint64_t)&v511 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v541 = (uint64_t)&v511 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v549 = (uint64_t)&v511 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v555 = (char *)&v511 - v49;
  __chkstk_darwin(v48);
  v569 = (char *)&v511 - v50;
  uint64_t v51 = sub_100004BD4(&qword_10015A3D0);
  __chkstk_darwin(v51 - 8);
  uint64_t v578 = (uint64_t)&v511 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v579 = _s10VideoAssetC9VideoDataVMa(0);
  uint64_t v577 = *(void *)(v579 - 8);
  __chkstk_darwin(v579);
  uint64_t v575 = (uint64_t)&v511 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004BD4(&qword_10015A2D8);
  __chkstk_darwin(v54 - 8);
  uint64_t v56 = (char *)&v511 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v587 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v586 = *(void *)(v587 - 8);
  __chkstk_darwin(v587);
  uint64_t v580 = (uint64_t)&v511 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100109520();
  __chkstk_darwin(v58 - 8);
  v582 = (char *)&v511 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100109CE0();
  __chkstk_darwin(v60 - 8);
  v581 = (char *)&v511 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v63 = __chkstk_darwin(v62 - 8);
  uint64_t v513 = (uint64_t)&v511 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __chkstk_darwin(v63);
  v515 = (char *)&v511 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v527 = (uint64_t)&v511 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v528 = (char *)&v511 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v530 = (uint64_t)&v511 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v532 = (char *)&v511 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v538 = (uint64_t)&v511 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  v539 = (char *)&v511 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v543 = (uint64_t)&v511 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  v542 = (char *)&v511 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  v544 = (char *)&v511 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  v550 = (char *)&v511 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v556 = (char *)&v511 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v561 = (uint64_t)&v511 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v562 = (char *)&v511 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v567 = (uint64_t)&v511 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  v568 = (char *)&v511 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v99 = (char *)&v511 - v98;
  uint64_t v100 = __chkstk_darwin(v97);
  v576 = (char *)&v511 - v101;
  __chkstk_darwin(v100);
  id v103 = (char *)&v511 - v102;
  uint64_t v584 = sub_100109880();
  uint64_t v585 = *(void *)(v584 - 8);
  __chkstk_darwin(v584);
  v583 = (char *)&v511 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  v590 = a1;
  _s5AssetCMa();
  id v105 = a1;
  sub_100004BD4(&qword_10015ACF8);
  char v106 = swift_dynamicCast();
  v557 = v35;
  if (v106)
  {
    sub_10004BEA4(v588, (uint64_t)v591);
    objc_super v107 = v26;
    uint64_t v108 = v19;
    id v109 = a2;
    unint64_t v110 = v593;
    uint64_t v111 = v594;
    sub_10000B718(v591, v593);
    unint64_t v112 = v110;
    a2 = v109;
    uint64_t v19 = v108;
    uint64_t v26 = v107;
    id v113 = (id)(*(uint64_t (**)(unint64_t, uint64_t))(v111 + 8))(v112, v111);
    sub_10000B7B0((uint64_t)v591);
    if (v113) {
      return v113;
    }
  }
  else
  {
    uint64_t v589 = 0;
    memset(v588, 0, sizeof(v588));
    sub_10000B9CC((uint64_t)v588, &qword_10015AD00);
  }
  _s15ReflectionAssetCMa();
  if (swift_dynamicCastClass())
  {
    id v114 = v105;
    sub_1000F3030(v591);
    unint64_t v115 = v593;
    if (v593 >> 60 != 11 && v593 >> 60 != 15)
    {
      uint64_t v116 = v591[0];
      uint64_t v117 = v591[1];
      uint64_t v118 = v592;
      id v119 = sub_100081C44(v592, v593);
      sub_10002EED0(v116, v117, v118, v115);
      if (v119)
      {
        id v120 = [v119 string];

        uint64_t v121 = sub_100109D30();
        unint64_t v123 = v122;

        uint64_t v124 = v583;
        sub_1001097F0();
        id v125 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
        Class isa = sub_1001097B0().super.isa;
        id v113 = [v125 initWithContentType:isa];

        (*(void (**)(char *, uint64_t))(v585 + 8))(v124, v584);
        sub_100083154(v121, v123, 0, 0);
        swift_bridgeObjectRelease();
        id v127 = [a2 entry];
        if (v127)
        {
          CGFloat v128 = v127;
          sub_100072EE4(v103);

          uint64_t v129 = sub_100109460();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v103, 0, 1, v129);
        }
        else
        {
          uint64_t v171 = sub_100109460();
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56))(v103, 1, 1, v171);
        }
        sub_100109C80();
        sub_100109510();
        uint64_t v172 = sub_100109D60();
        uint64_t v174 = v173;
        sub_100004BD4((uint64_t *)&unk_10015F2B0);
        uint64_t v175 = swift_allocObject();
        *(_OWORD *)(v175 + 16) = xmmword_100122230;
        *(void *)(v175 + 32) = sub_100084A54(v172, v174, (uint64_t)v103);
        *(void *)(v175 + 40) = v176;
        Class v177 = sub_100109F20().super.isa;
        swift_bridgeObjectRelease();
        [v113 setAlternateNames:v177];

        swift_bridgeObjectRelease();
        sub_10000B9CC((uint64_t)v103, (uint64_t *)&unk_10015CDE0);
        return v113;
      }
    }
    goto LABEL_234;
  }
  _s10PhotoAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    id v130 = v105;
    sub_1000F3154((uint64_t)v56);
    uint64_t v131 = v587;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v586 + 48))(v56, 1, v587) == 1)
    {

      sub_10000B9CC((uint64_t)v56, &qword_10015A2D8);
      return 0;
    }
    uint64_t v136 = (uint64_t)v56;
    uint64_t v137 = v580;
    sub_10004BDDC(v136, v580, _s10PhotoAssetC9PhotoDataVMa);
    CGFloat v138 = (uint64_t *)(v137 + *(int *)(v131 + 24));
    unint64_t v139 = v138[1];
    if (!v139)
    {

      sub_10004BE44(v137, _s10PhotoAssetC9PhotoDataVMa);
      return 0;
    }
    uint64_t v140 = *v138;
    swift_bridgeObjectRetain();
    CGFloat v141 = v583;
    sub_100109820();
    id v142 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
    Class v143 = sub_1001097B0().super.isa;
    id v113 = [v142 initWithContentType:v143];

    (*(void (**)(char *, uint64_t))(v585 + 8))(v141, v584);
    sub_100083154(v140, v139, 0, 0);
    swift_bridgeObjectRelease();
    sub_1000248D8(v137 + *(int *)(v131 + 20), (uint64_t)v99, (uint64_t *)&unk_10015CDE0);
    uint64_t v144 = sub_100109460();
    uint64_t v145 = *(void *)(v144 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v99, 1, v144) == 1)
    {
      id v146 = [a2 entry];
      if (v146)
      {
        unint64_t v147 = v146;
        CGFloat v148 = v576;
        sub_100072EE4(v576);

        uint64_t v149 = 0;
      }
      else
      {
        uint64_t v149 = 1;
        CGFloat v148 = v576;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v145 + 56))(v148, v149, 1, v144);
      sub_10000B9CC((uint64_t)v99, (uint64_t *)&unk_10015CDE0);
    }
    else
    {
      CGFloat v148 = v576;
      (*(void (**)(unsigned char *, char *, uint64_t))(v145 + 32))(v576, v99, v144);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v145 + 56))(v148, 0, 1, v144);
    }
    sub_100109C80();
    sub_100109510();
    uint64_t v196 = sub_100109D60();
    uint64_t v198 = v197;
    sub_100004BD4((uint64_t *)&unk_10015F2B0);
    uint64_t v199 = swift_allocObject();
    *(_OWORD *)(v199 + 16) = xmmword_100122230;
    *(void *)(v199 + 32) = sub_100084A54(v196, v198, (uint64_t)v148);
    *(void *)(v199 + 40) = v200;
    Class v201 = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v113 setAlternateNames:v201];

    swift_bridgeObjectRelease();
    sub_10000B9CC((uint64_t)v148, (uint64_t *)&unk_10015CDE0);
    CGFloat v202 = _s10PhotoAssetC9PhotoDataVMa;
LABEL_56:
    sub_10004BE44(v137, v202);
    return v113;
  }
  _s10VideoAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    id v132 = v105;
    uint64_t v133 = v578;
    sub_1000F337C(v578);
    uint64_t v134 = v579;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v577 + 48))(v133, 1, v579) == 1)
    {

      uint64_t v135 = &qword_10015A3D0;
LABEL_60:
      sub_10000B9CC(v133, v135);
      return 0;
    }
    uint64_t v137 = v575;
    sub_10004BDDC(v133, v575, _s10VideoAssetC9VideoDataVMa);
    CGFloat v152 = (uint64_t *)(v137 + *(int *)(v134 + 24));
    unint64_t v153 = v152[1];
    if (v153)
    {
      uint64_t v154 = *v152;
      swift_bridgeObjectRetain();
      CGFloat v155 = v583;
      sub_100109840();
      id v156 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
      Class v157 = sub_1001097B0().super.isa;
      id v113 = [v156 initWithContentType:v157];

      (*(void (**)(char *, uint64_t))(v585 + 8))(v155, v584);
      CGFloat v158 = v569;
      sub_100021028(0, 1, v569);
      uint64_t v159 = v574;
      uint64_t v160 = v573;
      CGFloat v162 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v574 + 48))(v158, 1, v573) != 1)
      {
        sub_1001090F0(v161);
        CGFloat v162 = v163;
        (*(void (**)(char *, uint64_t))(v159 + 8))(v158, v160);
      }
      [v113 setContentURL:v162];

      sub_100083154(v154, v153, 0, 0);
      swift_bridgeObjectRelease();
      uint64_t v164 = v567;
      sub_1000248D8(v137 + *(int *)(v579 + 20), v567, (uint64_t *)&unk_10015CDE0);
      uint64_t v165 = sub_100109460();
      uint64_t v166 = *(void *)(v165 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48))(v164, 1, v165) == 1)
      {
        id v167 = [a2 entry];
        uint64_t v168 = v568;
        if (v167)
        {
          uint64_t v169 = v167;
          sub_100072EE4(v568);

          uint64_t v170 = 0;
        }
        else
        {
          uint64_t v170 = 1;
        }
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v168, v170, 1, v165);
        sub_10000B9CC(v164, (uint64_t *)&unk_10015CDE0);
      }
      else
      {
        uint64_t v168 = v568;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v568, v164, v165);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v166 + 56))(v168, 0, 1, v165);
      }
      sub_100109C80();
      sub_100109510();
      uint64_t v207 = sub_100109D60();
      uint64_t v209 = v208;
      sub_100004BD4((uint64_t *)&unk_10015F2B0);
      uint64_t v210 = swift_allocObject();
      *(_OWORD *)(v210 + 16) = xmmword_100122230;
      *(void *)(v210 + 32) = sub_100084A54(v207, v209, (uint64_t)v168);
      *(void *)(v210 + 40) = v211;
      Class v212 = sub_100109F20().super.isa;
      swift_bridgeObjectRelease();
      [v113 setAlternateNames:v212];

      swift_bridgeObjectRelease();
      sub_10000B9CC((uint64_t)v168, (uint64_t *)&unk_10015CDE0);
      CGFloat v202 = _s10VideoAssetC9VideoDataVMa;
      goto LABEL_56;
    }
    CGFloat v194 = _s10VideoAssetC9VideoDataVMa;
    uint64_t v195 = v137;
LABEL_43:
    sub_10004BE44(v195, v194);

    return 0;
  }
  _s14LivePhotoAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    id v150 = v105;
    uint64_t v133 = v571;
    sub_1000F35A4(v571);
    uint64_t v151 = v572;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v570 + 48))(v133, 1, v572) == 1)
    {

      uint64_t v135 = &qword_10015A380;
      goto LABEL_60;
    }
    uint64_t v26 = v566;
    sub_10004BDDC(v133, (uint64_t)v566, _s14LivePhotoAssetC13LivePhotoDataVMa);
    CGFloat v181 = (uint64_t *)&v26[*(int *)(v151 + 24)];
    unint64_t v182 = v181[1];
    if (!v182)
    {

      sub_10004BE44((uint64_t)v26, _s14LivePhotoAssetC13LivePhotoDataVMa);
      return 0;
    }
    uint64_t v183 = *v181;
    swift_bridgeObjectRetain();
    double v184 = v583;
    sub_100109870();
    id v185 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
    Class v186 = sub_1001097B0().super.isa;
    id v113 = [v185 initWithContentType:v186];

    (*(void (**)(char *, uint64_t))(v585 + 8))(v184, v584);
    sub_100083154(v183, v182, 0, 0);
    swift_bridgeObjectRelease();
    uint64_t v187 = v561;
    sub_1000248D8((uint64_t)&v26[*(int *)(v151 + 20)], v561, (uint64_t *)&unk_10015CDE0);
    uint64_t v188 = sub_100109460();
    uint64_t v189 = *(void *)(v188 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188) == 1)
    {
      id v190 = [a2 entry];
      if (v190)
      {
        CGFloat v191 = v190;
        CGFloat v192 = v562;
        sub_100072EE4(v562);

        uint64_t v193 = 0;
      }
      else
      {
        uint64_t v193 = 1;
        CGFloat v192 = v562;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v189 + 56))(v192, v193, 1, v188);
      sub_10000B9CC(v187, (uint64_t *)&unk_10015CDE0);
    }
    else
    {
      CGFloat v192 = v562;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v189 + 32))(v562, v187, v188);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v189 + 56))(v192, 0, 1, v188);
    }
    sub_100109C80();
    sub_100109510();
    uint64_t v220 = sub_100109D60();
    uint64_t v222 = v221;
    sub_100004BD4((uint64_t *)&unk_10015F2B0);
    uint64_t v223 = swift_allocObject();
    *(_OWORD *)(v223 + 16) = xmmword_100122230;
    *(void *)(v223 + 32) = sub_100084A54(v220, v222, (uint64_t)v192);
    *(void *)(v223 + 40) = v224;
    Class v225 = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v113 setAlternateNames:v225];

    swift_bridgeObjectRelease();
    sub_10000B9CC((uint64_t)v192, (uint64_t *)&unk_10015CDE0);
    CGFloat v226 = _s14LivePhotoAssetC13LivePhotoDataVMa;
LABEL_70:
    sub_10004BE44((uint64_t)v26, v226);
    return v113;
  }
  _s12PodcastAssetCMa(0);
  uint64_t v178 = swift_dynamicCastClass();
  if (!v178)
  {
    _s10MusicAssetCMa(0);
    uint64_t v203 = swift_dynamicCastClass();
    if (v203)
    {
      if (!*(void *)(v203 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10MusicAsset_metadata))
      {
        uint64_t v205 = v559;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v558 + 56))(v559, 1, 1, v560);
        goto LABEL_72;
      }
      id v204 = v105;
      swift_retain();
      uint64_t v205 = v559;
      sub_100024CA4(v559);
      swift_release();
      CGFloat v206 = (int *)v560;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v558 + 48))(v205, 1, v560) == 1)
      {

LABEL_72:
        sub_10000B9CC(v205, &qword_100159728);
        return 0;
      }
      uint64_t v26 = v554;
      sub_10004BDDC(v205, (uint64_t)v554, _s10MusicAssetC9MusicDataVMa);
      CGFloat v227 = v583;
      sub_100109810();
      id v228 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
      Class v229 = sub_1001097B0().super.isa;
      id v230 = [v228 initWithContentType:v229];

      (*(void (**)(char *, uint64_t))(v585 + 8))(v227, v584);
      uint64_t v231 = *(void *)&v26[v206[7] + 8];
      uint64_t v232 = v548;
      sub_10004BD74((uint64_t)v26, v548, _s10MusicAssetC9MusicDataVMa);
      *(void *)&long long v587 = v204;
      if (v231)
      {
        swift_bridgeObjectRetain();
        sub_10004BE44(v232, _s10MusicAssetC9MusicDataVMa);
        uint64_t v233 = v574;
      }
      else
      {
        uint64_t v262 = *(void *)(v232 + v206[8] + 8);
        swift_bridgeObjectRetain();
        sub_10004BE44(v232, _s10MusicAssetC9MusicDataVMa);
        uint64_t v233 = v574;
        if (!v262)
        {
          CGFloat v263 = a2;
          NSString v264 = 0;
          goto LABEL_96;
        }
      }
      CGFloat v263 = a2;
      NSString v264 = sub_100109CF0();
      swift_bridgeObjectRelease();
LABEL_96:
      CGFloat v265 = v230;
      [v230 setDisplayName:v264];

      sub_100004BD4(&qword_100159730);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100122220;
      CGFloat v267 = &v26[v206[8]];
      uint64_t v269 = *(void *)v267;
      uint64_t v268 = *((void *)v267 + 1);
      *(void *)(inited + 32) = *(void *)v267;
      *(void *)(inited + 40) = v268;
      CGFloat v270 = &v26[v206[6]];
      uint64_t v272 = *(void *)v270;
      uint64_t v271 = *((void *)v270 + 1);
      *(void *)(inited + 48) = *(void *)v270;
      *(void *)(inited + 56) = v271;
      if (v268)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        CGFloat v273 = sub_10009E5BC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v275 = *((void *)v273 + 2);
        unint64_t v274 = *((void *)v273 + 3);
        if (v275 >= v274 >> 1) {
          CGFloat v273 = sub_10009E5BC((char *)(v274 > 1), v275 + 1, 1, v273);
        }
        *((void *)v273 + 2) = v275 + 1;
        CGFloat v276 = &v273[16 * v275];
        *((void *)v276 + 4) = v269;
        *((void *)v276 + 5) = v268;
        uint64_t v233 = v574;
        uint64_t v26 = v554;
      }
      else
      {
        swift_bridgeObjectRetain();
        CGFloat v273 = (char *)_swiftEmptyArrayStorage;
      }
      CGFloat v277 = v263;
      if (v271)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          CGFloat v273 = sub_10009E5BC(0, *((void *)v273 + 2) + 1, 1, v273);
        }
        unint64_t v279 = *((void *)v273 + 2);
        unint64_t v278 = *((void *)v273 + 3);
        if (v279 >= v278 >> 1) {
          CGFloat v273 = sub_10009E5BC((char *)(v278 > 1), v279 + 1, 1, v273);
        }
        *((void *)v273 + 2) = v279 + 1;
        CGFloat v280 = &v273[16 * v279];
        *((void *)v280 + 4) = v272;
        *((void *)v280 + 5) = v271;
        uint64_t v26 = v554;
      }
      swift_release();
      v591[0] = (uint64_t)v273;
      sub_100004BD4((uint64_t *)&unk_10015F2A0);
      sub_1000424EC();
      sub_100109C30();
      swift_bridgeObjectRelease();
      NSString v281 = sub_100109CF0();
      swift_bridgeObjectRelease();
      id v113 = v265;
      [v265 setContentDescription:v281];

      uint64_t v282 = v549;
      sub_1000248D8((uint64_t)&v26[*(int *)(v560 + 20)], v549, (uint64_t *)&unk_100159D40);
      uint64_t v283 = v573;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))(v282, 1, v573) == 1)
      {
        CGFloat v285 = 0;
      }
      else
      {
        sub_1001090F0(v284);
        CGFloat v285 = v286;
        (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v282, v283);
      }
      CGFloat v287 = v550;
      CGFloat v288 = (void *)v587;
      [v265 setThumbnailURL:v285];

      id v289 = [v277 entry];
      if (v289)
      {
        CGFloat v290 = v289;
        sub_100072EE4(v287);

        uint64_t v291 = sub_100109460();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v291 - 8) + 56))(v287, 0, 1, v291);
      }
      else
      {
        uint64_t v292 = sub_100109460();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v292 - 8) + 56))(v287, 1, 1, v292);
      }
      sub_100109C80();
      sub_100109510();
      uint64_t v293 = sub_100109D60();
      uint64_t v295 = v294;
      sub_100004BD4((uint64_t *)&unk_10015F2B0);
      uint64_t v296 = swift_allocObject();
      *(_OWORD *)(v296 + 16) = xmmword_100122230;
      *(void *)(v296 + 32) = sub_100084A54(v293, v295, (uint64_t)v287);
      *(void *)(v296 + 40) = v297;
      Class v298 = sub_100109F20().super.isa;
      swift_bridgeObjectRelease();
      [v265 setAlternateNames:v298];

      swift_bridgeObjectRelease();
      sub_10000B9CC((uint64_t)v287, (uint64_t *)&unk_10015CDE0);
      CGFloat v226 = _s10MusicAssetC9MusicDataVMa;
      goto LABEL_70;
    }
    _s9BookAssetCMa(0);
    uint64_t v218 = swift_dynamicCastClass();
    if (v218)
    {
      if (*(void *)(v218 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9BookAsset_metadata))
      {
        id v219 = v105;
        swift_retain();
        uint64_t v133 = v553;
        sub_1000267A8(v553);
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v551 + 48))(v133, 1, v552) != 1)
        {
          sub_10004BDDC(v133, (uint64_t)v26, _s9BookAssetC8BookDataVMa);
          CGFloat v258 = v583;
          sub_100109810();
          id v259 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
          Class v260 = sub_1001097B0().super.isa;
          id v113 = [v259 initWithContentType:v260];

          (*(void (**)(char *, uint64_t))(v585 + 8))(v258, v584);
          if (*((void *)v26 + 3))
          {
            swift_bridgeObjectRetain();
            NSString v261 = sub_100109CF0();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v261 = 0;
          }
          CGFloat v325 = v544;
          [v113 setDisplayName:v261];

          if (*((void *)v26 + 5))
          {
            swift_bridgeObjectRetain();
            NSString v326 = sub_100109CF0();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v326 = 0;
          }
          [v113 setContentDescription:v326];

          id v327 = [a2 entry];
          if (v327)
          {
            CGFloat v328 = v327;
            sub_100072EE4(v325);

            uint64_t v329 = sub_100109460();
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v329 - 8) + 56))(v325, 0, 1, v329);
          }
          else
          {
            uint64_t v330 = sub_100109460();
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v330 - 8) + 56))(v325, 1, 1, v330);
          }
          sub_100109C80();
          sub_100109510();
          uint64_t v331 = sub_100109D60();
          uint64_t v333 = v332;
          sub_100004BD4((uint64_t *)&unk_10015F2B0);
          uint64_t v334 = swift_allocObject();
          *(_OWORD *)(v334 + 16) = xmmword_100122230;
          *(void *)(v334 + 32) = sub_100084A54(v331, v333, (uint64_t)v325);
          *(void *)(v334 + 40) = v335;
          Class v336 = sub_100109F20().super.isa;
          swift_bridgeObjectRelease();
          [v113 setAlternateNames:v336];

          swift_bridgeObjectRelease();
          sub_10000B9CC((uint64_t)v325, (uint64_t *)&unk_10015CDE0);
          CGFloat v226 = _s9BookAssetC8BookDataVMa;
          goto LABEL_70;
        }
      }
      else
      {
        uint64_t v133 = v553;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v551 + 56))(v553, 1, 1, v552);
      }
      uint64_t v135 = &qword_10015A338;
      goto LABEL_60;
    }
    _s20ThirdPartyMediaAssetCMa(0);
    uint64_t v256 = swift_dynamicCastClass();
    if (v256)
    {
      if (!*(void *)(v256 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling20ThirdPartyMediaAsset_metadata))
      {
        uint64_t v133 = v547;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v546 + 56))(v547, 1, 1, v19);
        goto LABEL_126;
      }
      id v257 = v105;
      swift_retain();
      uint64_t v133 = v547;
      sub_100026ADC(v547);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v546 + 48))(v133, 1, v19) == 1)
      {

LABEL_126:
        uint64_t v135 = &qword_10015A290;
        goto LABEL_60;
      }
      uint64_t v317 = v19;
      CGFloat v318 = v545;
      sub_10004BDDC(v133, (uint64_t)v545, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
      CGFloat v319 = v583;
      sub_100109810();
      id v320 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
      Class v321 = sub_1001097B0().super.isa;
      id v322 = [v320 initWithContentType:v321];

      (*(void (**)(char *, uint64_t))(v585 + 8))(v319, v584);
      uint64_t v323 = v318[2];
      uint64_t v324 = v540;
      sub_10004BD74((uint64_t)v318, v540, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
      id v512 = a2;
      if (v323)
      {
        swift_bridgeObjectRetain();
        sub_10004BE44(v324, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
      }
      else
      {
        uint64_t v341 = *(void *)(v324 + 32);
        swift_bridgeObjectRetain();
        sub_10004BE44(v324, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
        if (!v341)
        {
          NSString v342 = 0;
          CGFloat v318 = v545;
          goto LABEL_145;
        }
        CGFloat v318 = v545;
      }
      NSString v342 = sub_100109CF0();
      swift_bridgeObjectRelease();
LABEL_145:
      *(void *)&long long v587 = v322;
      [v322 setDisplayName:v342];

      sub_100004BD4(&qword_100159730);
      uint64_t v343 = swift_initStackObject();
      *(_OWORD *)(v343 + 16) = xmmword_100122220;
      uint64_t v345 = v318[3];
      uint64_t v344 = v318[4];
      *(void *)(v343 + 32) = v345;
      *(void *)(v343 + 40) = v344;
      uint64_t v347 = v318[5];
      uint64_t v346 = v318[6];
      *(void *)(v343 + 48) = v347;
      *(void *)(v343 + 56) = v346;
      if (v344)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        CGFloat v348 = sub_10009E5BC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v350 = *((void *)v348 + 2);
        unint64_t v349 = *((void *)v348 + 3);
        if (v350 >= v349 >> 1) {
          CGFloat v348 = sub_10009E5BC((char *)(v349 > 1), v350 + 1, 1, v348);
        }
        *((void *)v348 + 2) = v350 + 1;
        CGFloat v351 = &v348[16 * v350];
        *((void *)v351 + 4) = v345;
        *((void *)v351 + 5) = v344;
      }
      else
      {
        swift_bridgeObjectRetain();
        CGFloat v348 = (char *)_swiftEmptyArrayStorage;
      }
      if (v346)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          CGFloat v348 = sub_10009E5BC(0, *((void *)v348 + 2) + 1, 1, v348);
        }
        unint64_t v353 = *((void *)v348 + 2);
        unint64_t v352 = *((void *)v348 + 3);
        if (v353 >= v352 >> 1) {
          CGFloat v348 = sub_10009E5BC((char *)(v352 > 1), v353 + 1, 1, v348);
        }
        *((void *)v348 + 2) = v353 + 1;
        CGFloat v354 = &v348[16 * v353];
        *((void *)v354 + 4) = v347;
        *((void *)v354 + 5) = v346;
      }
      uint64_t v355 = v574;
      uint64_t v356 = v573;
      CGFloat v357 = (char *)v545;
      swift_release();
      v591[0] = (uint64_t)v348;
      sub_100004BD4((uint64_t *)&unk_10015F2A0);
      sub_1000424EC();
      sub_100109C30();
      swift_bridgeObjectRelease();
      NSString v358 = sub_100109CF0();
      swift_bridgeObjectRelease();
      id v113 = (id)v587;
      [(id)v587 setContentDescription:v358];

      uint64_t v359 = v541;
      sub_1000248D8((uint64_t)&v357[*(int *)(v317 + 32)], v541, (uint64_t *)&unk_100159D40);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v355 + 48))(v359, 1, v356) == 1)
      {
        CGFloat v361 = 0;
      }
      else
      {
        sub_1001090F0(v360);
        CGFloat v361 = v362;
        (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v359, v356);
      }
      [v113 setThumbnailURL:v361];

      uint64_t v363 = sub_100098A84(*v357);
      uint64_t v365 = v364;
      uint64_t v366 = v543;
      sub_1000248D8((uint64_t)&v357[*(int *)(v317 + 40)], v543, (uint64_t *)&unk_10015CDE0);
      uint64_t v367 = sub_100109460();
      uint64_t v368 = *(void *)(v367 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v368 + 48))(v366, 1, v367) == 1)
      {
        id v369 = [v512 entry];
        if (v369)
        {
          CGFloat v370 = v369;
          sub_100072EE4(v542);

          uint64_t v371 = 0;
        }
        else
        {
          uint64_t v371 = 1;
        }
        CGFloat v372 = v542;
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v368 + 56))(v542, v371, 1, v367);
        sub_10000B9CC(v543, (uint64_t *)&unk_10015CDE0);
        id v113 = (id)v587;
        CGFloat v357 = (char *)v545;
      }
      else
      {
        CGFloat v372 = v542;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v368 + 32))(v542, v543, v367);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v368 + 56))(v372, 0, 1, v367);
      }
      sub_100004BD4((uint64_t *)&unk_10015F2B0);
      uint64_t v386 = swift_allocObject();
      *(_OWORD *)(v386 + 16) = xmmword_100122230;
      *(void *)(v386 + 32) = sub_100084A54(v363, v365, (uint64_t)v372);
      *(void *)(v386 + 40) = v387;
      Class v388 = sub_100109F20().super.isa;
      swift_bridgeObjectRelease();
      [v113 setAlternateNames:v388];
      swift_bridgeObjectRelease();

      sub_10000B9CC((uint64_t)v372, (uint64_t *)&unk_10015CDE0);
      sub_10004BE44((uint64_t)v357, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
      return v113;
    }
    _s10AudioAssetCMa(0);
    uint64_t v299 = swift_dynamicCastClass();
    if (v299)
    {
      uint64_t v300 = v299;
      CGFloat v301 = v105;
      uint64_t v302 = sub_100013224();
      if (v303)
      {
        uint64_t v304 = v302;
        unint64_t v305 = v303;
        uint64_t v306 = HIBYTE(v303) & 0xF;
        if ((v303 & 0x2000000000000000) == 0) {
          uint64_t v306 = v302 & 0xFFFFFFFFFFFFLL;
        }
        if (!v306)
        {
          swift_bridgeObjectRelease();

          return 0;
        }
        CGFloat v307 = v583;
        sub_100109810();
        id v308 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
        Class v309 = sub_1001097B0().super.isa;
        id v310 = [v308 initWithContentType:v309];

        (*(void (**)(char *, uint64_t))(v585 + 8))(v307, v584);
        id v113 = v310;
        sub_100083154(0, 0, v304, v305);
        swift_bridgeObjectRelease();
        if (*(void *)(v300 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10AudioAsset_metadata))
        {
          swift_retain();
          uint64_t v311 = v535;
          sub_100024FD8(v535);
          swift_release();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v531 + 48))(v311, 1, v533))
          {
            uint64_t v413 = v535;
            uint64_t v414 = v523;
            sub_10004BD74(v535, v523, _s10AudioAssetC9AudioDataVMa);
            sub_10000B9CC(v413, &qword_100159B58);
            uint64_t v415 = v538;
            sub_1000248D8(v414 + *(int *)(v533 + 24), v538, (uint64_t *)&unk_10015CDE0);
            sub_10004BE44(v414, _s10AudioAssetC9AudioDataVMa);
            uint64_t v416 = sub_100109460();
            uint64_t v417 = *(void *)(v416 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v417 + 48))(v415, 1, v416) != 1)
            {
              CGFloat v418 = v539;
              (*(void (**)(unsigned char *, uint64_t, uint64_t))(v417 + 32))(v539, v538, v416);
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v417 + 56))(v418, 0, 1, v416);
LABEL_176:
              sub_100109C80();
              sub_100109510();
              uint64_t v392 = sub_100109D60();
              uint64_t v394 = v393;
              sub_100004BD4((uint64_t *)&unk_10015F2B0);
              uint64_t v395 = swift_allocObject();
              *(_OWORD *)(v395 + 16) = xmmword_100122230;
              CGFloat v396 = v539;
              *(void *)(v395 + 32) = sub_100084A54(v392, v394, (uint64_t)v539);
              *(void *)(v395 + 40) = v397;
              Class v398 = sub_100109F20().super.isa;
              swift_bridgeObjectRelease();
              [v310 setAlternateNames:v398];

              swift_bridgeObjectRelease();
              sub_10000B9CC((uint64_t)v396, (uint64_t *)&unk_10015CDE0);
              return v113;
            }
LABEL_123:
            id v313 = [a2 entry];
            if (v313)
            {
              CGFloat v314 = v313;
              CGFloat v315 = v539;
              sub_100072EE4(v539);

              uint64_t v316 = sub_100109460();
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v316 - 8) + 56))(v315, 0, 1, v316);
            }
            else
            {
              uint64_t v391 = sub_100109460();
              (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v391 - 8) + 56))(v539, 1, 1, v391);
            }
            sub_10000B9CC(v538, (uint64_t *)&unk_10015CDE0);
            goto LABEL_176;
          }
          sub_10000B9CC(v535, &qword_100159B58);
        }
        uint64_t v312 = sub_100109460();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v312 - 8) + 56))(v538, 1, 1, v312);
        goto LABEL_123;
      }
LABEL_200:

      return 0;
    }
    CGFloat v337 = a2;
    _s12ContactAssetCMa(0);
    uint64_t v338 = swift_dynamicCastClass();
    if (v338)
    {
      if (!*(void *)(v338 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling12ContactAsset_metadata))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v534 + 56))(v537, 1, 1, v536);
        goto LABEL_172;
      }
      id v339 = v105;
      swift_retain();
      uint64_t v340 = v537;
      sub_100026E10(v537);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v534 + 48))(v340, 1, v536) == 1)
      {

LABEL_172:
        CGFloat v389 = &qword_10015A318;
        CGFloat v390 = &v569;
LABEL_173:
        sub_10000B9CC((uint64_t)*(v390 - 32), v389);
        return 0;
      }
      CGFloat v399 = v529;
      sub_10004BDDC(v537, (uint64_t)v529, _s12ContactAssetC11ContactDataVMa);
      CGFloat v400 = v583;
      sub_100109850();
      id v401 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
      Class v402 = sub_1001097B0().super.isa;
      id v113 = [v401 initWithContentType:v402];

      (*(void (**)(char *, uint64_t))(v585 + 8))(v400, v584);
      sub_100004BD4((uint64_t *)&unk_10015F2B0);
      uint64_t v403 = swift_allocObject();
      long long v587 = xmmword_100122230;
      *(_OWORD *)(v403 + 16) = xmmword_100122230;
      uint64_t v404 = v399[1];
      *(void *)(v403 + 32) = *v399;
      *(void *)(v403 + 40) = v404;
      swift_bridgeObjectRetain();
      Class v405 = sub_100109F20().super.isa;
      swift_bridgeObjectRelease();
      [v113 setAuthorNames:v405];

      swift_bridgeObjectRetain();
      NSString v406 = sub_100109CF0();
      swift_bridgeObjectRelease();
      [v113 setDisplayName:v406];

      uint64_t v407 = v530;
      sub_1000248D8((uint64_t)v399 + *(int *)(v536 + 20), v530, (uint64_t *)&unk_10015CDE0);
      uint64_t v408 = sub_100109460();
      uint64_t v409 = *(void *)(v408 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v409 + 48))(v407, 1, v408) == 1)
      {
        id v410 = [v337 entry];
        if (v410)
        {
          double v411 = v410;
          sub_100072EE4(v532);

          uint64_t v412 = 0;
        }
        else
        {
          uint64_t v412 = 1;
        }
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v409 + 56))(v532, v412, 1, v408);
        sub_10000B9CC(v530, (uint64_t *)&unk_10015CDE0);
      }
      else
      {
        CGFloat v421 = v532;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v409 + 32))(v532, v530, v408);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v409 + 56))(v421, 0, 1, v408);
      }
      sub_100109C80();
      sub_100109510();
      uint64_t v435 = sub_100109D60();
      uint64_t v437 = v436;
      uint64_t v438 = swift_allocObject();
      *(_OWORD *)(v438 + 16) = v587;
      CGFloat v439 = v532;
      *(void *)(v438 + 32) = sub_100084A54(v435, v437, (uint64_t)v532);
      *(void *)(v438 + 40) = v440;
      Class v441 = sub_100109F20().super.isa;
      swift_bridgeObjectRelease();
      [v113 setAlternateNames:v441];

      swift_bridgeObjectRelease();
      sub_10000B9CC((uint64_t)v439, (uint64_t *)&unk_10015CDE0);
      double v442 = _s12ContactAssetC11ContactDataVMa;
      double v443 = &v561;
LABEL_204:
      sub_10004BE44(*(v443 - 32), v442);
      return v113;
    }
    _s9LinkAssetCMa(0);
    uint64_t v373 = swift_dynamicCastClass();
    if (!v373)
    {
      _s16StateOfMindAssetCMa(0);
      uint64_t v419 = swift_dynamicCastClass();
      if (!v419)
      {
        if (qword_100158910 != -1) {
          swift_once();
        }
        uint64_t v430 = sub_100109960();
        sub_100007CB8(v430, (uint64_t)qword_10015ACE0);
        id v114 = v105;
        CGFloat v301 = sub_100109940();
        os_log_type_t v431 = sub_10010A2D0();
        if (!os_log_type_enabled(v301, v431))
        {

LABEL_234:
          return 0;
        }
        double v432 = (uint8_t *)swift_slowAlloc();
        CGFloat v433 = (void *)swift_slowAlloc();
        *(_DWORD *)double v432 = 138412290;
        v591[0] = (uint64_t)v114;
        id v434 = v114;
        sub_10010A730();
        *CGFloat v433 = v114;

        _os_log_impl((void *)&_mh_execute_header, v301, v431, "JournalEntryAssetMO.getSearchableItemAttributeSet asset type not indexed: %@", v432, 0xCu);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        goto LABEL_200;
      }
      if (*(void *)(v419 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StateOfMindAsset_metadata))
      {
        id v132 = v105;
        swift_retain();
        uint64_t v420 = v524;
        sub_100027144(v524);
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v518 + 48))(v420, 1, v520) != 1)
        {
          sub_10004BDDC(v524, v517, _s16StateOfMindAssetC15StateOfMindDataVMa);
          uint64_t v484 = sub_100043C18();
          unint64_t v486 = v485;
          swift_bridgeObjectRelease();
          uint64_t v487 = HIBYTE(v486) & 0xF;
          if ((v486 & 0x2000000000000000) == 0) {
            uint64_t v487 = v484 & 0xFFFFFFFFFFFFLL;
          }
          if (!v487)
          {
            CGFloat v194 = _s16StateOfMindAssetC15StateOfMindDataVMa;
            uint64_t v195 = v517;
            goto LABEL_43;
          }
          v488 = v583;
          sub_1001097F0();
          id v489 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
          Class v490 = sub_1001097B0().super.isa;
          id v491 = [v489 initWithContentType:v490];

          (*(void (**)(char *, uint64_t))(v585 + 8))(v488, v584);
          uint64_t v492 = v517;
          sub_100043C18();
          NSString v493 = sub_100109CF0();
          swift_bridgeObjectRelease();
          [v491 setDisplayName:v493];

          sub_100043DC4();
          NSString v494 = sub_100109CF0();
          swift_bridgeObjectRelease();
          id v113 = v491;
          [v491 setContentDescription:v494];

          uint64_t v495 = v492 + *(int *)(v520 + 20);
          uint64_t v496 = v513;
          sub_1000248D8(v495, v513, (uint64_t *)&unk_10015CDE0);
          uint64_t v497 = sub_100109460();
          uint64_t v498 = *(void *)(v497 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v498 + 48))(v496, 1, v497) == 1)
          {
            id v499 = [a2 entry];
            if (v499)
            {
              v500 = v499;
              sub_100072EE4(v515);

              uint64_t v501 = 0;
            }
            else
            {
              uint64_t v501 = 1;
            }
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v498 + 56))(v515, v501, 1, v497);
            sub_10000B9CC(v513, (uint64_t *)&unk_10015CDE0);
          }
          else
          {
            v503 = v515;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v498 + 32))(v515, v513, v497);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v498 + 56))(v503, 0, 1, v497);
          }
          sub_100109C80();
          sub_100109510();
          uint64_t v504 = sub_100109D60();
          uint64_t v506 = v505;
          sub_100004BD4((uint64_t *)&unk_10015F2B0);
          uint64_t v507 = swift_allocObject();
          *(_OWORD *)(v507 + 16) = xmmword_100122230;
          v508 = v515;
          *(void *)(v507 + 32) = sub_100084A54(v504, v506, (uint64_t)v515);
          *(void *)(v507 + 40) = v509;
          Class v510 = sub_100109F20().super.isa;
          swift_bridgeObjectRelease();
          [v113 setAlternateNames:v510];

          swift_bridgeObjectRelease();
          sub_10000B9CC((uint64_t)v508, (uint64_t *)&unk_10015CDE0);
          double v442 = _s16StateOfMindAssetC15StateOfMindDataVMa;
          double v443 = &v549;
          goto LABEL_204;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v518 + 56))(v524, 1, 1, v520);
      }
      CGFloat v389 = &qword_10015A410;
      CGFloat v390 = &v556;
      goto LABEL_173;
    }
    uint64_t v374 = v373;
    CGFloat v301 = v105;
    id v375 = sub_1000A0B70();
    if (!v375) {
      goto LABEL_200;
    }
    CGFloat v376 = v375;
    CGFloat v377 = v583;
    sub_1001097F0();
    id v378 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
    Class v379 = sub_1001097B0().super.isa;
    id v380 = [v378 initWithContentType:v379];

    (*(void (**)(char *, uint64_t))(v585 + 8))(v377, v584);
    id v381 = [v376 title];
    if (v381)
    {
      CGFloat v382 = v381;
      uint64_t v383 = sub_100109D30();
      unint64_t v385 = v384;
    }
    else
    {
      uint64_t v383 = 0;
      unint64_t v385 = 0;
    }
    id v422 = [v376 appleSummary];
    if (v422 || (id v422 = [v376 summary]) != 0)
    {
      uint64_t v423 = sub_100109D30();
      unint64_t v425 = v424;
    }
    else
    {
      uint64_t v423 = 0;
      unint64_t v425 = 0;
    }
    sub_100083154(v383, v385, v423, v425);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v426 = [v376 imageMetadata];
    if (v426)
    {
      double v427 = v426;
      id v428 = [v426 URL];

      if (v428)
      {
        sub_100109140();

        uint64_t v429 = 0;
      }
      else
      {
        uint64_t v429 = 1;
      }
      uint64_t v444 = v574;
      double v445 = v522;
      uint64_t v446 = v573;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v574 + 56))(v522, v429, 1, v573);
      uint64_t v447 = (uint64_t)v445;
      uint64_t v448 = v526;
      sub_10000B800(v447, v526, (uint64_t *)&unk_100159D40);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v444 + 48))(v448, 1, v446) != 1)
      {
        uint64_t v456 = v574;
        double v457 = v516;
        uint64_t v458 = v573;
        (*(void (**)(char *, uint64_t, uint64_t))(v574 + 32))(v516, v526, v573);
        sub_1001090F0(v459);
        double v461 = v460;
        [v380 setThumbnailURL:v460];

        (*(void (**)(char *, uint64_t))(v456 + 8))(v457, v458);
        goto LABEL_211;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v574 + 56))(v526, 1, 1, v573);
    }
    sub_10000B9CC(v526, (uint64_t *)&unk_100159D40);
    id v449 = [v376 image];
    if (v449)
    {
      CGFloat v450 = v449;
      id v451 = [v449 data];

      if (v451)
      {
        uint64_t v452 = sub_100109250();
        unint64_t v454 = v453;

        Class v455 = sub_100109240().super.isa;
        [v380 setThumbnailData:v455];

        sub_100007084(v452, v454);
      }
    }
LABEL_211:
    if (sub_10009F91C() == 6)
    {
      sub_100109C80();
      sub_100109510();
      uint64_t v462 = sub_100109D60();
    }
    else
    {
      uint64_t v462 = sub_100076A60();
    }
    uint64_t v464 = v462;
    uint64_t v465 = v463;
    if (*(void *)(v374 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata))
    {
      swift_retain();
      uint64_t v466 = v525;
      sub_100026140(v525);
      swift_release();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v519 + 48))(v466, 1, v521))
      {
        uint64_t v478 = v525;
        uint64_t v479 = v514;
        sub_10004BD74(v525, v514, _s9LinkAssetC8LinkDataVMa);
        sub_10000B9CC(v478, &qword_10015A2F8);
        uint64_t v480 = v527;
        sub_1000248D8(v479 + *(int *)(v521 + 24), v527, (uint64_t *)&unk_10015CDE0);
        sub_10004BE44(v479, _s9LinkAssetC8LinkDataVMa);
        uint64_t v481 = sub_100109460();
        uint64_t v482 = *(void *)(v481 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v482 + 48))(v480, 1, v481) != 1)
        {
          CGFloat v483 = v528;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v482 + 32))(v528, v527, v481);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v482 + 56))(v483, 0, 1, v481);
LABEL_222:
          sub_100004BD4((uint64_t *)&unk_10015F2B0);
          uint64_t v473 = swift_allocObject();
          *(_OWORD *)(v473 + 16) = xmmword_100122230;
          uint64_t v474 = v464;
          double v475 = v528;
          *(void *)(v473 + 32) = sub_100084A54(v474, v465, (uint64_t)v528);
          *(void *)(v473 + 40) = v476;
          Class v477 = sub_100109F20().super.isa;
          swift_bridgeObjectRelease();
          id v113 = v380;
          [v380 setAlternateNames:v477];
          swift_bridgeObjectRelease();

          sub_10000B9CC((uint64_t)v475, (uint64_t *)&unk_10015CDE0);
          return v113;
        }
LABEL_218:
        id v468 = [v337 entry];
        if (v468)
        {
          CGFloat v469 = v468;
          CGFloat v470 = v528;
          sub_100072EE4(v528);

          uint64_t v471 = sub_100109460();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v471 - 8) + 56))(v470, 0, 1, v471);
        }
        else
        {
          uint64_t v472 = sub_100109460();
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v472 - 8) + 56))(v528, 1, 1, v472);
        }
        sub_10000B9CC(v527, (uint64_t *)&unk_10015CDE0);
        goto LABEL_222;
      }
      sub_10000B9CC(v525, &qword_10015A2F8);
    }
    uint64_t v467 = sub_100109460();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v467 - 8) + 56))(v527, 1, 1, v467);
    goto LABEL_218;
  }
  if (!*(void *)(v178 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling12PodcastAsset_metadata))
  {
    uint64_t v133 = v564;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v563 + 56))(v564, 1, 1, v565);
    goto LABEL_59;
  }
  id v179 = v105;
  swift_retain();
  uint64_t v133 = v564;
  sub_100026474(v564);
  swift_release();
  uint64_t v180 = v565;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v563 + 48))(v133, 1, v565) == 1)
  {

LABEL_59:
    uint64_t v135 = &qword_10015A360;
    goto LABEL_60;
  }
  CGFloat v213 = v557;
  sub_10004BDDC(v133, (uint64_t)v557, _s12PodcastAssetC11PodcastDataVMa);
  CGFloat v214 = v583;
  sub_1001097A0();
  id v215 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class v216 = sub_1001097B0().super.isa;
  id v113 = [v215 initWithContentType:v216];

  (*(void (**)(char *, uint64_t))(v585 + 8))(v214, v584);
  if (v213[3])
  {
    swift_bridgeObjectRetain();
    NSString v217 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v217 = 0;
  }
  uint64_t v234 = v574;
  uint64_t v235 = v573;
  uint64_t v236 = (uint64_t)v555;
  [v113 setDisplayName:v217];

  sub_1000248D8((uint64_t)v213 + *(int *)(v180 + 28), v236, (uint64_t *)&unk_100159D40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48))(v236, 1, v235) == 1)
  {
    CGFloat v238 = 0;
  }
  else
  {
    sub_1001090F0(v237);
    CGFloat v238 = v239;
    (*(void (**)(uint64_t, uint64_t))(v234 + 8))(v236, v235);
  }
  [v113 setThumbnailURL:v238];

  uint64_t v240 = v213[5];
  if (v240)
  {
    uint64_t v241 = v213[4];
    swift_bridgeObjectRetain();
    NSString v242 = sub_100109CF0();
    swift_bridgeObjectRelease();
    [v113 setContentDescription:v242];

    sub_100004BD4((uint64_t *)&unk_10015F2B0);
    uint64_t v243 = swift_allocObject();
    *(_OWORD *)(v243 + 16) = xmmword_100122230;
    *(void *)(v243 + 32) = v241;
    *(void *)(v243 + 40) = v240;
    swift_bridgeObjectRetain();
    Class v244 = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v113 setAuthorNames:v244];
  }
  else
  {
    [v113 setContentDescription:0];
  }
  id v245 = [a2 entry];
  if (v245)
  {
    CGFloat v246 = v245;
    CGFloat v247 = v556;
    sub_100072EE4(v556);

    uint64_t v248 = sub_100109460();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v248 - 8) + 56))(v247, 0, 1, v248);
  }
  else
  {
    uint64_t v249 = sub_100109460();
    CGFloat v247 = v556;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(v556, 1, 1, v249);
  }
  sub_100109C80();
  sub_100109510();
  uint64_t v250 = sub_100109D60();
  uint64_t v252 = v251;
  sub_100004BD4((uint64_t *)&unk_10015F2B0);
  uint64_t v253 = swift_allocObject();
  *(_OWORD *)(v253 + 16) = xmmword_100122230;
  *(void *)(v253 + 32) = sub_100084A54(v250, v252, (uint64_t)v247);
  *(void *)(v253 + 40) = v254;
  Class v255 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v113 setAlternateNames:v255];

  swift_bridgeObjectRelease();
  sub_10000B9CC((uint64_t)v247, (uint64_t *)&unk_10015CDE0);
  sub_10004BE44((uint64_t)v213, _s12PodcastAssetC11PodcastDataVMa);
  return v113;
}

uint64_t sub_10004BD74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004BDDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004BE44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10004BEA4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

BOOL OperationBase.hasCompletions.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_10015AD08);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  long long v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  long long v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10004CC80(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return (v5 & 1) == 0;
}

uint64_t sub_10004BFEC()
{
  sub_100012F08(&qword_100159850);
  sub_10010AE40();
  swift_getFunctionTypeMetadata1();
  sub_100109FE0();

  return swift_getWitnessTable();
}

void OperationBase.onResult(_:)()
{
  uint64_t v1 = *(void *)(v0 + qword_10015AD08);
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  long long v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_10004CEB0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t OperationBase.onSuccess(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  OperationBase.onResult(_:)();

  return swift_release();
}

uint64_t sub_10004C210()
{
  uint64_t v1 = *(void *)(v0 + qword_10015AD08);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  long long v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10004ED90(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return v5;
}

uint64_t sub_10004C338(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v4 = sub_100109CF0();
  [v1 willChangeValueForKey:v4];

  uint64_t v5 = *(void *)&v1[qword_10015AD08];
  type metadata accessor for OperationBase.Locked();
  sub_100012F08(&qword_100159850);
  sub_10010AE40();
  swift_getFunctionTypeMetadata1();
  sub_100109FE0();
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_10004EBDC(v6, &v17);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = v17;
  NSString v9 = sub_100109CF0();
  [v2 didChangeValueForKey:v9];

  if (!sub_100109FC0()) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = 0;
  for (uint64_t i = v8 + 40; ; i += 16)
  {
    BOOL v12 = sub_100109F90();
    sub_100109F60();
    if (!v12) {
      break;
    }
    uint64_t v13 = *(void (**)(uint64_t))(i - 8);
    uint64_t v14 = v10 + 1;
    BOOL v15 = __OFADD__(v10, 1);
    uint64_t result = swift_retain();
    if (v15) {
      goto LABEL_11;
    }
    v13(a1);
    swift_release();
    ++v10;
    if (v14 == sub_100109FC0()) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_10010A910();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10004C59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10010A080();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_10010A070();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10004EC28(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100109FF0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t OperationBase.State.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10013FDC8;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t OperationBase.State.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7964616572;
  }
  if (a1 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

uint64_t sub_10004C7E4()
{
  swift_getWitnessTable();

  return sub_10010ACC0();
}

uint64_t sub_10004C858(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10004C8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10004C934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_10004C9A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = OperationBase.State.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10004C9D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OperationBase.State.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10004CA00()
{
  return 0;
}

uint64_t OperationBase.isAsynchronous.getter()
{
  return 1;
}

Swift::Int sub_10004CA78()
{
  return sub_10010AE20();
}

void sub_10004CABC()
{
}

Swift::Int sub_10004CAE4()
{
  return sub_10010AE20();
}

uint64_t sub_10004CB24@<X0>(unsigned char *a1@<X8>)
{
  sub_100012F08(&qword_100159850);
  sub_10010AE40();
  swift_getFunctionTypeMetadata1();
  sub_100109FE0();
  swift_getWitnessTable();
  uint64_t result = sub_10010A200();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10004CBEC()
{
  return 8;
}

void *sub_10004CBF8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10004CC04()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10004CC78()
{
  return sub_10004CC04();
}

uint64_t sub_10004CC80@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for OperationBase.Locked()
{
  return sub_100008550();
}

uint64_t OperationBase.main@Sendable ()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = swift_isaMask & *v1;
  return _swift_task_switch(sub_10004CD3C, 0, 0);
}

uint64_t sub_10004CD3C()
{
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0[3] + 80) - 8) + 56))(v0[2], 1, 1);
  unsigned __int8 v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10004CDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  swift_retain();
  sub_100012F08(&qword_100159850);
  sub_10010AE40();
  swift_getFunctionTypeMetadata1();
  sub_100109FE0();
  return sub_100109FB0();
}

uint64_t sub_10004CEB0(uint64_t a1)
{
  return sub_10004CDD0(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_10004CED0(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_100012F08(&qword_100159850);
  uint64_t v7 = sub_10010AE40();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = sub_10010A700();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10004D118(v7, (uint64_t)&v17, (uint64_t)v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v14, 0, 1, a4);
  a2(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10004D0D4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004D10C(uint64_t a1)
{
  return sub_10004CED0(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_10004D118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

Class sub_10004D1E8(uint64_t a1, uint64_t a2)
{
  return sub_10004D2C0(a1, a2, (void (*)(void))sub_10004D200);
}

Swift::Int sub_10004D200()
{
  Swift::Int v0 = sub_10002EA20((uint64_t)&off_10013FE30);
  swift_arrayDestroy();
  return v0;
}

Class sub_10004D248(uint64_t a1, uint64_t a2)
{
  return sub_10004D2C0(a1, a2, (void (*)(void))sub_10004D260);
}

Swift::Int sub_10004D260()
{
  Swift::Int v0 = sub_10002EA20((uint64_t)&off_10013FE60);
  swift_arrayDestroy();
  return v0;
}

Class sub_10004D2A8(uint64_t a1, uint64_t a2)
{
  return sub_10004D2C0(a1, a2, (void (*)(void))sub_10004D32C);
}

Class sub_10004D2C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjCClassMetadata();
  a3();
  v4.super.Class isa = sub_10010A140().super.isa;
  swift_bridgeObjectRelease();

  return v4.super.isa;
}

Swift::Int sub_10004D32C()
{
  Swift::Int v0 = sub_10002EA20((uint64_t)&off_10013FE90);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_10004D374(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isFinished.getter();

  return v2 & 1;
}

uint64_t OperationBase.isFinished.getter()
{
  return sub_10004D404();
}

uint64_t type metadata accessor for OperationBase.State()
{
  return sub_100008550();
}

uint64_t sub_10004D3C8(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isExecuting.getter();

  return v2 & 1;
}

uint64_t OperationBase.isExecuting.getter()
{
  return sub_10004D404();
}

uint64_t sub_10004D404()
{
  return sub_10010ACC0() & 1;
}

uint64_t sub_10004D4B0()
{
  return 1;
}

uint64_t sub_10004D4B8(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isReady.getter();

  return v2 & 1;
}

uint64_t OperationBase.isReady.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for OperationBase();
  unsigned int v1 = [super isReady];
  if (v1)
  {
    sub_10004C210();
    type metadata accessor for OperationBase.State();
    swift_getWitnessTable();
    LOBYTE(v1) = sub_10010ACC0();
  }
  return v1 & 1;
}

uint64_t type metadata accessor for OperationBase()
{
  return sub_100008550();
}

Swift::Void __swiftcall OperationBase.start()()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x50);
  sub_100012F08(&qword_100159850);
  uint64_t v2 = sub_10010AE40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v20[-v4];
  uint64_t v6 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ([v0 isCancelled])
  {
    sub_10010A010();
    sub_10004E0E8();
    uint64_t v9 = swift_allocError();
    sub_100109B50();
    *uint64_t v5 = v9;
    swift_storeEnumTagMultiPayload();
    sub_10004C338((uint64_t)v5);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v10 = sub_10010A080();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v0;
    uint64_t v12 = v0;
    uint64_t v13 = sub_10004C59C((uint64_t)v8, (uint64_t)&unk_10015AD20, (uint64_t)v11);
    NSString v14 = sub_100109CF0();
    [v12 willChangeValueForKey:v14];

    uint64_t v15 = *(void *)((char *)v12 + qword_10015AD08);
    __chkstk_darwin(v16);
    *(void *)&v20[-16] = v1;
    *(void *)&v20[-8] = v13;
    type metadata accessor for OperationBase.Locked();
    uint64_t v17 = v15 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v15 + 16);
    uint64_t v18 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v18);
    sub_10004E094(v17);
    os_unfair_lock_unlock(v18);
    NSString v19 = sub_100109CF0();
    [v12 didChangeValueForKey:v19];

    swift_release();
  }
}

uint64_t sub_10004D924(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a4;
  uint64_t v12 = swift_isaMask & *a4;
  uint64_t v5 = *(void *)(v12 + 0x50);
  v4[3] = v5;
  sub_100012F08(&qword_100159850);
  uint64_t v6 = sub_10010AE40();
  v4[4] = v6;
  v4[5] = *(void *)(v6 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v7 = sub_10010A700();
  v4[7] = v7;
  v4[8] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[9] = v8;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))(*(void *)(v12 + 104) + **(int **)(v12 + 104));
  uint64_t v9 = (void *)swift_task_alloc();
  v4[12] = v9;
  void *v9 = v4;
  v9[1] = sub_10004DB98;
  return v11(v8);
}

uint64_t sub_10004DB98()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10004DEC4;
  }
  else {
    uint64_t v2 = sub_10004DCAC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004DCAC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[8] + 8))(v1, v0[7]);
    type metadata accessor for OperationBase.Failure();
    swift_getWitnessTable();
    uint64_t v4 = swift_allocError();
    swift_willThrow();
    uint64_t v6 = v0[5];
    uint64_t v5 = (uint64_t *)v0[6];
    uint64_t v7 = v0[4];
    *uint64_t v5 = v4;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_10004C338((uint64_t)v5);
    swift_errorRelease();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {
    uint64_t v8 = v0[11];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
    swift_storeEnumTagMultiPayload();
    sub_10004C338(v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10004DEC4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  void *v1 = v0[13];
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_10004C338((uint64_t)v1);
  swift_errorRelease();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10004DFA0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004DFE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000090F0;
  return sub_10004D924(a1, v4, v5, v6);
}

uint64_t sub_10004E094(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(unsigned char *)a1 = 1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a1 + 16) = v3;
  return result;
}

unint64_t sub_10004E0E8()
{
  unint64_t result = qword_10015AD28[0];
  if (!qword_10015AD28[0])
  {
    sub_10010A010();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10015AD28);
  }
  return result;
}

void sub_10004E140(void *a1)
{
  id v1 = a1;
  OperationBase.start()();
}

Swift::Void __swiftcall OperationBase.cancel()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for OperationBase();
  [super cancel];
  uint64_t v1 = *(void *)&v0[qword_10015AD08];
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10004E384(v2, &v4);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  if (v4)
  {
    sub_10010A0A0();
    swift_release();
  }
}

uint64_t sub_10004E308()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10004E37C()
{
  return sub_10004E308();
}

uint64_t sub_10004E384@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

void sub_10004E3CC(void *a1)
{
  id v1 = a1;
  OperationBase.cancel()();
}

id sub_10004E414(void *a1)
{
  id v1 = a1;
  sub_10004E47C();

  NSString v2 = sub_100109CF0();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_10004E47C()
{
  int v0 = sub_10004C210();
  if (!v0) {
    return 0x7964616572;
  }
  if (v0 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

void sub_10004E4EC()
{
}

id OperationBase.init()()
{
  uint64_t v1 = qword_10015AD08;
  NSString v2 = v0;
  char v8 = sub_10004CA00();
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  type metadata accessor for OperationBase.Locked();
  uint64_t v5 = sub_100004BD0();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)&v0[v1] = v5;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for OperationBase();
  return [super init];
}

id sub_10004E644()
{
  return OperationBase.init()();
}

id OperationBase.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationBase();
  return [super dealloc];
}

uint64_t sub_10004E6C4()
{
  return swift_release();
}

uint64_t sub_10004E6D4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10004E7B0;
  return v6(a1);
}

uint64_t sub_10004E7B0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10004E8A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10004E8C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10004E90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_10004E914(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004E9E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10004EA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10004EA14()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10004EA50(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10004EA90(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s10ReflectionVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_10004EB0C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_10004EB54(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10004EB9C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_10004EBDC(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)a1 = 2;
  *a2 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_10004E4EC();
}

uint64_t sub_10004EC28(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004EC88()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004ECC0(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000090F0;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015AEB0 + dword_10015AEB0);
  return v6(a1, v4);
}

uint64_t type metadata accessor for OperationBase.Failure()
{
  return sub_100008550();
}

uint64_t sub_10004ED90@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

uint64_t sub_10004EDD8()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t _s15GenericMapAssetC14GenericMapDataV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_10004EE54(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10004EEF0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10004EF18()
{
  return swift_getWitnessTable();
}

id sub_10004EF38()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16PlaceholderAssetCMa();
  return [super dealloc];
}

uint64_t sub_10004EF70()
{
  return _s16PlaceholderAssetCMa();
}

uint64_t _s16PlaceholderAssetCMa()
{
  uint64_t result = qword_10015AF68;
  if (!qword_10015AF68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004EFC4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10004EFFC()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015AF78);
  sub_100007CB8(v0, (uint64_t)qword_10015AF78);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

id sub_10004F0F8(void *a1, char a2, char a3, char a4, void *a5)
{
  if (!a1)
  {
LABEL_16:
    if ((a2 & 1) != 0
      && (id v30 = [self workStyleAttributes]) != 0)
    {
      id v20 = v30;
      if (qword_100158918 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_100109960();
      sub_100007CB8(v31, (uint64_t)qword_10015AF78);
      uint64_t v32 = sub_100109940();
      os_log_type_t v33 = sub_10010A2F0();
      if (!os_log_type_enabled(v32, v33)) {
        goto LABEL_30;
      }
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      uint64_t v35 = "[POIClustering] [RENDERING] Work";
    }
    else
    {
      if ((a3 & 1) != 0
        || (a4 & 1) == 0
        || (v36 = [objc_allocWithZone((Class)GEOPlace) initWithLatitude:4 longitude:0.0 placeType:0.0], id v20 = objc_msgSend(self, "styleAttributesForPlace:", v36), v36, !v20))
      {
        if (qword_100158918 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_100109960();
        sub_100007CB8(v53, (uint64_t)qword_10015AF78);
        id v54 = a1;
        uint64_t v55 = sub_100109940();
        os_log_type_t v56 = sub_10010A2F0();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = 7104878;
          uint64_t v58 = swift_slowAlloc();
          v72[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v58 = 136315394;
          if (a1 && (id v59 = [v54 name]) != 0)
          {
            uint64_t v60 = v59;
            uint64_t v61 = sub_100109D30();
            unint64_t v63 = v62;
          }
          else
          {
            unint64_t v63 = 0xE300000000000000;
            uint64_t v61 = 7104878;
          }
          uint64_t v73 = sub_1000C50D4(v61, v63, v72);
          sub_10010A730();

          swift_bridgeObjectRelease();
          *(_WORD *)(v58 + 12) = 2080;
          if (a1 && (id v64 = [v54 pointOfInterestCategory]) != 0)
          {
            uint64_t v65 = v64;
            uint64_t v57 = sub_100109D30();
            unint64_t v67 = v66;
          }
          else
          {
            unint64_t v67 = 0xE300000000000000;
          }
          uint64_t v73 = sub_1000C50D4(v57, v67, v72);
          sub_10010A730();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v55, v56, "[POIClustering] [RENDERING] Fallback, mkMapItem.name=%s, mkMapItem.poiCategory=%s", (uint8_t *)v58, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        return 0;
      }
      if (qword_100158918 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_100109960();
      sub_100007CB8(v37, (uint64_t)qword_10015AF78);
      uint64_t v32 = sub_100109940();
      os_log_type_t v33 = sub_10010A2F0();
      if (!os_log_type_enabled(v32, v33)) {
        goto LABEL_30;
      }
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      uint64_t v35 = "[POIClustering] [RENDERING] City";
    }
    _os_log_impl((void *)&_mh_execute_header, v32, v33, v35, v34, 2u);
    swift_slowDealloc();
LABEL_30:

    goto LABEL_31;
  }
  id v10 = a1;
  id v11 = [v10 pointOfInterestCategory];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_100109D30();
    uint64_t v15 = v14;
    if (v13 == sub_100109D30() && v15 == v16)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    char v18 = sub_10010ACA0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_15;
    }
  }
  id v19 = [v10 _styleAttributes];
  if (!v19)
  {
LABEL_15:

    goto LABEL_16;
  }
  id v20 = v19;
  if (qword_100158918 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100109960();
  sub_100007CB8(v21, (uint64_t)qword_10015AF78);
  id v22 = v10;
  uint64_t v23 = sub_100109940();
  os_log_type_t v24 = sub_10010A2F0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218242;
    id v26 = [v22 name];
    if (v26)
    {
      uint64_t v27 = v26;
      sub_100109D30();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v29 = 0;
    }
    v72[1] = v29;
    sub_100004BD4(&qword_100159738);
    sub_10010A710();

    swift_bridgeObjectRelease();
    sub_10010A730();

    *(_WORD *)(v25 + 12) = 2080;
    id v68 = [v22 pointOfInterestCategory];
    sub_100004BD4(&qword_10015AF90);
    uint64_t v69 = sub_10010A6F0();
    unint64_t v71 = v70;

    v72[0] = sub_1000C50D4(v69, v71, &v73);
    sub_10010A730();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[POIClustering] [RENDERING] POI mapItemName=%ld, mapItemPOICategory=%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
LABEL_31:
  [a5 displayScale];
  double v39 = v38;
  id v40 = [objc_allocWithZone((Class)VKIconModifiers) init];
  [v40 setNightMode:[a5 userInterfaceStyle] == 2];
  id result = [self iconManager];
  if (!result)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v42 = result;
  float v43 = v39;
  id v44 = v20;
  NSString v45 = sub_100109CF0();
  *(float *)&double v46 = v43;
  id v47 = [v42 imageForStyleAttributes:v44 withStylesheetName:v45 contentScale:7 sizeGroup:v40 modifiers:v46];

  if (!v47)
  {

    return v47;
  }
  id v48 = v47;
  id result = [v48 fillColor];
  if (!result) {
    goto LABEL_56;
  }
  id v49 = result;
  id v47 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v49];

  id v50 = v48;
  id result = [v50 image];
  if (result)
  {
    id v51 = result;
    [v50 contentScale];
    [objc_allocWithZone((Class)UIImage) initWithCGImage:v51 scale:0 orientation:v52];

    return v47;
  }
LABEL_57:
  __break(1u);
  return result;
}

void *_s9IconStyleVwCP(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void _s9IconStyleVwxx(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t _s9IconStyleVwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t _s9IconStyleVwta(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t _s9IconStyleVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IconStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s9IconStyleVMa()
{
  return &_s9IconStyleVN;
}

uint64_t sub_10004FBE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1001091E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - v14;
  if (a2)
  {
    id v16 = [self defaultManager];
    NSString v17 = sub_100109CF0();
    id v18 = [v16 containerURLForSecurityApplicationGroupIdentifier:v17];

    if (v18)
    {
      sub_100109140();

      id v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v19(v13, v9, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v13, v6);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    }
    sub_1000192F8((uint64_t)v13);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_10010A8D0(109);
    v23._countAndFlagsBits = 0xD00000000000006BLL;
    v23._object = (void *)0x800000010010ECD0;
    sub_100109E00(v23);
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    sub_100109E00(v24);
    goto LABEL_11;
  }
  uint64_t v21 = NSHomeDirectory();
  sub_100109D30();

  sub_100109190();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_1000192F8((uint64_t)v15);
LABEL_11:
    uint64_t result = sub_10010AA60();
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v15, v6);
}

void sub_10004FF80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v26 = a5;
  uint64_t v27 = a3;
  uint64_t v29 = a1;
  id v30 = a4;
  uint64_t v28 = a2;
  uint64_t v7 = sub_1001094F0();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100109070();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001091E0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  NSString v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    sub_10004FBE0(v26, a6, (uint64_t)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for URL.DirectoryHint.inferFromPath(_:), v10);
    sub_10005058C();
    sub_1001091B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = v28;
    uint64_t v18 = v29;
    if (v28)
    {
LABEL_3:
      uint64_t v20 = v19;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001090E0();
    uint64_t v19 = v28;
    uint64_t v18 = v29;
    if (v28) {
      goto LABEL_3;
    }
  }
  sub_1001094E0();
  uint64_t v18 = sub_100109470();
  uint64_t v20 = v21;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
LABEL_6:
  uint64_t v31 = v18;
  uint64_t v32 = v20;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for URL.DirectoryHint.inferFromPath(_:), v10);
  sub_10005058C();
  swift_bridgeObjectRetain();
  sub_100109180();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  v22._object = v30;
  if (v30)
  {
    v22._countAndFlagsBits = v27;
    sub_100109100(v22);
  }
}

uint64_t sub_1000502A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v1 = sub_100109070();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001091E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  if (qword_100158A68 != -1) {
    swift_once();
  }
  if (qword_10016DEA8)
  {
    sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, (uint64_t)v9);
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v13(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
    sub_10005058C();
    sub_1001091B0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    sub_1001090D0();
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  }
  v13(v4, v12, v1);
  sub_10005058C();
  uint64_t v14 = v17;
  sub_1001091B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
}

unint64_t sub_10005058C()
{
  unint64_t result = qword_10015B920;
  if (!qword_10015B920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B920);
  }
  return result;
}

id sub_1000505E0(uint64_t a1)
{
  return sub_100050630(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_10016DD18);
}

id sub_1000505F4(uint64_t a1)
{
  return sub_100050630(a1, (SEL *)&selRef_systemIndigoColor, &qword_10016DD20);
}

id sub_100050608(uint64_t a1)
{
  return sub_100050630(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_10016DD28);
}

id sub_10005061C(uint64_t a1)
{
  return sub_100050630(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10016DD30);
}

id sub_100050630(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

void sub_100050674(uint64_t a1)
{
}

void sub_100050690(uint64_t a1)
{
}

void sub_1000506AC(uint64_t a1)
{
}

void sub_1000506C0(uint64_t a1)
{
}

void sub_1000506DC(uint64_t a1, void *a2, double *a3, void *a4)
{
  id v6 = [self preferredFontForTextStyle:*a2];
  id v7 = sub_100042EB8(*a3);

  *a4 = v7;
}

void sub_10005074C(uint64_t a1)
{
}

void sub_100050760(uint64_t a1, double *a2, void *a3)
{
  uint64_t v5 = self;
  id v6 = [v5 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v7 = sub_100042EB8(*a2);

  id v8 = [v7 fontDescriptor];
  id v9 = [v7 fontDescriptor];
  unsigned int v10 = [v9 symbolicTraits];

  id v11 = [v8 fontDescriptorWithSymbolicTraits:v10 | 0x8000];
  if (v11)
  {
    id v12 = [v5 fontWithDescriptor:v11 size:0.0];
  }
  else
  {

    id v12 = 0;
  }
  *a3 = v12;
}

void sub_100050888()
{
  qword_10016DD60 = 0x4034000000000000;
}

void sub_100050898()
{
  qword_10016DD68 = 0x4030000000000000;
}

void sub_1000508A8()
{
  qword_10016DD70 = 0x4034000000000000;
}

void sub_1000508B8()
{
  qword_10016DD78 = 0x4020000000000000;
}

void sub_1000508C8()
{
  qword_10016DD80 = 0x4010000000000000;
}

double sub_1000508D8()
{
  if (qword_100158988 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10016DD80 * 0.5;
  *(double *)&qword_10016DD88 = *(double *)&qword_10016DD80 * 0.5;
  return result;
}

void sub_100050934()
{
  qword_10016DD90 = 0x4010000000000000;
}

void sub_100050944()
{
  qword_10016DD98 = 0x4020000000000000;
}

void sub_100050954()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F100;
  v6._countAndFlagsBits = 8236;
  v6._object = (void *)0xE200000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DDA0 = v2;
  *(void *)algn_10016DDA8 = v4;
}

void sub_1000509F8()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F180;
  v6._countAndFlagsBits = 19279;
  v6._object = (void *)0xE200000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DDB0 = v2;
  *(void *)algn_10016DDB8 = v4;
}

void sub_100050A9C()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F070;
  v6._countAndFlagsBits = 0x656C746954;
  v6._object = (void *)0xE500000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DDC0 = v2;
  *(void *)algn_10016DDC8 = v4;
}

void sub_100050B48()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010EEF0;
  v6._object = (void *)0x800000010010EED0;
  v6._countAndFlagsBits = 0xD000000000000014;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DDD0 = v2;
  *(void *)algn_10016DDD8 = v4;
}

void sub_100050C00()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F160;
  v6._object = (void *)0x800000010010F140;
  v6._countAndFlagsBits = 0x1000000000000010;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DDE0 = v2;
  *(void *)algn_10016DDE8 = v4;
}

void sub_100050CB4()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F240;
  v6._object = (void *)0x800000010010F220;
  v6._countAndFlagsBits = 0xD00000000000001FLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DDF0 = v2;
  *(void *)algn_10016DDF8 = v4;
}

void sub_100050D6C()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F1E0;
  v6._countAndFlagsBits = 0x6B72616D6B6F6F42;
  v6._object = (void *)0xEA00000000006465;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DE00 = v2;
  *(void *)algn_10016DE08 = v4;
}

void sub_100050E20()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F2E0;
  v6._countAndFlagsBits = 0x746F727720756F59;
  v6._object = (void *)0xED00004025203A65;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DE10 = v2;
  *(void *)algn_10016DE18 = v4;
}

void sub_100050EDC()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F040;
  v6._countAndFlagsBits = 0x206C616E72756F4ALL;
  v6._object = (void *)0xEC00000074786554;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DE20 = v2;
  *(void *)algn_10016DE28 = v4;
}

void sub_100050F94()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F0A0;
  v6._countAndFlagsBits = 0x206C616E72756F4ALL;
  v6._object = (void *)0xED0000656C746954;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DE30 = v2;
  *(void *)algn_10016DE38 = v4;
}

void sub_100051050()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010F1A0;
  v6._countAndFlagsBits = 0x657250206B6E694CLL;
  v6._object = (void *)0xEC00000077656976;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DE40 = v2;
  *(void *)algn_10016DE48 = v4;
}

void sub_100051108()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000010010EF60;
  v6._object = (void *)0x800000010010EF30;
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100108F60(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_10016DE50 = v2;
  *(void *)algn_10016DE58 = v4;
}

void sub_1000511C0()
{
  NSString v0 = sub_100109CF0();
  id v1 = [self _systemImageNamed:v0];

  qword_10016DE60 = (uint64_t)v1;
}

uint64_t type metadata accessor for JurassicTheme()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Colors()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Fonts()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Sizes()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Styles()
{
  return self;
}

void sub_1000512E4(void *a1)
{
  id v2 = [a1 layer];
  [v2 setMasksToBounds:0];

  id v3 = [a1 layer];
  id v4 = [self blackColor];
  id v5 = [v4 CGColor];

  [v3 setShadowColor:v5];
  id v6 = [a1 layer];
  LODWORD(v7) = 1028443341;
  [v6 setShadowOpacity:v7];

  id v8 = [a1 layer];
  [v8 setShadowOffset:0.0, 2.0];

  id v9 = [a1 layer];
  [v9 setShadowRadius:16.0];

  id v10 = [a1 layer];
  [v10 setCornerCurve:kCACornerCurveContinuous];

  id v11 = [a1 layer];
  [v11 setShadowPathIsBounds:1];
}

uint64_t sub_1000514C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000514F8()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015B290);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015B290);
  if (qword_100158C50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E0C0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for PersistentCache()
{
  return sub_100008550();
}

uint64_t sub_1000515D8()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015B358);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015B358);
  if (qword_100158C40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E090);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

Swift::Int sub_1000516A0()
{
  return sub_10010AE20();
}

uint64_t sub_100051734()
{
  return sub_100109C10();
}

Swift::Int sub_1000517B4()
{
  return sub_10010AE20();
}

uint64_t sub_100051844()
{
  return sub_1001094A0();
}

char *sub_100051854(uint64_t a1, double a2)
{
  uint64_t v5 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = (int *)v5;
  __chkstk_darwin(v5);
  double v7 = (char **)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&v2[OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_skipRows] = &_swiftEmptySetSingleton;
  *(void *)&v2[OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_skipColumns] = &_swiftEmptySetSingleton;
  id v8 = &unk_10015B000;
  id v9 = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_inputClusters] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_results] = &_swiftEmptySetSingleton;
  *(double *)&v2[OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold] = a2;
  id v10 = (objc_class *)_s30MOSuggestionAssetMapsClustererCMa();
  v50.receiver = v2;
  v50.super_class = v10;
  id v11 = [super init];
  id v12 = v11;
  int64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    id v49 = _swiftEmptyArrayStorage;
    double v38 = v11;
    uint64_t v37 = v11;
    sub_1000BDD88(0, v13, 0);
    uint64_t v14 = 0;
    id v9 = v49;
    uint64_t v39 = a1;
    int64_t v40 = v13;
    uint64_t v15 = a1 + 56;
    do
    {
      uint64_t v16 = *(void *)(v15 - 24);
      uint64_t v17 = *(void *)(v15 - 16);
      uint64_t v19 = *(void **)(v15 - 8);
      uint64_t v18 = *(void *)v15;
      int v20 = *(unsigned __int8 *)(v15 + 8);
      uint64_t v21 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v15 + 24);
      int v45 = *(unsigned __int8 *)(v15 + 32);
      uint64_t v23 = *(void *)(v15 + 56);
      if (v20) {
        uint64_t v18 = 1;
      }
      uint64_t v43 = v18;
      uint64_t v44 = v21;
      uint64_t v46 = v14;
      uint64_t v47 = sub_10010AC60();
      uint64_t v48 = v24;
      v51._countAndFlagsBits = 95;
      v51._object = (void *)0xE100000000000000;
      sub_100109E00(v51);
      uint64_t v26 = v47;
      uint64_t v25 = v48;
      uint64_t v27 = v9;
      uint64_t v28 = v42;
      id v29 = v19;
      swift_bridgeObjectRetain();
      sub_1001094E0();
      *double v7 = v16;
      v7[1] = v17;
      uint64_t v30 = v43;
      uint64_t v31 = v44;
      v7[2] = 0;
      v7[3] = v30;
      v7[4] = v26;
      v7[5] = v25;
      *(void *)((char *)v7 + v28[9]) = v19;
      *(void *)((char *)v7 + v28[10]) = 0;
      uint64_t v32 = (void *)((char *)v7 + v28[11]);
      *uint64_t v32 = v31;
      v32[1] = v22;
      *((unsigned char *)v7 + v28[12]) = v45;
      uint64_t v33 = v28[13];
      id v9 = v27;
      *(void *)((char *)v7 + v33) = v23;
      id v49 = v27;
      unint64_t v35 = *((void *)v27 + 2);
      unint64_t v34 = *((void *)v27 + 3);
      if (v35 >= v34 >> 1)
      {
        sub_1000BDD88(v34 > 1, v35 + 1, 1);
        id v9 = v49;
      }
      ++v14;
      *((void *)v9 + 2) = v35 + 1;
      sub_100041CF0((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v35);
      v15 += 104;
    }
    while (v40 != v14);
    swift_bridgeObjectRelease();

    id v8 = (void *)&unk_10015B000;
    id v12 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)&v12[v8[112]] = v9;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_100051B38()
{
  uint64_t v1 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v131 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v123 = (uint64_t)v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v122 = (uint64_t)v111 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v115 = (char *)v111 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v119 = (uint64_t)v111 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v118 = (uint64_t)v111 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v117 = (uint64_t)v111 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v116 = (uint64_t)v111 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v114 = (char *)v111 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v111 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t result = __chkstk_darwin(v23);
  uint64_t v124 = (uint64_t)v111 - v28;
  unint64_t v29 = *(void *)(v0
                  + OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_inputClusters);
  unint64_t v139 = v29;
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30) {
    goto LABEL_90;
  }
  uint64_t v31 = v30 - 1;
  if (v30 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  uint64_t v129 = v27;
  uint64_t v126 = v26;
  uint64_t v127 = v25;
  uint64_t v112 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold;
  v111[1] = v0 + OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_results;
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v33 = _swiftEmptyArrayStorage;
  uint64_t v121 = v0;
  uint64_t v128 = v1;
  id v113 = v22;
  uint64_t v120 = v31;
  while (1)
  {
    if (v32 == v31)
    {
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      return result;
    }
    uint64_t v34 = *(void *)(v29 + 16);
    if (v34
      && (uint64_t v35 = sub_100109F80(),
          *(void *)(v35 + 16) = v34,
          memset_pattern16((void *)(v35 + 32), &unk_100123570, 8 * v34),
          (uint64_t v36 = *(void *)(v29 + 16)) != 0))
    {
      sub_100004BD4(&qword_10015B478);
      unint64_t result = sub_100109F80();
      *(void *)(result + 16) = v36;
      *(void *)(result + 32) = v35;
      if (v36 == 1) {
        goto LABEL_14;
      }
      uint64_t v33 = (double *)result;
      *(void *)(result + 40) = v35;
      uint64_t v37 = v36 - 2;
      if (v36 != 2)
      {
        double v38 = (uint64_t *)(result + 48);
        do
        {
          *v38++ = v35;
          swift_bridgeObjectRetain();
          --v37;
        }
        while (v37);
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t result = (unint64_t)v33;
LABEL_14:
    uint64_t v39 = *(void *)(v29 + 16);
    if (!v39) {
      goto LABEL_89;
    }
    uint64_t v125 = v32;
    uint64_t v40 = v39 - 1;
    unint64_t v135 = v29;
    unint64_t v41 = result;
    if (v39 != 1) {
      break;
    }
LABEL_35:
    unint64_t v138 = result;
    uint64_t v62 = v121;
    unint64_t result = sub_1000526BC((uint64_t)&v138, 1);
    if (v65)
    {
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v31 = v120;
      uint64_t v84 = v125;
      uint64_t v33 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v66 = (uint64_t)v113;
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_92;
      }
      unint64_t v67 = v29;
      unint64_t v68 = *(void *)(v29 + 16);
      if (result >= v68) {
        goto LABEL_93;
      }
      unint64_t v69 = v63;
      double v70 = v64;
      unint64_t v134 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      uint64_t v71 = v67 + v134;
      uint64_t v72 = *(void *)(v131 + 72);
      unint64_t result = sub_100041C30(v67 + v134 + v72 * result, v124);
      if (v69 >= v68) {
        goto LABEL_94;
      }
      double v73 = v70;
      uint64_t v74 = v129;
      sub_100041C30(v71 + v72 * v69, v129);
      if (*(double *)(v62 + v112) * *(double *)(v62 + v112) <= v73)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = v124;
        uint64_t v86 = v119;
        sub_100041C30(v124, v119);
        swift_beginAccess();
        uint64_t v87 = v118;
        sub_10003D74C(v118, v86);
        sub_100041C94(v87);
        sub_100041C30(v74, v86);
        sub_10003D74C(v87, v86);
        sub_100041C94(v87);
        swift_endAccess();
        sub_100041C94(v74);
        unint64_t result = sub_100041C94(v85);
        uint64_t v31 = v120;
        uint64_t v84 = v125;
        uint64_t v33 = _swiftEmptyArrayStorage;
        unint64_t v29 = v135;
      }
      else
      {
        unint64_t v136 = v124 + *(int *)(v128 + 32);
        swift_bridgeObjectRetain();
        unint64_t v75 = 0;
        uint64_t v137 = v72;
        uint64_t v76 = v72 + v134;
        unint64_t v77 = 1;
        uint64_t v78 = (uint64_t)v115;
        uint64_t v79 = (uint64_t)v114;
        while (1)
        {
          char v80 = sub_1001094A0();
          sub_100041C30(v71, v66);
          sub_100041C30(v129, v79);
          if (v80) {
            break;
          }
          char v81 = sub_1001094A0();
          sub_100041C94(v79);
          sub_100041C94(v66);
          if (v81) {
            goto LABEL_48;
          }
          ++v75;
          v71 += v137;
          ++v77;
          v76 += v137;
          if (v68 == v75)
          {
            unint64_t v82 = v135;
            unint64_t result = swift_bridgeObjectRelease();
            unint64_t v75 = *(void *)(v82 + 16);
            unint64_t v83 = v139;
            goto LABEL_50;
          }
        }
        sub_100041C94(v79);
        sub_100041C94(v66);
LABEL_48:
        unint64_t v88 = v135;
        unint64_t result = swift_bridgeObjectRelease();
        if (__OFADD__(v75, 1)) {
          goto LABEL_101;
        }
        uint64_t v89 = *(void *)(v88 + 16);
        unint64_t v83 = v139;
        if (v75 + 1 != v89)
        {
          while (v77 < *(void *)(v83 + 16))
          {
            sub_100041C30(v83 + v76, v78);
            char v101 = sub_1001094A0();
            uint64_t v102 = v78;
            uint64_t v103 = v78;
            uint64_t v104 = v126;
            sub_100041C30(v102, v126);
            uint64_t v105 = v127;
            sub_100041C30(v129, v127);
            if (v101)
            {
              sub_100041C94(v104);
              sub_100041C94(v105);
              unint64_t result = sub_100041C94(v103);
              uint64_t v78 = v103;
            }
            else
            {
              char v106 = sub_1001094A0();
              sub_100041C94(v104);
              sub_100041C94(v105);
              unint64_t result = sub_100041C94(v103);
              uint64_t v78 = v103;
              if ((v106 & 1) == 0)
              {
                if (v77 != v75)
                {
                  if ((v75 & 0x8000000000000000) != 0) {
                    goto LABEL_95;
                  }
                  unint64_t v107 = *(void *)(v83 + 16);
                  if (v75 >= v107) {
                    goto LABEL_96;
                  }
                  unint64_t v108 = v75 * v137;
                  unint64_t result = sub_100041C30(v83 + v134 + v75 * v137, v122);
                  if (v77 >= v107) {
                    goto LABEL_97;
                  }
                  sub_100041C30(v83 + v76, v123);
                  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    unint64_t result = sub_1000C72C8(v83);
                    unint64_t v83 = result;
                    unint64_t v139 = result;
                  }
                  if (v75 >= *(void *)(v83 + 16)) {
                    goto LABEL_98;
                  }
                  unint64_t result = sub_100055EC0(v123, v83 + v134 + v108);
                  if (v77 >= *(void *)(v139 + 16)) {
                    goto LABEL_99;
                  }
                  unint64_t result = sub_100055EC0(v122, v139 + v76);
                }
                if (__OFADD__(v75++, 1)) {
                  goto LABEL_91;
                }
              }
            }
            unint64_t v110 = v77 + 1;
            if (__OFADD__(v77, 1)) {
              goto LABEL_87;
            }
            unint64_t v83 = v139;
            ++v77;
            v76 += v137;
            if (v110 == *(void *)(v139 + 16)) {
              goto LABEL_50;
            }
          }
          goto LABEL_86;
        }
LABEL_50:
        int64_t v90 = *(void *)(v83 + 16);
        if (v90 < (uint64_t)v75) {
          goto LABEL_100;
        }
        sub_1000E7A20(v75, v90);
        swift_bridgeObjectRelease();
        uint64_t v91 = v116;
        sub_100052924(v124, v129, v116, v73);
        sub_100041C30(v91, v117);
        unint64_t v92 = v139;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v120;
        uint64_t v84 = v125;
        uint64_t v33 = _swiftEmptyArrayStorage;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v92 = sub_10009EA18(0, *(void *)(v92 + 16) + 1, 1, v92);
        }
        unint64_t v95 = *(void *)(v92 + 16);
        unint64_t v94 = *(void *)(v92 + 24);
        if (v95 >= v94 >> 1) {
          unint64_t v92 = sub_10009EA18(v94 > 1, v95 + 1, 1, v92);
        }
        *(void *)(v92 + 16) = v95 + 1;
        sub_100041CF0(v117, v92 + v134 + v95 * v137);
        unint64_t v139 = v92;
        unint64_t v96 = v92;
        uint64_t v97 = v116;
        uint64_t v98 = v119;
        sub_100041C30(v116, v119);
        swift_beginAccess();
        uint64_t v99 = v118;
        sub_10003D74C(v118, v98);
        sub_100041C94(v99);
        swift_endAccess();
        uint64_t v100 = v97;
        unint64_t v29 = v96;
        sub_100041C94(v100);
        sub_100041C94(v129);
        unint64_t result = sub_100041C94(v124);
      }
    }
    uint64_t v32 = v84 + 1;
    if (v32 == v31) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v42 = 0;
  unint64_t v43 = result + 32;
  unint64_t v44 = result + 40;
  unint64_t v130 = v29 + 8;
  unint64_t v134 = 1;
  uint64_t v132 = v39 - 1;
  while (1)
  {
    if (v42 == v40)
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    unint64_t v45 = *(void *)(v29 + 16);
    if (v45 <= v42) {
      goto LABEL_84;
    }
    unint64_t v133 = v42 + 1;
    if (v42 + 1 != v45) {
      break;
    }
LABEL_17:
    ++v134;
    uint64_t v40 = v132;
    unint64_t v42 = v133;
    if (v133 == v132) {
      goto LABEL_35;
    }
  }
  if (v42 + 1 >= v45) {
    goto LABEL_85;
  }
  unint64_t v46 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
  uint64_t v47 = *(void *)(v131 + 72);
  uint64_t v48 = (double *)(v29 + v46 + v47 * v42);
  unint64_t v136 = v45 - 1;
  uint64_t v137 = v47;
  id v49 = (double *)(v130 + v46 + v47 * v134);
  unint64_t v50 = v42;
  while (1)
  {
    unint64_t v51 = *(void *)(v29 + 16);
    if (v42 >= v51) {
      break;
    }
    unint64_t v52 = v50 + 1;
    if (v50 + 1 >= v51) {
      goto LABEL_78;
    }
    if (v42 >= *(void *)(result + 16)) {
      goto LABEL_79;
    }
    double v53 = *(v49 - 1);
    double v54 = *v49;
    double v56 = *v48;
    double v55 = v48[1];
    uint64_t v57 = *(double **)(v43 + 8 * v42);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v43 + 8 * v42) = v57;
    if ((v58 & 1) == 0)
    {
      uint64_t v57 = sub_1000C72B4((uint64_t)v57);
      *(void *)(v43 + 8 * v42) = v57;
    }
    if (v52 >= *((void *)v57 + 2)) {
      goto LABEL_80;
    }
    double v59 = (v56 - v53) * (v56 - v53) + (v55 - v54) * (v55 - v54);
    v57[v50 + 5] = v59;
    if (v52 >= *(void *)(v41 + 16)) {
      goto LABEL_81;
    }
    uint64_t v60 = *(double **)(v44 + 8 * v50);
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v44 + 8 * v50) = v60;
    if ((v61 & 1) == 0)
    {
      uint64_t v60 = sub_1000C72B4((uint64_t)v60);
      *(void *)(v44 + 8 * v50) = v60;
    }
    unint64_t v29 = v135;
    if (v42 >= *((void *)v60 + 2)) {
      goto LABEL_82;
    }
    unint64_t result = v41;
    v60[v42 + 4] = v59;
    ++v50;
    id v49 = (double *)((char *)v49 + v137);
    if (v136 == v50) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000526BC(uint64_t result, char a2)
{
  if (!*(void *)(*(void *)result + 16)) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_skipRows;
  uint64_t v5 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_skipColumns;
  uint64_t v25 = *(void *)result + 32;
  double v6 = 1.79769313e308;
  uint64_t v7 = -1;
  uint64_t v8 = -1;
  uint64_t v27 = *(void *)(*(void *)result + 16);
  unint64_t v28 = v27;
  do
  {
    if (v3 >= v27)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v25 + 8 * v3);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v12 = v9 + 32;
      unint64_t v13 = v28;
      if (v3 < v28) {
        unint64_t v13 = v3;
      }
      unint64_t v26 = v13;
      do
      {
        double v14 = *(double *)(v12 + 8 * v11);
        uint64_t v15 = *(void *)(v2 + v4);
        if (*(void *)(v15 + 16))
        {
          unint64_t result = sub_10010ADB0();
          uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
          unint64_t v17 = result & ~v16;
          if ((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
          {
            uint64_t v18 = *(void *)(v15 + 48);
            if (*(void *)(v18 + 8 * v17) == v3) {
              goto LABEL_11;
            }
            uint64_t v19 = ~v16;
            while (1)
            {
              unint64_t v17 = (v17 + 1) & v19;
              if (((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                break;
              }
              if (*(void *)(v18 + 8 * v17) == v3) {
                goto LABEL_11;
              }
            }
          }
        }
        uint64_t v20 = *(void *)(v2 + v5);
        if (*(void *)(v20 + 16))
        {
          unint64_t result = sub_10010ADB0();
          uint64_t v21 = -1 << *(unsigned char *)(v20 + 32);
          unint64_t v22 = result & ~v21;
          if ((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
          {
            uint64_t v23 = *(void *)(v20 + 48);
            if (*(void *)(v23 + 8 * v22) == v11) {
              goto LABEL_11;
            }
            uint64_t v24 = ~v21;
            while (1)
            {
              unint64_t v22 = (v22 + 1) & v24;
              if (((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                break;
              }
              if (*(void *)(v23 + 8 * v22) == v11) {
                goto LABEL_11;
              }
            }
          }
        }
        if ((a2 & 1) == 0) {
          goto LABEL_9;
        }
        if (v28 == 1)
        {
          uint64_t v27 = 1;
        }
        else
        {
          uint64_t v27 = v28;
          if (v11 < v26)
          {
LABEL_9:
            if (v14 < v6)
            {
              uint64_t v7 = v11;
              uint64_t v8 = v3;
              double v6 = v14;
            }
            goto LABEL_11;
          }
          uint64_t v27 = v28;
        }
LABEL_11:
        ++v11;
      }
      while (v11 != v10);
    }
    ++v3;
  }
  while (v3 != v28);
  if (v8 == -1 && v7 == -1) {
    return 0;
  }
  return v8;
}

int *sub_100052924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  unint64_t result = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = result;
  uint64_t v10 = result[9];
  unint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = v11;
  if (!v11)
  {
    uint64_t v12 = *(void **)(a2 + v10);
    unint64_t result = v12;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    double v16 = (*(double *)(a1 + 8) + *(double *)(a2 + 8)) * 0.5;
    double v17 = (*(double *)a1 + *(double *)a2) * 0.5;
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void **)(a2 + 40);
    uint64_t v24 = v19;
    uint64_t v25 = v18;
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v20;
    v26._object = v21;
    sub_100109E00(v26);
    id v22 = v11;
    unint64_t result = (int *)sub_1001094E0();
    *(double *)a3 = v17;
    *(double *)(a3 + 8) = v16;
    *(double *)(a3 + 16) = a4;
    *(void *)(a3 + 24) = v15;
    *(void *)(a3 + 32) = v24;
    *(void *)(a3 + 40) = v25;
    *(void *)(a3 + v9[9]) = v12;
    *(void *)(a3 + v9[10]) = 0;
    uint64_t v23 = (void *)(a3 + v9[11]);
    *uint64_t v23 = 0;
    v23[1] = 0xE000000000000000;
    *(unsigned char *)(a3 + v9[12]) = 0;
    *(void *)(a3 + v9[13]) = 0;
  }
  return result;
}

double *sub_100052A4C()
{
  uint64_t v144 = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v146 = *((void *)v144 - 1);
  uint64_t v0 = __chkstk_darwin(v144);
  uint64_t v143 = (uint64_t)v125 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (uint64_t)v125 - v3;
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v132 = (uint64_t)v125 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v129 = (uint64_t)v125 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  int64_t v11 = (int64_t)v125 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (double *)((char *)v125 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  double v17 = (double *)((char *)v125 - v16);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v125 - v18;
  unint64_t v152 = 0;
  unint64_t v153 = 0xE000000000000000;
  if (qword_100158A18 != -1) {
    goto LABEL_114;
  }
  while (1)
  {
    uint64_t v20 = sub_100109960();
    sub_100007CB8(v20, (uint64_t)qword_10015B358);
    uint64_t v21 = sub_100109940();
    os_log_type_t v22 = sub_10010A2F0();
    BOOL v23 = os_log_type_enabled(v21, v22);
    int64_t v136 = v11;
    if (v23)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134217984;
      uint64_t v151 = 0x3FE0000000000000;
      sub_10010A730();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionAssetMapsClusterer] using POI penalty: %f", v24, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v25 = (double *)((char *)v137
                   + OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_results);
    swift_beginAccess();
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = (void *)&unk_10015B000;
    if (!*(void *)(*(void *)v25 + 16))
    {
      uint64_t v145 = _swiftEmptyArrayStorage;
      double v17 = v137;
      goto LABEL_97;
    }
    uint64_t v145 = v25;
    uint64_t v28 = v26 + 56;
    uint64_t v29 = 1 << *(unsigned char *)(v26 + 32);
    uint64_t v30 = -1;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    unint64_t v31 = v30 & *(void *)(v26 + 56);
    int64_t v11 = (unint64_t)(v29 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v32 = 0;
    for (double i = 0.0; ; double i = i + v37 * v38)
    {
      if (v31)
      {
        unint64_t v34 = __clz(__rbit64(v31));
        v31 &= v31 - 1;
        unint64_t v35 = v34 | (v32 << 6);
        goto LABEL_9;
      }
      int64_t v39 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      if (v39 >= v11) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v39);
      ++v32;
      if (!v40)
      {
        int64_t v32 = v39 + 1;
        if (v39 + 1 >= v11) {
          goto LABEL_28;
        }
        unint64_t v40 = *(void *)(v28 + 8 * v32);
        if (!v40)
        {
          int64_t v32 = v39 + 2;
          if (v39 + 2 >= v11) {
            goto LABEL_28;
          }
          unint64_t v40 = *(void *)(v28 + 8 * v32);
          if (!v40) {
            break;
          }
        }
      }
LABEL_27:
      unint64_t v31 = (v40 - 1) & v40;
      unint64_t v35 = __clz(__rbit64(v40)) + (v32 << 6);
LABEL_9:
      sub_100041C30(*(void *)(v26 + 48) + *(void *)(v146 + 72) * v35, (uint64_t)v19);
      sub_100041CF0((uint64_t)v19, (uint64_t)v17);
      uint64_t v36 = *(void *)((char *)v17 + v144[9]);
      double v37 = v17[2];
      sub_100041C94((uint64_t)v17);
      if (v36) {
        double v38 = 0.5;
      }
      else {
        double v38 = 1.5;
      }
    }
    int64_t v41 = v39 + 3;
    if (v41 >= v11) {
      break;
    }
    unint64_t v40 = *(void *)(v28 + 8 * v41);
    if (v40)
    {
      int64_t v32 = v41;
      goto LABEL_27;
    }
    while (1)
    {
      int64_t v32 = v41 + 1;
      if (__OFADD__(v41, 1)) {
        break;
      }
      if (v32 >= v11) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v32);
      ++v41;
      if (v40) {
        goto LABEL_27;
      }
    }
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    swift_once();
  }
LABEL_28:
  swift_release();
  uint64_t v42 = *(void *)v145;
  uint64_t v43 = *(void *)(*(void *)v145 + 16);
  swift_bridgeObjectRetain_n();
  unint64_t v44 = sub_1000BEE00(v42);
  swift_bridgeObjectRelease();
  uint64_t v149 = v44;
  sub_100054468((unint64_t *)&v149);
  swift_bridgeObjectRelease();
  unint64_t v45 = (unint64_t)v149;
  uint64_t v46 = *((void *)v149 + 2);
  int64_t v11 = v136;
  if (v46)
  {
    unint64_t v47 = 0;
    uint64_t v139 = OBJC_IVAR____TtCC21JournalShareExtension10MapManager30MOSuggestionAssetMapsClusterer_inputClusters;
    unint64_t v138 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    uint64_t v48 = (char *)v149 + v138;
    uint64_t v145 = _swiftEmptyArrayStorage;
    uint64_t v127 = MKPointOfInterestCategoryReligiousSite;
    uint64_t v19 = (char *)&type metadata for String;
    double v49 = i / (double)v43;
    double v17 = v137;
    unint64_t v134 = v14;
    uint64_t v133 = v4;
    unint64_t v130 = (unint64_t)v149;
    uint64_t v135 = v46;
    uint64_t v140 = (char *)v149 + v138;
    while (1)
    {
      if (v47 >= *(void *)(v45 + 16))
      {
        __break(1u);
        goto LABEL_109;
      }
      uint64_t v50 = *(void *)(v146 + 72);
      sub_100041C30((uint64_t)&v48[v50 * v47], (uint64_t)v14);
      double v51 = v14[2];
      sub_100041C30((uint64_t)v14, v11);
      if (v51 >= v49)
      {
        sub_100041C94(v11);
        goto LABEL_31;
      }
      uint64_t v141 = v50;
      uint64_t v149 = (double *)v152;
      unint64_t v150 = v153;
      unint64_t v52 = *(void *)(v11 + 40);
      uint64_t v147 = *(void *)(v11 + 32);
      unint64_t v148 = v52;
      sub_10005058C();
      char v53 = sub_10010A7A0();
      sub_100041C94(v11);
      if (v53)
      {
        uint64_t v48 = v140;
        goto LABEL_31;
      }
      unint64_t v54 = *((void *)v14 + 5);
      uint64_t v149 = (double *)*((void *)v14 + 4);
      unint64_t v150 = v54;
      uint64_t v147 = 95;
      unint64_t v148 = 0xE100000000000000;
      uint64_t v55 = sub_10010A750();
      if (!*(void *)(v55 + 16)) {
        goto LABEL_112;
      }
      double v56 = (char *)v55;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v57 = *((void *)v56 + 2);
        if (!v57) {
          goto LABEL_113;
        }
      }
      else
      {
        double v56 = sub_1000C72A0((uint64_t)v56);
        uint64_t v57 = *((void *)v56 + 2);
        if (!v57) {
          goto LABEL_113;
        }
      }
      *((void *)v56 + 2) = v57 - 1;
      swift_bridgeObjectRelease();
      uint64_t v58 = *((void *)v56 + 2);
      if (!v58)
      {
        uint64_t v62 = v17;
        swift_bridgeObjectRelease();
        id v63 = 0;
        uint64_t v46 = v135;
        goto LABEL_90;
      }
      uint64_t v4 = 0;
      id v142 = 0;
      int64_t v11 = 0;
      double v59 = (unint64_t *)(v56 + 40);
      double v60 = 0.0;
      double v61 = 0.0;
      do
      {
        uint64_t v65 = *(v59 - 1);
        unint64_t v66 = *v59;
        if (v65) {
          BOOL v67 = 0;
        }
        else {
          BOOL v67 = v66 == 0xE000000000000000;
        }
        if (!v67 && (sub_10010ACA0() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_100053830(v65, v66);
          if ((v69 & 1) == 0 && (v68 & 0x8000000000000000) == 0)
          {
            uint64_t v70 = *(void *)((char *)v17 + v139);
            if (v68 < *(void *)(v70 + 16))
            {
              uint64_t v71 = (double *)(v70 + v138 + v68 * v141);
              double v73 = *v71;
              double v72 = v71[1];
              uint64_t v19 = *(char **)((char *)v71 + v144[9]);
              if (v19) {
                BOOL v74 = v4 < 1;
              }
              else {
                BOOL v74 = 0;
              }
              if (!v74)
              {
LABEL_57:

                if (__OFADD__(v11++, 1)) {
                  goto LABEL_110;
                }
                if (v60 == 0.0) {
                  double v60 = v72;
                }
                else {
                  double v60 = (v60 + v72) * 0.5;
                }
                if (v61 == 0.0) {
                  double v61 = v73;
                }
                else {
                  double v61 = (v61 + v73) * 0.5;
                }
                uint64_t v76 = v19;
                goto LABEL_43;
              }
              uint64_t v131 = v4;
              unint64_t v77 = v19;
              id v78 = [v77 pointOfInterestCategory];
              if (v78)
              {
                uint64_t v79 = v78;
                uint64_t v128 = v77;
                uint64_t v80 = sub_100109D30();
                uint64_t v82 = v81;
                if (v80 == sub_100109D30() && v82 == v83)
                {

                  swift_bridgeObjectRelease_n();
                  unint64_t v77 = v128;
                  double v17 = v137;
                }
                else
                {
                  LODWORD(v126) = sub_10010ACA0();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v77 = v128;
                  double v17 = v137;
                  if ((v126 & 1) == 0) {
                    goto LABEL_71;
                  }
                }
              }
              else
              {
LABEL_71:
                id v85 = [v77 _styleAttributes];

                if (v85)
                {
                  uint64_t v86 = *((void *)v14 + 2);
                  uint64_t v126 = *((void *)v14 + 4);
                  *(double *)uint64_t v125 = v14[5];
                  uint64_t v87 = (char *)v14 + v144[11];
                  uint64_t v89 = *(char **)v87;
                  uint64_t v88 = *((void *)v87 + 1);
                  uint64_t v128 = v89;
                  uint64_t v131 = v88;
                  uint64_t v90 = v129;
                  v125[1] = v129 + v144[8];
                  uint64_t v76 = v77;
                  uint64_t v91 = v125[0];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1001094E0();
                  *(double *)uint64_t v90 = v73;
                  *(double *)(v90 + 8) = v72;
                  *(void *)(v90 + 16) = v86;
                  *(void *)(v90 + 24) = 1;
                  *(void *)(v90 + 32) = v126;
                  *(void *)(v90 + 40) = v91;
                  unint64_t v92 = v144;
                  *(void *)(v90 + v144[9]) = v19;
                  *(void *)(v90 + v92[10]) = 0;
                  uint64_t v93 = (char **)(v90 + v92[11]);
                  uint64_t v94 = v131;
                  *uint64_t v93 = v128;
                  v93[1] = (char *)v94;
                  *(unsigned char *)(v90 + v92[12]) = 0;
                  *(void *)(v90 + v92[13]) = 0;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v145 = (double *)sub_10009EA18(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
                  }
                  unint64_t v96 = *((void *)v145 + 2);
                  unint64_t v95 = *((void *)v145 + 3);
                  if (v96 >= v95 >> 1) {
                    uint64_t v145 = (double *)sub_10009EA18(v95 > 1, v96 + 1, 1, (unint64_t)v145);
                  }
                  uint64_t v97 = v145;
                  *((void *)v145 + 2) = v96 + 1;
                  sub_100041CF0(v129, (uint64_t)v97 + v138 + v96 * v141);

                  if (v61 != 0.0) {
                    double v61 = v61 + (v61 - v73) / 7.0;
                  }
                  double v17 = v137;
                  if (v60 != 0.0) {
                    double v60 = v60 + (v60 - v72) / 7.0;
                  }
                  uint64_t v4 = 1;
LABEL_43:
                  double v64 = v76;
                  id v142 = v19;
                  goto LABEL_44;
                }
              }

              uint64_t v4 = v131;
              goto LABEL_57;
            }
          }
        }
LABEL_44:
        v59 += 2;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      if (v11 < 1)
      {
        uint64_t v62 = v17;
        int64_t v11 = v136;
        unint64_t v45 = v130;
        uint64_t v46 = v135;
      }
      else
      {
        uint64_t v98 = *((void *)v14 + 2);
        uint64_t v99 = *((void *)v14 + 5);
        uint64_t v131 = *((void *)v14 + 4);
        uint64_t v100 = v144;
        char v101 = (char *)v14 + v144[11];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        uint64_t v104 = v132;
        id v105 = v142;
        id v106 = v142;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001094E0();
        *(double *)uint64_t v104 = v61;
        *(double *)(v104 + 8) = v60;
        *(void *)(v104 + 16) = v98;
        uint64_t v107 = v131;
        *(void *)(v104 + 24) = v11;
        *(void *)(v104 + 32) = v107;
        *(void *)(v104 + 40) = v99;
        *(void *)(v104 + v100[9]) = v105;
        *(void *)(v104 + v100[10]) = 0;
        unint64_t v108 = (void *)(v104 + v100[11]);
        *unint64_t v108 = v103;
        v108[1] = v102;
        *(unsigned char *)(v104 + v100[12]) = 0;
        *(void *)(v104 + v100[13]) = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v145 = (double *)sub_10009EA18(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
        }
        unint64_t v110 = *((void *)v145 + 2);
        unint64_t v109 = *((void *)v145 + 3);
        uint64_t v62 = v137;
        int64_t v11 = v136;
        unint64_t v45 = v130;
        uint64_t v46 = v135;
        if (v110 >= v109 >> 1) {
          uint64_t v145 = (double *)sub_10009EA18(v109 > 1, v110 + 1, 1, (unint64_t)v145);
        }
        uint64_t v111 = v145;
        *((void *)v145 + 2) = v110 + 1;
        sub_100041CF0(v132, (uint64_t)v111 + v138 + v110 * v141);
      }
      id v63 = v142;
LABEL_90:
      uint64_t v14 = v134;
      uint64_t v112 = *((void *)v134 + 4);
      id v113 = (void *)*((void *)v134 + 5);
      swift_bridgeObjectRetain();
      v154._countAndFlagsBits = v112;
      v154._object = v113;
      sub_100109E00(v154);
      swift_bridgeObjectRelease();

      uint64_t v48 = v140;
      uint64_t v19 = (char *)&type metadata for String;
      double v17 = v62;
      uint64_t v4 = v133;
LABEL_31:
      ++v47;
      sub_100041C94((uint64_t)v14);
      if (v47 == v46)
      {
        swift_release();
        goto LABEL_96;
      }
    }
  }
  swift_release();
  uint64_t v145 = _swiftEmptyArrayStorage;
  double v17 = v137;
LABEL_96:
  uint64_t v27 = &unk_10015B000;
LABEL_97:
  uint64_t v114 = *(void *)((char *)v17 + v27[112]);
  uint64_t v115 = *(void *)(v114 + 16);
  if (v115)
  {
    unint64_t v116 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    uint64_t v117 = v114 + v116;
    uint64_t v118 = *(void *)(v146 + 72);
    uint64_t v146 = v114;
    swift_bridgeObjectRetain();
    do
    {
      sub_100041C30(v117, v4);
      uint64_t v149 = (double *)v152;
      unint64_t v150 = v153;
      uint64_t v121 = *(void *)(v4 + 32);
      uint64_t v120 = *(void **)(v4 + 40);
      uint64_t v147 = v121;
      unint64_t v148 = (unint64_t)v120;
      sub_10005058C();
      if ((sub_10010A7A0() & 1) == 0)
      {
        sub_100041C30(v4, v143);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v145 = (double *)sub_10009EA18(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
        }
        unint64_t v123 = *((void *)v145 + 2);
        unint64_t v122 = *((void *)v145 + 3);
        if (v123 >= v122 >> 1) {
          uint64_t v145 = (double *)sub_10009EA18(v122 > 1, v123 + 1, 1, (unint64_t)v145);
        }
        uint64_t v119 = v145;
        *((void *)v145 + 2) = v123 + 1;
        sub_100041CF0(v143, (uint64_t)v119 + v116 + v123 * v118);
        swift_bridgeObjectRetain();
        v155._countAndFlagsBits = v121;
        v155._object = v120;
        sub_100109E00(v155);
        swift_bridgeObjectRelease();
      }
      sub_100041C94(v4);
      v117 += v118;
      --v115;
    }
    while (v115);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v145;
}

uint64_t sub_100053830(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_10010A980();
      }
      uint64_t v7 = (uint64_t)sub_100055670(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              int64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_100055588(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

id sub_100053AB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s30MOSuggestionAssetMapsClustererCMa();
  return [super dealloc];
}

uint64_t _s30MOSuggestionAssetMapsClustererCMa()
{
  return self;
}

void *sub_100053B74(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a3[8];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1001094F0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    unsigned int v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v16;
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v17);
    unsigned int v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v4 + v18) = *((unsigned char *)a2 + v18);
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    id v22 = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100053CBC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100053D58(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001094F0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  id v21 = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100053E50(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001094F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  uint64_t v12 = *(void **)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = v12;
  id v13 = v12;

  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_100053F7C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001094F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_100054044(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *id v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t sub_10005413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100054150);
}

uint64_t sub_100054150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001094F0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100054200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054214);
}

uint64_t sub_100054214(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001094F0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s30MOSuggestionAssetMapsClustererC7ClusterVMa()
{
  uint64_t result = qword_10015B418;
  if (!qword_10015B418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100054308()
{
  uint64_t result = sub_1001094F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000543D8()
{
  return sub_100054420(&qword_10015B470, (void (*)(uint64_t))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_100054420(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_100054468(unint64_t *a1)
{
  uint64_t v2 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1000C16AC(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100054510(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100054510(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v126 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v135 = (uint64_t)&v120 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v133 = (uint64_t)&v120 - v10;
  __chkstk_darwin(v9);
  uint64_t v132 = (uint64_t)&v120 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_10010AC50(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      return sub_100054ED8(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  Swift::Int v123 = result;
  if (v12 < 2)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v128 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_107:
      unint64_t v122 = v18;
      if (v21 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v114) {
            goto LABEL_149;
          }
          double v116 = v20[2 * v115 + 4];
          double v117 = v20[2 * v21 + 3];
          sub_10005512C(v114 + *(void *)(v129 + 72) * *(void *)&v116, v114 + *(void *)(v129 + 72) * *(void *)&v20[2 * v21 + 2], v114 + *(void *)(v129 + 72) * *(void *)&v117, v128);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v117 < *(uint64_t *)&v116) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_1000C0C44((uint64_t)v20);
          }
          if (v115 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          uint64_t v118 = &v20[2 * v115 + 4];
          *uint64_t v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *((void *)v20 + 2);
          if (v21 > v119) {
            goto LABEL_140;
          }
          memmove(&v20[2 * v21 + 2], &v20[2 * v21 + 4], 16 * (v119 - v21));
          *((void *)v20 + 2) = v119 - 1;
          unint64_t v21 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v122[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v122 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_100109F80();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v129 + 80);
    unint64_t v122 = (double *)v16;
    unint64_t v128 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = _swiftEmptyArrayStorage;
  unint64_t v134 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      Swift::Int v32 = v19 + 1;
    }
    else
    {
      uint64_t v24 = *a1;
      uint64_t v25 = v19;
      uint64_t v127 = v19;
      uint64_t v26 = *(void *)(v129 + 72);
      uint64_t v27 = v132;
      sub_100041C30(v24 + v26 * v23, v132);
      uint64_t v28 = v24 + v26 * v25;
      uint64_t v29 = v133;
      sub_100041C30(v28, v133);
      double v30 = *(double *)(v27 + 16);
      double v31 = *(double *)(v29 + 16);
      sub_100041C94(v29);
      sub_100041C94(v27);
      Swift::Int v32 = v127 + 2;
      uint64_t v124 = v24;
      uint64_t v136 = v26;
      if (v127 + 2 >= v12)
      {
        uint64_t v40 = v26;
        uint64_t v22 = v127;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v125 = v2;
        Swift::Int v131 = v26 * v23;
        uint64_t v33 = v24;
        Swift::Int v34 = v127 + 2;
        uint64_t v35 = v26 * (v127 + 2);
        while (1)
        {
          Swift::Int v36 = v12;
          uint64_t v37 = v132;
          sub_100041C30(v33 + v35, v132);
          uint64_t v38 = v133;
          sub_100041C30(v33 + v131, v133);
          BOOL v39 = *(double *)(v38 + 16) >= *(double *)(v37 + 16);
          sub_100041C94(v38);
          sub_100041C94(v37);
          if (v31 < v30 == v39) {
            break;
          }
          uint64_t v40 = v136;
          v33 += v136;
          ++v34;
          Swift::Int v12 = v36;
          if (v36 == v34)
          {
            Swift::Int v32 = v36;
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v22 = v127;
            if (v31 < v30) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v134;
        Swift::Int v32 = v34;
        uint64_t v2 = v125;
        uint64_t v22 = v127;
        Swift::Int v12 = v36;
        uint64_t v40 = v136;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v32 < v22) {
        goto LABEL_143;
      }
      if (v22 < v32)
      {
        Swift::Int v131 = v12;
        uint64_t v121 = v20;
        uint64_t v41 = 0;
        uint64_t v42 = v40 * (v32 - 1);
        Swift::Int v43 = v32 * v40;
        uint64_t v44 = v22 * v40;
        do
        {
          if (v22 != v32 + v41 - 1)
          {
            uint64_t v125 = v2;
            uint64_t v45 = v124;
            if (!v124) {
              goto LABEL_148;
            }
            unint64_t v46 = v124 + v44;
            sub_100041CF0(v124 + v44, v126);
            if (v44 < v42 || v46 >= v45 + v43)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v44 != v42)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_100041CF0(v126, v45 + v42);
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v40 = v136;
          }
          ++v22;
          --v41;
          v42 -= v40;
          v43 -= v40;
          v44 += v40;
        }
        while (v22 < v32 + v41);
        uint64_t v20 = v121;
        uint64_t v22 = v127;
        Swift::Int v12 = v131;
      }
    }
LABEL_40:
    if (v32 < v12)
    {
      if (__OFSUB__(v32, v22)) {
        goto LABEL_141;
      }
      if (v32 - v22 < v123) {
        break;
      }
    }
LABEL_58:
    if (v32 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v136 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1000C073C(0, *((void *)v20 + 2) + 1, 1, (uint64_t)v20);
    }
    unint64_t v63 = *((void *)v20 + 2);
    unint64_t v62 = *((void *)v20 + 3);
    unint64_t v21 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v20 = sub_1000C073C((double *)(v62 > 1), v63 + 1, 1, (uint64_t)v20);
    }
    *((void *)v20 + 2) = v21;
    double v64 = v20 + 4;
    uint64_t v65 = &v20[2 * v63 + 4];
    uint64_t v66 = v136;
    *(void *)uint64_t v65 = v22;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v21 - 1;
        if (v21 >= 4)
        {
          double v72 = &v64[2 * v21];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_125;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_126;
          }
          unint64_t v79 = v21 - 2;
          uint64_t v80 = &v64[2 * v21 - 4];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_128;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_131;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[2 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_135;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v96 = *((void *)v20 + 4);
            uint64_t v97 = *((void *)v20 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_89;
          }
          uint64_t v69 = *((void *)v20 + 4);
          uint64_t v68 = *((void *)v20 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_127;
        }
        unint64_t v79 = v21 - 2;
        id v85 = &v64[2 * v21 - 4];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_130;
        }
        uint64_t v91 = &v64[2 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_133;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_134;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_95:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v90) {
          goto LABEL_129;
        }
        uint64_t v98 = &v64[2 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_132;
        }
        if (v101 < v89) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        unint64_t v108 = v20;
        unint64_t v109 = &v64[2 * v106];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = &v64[2 * v67];
        double v112 = v111[1];
        sub_10005512C(v107 + *(void *)(v129 + 72) * *(void *)v109, v107 + *(void *)(v129 + 72) * *(void *)v111, v107 + *(void *)(v129 + 72) * *(void *)&v112, v128);
        if (v2) {
          goto LABEL_118;
        }
        if (*(uint64_t *)&v112 < v110) {
          goto LABEL_122;
        }
        if (v67 > *((void *)v108 + 2)) {
          goto LABEL_123;
        }
        *(void *)unint64_t v109 = v110;
        v64[2 * v106 + 1] = v112;
        unint64_t v113 = *((void *)v108 + 2);
        if (v67 >= v113) {
          goto LABEL_124;
        }
        uint64_t v20 = v108;
        unint64_t v21 = v113 - 1;
        memmove(&v64[2 * v67], v111 + 2, 16 * (v113 - 1 - v67));
        *((void *)v108 + 2) = v113 - 1;
        a1 = v134;
        if (v113 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v136;
    if (v136 >= v12)
    {
      uint64_t v18 = v122;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v123)) {
    goto LABEL_144;
  }
  if (v22 + v123 >= v12) {
    Swift::Int v47 = v12;
  }
  else {
    Swift::Int v47 = v22 + v123;
  }
  if (v47 >= v22)
  {
    if (v32 != v47)
    {
      uint64_t v127 = v22;
      uint64_t v121 = v20;
      uint64_t v124 = v47;
      uint64_t v125 = v2;
      Swift::Int v48 = *(void *)(v129 + 72);
      uint64_t v136 = v48 * (v32 - 1);
      Swift::Int v131 = v48;
      Swift::Int v49 = v32 * v48;
      do
      {
        uint64_t v50 = 0;
        uint64_t v51 = v127;
        while (1)
        {
          Swift::Int v52 = v32;
          uint64_t v53 = *a1;
          uint64_t v54 = v132;
          sub_100041C30(v49 + v50 + *a1, v132);
          uint64_t v55 = v136 + v50 + v53;
          uint64_t v56 = v133;
          sub_100041C30(v55, v133);
          double v57 = *(double *)(v54 + 16);
          double v58 = *(double *)(v56 + 16);
          sub_100041C94(v56);
          sub_100041C94(v54);
          if (v58 >= v57) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v60 = v59 + v136 + v50;
          sub_100041CF0(v59 + v49 + v50, v135);
          swift_arrayInitWithTakeFrontToBack();
          sub_100041CF0(v135, v60);
          v50 -= v131;
          ++v51;
          Swift::Int v32 = v52;
          a1 = v134;
          if (v52 == v51) {
            goto LABEL_51;
          }
        }
        Swift::Int v32 = v52;
LABEL_51:
        ++v32;
        v136 += v131;
        v49 += v131;
      }
      while (v32 != v124);
      Swift::Int v32 = v124;
      uint64_t v2 = v125;
      uint64_t v20 = v121;
      uint64_t v22 = v127;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_10010AA50();
  __break(1u);
  return result;
}

uint64_t sub_100054ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v7 = __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (double *)((char *)&v24 - v10);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (double *)((char *)&v24 - v14);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = *a4;
      sub_100041C30(v31 + v17 + *a4, (uint64_t)v15);
      sub_100041C30(v32 + v17 + v19, (uint64_t)v11);
      double v20 = v15[2];
      double v21 = v11[2];
      sub_100041C94((uint64_t)v11);
      uint64_t result = sub_100041C94((uint64_t)v15);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_100041CF0(v22 + v31 + v17, v30);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100041CF0(v30, v23);
      v17 -= v28;
      if (v29 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10005512C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = __chkstk_darwin(v40);
  uint64_t v10 = (double *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  Swift::Int v12 = (double *)((char *)&v39 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v14;
        do
        {
          unint64_t v32 = a3 + v31;
          sub_100041C30(v29 + v31, (uint64_t)v12);
          unint64_t v33 = a2 + v31;
          sub_100041C30(a2 + v31, (uint64_t)v10);
          double v34 = v12[2];
          double v35 = v10[2];
          sub_100041C94((uint64_t)v10);
          sub_100041C94((uint64_t)v12);
          if (v35 >= v34)
          {
            unint64_t v36 = v41;
            v41 += v31;
            if (a3 < v36 || v32 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v36)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v31;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v33;
          a3 += v31;
        }
        while (v33 > a1);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_100041C30(a2, (uint64_t)v12);
        sub_100041C30(a4, (uint64_t)v10);
        double v22 = v12[2];
        double v23 = v10[2];
        sub_100041C94((uint64_t)v10);
        sub_100041C94((uint64_t)v12);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_1000C08F4(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

unsigned __int8 *sub_100055588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100109E90();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100064C60();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_10010A980();
  }
LABEL_7:
  uint64_t v11 = sub_100055670(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_100055670(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (double i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

double sub_1000558EC(uint64_t a1, char a2, char a3, char a4, char a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v10 = (long long *)(a1 + 32);
    double v11 = *(double *)(a1 + 32);
    char v12 = *(void **)(a1 + 48);
    if (v5 == 1)
    {
      double v13 = *(double *)(a1 + 40);
      double v14 = *(double *)(a1 + 112);
      if ((*(unsigned char *)(a1 + 64) & 1) != 0 || *(uint64_t *)(a1 + 56) < 2)
      {
        if (v14 <= 0.0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v42 = v12;
          swift_bridgeObjectRetain();
          double v16 = 0.04;
          double v17 = 0.04;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
        else
        {
          BOOL v40 = v14 < 150.0;
          double v41 = v14 / 111000.0;
          if (v40)
          {
            double v16 = v41 + v41 + 0.003;
          }
          else
          {
            double v43 = v41 * 3.0 + 0.003;
            if (v43 <= 0.1) {
              double v16 = v43;
            }
            else {
              double v16 = 0.1;
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v44 = v12;
          swift_bridgeObjectRetain();
          double v17 = v16;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v15 = v12;
        swift_bridgeObjectRetain();
        double v16 = 0.01;
        double v17 = 0.01;
        if ((a5 & 1) == 0)
        {
LABEL_6:
          double v18 = 1.1;
LABEL_29:
          double v45 = v17 * v18;
          double v46 = v16 * v18;
          if (a2)
          {
            double v45 = v45 * 1.4;
            double v46 = v46 * 0.9;
            double v11 = v11 + v45 / -12.0;
          }
          if (a4) {
            double v45 = v45 * 1.3;
          }
          if (a3) {
            double v46 = v46 * 1.3;
          }
          if (!sub_1000C3B0C(v11, v13, fmin(v45, 180.0), fmin(v46, 180.0)))
          {
            if (qword_100158A18 != -1) {
              swift_once();
            }
            uint64_t v47 = sub_100109960();
            sub_100007CB8(v47, (uint64_t)qword_10015B358);
            Swift::Int v48 = sub_100109940();
            os_log_type_t v49 = sub_10010A2D0();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 134218752;
              sub_10010A730();
              *(_WORD *)(v50 + 12) = 2048;
              sub_10010A730();
              *(_WORD *)(v50 + 22) = 2048;
              sub_10010A730();
              *(_WORD *)(v50 + 32) = 2048;
              sub_10010A730();
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "[MapSnapshot] makeRegion failed with invalid region: centerLatitude = %f, centerLongitude = %f, targetLatitudeDelta = %f, targetLongitudeDelta = %f", (uint8_t *)v50, 0x2Au);
              swift_slowDealloc();
            }

            v56.origin.CGFloat x = MKMapRectWorld.origin.x;
            v56.origin.CGFloat y = MKMapRectWorld.origin.y;
            v56.size.CGFloat width = MKMapRectWorld.size.width;
            v56.size.CGFloat height = MKMapRectWorld.size.height;
            *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v56);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          return v11;
        }
      }
    }
    else
    {
      uint64_t v53 = *(void **)(a1 + 48);
      id v23 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000BDDE4(0, v5, 0);
      double v24 = _swiftEmptyArrayStorage[2];
      int64_t v25 = v5;
      do
      {
        long long v26 = *v10;
        double v27 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v24 >= *(void *)&v27 >> 1)
        {
          long long v52 = *v10;
          sub_1000BDDE4(*(void *)&v27 > 1uLL, *(void *)&v24 + 1, 1);
          long long v26 = v52;
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v24 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v24 + 4] = v26;
        unint64_t v10 = (long long *)((char *)v10 + 104);
        ++*(void *)&v24;
        --v25;
      }
      while (v25);
      id v28 = [self polygonWithCoordinates:&_swiftEmptyArrayStorage[4] count:v5];
      swift_release();
      [v28 boundingMapRect];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;

      v55.origin.CGFloat x = v30;
      v55.origin.CGFloat y = v32;
      v55.size.CGFloat width = v34;
      v55.size.CGFloat height = v36;
      *(MKCoordinateRegion *)(&v17 - 2) = MKCoordinateRegionForMapRect(v55);
      double v11 = v37;
      double v13 = v38;
      double v16 = v39;
      char v12 = v53;
      if ((a5 & 1) == 0) {
        goto LABEL_6;
      }
    }
    double v18 = 1.4;
    goto LABEL_29;
  }
  if (qword_100158A18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100109960();
  sub_100007CB8(v19, (uint64_t)qword_10015B358);
  char v20 = sub_100109940();
  os_log_type_t v21 = sub_10010A2D0();
  if (os_log_type_enabled(v20, v21))
  {
    unsigned __int8 v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned __int8 v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[MapSnapshot] makeRegion failed with 0 locations", v22, 2u);
    swift_slowDealloc();
  }

  v54.origin.CGFloat x = MKMapRectNull.origin.x;
  v54.origin.CGFloat y = MKMapRectNull.origin.y;
  v54.size.CGFloat width = MKMapRectNull.size.width;
  v54.size.CGFloat height = MKMapRectNull.size.height;
  *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v54);
  return v11;
}

uint64_t sub_100055EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100055F24()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015B480);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015B480);
  if (qword_100158C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E0A8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for CanvasGridManager()
{
  return self;
}

uint64_t sub_100056010(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v8 = [self mainScreen];
  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v23.origin.CGFloat x = v10;
  v23.origin.CGFloat y = v12;
  v23.size.CGFloat width = v14;
  v23.size.CGFloat height = v16;
  double Width = CGRectGetWidth(v23);
  if (qword_100158998 != -1) {
    swift_once();
  }
  double v18 = Width - (*(double *)&qword_10016DD90 + *(double *)&qword_10016DD90);
  if (qword_100158990 != -1) {
    swift_once();
  }
  double v19 = v18 - (*(double *)&qword_10016DD88 + *(double *)&qword_10016DD88);
  v24.origin.CGFloat x = a1;
  v24.origin.CGFloat y = a2;
  v24.size.CGFloat width = a3;
  v24.size.CGFloat height = a4;
  double v20 = CGRectGetWidth(v24);
  if (v19 * 0.5 >= v20)
  {
    if (v20 >= v19 * 0.5) {
      return 4;
    }
    double v22 = v19 * 0.25;
    if (v22 >= v20)
    {
      return 4;
    }
    else
    {
      v26.origin.CGFloat x = a1;
      v26.origin.CGFloat y = a2;
      v26.size.CGFloat width = a3;
      v26.size.CGFloat height = a4;
      if (CGRectGetHeight(v26) >= v22) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
  else
  {
    v25.origin.CGFloat x = a1;
    v25.origin.CGFloat y = a2;
    v25.size.CGFloat width = a3;
    v25.size.CGFloat height = a4;
    if (v20 == CGRectGetHeight(v25))
    {
      return 5;
    }
    else
    {
      v27.origin.CGFloat x = a1;
      v27.origin.CGFloat y = a2;
      v27.size.CGFloat width = a3;
      v27.size.CGFloat height = a4;
      return v19 * 0.25 >= CGRectGetHeight(v27);
    }
  }
}

BOOL sub_1000561F0(uint64_t a1)
{
  double v1 = (double)a1;
  if (qword_100158A20 != -1) {
    swift_once();
  }
  double v2 = v1 * 0.000000953674316;
  uint64_t v3 = sub_100109960();
  sub_100007CB8(v3, (uint64_t)qword_10015B480);
  uint64_t v4 = sub_100109940();
  os_log_type_t v5 = sub_10010A2F0();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned __int8 v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v6 = 134217984;
    sub_10010A730();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "(isMaxMegabytesReached) entryInMegabytes: %f", v6, 0xCu);
    swift_slowDealloc();
  }

  return v2 >= 500.0;
}

void *sub_100056324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v10[4] = a9;
  v10[5] = a10;
  type metadata accessor for CoreDataStackConfiguration();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(unsigned char *)(v18 + 48) = a6;
  *(void *)(v18 + 56) = a5;
  *(void *)(v18 + 64) = a9;
  *(void *)(v18 + 72) = a10;
  v10[2] = v18;
  type metadata accessor for CloudKitStackConfiguration();
  double v19 = (void *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  _OWORD v19[4] = a5;
  v10[3] = v19;
  swift_bridgeObjectRetain();
  id v20 = a5;
  return v10;
}

uint64_t sub_1000563F0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataStackConfiguration()
{
  return self;
}

uint64_t sub_10005645C()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015B5E0);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015B5E0);
  if (qword_100158C20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E030);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100056524(uint64_t a1, uint64_t a2)
{
  uint64_t v128 = sub_100109460();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v5 = __chkstk_darwin(v128);
  unint64_t v119 = &v112[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = v6;
  __chkstk_darwin(v5);
  uint64_t v135 = &v112[-v7];
  uint64_t v8 = sub_1001094F0();
  uint64_t v132 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  double v117 = &v112[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v125 = &v112[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v124 = &v112[-v14];
  uint64_t v116 = v15;
  __chkstk_darwin(v13);
  uint64_t v137 = &v112[-v16];
  uint64_t v17 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v17 - 8);
  double v19 = &v112[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_1001091E0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v130 = &v112[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = __chkstk_darwin(v22);
  CGRect v26 = &v112[-v25];
  __chkstk_darwin(v24);
  id v28 = &v112[-v27];
  double v29 = &v2[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_sessionID];
  double v30 = v2;
  uint64_t v121 = v29;
  sub_1001094E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(&v30[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_customBundleURL], 1, 1, v20);
  Swift::Int v131 = v30;
  v30[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_persistentStoresLoadSuccess] = 0;
  uint64_t v136 = a1;
  sub_1000FB770();
  uint64_t v126 = a2;
  sub_100019290(a2, (uint64_t)v19);
  int v31 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v133 = v20;
  unint64_t v138 = v28;
  uint64_t v129 = v21;
  uint64_t v134 = v8;
  if (v31 == 1)
  {
    sub_1000192F8((uint64_t)v19);
    uint64_t v32 = v8;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v26, v19, v20);
    if (qword_100158A28 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100109960();
    sub_100007CB8(v33, (uint64_t)qword_10015B5E0);
    double v34 = v130;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(v130, v26, v20);
    double v35 = sub_100109940();
    os_log_type_t v36 = sub_10010A2F0();
    if (os_log_type_enabled(v35, v36))
    {
      double v37 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)double v37 = 136315138;
      sub_1000587AC((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v38 = sub_10010AC60();
      uint64_t v147 = sub_1000C50D4(v38, v39, &aBlock);
      uint64_t v20 = v133;
      uint64_t v21 = v129;
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v34, v20);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "(sharedCoredataInit) customModelURL assigned :%s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v28 = v138;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v34, v20);
    }

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 40))(v28, v26, v20);
    uint64_t v32 = v134;
  }
  if (qword_100158A28 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_100109960();
  uint64_t v130 = (unsigned char *)sub_100007CB8(v40, (uint64_t)qword_10015B5E0);
  double v41 = sub_100109940();
  os_log_type_t v42 = sub_10010A2F0();
  if (os_log_type_enabled(v41, v42))
  {
    double v43 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)double v43 = 136315138;
    swift_beginAccess();
    sub_1000587AC((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v44 = sub_10010AC60();
    uint64_t v147 = sub_1000C50D4(v44, v45, &aBlock);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "(sharedCoredataInit) Using modelURL :%s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  double v46 = v132;
  swift_beginAccess();
  id v47 = objc_allocWithZone((Class)NSManagedObjectModel);
  sub_1001090F0(v48);
  uint64_t v50 = v49;
  id v51 = [v47 initWithContentsOfURL:v49];

  if (v51)
  {
    uint64_t v52 = v136;
    id v53 = objc_allocWithZone((Class)NSPersistentContainer);
    swift_bridgeObjectRetain();
    id v54 = v51;
    NSString v55 = sub_100109CF0();
    swift_bridgeObjectRelease();
    id v56 = [v53 initWithName:v55 managedObjectModel:v54];

    id v123 = v54;
    double v57 = &unk_10016D000;
    double v58 = v131;
    uint64_t v120 = OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_container;
    *(void *)&v131[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_container] = v56;
    id v59 = sub_100057764(v52);
    sub_100004BD4(qword_100159E08);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1001235F0;
    *(void *)(v60 + 32) = v59;
    uint64_t aBlock = v60;
    sub_100109F50();
    sub_10001CB98(0, &qword_10015B640);
    id v61 = v56;
    id v122 = v59;
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v61 setPersistentStoreDescriptions:isa];

    unint64_t v63 = (char *)v46[2];
    double v64 = v137;
    ((void (*)(unsigned char *, char *, uint64_t))v63)(v137, v121, v32);
    uint64_t v65 = v124;
    uint64_t v121 = v63;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v63)(v124, v64, v32);
    uint64_t v66 = v32;
    unint64_t v67 = v58;
    uint64_t v68 = sub_100109940();
    os_log_type_t v69 = sub_10010A2F0();
    int v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      unint64_t v115 = (char *)(v46 + 2);
      uint64_t v72 = v71;
      uint64_t v114 = swift_slowAlloc();
      uint64_t aBlock = v114;
      *(_DWORD *)uint64_t v72 = 136446466;
      int v113 = v70;
      sub_1000587AC((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v73 = sub_10010AC60();
      uint64_t v139 = sub_1000C50D4(v73, v74, &aBlock);
      sub_10010A730();
      swift_bridgeObjectRelease();
      uint64_t v124 = (unsigned char *)v46[1];
      ((void (*)(unsigned char *, uint64_t))v124)(v65, v66);
      *(_WORD *)(v72 + 12) = 2080;
      uint64_t v75 = v120;
      id v76 = [*(id *)&v58[v120] name];
      uint64_t v77 = sub_100109D30();
      unint64_t v79 = v78;

      double v64 = v137;
      uint64_t v80 = v77;
      double v58 = v131;
      uint64_t v139 = sub_1000C50D4(v80, v79, &aBlock);
      double v57 = (void *)&unk_10016D000;
      sub_10010A730();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v113, "%{public}s (sharedCoredataInit) -> CoreDataStack init for container %s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v81 = v135;
      uint64_t v82 = v75;
    }
    else
    {
      uint64_t v124 = (unsigned char *)v46[1];
      ((void (*)(unsigned char *, uint64_t))v124)(v65, v66);

      uint64_t v81 = v135;
      uint64_t v82 = v120;
    }
    sub_100109450();
    id v83 = [*(id *)&v58[v82] viewContext];
    *(void *)&v67[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_context] = v83;
    uint64_t aBlock = 1;
    type metadata accessor for NSMergePolicyType(0);
    id v84 = v83;
    [v84 setMergePolicy:sub_10010AD00()];

    swift_unknownObjectRelease();
    id v85 = (objc_class *)type metadata accessor for CoreDataStackShared();
    v146.receiver = v67;
    v146.super_class = v85;
    uint64_t v86 = (char *)[v146 init];
    int v87 = MKBGetDeviceLockState();
    BOOL v88 = v125;
    if (v87 == 1)
    {
      uint64_t v89 = v134;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v121)(v125, v64, v134);
      char v90 = sub_100109940();
      os_log_type_t v91 = sub_10010A2D0();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = 136446210;
        sub_1000587AC((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v93 = sub_10010AC60();
        uint64_t v139 = sub_1000C50D4(v93, v94, &aBlock);
        sub_10010A730();
        swift_bridgeObjectRelease();
        BOOL v95 = (void (*)(unsigned char *, uint64_t))v124;
        ((void (*)(unsigned char *, uint64_t))v124)(v88, v89);
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{public}s (sharedCoredataInit) SharedDeviceInfoProvider.isDeviceLocked == TRUE, unable to complete CoreDataStackShared initialization.", v92, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
        sub_1000192F8(v126);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v135, v128);
        v95(v137, v89);
      }
      else
      {

        swift_release();
        uint64_t v110 = (void (*)(unsigned char *, uint64_t))v124;
        ((void (*)(unsigned char *, uint64_t))v124)(v88, v89);

        sub_1000192F8(v126);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v81, v128);
        v110(v64, v89);
      }
    }
    else
    {
      Swift::Int v131 = *(char **)&v86[v57[464]];
      uint64_t v96 = v117;
      uint64_t v97 = v134;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v121)(v117, v64, v134);
      uint64_t v98 = v127;
      uint64_t v99 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v127 + 16);
      uint64_t v100 = v119;
      uint64_t v132 = v86;
      uint64_t v101 = v128;
      v99(v119, v81, v128);
      unint64_t v102 = (*((unsigned __int8 *)v46 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v46 + 80);
      unint64_t v103 = (v116 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v104 = v46;
      unint64_t v105 = (*(unsigned __int8 *)(v98 + 80) + v103 + 8) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      uint64_t v106 = swift_allocObject();
      ((void (*)(unint64_t, unsigned char *, uint64_t))v104[4])(v106 + v102, v96, v97);
      *(void *)(v106 + v103) = v132;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v98 + 32))(v106 + v105, v100, v101);
      uint64_t v144 = sub_1000586A0;
      uint64_t v145 = v106;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v141 = 1107296256;
      id v142 = sub_100058270;
      uint64_t v143 = &unk_1001425C0;
      uint64_t v107 = _Block_copy(&aBlock);
      unint64_t v108 = v132;
      swift_release();
      [v131 loadPersistentStoresWithCompletionHandler:v107];

      _Block_release(v107);
      swift_release();
      sub_1000192F8(v126);
      uint64_t v109 = v101;
      uint64_t v86 = (char *)v132;
      (*(void (**)(unsigned char *, uint64_t))(v98 + 8))(v135, v109);
      ((void (*)(unsigned char *, uint64_t))v124)(v137, v97);
    }
    (*(void (**)(unsigned char *, uint64_t))(v129 + 8))(v138, v133);
    return (uint64_t)v86;
  }
  else
  {
    uint64_t aBlock = 0;
    unint64_t v141 = 0xE000000000000000;
    sub_10010A8D0(35);
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0xD000000000000021;
    unint64_t v141 = 0x800000010010F650;
    sub_1000587AC((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
    v148._countAndFlagsBits = sub_10010AC60();
    sub_100109E00(v148);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10010AA60();
    __break(1u);
  }
  return result;
}

id sub_100057764(uint64_t a1)
{
  uint64_t v2 = sub_1001091E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 48) == 1) {
    sub_1001090C0();
  }
  else {
    sub_1000FB8D0();
  }
  id v6 = objc_allocWithZone((Class)NSPersistentStoreDescription);
  sub_1001090F0(v7);
  uint64_t v9 = v8;
  id v10 = [v6 initWithURL:v8];

  [v10 setShouldInferMappingModelAutomatically:1];
  [v10 setShouldMigrateStoreAutomatically:1];
  sub_100109D30();
  NSString v11 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v10 setOption:v11 forKey:NSPersistentStoreFileProtectionKey];

  sub_10001CB98(0, (unint64_t *)&unk_10015B650);
  Class isa = sub_10010A680(1).super.super.isa;
  [v10 setOption:isa forKey:NSPersistentHistoryTrackingKey];

  Class v13 = sub_10010A680(1).super.super.isa;
  [v10 setOption:v13 forKey:NSPersistentStoreRemoteChangeNotificationPostOptionKey];

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

void sub_100057984(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001094F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - v17;
  if (a2)
  {
    double v19 = (void *)sub_100108FB0();
    if (qword_100158A28 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_100109960();
    sub_100007CB8(v20, (uint64_t)qword_10015B5E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, a3, v13);
    id v21 = v19;
    uint64_t v22 = sub_100109940();
    os_log_type_t v23 = sub_10010A2E0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = v13;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v61 = v59;
      *(_DWORD *)uint64_t v25 = 136446466;
      sub_1000587AC((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v26 = sub_10010AC60();
      double v60 = COERCE_DOUBLE(sub_1000C50D4(v26, v27, &v61));
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v24);
      *(_WORD *)(v25 + 12) = 2112;
      double v60 = *(double *)&v21;
      id v28 = v21;
      sub_10010A730();
      *(void *)uint64_t v58 = v21;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s (sharedCoredataInit) LoadPersistentStores Unresolved error: %@", (uint8_t *)v25, 0x16u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    }
  }
  else
  {
    uint64_t v54 = a5;
    uint64_t v55 = v16;
    uint64_t v56 = a3;
    a4[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_persistentStoresLoadSuccess] = 1;
    id v29 = [*(id *)&a4[OBJC_IVAR____TtC21JournalShareExtension19CoreDataStackShared_container] viewContext];
    id v30 = [v29 persistentStoreCoordinator];

    if (v30)
    {
      id v31 = [v30 persistentStores];

      sub_10001CB98(0, &qword_10015B648);
      unint64_t v32 = sub_100109F30();

      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_10010AA80();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = 0;
    }
    double v57 = v12;
    uint64_t v58 = v10;
    if (qword_100158A28 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_100109960();
    sub_100007CB8(v34, (uint64_t)qword_10015B5E0);
    double v35 = a4;
    os_log_type_t v36 = sub_100109940();
    os_log_type_t v37 = sub_10010A2F0();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v59 = v9;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v61 = v53;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v52 = v39 + 4;
      sub_1000587AC((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = sub_10010AC60();
      double v60 = COERCE_DOUBLE(sub_1000C50D4(v40, v41, &v61));
      sub_10010A730();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2048;
      double v60 = *(double *)&v33;
      sub_10010A730();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s(sharedCoredataInit) persistentStoresCount:%ld", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v9 = v59;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v42 = v54;
    uint64_t v43 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v55, v56, v13);
    unint64_t v45 = v57;
    uint64_t v44 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v42, v9);
    double v46 = sub_100109940();
    os_log_type_t v47 = sub_10010A2F0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v61 = v56;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v54 = v48 + 4;
      sub_1000587AC((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v49 = sub_10010AC60();
      double v60 = COERCE_DOUBLE(sub_1000C50D4(v49, v50, &v61));
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      *(_WORD *)(v48 + 12) = 2048;
      sub_100109400();
      double v60 = -v51;
      sub_10010A730();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v59);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s (sharedCoredataInit) container.loadPersistentStores completed in %f seconds.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v9);
    }
  }
}

void sub_100058270(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id sub_10005832C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataStackShared();
  [super dealloc];
}

uint64_t sub_100058404()
{
  return type metadata accessor for CoreDataStackShared();
}

uint64_t type metadata accessor for CoreDataStackShared()
{
  uint64_t result = qword_10015B628;
  if (!qword_10015B628) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100058458()
{
  sub_1001094F0();
  if (v0 <= 0x3F)
  {
    sub_100019238();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_10005853C()
{
  uint64_t v1 = sub_1001094F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_100109460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_1000586A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1001094F0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_100109460() - 8);
  uint64_t v9 = *(unsigned char **)(v2 + v7);
  uint64_t v10 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  sub_100057984(a1, a2, v2 + v6, v9, v10);
}

uint64_t sub_100058794(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000587A4()
{
  return swift_release();
}

uint64_t sub_1000587AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000589FC()
{
  uint64_t v1 = self;
  id v2 = [v1 clearColor];
  [v0 setBackgroundColor:v2];

  [v0 setScrollEnabled:0];
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v3 = [v0 textContainer];
  [v3 setLineFragmentPadding:0.0];

  [v0 setAllowsEditingTextAttributes:0];
  id v4 = [v0 _placeholderLabel];
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 setIsAccessibilityElement:0];
  }
  if (qword_1001589F0 != -1) {
    swift_once();
  }
  NSString v6 = sub_100109CF0();
  [v0 setAccessibilityLabel:v6];

  id v7 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline compatibleWithTraitCollection:0];
  id v19 = v7;
  long long v17 = xmmword_10013FF10;
  char v18 = 0;
  sub_10004329C(&v19, (uint64_t *)&v17, &v16);

  uint64_t v8 = v16;
  id v9 = [self fontWithDescriptor:v16 size:0.0];

  [v0 setFont:v9];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v10 = [v1 labelColor];
  [v0 setTextColor:v10];

  if (qword_1001589B8 != -1) {
    swift_once();
  }
  id v11 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v12 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithString:v12 attributes:0];

  [v0 setAttributedPlaceholder:v13];
  [v0 setPasteDelegate:v0];
  sub_100004BD4(&qword_10015B760);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100122220;
  *(void *)(v14 + 32) = sub_1001099A0();
  *(void *)(v14 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v14 + 48) = sub_100109990();
  *(void *)(v14 + 56) = &protocol witness table for UITraitLegibilityWeight;
  sub_10010A640();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_100058DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    sub_10005058C();
    sub_10010A780();
    NSString v8 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for CanvasMomentsTitleView();
  [super setMarkedText:v8 selectedRange:a3];
}

id sub_100058FE0@<X0>(void *a1@<X8>)
{
  if ([v1 isFirstResponder])
  {
    a1[3] = type metadata accessor for CanvasMomentsTitleView();
    *a1 = v4;
    return v4;
  }
  else
  {
    v6.receiver = v4;
    v6.super_class = (Class)type metadata accessor for CanvasMomentsTitleView();
    if (objc_msgSendSuper2(&v6, "_accessibilityResponderElement"))
    {
      sub_10010A7B0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_100024314((uint64_t)v5, (uint64_t)v7);
    return (id)sub_100024314((uint64_t)v7, (uint64_t)a1);
  }
}

id sub_1000591EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasMomentsTitleView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasMomentsTitleView()
{
  return self;
}

uint64_t sub_100059254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100109A70();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100109AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result)
    {
      uint64_t v15 = result;
      sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
      uint64_t v21 = v7;
      swift_unknownObjectRetain();
      uint64_t v20 = sub_10010A410();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      long long v17 = (void *)swift_allocObject();
      void v17[2] = v16;
      v17[3] = v15;
      v17[4] = a4;
      _OWORD aBlock[4] = sub_1000599E8;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001DEE8;
      void aBlock[3] = &unk_100142688;
      char v18 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_release();
      sub_100109A90();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1000599F4();
      sub_100004BD4((uint64_t *)&unk_10015A5E0);
      sub_100019AF4();
      sub_10010A7D0();
      id v19 = (void *)v20;
      sub_10010A420();
      _Block_release(v18);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  return result;
}

void sub_100059558(uint64_t a1, void *a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = [a2 string];
    sub_100109D30();

    unint64_t v15 = sub_10005058C();
    sub_10010A780();
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone((Class)NSAttributedString);
    NSString v9 = sub_100109CF0();
    swift_bridgeObjectRelease();
    id v10 = [v8 initWithString:v9];

    id v11 = [v6 traitCollection];
    id v12 = v10;
    id v13 = [v6 font];
    uint64_t v14 = (void *)sub_1000CD8BC(v11, v10, v13, 0.0);

    if (v14)
    {
      [a3 setAttributedStringResult:v14];
    }
  }
}

void sub_100059798(void *a1)
{
  id v3 = [a1 itemProvider];
  sub_10001CB98(0, &qword_10015B6F0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unsigned int v5 = [v3 canLoadObjectOfClass:ObjCClassFromMetadata];

  if (v5)
  {
    id v6 = [a1 itemProvider];
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = a1;
    v11[4] = sub_100059948;
    v11[5] = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10005B840;
    v11[3] = &unk_100142610;
    id v8 = _Block_copy(v11);
    id v9 = v1;
    swift_unknownObjectRetain();
    swift_release();
    id v10 = [v6 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v8];
    _Block_release(v8);
  }
}

uint64_t sub_100059908()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100059948(uint64_t a1, uint64_t a2)
{
  return sub_100059254(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100059950(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100059960()
{
  return swift_release();
}

uint64_t sub_100059968()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000599A0()
{
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000599E8()
{
  sub_100059558(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_1000599F4()
{
  unint64_t result = qword_100159D50;
  if (!qword_100159D50)
  {
    sub_100109A70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159D50);
  }
  return result;
}

id sub_100059A54(double a1)
{
  uint64_t v2 = sub_100109070();
  uint64_t v56 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001091E0();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_type_t v47 = (char *)&v45 - v9;
  uint64_t v10 = sub_1001098B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = sub_100109960();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1001098E0();
  uint64_t v48 = *(void *)(v21 - 8);
  uint64_t v49 = v21;
  __chkstk_darwin(v21);
  os_log_type_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100158A30 != -1) {
    swift_once();
  }
  uint64_t v54 = v6;
  uint64_t v24 = sub_100007CB8(v17, (uint64_t)qword_10015B768);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v24, v17);
  sub_1001098C0();
  sub_1001098A0();
  double v46 = v23;
  uint64_t v25 = sub_1001098D0();
  os_signpost_type_t v26 = sub_10010A460();
  if (sub_10010A6E0())
  {
    uint64_t v45 = v11;
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
    v27(v14, v16, v10);
    uint64_t v29 = v2;
    id v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v30 = 0;
    os_signpost_id_t v31 = sub_100109890();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v26, v31, "LoadThumbnail", "", v30, 2u);
    uint64_t v2 = v29;
    swift_slowDealloc();

    uint64_t v32 = v45;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v28);
  }
  else
  {

    uint64_t v32 = v11;
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
  }
  v27(v14, v16, v28);
  sub_100109920();
  swift_allocObject();
  sub_100109910();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v28);
  uint64_t v33 = v51;
  uint64_t v57 = sub_100109150(1);
  uint64_t v58 = v34;
  sub_10005058C();
  sub_10010A790();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = v50;
  BOOL v38 = v47;
  uint64_t v39 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v47, v33, v54);
  if (!v36) {
    sub_100109150(1);
  }
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v38, v39);
  sub_10005B1BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v53, 1, 1, v39);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  unint64_t v41 = v52;
  sub_1001091A0();
  id v42 = sub_10007BE88(a1);
  v40(v41, v39);
  uint64_t v43 = (uint64_t)v46;
  sub_10005AA48((uint64_t)v46, (unint64_t)"LoadThumbnail", 13, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v49);
  return v42;
}

uint64_t sub_10005A0D0()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015B768);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015B768);
  if (qword_100158C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E0D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10005A198()
{
  uint64_t v0 = sub_1001091E0();
  v8[3] = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_100108F90();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BD4(&qword_10015A030);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = NSURLCreationDateKey;
  uint64_t v6 = NSURLCreationDateKey;
  sub_10002DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1001090A0();
  swift_bridgeObjectRelease();
  sub_100108F70();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_10005A630()
{
  uint64_t v1 = sub_1001091E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (NSURL *)((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (char *)((char *)&v20 - (char *)v4);
  sub_1001090F0(v4);
  uint64_t v7 = v6;
  sub_100109D30();
  NSString v8 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v23 = 0;
  unsigned int v9 = [v7 setResourceValue:v8 forKey:NSURLFileProtectionKey error:&v23];

  id v10 = v23;
  if (v9)
  {
    id v11 = v10;
  }
  else
  {
    id v21 = v23;
    id v12 = v23;
    sub_100108FC0();

    swift_willThrow();
    if (qword_100158A30 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100109960();
    sub_100007CB8(v13, (uint64_t)qword_10015B768);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v0, v1);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_100109940();
    os_log_type_t v15 = sub_10010A2C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      id v21 = (id)swift_slowAlloc();
      id v23 = v21;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_10005B1FC();
      uint64_t v17 = sub_10010AC60();
      uint64_t v22 = sub_1000C50D4(v17, v18, (uint64_t *)&v23);
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      *(_WORD *)(v16 + 12) = 2112;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v22 = v19;
      sub_10010A730();
      *uint64_t v20 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error setting file protection for %s %@", (uint8_t *)v16, 0x16u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10005AA48(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_1001098F0();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1001098B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  os_log_type_t v15 = sub_1001098D0();
  sub_100109900();
  int v24 = sub_10010A450();
  if ((sub_10010A6E0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_1000FA8A0();
LABEL_10:
  swift_retain();
  sub_100109930();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v20 = 0;
  os_signpost_id_t v21 = sub_100109890();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

void sub_10005AD60(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001094F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109070();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001091E0();
  uint64_t v28 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100158A68 != -1) {
    swift_once();
  }
  uint64_t v27 = v10;
  if (qword_10016DEA8)
  {
    sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
    sub_10005058C();
    sub_1001091B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  }
  else
  {
    sub_1001090E0();
  }
  sub_1001094E0();
  uint64_t v13 = (void *)sub_100109470();
  os_log_type_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v29[0] = v13;
  v29[1] = v15;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.notDirectory(_:), v6);
  sub_10005058C();
  sub_100109170();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = sub_100109080();
  sub_100109100(v30);
  swift_bridgeObjectRelease();
  id v16 = [self defaultManager];
  sub_1001090F0(v17);
  uint64_t v19 = v18;
  sub_1001090F0(v20);
  uint64_t v22 = v21;
  v29[0] = 0;
  unsigned __int8 v23 = [v16 copyItemAtURL:v19 toURL:v21 error:v29];

  if (v23)
  {
    id v24 = v29[0];
    sub_10005A630();
  }
  else
  {
    id v25 = v29[0];
    sub_100108FC0();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a1, v27);
  }
}

unint64_t sub_10005B1BC()
{
  unint64_t result = qword_100159D80;
  if (!qword_100159D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100159D80);
  }
  return result;
}

unint64_t sub_10005B1FC()
{
  unint64_t result = qword_10015B638;
  if (!qword_10015B638)
  {
    sub_1001091E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B638);
  }
  return result;
}

id sub_10005B284()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudKitStackShared();
  [super dealloc];
}

uint64_t type metadata accessor for CloudKitStackShared()
{
  return self;
}

void *sub_10005B360()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10005B36C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CloudKitStackShared();
  uint64_t result = sub_1001099C0();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for JournalFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JournalFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005B504);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalFeatureFlags()
{
  return &type metadata for JournalFeatureFlags;
}

unint64_t sub_10005B540()
{
  unint64_t result = qword_10015B7D0;
  if (!qword_10015B7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B7D0);
  }
  return result;
}

const char *sub_10005B594(char a1)
{
  unint64_t result = "EntrySearch";
  switch(a1)
  {
    case 1:
      unint64_t result = "Insights";
      break;
    case 2:
      unint64_t result = "ShowDateSections";
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = "RichText";
      break;
    case 5:
      unint64_t result = "Chamomile";
      break;
    case 6:
      unint64_t result = "Sorting";
      break;
    case 7:
      unint64_t result = "IntelligentToolbox";
      break;
    case 8:
      unint64_t result = "MindfulMinutes";
      break;
    case 9:
      unint64_t result = "Export";
      break;
    case 10:
      unint64_t result = "AudioTranscription";
      break;
    case 11:
      unint64_t result = "AppStoreRatingPrompt";
      break;
    case 12:
      unint64_t result = "InsightsMentionedWords";
      break;
    case 13:
      unint64_t result = "ThirdPartyMedia";
      break;
    default:
      unint64_t result = "Debug";
      break;
  }
  return result;
}

const char *sub_10005B6F4()
{
  return "Journal";
}

const char *sub_10005B708()
{
  return sub_10005B594(*v0);
}

uint64_t sub_10005B728(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_100109DD0();
  return sub_100109E80();
}

uint64_t sub_10005B7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_10000B9CC((uint64_t)&v11, &qword_10015A8A0);
}

uint64_t sub_10005B840(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_10005B8C0()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015B7E0);
  sub_100007CB8(v0, (uint64_t)qword_10015B7E0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

void sub_10005B9C4()
{
  id v0 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v1 = [v0 fontDescriptorWithSymbolicTraits:0x8000];

  if (v1)
  {
    id v2 = [self fontWithDescriptor:v1 size:0.0];
  }
  else
  {
    id v2 = 0;
  }
  qword_10015B7F8 = (uint64_t)v2;
}

id sub_10005BA78()
{
  id result = [self labelColor];
  qword_10015B800 = (uint64_t)result;
  return result;
}

void sub_10005BAB4(id a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView;
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView];
  if (v5)
  {
    if (a1)
    {
      sub_10001CB98(0, (unint64_t *)&qword_10015A018);
      id v6 = a1;
      id v7 = v5;
      char v8 = sub_10010A6A0();

      if (v8) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  [a1 removeFromSuperview];
  uint64_t v9 = *(void **)&v2[v4];
  if (v9)
  {
    id v10 = v9;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v2 addSubview:v10];
    long long v11 = self;
    sub_100004BD4(qword_100159E08);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100123770;
    id v13 = [v10 topAnchor];
    id v14 = [v2 contentLayoutGuide];
    id v15 = [v14 topAnchor];

    id v16 = [v13 constraintEqualToAnchor:v15];
    *(void *)(v12 + 32) = v16;
    id v17 = [v10 leadingAnchor];
    id v18 = [v2 frameLayoutGuide];
    id v19 = [v18 leadingAnchor];

    id v20 = [v17 constraintEqualToAnchor:v19];
    *(void *)(v12 + 40) = v20;
    id v21 = [v10 trailingAnchor];
    id v22 = [v2 frameLayoutGuide];
    id v23 = [v22 trailingAnchor];

    id v24 = [v21 constraintEqualToAnchor:v23];
    *(void *)(v12 + 48) = v24;
    sub_100109F50();
    sub_10001CB98(0, (unint64_t *)&qword_100159E00);
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    [v11 activateConstraints:isa];
  }
}

id sub_10005BDD0(void *a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor] = 0;
  v5[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_isShowingFormattingController] = 0;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_journalEntry] = 0;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_blockQuoteLayerView;
  type metadata accessor for BlockQuoteLayerView();
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v13 = v5;
  *(void *)&v5[v11] = [v12 init];
  v13[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_removeListsNextClear] = 0;

  v24.receiver = v13;
  v24.super_class = (Class)type metadata accessor for CanvasTextView();
  id v14 = [super initWithFrame:a1 textContainer:a2];
  [v14 setPasteDelegate:v14];
  id v15 = self;
  id v16 = v14;
  id v17 = [v15 clearColor];
  [v16 setBackgroundColor:v17];

  sub_10005C330();
  uint64_t v18 = qword_1001589E8;
  id v19 = v16;
  if (v18 != -1) {
    swift_once();
  }
  NSString v20 = sub_100109CF0();
  [v19 setAccessibilityLabel:v20];

  sub_100004BD4(&qword_10015B760);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100122220;
  *(void *)(v21 + 32) = sub_1001099A0();
  *(void *)(v21 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v21 + 48) = sub_100109990();
  *(void *)(v21 + 56) = &protocol witness table for UITraitLegibilityWeight;
  id v22 = v19;
  sub_10010A640();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v22;
}

id sub_10005C0F4()
{
  if ([v0 isScrollEnabled]) {
    goto LABEL_6;
  }
  id result = [v0 text];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v2 = result;
  uint64_t v3 = sub_100109D30();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6) {
    goto LABEL_6;
  }
  id v7 = [v0 attributedPlaceholder];

  if (!v7
    || ([v0 _preferredMaxLayoutWidth],
        double v9 = v8,
        [v0 textContainerInset],
        double v11 = v9 - v10,
        [v0 textContainerInset],
        double v13 = v11 - v12,
        v13 <= 0.0))
  {
LABEL_6:
    v15.receiver = v0;
    v15.super_class = (Class)type metadata accessor for CanvasTextView();
    return [super intrinsicContentSize];
  }
  id result = [v0 _placeholderLabel];
  if (result)
  {
    id v14 = result;
    [result sizeThatFits:v13];

    [v0 textContainerInset];
    return [v0 textContainerInset];
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_10005C330()
{
  id v1 = v0;
  [v0 setDataDetectorTypes:-1];
  if (qword_100158A40 != -1) {
    swift_once();
  }
  [v0 setFont:qword_10015B7F8];
  if (qword_100158A48 != -1) {
    swift_once();
  }
  [v0 setTextColor:qword_10015B800];
  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setSupportsAdaptiveImageGlyph:0];
  [v0 setAllowsEditingTextAttributes:1];
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v2 = [v0 textContainer];
  [v2 setLineFragmentPadding:0.0];

  id v3 = [v1 textDropInteraction];
  if (v3)
  {
    unint64_t v4 = v3;
    [v1 removeInteraction:v3];
  }
  id v5 = [v1 textLayoutManager];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 textContentManager];

    if (v7)
    {
      self;
      double v8 = (void *)swift_dynamicCastObjCClass();
      if (v8) {
        [v8 setDelegate:v1];
      }
    }
  }
  id v9 = objc_allocWithZone((Class)NSMutableParagraphStyle);
  double v10 = NSParagraphStyleAttributeName;
  id v11 = [v9 init];
  [v11 setParagraphSpacingBefore:8.0];
  sub_1000DB240();
  uint64_t v19 = sub_10001CB98(0, &qword_10015B8F0);
  *(void *)&long long v18 = v11;
  id v12 = [v1 typingAttributes];
  type metadata accessor for Key(0);
  sub_100066270(&qword_1001591F0, type metadata accessor for Key);
  uint64_t v13 = sub_100109B70();

  uint64_t v17 = v13;
  if (v19)
  {
    sub_10002426C(&v18, v16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000FEF90(v16, v10, isUniquelyReferenced_nonNull_native);
    uint64_t v17 = v13;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000B9CC((uint64_t)&v18, &qword_10015A8A0);
    sub_1000CCFEC((uint64_t)v10, v16);

    sub_10000B9CC((uint64_t)v16, &qword_10015A8A0);
  }
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  [v1 setTypingAttributes:isa];

  sub_10005C708();
}

void sub_10005C708()
{
  id v1 = [v0 textLayoutManager];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 textViewportLayoutController];

    if (v3)
    {
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      void v8[4] = sub_1000666DC;
      v8[5] = v4;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      v8[2] = sub_10005C930;
      v8[3] = &unk_100142DA8;
      id v5 = _Block_copy(v8);
      swift_release();
      [v3 setRenderingSurfaceUpdater:v5];
      _Block_release(v5);
      uint64_t v6 = _UITextViewportLayoutControllerDidLayoutNotification;
      id v7 = [self defaultCenter];
      [v7 addObserver:v0 selector:"viewportDidLayout" name:v6 object:v3];
    }
  }
}

void sub_10005C878(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_blockQuoteLayerView);
    NSString v5 = sub_100109CF0();
    [a1 addRenderingSurface:v4 key:v5 group:1 placement:0];
  }
}

void sub_10005C930(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13 = *(void (**)(id, id, double, double, double, double))(a1 + 32);
  swift_retain();
  id v15 = a2;
  id v14 = a3;
  v13(v15, v14, a4, a5, a6, a7);
  swift_release();
}

void sub_10005C9E4()
{
  id v1 = v0;
  id v2 = [v0 attributedText];
  if (!v2) {
    return;
  }
  id v69 = v2;
  [v0 frame];
  CGFloat x = CGRectZero.origin.x;
  double y = CGRectZero.origin.y;
  CGFloat width = CGRectZero.size.width;
  v77.origin.CGFloat x = CGRectZero.origin.x;
  v77.origin.double y = y;
  v77.size.CGFloat width = width;
  v77.size.CGFloat height = CGRectZero.size.height;
  if (CGRectEqualToRect(v76, v77)
    || (id v6 = [v0 textLayoutManager]) == 0)
  {
    uint64_t v39 = v69;
LABEL_19:

    return;
  }
  id v68 = v6;
  id v7 = [v0 textLayoutManager];
  if (!v7
    || (double v8 = v7,
        id v9 = [v7 textViewportLayoutController],
        v8,
        id v10 = [v9 viewportRange],
        v9,
        !v10))
  {

    uint64_t v39 = v68;
    goto LABEL_19;
  }
  id v11 = v10;
  id v12 = [v68 documentRange];
  id v13 = [v12 location];

  id v14 = [v68 offsetFromLocation:v13 toLocation:[v11 location]];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v15 = [v68 documentRange];
  id v16 = [v15 location];

  uint64_t v17 = [v68 offsetFromLocation:v16 toLocation:[v11 endLocation]];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  int64_t v18 = v17 - v14;
  if (__OFSUB__(v17, v14))
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }

  uint64_t v19 = *(char **)&v1[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_blockQuoteLayerView];
  NSString v20 = &v19[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_quoteAreas];
  swift_beginAccess();
  *(void *)NSString v20 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  [v1 textContainerInset];
  *(void *)&v19[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_barInset] = v21;
  id v22 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView];
  if (v22)
  {
    [v22 frame];
    *(void *)&v19[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_topInset] = v23;
  }
  id v24 = [v1 _placeholderLabel];
  if (v24)
  {
    id v25 = v24;
    [v24 setAlpha:1.0];
  }
  if ((uint64_t)[v69 length] < (uint64_t)v17)
  {
    uint64_t v26 = [v69 length];
    int64_t v18 = v26 - v14;
    if (__OFSUB__(v26, v14)) {
      goto LABEL_49;
    }
  }
  id v27 = [v1 textStorage];
  id v28 = [v27 length];

  if (v28)
  {
    id v29 = [v1 textStorage];
    id v30 = [v29 string];

    if (!v30)
    {
LABEL_51:
      __break(1u);
      return;
    }
    id v31 = [v1 textStorage];
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    _OWORD v33[3] = v30;
    v33[4] = v69;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_100066608;
    *(void *)(v34 + 24) = v33;
    uint64_t v73 = sub_1000666E8;
    uint64_t v74 = v34;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v72 = sub_10005B7A8;
    *((void *)&v72 + 1) = &unk_100142BA0;
    uint64_t v35 = _Block_copy(&aBlock);
    id v36 = v30;
    id v37 = v69;
    swift_retain();
    swift_release();
    [v31 enumerateAttribute:NSParagraphStyleAttributeName inRange:v14 options:v18 usingBlock:0];

    _Block_release(v35);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      [v19 setNeedsDisplay];
      swift_release();

      return;
    }
    goto LABEL_48;
  }
  id v40 = [v1 selectedTextRange];
  if (v40)
  {
    unint64_t v41 = v40;
    id v42 = [v40 start];

    if (v42)
    {
      id v68 = v19;
      uint64_t v43 = NSParagraphStyleAttributeName;
      id v44 = [v1 typingAttributes];
      type metadata accessor for Key(0);
      sub_100066270(&qword_1001591F0, type metadata accessor for Key);
      uint64_t v45 = sub_100109B70();

      if (*(void *)(v45 + 16) && (uint64_t v46 = sub_1000FCC0C(v43), (v47 & 1) != 0))
      {
        sub_100037A20(*(void *)(v45 + 56) + 32 * v46, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v72 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v72 + 1))
      {
        sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
        if (swift_dynamicCast())
        {
          CGFloat v48 = v70.origin.x;
          id v49 = [v1 beginningOfDocument];
          id v50 = [v1 offsetFromPosition:v49 toPosition:v42];

          [*(id *)&v70.origin.x firstLineHeadIndent];
          double v52 = fmod(v51, 1.0) + -0.1;
          [*(id *)&v70.origin.x headIndent];
          if (fabs(v52) < 0.01 && fabs(fmod(v53, 1.0) + -0.1) < 0.01)
          {
            id v54 = [v1 textStorage];
            id v55 = [v54 length];

            if ((uint64_t)v55 >= (uint64_t)v50)
            {
              id v56 = [v1 textLayoutManager];
              if (v56)
              {
                uint64_t v57 = v56;
                id v58 = sub_10007FE84((uint64_t)v50, 0);
                if (v58)
                {
                  uint64_t v59 = v58;
                  CGSize size = CGRectNull.size;
                  v70.origin = CGRectNull.origin;
                  v70.CGSize size = size;
                  uint64_t v61 = swift_allocObject();
                  *(void *)(v61 + 16) = &v70;
                  uint64_t v62 = swift_allocObject();
                  *(void *)(v62 + 16) = sub_100066634;
                  *(void *)(v62 + 24) = v61;
                  uint64_t v73 = sub_10006664C;
                  uint64_t v74 = v62;
                  *(void *)&long long aBlock = _NSConcreteStackBlock;
                  *((void *)&aBlock + 1) = 1107296256;
                  *(void *)&long long v72 = sub_100064B50;
                  *((void *)&v72 + 1) = &unk_100142C18;
                  unint64_t v63 = _Block_copy(&aBlock);
                  swift_retain();
                  swift_release();
                  [v57 enumerateTextSegmentsInRange:v59 type:0 options:0 usingBlock:v63];
                  _Block_release(v63);
                  LOBYTE(v63) = swift_isEscapingClosureAtFileLocation();
                  swift_release();
                  if (v63)
                  {
LABEL_50:
                    __break(1u);
                    goto LABEL_51;
                  }
                  if (!CGRectIsNull(v70))
                  {
                    double y = v70.origin.y;
                    CGFloat x = v70.origin.x;
                    CGFloat width = v70.size.width;
                  }

                  swift_release();
                }
                else
                {

                  CGFloat x = 0.0;
                  double y = 0.0;
                  CGFloat width = 0.0;
                }
              }
            }
            double v64 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
            id v65 = v64;
            sub_1000E6514(v64, x, y, width);

            id v66 = [v1 _placeholderLabel];
            if (v66)
            {
              id v67 = v66;
              [v67 setAlpha:0.0];
            }
          }
        }
        else
        {
        }
      }
      else
      {

        sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
      }
    }
  }
  [v19 setNeedsDisplay:v68];
}

void sub_10005D448()
{
  id v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for CanvasTextView();
  [super deleteBackward];
  id v2 = [v0 textStorage];
  uint64_t v3 = (uint64_t)[v2 length];

  if (v3 < 1)
  {
    id v24 = NSParagraphStyleAttributeName;
    id v25 = [v1 typingAttributes];
    type metadata accessor for Key(0);
    sub_100066270(&qword_1001591F0, type metadata accessor for Key);
    uint64_t v26 = sub_100109B70();

    if (*(void *)(v26 + 16) && (uint64_t v27 = sub_1000FCC0C(v24), (v28 & 1) != 0))
    {
      sub_100037A20(*(void *)(v26 + 56) + 32 * v27, (uint64_t)&v33);
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
    }

    swift_bridgeObjectRelease();
    if (!*((void *)&v34 + 1))
    {
      sub_10000B9CC((uint64_t)&v33, &qword_10015A8A0);
      return;
    }
    sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
    if ((swift_dynamicCast() & 1) == 0) {
      return;
    }
    id v10 = v32;
    id v29 = [v32 textLists];
    sub_10001CB98(0, &qword_10015B8E8);
    unint64_t v30 = sub_100109F30();

    if (!(v30 >> 62))
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
      swift_bridgeObjectRelease();
      if (v31 >= 1) {
        sub_10005DC14(0);
      }

      return;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10010AA80();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  id v4 = [v1 textStorage];
  id v5 = [v4 string];

  if (!v5)
  {
    __break(1u);
    goto LABEL_29;
  }
  id v6 = [v1 selectedRange];
  [v5 paragraphRangeForRange:v6, v7];
  id v10 = v9;

  if (__OFADD__(v8, v10))
  {
    __break(1u);
    goto LABEL_27;
  }
  id v11 = [v1 textStorage];
  id v12 = (char *)[v11 length];

  if ((uint64_t)v12 >= (uint64_t)&v10[(void)v8])
  {
    if (!v10)
    {
LABEL_12:
      sub_10005DC14(1);
      return;
    }
    if (v10 == (char *)1)
    {
      id v13 = [v1 textStorage];
      id v14 = [v13 attributedSubstringFromRange:v8, 1];

      id v15 = [v14 string];
      uint64_t v16 = sub_100109D30();
      unint64_t v18 = v17;

      unint64_t v19 = sub_10005B728(v16, v18);
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (v21)
      {
        unint64_t v22 = sub_10006514C(v19, v21);
        if ((v22 & 0x100000000) == 0)
        {
          int v23 = v22;
          swift_bridgeObjectRelease();
          if ((v23 - 14) > 0xFFFFFFFB || (v23 - 8232) < 2 || v23 == 133) {
            goto LABEL_12;
          }
          return;
        }
LABEL_29:
        __break(1u);
      }
    }
  }
}

void sub_10005D880()
{
  id v1 = [v0 textStorage];
  id v2 = [v1 string];

  sub_100109D30();
  uint64_t v3 = sub_100109DC0();
  swift_bridgeObjectRelease();
  if (v3 >= 1)
  {
    id v4 = [v0 textStorage];
    id v5 = [v4 string];

    uint64_t v6 = sub_100109D30();
    unint64_t v8 = v7;

    uint64_t v9 = sub_10005B728(v6, v8);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      if (v9 == 10 && v11 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v12 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          return;
        }
      }
      uint64_t v13 = sub_100109DC0();
      id v14 = [v0 textStorage];
      id v15 = [v0 typingAttributes];
      type metadata accessor for Key(0);
      sub_100066270(&qword_1001591F0, type metadata accessor for Key);
      sub_100109B70();

      Class isa = sub_100109B60().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v0 selectedRange];
      [v14 setAttributes:isa range:v17 v18];

      id v19 = [v0 textStorage];
      id v20 = [v0 typingAttributes];
      sub_100109B70();

      Class v23 = sub_100109B60().super.isa;
      swift_bridgeObjectRelease();
      id v21 = [v0 textStorage];
      unint64_t v22 = (char *)[v21 length];

      if (__OFSUB__(v22, v13))
      {
        __break(1u);
      }
      else
      {
        [v19 setAttributes:v23 range:&v22[-v13] length:v13];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10005DC14(int a1)
{
  id v2 = v1;
  LODWORD(v68) = a1;
  uint64_t v3 = sub_100108DD0();
  uint64_t v67 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
  *(void *)&v1[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor] = 0;

  id v7 = [v1 textStorage];
  id v8 = [v7 string];

  if (!v8)
  {
    __break(1u);
    return;
  }
  id v9 = [v2 selectedRange];
  id v69 = [v8 paragraphRangeForRange:v9, v10];
  uint64_t v70 = v11;
  id v12 = [v8 substringWithRange:];
  uint64_t v13 = sub_100109D30();
  uint64_t v15 = v14;

  uint64_t v16 = NSParagraphStyleAttributeName;
  id v17 = [v2 typingAttributes];
  type metadata accessor for Key(0);
  uint64_t v19 = v18;
  sub_100066270(&qword_1001591F0, type metadata accessor for Key);
  uint64_t v71 = v19;
  uint64_t v20 = sub_100109B70();

  if (!*(void *)(v20 + 16) || (uint64_t v21 = sub_1000FCC0C(v16), (v22 & 1) == 0))
  {
    long long v76 = 0u;
    long long v75 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_100037A20(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v75);

  swift_bridgeObjectRelease();
  if (!*((void *)&v76 + 1))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10000B9CC((uint64_t)&v75, &qword_10015A8A0);
    goto LABEL_16;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  id v66 = *(id *)&v73[0];
  [*(id *)&v73[0] mutableCopy];
  sub_10010A7B0();
  swift_unknownObjectRelease();
  uint64_t v23 = sub_10001CB98(0, &qword_10015B8F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  uint64_t v65 = v23;
  id v24 = v66;
  id v64 = *(id *)&v73[0];
  id v25 = &unk_10015B000;
  if ((v68 & 1) == 0
    || (*((unsigned char *)v2 + OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_removeListsNextClear) & 1) != 0
    || v70 != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = v24;
LABEL_38:
    *((unsigned char *)v2 + v25[262]) = 0;
    uint64_t v34 = v65;
    id v32 = v64;
    goto LABEL_39;
  }
  uint64_t v68 = OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_removeListsNextClear;
  *(void *)&long long v75 = v13;
  *((void *)&v75 + 1) = v15;
  sub_100108DB0();
  sub_10005058C();
  uint64_t v26 = sub_10010A760();
  unint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v28) & 0xF;
  uint64_t v30 = v26 & 0xFFFFFFFFFFFFLL;
  id v25 = (void *)&unk_10015B000;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = v30;
  }
  uint64_t v31 = v24;
  if (!v29) {
    goto LABEL_38;
  }
  id v32 = v64;
  id v33 = [v64 textLists];
  sub_10001CB98(0, &qword_10015B8E8);
  sub_100109F30();

  *((unsigned char *)v2 + v68) = 1;
  uint64_t v34 = v65;
LABEL_39:
  sub_10001CB98(0, &qword_10015B8E8);
  Class isa = sub_100109F20().super.isa;
  [v32 setTextLists:isa];

  [v32 setFirstLineHeadIndent:0.0];
  [v32 setHeadIndent:0.0];
  *((void *)&v76 + 1) = v34;
  *(void *)&long long v75 = v32;
  uint64_t v57 = v16;
  id v58 = v32;
  id v59 = [v2 typingAttributes];
  uint64_t v60 = sub_100109B70();

  uint64_t v74 = v60;
  if (*((void *)&v76 + 1))
  {
    sub_10002426C(&v75, v73);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v72 = v60;
    sub_1000FEF90(v73, v57, isUniquelyReferenced_nonNull_native);
    uint64_t v74 = v72;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000B9CC((uint64_t)&v75, &qword_10015A8A0);
    sub_1000CCFEC((uint64_t)v57, v73);

    sub_10000B9CC((uint64_t)v73, &qword_10015A8A0);
  }
  Class v62 = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  [v2 setTypingAttributes:v62];

LABEL_16:
  objc_super v35 = NSForegroundColorAttributeName;
  id v36 = [v2 typingAttributes];
  uint64_t v37 = sub_100109B70();

  if (*(void *)(v37 + 16) && (uint64_t v38 = sub_1000FCC0C(v35), (v39 & 1) != 0))
  {
    sub_100037A20(*(void *)(v37 + 56) + 32 * v38, (uint64_t)&v75);
  }
  else
  {
    long long v76 = 0u;
    long long v75 = 0u;
  }

  swift_bridgeObjectRelease();
  if (*((void *)&v76 + 1))
  {
    uint64_t v40 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
    if (swift_dynamicCast())
    {
      unint64_t v41 = *(void **)&v73[0];
      sub_10001CB98(0, &qword_10015A8C0);
      if (qword_100158938 != -1) {
        swift_once();
      }
      if (sub_10010A6A0())
      {
        uint64_t v42 = qword_100158A48;
        uint64_t v43 = v35;
        if (v42 != -1) {
          swift_once();
        }
        *((void *)&v76 + 1) = v40;
        *(void *)&long long v75 = qword_10015B800;
        id v44 = (id)qword_10015B800;
        id v45 = [v2 typingAttributes];
        uint64_t v46 = sub_100109B70();

        uint64_t v74 = v46;
        if (*((void *)&v76 + 1))
        {
          sub_10002426C(&v75, v73);
          char v47 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = v46;
          sub_1000FEF90(v73, v43, v47);
          uint64_t v74 = v72;

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10000B9CC((uint64_t)&v75, &qword_10015A8A0);
          sub_1000CCFEC((uint64_t)v43, v73);

          sub_10000B9CC((uint64_t)v73, &qword_10015A8A0);
        }
        Class v48 = sub_100109B60().super.isa;
        swift_bridgeObjectRelease();
        [v2 setTypingAttributes:v48];
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10000B9CC((uint64_t)&v75, &qword_10015A8A0);
  }
  id v49 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v49 setParagraphSpacingBefore:8.0];
  sub_1000DB240();
  sub_10001CB98(0, &qword_10015B8E8);
  Class v50 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v49 setTextLists:v50];

  sub_100004BD4(&qword_10015B8D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 64) = sub_10001CB98(0, &qword_10015B8F0);
  *(void *)(inited + 40) = v49;
  double v52 = v16;
  id v53 = v49;
  sub_10007BE60(inited);
  id v54 = [v2 textStorage];
  Class v55 = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  [v54 addAttributes:v55 range:v69];
}

double sub_10005E754()
{
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for CanvasTextView();
  [super accessibilityFrame];
  double v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  id v9 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView];
  if (v9)
  {
    [v9 accessibilityFrame];
    v27.origin.CGFloat x = v2;
    v27.origin.CGFloat y = v4;
    v27.size.CGFloat width = v6;
    v27.size.CGFloat height = v8;
    CGRect v23 = CGRectIntersection(v22, v27);
    CGFloat x = v23.origin.x;
    CGFloat y = v23.origin.y;
    CGFloat width = v23.size.width;
    CGFloat height = v23.size.height;
    if (!CGRectIsNull(v23))
    {
      *(double *)rect = v2;
      v24.origin.CGFloat x = x;
      v24.origin.CGFloat y = y;
      v24.size.CGFloat width = width;
      v24.size.CGFloat height = height;
      double v14 = CGRectGetHeight(v24);
      if (qword_100158988 != -1)
      {
        double v18 = v14;
        swift_once();
        double v14 = v18;
      }
      double v15 = *(double *)&qword_10016DD80;
      if (*(double *)&qword_10016DD80 >= v14)
      {
        return *(double *)rect;
      }
      else
      {
        v25.origin.CGFloat x = x;
        v25.origin.CGFloat y = y;
        v25.size.CGFloat width = width;
        v25.size.CGFloat height = height;
        CGFloat v16 = CGRectGetHeight(v25) - v15;
        memset(&slice, 0, sizeof(slice));
        memset(&rect[1], 0, 32);
        *(void *)&v26.origin.CGFloat x = rect[0];
        v26.origin.CGFloat y = v4;
        v26.size.CGFloat width = v6;
        v26.size.CGFloat height = v8;
        CGRectDivide(v26, &slice, (CGRect *)&rect[1], v16, CGRectMinYEdge);
        return *(double *)&rect[1];
      }
    }
  }
  return v2;
}

id sub_10005E964(uint64_t a1, uint64_t a2)
{
  if (sub_100109640())
  {
    unsigned int v5 = [v2 isEditing];
    sub_1000248D8(a2, (uint64_t)v35, &qword_10015A8A0);
    if (v5)
    {
      sub_1000248D8((uint64_t)v35, (uint64_t)v31, &qword_10015A8A0);
      uint64_t v6 = v32;
      if (v32)
      {
        double v7 = sub_10000B718(v31, v32);
        uint64_t v8 = *(void *)(v6 - 8);
        __chkstk_darwin(v7);
        uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v8 + 16))(v10);
        uint64_t v11 = sub_10010AC90();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
        sub_10000B7B0((uint64_t)v31);
      }
      else
      {
        uint64_t v11 = 0;
      }
      CGRect v25 = (objc_class *)type metadata accessor for CanvasTextView();
      v30.receiver = v2;
      v30.super_class = v25;
      [super canPerformAction:a1 withSender:v11];
      swift_unknownObjectRelease();
    }
    else
    {
      id v18 = 0;
    }
    sub_10000B9CC((uint64_t)v35, &qword_10015A8A0);
  }
  else if (sub_100109640())
  {
    sub_1000248D8(a2, (uint64_t)v35, &qword_10015A8A0);
    uint64_t v12 = v36;
    if (v36)
    {
      uint64_t v13 = sub_10000B718(v35, v36);
      uint64_t v14 = *(void *)(v12 - 8);
      __chkstk_darwin(v13);
      CGFloat v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v14 + 16))(v16);
      uint64_t v17 = sub_10010AC90();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
      sub_10000B7B0((uint64_t)v35);
    }
    else
    {
      uint64_t v17 = 0;
    }
    CGRect v26 = (objc_class *)type metadata accessor for CanvasTextView();
    v33.receiver = v2;
    v33.super_class = v26;
    [super canPerformAction:a1 withSender:v17];
    swift_unknownObjectRelease();
    if (v18)
    {
      id v27 = [self generalPasteboard];
      id v18 = [v27 hasStrings];
    }
  }
  else
  {
    sub_1000248D8(a2, (uint64_t)v35, &qword_10015A8A0);
    uint64_t v19 = v36;
    if (v36)
    {
      uint64_t v20 = sub_10000B718(v35, v36);
      uint64_t v21 = *(void *)(v19 - 8);
      __chkstk_darwin(v20);
      CGRect v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      uint64_t v24 = sub_10010AC90();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
      sub_10000B7B0((uint64_t)v35);
    }
    else
    {
      uint64_t v24 = 0;
    }
    unint64_t v28 = (objc_class *)type metadata accessor for CanvasTextView();
    v34.receiver = v2;
    v34.super_class = v28;
    [super canPerformAction:a1 withSender:v24];
    swift_unknownObjectRelease();
  }
  return v18;
}

id sub_10005EE40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasTextView();
  [super dealloc];
}

uint64_t type metadata accessor for CanvasTextView()
{
  return self;
}

void sub_10005EF04(id a1, uint64_t a2)
{
  double v3 = v2;
  uint64_t v6 = NSParagraphStyleAttributeName;
  id v7 = [v2 typingAttributes];
  type metadata accessor for Key(0);
  sub_100066270(&qword_1001591F0, type metadata accessor for Key);
  uint64_t v8 = sub_100109B70();

  if (!*(void *)(v8 + 16) || (uint64_t v9 = sub_1000FCC0C(v6), (v10 & 1) == 0))
  {
    long long v60 = 0u;
    long long v59 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_100037A20(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v59);

  swift_bridgeObjectRelease();
  if (!*((void *)&v60 + 1))
  {
LABEL_9:
    sub_10000B9CC((uint64_t)&v59, &qword_10015A8A0);
    return;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v11 = *(void **)&v57[0];
  id v12 = [v3 textStorage];
  id v13 = [v12 length];

  if (v13 == a1 && !a2)
  {
    id v14 = [v3 textStorage];
    [v14 beginEditing];

    id v15 = [v3 textStorage];
    id v16 = [v3 typingAttributes];
    sub_100109B70();

    id v17 = objc_allocWithZone((Class)NSAttributedString);
    NSString v18 = sub_100109CF0();
    Class isa = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    id v20 = [v17 initWithString:v18 attributes:isa];

    [v15 appendAttributedString:v20];
    id v21 = [v3 textStorage];
    [v21 endEditing];

    return;
  }
  [*(id *)&v57[0] firstLineHeadIndent];
  double v23 = fmod(v22, 1.0) + -0.1;
  [*(id *)&v57[0] headIndent];
  if (fabs(v23) >= 0.01 || fabs(fmod(v24, 1.0) + -0.1) >= 0.01) {
    goto LABEL_33;
  }
  CGRect v25 = NSForegroundColorAttributeName;
  id v26 = [v3 typingAttributes];
  uint64_t v27 = sub_100109B70();

  if (*(void *)(v27 + 16) && (uint64_t v28 = sub_1000FCC0C(v25), (v29 & 1) != 0))
  {
    sub_100037A20(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v59);
  }
  else
  {
    long long v60 = 0u;
    long long v59 = 0u;
  }

  swift_bridgeObjectRelease();
  if (*((void *)&v60 + 1))
  {
    sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
    if (swift_dynamicCast())
    {
      objc_super v30 = *(void **)&v57[0];
      goto LABEL_22;
    }
  }
  else
  {
    sub_10000B9CC((uint64_t)&v59, &qword_10015A8A0);
  }
  objc_super v30 = 0;
LABEL_22:
  if (qword_100158A48 == -1)
  {
    if (v30) {
      goto LABEL_24;
    }
LABEL_33:

    return;
  }
  swift_once();
  if (!v30) {
    goto LABEL_33;
  }
LABEL_24:
  uint64_t v31 = (void *)qword_10015B800;
  uint64_t v32 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
  id v33 = v31;
  id v34 = v30;
  char v35 = sub_10010A6A0();

  if ((v35 & 1) == 0) {
    goto LABEL_33;
  }
  id v36 = [v3 textStorage];
  id v37 = [v36 string];

  if (v37)
  {
    id v38 = [v3 selectedRange];
    id v40 = [v37 paragraphRangeForRange:v38, v39];
    uint64_t v55 = v41;
    id v56 = v40;

    uint64_t v42 = qword_100158938;
    uint64_t v43 = v25;
    if (v42 != -1) {
      swift_once();
    }
    *((void *)&v60 + 1) = v32;
    *(void *)&long long v59 = qword_10016DD30;
    id v44 = (id)qword_10016DD30;
    id v45 = [v3 typingAttributes];
    uint64_t v46 = sub_100109B70();

    uint64_t v58 = v46;
    if (*((void *)&v60 + 1))
    {
      sub_10002426C(&v59, v57);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1000FEF90(v57, v43, isUniquelyReferenced_nonNull_native);
      uint64_t v58 = v46;

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B9CC((uint64_t)&v59, &qword_10015A8A0);
      sub_1000CCFEC((uint64_t)v43, v57);

      sub_10000B9CC((uint64_t)v57, &qword_10015A8A0);
    }
    Class v48 = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    [v3 setTypingAttributes:v48];

    id v49 = [v3 textStorage];
    sub_100004BD4(&qword_10015B8D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100122230;
    long double v51 = (void *)qword_10016DD30;
    *(void *)(inited + 64) = v32;
    *(void *)(inited + 32) = v43;
    *(void *)(inited + 40) = v51;
    double v52 = v43;
    id v53 = v51;
    sub_10007BE60(inited);
    Class v54 = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    [v49 addAttributes:v54 range:v56];
  }
  else
  {
    __break(1u);
  }
}

void sub_10005F644(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (char *)Strong;
    sub_1000248D8(a1, (uint64_t)&aBlock, &qword_10015A8A0);
    if (*((void *)&v135 + 1))
    {
      CGFloat v14 = COERCE_DOUBLE(sub_10001CB98(0, (unint64_t *)&unk_10015B8C8));
      if (swift_dynamicCast())
      {
        [*(id *)&v133.origin.x firstLineHeadIndent];
        double v16 = fmod(v15, 1.0) + -0.1;
        [*(id *)&v133.origin.x headIndent];
        if (fabs(v16) < 0.01 && fabs(fmod(v17, 1.0) + -0.1) < 0.01)
        {
          CGFloat x = v133.origin.x;
          v132[0] = a2;
          v132[1] = (id)a3;
          id v18 = [v13 textStorage];
          id v19 = [v18 attributesAtIndex:a2 effectiveRange:v132];

          type metadata accessor for Key(0);
          sub_100066270(&qword_1001591F0, type metadata accessor for Key);
          uint64_t v20 = sub_100109B70();

          id v21 = sub_10006569C(v20);
          swift_bridgeObjectRelease();
          long double v22 = &a2[a3];
          id v23 = [v13 textStorage];
          long double v24 = &selRef_layoutAttributesForCellWithIndexPath_;
          CGRect v25 = (char *)[v23 length];

          if ((uint64_t)v25 < (uint64_t)&a2[a3]
            || (id v26 = [v13 textLayoutManager]) == 0)
          {
            double v33 = CGRectZero.origin.x;
            double y = CGRectZero.origin.y;
            double width = CGRectZero.size.width;
            double height = CGRectZero.size.height;
            if (!__OFADD__(a2, a3)) {
              goto LABEL_41;
            }
LABEL_114:
            __break(1u);
            goto LABEL_115;
          }
          uint64_t v27 = v26;
          id v23 = v26;
          id v126 = sub_10007FE84((uint64_t)a2, a3);
          if (!v126)
          {

            double v33 = 0.0;
            double y = 0.0;
            double width = 0.0;
            double height = 0.0;
            goto LABEL_112;
          }
          uint64_t v125 = &a2[a3];
          uint64_t v128 = v21;
          CGSize size = CGRectNull.size;
          v133.origin = CGRectNull.origin;
          v133.CGSize size = size;
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = &v133;
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_1000666E4;
          *(void *)(v30 + 24) = v29;
          uint64_t v136 = sub_100066764;
          uint64_t v137 = v30;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v135 = sub_100064B50;
          *((void *)&v135 + 1) = &unk_100142D80;
          uint64_t v31 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          id v23 = v27;
          [v27 enumerateTextSegmentsInRange:v126 type:0 options:0 usingBlock:v31];
          _Block_release(v31);
          LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v31 & 1) == 0)
          {
            BOOL IsNull = CGRectIsNull(v133);
            if (IsNull) {
              double v33 = CGRectZero.origin.x;
            }
            else {
              double v33 = v133.origin.x;
            }
            if (IsNull) {
              double y = CGRectZero.origin.y;
            }
            else {
              double y = v133.origin.y;
            }
            if (IsNull) {
              double width = CGRectZero.size.width;
            }
            else {
              double width = v133.size.width;
            }
            if (IsNull) {
              double height = CGRectZero.size.height;
            }
            else {
              double height = v133.size.height;
            }

            swift_release();
            id v21 = v128;
            long double v22 = &a2[a3];
LABEL_112:
            long double v24 = &selRef_layoutAttributesForCellWithIndexPath_;
            if (!__OFADD__(a2, a3))
            {
LABEL_41:
              if (v22 == objc_msgSend(v13, "selectedRange", v125))
              {
                uint64_t v130 = v21;
                uint64_t v55 = NSParagraphStyleAttributeName;
                id v56 = [v13 typingAttributes];
                uint64_t v57 = sub_100109B70();

                if (*(void *)(v57 + 16) && (uint64_t v58 = sub_1000FCC0C(v55), (v59 & 1) != 0))
                {
                  sub_100037A20(*(void *)(v57 + 56) + 32 * v58, (uint64_t)&aBlock);
                }
                else
                {
                  long long aBlock = 0u;
                  long long v135 = 0u;
                }
                id v21 = v130;

                swift_bridgeObjectRelease();
                if (*((void *)&v135 + 1))
                {
                  if (swift_dynamicCast())
                  {
                    CGFloat v60 = v133.origin.x;
                    [*(id *)&v133.origin.x firstLineHeadIndent];
                    double v62 = fmod(v61, 1.0) + -0.1;
                    [*(id *)&v60 headIndent];
                    if (fabs(v62) >= 0.01) {
                      goto LABEL_118;
                    }
                    if (fabs(fmod(v63, 1.0) + -0.1) >= 0.01) {
                      goto LABEL_118;
                    }
                    id v64 = [a6 paragraphRangeForRange:a2, a3];
                    id v66 = [a6 substringWithRange:v64, v65];
                    uint64_t v67 = sub_100109D30();
                    unint64_t v69 = v68;

                    unint64_t v70 = sub_10005B728(v67, v69);
                    unint64_t v72 = v71;
                    swift_bridgeObjectRelease();
                    if (!v72) {
                      goto LABEL_118;
                    }
                    unint64_t v73 = sub_10006514C(v70, v72);
                    if ((v73 & 0x100000000) == 0)
                    {
                      int v74 = v73;
                      swift_bridgeObjectRelease();
                      if ((v74 - 14) <= 0xFFFFFFFB && (v74 - 8232) >= 2 && v74 != 133) {
                        goto LABEL_118;
                      }
                      long long v75 = (char *)[v13 selectedRange];
                      uint64_t v77 = v76;
                      unint64_t v78 = &v75[v76];
                      id v79 = [v13 textStorage];
                      uint64_t v80 = (char *)[v79 v24[299]];

                      if ((uint64_t)v80 >= (uint64_t)v78
                        && (id v81 = [v13 textLayoutManager]) != 0)
                      {
                        uint64_t v82 = v81;
                        id v83 = sub_10007FE84((uint64_t)v75, v77);
                        if (v83)
                        {
                          id v84 = v83;
                          CGSize v85 = CGRectNull.size;
                          v133.origin = CGRectNull.origin;
                          v133.CGSize size = v85;
                          uint64_t v86 = swift_allocObject();
                          *(void *)(v86 + 16) = &v133;
                          uint64_t v87 = swift_allocObject();
                          *(void *)(v87 + 16) = sub_1000666E4;
                          *(void *)(v87 + 24) = v86;
                          uint64_t v136 = sub_100066764;
                          uint64_t v137 = v87;
                          *(void *)&long long aBlock = _NSConcreteStackBlock;
                          *((void *)&aBlock + 1) = 1107296256;
                          *(void *)&long long v135 = sub_100064B50;
                          *((void *)&v135 + 1) = &unk_100142D08;
                          BOOL v88 = _Block_copy(&aBlock);
                          swift_retain();
                          swift_release();
                          [v82 enumerateTextSegmentsInRange:v84 type:0 options:0 usingBlock:v88];
                          _Block_release(v88);
                          LOBYTE(v88) = swift_isEscapingClosureAtFileLocation();
                          swift_release();
                          if ((v88 & 1) == 0)
                          {
                            BOOL v89 = CGRectIsNull(v133);
                            if (v89) {
                              double v90 = CGRectZero.origin.x;
                            }
                            else {
                              double v90 = v133.origin.x;
                            }
                            if (v89) {
                              double v91 = CGRectZero.origin.y;
                            }
                            else {
                              double v91 = v133.origin.y;
                            }
                            if (v89) {
                              double v92 = CGRectZero.size.width;
                            }
                            else {
                              double v92 = v133.size.width;
                            }
                            if (v89) {
                              double v93 = CGRectZero.size.height;
                            }
                            else {
                              double v93 = v133.size.height;
                            }

                            swift_release();
                            goto LABEL_117;
                          }
                          __break(1u);
                          goto LABEL_124;
                        }

                        double v90 = 0.0;
                        double v91 = 0.0;
                        double v92 = 0.0;
                        double v93 = 0.0;
                      }
                      else
                      {
                        double v90 = CGRectZero.origin.x;
                        double v91 = CGRectZero.origin.y;
                        double v92 = CGRectZero.size.width;
                        double v93 = CGRectZero.size.height;
                      }
LABEL_117:
                      v138.origin.CGFloat x = v33;
                      v138.origin.double y = y;
                      v138.size.double width = width;
                      v138.size.double height = height;
                      v140.origin.CGFloat x = v90;
                      v140.origin.double y = v91;
                      v140.size.double width = v92;
                      v140.size.double height = v93;
                      CGRect v139 = CGRectUnion(v138, v140);
                      double v33 = v139.origin.x;
                      double y = v139.origin.y;
                      double width = v139.size.width;
LABEL_118:

                      id v21 = v130;
                      goto LABEL_119;
                    }
LABEL_124:
                    __break(1u);
                    return;
                  }
                }
                else
                {
                  sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
                }
              }
LABEL_119:
              id v124 = *(id *)&v13[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_blockQuoteLayerView];
              sub_1000E6514(v21, v33, y, width);

              return;
            }
            goto LABEL_114;
          }
          __break(1u);
LABEL_122:
          __break(1u);
        }
      }
    }
    else
    {
      sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
    }
    id v37 = [v13 selectedTextRange];
    if (v37)
    {
      id v38 = v37;
      uint64_t v39 = (char *)[v37 start];

      if (v39)
      {
        id v40 = NSParagraphStyleAttributeName;
        id v41 = [v13 typingAttributes];
        type metadata accessor for Key(0);
        sub_100066270(&qword_1001591F0, type metadata accessor for Key);
        uint64_t v42 = sub_100109B70();

        if (*(void *)(v42 + 16) && (uint64_t v43 = sub_1000FCC0C(v40), (v44 & 1) != 0))
        {
          sub_100037A20(*(void *)(v42 + 56) + 32 * v43, (uint64_t)&aBlock);
        }
        else
        {
          long long aBlock = 0u;
          long long v135 = 0u;
        }

        swift_bridgeObjectRelease();
        if (!*((void *)&v135 + 1))
        {

          sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
          return;
        }
        sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
        if ((swift_dynamicCast() & 1) == 0)
        {

LABEL_39:
          return;
        }
        CGFloat v129 = v133.origin.x;
        id v45 = [v13 beginningOfDocument];
        uint64_t v46 = (uint64_t)[v13 offsetFromPosition:v45 toPosition:v39];

        uint64_t v127 = v46;
        uint64_t v47 = v46 - 1;
        if (v46 >= 1)
        {
          *(void *)&v133.origin.CGFloat x = [a6 paragraphRangeForRange:v47];
          v133.origin.double y = v48;
          id v49 = [v13 textStorage];
          id v50 = [v49 attributesAtIndex:*(void *)&v133.origin.x effectiveRange:&v133];

          uint64_t v51 = sub_100109B70();
          if (*(void *)(v51 + 16))
          {
            double v52 = v40;
            uint64_t v53 = sub_1000FCC0C(v52);
            if (v54)
            {
              sub_100037A20(*(void *)(v51 + 56) + 32 * v53, (uint64_t)&aBlock);
            }
            else
            {
              long long aBlock = 0u;
              long long v135 = 0u;
            }
          }
          else
          {
            long long aBlock = 0u;
            long long v135 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v135 + 1))
          {
            if (swift_dynamicCast())
            {
              [v132[0] firstLineHeadIndent];
              double v95 = fmod(v94, 1.0) + -0.1;
              [v132[0] headIndent];
              long double v97 = v96;

              double v98 = fmod(v97, 1.0);
              if (fabs(v95) < 0.01 && fabs(v98 + -0.1) < 0.01)
              {

                goto LABEL_39;
              }
            }
          }
          else
          {
            sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
          }
        }
        [a7 string:v47];
        uint64_t v100 = sub_100109D30();
        unint64_t v102 = v101;

        uint64_t v103 = sub_10005B728(v100, v102);
        uint64_t v105 = v104;
        swift_bridgeObjectRelease();
        if (v105)
        {
          if (v103 == 10 && v105 == 0xE100000000000000) {
            char v106 = 1;
          }
          else {
            char v106 = sub_10010ACA0();
          }
          CGFloat v14 = v129;
          long double v22 = v39;
          swift_bridgeObjectRelease();
        }
        else
        {
          char v106 = 0;
          CGFloat v14 = v129;
          long double v22 = v39;
        }
        [*(id *)&v14 firstLineHeadIndent];
        double v108 = fmod(v107, 1.0) + -0.1;
        [*(id *)&v14 headIndent];
        if (fabs(v108) < 0.01 && (v106 & 1) != 0 && fabs(fmod(v109, 1.0) + -0.1) < 0.01)
        {
          id v110 = [v13 textStorage];
          id v111 = [v110 length];

          if ((uint64_t)v111 < v127
            || (id v112 = [v13 textLayoutManager]) == 0)
          {
            double v120 = CGRectZero.origin.x;
            double v121 = CGRectZero.origin.y;
            double v122 = CGRectZero.size.width;
LABEL_109:
            id v123 = *(id *)&v13[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_blockQuoteLayerView];
            sub_1000E6514(0, v120, v121, v122);

            return;
          }
          id v23 = v112;
          id v113 = sub_10007FE84(v127, 0);
          if (!v113)
          {
LABEL_115:

            double v120 = 0.0;
            double v121 = 0.0;
            double v122 = 0.0;
            goto LABEL_109;
          }
          uint64_t v114 = v113;
          CGSize v115 = CGRectNull.size;
          v133.origin = CGRectNull.origin;
          v133.CGSize size = v115;
          uint64_t v116 = swift_allocObject();
          *(void *)(v116 + 16) = &v133;
          uint64_t v117 = swift_allocObject();
          *(void *)(v117 + 16) = sub_1000666E4;
          *(void *)(v117 + 24) = v116;
          uint64_t v136 = sub_100066764;
          uint64_t v137 = v117;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v135 = sub_100064B50;
          *((void *)&v135 + 1) = &unk_100142C90;
          uint64_t v118 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v23 enumerateTextSegmentsInRange:v114 type:0 options:0 usingBlock:v118];
          _Block_release(v118);
          LOBYTE(v118) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v118 & 1) == 0)
          {
            BOOL v119 = CGRectIsNull(v133);
            if (v119) {
              double v120 = CGRectZero.origin.x;
            }
            else {
              double v120 = v133.origin.x;
            }
            if (v119) {
              double v121 = CGRectZero.origin.y;
            }
            else {
              double v121 = v133.origin.y;
            }
            if (v119) {
              double v122 = CGRectZero.size.width;
            }
            else {
              double v122 = v133.size.width;
            }

            swift_release();
            goto LABEL_109;
          }
          goto LABEL_122;
        }
      }
    }
  }
}

BOOL sub_100060628()
{
  double v1 = NSParagraphStyleAttributeName;
  id v2 = [v0 typingAttributes];
  type metadata accessor for Key(0);
  sub_100066270(&qword_1001591F0, type metadata accessor for Key);
  uint64_t v3 = sub_100109B70();

  if (!*(void *)(v3 + 16) || (uint64_t v4 = sub_1000FCC0C(v1), (v5 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_100037A20(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v12);

  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_8:
    sub_10000B9CC((uint64_t)&v12, &qword_10015A8A0);
    return 0;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if (swift_dynamicCast())
  {
    [v11 firstLineHeadIndent];
    double v7 = fmod(v6, 1.0) + -0.1;
    [v11 headIndent];
    long double v9 = v8;

    if (fabs(v7) < 0.01) {
      return fabs(fmod(v9, 1.0) + -0.1) < 0.01;
    }
  }
  return 0;
}

void sub_100060800(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [v3 textStorage];
  id v7 = [v6 string];

  if (!v7) {
    goto LABEL_40;
  }
  id v8 = [v7 paragraphRangeForRange:a1, a2];
  uint64_t v10 = v9;

  id v11 = [v3 undoManager];
  if (v11)
  {
    long long v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v10;
    type metadata accessor for CanvasTextView();
    sub_10010A2A0();

    swift_release();
  }
  id v14 = [v3 textStorage];
  [v14 beginEditing];

  long double v15 = NSParagraphStyleAttributeName;
  id v16 = [v3 typingAttributes];
  type metadata accessor for Key(0);
  sub_100066270(&qword_1001591F0, type metadata accessor for Key);
  uint64_t v17 = sub_100109B70();

  if (!*(void *)(v17 + 16) || (uint64_t v18 = sub_1000FCC0C(v15), (v19 & 1) == 0))
  {
    long long aBlock = 0u;
    long long v64 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_100037A20(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&aBlock);

  swift_bridgeObjectRelease();
  if (!*((void *)&v64 + 1))
  {
LABEL_10:
    sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
    goto LABEL_11;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if (swift_dynamicCast())
  {
    uint64_t v20 = *(void **)&v67[0];
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v20 = 0;
LABEL_12:
  id v21 = objc_allocWithZone((Class)NSMutableParagraphStyle);
  long double v22 = v15;
  id v23 = [v21 init];
  long double v24 = v23;
  if (v20) {
    [v23 setParagraphStyle:v20];
  }
  else {
    [v23 setParagraphSpacingBefore:8.0];
  }
  if (qword_1001588C8 != -1) {
    swift_once();
  }
  double v25 = *(double *)&qword_10016DC88 + 4.0 + 0.1;
  [v24 setFirstLineHeadIndent:v25];
  [v24 setHeadIndent:v25];
  *((void *)&v64 + 1) = sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  *(void *)&long long aBlock = v24;
  id v26 = [v3 typingAttributes];
  uint64_t v27 = sub_100109B70();

  uint64_t v68 = v27;
  if (*((void *)&v64 + 1))
  {
    sub_10002426C(&aBlock, v67);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000FEF90(v67, v22, isUniquelyReferenced_nonNull_native);
    uint64_t v68 = v27;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
    sub_1000CCFEC((uint64_t)v22, v67);

    sub_10000B9CC((uint64_t)v67, &qword_10015A8A0);
  }
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v30 = &selRef_layoutAttributesForCellWithIndexPath_;
  [v3 setTypingAttributes:isa];

  id v31 = [v3 typingAttributes];
  uint64_t v32 = (NSString *)sub_100109B70();

  double v33 = sub_10006569C((uint64_t)v32);
  swift_bridgeObjectRelease();

  id v34 = &selRef_layoutAttributesForCellWithIndexPath_;
  if (!v33)
  {
    uint64_t v35 = qword_100158938;
    uint64_t v32 = NSForegroundColorAttributeName;
    if (v35 == -1) {
      goto LABEL_24;
    }
    goto LABEL_38;
  }
  if (!v10) {
    goto LABEL_30;
  }
  while (1)
  {
    uint64_t v30 = (char **)(v62 + v10);
    if (!__OFADD__(v62, v10)) {
      break;
    }
    __break(1u);
LABEL_38:
    swift_once();
LABEL_24:
    id v36 = (void *)qword_10016DD30;
    *((void *)&v64 + 1) = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
    *(void *)&long long aBlock = v36;
    id v37 = v36;
    id v38 = [v3 typingAttributes];
    uint64_t v39 = sub_100109B70();

    uint64_t v68 = v39;
    if (*((void *)&v64 + 1))
    {
      sub_10002426C(&aBlock, v67);
      char v40 = swift_isUniquelyReferenced_nonNull_native();
      sub_1000FEF90(v67, v32, v40);
      uint64_t v68 = v39;

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
      sub_1000CCFEC((uint64_t)v32, v67);

      sub_10000B9CC((uint64_t)v67, &qword_10015A8A0);
    }
    id v34 = &selRef_layoutAttributesForCellWithIndexPath_;
    uint64_t v32 = (NSString *)sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    [v3 v30[317]:v32];

    if (!v10) {
      goto LABEL_30;
    }
  }
  id v41 = [v3 v34[314]];
  uint64_t v42 = (char **)[v41 length];

  if ((uint64_t)v42 < (uint64_t)v30)
  {
LABEL_30:
    id v43 = [v3 selectedTextRange];
    if (v43)
    {
      char v44 = v43;
      id v45 = [v43 start];

      if (v45)
      {
        id v46 = [v3 beginningOfDocument];
        id v47 = [v3 offsetFromPosition:v46 toPosition:v45];

        id v48 = objc_allocWithZone((Class)NSMutableAttributedString);
        NSString v49 = sub_100109CF0();
        id v50 = [v48 initWithString:v49];

        id v51 = [v3 typingAttributes];
        sub_100109B70();

        id v34 = &selRef_layoutAttributesForCellWithIndexPath_;
        Class v52 = sub_100109B60().super.isa;
        swift_bridgeObjectRelease();
        [v50 setAttributes:v52 range:0];

        id v53 = [v3 textStorage];
        [v53 insertAttributedString:v50 atIndex:v47];
      }
    }

    char v54 = 0;
    goto LABEL_36;
  }
  id v55 = [v3 v34[314]];
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v3;
  uint64_t v57 = swift_allocObject();
  char v54 = sub_1000664A0;
  *(void *)(v57 + 16) = sub_1000664A0;
  *(void *)(v57 + 24) = v56;
  uint64_t v65 = sub_1000664B8;
  uint64_t v66 = v57;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v64 = sub_1000CC1EC;
  *((void *)&v64 + 1) = &unk_100142A38;
  uint64_t v58 = _Block_copy(&aBlock);
  id v59 = v3;
  swift_retain();
  swift_release();
  [v55 enumerateAttributesInRange:v62 options:0x100000 usingBlock:v58];

  _Block_release(v58);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    id v34 = &selRef_layoutAttributesForCellWithIndexPath_;
LABEL_36:
    id v61 = [v3 v34[314]];
    [v61 endEditing];

    sub_10002422C((uint64_t)v54);
    return;
  }
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_100061174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = swift_getObjectType();
  id v8 = [v4 textStorage];
  id v9 = [v8 string];

  if (v9)
  {
    uint64_t v10 = [(char *)[v9 paragraphRangeForRange:a1, a2]];
    uint64_t v12 = v11;

    id v13 = [v4 undoManager];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v10;
      *(void *)(v15 + 24) = v12;
      type metadata accessor for CanvasTextView();
      sub_10010A2A0();

      swift_release();
    }
    id v16 = [v4 textStorage];
    [v16 beginEditing];

    id v17 = [v4 textStorage];
    uint64_t v18 = &selRef_layoutAttributesForCellWithIndexPath_;
    uint64_t v19 = (uint64_t)[v17 length];

    if (v19 >= 1)
    {
      if (v12)
      {
        NSAttributedStringKey v20 = (NSAttributedStringKey)&v10[v12];
        if (__OFADD__(v10, v12))
        {
          __break(1u);
        }
        else
        {
          id v21 = [v4 textStorage];
          NSAttributedStringKey v22 = (NSAttributedStringKey)[v21 length];

          if ((uint64_t)v22 < (uint64_t)v20) {
            goto LABEL_8;
          }
          id v23 = [v4 textStorage];
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v4;
          *(void *)(v19 + 24) = ObjectType;
          uint64_t v18 = (char **)swift_allocObject();
          v18[2] = (char *)sub_100066534;
          v18[3] = (char *)v19;
          uint64_t v56 = sub_1000666EC;
          uint64_t v57 = v18;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v55 = sub_1000CC1EC;
          *((void *)&v55 + 1) = &unk_100142AD8;
          NSAttributedStringKey v20 = (NSAttributedStringKey)_Block_copy(&aBlock);
          uint64_t v3 = (uint64_t)v57;
          id v24 = v4;
          swift_retain();
          swift_release();
          [v23 enumerateAttributesInRange:v10 options:v12 usingBlock:v20];

          _Block_release(v20);
          LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v23 & 1) == 0)
          {
            id v50 = sub_100066534;
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_47:
        swift_once();
LABEL_34:
        if (sub_10010A6A0())
        {
          uint64_t v42 = qword_100158A48;
          id v43 = v20;
          if (v42 != -1) {
            swift_once();
          }
          *((void *)&v55 + 1) = v3;
          *(void *)&long long aBlock = qword_10015B800;
          id v44 = (id)qword_10015B800;
          id v45 = [v4 *(SEL *)(v19 + 2360)];
          uint64_t v46 = sub_100109B70();

          uint64_t v53 = v46;
          if (*((void *)&v55 + 1))
          {
            sub_10002426C(&aBlock, v52);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_1000FEF90(v52, v43, isUniquelyReferenced_nonNull_native);
            uint64_t v53 = v46;

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
            sub_1000CCFEC((uint64_t)v43, v52);

            sub_10000B9CC((uint64_t)v52, &qword_10015A8A0);
          }
          Class isa = sub_100109B60().super.isa;
          swift_bridgeObjectRelease();
          [v4 setTypingAttributes:isa];
        }
        else
        {
        }
        goto LABEL_44;
      }
LABEL_8:
      id v50 = 0;
LABEL_14:
      double v25 = NSParagraphStyleAttributeName;
      id v26 = [v4 typingAttributes];
      type metadata accessor for Key(0);
      sub_100066270(&qword_1001591F0, type metadata accessor for Key);
      uint64_t v27 = sub_100109B70();

      if (*(void *)(v27 + 16) && (uint64_t v28 = sub_1000FCC0C(v25), (v29 & 1) != 0))
      {
        sub_100037A20(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v55 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v55 + 1))
      {
        sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
        if (swift_dynamicCast())
        {
          id v30 = v52[0];
          [v52[0] mutableCopy];
          sub_10010A7B0();
          swift_unknownObjectRelease();
          uint64_t v31 = sub_10001CB98(0, &qword_10015B8F0);
          if (swift_dynamicCast())
          {
            [v52[0] setFirstLineHeadIndent:0.0];
            [v52[0] setHeadIndent:0.0];
            *((void *)&v55 + 1) = v31;
            *(id *)&long long aBlock = v52[0];
            uint64_t v32 = v25;
            id v33 = v52[0];
            id v34 = [v4 typingAttributes];
            uint64_t v35 = sub_100109B70();

            uint64_t v53 = v35;
            if (*((void *)&v55 + 1))
            {
              sub_10002426C(&aBlock, v52);
              char v36 = swift_isUniquelyReferenced_nonNull_native();
              sub_1000FEF90(v52, v32, v36);
              uint64_t v53 = v35;

              swift_bridgeObjectRelease();
            }
            else
            {
              sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
              sub_1000CCFEC((uint64_t)v32, v52);

              sub_10000B9CC((uint64_t)v52, &qword_10015A8A0);
            }
            Class v37 = sub_100109B60().super.isa;
            swift_bridgeObjectRelease();
            [v4 setTypingAttributes:v37];
          }
          else
          {
          }
        }
      }
      else
      {
        sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
      }
      NSAttributedStringKey v20 = NSForegroundColorAttributeName;
      id v38 = [v4 typingAttributes];
      uint64_t v39 = sub_100109B70();

      if (*(void *)(v39 + 16) && (uint64_t v40 = sub_1000FCC0C(v20), (v41 & 1) != 0))
      {
        sub_100037A20(*(void *)(v39 + 56) + 32 * v40, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v55 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v55 + 1))
      {
        uint64_t v19 = (uint64_t)&selRef_layoutAttributesForCellWithIndexPath_;
        uint64_t v3 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
        if (swift_dynamicCast())
        {
          uint64_t v18 = (char **)v52[0];
          sub_10001CB98(0, &qword_10015A8C0);
          if (qword_100158938 == -1) {
            goto LABEL_34;
          }
          goto LABEL_47;
        }
      }
      else
      {
        sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
      }
LABEL_44:
      id v49 = [v4 textStorage];
      [v49 endEditing];

      sub_10002422C((uint64_t)v50);
      return;
    }
    sub_10005DC14(0);
    sub_10005C9E4();
    id v51 = [v4 textStorage];
    [v51 endEditing];
  }
  else
  {
    __break(1u);
  }
}

void sub_100061AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!*(void *)(a1 + 16))
  {
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_8;
  }
  id v9 = NSParagraphStyleAttributeName;
  uint64_t v10 = sub_1000FCC0C(v9);
  if ((v11 & 1) == 0)
  {
    long long v20 = 0u;
    long long v21 = 0u;

    goto LABEL_8;
  }
  sub_100037A20(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v20);

  if (!*((void *)&v21 + 1))
  {
LABEL_8:
    sub_10000B9CC((uint64_t)&v20, &qword_10015A8A0);
    goto LABEL_9;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if (swift_dynamicCast())
  {
    uint64_t v12 = v19;
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v12 = 0;
LABEL_10:
  id v13 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  id v14 = v13;
  if (v12) {
    [v13 setParagraphStyle:v12];
  }
  else {
    [v13 setParagraphSpacingBefore:8.0];
  }
  if (qword_1001588C8 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_10016DC88 + 4.0 + 0.1;
  [v14 setFirstLineHeadIndent:v15];
  [v14 setHeadIndent:v15];
  id v16 = [a5 textStorage];
  [v16 addAttribute:NSParagraphStyleAttributeName value:v14 range:a2, a3];

  id v17 = sub_10006569C(a1);
  if (v17)
  {
    id v18 = v14;
  }
  else
  {
    id v18 = [a5 textStorage];
    if (qword_100158938 != -1) {
      swift_once();
    }
    [v18 addAttribute:NSForegroundColorAttributeName value:qword_10016DD30 range:a2, a3];
  }
}

void sub_100061D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!*(void *)(a1 + 16))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_11;
  }
  id v9 = NSParagraphStyleAttributeName;
  uint64_t v10 = sub_1000FCC0C(v9);
  if ((v11 & 1) == 0)
  {
    long long v18 = 0u;
    long long v19 = 0u;

    goto LABEL_11;
  }
  sub_100037A20(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v18);

  if (!*((void *)&v19 + 1))
  {
LABEL_11:
    sub_10000B9CC((uint64_t)&v18, &qword_10015A8A0);
    return;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  [v17 mutableCopy];
  sub_10010A7B0();
  swift_unknownObjectRelease();
  sub_10001CB98(0, &qword_10015B8F0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return;
  }
  [v17 setFirstLineHeadIndent:0.0];
  [v17 setHeadIndent:0.0];
  id v12 = [a5 textStorage];
  [v12 addAttribute:v9 value:v17 range:a2];

  if (!*(void *)(a1 + 16))
  {
    long long v18 = 0u;
    long long v19 = 0u;
LABEL_24:

    goto LABEL_11;
  }
  id v13 = NSForegroundColorAttributeName;
  uint64_t v14 = sub_1000FCC0C(v13);
  if (v15)
  {
    sub_100037A20(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }

  if (!*((void *)&v19 + 1)) {
    goto LABEL_24;
  }
  sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
  if (swift_dynamicCast())
  {
    sub_10001CB98(0, &qword_10015A8C0);
    if (qword_100158938 != -1) {
      swift_once();
    }
    if (sub_10010A6A0())
    {
      id v16 = [a5 textStorage];
      if (qword_100158A48 != -1) {
        swift_once();
      }
      [v16 addAttribute:v13 value:qword_10015B800 range:a2, a3];
    }
    else
    {
    }
  }
  else
  {
  }
}

uint64_t sub_1000620BC(Class isa)
{
  id v2 = v1;
  uint64_t v4 = sub_10010A570();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (id *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, Class, uint64_t))(v5 + 16))(v7, isa, v4);
  int v8 = (*(uint64_t (**)(id *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for UITextFormattingViewController.ChangeValue.bold(_:)
    || v8 == enum case for UITextFormattingViewController.ChangeValue.italic(_:)
    || v8 == enum case for UITextFormattingViewController.ChangeValue.underline(_:)
    || v8 == enum case for UITextFormattingViewController.ChangeValue.strikethrough(_:))
  {
    sub_10005D880();
    return 1;
  }
  if (v8 == enum case for UITextFormattingViewController.ChangeValue.textColor(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);
    id v12 = *v7;
    if (!sub_10007FD44() && !sub_10007FDE4())
    {
      id v48 = (void **)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
      id v49 = *(void **)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
      if (!v49)
      {
        NSURL *v48 = v12;
        id v59 = v12;
LABEL_51:
        uint64_t v47 = 1;
        goto LABEL_52;
      }
      uint64_t v47 = 1;
      goto LABEL_42;
    }
    id v13 = (char *)[v2 selectedRange];
    [v2 selectedRange];
    char v15 = (objc_class *)&v13[v14];
    if (__OFADD__(v13, v14))
    {
      __break(1u);
    }
    else
    {
      id v16 = [v2 textStorage];
      Class isa = (Class)[v16 length];

      if ((uint64_t)isa >= (uint64_t)v15)
      {
        [v2 selectedRange];
        if (v17 >= 1)
        {
          id v18 = [v2 textStorage];
          id v19 = [v2 selectedRange];
          *(void *)&long long v64 = [v2 selectedRange];
          *((void *)&v64 + 1) = v20;
          id v21 = [v18 attributesAtIndex:v19 effectiveRange:&v64];

          [v2 setSelectedRange:v64];
          type metadata accessor for Key(0);
          sub_100066270(&qword_1001591F0, type metadata accessor for Key);
          uint64_t v22 = sub_100109B70();

          uint64_t v23 = qword_100158A48;
          id v24 = NSForegroundColorAttributeName;
          if (v23 != -1) {
            swift_once();
          }
          double v25 = (void *)qword_10015B800;
          uint64_t v65 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
          *(void *)&long long v64 = v25;
          sub_10002426C(&v64, v63);
          id v26 = v25;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v62 = v22;
          sub_1000FEF90(v63, v24, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
          id v28 = [v2 textStorage];
          Class isa = sub_100109B60().super.isa;
          swift_bridgeObjectRelease();
          id v29 = [v2 selectedRange];
          [v28 setAttributes:isa range:v29, v30];
        }
      }
      uint64_t v31 = (char *)[v2 selectedRange];
      [v2 selectedRange];
      id v33 = &v31[v32];
      if (!__OFADD__(v31, v32))
      {
        id v34 = [v2 textStorage];
        uint64_t v35 = (char *)[v34 length];

        if (v33 != v35)
        {
LABEL_40:
          Class v52 = *(void **)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
          *(void *)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor] = 0;

          id v48 = (void **)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
          id v49 = *(void **)&v2[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor];
          if (!v49)
          {
            uint64_t v47 = 0;
            NSURL *v48 = 0;
            goto LABEL_52;
          }
          uint64_t v47 = 0;
LABEL_42:
          sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
          id v53 = v12;
          id v54 = v49;
          char v55 = sub_10010A6A0();

          if (v47)
          {
            uint64_t v56 = *v48;
            NSURL *v48 = v53;
            id v57 = v53;

            if ((v55 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_46;
          }
          uint64_t v58 = *v48;
          NSURL *v48 = 0;

          if (v55)
          {
LABEL_46:

            return v47;
          }
          uint64_t v47 = 0;
LABEL_52:
          sub_10005D880();

          return v47;
        }
        uint64_t v36 = qword_100158A48;
        Class isa = NSForegroundColorAttributeName;
        if (v36 == -1)
        {
LABEL_25:
          Class v37 = (void *)qword_10015B800;
          uint64_t v65 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
          *(void *)&long long v64 = v37;
          id v38 = v37;
          id v39 = [v2 typingAttributes];
          type metadata accessor for Key(0);
          sub_100066270(&qword_1001591F0, type metadata accessor for Key);
          uint64_t v40 = sub_100109B70();

          uint64_t v62 = v40;
          if (v65)
          {
            sub_10002426C(&v64, v63);
            char v41 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v61 = v40;
            sub_1000FEF90(v63, isa, v41);
            uint64_t v62 = v61;

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10000B9CC((uint64_t)&v64, &qword_10015A8A0);
            sub_1000CCFEC((uint64_t)isa, v63);

            sub_10000B9CC((uint64_t)v63, &qword_10015A8A0);
          }
          Class v51 = sub_100109B60().super.isa;
          swift_bridgeObjectRelease();
          [v2 setTypingAttributes:v51];

          goto LABEL_40;
        }
LABEL_55:
        swift_once();
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
  if (v8 == enum case for UITextFormattingViewController.ChangeValue.textList(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);

    sub_10005D880();
    id v42 = [v2 selectedRange];
    sub_10005EF04(v42, v43);
    return 1;
  }
  if (v8 != enum case for UITextFormattingViewController.ChangeValue.toggleBlockquote(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 8))(v7, v4);
    return 1;
  }
  (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);
  int v44 = *(unsigned __int8 *)v7;
  id v45 = [v2 selectedRange];
  if (v44 == 1) {
    sub_100060800((uint64_t)v45, v46);
  }
  else {
    sub_100061174((uint64_t)v45, v46);
  }
  return 0;
}

id sub_1000629D8@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v30 = a1;
  uint64_t v3 = sub_10010A550();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v29 - v8;
  [v2 selectedRange];
  if (!v10) {
    goto LABEL_5;
  }
  char v11 = (char *)[v2 selectedRange];
  [v2 selectedRange];
  id v13 = &v11[v12];
  if (__OFADD__(v11, v12)) {
    __break(1u);
  }
  id result = [v2 attributedText];
  if (result)
  {
    char v15 = result;
    id v16 = (char *)[result length];

    if ((uint64_t)v16 < (uint64_t)v13)
    {
LABEL_5:
      id v17 = [v2 typingAttributes];
      type metadata accessor for Key(0);
      sub_100066270(&qword_1001591F0, type metadata accessor for Key);
      sub_100109B70();

      sub_10010A500();
      sub_100060628();
      sub_10010A510();
      id v18 = NSStrikethroughStyleAttributeName;
      id v19 = [v2 typingAttributes];
      uint64_t v20 = sub_100109B70();

      if (*(void *)(v20 + 16) && (uint64_t v21 = sub_1000FCC0C(v18), (v22 & 1) != 0)) {
        sub_100037A20(*(void *)(v20 + 56) + 32 * v21, (uint64_t)v31);
      }
      else {
        memset(v31, 0, sizeof(v31));
      }
      uint64_t v23 = v30;

      swift_bridgeObjectRelease();
      sub_10000B9CC((uint64_t)v31, &qword_10015A8A0);
      sub_10010A530();
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23, v9, v3);
    }
    id result = [v2 attributedText];
    if (result)
    {
      [v2 selectedRange];
      sub_10010A540();
      id v24 = [v2 selectedRange];
      *(void *)&v31[0] = v24;
      *((void *)&v31[0] + 1) = v25;
      id v26 = [v2 textStorage];
      id v27 = [v26 attributesAtIndex:v24 effectiveRange:v31];

      type metadata accessor for Key(0);
      sub_100066270(&qword_1001591F0, type metadata accessor for Key);
      uint64_t v28 = sub_100109B70();

      sub_100065548(v28);
      swift_bridgeObjectRelease();
      sub_10010A510();
      id v9 = v7;
      uint64_t v23 = v30;
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23, v9, v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100062EF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9)
{
  if (a1)
  {
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v71 = a6;
      unint64_t v73 = _swiftEmptyArrayStorage;
      id v68 = a3;
      unint64_t v69 = a7;
      unint64_t v70 = a8;
      if (*(void *)(a4 + 16))
      {
        swift_unknownObjectRetain();
        id v18 = NSParagraphStyleAttributeName;
        uint64_t v19 = sub_1000FCC0C(v18);
        if (v20)
        {
          sub_100037A20(*(void *)(a4 + 56) + 32 * v19, (uint64_t)&aBlock);

          if (*((void *)&v75 + 1))
          {
            sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
            if (swift_dynamicCast())
            {
              id v21 = [v72 textLists];
              sub_10001CB98(0, &qword_10015B8E8);
              uint64_t v22 = sub_100109F30();

              unint64_t v73 = (double *)v22;
              swift_bridgeObjectRelease();
            }
LABEL_17:
            id v29 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v17];
            id v30 = [v29 length];
            uint64_t v31 = swift_allocObject();
            *(void *)(v31 + 16) = v29;
            uint64_t v32 = swift_allocObject();
            *(void *)(v32 + 16) = sub_1000663D4;
            *(void *)(v32 + 24) = v31;
            uint64_t v76 = sub_1000663EC;
            uint64_t v77 = v32;
            *(void *)&long long aBlock = _NSConcreteStackBlock;
            *((void *)&aBlock + 1) = 1107296256;
            *(void *)&long long v75 = sub_10005B7A8;
            *((void *)&v75 + 1) = &unk_100142858;
            id v33 = _Block_copy(&aBlock);
            id v34 = v29;
            swift_retain();
            swift_release();
            [v34 enumerateAttribute:NSLinkAttributeName inRange:0 options:0 usingBlock:v33];
            _Block_release(v33);
            char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if (isEscapingClosureAtFileLocation)
            {
              __break(1u);
            }
            else
            {
              id v33 = [v34 length];
              uint64_t v36 = swift_allocObject();
              *(void *)(v36 + 16) = v34;
              uint64_t v37 = swift_allocObject();
              *(void *)(v37 + 16) = sub_100066414;
              *(void *)(v37 + 24) = v36;
              uint64_t v76 = sub_1000666E8;
              uint64_t v77 = v37;
              *(void *)&long long aBlock = _NSConcreteStackBlock;
              *((void *)&aBlock + 1) = 1107296256;
              *(void *)&long long v75 = sub_10005B7A8;
              *((void *)&v75 + 1) = &unk_1001428D0;
              id v38 = _Block_copy(&aBlock);
              id v39 = v34;
              swift_retain();
              swift_release();
              [v39 enumerateAttribute:NSAttachmentAttributeName inRange:0 options:0 usingBlock:v38];
              _Block_release(v38);
              char v40 = swift_isEscapingClosureAtFileLocation();
              swift_release();
              if ((v40 & 1) == 0)
              {
                unint64_t v41 = (unint64_t)[v39 length];
                if ((v41 & 0x8000000000000000) == 0)
                {
                  unint64_t v42 = v41;
                  id v33 = NSFontAttributeName;
                  uint64_t v43 = swift_allocObject();
                  *(void *)(v43 + 16) = v39;
                  uint64_t v44 = swift_allocObject();
                  *(void *)(v44 + 16) = sub_10006642C;
                  *(void *)(v44 + 24) = v43;
                  uint64_t v76 = sub_1000666E8;
                  uint64_t v77 = v44;
                  *(void *)&long long aBlock = _NSConcreteStackBlock;
                  *((void *)&aBlock + 1) = 1107296256;
                  *(void *)&long long v75 = sub_10005B7A8;
                  *((void *)&v75 + 1) = &unk_100142948;
                  id v45 = _Block_copy(&aBlock);
                  id v46 = v39;
                  swift_retain();
                  swift_release();
                  [v46 enumerateAttribute:NSFontAttributeName inRange:0 options:0 usingBlock:v45];
                  _Block_release(v45);
                  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
                  swift_release();
                  if ((v42 & 1) == 0)
                  {
                    unint64_t v47 = (unint64_t)[v46 length];
                    if ((v47 & 0x8000000000000000) == 0)
                    {
                      unint64_t v48 = v47;
                      id v49 = (void *)swift_allocObject();
                      v49[2] = a5;
                      v49[3] = &v73;
                      v49[4] = v71 + 16;
                      v49[5] = v46;
                      uint64_t v50 = swift_allocObject();
                      *(void *)(v50 + 16) = sub_100066484;
                      *(void *)(v50 + 24) = v49;
                      uint64_t v76 = sub_1000666E8;
                      uint64_t v77 = v50;
                      *(void *)&long long aBlock = _NSConcreteStackBlock;
                      *((void *)&aBlock + 1) = 1107296256;
                      *(void *)&long long v75 = sub_10005B7A8;
                      *((void *)&v75 + 1) = &unk_1001429C0;
                      id v33 = _Block_copy(&aBlock);
                      id v51 = v46;
                      id v52 = a5;
                      swift_retain();
                      swift_release();
                      [v51 enumerateAttribute:NSParagraphStyleAttributeName inRange:0 options:v48 usingBlock:v33];
                      _Block_release(v33);
                      LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
                      swift_release();
                      if ((v48 & 1) == 0)
                      {
                        [v51 removeAttribute:NSAdaptiveImageGlyphAttributeName range:0, [v51 length]];
                        sub_100004BD4(&qword_10015B8D8);
                        uint64_t inited = swift_initStackObject();
                        *(_OWORD *)(inited + 16) = xmmword_100122220;
                        *(void *)(inited + 32) = NSForegroundColorAttributeName;
                        uint64_t v54 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
                        *(void *)(inited + 40) = v69;
                        *(void *)(inited + 64) = v54;
                        *(void *)(inited + 72) = NSBackgroundColorAttributeName;
                        *(void *)(inited + 104) = v54;
                        *(void *)(inited + 80) = v70;
                        char v55 = NSForegroundColorAttributeName;
                        id v56 = v69;
                        id v57 = NSBackgroundColorAttributeName;
                        id v58 = v70;
                        sub_10007BE60(inited);
                        type metadata accessor for Key(0);
                        sub_100066270(&qword_1001591F0, type metadata accessor for Key);
                        Class isa = sub_100109B60().super.isa;
                        swift_bridgeObjectRelease();
                        [v51 addAttributes:isa range:0 length:[v51 length]];

                        [v51 fixAttributesInRange:0, [v51 length]];
                        id v33 = v51;
                        uint64_t v60 = (void *)sub_1000CD8BC(a9, v51, 0, 8.0);

                        if (v60)
                        {
                          [v68 setAttributedStringResult:v60];

LABEL_36:
                          swift_unknownObjectRelease();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          return (id)swift_bridgeObjectRelease();
                        }
                        if (qword_100158A38 == -1)
                        {
LABEL_26:
                          uint64_t v61 = sub_100109960();
                          sub_100007CB8(v61, (uint64_t)qword_10015B7E0);
                          swift_errorRetain();
                          swift_errorRetain();
                          uint64_t v62 = sub_100109940();
                          os_log_type_t v63 = sub_10010A2D0();
                          if (os_log_type_enabled(v62, v63))
                          {
                            long long v64 = (uint8_t *)swift_slowAlloc();
                            uint64_t v65 = (void *)swift_slowAlloc();
                            *(_DWORD *)long long v64 = 138412290;
                            if (a2)
                            {
                              swift_errorRetain();
                              uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
                              *(void *)&long long aBlock = v66;
                              sub_10010A730();
                            }
                            else
                            {
                              *(void *)&long long aBlock = 0;
                              sub_10010A730();
                              uint64_t v66 = 0;
                            }
                            *uint64_t v65 = v66;
                            swift_errorRelease();
                            swift_errorRelease();
                            _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed to normalize pasted text: %@", v64, 0xCu);
                            sub_100004BD4((uint64_t *)&unk_100159D70);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {
                            swift_errorRelease();
                            swift_errorRelease();
                          }

                          [v68 setNoResult];
                          goto LABEL_36;
                        }
LABEL_43:
                        swift_once();
                        goto LABEL_26;
                      }
LABEL_42:
                      __break(1u);
                      goto LABEL_43;
                    }
LABEL_41:
                    __break(1u);
                    goto LABEL_42;
                  }
LABEL_40:
                  __break(1u);
                  goto LABEL_41;
                }
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
            }
            __break(1u);
            goto LABEL_39;
          }
        }
        else
        {
          long long aBlock = 0u;
          long long v75 = 0u;
        }
      }
      else
      {
        long long aBlock = 0u;
        long long v75 = 0u;
        swift_unknownObjectRetain();
      }
      sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
      goto LABEL_17;
    }
  }
  if (qword_100158A38 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100109960();
  sub_100007CB8(v23, (uint64_t)qword_10015B7E0);
  swift_errorRetain();
  swift_errorRetain();
  id v24 = sub_100109940();
  os_log_type_t v25 = sub_10010A2D0();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    id v27 = (void *)swift_slowAlloc();
    *(_DWORD *)id v26 = 138412290;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long aBlock = v28;
      sub_10010A730();
    }
    else
    {
      *(void *)&long long aBlock = 0;
      sub_10010A730();
      uint64_t v28 = 0;
    }
    *id v27 = v28;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to load text for pasting: %@", v26, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return [a3 setNoResult];
}

id sub_100063B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v9 - 8);
  char v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000248D8(a1, (uint64_t)v16, &qword_10015A8A0);
  if (v17)
  {
    uint64_t v12 = sub_1001091E0();
    int v13 = swift_dynamicCast();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, v13 ^ 1u, 1, v12);
  }
  else
  {
    sub_10000B9CC((uint64_t)v16, &qword_10015A8A0);
    uint64_t v12 = sub_1001091E0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  sub_1001091E0();
  int v14 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
  id result = (id)sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_100159D40);
  if (!v14) {
    return [a5 removeAttribute:NSLinkAttributeName range:a2, a3];
  }
  return result;
}

uint64_t sub_100063D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1000248D8(a1, (uint64_t)v10, &qword_10015A8A0);
  if (!v11) {
    return sub_10000B9CC((uint64_t)v10, &qword_10015A8A0);
  }
  sub_10001CB98(0, &qword_10015B8F8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {

    return (uint64_t)[a5 deleteCharactersInRange:a2, a3];
  }
  return result;
}

void sub_100063DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1000248D8(a1, (uint64_t)&v17, &qword_10015A8A0);
  if (!v19)
  {
    sub_10000B9CC((uint64_t)&v17, &qword_10015A8A0);
    goto LABEL_5;
  }
  sub_10001CB98(0, &qword_10015B8C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unint64_t v10 = 0;
    goto LABEL_6;
  }
  id v8 = [v16 fontDescriptor];

  unsigned __int8 v9 = [v8 symbolicTraits];
  unint64_t v10 = v9 & 3;
LABEL_6:
  id v11 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v16 = v11;
  long long v17 = xmmword_100123780;
  char v18 = 0;
  sub_10004329C(&v16, (uint64_t *)&v17, &v15);
  uint64_t v12 = v15;
  id v16 = v15;
  long long v17 = v10;
  char v18 = 0;
  sub_10004329C(&v16, (uint64_t *)&v17, &v15);

  int v13 = v15;
  id v14 = [self fontWithDescriptor:v15 size:0.0];

  [a5 addAttribute:NSFontAttributeName value:v14 range:a2, a3];
}

void sub_100063FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, void *a8)
{
  sub_1000248D8(a1, (uint64_t)v21, &qword_10015A8A0);
  if (v22)
  {
    sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
    if (swift_dynamicCast())
    {
      [v20 mutableCopy];
      sub_10010A7B0();

      swift_unknownObjectRelease();
      sub_10001CB98(0, &qword_10015B8F0);
      if (swift_dynamicCast())
      {
        id v12 = v20;
        goto LABEL_7;
      }
    }
  }
  else
  {
    sub_10000B9CC((uint64_t)v21, &qword_10015A8A0);
  }
  id v12 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v12 setParagraphSpacingBefore:8.0];
  sub_1000DB240();
LABEL_7:
  sub_10001CB98(0, &qword_10015B8E8);
  id v13 = v12;
  swift_bridgeObjectRetain();
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v13 setTextLists:isa];

  swift_beginAccess();
  if (*a7 != 1)
  {

LABEL_13:
    long long v17 = v13;
    goto LABEL_14;
  }
  id v15 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v15 setParagraphStyle:v13];
  if (qword_1001588C8 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_10016DC88 + 4.0 + 0.1;
  [v15 setFirstLineHeadIndent:v16];
  [v15 setHeadIndent:v16];

  [v15 mutableCopy];
  sub_10010A7B0();
  swift_unknownObjectRelease();
  sub_10001CB98(0, &qword_10015B8F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_13;
  }

  long long v17 = v19;
LABEL_14:
  id v18 = v17;
  [a8 addAttribute:NSParagraphStyleAttributeName value:v18 range:a2, a3];
}

id sub_100064308(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001091E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000248D8(a1, (uint64_t)v10, (uint64_t *)&unk_100159D40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000B9CC((uint64_t)v10, (uint64_t *)&unk_100159D40);
    if (qword_100158A38 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_100109960();
    sub_100007CB8(v15, (uint64_t)qword_10015B7E0);
    swift_errorRetain();
    swift_errorRetain();
    double v16 = sub_100109940();
    os_log_type_t v17 = sub_10010A2D0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)id v18 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v39 = v20;
        sub_10010A730();
      }
      else
      {
        *(void *)&long long v39 = 0;
        sub_10010A730();
        uint64_t v20 = 0;
      }
      *uint64_t v19 = v20;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to load URL for pasting: %@", v18, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return [a3 setNoResult];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1001091D0();
    sub_100004BD4(&qword_10015B8D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100122220;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v22 = self;
    v36[0] = a3;
    uint64_t v23 = (void *)v22;
    id v24 = NSFontAttributeName;
    id v25 = [v23 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
    id v38 = v25;
    long long v39 = xmmword_10013FF78;
    char v40 = 0;
    sub_10004329C(&v38, (uint64_t *)&v39, &v37);

    id v26 = v37;
    id v27 = [self fontWithDescriptor:v37 size:0.0];

    uint64_t v28 = sub_10001CB98(0, &qword_10015B8C0);
    *(void *)(inited + 40) = v27;
    *(void *)(inited + 64) = v28;
    *(void *)(inited + 72) = NSForegroundColorAttributeName;
    *(void *)(inited + 104) = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
    *(void *)(inited + 80) = a4;
    id v29 = NSForegroundColorAttributeName;
    id v30 = a4;
    sub_10007BE60(inited);
    id v31 = objc_allocWithZone((Class)NSAttributedString);
    NSString v32 = sub_100109CF0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100066270(&qword_1001591F0, type metadata accessor for Key);
    Class isa = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    id v34 = [v31 initWithString:v32 attributes:isa];

    [v36[0] setAttributedStringResult:v34];
    return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

Class sub_100064914(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  type metadata accessor for Key(0);
  sub_100066270(&qword_1001591F0, type metadata accessor for Key);
  sub_100109B70();
  swift_retain();
  id v4 = a2;
  uint64_t v5 = v3();
  swift_release();
  swift_bridgeObjectRelease();

  if (v5)
  {
    v6.super.Class isa = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }

  return v6.super.isa;
}

uint64_t sub_100064B50(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v15 = *(uint64_t (**)(void *, id, double, double, double, double, double))(a1 + 32);
  id v16 = a2;
  id v17 = a3;
  char v18 = v15(a2, v17, a4, a5, a6, a7, a8);

  return v18 & 1;
}

double *sub_100064BF8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004BD4(&qword_10015B918);
  id v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return (double *)v4;
}

uint64_t sub_100064C60()
{
  unint64_t v0 = sub_100109EA0();
  uint64_t v4 = sub_100064CE0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100064CE0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100064E38(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          uint64_t v11 = sub_100064BF8(v9, 0),
          unint64_t v12 = sub_100064F38((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_100109DA0();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_100109DA0();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_10010A980();
LABEL_4:

  return sub_100109DA0();
}

uint64_t sub_100064E38(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100101A3C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100101A3C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_100064F38(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_100101A3C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_100109E50();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_10010A980();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_100101A3C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_100109E20();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10006514C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_10006522C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_10010A8C0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_10010A980();
      }
      unsigned int v5 = sub_10010A990();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_10006522C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1000652CC(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_10006533C(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1000652CC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_100101A3C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_10006533C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      _OWORD v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_10010A980();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return _StringGuts.foreignScalarAlign(_:)();
    }
  }
  return result;
}

uint64_t sub_100065460(uint64_t a1, uint64_t a2)
{
  return sub_100066024(a2);
}

uint64_t sub_100065468(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100065478()
{
  return swift_release();
}

void sub_100065480()
{
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_currentSelectedColor] = 0;
  v0[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_isShowingFormattingController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_journalEntry] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_topAccessoryView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_blockQuoteLayerView;
  type metadata accessor for BlockQuoteLayerView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v0[OBJC_IVAR____TtC21JournalShareExtension14CanvasTextView_removeListsNextClear] = 0;

  sub_10010AA60();
  __break(1u);
}

BOOL sub_100065548(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    goto LABEL_10;
  }
  uint64_t v2 = NSParagraphStyleAttributeName;
  uint64_t v3 = sub_1000FCC0C(v2);
  if ((v4 & 1) == 0)
  {
    long long v13 = 0u;
    long long v14 = 0u;

    goto LABEL_10;
  }
  sub_100037A20(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v13);

  if (!*((void *)&v14 + 1))
  {
LABEL_10:
    sub_10000B9CC((uint64_t)&v13, &qword_10015A8A0);
    return 0;
  }
  sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  [v12 firstLineHeadIndent];
  double v6 = fmod(v5, 1.0) + -0.1;
  [v12 headIndent];
  long double v8 = v7;

  double v9 = fmod(v8, 1.0) + -0.1;
  BOOL v10 = fabs(v6) < 0.01;
  return fabs(v9) < 0.01 && v10;
}

void *sub_10006569C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_12;
  }
  uint64_t v2 = NSForegroundColorAttributeName;
  uint64_t v3 = sub_1000FCC0C();
  if ((v4 & 1) == 0)
  {
    long long v12 = 0u;
    long long v13 = 0u;

    goto LABEL_12;
  }
  sub_100037A20(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v12);

  if (!*((void *)&v13 + 1))
  {
LABEL_12:
    sub_10000B9CC((uint64_t)&v12, &qword_10015A8A0);
    return 0;
  }
  sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  long double v5 = v11;
  if (qword_100158A48 != -1) {
    swift_once();
  }
  id v6 = (id)qword_10015B800;
  char v7 = sub_10010A6A0();

  if ((v7 & 1) != 0
    || (id v8 = [self blackColor],
        char v9 = sub_10010A6A0(),
        v8,
        (v9 & 1) != 0))
  {

    return 0;
  }
  return v5;
}

id sub_10006581C()
{
  sub_100004BD4(qword_100159E08);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001235F0;
  sub_10001CB98(0, &qword_10015B900);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100123790;
  sub_10001CB98(0, (unint64_t *)&unk_10015B908);
  *(void *)(v1 + 32) = sub_10010A580();
  *(void *)(v1 + 40) = sub_10010A580();
  *(void *)(v1 + 48) = sub_10010A580();
  *(void *)(v1 + 56) = sub_10010A580();
  sub_100109F50();
  uint64_t v2 = sub_10010A590();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v2;
  sub_100109F50();
  id v3 = objc_allocWithZone((Class)UITextFormattingViewControllerConfiguration);
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithGroups:isa];

  return v5;
}

void sub_1000659B0(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 textColor];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v1 backgroundColor];
    if (v6)
    {
      id v44 = v6;
      uint64_t v7 = swift_allocObject();
      *(unsigned char *)(v7 + 16) = 0;
      id v8 = [v1 typingAttributes];
      type metadata accessor for Key(0);
      sub_100066270(&qword_1001591F0, type metadata accessor for Key);
      uint64_t v43 = sub_100109B70();

      id v45 = [v1 traitCollection];
      char v9 = NSParagraphStyleAttributeName;
      id v10 = [v1 typingAttributes];
      uint64_t v11 = sub_100109B70();

      if (*(void *)(v11 + 16) && (uint64_t v12 = sub_1000FCC0C(v9), (v13 & 1) != 0))
      {
        sub_100037A20(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&aBlock);

        swift_bridgeObjectRelease();
        if (*((void *)&v48 + 1))
        {
          sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
          long long v14 = v44;
          uint64_t v15 = v7;
          if (swift_dynamicCast())
          {
            [v46 firstLineHeadIndent];
            double v17 = fmod(v16, 1.0) + -0.1;
            [v46 headIndent];
            long double v19 = v18;

            double v20 = fmod(v19, 1.0) + -0.1;
            BOOL v21 = fabs(v17) < 0.01;
            if (fabs(v20) >= 0.01) {
              BOOL v21 = 0;
            }
            *(unsigned char *)(v7 + 16) = v21;
          }
          goto LABEL_12;
        }
      }
      else
      {
        long long aBlock = 0u;
        long long v48 = 0u;

        swift_bridgeObjectRelease();
      }
      sub_10000B9CC((uint64_t)&aBlock, &qword_10015A8A0);
      long long v14 = v44;
      uint64_t v15 = v7;
LABEL_12:
      uint64_t v22 = v43;
      id v23 = [a1 itemProvider:v43];
      sub_10001CB98(0, &qword_10015B6F0);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      unsigned int v25 = [v23 canLoadObjectOfClass:ObjCClassFromMetadata];

      if (v25)
      {
        id v26 = [a1 itemProvider];
        unint64_t v27 = (void *)swift_allocObject();
        v27[2] = a1;
        v27[3] = v22;
        v27[4] = v2;
        v27[5] = v15;
        v27[6] = v5;
        v27[7] = v14;
        v27[8] = v45;
        id v49 = sub_100066368;
        uint64_t v50 = v27;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v48 = sub_10005B840;
        *((void *)&v48 + 1) = &unk_1001427E0;
        uint64_t v28 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        id v29 = v2;
        swift_retain();
        id v30 = v5;
        id v31 = v14;
        id v32 = v45;
        swift_release();
        id v33 = [v26 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v28];

        _Block_release(v28);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v34 = [a1 itemProvider];
        sub_1001091E0();
        sub_100066270((unint64_t *)&unk_10015A670, (void (*)(uint64_t))&type metadata accessor for URL);
        int v35 = sub_10010A310();

        if (v35)
        {
          id v36 = [a1 itemProvider];
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = a1;
          *(void *)(v37 + 24) = v5;
          swift_unknownObjectRetain();
          id v5 = v5;
          id v38 = (void *)sub_10010A300();
          swift_release();
        }
        else
        {
          if (qword_100158A38 != -1) {
            swift_once();
          }
          uint64_t v39 = sub_100109960();
          sub_100007CB8(v39, (uint64_t)qword_10015B7E0);
          char v40 = sub_100109940();
          os_log_type_t v41 = sub_10010A2B0();
          if (os_log_type_enabled(v40, v41))
          {
            unint64_t v42 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v42 = 0;
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "Paste ignored, not text or URL", v42, 2u);
            swift_slowDealloc();
          }

          [a1 setNoResult];
        }
        swift_release();
      }
      return;
    }
  }

  [a1 setNoResult];
}

uint64_t sub_100066024(uint64_t a1)
{
  type metadata accessor for NSUnderlineStyle(0);
  uint64_t v3 = v2;
  uint64_t v20 = v2;
  *(void *)&long long v19 = 0;
  sub_10002426C(&v19, v18);
  swift_bridgeObjectRetain();
  id v4 = NSUnderlineStyleAttributeName;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = a1;
  sub_1000FEF90(v18, v4, isUniquelyReferenced_nonNull_native);
  uint64_t v6 = v21;

  swift_bridgeObjectRelease();
  uint64_t v20 = v3;
  *(void *)&long long v19 = 0;
  sub_10002426C(&v19, v18);
  uint64_t v7 = NSStrikethroughStyleAttributeName;
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_1000FEF90(v18, v7, v8);
  uint64_t v9 = v6;
  uint64_t v21 = v6;

  swift_bridgeObjectRelease();
  uint64_t v10 = qword_100158A40;
  uint64_t v11 = NSFontAttributeName;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_10015B7F8;
  if (qword_10015B7F8)
  {
    uint64_t v20 = sub_10001CB98(0, &qword_10015B8C0);
    *(void *)&long long v19 = v12;
    sub_10002426C(&v19, v18);
    id v13 = v12;
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000FEF90(v18, v11, v14);
    uint64_t v21 = v9;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000CCFEC((uint64_t)v11, &v19);

    sub_10000B9CC((uint64_t)&v19, &qword_10015A8A0);
  }
  uint64_t v15 = NSLinkAttributeName;
  sub_1000CCFEC((uint64_t)v15, &v19);

  sub_10000B9CC((uint64_t)&v19, &qword_10015A8A0);
  long double v16 = NSParagraphStyleAttributeName;
  sub_1000CCFEC((uint64_t)v16, &v19);

  sub_10000B9CC((uint64_t)&v19, &qword_10015A8A0);
  return v21;
}

uint64_t sub_100066260()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100066270(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000662B8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000662F8(uint64_t a1, uint64_t a2)
{
  return sub_100064308(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100066300()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

id sub_100066368(uint64_t a1, uint64_t a2)
{
  return sub_100062EF4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_10006639C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000663D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063B5C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1000663DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000663EC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100066414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063D24(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_10006641C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10006642C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100063DE4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_100066434()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100066444()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100066484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100063FC0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char **)(v4 + 32), *(void **)(v4 + 40));
}

uint64_t sub_100066490()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000664A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100061AB0(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1000664A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000664B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000CC1C4(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1000664C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000664D0()
{
  sub_100061174(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000664FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100066534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100061D54(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_10006653C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006654C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006655C()
{
  return sub_100060800(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100066588()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000665C0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100066608(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  sub_10005F644(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_100066614()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100066624()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100066634(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  return sub_10007FF8C(a3, a4, a5, a6, a1, a2, *(CGRect **)(v6 + 16));
}

uint64_t sub_10006663C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006664C()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100066678()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100066688()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100066698()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000666A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000666B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000666C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000666DC(void *a1)
{
}

double sub_100066768()
{
  if (qword_1001589A0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10016DD98;
  qword_10015B990 = qword_10016DD98;
  return result;
}

double sub_1000667BC()
{
  if (qword_100158A50 != -1) {
    swift_once();
  }
  double result = -4.0 - *(double *)&qword_10015B990;
  *(double *)&qword_10015B998 = -4.0 - *(double *)&qword_10015B990;
  return result;
}

void sub_100066900()
{
  id v1 = [v0 textLineFragments];
  sub_100067198();
  unint64_t v2 = sub_100109F30();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  CGFloat x = CGRectNull.origin.x;
  CGFloat y = CGRectNull.origin.y;
  CGFloat width = CGRectNull.size.width;
  CGFloat height = CGRectNull.size.height;
  if (!v3)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (v3 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_10010A920();
      }
      else {
        id v9 = *(id *)(v2 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      [v9 typographicBounds];
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      v19.origin.CGFloat x = x;
      v19.origin.CGFloat y = y;
      v19.size.CGFloat width = width;
      v19.size.CGFloat height = height;
      if (!CGRectIsNull(v19))
      {
        v20.origin.CGFloat x = x;
        v20.origin.CGFloat y = y;
        v20.size.CGFloat width = width;
        v20.size.CGFloat height = height;
        v22.origin.CGFloat x = v12;
        v22.origin.CGFloat y = v14;
        v22.size.CGFloat width = v16;
        v22.size.CGFloat height = v18;
        CGRect v21 = CGRectUnion(v20, v22);
        CGFloat v12 = v21.origin.x;
        CGFloat v14 = v21.origin.y;
        CGFloat v16 = v21.size.width;
        CGFloat v18 = v21.size.height;
      }

      ++v8;
      CGFloat x = v12;
      CGFloat y = v14;
      CGFloat width = v16;
      CGFloat height = v18;
    }
    while (v3 != v8);
    goto LABEL_12;
  }
  __break(1u);
}

double sub_100066AC4()
{
  id v1 = [self mainScreen];
  [v1 scale];

  sub_100066900();
  sub_100066900();
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_prevHasBlockQuote) == 1)
  {
    if (*((unsigned char *)v0 + OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_nextHasBlockQuote) == 1)
    {
      v3.receiver = v0;
      v3.super_class = (Class)type metadata accessor for BlockQuoteFragment();
      [super renderingSurfaceBounds];
    }
    else
    {
      sub_100066900();
      sub_100066900();
    }
  }
  else if (*((unsigned char *)v0 + OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_nextHasBlockQuote) == 1)
  {
    v4.receiver = v0;
    v4.super_class = (Class)type metadata accessor for BlockQuoteFragment();
    [super renderingSurfaceBounds];
    sub_100066900();
  }
  if (qword_100158A58 != -1) {
    swift_once();
  }
  return *(double *)&qword_10015B998;
}

void sub_100066CEC(CGContext *a1, double a2, double a3)
{
  objc_super v4 = v3;
  uint64_t v8 = sub_100109660();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGContextSaveGState(a1);
  uint64_t v12 = 12;
  if (v3[OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_nextHasBlockQuote]) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 3;
  if (!v3[OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_nextHasBlockQuote]) {
    uint64_t v13 = -1;
  }
  if (v3[OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_prevHasBlockQuote]) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  double v15 = sub_100066AC4();
  id v18 = [self bezierPathWithRoundedRect:v14 byRoundingCorners:v15 cornerRadii:v16 4.0 v17 2.0 2.0];
  CGRect v19 = (const CGPath *)[v18 CGPath];

  CGContextAddPath(a1, v19);
  if (qword_100158938 != -1) {
    swift_once();
  }
  id v20 = [(id)qword_10016DD30 colorWithAlphaComponent:0.45];
  CGRect v21 = *(void **)&v4[OBJC_IVAR____TtC21JournalShareExtension18BlockQuoteFragment_customColor];
  if (v21)
  {
    id v22 = v21;
    id v23 = [v22 colorWithAlphaComponent:0.45];

    id v20 = v23;
  }
  id v24 = (CGColor *)[v20 CGColor];
  CGContextSetFillColorWithColor(a1, v24);

  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for CGPathFillRule.winding(_:), v8);
  sub_10010A240();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  CGContextRestoreGState(a1);
  unsigned int v25 = (objc_class *)type metadata accessor for BlockQuoteFragment();
  v26.receiver = v4;
  v26.super_class = v25;
  -[CGContext drawAtPoint:inContext:](&v26, "drawAtPoint:inContext:", a1, a2, a3);
}

id sub_100067130()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlockQuoteFragment();
  return [super dealloc];
}

uint64_t type metadata accessor for BlockQuoteFragment()
{
  return self;
}

unint64_t sub_100067198()
{
  unint64_t result = qword_10015B9E0;
  if (!qword_10015B9E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015B9E0);
  }
  return result;
}

uint64_t sub_1000671D8()
{
  return swift_deallocClassInstance();
}

uint64_t _s17MOLocationShifterCMa()
{
  return self;
}

id sub_100067234(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for JurassicShareRootController();
  id v6 = [super initWithNibName:v5 bundle:a3];

  sub_100004BD4(qword_100159E08);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001235F0;
  type metadata accessor for JurassicShareViewController();
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v9 = v6;
  *(void *)(v7 + 32) = [v8 init];
  sub_100109F50();
  sub_10001CB98(0, (unint64_t *)&unk_10015BAD0);
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v9 setViewControllers:isa animated:0];

  return v9;
}

void sub_100067438()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for JurassicShareRootController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];

    id v4 = [v0 navigationController];
    if (v4)
    {
      NSString v5 = v4;
      id v6 = [v4 presentationController];

      if (v6)
      {
        [v6 setDelegate:v0];
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100067580(char a1)
{
  uint64_t v2 = sub_100109A70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
    double v11 = (void *)sub_10010A410();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _OWORD aBlock[4] = sub_100067AE8;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001DEE8;
    void aBlock[3] = &unk_100142E20;
    uint64_t v13 = _Block_copy(aBlock);
    swift_release();
    sub_100109A90();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000599F4();
    sub_100004BD4((uint64_t *)&unk_10015A5E0);
    sub_100019AF4();
    sub_10010A7D0();
    sub_10010A420();
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

void sub_100067818()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v2 = [Strong extensionContext];

    if (v2)
    {
      sub_100109D30();
      id v3 = objc_allocWithZone((Class)NSError);
      NSString v4 = sub_100109CF0();
      swift_bridgeObjectRelease();
      id v5 = [v3 initWithDomain:v4 code:3072 userInfo:0];

      uint64_t v6 = (void *)sub_100108FB0();
      [v2 cancelRequestWithError:v6];
    }
  }
}

id sub_100067A18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JurassicShareRootController();
  return [super dealloc];
}

uint64_t type metadata accessor for JurassicShareRootController()
{
  return self;
}

uint64_t sub_100067A70()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100067AA8(char a1)
{
  return sub_100067580(a1);
}

uint64_t sub_100067AB0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100067AE8()
{
}

uint64_t sub_100067AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100067B00()
{
  return swift_release();
}

unint64_t sub_100067B08(char a1)
{
  unint64_t result = 0x6D614E6563616C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 2037672291;
      break;
    case 2:
      unint64_t result = 0x6C50664F65707974;
      break;
    case 3:
      unint64_t result = 0x6174537469736976;
      break;
    case 4:
      unint64_t result = 0x646E457469736976;
      break;
    case 5:
      unint64_t result = 0x4464657461657263;
      break;
    case 6:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 8:
      unint64_t result = 0x746144656C797473;
      break;
    case 9:
      unint64_t result = 0x446D65744970616DLL;
      break;
    case 10:
      unint64_t result = 0x6B726F577369;
      break;
    case 11:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100067CC8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015BC28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_10006A674();
  sub_10010AE60();
  LOBYTE(v11) = 0;
  sub_10010ABC0();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_10010ABC0();
    LOBYTE(v11) = 2;
    sub_10010ABC0();
    uint64_t v9 = _s10VisitAssetC9VisitDataVMa(0);
    LOBYTE(v11) = 3;
    sub_100109460();
    sub_10006A62C(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v11) = 4;
    sub_10010AC00();
    LOBYTE(v11) = 5;
    sub_10010AC00();
    LOBYTE(v11) = 6;
    sub_10010ABE0();
    LOBYTE(v11) = 7;
    sub_10010ABE0();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 48));
    char v12 = 8;
    sub_100045CC0();
    sub_10010AC00();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 52));
    char v12 = 9;
    sub_10010AC00();
    LOBYTE(v11) = 10;
    sub_10010ABD0();
    LOBYTE(v11) = 11;
    sub_10010ABE0();
    LOBYTE(v11) = 12;
    sub_10010ABE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000680CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v39 - v9;
  __chkstk_darwin(v8);
  char v12 = (char *)&v39 - v11;
  uint64_t v43 = sub_100004BD4(&qword_10015BC18);
  uint64_t v13 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  double v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v46 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  __chkstk_darwin(v46);
  id v44 = a1;
  id v45 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B718(a1, a1[3]);
  sub_10006A674();
  unint64_t v42 = v15;
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)v44);
  }
  uint64_t v17 = (uint64_t)v12;
  uint64_t v40 = v13;
  LOBYTE(v47) = 0;
  uint64_t v18 = sub_10010AB20();
  CGRect v19 = v46;
  id v20 = v45;
  *id v45 = v18;
  v20[1] = v21;
  LOBYTE(v47) = 1;
  void v20[2] = sub_10010AB20();
  v20[3] = v22;
  LOBYTE(v47) = 2;
  v20[4] = sub_10010AB20();
  v20[5] = v23;
  sub_100109460();
  LOBYTE(v47) = 3;
  uint64_t v39 = sub_10006A62C(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_100012FA4(v17, (uint64_t)v20 + v19[7]);
  LOBYTE(v47) = 4;
  sub_10010AB60();
  sub_100012FA4((uint64_t)v10, (uint64_t)v20 + v19[8]);
  LOBYTE(v47) = 5;
  sub_10010AB60();
  sub_100012FA4((uint64_t)v7, (uint64_t)v20 + v19[9]);
  LOBYTE(v47) = 6;
  uint64_t v24 = sub_10010AB40();
  unsigned int v25 = (char *)v20 + v19[10];
  *(void *)unsigned int v25 = v24;
  v25[8] = v26 & 1;
  LOBYTE(v47) = 7;
  uint64_t v27 = sub_10010AB40();
  uint64_t v28 = (char *)v20 + v19[11];
  *(void *)uint64_t v28 = v27;
  v28[8] = v29 & 1;
  char v48 = 8;
  sub_100045AA0();
  sub_10010AB60();
  *(_OWORD *)((char *)v20 + v19[12]) = v47;
  char v48 = 9;
  sub_10010AB60();
  *(_OWORD *)((char *)v45 + v46[13]) = v47;
  LOBYTE(v47) = 10;
  *((unsigned char *)v45 + v46[14]) = sub_10010AB30();
  LOBYTE(v47) = 11;
  uint64_t v30 = sub_10010AB40();
  id v31 = (char *)v45 + v46[15];
  *(void *)id v31 = v30;
  v31[8] = v32 & 1;
  LOBYTE(v47) = 12;
  uint64_t v33 = sub_10010AB40();
  char v35 = v34;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
  uint64_t v36 = (uint64_t)v45;
  uint64_t v37 = (char *)v45 + v46[16];
  *(void *)uint64_t v37 = v33;
  v37[8] = v35 & 1;
  sub_10006A6C8(v36, v41);
  sub_10000B7B0((uint64_t)v44);
  return sub_10006A72C(v36);
}

unint64_t sub_100068890()
{
  return sub_100067B08(*v0);
}

uint64_t sub_100068898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006BF10(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000688C0(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1000688CC(uint64_t a1)
{
  unint64_t v2 = sub_10006A674();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100068908(uint64_t a1)
{
  unint64_t v2 = sub_10006A674();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100068944@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000680CC(a1, a2);
}

uint64_t sub_10006895C(void *a1)
{
  return sub_100067CC8(a1);
}

uint64_t sub_100068978()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A3A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VisitAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100027F48((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_10015A3A0);
    return 0;
  }
  sub_10006BC10((uint64_t)v3, (uint64_t)v7);
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = *(void *)v7;
  *(_OWORD *)(inited + 16) = xmmword_100122220;
  uint64_t v9 = *((void *)v7 + 3);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 8);
  *(void *)(inited + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100042280(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  sub_10006A72C((uint64_t)v7);
  return v10;
}

uint64_t sub_100068BA0()
{
  return swift_release();
}

id sub_100068BB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VisitAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100068BF8()
{
  return _s10VisitAssetCMa(0);
}

uint64_t _s10VisitAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015BB08);
}

uint64_t sub_100068C20()
{
  return swift_updateClassMetadata2();
}

void *sub_100068C64(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *((void *)a2 + 5);
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = &a2[v10];
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v12 = sub_100109460();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)v4 + v17;
    CGRect v19 = &a2[v17];
    if (v14(&a2[v17], 1, v12))
    {
      uint64_t v20 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = &a2[v21];
    if (v14(&a2[v21], 1, v12))
    {
      uint64_t v24 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v22, v23, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    }
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v4 + v25;
    uint64_t v28 = &a2[v25];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    char v29 = (char *)v4 + v26;
    uint64_t v30 = &a2[v26];
    *(void *)char v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[12];
    char v32 = (char *)v4 + v31;
    uint64_t v33 = &a2[v31];
    unint64_t v34 = *((void *)v33 + 1);
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)char v32 = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v35 = *(void *)v33;
      sub_100006F28(*(void *)v33, *((void *)v33 + 1));
      *(void *)char v32 = v35;
      *((void *)v32 + 1) = v34;
    }
    uint64_t v36 = a3[13];
    uint64_t v37 = (char *)v4 + v36;
    id v38 = &a2[v36];
    unint64_t v39 = *((void *)v38 + 1);
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = *(void *)v38;
      sub_100006F28(*(void *)v38, *((void *)v38 + 1));
      *(void *)uint64_t v37 = v40;
      *((void *)v37 + 1) = v39;
    }
    uint64_t v41 = a3[15];
    *((unsigned char *)v4 + a3[14]) = a2[a3[14]];
    unint64_t v42 = (char *)v4 + v41;
    uint64_t v43 = &a2[v41];
    *(void *)unint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = a3[16];
    id v45 = (char *)v4 + v44;
    id v46 = &a2[v44];
    *(void *)id v45 = *(void *)v46;
    v45[8] = v46[8];
  }
  return v4;
}

uint64_t sub_100069044(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[8];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[12]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    uint64_t result = sub_100007084(*v11, v12);
  }
  uint64_t v13 = (uint64_t *)(a1 + a2[13]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15)
  {
    uint64_t v15 = *v13;
    return sub_100007084(v15, v14);
  }
  return result;
}

void *sub_1000691F8(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = &a2[v8];
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  CGRect v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[12];
  char v29 = (char *)a1 + v28;
  uint64_t v30 = &a2[v28];
  unint64_t v31 = *((void *)v30 + 1);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)char v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_100006F28(*(void *)v30, *((void *)v30 + 1));
    *(void *)char v29 = v32;
    *((void *)v29 + 1) = v31;
  }
  uint64_t v33 = a3[13];
  unint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = &a2[v33];
  unint64_t v36 = *((void *)v35 + 1);
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    sub_100006F28(*(void *)v35, *((void *)v35 + 1));
    *(void *)unint64_t v34 = v37;
    *((void *)v34 + 1) = v36;
  }
  uint64_t v38 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  *(void *)unint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[16];
  unint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = &a2[v41];
  *(void *)unint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  return a1;
}

char *sub_100069580(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[10];
  uint64_t v28 = &a1[v27];
  char v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[12];
  unint64_t v36 = (uint64_t *)&a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  unint64_t v38 = *(void *)((char *)a2 + v35 + 8);
  if (*(void *)&a1[v35 + 8] >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v39 = *v37;
      sub_100006F28(v39, v38);
      *unint64_t v36 = v39;
      v36[1] = v38;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v38 >> 60 == 15)
  {
    sub_100069AD4((uint64_t)v36);
LABEL_24:
    *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    goto LABEL_26;
  }
  uint64_t v40 = *v37;
  sub_100006F28(v40, v38);
  uint64_t v41 = *v36;
  unint64_t v42 = v36[1];
  *unint64_t v36 = v40;
  v36[1] = v38;
  sub_100007084(v41, v42);
LABEL_26:
  uint64_t v43 = a3[13];
  uint64_t v44 = (uint64_t *)&a1[v43];
  id v45 = (void *)((char *)a2 + v43);
  unint64_t v46 = *(void *)((char *)a2 + v43 + 8);
  if (*(void *)&a1[v43 + 8] >> 60 != 15)
  {
    if (v46 >> 60 != 15)
    {
      uint64_t v48 = *v45;
      sub_100006F28(v48, v46);
      uint64_t v49 = *v44;
      unint64_t v50 = v44[1];
      *uint64_t v44 = v48;
      v44[1] = v46;
      sub_100007084(v49, v50);
      goto LABEL_33;
    }
    sub_100069AD4((uint64_t)v44);
    goto LABEL_31;
  }
  if (v46 >> 60 == 15)
  {
LABEL_31:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_33;
  }
  uint64_t v47 = *v45;
  sub_100006F28(v47, v46);
  *uint64_t v44 = v47;
  v44[1] = v46;
LABEL_33:
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v51 = a3[15];
  id v52 = &a1[v51];
  id v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)id v52 = v54;
  uint64_t v55 = a3[16];
  id v56 = &a1[v55];
  id v57 = (char *)a2 + v55;
  uint64_t v58 = *(void *)v57;
  v56[8] = v57[8];
  *(void *)id v56 = v58;
  return a1;
}

uint64_t sub_100069AD4(uint64_t a1)
{
  return a1;
}

_OWORD *sub_100069B28(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  a1[2] = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  int v24 = (char *)a1 + v22;
  int v25 = &a2[v22];
  *(void *)int v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)&a2[v28];
  uint64_t v29 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = a3[16];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  v33[8] = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  return a1;
}

char *sub_100069E1C(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100109460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  int v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[9];
  int v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v14(&a1[v24], 1, v12);
  int v28 = v14(v26, 1, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
LABEL_18:
    uint64_t v29 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v25, v26, v12);
LABEL_19:
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = (char *)a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = &a1[v31];
  uint64_t v35 = (char *)a2 + v31;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = a3[12];
  uint64_t v37 = (uint64_t)&a1[v36];
  unint64_t v38 = (char *)a2 + v36;
  unint64_t v39 = *(void *)&a1[v36 + 8];
  if (v39 >> 60 == 15)
  {
LABEL_22:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    goto LABEL_24;
  }
  unint64_t v40 = *((void *)v38 + 1);
  if (v40 >> 60 == 15)
  {
    sub_100069AD4(v37);
    goto LABEL_22;
  }
  uint64_t v41 = *(void *)v37;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v40;
  sub_100007084(v41, v39);
LABEL_24:
  uint64_t v42 = a3[13];
  uint64_t v43 = (uint64_t *)&a1[v42];
  uint64_t v44 = (void *)((char *)a2 + v42);
  unint64_t v45 = *(void *)&a1[v42 + 8];
  if (v45 >> 60 != 15)
  {
    unint64_t v46 = v44[1];
    if (v46 >> 60 != 15)
    {
      uint64_t v47 = *v43;
      *uint64_t v43 = *v44;
      v43[1] = v46;
      sub_100007084(v47, v45);
      goto LABEL_29;
    }
    sub_100069AD4((uint64_t)v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
LABEL_29:
  uint64_t v48 = a3[15];
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v49 = &a1[v48];
  unint64_t v50 = (char *)a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = a3[16];
  id v52 = &a1[v51];
  id v53 = (char *)a2 + v51;
  *(void *)id v52 = *(void *)v53;
  v52[8] = v53[8];
  return a1;
}

uint64_t sub_10006A2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006A2EC);
}

uint64_t sub_10006A2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10006A3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006A3C0);
}

uint64_t sub_10006A3C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VisitAssetC9VisitDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015BB70);
}

void sub_10006A48C()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10006A550()
{
  return swift_retain();
}

uint64_t sub_10006A560(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VisitAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10006A578()
{
  return sub_100068978();
}

uint64_t sub_10006A59C()
{
  return sub_10006A62C(&qword_10015A3A8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_10006A5E4()
{
  return sub_10006A62C(&qword_10015BBD8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_10006A62C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006A674()
{
  unint64_t result = qword_10015BC20;
  if (!qword_10015BC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BC20);
  }
  return result;
}

uint64_t sub_10006A6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A72C(uint64_t a1)
{
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006A788@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100006F28(a2, a3);
      uint64_t v10 = (char *)sub_100108E80();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_100108EB0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_100108EA0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10006A9ECLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100007084(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_100108E80();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_100108EB0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_100108EA0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10006A9FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_10006A788((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_10006AAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_100108E80();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_100108EB0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100108EA0();
  sub_10006A788(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10006AB8C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10006ADF4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_100006F28(a3, a4);
                  sub_100006F28(a1, a2);
                  char v17 = sub_10006AAD4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100007084(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_100006F28(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_10006AAD4(v21, v22, v20, a3, a4);
                  sub_100007084(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_100006F28(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_100006F28(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_10006A9FC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100007084(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_10006AE24(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100109460();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_100004BD4(&qword_10015A8A8);
  uint64_t v7 = __chkstk_darwin(v171);
  uint64_t v9 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v169 = (uint64_t)&v151 - v11;
  __chkstk_darwin(v10);
  uint64_t v170 = (uint64_t)&v151 - v12;
  uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v167 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v151 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v168 = (uint64_t)&v151 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  int v23 = (char *)&v151 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v25 = __chkstk_darwin(v24);
  char v27 = (char *)&v151 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v29 = __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  uint64_t v35 = (char *)&v151 - v34;
  uint64_t v36 = v31[1];
  uint64_t v37 = a2[1];
  if (!v36)
  {
    if (v37) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v37) {
    return 0;
  }
  if (*v31 == *a2 && v36 == v37) {
    goto LABEL_8;
  }
  uint64_t v165 = v18;
  uint64_t v166 = v30;
  uint64_t v163 = v27;
  uint64_t v164 = v23;
  unint64_t v38 = v9;
  uint64_t v39 = v4;
  uint64_t v40 = v3;
  uint64_t v41 = v31;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  char v44 = sub_10010ACA0();
  uint64_t v18 = v165;
  uint64_t v30 = v166;
  uint64_t v33 = v43;
  uint64_t v32 = v42;
  uint64_t v31 = v41;
  uint64_t v3 = v40;
  uint64_t v4 = v39;
  uint64_t v9 = v38;
  char v27 = v163;
  int v23 = v164;
  char v45 = v44;
  uint64_t result = 0;
  if (v45)
  {
LABEL_8:
    uint64_t v47 = v31[3];
    uint64_t v48 = a2[3];
    if (v47)
    {
      if (!v48) {
        return 0;
      }
      if (v31[2] != a2[2] || v47 != v48)
      {
        uint64_t v165 = v18;
        uint64_t v166 = v30;
        uint64_t v163 = v27;
        uint64_t v164 = v23;
        uint64_t v49 = v9;
        uint64_t v50 = v4;
        uint64_t v51 = v3;
        id v52 = v31;
        uint64_t v53 = v32;
        uint64_t v54 = v33;
        char v55 = sub_10010ACA0();
        uint64_t v18 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v54;
        uint64_t v32 = v53;
        uint64_t v31 = v52;
        uint64_t v3 = v51;
        uint64_t v4 = v50;
        uint64_t v9 = v49;
        char v27 = v163;
        int v23 = v164;
        char v56 = v55;
        uint64_t result = 0;
        if ((v56 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v48)
    {
      return 0;
    }
    uint64_t v57 = v31[5];
    uint64_t v58 = a2[5];
    if (v57)
    {
      if (!v58) {
        return 0;
      }
      if (v31[4] != a2[4] || v57 != v58)
      {
        uint64_t v165 = v18;
        uint64_t v166 = v30;
        uint64_t v163 = v27;
        uint64_t v164 = v23;
        id v59 = v9;
        uint64_t v60 = v4;
        uint64_t v61 = v3;
        uint64_t v62 = v31;
        uint64_t v63 = v32;
        uint64_t v64 = v33;
        char v65 = sub_10010ACA0();
        uint64_t v18 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v64;
        uint64_t v32 = v63;
        uint64_t v31 = v62;
        uint64_t v3 = v61;
        uint64_t v4 = v60;
        uint64_t v9 = v59;
        char v27 = v163;
        int v23 = v164;
        char v66 = v65;
        uint64_t result = 0;
        if ((v66 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v58)
    {
      return 0;
    }
    Swift::String v154 = v6;
    uint64_t v155 = v33;
    uint64_t v158 = v32;
    unint64_t v153 = v9;
    uint64_t v67 = v4;
    uint64_t v68 = v3;
    unint64_t v69 = v31;
    uint64_t v70 = v30;
    uint64_t v71 = _s10VisitAssetC9VisitDataVMa(0);
    uint64_t v72 = *(int *)(v71 + 28);
    uint64_t v159 = v69;
    uint64_t v73 = (uint64_t)v69 + v72;
    uint64_t v74 = v68;
    sub_10006BBA8(v73, (uint64_t)v35);
    Class v157 = (int *)v71;
    uint64_t v75 = *(int *)(v71 + 28);
    uint64_t v160 = a2;
    sub_10006BBA8((uint64_t)a2 + v75, v70);
    uint64_t v76 = v170;
    uint64_t v77 = v170 + *(int *)(v171 + 48);
    uint64_t v163 = v35;
    sub_10006BBA8((uint64_t)v35, v170);
    uint64_t v164 = (char *)v77;
    sub_10006BBA8(v70, v77);
    uint64_t v161 = v67;
    uint64_t v162 = v74;
    unint64_t v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    unsigned int v79 = v78(v76, 1, v74);
    uint64_t v156 = v67 + 48;
    unint64_t v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v78;
    if (v79 == 1)
    {
      uint64_t v165 = v18;
      sub_10000B9CC(v70, (uint64_t *)&unk_10015CDE0);
      sub_10000B9CC((uint64_t)v163, (uint64_t *)&unk_10015CDE0);
      if (v78((uint64_t)v164, 1, v162) == 1)
      {
        sub_10000B9CC(v76, (uint64_t *)&unk_10015CDE0);
        uint64_t v18 = v165;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v166 = v70;
      uint64_t v80 = v155;
      sub_10006BBA8(v76, v155);
      uint64_t v81 = v76;
      if (v78((uint64_t)v164, 1, v162) != 1)
      {
        uint64_t v84 = v161;
        uint64_t v83 = v162;
        CGSize v85 = v154;
        (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v154, v164, v162);
        sub_10006A62C((unint64_t *)&unk_10015A8B0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v86 = sub_100109C70();
        uint64_t v87 = *(void (**)(char *, uint64_t))(v84 + 8);
        v87(v85, v83);
        sub_10000B9CC(v166, (uint64_t *)&unk_10015CDE0);
        sub_10000B9CC((uint64_t)v163, (uint64_t *)&unk_10015CDE0);
        v87((char *)v80, v83);
        sub_10000B9CC(v81, (uint64_t *)&unk_10015CDE0);
        if ((v86 & 1) == 0) {
          return 0;
        }
LABEL_29:
        uint64_t v164 = v23;
        BOOL v88 = v157;
        sub_10006BBA8((uint64_t)v159 + v157[8], (uint64_t)v27);
        uint64_t v89 = v158;
        sub_10006BBA8((uint64_t)v160 + v88[8], v158);
        uint64_t v90 = v169;
        uint64_t v91 = v169 + *(int *)(v171 + 48);
        sub_10006BBA8((uint64_t)v27, v169);
        sub_10006BBA8(v89, v91);
        double v92 = v152;
        if (v152(v90, 1, v162) == 1)
        {
          sub_10000B9CC(v89, (uint64_t *)&unk_10015CDE0);
          sub_10000B9CC((uint64_t)v27, (uint64_t *)&unk_10015CDE0);
          int v93 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v93 == 1)
          {
            sub_10000B9CC(v90, (uint64_t *)&unk_10015CDE0);
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v95 = (uint64_t)v164;
          sub_10006BBA8(v90, (uint64_t)v164);
          int v96 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v96 != 1)
          {
            uint64_t v97 = v161;
            uint64_t v98 = v162;
            id v99 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 32);
            uint64_t v163 = v27;
            uint64_t v100 = v154;
            v99(v154, v91, v162);
            sub_10006A62C((unint64_t *)&unk_10015A8B0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v101 = sub_100109C70();
            unint64_t v102 = v18;
            uint64_t v103 = *(void (**)(char *, uint64_t))(v97 + 8);
            v103(v100, v98);
            sub_10000B9CC(v158, (uint64_t *)&unk_10015CDE0);
            sub_10000B9CC((uint64_t)v163, (uint64_t *)&unk_10015CDE0);
            v103((char *)v95, v98);
            uint64_t v18 = v102;
            sub_10000B9CC(v169, (uint64_t *)&unk_10015CDE0);
            if ((v101 & 1) == 0) {
              return 0;
            }
LABEL_36:
            uint64_t v104 = v157;
            uint64_t v105 = v168;
            sub_10006BBA8((uint64_t)v159 + v157[9], v168);
            sub_10006BBA8((uint64_t)v160 + v104[9], (uint64_t)v18);
            uint64_t v106 = v94 + *(int *)(v171 + 48);
            sub_10006BBA8(v105, v94);
            sub_10006BBA8((uint64_t)v18, v106);
            if (v92(v94, 1, v162) == 1)
            {
              sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015CDE0);
              sub_10000B9CC(v168, (uint64_t *)&unk_10015CDE0);
              if (v92(v106, 1, v162) == 1)
              {
                sub_10000B9CC(v94, (uint64_t *)&unk_10015CDE0);
LABEL_43:
                uint64_t v114 = v104[10];
                uint64_t v116 = v159;
                CGSize v115 = v160;
                uint64_t v117 = (double *)((char *)v159 + v114);
                char v118 = *((unsigned char *)v159 + v114 + 8);
                BOOL v119 = (double *)((char *)v160 + v114);
                int v120 = *((unsigned __int8 *)v160 + v114 + 8);
                if (v118)
                {
                  if (!v120) {
                    return 0;
                  }
                }
                else
                {
                  if (*v117 != *v119) {
                    LOBYTE(v120) = 1;
                  }
                  if (v120) {
                    return 0;
                  }
                }
                uint64_t v121 = v104[11];
                double v122 = (double *)((char *)v159 + v121);
                char v123 = *((unsigned char *)v159 + v121 + 8);
                id v124 = (double *)((char *)v160 + v121);
                int v125 = *((unsigned __int8 *)v160 + v121 + 8);
                if (v123)
                {
                  if (!v125) {
                    return 0;
                  }
                }
                else
                {
                  if (*v122 != *v124) {
                    LOBYTE(v125) = 1;
                  }
                  if (v125) {
                    return 0;
                  }
                }
                id v126 = v104;
                uint64_t v127 = v104[12];
                uint64_t v128 = *(void *)((char *)v159 + v127);
                unint64_t v129 = *(void *)((char *)v159 + v127 + 8);
                uint64_t v130 = (void *)((char *)v160 + v127);
                uint64_t v131 = *v130;
                unint64_t v132 = v130[1];
                if (v129 >> 60 == 15)
                {
                  if (v132 >> 60 != 15) {
                    goto LABEL_64;
                  }
                  goto LABEL_60;
                }
                if (v132 >> 60 == 15) {
                  goto LABEL_64;
                }
                sub_1000084E0(v128, v129);
                sub_1000084E0(v131, v132);
                char v133 = sub_10006AB8C(v128, v129, v131, v132);
                sub_100008508(v131, v132);
                sub_100008508(v128, v129);
                uint64_t v116 = v159;
                CGSize v115 = v160;
                if (v133)
                {
LABEL_60:
                  uint64_t v134 = v126[13];
                  uint64_t v128 = *(void *)((char *)v116 + v134);
                  unint64_t v129 = *(void *)((char *)v116 + v134 + 8);
                  long long v135 = (void *)((char *)v115 + v134);
                  uint64_t v131 = *v135;
                  unint64_t v132 = v135[1];
                  if (v129 >> 60 == 15)
                  {
                    if (v132 >> 60 == 15) {
                      goto LABEL_68;
                    }
                  }
                  else if (v132 >> 60 != 15)
                  {
                    sub_1000084E0(v128, v129);
                    sub_1000084E0(v131, v132);
                    char v136 = sub_10006AB8C(v128, v129, v131, v132);
                    sub_100008508(v131, v132);
                    sub_100008508(v128, v129);
                    uint64_t v116 = v159;
                    CGSize v115 = v160;
                    if ((v136 & 1) == 0) {
                      return 0;
                    }
LABEL_68:
                    uint64_t v137 = v126[14];
                    int v138 = *((unsigned __int8 *)v116 + v137);
                    int v139 = *((unsigned __int8 *)v115 + v137);
                    if (v138 == 2)
                    {
                      if (v139 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      uint64_t result = 0;
                      BOOL v140 = (v138 & 1) == 0;
                      if (v139 == 2 || ((v140 ^ v139) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v141 = v126[15];
                    id v142 = (double *)((char *)v116 + v141);
                    char v143 = *((unsigned char *)v116 + v141 + 8);
                    uint64_t v144 = (double *)((char *)v115 + v141);
                    int v145 = *((unsigned __int8 *)v115 + v141 + 8);
                    if (v143)
                    {
                      if (!v145) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v142 != *v144) {
                        LOBYTE(v145) = 1;
                      }
                      if (v145) {
                        return 0;
                      }
                    }
                    uint64_t v146 = v157[16];
                    uint64_t v147 = (double *)((char *)v159 + v146);
                    char v148 = *((unsigned char *)v159 + v146 + 8);
                    uint64_t v149 = (double *)((char *)v160 + v146);
                    char v150 = *((unsigned char *)v160 + v146 + 8);
                    if (v148)
                    {
                      if ((v150 & 1) == 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v147 != *v149) {
                        char v150 = 1;
                      }
                      if (v150) {
                        return 0;
                      }
                    }
                    return 1;
                  }
LABEL_64:
                  sub_1000084E0(v128, v129);
                  sub_1000084E0(v131, v132);
                  sub_100008508(v128, v129);
                  sub_100008508(v131, v132);
                }
                return 0;
              }
            }
            else
            {
              sub_10006BBA8(v94, v167);
              if (v92(v106, 1, v162) != 1)
              {
                uint64_t v107 = v161;
                uint64_t v108 = v162;
                long double v109 = v154;
                (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v154, v106, v162);
                sub_10006A62C((unint64_t *)&unk_10015A8B0, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v110 = v94;
                uint64_t v111 = v167;
                char v112 = sub_100109C70();
                id v113 = *(void (**)(char *, uint64_t))(v107 + 8);
                v113(v109, v108);
                sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015CDE0);
                sub_10000B9CC(v168, (uint64_t *)&unk_10015CDE0);
                v113((char *)v111, v108);
                sub_10000B9CC(v110, (uint64_t *)&unk_10015CDE0);
                if ((v112 & 1) == 0) {
                  return 0;
                }
                goto LABEL_43;
              }
              sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015CDE0);
              sub_10000B9CC(v168, (uint64_t *)&unk_10015CDE0);
              (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v167, v162);
            }
            sub_10000B9CC(v94, &qword_10015A8A8);
            return 0;
          }
          sub_10000B9CC(v158, (uint64_t *)&unk_10015CDE0);
          sub_10000B9CC((uint64_t)v27, (uint64_t *)&unk_10015CDE0);
          (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v95, v162);
        }
        sub_10000B9CC(v90, &qword_10015A8A8);
        return 0;
      }
      uint64_t v82 = v161;
      sub_10000B9CC(v166, (uint64_t *)&unk_10015CDE0);
      sub_10000B9CC((uint64_t)v163, (uint64_t *)&unk_10015CDE0);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v162);
    }
    sub_10000B9CC(v76, &qword_10015A8A8);
    return 0;
  }
  return result;
}

uint64_t sub_10006BBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006BC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s10VisitAssetC9VisitDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10VisitAssetC9VisitDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006BDD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VisitAssetC9VisitDataV10CodingKeysOMa()
{
  return &_s10VisitAssetC9VisitDataV10CodingKeysON;
}

unint64_t sub_10006BE0C()
{
  unint64_t result = qword_10015BC30;
  if (!qword_10015BC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BC30);
  }
  return result;
}

unint64_t sub_10006BE64()
{
  unint64_t result = qword_10015BC38;
  if (!qword_10015BC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BC38);
  }
  return result;
}

unint64_t sub_10006BEBC()
{
  unint64_t result = qword_10015BC40;
  if (!qword_10015BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BC40);
  }
  return result;
}

uint64_t sub_10006BF10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C50664F65707974 && a2 == 0xEB00000000656361 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174537469736976 && a2 == 0xEE00656D69547472 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E457469736976 && a2 == 0xEC000000656D6954 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144656C797473 && a2 == 0xE900000000000061 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446D65744970616DLL && a2 == 0xEB00000000617461 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B726F577369 && a2 == 0xE600000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEF6C6576654C6563 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010010FF90)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

void sub_10006C4F0()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v9.origin.CGFloat x = v2;
  v9.origin.CGFloat y = v4;
  v9.size.CGFloat width = v6;
  v9.size.CGFloat height = v8;
  ceil(CGRectGetWidth(v9));
}

uint64_t sub_10006C5FC()
{
  double v1 = v0;
  CGFloat v2 = (void *)0xE000000000000000;
  sub_10010A8D0(19);
  id v3 = [v0 entity];
  id v4 = [v3 managedObjectClassName];

  if (v4)
  {
    uint64_t v5 = sub_100109D30();
    CGFloat v2 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  v13._countAndFlagsBits = v5;
  v13._object = v2;
  sub_100109E00(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 23328;
  v14._object = (void *)0xE200000000000000;
  sub_100109E00(v14);
  id v7 = [v1 objectID];
  id v8 = [v7 pl_shortURI];

  if (v8)
  {
    uint64_t v9 = sub_100109D30();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = (void *)0xE000000000000000;
  }
  v15._countAndFlagsBits = v9;
  v15._object = v11;
  sub_100109E00(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x7865746E6F63205DLL;
  v16._object = (void *)0xEB00000000203A74;
  sub_100109E00(v16);
  [v1 managedObjectContext];
  sub_100004BD4(&qword_10015BC48);
  v17._countAndFlagsBits = sub_100109D70();
  sub_100109E00(v17);
  swift_bridgeObjectRelease();
  return 0;
}

id sub_10006C7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Journaling.EntrySource();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v39 - v12;
  uint64_t v14 = sub_100109460();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  Swift::String v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JournalEntryMO();
  id v21 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a2];
  sub_10006CD14(a3, (uint64_t)v20);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v20, 1, v6) != 1)
  {
    Class isa = sub_100109480().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  }
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  [v21 setId:isa];

  sub_100109450();
  Class v23 = sub_1001093D0().super.isa;
  uint64_t v39 = v15;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v17, v14);
  [v21 setCreatedDate:v23];

  sub_100109450();
  Class v25 = sub_1001093D0().super.isa;
  v24(v17, v14);
  [v21 setUpdatedDate:v25];

  sub_100109450();
  Class v26 = sub_1001093D0().super.isa;
  uint64_t v41 = v14;
  v24(v17, v14);
  [v21 setEntryDate:v26];

  sub_10006CD7C(a1, (uint64_t)v13);
  uint64_t v27 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48);
  if (!v28(v13, 2, v27))
  {
    v24(&v13[*(int *)(v27 + 48)], v41);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
  }
  NSString v29 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v21 setEntryType:v29];

  uint64_t v30 = v44;
  sub_10006CD7C(a1, v44);
  if (!v28((char *)v30, 2, v27))
  {
    uint64_t v31 = v30 + *(int *)(v27 + 48);
    uint64_t v33 = v42;
    uint64_t v32 = v43;
    uint64_t v34 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v40, v30, v43);
    uint64_t v35 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v17, v31, v41);
    Class v36 = sub_100109480().super.isa;
    [v21 setBundleId:v36];

    Class v37 = sub_1001093D0().super.isa;
    [v21 setBundleDate:v37];

    v24(v17, v35);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  }
  return v21;
}

uint64_t sub_10006CD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015A850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006CD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Journaling.EntrySource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006CDE0(int a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v102 = a3;
  int v79 = a2;
  int v103 = a1;
  uint64_t v83 = sub_100109370();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = &v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100109320();
  uint64_t v85 = *(void *)(v6 - 8);
  uint64_t v86 = v6;
  __chkstk_darwin(v6);
  uint64_t v84 = &v78[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100109300();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v93 = v8;
  uint64_t v94 = v9;
  __chkstk_darwin(v8);
  double v92 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100109340();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  uint64_t v90 = v12;
  __chkstk_darwin(v11);
  BOOL v88 = &v78[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1001095E0();
  __chkstk_darwin(v14 - 8);
  char v101 = &v78[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100109520();
  __chkstk_darwin(v16 - 8);
  uint64_t v100 = &v78[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100109040();
  __chkstk_darwin(v18 - 8);
  id v99 = &v78[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_100004BD4(&qword_10015BC50);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = &v78[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_100004BD4(&qword_10015BC58);
  __chkstk_darwin(v23 - 8);
  Class v25 = &v78[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_100109390();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v96 = v26;
  uint64_t v97 = v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v80 = &v78[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v87 = &v78[-v31];
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v91 = &v78[-v33];
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v95 = &v78[-v35];
  __chkstk_darwin(v34);
  Class v37 = &v78[-v36];
  uint64_t v38 = sub_1001095B0();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = &v78[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = sub_1001095C0();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v45 = &v78[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001095A0();
  (*(void (**)(unsigned char *, void, uint64_t))(v39 + 104))(v41, enum case for Calendar.Component.year(_:), v38);
  uint64_t v98 = v4;
  uint64_t v46 = sub_100109590();
  uint64_t v47 = v41;
  uint64_t v48 = v37;
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v47, v38);
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v45, v42);
  uint64_t v49 = sub_1001092A0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v25, 1, 1, v49);
  uint64_t v50 = sub_100109290();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v22, 1, 1, v50);
  sub_100109020();
  sub_100109500();
  sub_100109570();
  sub_1001095D0();
  sub_1001092C0();
  if (!(_BYTE)v103)
  {
    uint64_t v58 = v80;
    if (!v46) {
      goto LABEL_13;
    }
    id v59 = v81;
    sub_100109360();
    sub_100109380();
    (*(void (**)(unsigned char *, uint64_t))(v82 + 8))(v59, v83);
    uint64_t v60 = v88;
    sub_100109330();
    uint64_t v61 = v87;
    sub_1001092E0();
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v60, v89);
    char v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
    uint64_t v62 = v58;
    uint64_t v57 = v96;
    v55(v62, v96);
    uint64_t v63 = v92;
    sub_1001092F0();
    uint64_t v64 = v91;
    sub_1001092B0();
    (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v63, v93);
    char v65 = v61;
LABEL_10:
    v55(v65, v57);
    unint64_t v69 = v84;
    sub_100109310();
    uint64_t v54 = v95;
    sub_1001092D0();
    (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v69, v86);
    uint64_t v70 = v64;
LABEL_15:
    v55(v70, v57);
    goto LABEL_16;
  }
  if (v103 != 1)
  {
    if (!v46)
    {
      if (v79)
      {
        uint64_t v71 = v81;
        sub_100109350();
LABEL_14:
        uint64_t v72 = v87;
        sub_100109380();
        (*(void (**)(unsigned char *, uint64_t))(v82 + 8))(v71, v83);
        uint64_t v73 = v88;
        sub_100109330();
        uint64_t v74 = v91;
        sub_1001092E0();
        (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v73, v89);
        char v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
        uint64_t v75 = v72;
        uint64_t v57 = v96;
        v55(v75, v96);
        uint64_t v76 = v92;
        sub_1001092F0();
        uint64_t v54 = v95;
        sub_1001092B0();
        (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v76, v93);
        uint64_t v70 = v74;
        goto LABEL_15;
      }
LABEL_13:
      uint64_t v71 = v81;
      sub_100109360();
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  if (v46)
  {
LABEL_9:
    char v66 = v88;
    sub_100109330();
    uint64_t v67 = v87;
    sub_1001092E0();
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v66, v89);
    uint64_t v68 = v92;
    sub_1001092F0();
    uint64_t v64 = v91;
    sub_1001092B0();
    (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v68, v93);
    char v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
    char v65 = v67;
    uint64_t v57 = v96;
    goto LABEL_10;
  }
  if ((v79 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v51 = v88;
  sub_100109330();
  id v52 = v91;
  sub_1001092E0();
  (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v51, v89);
  uint64_t v53 = v92;
  sub_1001092F0();
  uint64_t v54 = v95;
  sub_1001092B0();
  (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v53, v93);
  char v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
  char v56 = v52;
  uint64_t v57 = v96;
  v55(v56, v96);
LABEL_16:
  sub_10006DDC0();
  sub_100109440();
  v55(v54, v57);
  v55(v48, v57);
  return v104;
}

uint64_t sub_10006D890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v37 = sub_100109460();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v1 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v32 - v3;
  uint64_t v5 = sub_1001095C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BD4(&qword_10015BC68);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004BD4(&qword_10015BC70);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100108F10();
  uint64_t v33 = *(void *)(v21 - 8);
  uint64_t v34 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, 1, 1, v5);
  uint64_t v24 = sub_1001095E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
  sub_100108F00();
  sub_100108ED0();
  sub_100108EF0();
  sub_1001095A0();
  sub_1001095A0();
  sub_100109550();
  Class v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v9, v5);
  sub_100109580();
  uint64_t v26 = v35;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v28 = v37;
  v27(v4, v37);
  v25(v11, v5);
  uint64_t v29 = v23;
  uint64_t v30 = v36;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v30, v39, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v28) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v30, v28);
    return sub_100045A04((uint64_t)v14);
  }
  else
  {
    v27(v30, v28);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v14, v28);
  }
}

unint64_t sub_10006DDC0()
{
  unint64_t result = qword_10015BC60;
  if (!qword_10015BC60)
  {
    sub_100109390();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BC60);
  }
  return result;
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_10010A4C0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = *(void *)(sub_100004BD4(&qword_10015BC80) - 8);
  v3[9] = v5;
  v3[10] = *(void *)(v5 + 64);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_10006DF44, 0, 0);
}

uint64_t sub_10006DF44()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)v0[4];
  uint64_t v7 = v0[5];
  sub_10006E708(v0[3], v1);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  v0[12] = v10;
  *(void *)(v10 + 16) = v7;
  sub_10006E8AC(v1, v10 + v9);
  *(void *)(v10 + ((v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  id v11 = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10006E0BC;
  uint64_t v13 = v0[8];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v13, sub_10006E914, v10, &type metadata for Int);
}

uint64_t sub_10006E0BC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_10006E2C8;
  }
  else {
    uint64_t v5 = sub_10006E250;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10006E250()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10006E2C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10006E338(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v4 = sub_10006E9B4(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v5 = sub_10010A4D0();

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1)
{
  id v1 = sub_10006E9B4(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v2 = sub_10010A4D0();

  return v2;
}

uint64_t _sSo11NSPredicateC21JournalShareExtensionE17entryDateInterval8intervalAB10Foundation0fG0V_tFZ_0()
{
  uint64_t v25 = sub_1001095C0();
  uint64_t v0 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100109460();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v27 = sub_10001CB98(0, (unint64_t *)&qword_10015BC88);
  sub_100004BD4(&qword_10015A190);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100122220;
  sub_100108DF0();
  sub_1001095A0();
  sub_100109550();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v25);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v14, v3);
  Class isa = sub_1001093D0().super.isa;
  v16(v12, v3);
  uint64_t v18 = sub_10001CB98(0, &qword_10015BC90);
  *(void *)(v15 + 56) = v18;
  unint64_t v19 = sub_10006ED2C();
  *(void *)(v15 + 64) = v19;
  *(void *)(v15 + 32) = isa;
  sub_100108DE0();
  uint64_t v20 = v26;
  sub_10006D890(v26);
  v16(v9, v3);
  uint64_t v21 = v20;
  Class v22 = sub_1001093D0().super.isa;
  v16((char *)v21, v3);
  *(void *)(v15 + 96) = v18;
  *(void *)(v15 + 104) = v19;
  *(void *)(v15 + 72) = v22;
  return sub_10010A230();
}

uint64_t sub_10006E708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015BC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006E770()
{
  uint64_t v1 = *(void *)(sub_100004BD4(&qword_10015BC80) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_100108E00();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10006E8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015BC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10006E914(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_100004BD4(&qword_10015BC80) - 8);
  sub_10006E338(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_10006E9B4(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015BC80);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100108E00();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = sub_100109CF0();
  id v11 = [v9 initWithEntityName:v10];

  sub_10006E708(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10006ECCC((uint64_t)v4);
    if (qword_100158B58 != -1) {
      swift_once();
    }
    [v11 setPredicate:static NSPredicate.validEntries];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_100004BD4(qword_100159E08);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100123AA0;
    if (qword_100158B58 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)static NSPredicate.validEntries;
    *(void *)(v12 + 32) = static NSPredicate.validEntries;
    id v14 = v13;
    *(void *)(v12 + 40) = _sSo11NSPredicateC21JournalShareExtensionE17entryDateInterval8intervalAB10Foundation0fG0V_tFZ_0();
    v18[1] = v12;
    sub_100109F50();
    sub_10001CB98(0, (unint64_t *)&qword_10015BC88);
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [self andPredicateWithSubpredicates:isa];

    [v11 setPredicate:v16];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t sub_10006ECCC(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015BC80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10006ED2C()
{
  unint64_t result = qword_10015BC98;
  if (!qword_10015BC98)
  {
    sub_10001CB98(255, &qword_10015BC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BC98);
  }
  return result;
}

unint64_t sub_10006ED94(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10006EEC8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015BE90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_100070DB8();
  sub_10010AE60();
  LOBYTE(v14) = 0;
  sub_10010ABC0();
  if (!v2)
  {
    uint64_t v9 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_100109460();
    sub_100070D70(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v14) = 2;
    sub_10010ABC0();
    LOBYTE(v14) = 3;
    sub_10010ABE0();
    LOBYTE(v14) = 4;
    sub_10010ABE0();
    NSString v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_100070D70(&qword_10015BE98, type metadata accessor for CGSize);
    sub_10010AC00();
    LOBYTE(v14) = 6;
    sub_10010ABC0();
    LOBYTE(v14) = 7;
    sub_10010ABC0();
    LOBYTE(v14) = 8;
    sub_10010ABC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10006F234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004BD4(&qword_10015BE78);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_10000B718(a1, a1[3]);
  sub_100070DB8();
  uint64_t v44 = v9;
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_10010AB20();
  v11[1] = v17;
  sub_100109460();
  LOBYTE(v46) = 1;
  sub_100070D70(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  uint64_t v18 = (int *)v45;
  sub_100012FA4(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_10010AB20();
  uint64_t v20 = (uint64_t *)((char *)v11 + v18[6]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_10010AB40();
  uint64_t v23 = (char *)v11 + v18[7];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_10010AB40();
  uint64_t v26 = (char *)v11 + v18[8];
  *(void *)uint64_t v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_100070D70(&qword_10015BE88, type metadata accessor for CGSize);
  sub_10010AB60();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_10010AB20();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  uint64_t *v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_10010AB20();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = sub_10010AB20();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  uint64_t v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *uint64_t v40 = v37;
  v40[1] = v39;
  sub_100071104((uint64_t)v11, v15, _s14LivePhotoAssetC13LivePhotoDataVMa);
  sub_10000B7B0(v12);
  return sub_100070E0C((uint64_t)v11);
}

unint64_t sub_10006F864()
{
  return sub_10006ED94(*v0);
}

uint64_t sub_10006F86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007146C(a1, a2);
  *a3 = result;
  return result;
}

void sub_10006F894(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_10006F8A0(uint64_t a1)
{
  unint64_t v2 = sub_100070DB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006F8DC(uint64_t a1)
{
  unint64_t v2 = sub_100070DB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10006F918@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006F234(a1, a2);
}

uint64_t sub_10006F930(void *a1)
{
  return sub_10006EEC8(a1);
}

uint64_t sub_10006F948(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10006F980(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10006F9B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10006F9F0()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100070E68(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_livePhotoAttachments) = v2;

  return swift_release();
}

uint64_t sub_10006FA5C()
{
  swift_release();

  return swift_release();
}

id sub_10006FA9C()
{
  if ((v0[OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_pendingLivePhotoRequest + 4] & 1) == 0)
  {
    unint64_t v1 = (unsigned int *)&v0[OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
    [self cancelLivePhotoRequestWithRequestID:*v1];
  }
  v3.receiver = v0;
  v3.super_class = (Class)_s14LivePhotoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10006FBF0()
{
  return _s14LivePhotoAssetCMa(0);
}

uint64_t _s14LivePhotoAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015BCD0);
}

uint64_t sub_10006FC18()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10006FC68()
{
  uint64_t v1 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015A380);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_100027478((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_10000B9CC((uint64_t)v7, &qword_10015A380);
    return 0;
  }
  else
  {
    sub_100071104((uint64_t)v7, (uint64_t)v4, _s14LivePhotoAssetC13LivePhotoDataVMa);
    sub_10000B9CC((uint64_t)v7, &qword_10015A380);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_100070E0C((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_10006FE18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s14LivePhotoAssetC20LivePhotoAttachmentsCMa()
{
  return self;
}

uint64_t *sub_10006FE7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100109460();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    char v27 = (char *)v4 + v24;
    char v28 = (char *)a2 + v24;
    *(_OWORD *)char v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = (uint64_t *)((char *)v4 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (uint64_t *)((char *)v4 + v30);
    uint64_t v35 = (uint64_t *)((char *)a2 + v30);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[12];
    uint64_t v38 = (uint64_t *)((char *)v4 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    void *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000700B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000701B8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)((char *)a1 + v28);
  uint64_t v33 = (void *)((char *)a2 + v28);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000703A0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  long long v29 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100070644(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  v13[8] = v14[8];
  *(void *)int v13 = *(void *)v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = (char *)a1 + v16;
  uint64_t v20 = (char *)a2 + v16;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  uint64_t v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *sub_1000707E0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  long long v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(_OWORD *)long long v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  uint64_t v31 = (void *)((char *)a1 + v28);
  uint64_t v32 = (void *)((char *)a2 + v28);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100070A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100070A40);
}

uint64_t sub_100070A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100070B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100070B14);
}

uint64_t sub_100070B14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s14LivePhotoAssetC13LivePhotoDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015BDE0);
}

void sub_100070BE0()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100070C94()
{
  return swift_retain();
}

uint64_t sub_100070CA4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100070CBC()
{
  return sub_10006FC68();
}

uint64_t sub_100070CE0()
{
  return sub_100070D70(&qword_10015A388, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_100070D28()
{
  return sub_100070D70(&qword_10015BE38, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_100070D70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100070DB8()
{
  unint64_t result = qword_10015BE80;
  if (!qword_10015BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BE80);
  }
  return result;
}

uint64_t sub_100070E0C(uint64_t a1)
{
  uint64_t v2 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100070E68(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  if (a1 >> 62) {
    uint64_t v9 = sub_10010AA80();
  }
  else {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (!v9)
  {
LABEL_15:
    _s14LivePhotoAssetC20LivePhotoAttachmentsCMa();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
    *(void *)(result + 24) = 0;
    return result;
  }
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000BDCE4(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        uint64_t v13 = sub_10010A920();
        sub_100071104(v13 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v8, type metadata accessor for AssetAttachment.AssetType);
        swift_unknownObjectRelease();
        uint64_t v20 = v10;
        unint64_t v15 = *((void *)v10 + 2);
        unint64_t v14 = *((void *)v10 + 3);
        if (v15 >= v14 >> 1)
        {
          sub_1000BDCE4(v14 > 1, v15 + 1, 1);
          uint64_t v10 = v20;
        }
        *((void *)v10 + 2) = v15 + 1;
        sub_10007116C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v15);
      }
    }
    else
    {
      uint64_t v16 = (void *)(a1 + 32);
      do
      {
        sub_100071104(*v16 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v6, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v20 = v10;
        unint64_t v18 = *((void *)v10 + 2);
        unint64_t v17 = *((void *)v10 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_1000BDCE4(v17 > 1, v18 + 1, 1);
          uint64_t v10 = v20;
        }
        *((void *)v10 + 2) = v18 + 1;
        sub_10007116C((uint64_t)v6, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18);
        ++v16;
        --v9;
      }
      while (v9);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100071104(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007116C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007132CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOMa()
{
  return &_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysON;
}

unint64_t sub_100071368()
{
  unint64_t result = qword_10015BEA0;
  if (!qword_10015BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BEA0);
  }
  return result;
}

unint64_t sub_1000713C0()
{
  unint64_t result = qword_10015BEA8;
  if (!qword_10015BEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BEA8);
  }
  return result;
}

unint64_t sub_100071418()
{
  unint64_t result = qword_10015BEB0;
  if (!qword_10015BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BEB0);
  }
  return result;
}

uint64_t sub_10007146C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564497465737361 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7243657261757173 && a2 == 0xEE0074636552706FLL || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100110100 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100110120)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_100071848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v3 - 8);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1001094F0();
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  char v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015BF58);
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptViewModelSegment();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_100072888();
  uint64_t v13 = (uint64_t)v40;
  sub_10010AE50();
  if (v13) {
    return sub_10000B7B0((uint64_t)a1);
  }
  uint64_t v40 = a1;
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  uint64_t v14 = v36;
  uint64_t v15 = v39;
  char v44 = 0;
  sub_1000729FC(&qword_10015A2C0);
  uint64_t v17 = v37;
  uint64_t v16 = (uint64_t)v38;
  sub_10010AB60();
  uint64_t v19 = v15;
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v17);
  uint64_t v21 = v9;
  if (v20 == 1)
  {
    sub_1001094E0();
    sub_1000728DC(v16);
    uint64_t v22 = v6;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v23(v6, v16, v17);
    uint64_t v22 = v6;
  }
  uint64_t v24 = (uint64_t)v34;
  v23(v34, (uint64_t)v22, v17);
  char v43 = 1;
  uint64_t v25 = sub_10010AB70();
  uint64_t v26 = v33;
  uint64_t v27 = (uint64_t *)(v24 + *(int *)(v33 + 20));
  *uint64_t v27 = v25;
  v27[1] = v28;
  char v42 = 2;
  sub_10010AB80();
  *(void *)(v24 + *(int *)(v26 + 24)) = v29;
  char v41 = 3;
  sub_10010AB80();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v7);
  *(void *)(v24 + *(int *)(v26 + 28)) = v31;
  sub_10007293C(v24, v14);
  sub_10000B7B0((uint64_t)v40);
  return sub_1000729A0(v24);
}

uint64_t sub_100071CD8(void *a1)
{
  uint64_t v3 = sub_100004BD4(&qword_10015BF68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_100072888();
  sub_10010AE60();
  v8[15] = 0;
  sub_1001094F0();
  sub_1000729FC(&qword_10015BF70);
  sub_10010AC30();
  if (!v1)
  {
    type metadata accessor for TranscriptViewModelSegment();
    v8[14] = 1;
    sub_10010AC10();
    v8[13] = 2;
    sub_10010AC20();
    v8[12] = 3;
    sub_10010AC20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100071ED8()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100071F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100072CF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100071F80(uint64_t a1)
{
  unint64_t v2 = sub_100072888();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100071FBC(uint64_t a1)
{
  unint64_t v2 = sub_100072888();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100071FF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100071848(a1, a2);
}

uint64_t sub_100072010(void *a1)
{
  return sub_100071CD8(a1);
}

BOOL static TranscriptionState.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TranscriptionState.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TranscriptionState.hashValue.getter(char a1)
{
  return sub_10010AE20();
}

unint64_t sub_1000720B0()
{
  unint64_t result = qword_10015BEB8;
  if (!qword_10015BEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BEB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000721D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionState()
{
  return &type metadata for TranscriptionState;
}

uint64_t *sub_100072208(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001094F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000722F4(uint64_t a1)
{
  uint64_t v2 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007236C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100072408(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000724BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10007254C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_1000725EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072600);
}

uint64_t sub_100072600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000726C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000726D8);
}

uint64_t sub_1000726D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001094F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptViewModelSegment()
{
  uint64_t result = qword_10015BF18;
  if (!qword_10015BF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000727E4()
{
  uint64_t result = sub_1001094F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100072888()
{
  unint64_t result = qword_10015BF60;
  if (!qword_10015BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BF60);
  }
  return result;
}

uint64_t sub_1000728DC(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_10015A850);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007293C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000729A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptViewModelSegment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000729FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001094F0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_100072A40(uint64_t a1, uint64_t a2)
{
  if ((sub_1001094A0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for TranscriptViewModelSegment();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_10010ACA0(), BOOL result = 0, (v10 & 1) != 0))
  {
    if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])) {
      return *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7]);
    }
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptViewModelSegment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *BOOL result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100072BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewModelSegment.CodingKeys()
{
  return &type metadata for TranscriptViewModelSegment.CodingKeys;
}

unint64_t sub_100072BEC()
{
  unint64_t result = qword_10015BF78;
  if (!qword_10015BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BF78);
  }
  return result;
}

unint64_t sub_100072C44()
{
  unint64_t result = qword_10015BF80;
  if (!qword_10015BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BF80);
  }
  return result;
}

unint64_t sub_100072C9C()
{
  unint64_t result = qword_10015BF88;
  if (!qword_10015BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015BF88);
  }
  return result;
}

uint64_t sub_100072CF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100072E90()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for MapAssetCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_100072EE4@<X0>(unsigned char *a1@<X8>)
{
  BOOL v2 = v1;
  uint64_t v4 = sub_100109460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = &v29[-v13];
  __chkstk_darwin(v12);
  uint64_t v16 = &v29[-v15];
  if (qword_100158A60 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100109A50();
  swift_release();
  if (v29[15])
  {
    id v17 = [v2 momentDateForSorting];
    if (v17)
    {
      unint64_t v18 = v17;
      sub_100109420();

      uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
      v19(v14, v7, v4);
      int v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v20(v14, 0, 1, v4);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) != 1) {
        return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v19)(a1, v14, v4);
      }
    }
    else
    {
      int v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v20(v14, 1, 1, v4);
    }
    id v25 = [v2 entryDate];
    if (v25)
    {
      uint64_t v26 = v25;
      sub_100109420();

      uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
      v27(v11, v7, v4);
      v20(v11, 0, 1, v4);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
      {
        v27(a1, v11, v4);
LABEL_18:
        uint64_t v28 = (uint64_t)v14;
        return sub_100045A04(v28);
      }
    }
    else
    {
      v20(v11, 1, 1, v4);
    }
    sub_100109450();
    sub_100045A04((uint64_t)v11);
    goto LABEL_18;
  }
  id v22 = [v2 entryDate];
  if (v22)
  {
    uint64_t v23 = v22;
    sub_100109420();

    uint64_t v24 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
    v24(v16, v7, v4);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) != 1) {
      return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v24)(a1, v16, v4);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
  }
  sub_100109450();
  uint64_t v28 = (uint64_t)v16;
  return sub_100045A04(v28);
}

uint64_t sub_10007332C(char *a1, char *a2)
{
  return sub_100081490(*a1, *a2);
}

Swift::Int sub_100073338()
{
  return sub_10010AE20();
}

uint64_t sub_1000733C4()
{
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10007343C()
{
  return sub_10010AE20();
}

uint64_t sub_1000734C4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  int v3 = (void *)a1[1];
  v4._rawValue = &off_10013FF90;
  v8._object = v3;
  Swift::Int v5 = sub_10010AAF0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100073524(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7461447972746E65;
  if (*v1) {
    uint64_t v2 = 0x6144746E656D6F6DLL;
  }
  unint64_t v3 = 0xE900000000000065;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006574;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10007356C()
{
  return sub_100109F00();
}

uint64_t sub_1000735CC()
{
  return sub_100109EC0();
}

uint64_t sub_10007361C()
{
  sub_100073678();
  uint64_t result = sub_100109A40();
  qword_10015C030 = result;
  return result;
}

unint64_t sub_100073678()
{
  unint64_t result = qword_10015C038;
  if (!qword_10015C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C038);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JournalSortOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100073798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalSortOrder()
{
  return &type metadata for JournalSortOrder;
}

unint64_t sub_1000737D4()
{
  unint64_t result = qword_10015C040;
  if (!qword_10015C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C040);
  }
  return result;
}

void *DataConfig.APP_GROUP.unsafeMutableAddressor()
{
  return &static DataConfig.APP_GROUP;
}

void *DataConfig.APP_BUNDLE_ID.unsafeMutableAddressor()
{
  return &static DataConfig.APP_BUNDLE_ID;
}

const char *DataConfig.ZONE_NAME.unsafeMutableAddressor()
{
  return "JurassicZone";
}

void *DataConfig.ZONE_SUBSCRIPTION_ID.unsafeMutableAddressor()
{
  return &static DataConfig.ZONE_SUBSCRIPTION_ID;
}

void *DataConfig.CONTAINER_ID.unsafeMutableAddressor()
{
  return &static DataConfig.CONTAINER_ID;
}

NSURLFileProtectionType sub_100073864()
{
  qword_10016DEA0 = 0xD000000000000017;
  qword_10016DEA8 = 0x80000001001101C0;
  qword_10016DEB0 = (uint64_t)NSURLFileProtectionCompleteUnlessOpen;
  return NSURLFileProtectionCompleteUnlessOpen;
}

NSFileProtectionType sub_10007389C()
{
  type metadata accessor for DataStackConfiguration();
  swift_allocObject();
  qword_10016DEB8 = (uint64_t)sub_100056324(0x73746E656D6F6DLL, 0xE700000000000000, 0x73746E656D6F6DLL, 0xE700000000000000, NSFileProtectionCompleteUnlessOpen, 0, 0xD000000000000011, 0x80000001001101A0, 0xD000000000000017, 0x80000001001101C0);

  return NSFileProtectionCompleteUnlessOpen;
}

const char *DataConfig.COREDATA_MODEL_NAME.unsafeMutableAddressor()
{
  return "moments";
}

const char *DataConfig.COREDATA_FILENAME.unsafeMutableAddressor()
{
  return "moments";
}

unint64_t static DataConfig.spotlightBundleIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t static DataConfig.APP_GROUP.getter()
{
  return 0xD000000000000017;
}

uint64_t static DataConfig.COREDATA_MODEL_NAME.getter()
{
  return 0x73746E656D6F6DLL;
}

uint64_t static DataConfig.ZONE_NAME.getter()
{
  return 0x636973736172754ALL;
}

unint64_t static DataConfig.ZONE_SUBSCRIPTION_ID.getter()
{
  return 0xD000000000000025;
}

void *DataConfig.METADATA_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_KEY;
}

unint64_t static DataConfig.METADATA_KEY.getter()
{
  return 0xD000000000000015;
}

void *DataConfig.METADATA_USER_ID_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_USER_ID_KEY;
}

unint64_t static DataConfig.METADATA_USER_ID_KEY.getter()
{
  return 0xD00000000000001BLL;
}

const char *DataConfig.RECORD_TYPE_JOURNAL_ENTRY.unsafeMutableAddressor()
{
  return "JournalEntry";
}

uint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY.getter()
{
  return 0x456C616E72756F4ALL;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.getter()
{
  return 0xD000000000000011;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.getter()
{
  return 0xD00000000000001FLL;
}

void *DataConfig.prioritizeDownloadNotification.unsafeMutableAddressor()
{
  return &static DataConfig.prioritizeDownloadNotification;
}

unint64_t static DataConfig.prioritizeDownloadNotification.getter()
{
  return 0xD00000000000001ELL;
}

void *DataConfig.downloadPriorityKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadPriorityKey;
}

unint64_t static DataConfig.downloadPriorityKey.getter()
{
  return 0xD000000000000013;
}

const char *DataConfig.downloadIDKey.unsafeMutableAddressor()
{
  return "downloadIDKey";
}

uint64_t static DataConfig.downloadIDKey.getter()
{
  return 0x64616F6C6E776F64;
}

void *DataConfig.downloadTypeKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadTypeKey;
}

uint64_t static DataConfig.downloadTypeKey.getter()
{
  return 0x64616F6C6E776F64;
}

const char *DataConfig.spotlightDomain.unsafeMutableAddressor()
{
  return "Journal";
}

uint64_t static DataConfig.spotlightDomain.getter()
{
  return 0x6C616E72756F4ALL;
}

void *DataConfig.spotlightBundleIdentifier.unsafeMutableAddressor()
{
  return &static DataConfig.spotlightBundleIdentifier;
}

void *DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.unsafeMutableAddressor()
{
  return &static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY;
}

uint64_t static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.getter()
{
  return 100;
}

uint64_t Journaling.deinit()
{
  return v0;
}

uint64_t type metadata accessor for DataConfig()
{
  return self;
}

double sub_100073C00()
{
  if (qword_100158990 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10016DD88;
  qword_10016DEC0 = qword_10016DD88;
  return result;
}

char *sub_100073C54(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_assetContainerView;
  id v10 = objc_allocWithZone((Class)UIView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v11[OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_hasOnlyOneImage] = 0;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_journalAsset] = 0;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for MosaicCell();
  uint64_t v12 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_assetContainerView;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_assetContainerView];
  uint64_t v15 = v12;
  [v14 setClipsToBounds:1];
  id v16 = [v15 contentView];
  [v16 addSubview:v14];

  uint64_t v17 = qword_100158A78;
  id v18 = *(id *)&v12[v13];
  if (v17 != -1) {
    swift_once();
  }
  sub_10009CD30(*(double *)&qword_10016DEC0);

  swift_bridgeObjectRelease();
  return v15;
}

void sub_100073EB4(void *a1)
{
  type metadata accessor for MosaicLayout.Attributes();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 16);
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii);
    long long v10 = *(_OWORD *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 32);
    uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 48);
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension12MosaicLayout10Attributes_cornerRadii + 56);
    unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_assetContainerView);
    id v7 = a1;
    id v8 = [v6 layer];
    v13[0] = v12;
    v13[1] = v11;
    v13[2] = v10;
    uint64_t v14 = v4;
    uint64_t v15 = v5;
    [v8 setCornerRadii:v13];

    id v9 = [v6 layer];
    [v9 setCornerCurve:kCACornerCurveContinuous];
  }
}

uint64_t sub_100074028()
{
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_assetContainerView);
  id v6 = [v5 subviews];
  sub_10001CB98(0, (unint64_t *)&qword_10015A018);
  unint64_t v7 = sub_100109F30();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)sub_10010A920();
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    long long v11 = v10;
    [v10 removeFromSuperview];
  }
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_journalAsset);
  if (!v7) {
    return result;
  }
  _s10PhotoAssetCMa(0);
  uint64_t v13 = swift_dynamicCastClass();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v5 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = (uint64_t *)(v14 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments);
    swift_beginAccess();
    uint64_t v1 = *v15;
    if (!((unint64_t)*v15 >> 62))
    {
      uint64_t v16 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v17 = (id)v7;
      swift_retain_n();
      id v18 = v17;
      swift_bridgeObjectRetain();
      if (v16)
      {
LABEL_14:
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v19 = sub_10010A920();
        }
        else
        {
          if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x100074610);
          }
          uint64_t v19 = *(void *)(v1 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = sub_10010A080();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
        uint64_t v21 = swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_10010A060();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v22 = sub_10010A050();
        uint64_t v23 = (void *)swift_allocObject();
        v23[2] = v22;
        void v23[3] = &protocol witness table for MainActor;
        unsigned char v23[4] = v21;
        v23[5] = sub_100075108;
        v23[6] = v5;
        v23[7] = v19;
        swift_release();
        sub_10004C59C((uint64_t)v4, (uint64_t)&unk_10015C128, (uint64_t)v23);

        swift_release_n();
        swift_release();
        return swift_release();
      }
LABEL_31:
      swift_bridgeObjectRelease();
      sub_100074628(0);

      return swift_release_n();
    }
LABEL_30:
    id v36 = (id)v7;
    swift_retain_n();
    id v37 = v36;
    swift_bridgeObjectRetain();
    if (sub_10010AA80()) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
  _s10VideoAssetCMa(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v24 = result;
    type metadata accessor for VideoAssetGridView();
    id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v26 = (id)v7;
    uint64_t v27 = (char *)[v25 init];
    uint64_t v28 = *(void **)&v27[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset];
    *(void *)&v27[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset] = v24;
    id v29 = v26;
    uint64_t v30 = v27;
    sub_10001E078(v28);

    uint64_t v31 = v30[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType];
    v30[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType] = 0;
    uint64_t v32 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_hasCalledSizeTypeUpdated;
    if (v30[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
    {
      switch(v31)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          char v34 = sub_10010ACA0();
          uint64_t v35 = v30;
          swift_bridgeObjectRelease();
          if ((v34 & 1) == 0) {
            goto LABEL_25;
          }

          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
    }
    else
    {
      uint64_t v33 = v30;
LABEL_25:
      sub_1000DDF58();
      v30[v32] = 1;
    }
    sub_1000DE24C();
    [v5 addSubview:v30];
    sub_10009CD30(0.0);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100074628(void *a1)
{
  uint64_t v2 = sub_100109A70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100109AC0();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
  id v9 = (void *)sub_10010A410();
  uint64_t v10 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = a1;
  _OWORD aBlock[4] = sub_100075338;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  void aBlock[3] = &unk_1001432A8;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000599F4();
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
}

uint64_t sub_100074908(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (unsigned char *)result;
    id v5 = [objc_allocWithZone((Class)type metadata accessor for CanvasPhotoView()) initWithImage:a2];
    uint64_t v6 = v5;
    if (v4[OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_hasOnlyOneImage] == 1) {
      [v5 setContentMode:1];
    }
    [*(id *)&v4[OBJC_IVAR____TtC21JournalShareExtension10MosaicCell_assetContainerView] addSubview:v6];
    sub_10009CD30(0.0);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000749E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  sub_100004BD4((uint64_t *)&unk_100159D40);
  v7[9] = swift_task_alloc();
  v7[10] = type metadata accessor for AssetAttachment.AssetType(0);
  v7[11] = swift_task_alloc();
  sub_10010A060();
  v7[12] = sub_10010A050();
  uint64_t v9 = sub_100109FF0();
  v7[13] = v9;
  v7[14] = v8;
  return _swift_task_switch(sub_100074ADC, v9, v8);
}

uint64_t sub_100074ADC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 120) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_100075234(*(void *)(v0 + 64) + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, *(void *)(v0 + 88));
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)(v0 + 128) = **(void **)(v0 + 88);
        id v4 = v2;
        [v4 frame];
        double Width = CGRectGetWidth(v31);
        [v4 frame];
        double Height = CGRectGetHeight(v32);
        if (Width > Height) {
          double v7 = Width;
        }
        else {
          double v7 = Height;
        }
        id v8 = [self mainScreen];
        [v8 scale];
        double v10 = v9;

        uint64_t v11 = (void *)swift_task_alloc();
        *(void *)(v0 + 136) = v11;
        *uint64_t v11 = v0;
        v11[1] = sub_100074E5C;
        return sub_10007C2BC(v7 * v10);
      }
      uint64_t v20 = *(void *)(v0 + 88);
      swift_release();
      sub_100075298(v20, type metadata accessor for AssetAttachment.AssetType);
      id v19 = 0;
    }
    else
    {
      id v14 = *(char **)(v0 + 72);
      swift_release();
      sub_1000C7FA4(v14);
      uint64_t v15 = sub_1001091E0();
      uint64_t v16 = *(void *)(v15 - 8);
      int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
      uint64_t v18 = *(void *)(v0 + 72);
      if (v17 == 1)
      {
        sub_1000192F8(*(void *)(v0 + 72));
        id v19 = 0;
      }
      else
      {
        id v21 = v2;
        [v21 frame];
        double v22 = CGRectGetWidth(v33);
        [v21 frame];
        double v23 = CGRectGetHeight(v34);
        if (v22 > v23) {
          double v24 = v22;
        }
        else {
          double v24 = v23;
        }
        id v25 = [self mainScreen];
        [v25 scale];
        double v27 = v26;

        id v19 = sub_100059A54(v24 * v27);
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
      }
      sub_100075298(*(void *)(v0 + 88), type metadata accessor for AssetAttachment.AssetType.FilePathType);
    }
    uint64_t v28 = *(void **)(v0 + 120);
    (*(void (**)(id))(v0 + 48))(v19);
  }
  else
  {
    uint64_t v13 = *(void (**)(void))(v0 + 48);
    swift_release();
    v13(0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100074E5C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  return _swift_task_switch(sub_100074F84, v4, v3);
}

uint64_t sub_100074F84()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 120);
  (*(void (**)(void *))(v0 + 48))(v1);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_10007502C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MosaicCell();
  return [super dealloc];
}

uint64_t type metadata accessor for MosaicCell()
{
  return self;
}

uint64_t sub_1000750D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100075108(void *a1)
{
  return sub_100074628(a1);
}

uint64_t sub_100075110()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100075160(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  double v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *double v10 = v2;
  v10[1] = sub_1000090F0;
  return sub_1000749E0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100075234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100075298(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000752F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100075338()
{
  return sub_100074908(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100075340(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100075350()
{
  return swift_release();
}

uint64_t type metadata accessor for VideoUtilities()
{
  return self;
}

uint64_t sub_10007537C(uint64_t a1, double a2)
{
  *(double *)(v2 + 24) = a2;
  *(void *)(v2 + 16) = a1;
  return _swift_task_switch(sub_1000753A0, 0, 0);
}

uint64_t sub_1000753A0()
{
  double v1 = v0[3];
  id v2 = objc_allocWithZone((Class)AVURLAsset);
  sub_1001090F0(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithURL:v4 options:0];
  *((void *)v0 + 4) = v6;

  id v7 = [objc_allocWithZone((Class)AVAssetImageGenerator) initWithAsset:v6];
  *((void *)v0 + 5) = v7;
  [v7 setAppliesPreferredTrackTransform:1];
  [v7 setMaximumSize:v1, v1];
  [v7 setDynamicRangePolicy:AVAssetImageGeneratorDynamicRangePolicyForceSDR];
  unint64_t v8 = sub_10010A5D0(0.0, 60);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  *((void *)v0 + 6) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100075510;
  return AVAssetImageGenerator.image(at:)(v8, v10, v12);
}

uint64_t sub_100075510(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1000756D4;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_100075638;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100075638()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = (void *)v0[4];
  id v2 = (void *)v0[5];
  id v4 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v1];

  uint64_t v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_1000756D4()
{
  uint64_t v1 = *(void **)(v0 + 32);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10007573C(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_10007575C, 0, 0);
}

uint64_t sub_10007575C()
{
  id v1 = objc_allocWithZone((Class)AVURLAsset);
  sub_1001090F0(v2);
  uint64_t v4 = v3;
  v0[6] = [v1 initWithURL:v3 options:0];

  sub_100004BD4(&qword_10015C1D8);
  uint64_t v5 = sub_100109650();
  v0[7] = v5;
  id v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *id v6 = v0;
  v6[1] = sub_100075868;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 2, v5);
}

uint64_t sub_100075868()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1000759F0;
  }
  else
  {
    swift_release();
    id v2 = sub_100075984;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100075984()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v2, v3);
}

uint64_t sub_1000759F0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL static CLLocationCoordinate2D.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

void CLLocationCoordinate2D.hash(into:)(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_10010AE00(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_10010AE00(v4);
}

Swift::Int CLLocationCoordinate2D.hashValue.getter(double a1, double a2)
{
  sub_10010ADC0();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_10010AE00(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_10010AE00(v5);
  return sub_10010AE20();
}

Swift::Int sub_100075B2C()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_10010ADC0();
  CLLocationCoordinate2D.hash(into:)(v1, v2);
  return sub_10010AE20();
}

void sub_100075B80()
{
  CLLocationCoordinate2D.hash(into:)(*v0, v0[1]);
}

Swift::Int sub_100075B88()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_10010ADC0();
  CLLocationCoordinate2D.hash(into:)(v1, v2);
  return sub_10010AE20();
}

BOOL sub_100075BD8(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t static FloatingPoint.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v6 = *(void *)(a3 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedConformanceWitness();
  sub_10010ACF0();
  sub_10010AC80();
  sub_10010A1E0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

unint64_t sub_100075DBC()
{
  unint64_t result = qword_10015C1E8;
  if (!qword_10015C1E8)
  {
    type metadata accessor for CLLocationCoordinate2D(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C1E8);
  }
  return result;
}

id sub_100075E14(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_animationGroup;
  id v4 = objc_allocWithZone((Class)CAAnimationGroup);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_radius] = 0x4069000000000000;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_animationDuration] = 0x3FF8000000000000;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_scale] = 0x3FF3333333333333;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_startTime] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_pulseAnimationKey];
  *(void *)uint64_t v6 = 0x65736C7570;
  *((void *)v6 + 1) = 0xE500000000000000;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_pulseAnimationCancellable] = 0;

  sub_10000B718(a1, a1[3]);
  uint64_t v7 = sub_10010AC90();
  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AudioButtonPulseAnimation();
  [super initWithLayer:v7];
  swift_unknownObjectRelease();
  sub_10000B7B0((uint64_t)a1);
  return v8;
}

id sub_100075FE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioButtonPulseAnimation();
  return [super dealloc];
}

uint64_t type metadata accessor for AudioButtonPulseAnimation()
{
  return self;
}

void sub_1000760A0()
{
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_animationGroup;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CAAnimationGroup) init];
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_radius] = 0x4069000000000000;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_animationDuration] = 0x3FF8000000000000;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_scale] = 0x3FF3333333333333;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_startTime] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_pulseAnimationKey];
  *(void *)objc_super v2 = 0x65736C7570;
  *((void *)v2 + 1) = 0xE500000000000000;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25AudioButtonPulseAnimation_pulseAnimationCancellable] = 0;

  sub_10010AA60();
  __break(1u);
}

uint64_t getEnumTagSinglePayload for AssetSizeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000762F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetContentType()
{
  return &type metadata for AssetContentType;
}

unint64_t sub_10007632C()
{
  unint64_t result = qword_10015C250;
  if (!qword_10015C250)
  {
    sub_100012F08(&qword_10015C258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C250);
  }
  return result;
}

Swift::Int sub_100076388()
{
  return sub_10010AE20();
}

Swift::Int sub_100076488()
{
  return sub_10010AE20();
}

Swift::Int sub_100076594()
{
  return sub_10010AE20();
}

uint64_t sub_10007663C()
{
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100076728()
{
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000767B8()
{
  return sub_10010AE20();
}

Swift::Int sub_10007685C()
{
  return sub_10010AE20();
}

Swift::Int sub_100076964()
{
  return sub_10010AE20();
}

uint64_t sub_100076A60()
{
  uint64_t v0 = sub_100109520();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100109CE0();
  __chkstk_darwin(v1 - 8);
  sub_100109C80();
  sub_100109510();
  return sub_100109D60();
}

uint64_t sub_100076CBC(unsigned __int8 *a1, char *a2)
{
  return sub_100080E0C(*a1, *a2);
}

Swift::Int sub_100076CC8()
{
  return sub_100076388();
}

uint64_t sub_100076CD0()
{
  return sub_10007663C();
}

Swift::Int sub_100076CD8()
{
  return sub_100076964();
}

uint64_t sub_100076CE0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100076E40(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100076D10(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x636973756DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x74736163646F70;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C6369747261;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1802465122;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 30324;
      a1[1] = 0xE200000000000000;
      break;
    case 5:
      *a1 = 0xD000000000000010;
      a1[1] = 0x800000010010CEC0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_100076DD8(void *a1@<X8>)
{
  *a1 = &off_10013FFE0;
}

unint64_t sub_100076DEC()
{
  unint64_t result = qword_10015C260;
  if (!qword_10015C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C260);
  }
  return result;
}

uint64_t sub_100076E40(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10013FB68;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_100076E8C(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x726F68747561;
      break;
    case 3:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 4:
      unint64_t result = 0x79616C50656D6974;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100076F78(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015C398);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_100079038();
  sub_10010AE60();
  v11[15] = 0;
  sub_10010AC10();
  if (!v2)
  {
    v11[14] = 1;
    sub_10010ABC0();
    v11[13] = 2;
    sub_10010ABC0();
    uint64_t v9 = _s12PodcastAssetC11PodcastDataVMa(0);
    v11[12] = 3;
    sub_1001091E0();
    sub_100078FF0(&qword_100159718, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10010AC00();
    v11[11] = 4;
    sub_100109460();
    sub_100078FF0(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    v11[10] = 5;
    sub_10010ABF0();
    v11[9] = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_10000B978();
    sub_10010AC00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100077274@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4(&qword_10015C388);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)_s12PodcastAssetC11PodcastDataVMa(0);
  __chkstk_darwin(v12);
  id v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  id v37 = a1;
  sub_10000B718(a1, v15);
  sub_100079038();
  uint64_t v16 = v38;
  sub_10010AE50();
  if (v16) {
    return sub_10000B7B0((uint64_t)v37);
  }
  CGRect v32 = v5;
  CGRect v33 = v8;
  uint64_t v38 = v14;
  char v46 = 0;
  uint64_t v17 = v36;
  uint64_t v18 = v11;
  uint64_t v19 = sub_10010AB70();
  uint64_t v20 = v38;
  uint64_t *v38 = v19;
  v20[1] = v21;
  char v45 = 1;
  void v20[2] = sub_10010AB20();
  v20[3] = v22;
  char v44 = 2;
  v20[4] = sub_10010AB20();
  v20[5] = v23;
  sub_1001091E0();
  char v43 = 3;
  sub_100078FF0(&qword_1001596F8, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v24 = (uint64_t)v33;
  sub_10010AB60();
  sub_10000B800(v24, (uint64_t)v20 + v12[7], (uint64_t *)&unk_100159D40);
  sub_100109460();
  char v42 = 4;
  sub_100078FF0(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = (uint64_t)v32;
  sub_10010AB60();
  sub_10000B800(v25, (uint64_t)v20 + v12[8], (uint64_t *)&unk_10015CDE0);
  char v41 = 5;
  uint64_t v26 = sub_10010AB50();
  uint64_t v27 = v35;
  uint64_t v28 = (char *)v20 + v12[9];
  *(void *)uint64_t v28 = v26;
  v28[8] = v29 & 1;
  char v39 = 6;
  sub_10000B864();
  sub_10010AB60();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v17);
  *((unsigned char *)v20 + v12[10]) = v40;
  sub_10007908C((uint64_t)v20, v34);
  sub_10000B7B0((uint64_t)v37);
  return sub_1000790F0((uint64_t)v20);
}

unint64_t sub_100077800()
{
  return sub_100076E8C(*v0);
}

uint64_t sub_100077808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007944C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100077830(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10007783C(uint64_t a1)
{
  unint64_t v2 = sub_100079038();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100077878(uint64_t a1)
{
  unint64_t v2 = sub_100079038();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000778B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100077274(a1, a2);
}

uint64_t sub_1000778CC(void *a1)
{
  return sub_100076F78(a1);
}

uint64_t sub_1000778E4()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A360);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling12PodcastAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100026474((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_10015A360);
    return 0;
  }
  sub_10007914C((uint64_t)v3, (uint64_t)v7);
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122220;
  *(void *)(inited + 32) = *((void *)v7 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 24);
  *(void *)(inited + 56) = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100042280(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  sub_1000790F0((uint64_t)v7);
  return v9;
}

uint64_t sub_100077B0C()
{
  return swift_release();
}

id sub_100077B1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12PodcastAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100077B64()
{
  return _s12PodcastAssetCMa(0);
}

uint64_t _s12PodcastAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015C290);
}

uint64_t sub_100077B8C()
{
  return swift_updateClassMetadata2();
}

void *sub_100077BD0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[7];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = sub_1001091E0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_100109460();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
  }
  return v4;
}

uint64_t sub_100077E94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1001091E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_100109460();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_10007801C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1001091E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100109460();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  return a1;
}

void *sub_100078290(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100109460();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_1000785E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001091E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_100109460();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  int v21 = (char *)a1 + v19;
  int v22 = (char *)a2 + v19;
  *(void *)int v21 = *(void *)v22;
  v21[8] = v22[8];
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

void *sub_10007881C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1001091E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_100109460();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  char v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(void *)char v29 = *(void *)v30;
  v29[8] = v30[8];
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  return a1;
}

uint64_t sub_100078B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078B4C);
}

uint64_t sub_100078B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100078C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100078C94);
}

uint64_t sub_100078C94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s12PodcastAssetC11PodcastDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015C2F8);
}

void sub_100078DE8()
{
  sub_10000B5A0(319, (unint64_t *)&qword_100159658, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10000B5A0(319, (unint64_t *)&qword_10015A7C0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100078F14()
{
  return swift_retain();
}

uint64_t sub_100078F24(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling12PodcastAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100078F3C()
{
  return sub_1000778E4();
}

uint64_t sub_100078F60()
{
  return sub_100078FF0(&qword_10015A368, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_100078FA8()
{
  return sub_100078FF0(&qword_10015C348, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_100078FF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100079038()
{
  unint64_t result = qword_10015C390;
  if (!qword_10015C390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C390);
  }
  return result;
}

uint64_t sub_10007908C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000790F0(uint64_t a1)
{
  uint64_t v2 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007914C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s12PodcastAssetC11PodcastDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12PodcastAssetC11PodcastDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007930CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12PodcastAssetC11PodcastDataV10CodingKeysOMa()
{
  return &_s12PodcastAssetC11PodcastDataV10CodingKeysON;
}

unint64_t sub_100079348()
{
  unint64_t result = qword_10015C3A0;
  if (!qword_10015C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C3A0);
  }
  return result;
}

unint64_t sub_1000793A0()
{
  unint64_t result = qword_10015C3A8;
  if (!qword_10015C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C3A8);
  }
  return result;
}

unint64_t sub_1000793F8()
{
  unint64_t result = qword_10015C3B0;
  if (!qword_10015C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C3B0);
  }
  return result;
}

uint64_t sub_10007944C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010010D190 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_100079734()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015C3B8);
  sub_100007CB8(v0, (uint64_t)qword_10015C3B8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100079830()
{
  *(void *)(v1 + 16) = v0;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1000798C0;
  return sub_1000F7CC4();
}

uint64_t sub_1000798C0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000799C0, 0, 0);
}

uint64_t sub_1000799C0()
{
  uint64_t v1 = v0[4];
  if (v1)
  {
LABEL_8:
    BOOL v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v1);
  }
  unint64_t v2 = *(void *)(v0[2] + qword_10016DED0);
  if (v2 < 2)
  {
    if (qword_100158A80 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_100109960();
    sub_100007CB8(v3, (uint64_t)qword_10015C3B8);
    uint64_t v4 = sub_100109940();
    os_log_type_t v5 = sub_10010A2D0();
    if (os_log_type_enabled(v4, v5))
    {
      char v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "no visits data", v6, 2u);
      swift_slowDealloc();
    }

    goto LABEL_8;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[5] = v9;
  void *v9 = v0;
  v9[1] = sub_100079B80;
  uint64_t v10 = v0[2];
  v9[17] = v2;
  v9[18] = v10;
  return _swift_task_switch(sub_10007A218, 0, 0);
}

uint64_t sub_100079B80(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100079C80, 0, 0);
}

uint64_t sub_100079C80()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(unsigned __int8 *)(*(void *)(v0 + 16) + qword_100160338);
    *(unsigned char *)(v0 + 72) = v1;
    switch(v1)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          uint64_t v2 = *(void *)(v0 + 48);
          goto LABEL_10;
        }
        sub_10006C4F0();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 56) = v9;
        void *v9 = v0;
        v9[1] = sub_100079EAC;
        uint64_t result = sub_10007C2BC(v5 * v8);
        break;
    }
  }
  else
  {
    uint64_t v2 = 0;
LABEL_10:
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v2);
  }
  return result;
}

uint64_t sub_100079EAC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100079FAC, 0, 0);
}

uint64_t sub_100079FAC()
{
  uint64_t v1 = v0[8];
  if (v1)
  {
    char v5 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      if (qword_100158BF8 != -1) {
        swift_once();
      }
      sub_1000F97C4(v1, *(void *)(v0[2] + qword_100160308), *(void *)(v0[2] + qword_100160308 + 8));
    }
  }
  else
  {
    if (qword_100158A80 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_100109960();
    sub_100007CB8(v2, (uint64_t)qword_10015C3B8);
    uint64_t v1 = sub_100109940();
    os_log_type_t v3 = sub_10010A2D0();
    if (os_log_type_enabled(v1, v3))
    {
      double v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v3, "error creating thumbnail from video preview image", v4, 2u);
      swift_slowDealloc();
    }
  }

  uint64_t v6 = v0[6];
  double v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_10007A1F8(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return _swift_task_switch(sub_10007A218, 0, 0);
}

uint64_t sub_10007A218()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = sub_1000C3594(v0[17]);
  v0[19] = v2;
  uint64_t v3 = *(void *)(v1 + qword_100160348);
  double v7 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_10015E200 + dword_10015E200);
  char v4 = *(unsigned char *)(v1 + qword_100160338);
  char v5 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v5;
  *char v5 = v0;
  v5[1] = sub_10007A2FC;
  return v7(v2, v4, v3);
}

uint64_t sub_10007A2FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10007A41C, 0, 0);
}

uint64_t sub_10007A41C()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10007A540;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10000E354;
  v0[13] = &unk_100143400;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10007A540()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_10007A6E4;
  }
  else {
    uint64_t v2 = sub_10007A650;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10007A650()
{
  uint64_t v2 = (void *)v0[21];
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = (void *)v0[15];
  id v4 = [v3 image];

  char v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_10007A6E4()
{
  swift_willThrow();
  if (qword_100158A80 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100109960();
  sub_100007CB8(v1, (uint64_t)qword_10015C3B8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100109940();
  os_log_type_t v3 = sub_10010A2D0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  char v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    uint64_t v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v9;
    sub_10010A730();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_10007A90C()
{
  return sub_10002E774(*(void *)(v0 + qword_10016DED0));
}

uint64_t sub_10007A928(uint64_t a1)
{
  return sub_10002E774(*(void *)(a1 + qword_10016DED0));
}

uint64_t type metadata accessor for MultiPinMapThumbnailCacheOperation()
{
  uint64_t result = qword_10015C3F8;
  if (!qword_10015C3F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007A990()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10007A9D4()
{
  return type metadata accessor for MultiPinMapThumbnailCacheOperation();
}

unsigned char *storeEnumTagSinglePayload for AssetSizeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007AAA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSizeType()
{
  return &type metadata for AssetSizeType;
}

unint64_t sub_10007AAE4()
{
  unint64_t result = qword_10015C550;
  if (!qword_10015C550)
  {
    sub_100012F08(&qword_10015C558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C550);
  }
  return result;
}

uint64_t sub_10007AB40(char a1)
{
  char v2 = 1;
  switch(a1)
  {
    case 2:
      goto LABEL_10;
    default:
      char v3 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_7:
        char v2 = 1;
      }
      else
      {
        char v2 = 1;
        switch(a1)
        {
          case 0:
          case 2:
          case 3:
          case 4:
          case 5:
            char v4 = sub_10010ACA0();
            swift_bridgeObjectRelease();
            if (v4) {
              goto LABEL_7;
            }
            char v2 = 1;
            switch(a1)
            {
              case 0:
                goto LABEL_10;
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                char v5 = sub_10010ACA0();
                swift_bridgeObjectRelease();
                if (v5) {
                  goto LABEL_7;
                }
                char v2 = 1;
                switch(a1)
                {
                  case 5:
                    goto LABEL_10;
                  default:
                    char v2 = sub_10010ACA0();
                    break;
                }
                break;
              default:
                goto LABEL_12;
            }
            break;
          case 1:
            break;
          default:
LABEL_12:
            JUMPOUT(0);
        }
LABEL_10:
        swift_bridgeObjectRelease();
      }
      return v2 & 1;
  }
}

uint64_t sub_10007AEE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, char a7)
{
  uint64_t v10 = (void *)0xE600000000000000;
  sub_1001094F0();
  sub_10007B42C();
  v13._countAndFlagsBits = sub_10010AC60();
  sub_100109E00(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 45;
  v14._object = (void *)0xE100000000000000;
  sub_100109E00(v14);
  v15._countAndFlagsBits = sub_10010AC60();
  sub_100109E00(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 45;
  v16._object = (void *)0xE100000000000000;
  sub_100109E00(v16);
  v11._countAndFlagsBits = 0x656772614C78;
  switch(a7)
  {
    case 1:
      v11._countAndFlagsBits = 0x69576D756964656DLL;
      uint64_t v10 = (void *)0xEA00000000006564;
      break;
    case 2:
      uint64_t v10 = (void *)0xE500000000000000;
      v11._countAndFlagsBits = 0x656772616CLL;
      break;
    case 3:
      v11._countAndFlagsBits = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t v10 = (void *)0xE500000000000000;
      v11._countAndFlagsBits = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v10 = (void *)0xEA00000000006E65;
      v11._countAndFlagsBits = 0x657263536C6C7566;
      break;
    default:
      break;
  }
  v11._object = v10;
  sub_100109E00(v11);
  swift_bridgeObjectRelease();
  if ((a6 & 1) == 0)
  {
    v17._countAndFlagsBits = sub_10010AC60();
    sub_100109E00(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 45;
    v18._object = (void *)0xE100000000000000;
    sub_100109E00(v18);
    swift_bridgeObjectRelease();
  }
  if ((a4 & 1) == 0)
  {
    v19._countAndFlagsBits = sub_10010AC60();
    sub_100109E00(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 45;
    v20._object = (void *)0xE100000000000000;
    sub_100109E00(v20);
    swift_bridgeObjectRelease();
  }
  return 0x2D626D756874;
}

uint64_t sub_10007B164(unsigned __int8 *a1, char *a2)
{
  return sub_100080FF0(*a1, *a2);
}

Swift::Int sub_10007B170()
{
  return sub_100076488();
}

uint64_t sub_10007B178()
{
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10007B26C()
{
  return sub_10007685C();
}

uint64_t sub_10007B274@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10007B3E0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10007B2A4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x656772614C78;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x69576D756964656DLL;
      unint64_t v2 = 0xEA00000000006564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656772616CLL;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6C6C616D73;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x657263536C6C7566;
      a1[1] = 0xEA00000000006E65;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_10007B378(void *a1@<X8>)
{
  *a1 = &off_1001400B8;
}

unint64_t sub_10007B38C()
{
  unint64_t result = qword_10015C560;
  if (!qword_10015C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C560);
  }
  return result;
}

uint64_t sub_10007B3E0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100140008;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_10007B42C()
{
  unint64_t result = qword_100159D68;
  if (!qword_100159D68)
  {
    sub_1001094F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159D68);
  }
  return result;
}

unint64_t sub_10007B484(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C5B0, &qword_10015C5B8, (uint64_t (*)(uint64_t))sub_1000FCC0C);
}

unint64_t sub_10007B4AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::OpaquePointer v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C5E0);
  uint64_t v2 = sub_10010AAC0();
  Swift::OpaquePointer v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000248D8(v6, (uint64_t)v15, &qword_10015C5E8);
    unint64_t result = sub_1000FCC10((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10002426C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B5F0(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C5C0, &qword_10015C5C8, (uint64_t (*)(uint64_t))sub_1000FCC0C);
}

unint64_t sub_10007B618(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(a2);
  uint64_t v7 = sub_10010AAC0();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000248D8(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10002426C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B748(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C5F0, &qword_10015C5F8, (uint64_t (*)(uint64_t))sub_1000FCC0C);
}

unint64_t sub_10007B770(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::OpaquePointer v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C600);
  uint64_t v2 = sub_10010AAC0();
  Swift::OpaquePointer v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000248D8(v6, (uint64_t)&v15, &qword_10015C608);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1000FCF10(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10002426C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B8A8(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C650, &qword_10015C658, (uint64_t (*)(uint64_t))sub_1000FCC0C);
}

unint64_t sub_10007B8D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C618);
  uint64_t v2 = (void *)sub_10010AAC0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_1000FCD70(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007B9D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C598);
  uint64_t v2 = (void *)sub_10010AAC0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_1000FCF88((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007BAD4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C588);
  uint64_t v2 = sub_10010AAC0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000248D8(v6, (uint64_t)&v13, &qword_10015C590);
    uint64_t v7 = v13;
    unint64_t result = sub_1000FCF88(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_10002426C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007BC04(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C630);
  uint64_t v2 = (void *)sub_10010AAC0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1000FCC0C();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007BD04(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C638, &qword_10015C640, (uint64_t (*)(uint64_t))sub_1000FCC0C);
}

unint64_t sub_10007BD2C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004BD4(&qword_10015C648);
  uint64_t v2 = (void *)sub_10010AAC0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1000FCC0C();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007BE38(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C5A0, &qword_10015C5A8, (uint64_t (*)(uint64_t))sub_1000FCC0C);
}

unint64_t sub_10007BE60(uint64_t a1)
{
  return sub_10007B618(a1, &qword_10015C620, &qword_10015C628, sub_1000FCC0C);
}

id sub_10007BE88(double a1)
{
  sub_100004BD4((uint64_t *)&unk_10015CE00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = kCGImageSourceShouldCache;
  *(unsigned char *)(inited + 40) = 1;
  CFStringRef v3 = (id)kCGImageSourceShouldCache;
  sub_10007B9D4(inited);
  type metadata accessor for CFString(0);
  sub_10007CFD4();
  v4.super.Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  sub_1001090F0(v5);
  CFURLRef v7 = v6;
  char v8 = CGImageSourceCreateWithURL(v6, v4.super.isa);

  if (!v8)
  {
    if (qword_100158A88 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100109960();
    sub_100007CB8(v19, (uint64_t)qword_10015C568);
    Swift::String v20 = sub_100109940();
    os_log_type_t v21 = sub_10010A2D0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v23 = sub_10010AED0();
      sub_1000C50D4(v23, v24, &v30);
      sub_10010A730();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s.createImage | Failed to create CGImageSource with URL", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }

LABEL_14:
    return 0;
  }
  sub_100004BD4(&qword_10015C580);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001246C0;
  *(void *)(v9 + 32) = kCGImageSourceCreateThumbnailFromImageAlways;
  *(unsigned char *)(v9 + 40) = 1;
  *(void *)(v9 + 64) = &type metadata for Bool;
  *(void *)(v9 + 72) = kCGImageSourceCreateThumbnailWithTransform;
  *(unsigned char *)(v9 + 80) = 1;
  uint64_t v10 = (void *)kCGImageSourceSkipMetadata;
  *(void *)(v9 + 104) = &type metadata for Bool;
  *(void *)(v9 + 112) = v10;
  *(unsigned char *)(v9 + 120) = 1;
  *(void *)(v9 + 144) = &type metadata for Bool;
  *(void *)(v9 + 152) = kCGImageSourceThumbnailMaxPixelSize;
  *(void *)(v9 + 184) = &type metadata for CGFloat;
  *(double *)(v9 + 160) = a1;
  CFStringRef v11 = (id)kCGImageSourceCreateThumbnailFromImageAlways;
  CFStringRef v12 = (id)kCGImageSourceCreateThumbnailWithTransform;
  id v13 = v10;
  CFStringRef v14 = (id)kCGImageSourceThumbnailMaxPixelSize;
  sub_10007BAD4(v9);
  v15.super.Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  ThumbnailAtIndeCGFloat x = CGImageSourceCreateThumbnailAtIndex(v8, 0, v15.super.isa);
  if (!ThumbnailAtIndex)
  {
    if (qword_100158A88 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_100109960();
    sub_100007CB8(v25, (uint64_t)qword_10015C568);
    uint64_t v26 = sub_100109940();
    os_log_type_t v27 = sub_10010A2D0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Image downsample failed.", v28, 2u);
      swift_slowDealloc();

      return 0;
    }

    goto LABEL_14;
  }
  CGImageRef v17 = ThumbnailAtIndex;
  id v18 = [objc_allocWithZone((Class)UIImage) initWithCGImage:ThumbnailAtIndex];

  return v18;
}

uint64_t sub_10007C2BC(double a1)
{
  *(void *)(v2 + 136) = v1;
  *(double *)(v2 + 128) = a1;
  uint64_t v3 = sub_1001098B0();
  *(void *)(v2 + 144) = v3;
  *(void *)(v2 + 152) = *(void *)(v3 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v4 = sub_100109960();
  *(void *)(v2 + 176) = v4;
  *(void *)(v2 + 184) = *(void *)(v4 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v5 = sub_1001098E0();
  *(void *)(v2 + 200) = v5;
  *(void *)(v2 + 208) = *(void *)(v5 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  return _swift_task_switch(sub_10007C448, 0, 0);
}

uint64_t sub_10007C448()
{
  if (qword_100158A88 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = sub_100007CB8(v3, (uint64_t)qword_10015C568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_1001098C0();
  sub_1001098A0();
  uint64_t v5 = sub_1001098D0();
  os_signpost_type_t v6 = sub_10010A460();
  if (sub_10010A6E0())
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, *(void *)(v0 + 168), v8);
    CFStringRef v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CFStringRef v11 = 0;
    os_signpost_id_t v12 = sub_100109890();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, v6, v12, "createThumbnail", "", v11, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);

    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 152);
  CGImageRef v17 = *(void **)(v0 + 136);
  v10(*(void *)(v0 + 160), v14, v15);
  sub_100109920();
  swift_allocObject();
  *(void *)(v0 + 224) = sub_100109910();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  [v17 size];
  double v18 = *(double *)(v0 + 128);
  BOOL v21 = v20 < v19;
  double v22 = v20 / v19 * v18;
  double v23 = v19 / v20 * v18;
  if (v21) {
    double v24 = *(double *)(v0 + 128);
  }
  else {
    double v24 = v22;
  }
  if (v21) {
    double v25 = v23;
  }
  else {
    double v25 = *(double *)(v0 + 128);
  }
  uint64_t v26 = *(void **)(v0 + 136);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_10007C740;
  uint64_t v27 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1000F9768;
  *(void *)(v0 + 104) = &unk_1001434A8;
  *(void *)(v0 + 112) = v27;
  [v26 prepareThumbnailOfSize:v0 + 80 completionHandler:v25, v24];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10007C740()
{
  return _swift_task_switch(sub_10007C820, 0, 0);
}

uint64_t sub_10007C820()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[15];
  sub_10007CCBC(v1, (unint64_t)"createThumbnail", 15, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_10007C904()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015C568);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015C568);
  if (qword_100158C38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E078);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

UIImage *sub_10007C9CC(void *a1)
{
  CFAbsoluteTimeGetCurrent();
  if (![a1 imageOrientation]
    || ([a1 size],
        UIGraphicsBeginImageContext(v4),
        objc_msgSend(a1, "drawAtPoint:", 0.0, 0.0),
        uint64_t v2 = UIGraphicsGetImageFromCurrentImageContext(),
        UIGraphicsEndImageContext(),
        !v2))
  {
    uint64_t v2 = a1;
  }
  sub_10007CA74();
  return v2;
}

void sub_10007CA74()
{
  v4[1] = 0xE000000000000000;
  sub_10010A8D0(46);
  v5._countAndFlagsBits = sub_10010AED0();
  sub_100109E00(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x80000001001106A0;
  v6._countAndFlagsBits = 0xD000000000000022;
  sub_100109E00(v6);
  CFAbsoluteTimeGetCurrent();
  sub_10010A0D0();
  v7._countAndFlagsBits = 0x73646E6F63657320;
  v7._object = (void *)0xE800000000000000;
  sub_100109E00(v7);
  if (qword_100158A88 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100109960();
  sub_100007CB8(v0, (uint64_t)qword_10015C568);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    v4[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000C50D4(0, 0xE000000000000000, v4);
    sub_10010A730();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10007CCBC(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_1001098F0();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1001098B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_signpost_id_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_1001098D0();
  sub_100109900();
  int v24 = sub_10010A450();
  if ((sub_10010A6E0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_1000FA8A0();
LABEL_10:
  swift_retain();
  sub_100109930();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    double v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    double v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  double v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)double v20 = 0;
  os_signpost_id_t v21 = sub_100109890();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  double v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

unint64_t sub_10007CFD4()
{
  unint64_t result = qword_100159108;
  if (!qword_100159108)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159108);
  }
  return result;
}

unint64_t sub_10007D02C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100004BD4(&qword_10015C610);
  uint64_t v3 = (void *)sub_10010AAC0();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t result = sub_1000FCEA0(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    os_signpost_id_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_1000FCEA0(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10007D128(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004BD4(&qword_10015C5D8);
    uint64_t v3 = (void *)sub_10010AAC0();
    for (uint64_t i = (double *)(a1 + 144); ; i += 15)
    {
      uint64_t v24 = v1;
      double v5 = *(i - 14);
      double v6 = *(i - 13);
      long long v25 = *((_OWORD *)i - 6);
      long long v26 = *((_OWORD *)i - 5);
      char v7 = *((unsigned char *)i - 64);
      uint64_t v9 = *((void *)i - 7);
      uint64_t v8 = *((void *)i - 6);
      char v10 = *((unsigned char *)i - 40);
      uint64_t v12 = *((void *)i - 4);
      uint64_t v11 = *((void *)i - 3);
      uint64_t v13 = *((void *)i - 2);
      uint64_t v14 = *((void *)i - 1);
      double v15 = *i;
      unint64_t result = sub_1000FD03C(v5, v6);
      if (v17) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v18 = (double *)(v3[6] + 16 * result);
      *uint64_t v18 = v5;
      v18[1] = v6;
      uint64_t v19 = v3[7] + 104 * result;
      *(_OWORD *)uint64_t v19 = v25;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v7;
      *(void *)(v19 + 40) = v9;
      *(void *)(v19 + 48) = v8;
      *(unsigned char *)(v19 + 56) = v10;
      *(void *)(v19 + 64) = v12;
      *(void *)(v19 + 72) = v11;
      *(void *)(v19 + 80) = v13;
      *(void *)(v19 + 88) = v14;
      *(double *)(v19 + 96) = v15;
      uint64_t v20 = v3[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_10;
      }
      v3[2] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = (id)v26;
      swift_bridgeObjectRetain();
      uint64_t v1 = v24 - 1;
      if (v24 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t type metadata accessor for SuggestionSheetConstants()
{
  return self;
}

char *sub_10007D2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  double v15 = [objc_allocWithZone(v9) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v16 = &v15[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName];
  *(void *)id v16 = a1;
  *((void *)v16 + 1) = a2;
  char v17 = v15;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)&v17[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel];
  id v19 = v18;
  if (a4)
  {
    NSString v20 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  [v18 setText:v20];

  BOOL v21 = *(void **)&v17[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel];
  id v22 = v21;
  if (a6)
  {
    NSString v23 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v23 = 0;
  }
  [v21 setText:v23];

  uint64_t v24 = *(void **)&v17[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel];
  id v25 = v24;
  if (a8)
  {
    NSString v26 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v26 = 0;
  }
  [v24 setText:v26];

  uint64_t v27 = *(void **)&v17[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleStack];
  [v27 setAxis:1];
  [v27 setDistribution:4];
  id v28 = v27;

  [v28 setAlignment:1];
  return v17;
}

id sub_10007D4BC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleStack;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UIStackView) init];
  double v15 = &v11[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName];
  *(void *)double v15 = 0;
  *((void *)v15 + 1) = 0;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_contentSizeTraitChangeRegistration] = 0;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for SymbolAndTextFallbackView();
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  sub_10007D644();

  return v16;
}

id sub_10007D644()
{
  swift_getObjectType();
  [*(id *)&v0[OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView] setContentMode:1];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel];
  os_log_type_t v2 = self;
  id v3 = [v2 secondaryLabelColor];
  [v1 setTextColor:v3];

  if (qword_100158958 != -1) {
    swift_once();
  }
  [v1 setFont:qword_10016DD50];
  [v1 setMinimumScaleFactor:0.6];
  [v1 setAdjustsFontForContentSizeCategory:1];
  [v1 setNumberOfLines:2];
  char v4 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel];
  id v5 = [v2 secondaryLabelColor];
  [v4 setTextColor:v5];

  if (qword_100158948 != -1) {
    swift_once();
  }
  [v4 setFont:qword_10016DD40];
  [v4 setAdjustsFontSizeToFitWidth:1];
  [v4 setMinimumScaleFactor:0.6];
  double v6 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel];
  id v7 = [v2 tertiaryLabelColor];
  [v6 setTextColor:v7];

  [v6 setFont:qword_10016DD40];
  [v6 setAdjustsFontSizeToFitWidth:1];
  [v6 setMinimumScaleFactor:0.6];
  id v8 = [v0 traitCollection];
  id v9 = [v8 preferredContentSizeCategory];

  LOBYTE(v8) = sub_10010A4A0();
  uint64_t v10 = v8 & 1;
  [v1 setAdjustsFontSizeToFitWidth:v10];
  [v4 setAdjustsFontForContentSizeCategory:v10];
  [v6 setAdjustsFontForContentSizeCategory:v10];
  sub_100004BD4(&qword_10015B760);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100122230;
  *(void *)(v11 + 32) = sub_1001099A0();
  *(void *)(v11 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  uint64_t v12 = sub_10010A650();
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_contentSizeTraitChangeRegistration] = v12;
  swift_unknownObjectRelease();
  LODWORD(v13) = 1148846080;
  [v1 setContentCompressionResistancePriority:1 forAxis:v13];
  type metadata accessor for UILayoutPriority(0);
  sub_10007FB20();
  sub_100109970();
  LODWORD(v14) = v17;
  [v4 setContentCompressionResistancePriority:1 forAxis:v14];
  sub_100109970();
  LODWORD(v15) = v17;
  return [v6 setContentCompressionResistancePriority:1 forAxis:v15];
}

void sub_10007DA44(void *a1)
{
  id v3 = v1;
  id v5 = [v3 subviews];
  sub_10007FADC();
  unint64_t v6 = sub_100109F30();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
LABEL_131:
    swift_once();
LABEL_12:
    id v12 = (id)qword_10016E238;
    if (v2)
    {
      NSString v13 = sub_100109CF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v13 = 0;
    }
    id v48 = [self _systemImageNamed:v13 withConfiguration:v12];

    [(id)v6 setImage:v48];
    if (qword_100158930 != -1) {
      swift_once();
    }
    [(id)v6 setTintColor:qword_10016DD28];
    id v49 = [(id)v6 superview];
    if (v49)
    {
      uint64_t v50 = v49;
      [(id)v6 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v51 = [(id)v6 centerXAnchor];
      id v52 = [v50 centerXAnchor];
      id v53 = [v51 constraintEqualToAnchor:v52];

      [v53 setConstant:0.0];
      if (v53)
      {
        id v54 = v53;
        [v54 setActive:1];
      }
    }
    id v55 = [(id)v6 superview];
    if (v55)
    {
      char v56 = v55;
      [(id)v6 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v57 = [(id)v6 topAnchor];
      id v58 = [v56 topAnchor];
      id v59 = [v57 constraintGreaterThanOrEqualToAnchor:v58];

      [v59 setConstant:12.0];
      if (v59)
      {
        id v60 = v59;
        [v60 setActive:1];
      }
    }
    uint64_t v61 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel];
    if (qword_100158958 != -1) {
      swift_once();
    }
    [v61 setFont:qword_10016DD50];
    [a1 setAlignment:3];
    [a1 addArrangedSubview:v61];
    [a1 addArrangedSubview:*(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel]];
    id v62 = [a1 superview];
    if (v62)
    {
      uint64_t v63 = v62;
      [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v64 = [a1 leadingAnchor];
      id v65 = [v63 leadingAnchor];
      id v66 = [v64 constraintEqualToAnchor:v65];

      [v66 setConstant:12.0];
      if (v66)
      {
        id v67 = v66;
        [v67 setActive:1];
      }
    }

    id v68 = [a1 superview];
    if (v68)
    {
      unint64_t v69 = v68;
      [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v70 = [a1 trailingAnchor];
      id v71 = [v69 trailingAnchor];
      id v72 = [v70 constraintEqualToAnchor:v71];

      [v72 setConstant:-12.0];
      id v73 = v72;
      [v73 setActive:1];
    }
    id v74 = [a1 topAnchor];
    id v75 = [(id)v6 bottomAnchor];
    id v189 = [v74 constraintEqualToAnchor:v75 constant:20.0];

    [v189 setActive:1];
    goto LABEL_57;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)sub_10010A920();
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    [v9 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  switch((char)a1)
  {
    case 1:
      [v3 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
      id v14 = [objc_allocWithZone((Class)UIView) init];
      id v189 = v14;
      if (qword_100158920 != -1)
      {
        swift_once();
        id v14 = v189;
      }
      [v14 setBackgroundColor:qword_10016DD18];
      [v3 addSubview:v189];
      id v15 = [v189 superview];
      if (v15)
      {
        id v16 = v15;
        [v189 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v17 = [v189 leadingAnchor];
        id v18 = [v16 leadingAnchor];
        id v19 = [v17 constraintEqualToAnchor:v18];

        [v19 setConstant:0.0];
        if (v19)
        {
          id v20 = v19;
          [v20 setActive:1];
        }
      }
      id v21 = [v189 superview];
      if (v21)
      {
        id v22 = v21;
        [v189 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v23 = [v189 topAnchor];
        id v24 = [v22 topAnchor];
        id v25 = [v23 constraintEqualToAnchor:v24];

        [v25 setConstant:0.0];
        if (v25)
        {
          id v26 = v25;
          [v26 setActive:1];
        }
      }

      id v27 = [v189 widthAnchor];
      id v28 = [v3 heightAnchor];
      id v29 = [v27 constraintEqualToAnchor:v28];

      [v29 setActive:1];
      uint64_t v30 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView];
      uint64_t v31 = *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName + 8];
      uint64_t v32 = qword_100158CB8;
      swift_bridgeObjectRetain();
      if (v32 != -1) {
        swift_once();
      }
      id v33 = (id)qword_10016E240;
      if (v31)
      {
        NSString v34 = sub_100109CF0();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v34 = 0;
      }
      id v77 = [self _systemImageNamed:v34 withConfiguration:v33];

      [v30 setImage:v77];
      if (qword_100158930 != -1) {
        swift_once();
      }
      [v30 setTintColor:qword_10016DD28];
      [v189 addSubview:v30];
      id v78 = [v30 superview];
      if (v78)
      {
        int v79 = v78;
        [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v80 = [v30 centerXAnchor];
        id v81 = [v79 centerXAnchor];
        id v82 = [v80 constraintEqualToAnchor:v81];

        [v82 setConstant:0.0];
        id v83 = v82;
        [v83 setActive:1];
      }
      id v84 = [v30 superview];
      if (v84)
      {
        uint64_t v85 = v84;
        [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v86 = [v30 centerYAnchor];
        id v87 = [v85 centerYAnchor];
        id v88 = [v86 constraintEqualToAnchor:v87];

        [v88 setConstant:0.0];
        id v89 = v88;
        [v89 setActive:1];
      }
      uint64_t v90 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel];
      if (qword_100158958 != -1) {
        swift_once();
      }
      [v90 setFont:qword_10016DD50];
      uint64_t v91 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleStack];
      [v91 setAlignment:1];
      [v91 addArrangedSubview:v90];
      [v91 addArrangedSubview:*(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel]];
      double v92 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel];
      id v93 = [v92 text];
      if (v93)
      {

        id v94 = [objc_allocWithZone((Class)UIStackView) init];
        [v94 setAxis:1];
        [v94 setDistribution:4];
        [v94 setAlignment:1];
        [v94 setSpacing:5.0];
        [v94 addArrangedSubview:v91];
        [v94 addArrangedSubview:v92];
        [v3 addSubview:v94];
        [v94 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v95 = [v94 leadingAnchor];
        id v96 = [v189 trailingAnchor];
        id v97 = [v95 constraintEqualToAnchor:v96];

        [v97 setConstant:12.0];
        [v97 setActive:1];

        id v98 = [v94 superview];
        if (v98)
        {
          id v99 = v98;
          [v94 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v100 = [v94 centerYAnchor];
          id v101 = [v99 centerYAnchor];
          id v102 = [v100 constraintEqualToAnchor:v101];

          [v102 setConstant:0.0];
          id v103 = v102;
          [v103 setActive:1];
        }
        id v104 = [v94 superview];
        if (v104)
        {
          id v188 = v104;
          [v94 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v105 = [v94 trailingAnchor];
          id v106 = [v188 trailingAnchor];
          id v107 = [v105 constraintEqualToAnchor:v106];

          [v107 setConstant:-12.0];
          id v108 = v107;
          [v108 setActive:1];

LABEL_115:
          uint64_t v76 = v188;
          goto LABEL_116;
        }
      }
      else
      {
        [v3 addSubview:v91];
        [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v160 = [v91 leadingAnchor];
        id v161 = [v189 trailingAnchor];
        id v162 = [v160 constraintEqualToAnchor:v161];

        [v162 setConstant:12.0];
        [v162 setActive:1];

        id v163 = [v91 superview];
        if (v163)
        {
          uint64_t v164 = v163;
          [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v165 = [v91 centerYAnchor];
          id v166 = [v164 centerYAnchor];
          id v167 = [v165 constraintEqualToAnchor:v166];

          [v167 setConstant:0.0];
          id v168 = v167;
          [v168 setActive:1];
        }
        id v169 = [v91 superview];
        if (v169)
        {
          id v188 = v169;
          [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v170 = [v91 trailingAnchor];
          id v171 = [v188 trailingAnchor];
          id v172 = [v170 constraintEqualToAnchor:v171];

          [v172 setConstant:-12.0];
          id v108 = v172;
          [v108 setActive:1];
          goto LABEL_115;
        }
      }
      break;
    case 3:
      [v3 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
      uint64_t v35 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView];
      [v3 addSubview:v35];
      uint64_t v36 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel];
      [v3 addSubview:v36];
      uint64_t v37 = *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName + 8];
      uint64_t v38 = qword_100158CB8;
      swift_bridgeObjectRetain();
      if (v38 != -1) {
        swift_once();
      }
      id v39 = (id)qword_10016E240;
      if (v37)
      {
        NSString v40 = sub_100109CF0();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v40 = 0;
      }
      id v109 = [self _systemImageNamed:v40 withConfiguration:v39];

      [v35 setImage:v109];
      if (qword_100158930 != -1) {
        swift_once();
      }
      [v35 setTintColor:qword_10016DD28];
      id v110 = [v35 superview];
      if (v110)
      {
        uint64_t v111 = v110;
        [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v112 = [v35 centerXAnchor];
        id v113 = [v111 centerXAnchor];
        id v114 = [v112 constraintEqualToAnchor:v113];

        [v114 setConstant:0.0];
        if (v114)
        {
          id v115 = v114;
          [v115 setActive:1];
        }
      }
      id v116 = [v35 superview];
      if (v116)
      {
        uint64_t v117 = v116;
        [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v118 = [v35 topAnchor];
        id v119 = [v117 topAnchor];
        id v120 = [v118 constraintGreaterThanOrEqualToAnchor:v119];

        [v120 setConstant:12.0];
        if (v120)
        {
          id v121 = v120;
          [v121 setActive:1];
        }
      }
      if (qword_100158948 != -1) {
        swift_once();
      }
      [v36 setFont:qword_10016DD40];
      id v122 = [v36 superview];
      if (v122)
      {
        char v123 = v122;
        [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v124 = [v36 leadingAnchor];
        id v125 = [v123 leadingAnchor];
        id v126 = [v124 constraintEqualToAnchor:v125];

        [v126 setConstant:8.0];
        if (v126)
        {
          id v127 = v126;
          [v127 setActive:1];
        }
      }

      id v128 = [v36 superview];
      if (v128)
      {
        unint64_t v129 = v128;
        [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v130 = [v36 trailingAnchor];
        id v131 = [v129 trailingAnchor];
        id v132 = [v130 constraintEqualToAnchor:v131];

        [v132 setConstant:-8.0];
        id v133 = v132;
        [v133 setActive:1];
      }
      goto LABEL_125;
    case 4:
      [v3 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
      uint64_t v35 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView];
      [v3 addSubview:v35];
      uint64_t v41 = *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName + 8];
      uint64_t v42 = qword_100158CB8;
      swift_bridgeObjectRetain();
      if (v42 != -1) {
        swift_once();
      }
      id v43 = (id)qword_10016E240;
      if (v41)
      {
        NSString v44 = sub_100109CF0();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v44 = 0;
      }
      id v134 = [self _systemImageNamed:v44 withConfiguration:v43];

      [v35 setImage:v134];
      if (qword_100158930 != -1) {
        swift_once();
      }
      [v35 setTintColor:qword_10016DD28];
      id v135 = [v35 superview];
      if (v135)
      {
        char v136 = v135;
        [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v137 = [v35 centerXAnchor];
        id v138 = [v136 centerXAnchor];
        id v139 = [v137 constraintEqualToAnchor:v138];

        [v139 setConstant:0.0];
        if (v139)
        {
          id v140 = v139;
          [v140 setActive:1];
        }
      }
      id v141 = [v35 superview];
      if (v141)
      {
        id v142 = v141;
        [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v143 = [v35 topAnchor];
        id v144 = [v142 topAnchor];
        id v145 = [v143 constraintGreaterThanOrEqualToAnchor:v144];

        [v145 setConstant:12.0];
        if (v145)
        {
          id v146 = v145;
          [v146 setActive:1];
        }
      }
      uint64_t v36 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel];
      id v147 = [v36 text];
      if (v147)
      {

        [v3 addSubview:v36];
        id v148 = [v36 superview];
        if (v148)
        {
          uint64_t v149 = v148;
          [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v150 = [v36 leadingAnchor];
          id v151 = [v149 leadingAnchor];
          id v152 = [v150 constraintEqualToAnchor:v151];

          [v152 setConstant:8.0];
          if (v152)
          {
            id v153 = v152;
            [v153 setActive:1];
          }
        }

        id v154 = [v36 superview];
        if (v154)
        {
          uint64_t v155 = v154;
          [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v156 = [v36 trailingAnchor];
          id v157 = [v155 trailingAnchor];
          id v158 = [v156 constraintEqualToAnchor:v157];

          [v158 setConstant:-8.0];
          id v159 = v158;
          [v159 setActive:1];
        }
      }
      else
      {
        uint64_t v36 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel];
        [v3 addSubview:v36];
        id v173 = [v36 superview];
        if (v173)
        {
          uint64_t v174 = v173;
          [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v175 = [v36 leadingAnchor];
          id v176 = [v174 leadingAnchor];
          id v177 = [v175 constraintEqualToAnchor:v176];

          [v177 setConstant:8.0];
          if (v177)
          {
            id v178 = v177;
            [v178 setActive:1];
          }
        }

        id v179 = [v36 superview];
        if (v179)
        {
          uint64_t v180 = v179;
          [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v181 = [v36 trailingAnchor];
          id v182 = [v180 trailingAnchor];
          id v183 = [v181 constraintEqualToAnchor:v182];

          [v183 setConstant:-8.0];
          id v184 = v183;
          [v184 setActive:1];
        }
      }
LABEL_125:
      id v185 = [v36 topAnchor];
      id v186 = [v35 bottomAnchor];
      id v187 = [v185 constraintEqualToAnchor:v186 constant:6.0];

      [v187 setActive:1];
      char v45 = "setTextAlignment:";
      char v46 = v36;
      uint64_t v47 = 1;
      goto LABEL_126;
    case 5:
      char v45 = "setMaximumContentSizeCategory:";
      char v46 = v3;
      uint64_t v47 = 0;
LABEL_126:
      [v46 v45:v47];
      return;
    default:
      [v3 setMaximumContentSizeCategory:0];
      unint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView];
      [v3 addSubview:v6];
      a1 = *(void **)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleStack];
      [v3 addSubview:a1];
      uint64_t v2 = *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName + 8];
      uint64_t v11 = qword_100158CB0;
      swift_bridgeObjectRetain();
      if (v11 == -1) {
        goto LABEL_12;
      }
      goto LABEL_131;
  }
LABEL_57:
  uint64_t v76 = v189;
LABEL_116:
}

uint64_t sub_10007F970()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

id sub_10007F9F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SymbolAndTextFallbackView();
  return [super dealloc];
}

uint64_t type metadata accessor for SymbolAndTextFallbackView()
{
  return self;
}

unint64_t sub_10007FADC()
{
  unint64_t result = qword_10015A018;
  if (!qword_10015A018)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015A018);
  }
  return result;
}

unint64_t sub_10007FB20()
{
  unint64_t result = qword_10015C758;
  if (!qword_10015C758)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C758);
  }
  return result;
}

void sub_10007FB78()
{
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleStack;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIStackView) init];
  id v5 = &v0[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_symbolName];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_contentSizeTraitChangeRegistration] = 0;

  sub_10010AA60();
  __break(1u);
}

id sub_10007FC78(char *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(v2) = sub_10010A4A0();
  uint64_t v4 = v2 & 1;
  [*(id *)&a1[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_titleLabel] setAdjustsFontSizeToFitWidth:v4];
  [*(id *)&a1[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_subtitleLabel] setAdjustsFontForContentSizeCategory:v4];
  id v5 = *(void **)&a1[OBJC_IVAR____TtC21JournalShareExtension25SymbolAndTextFallbackView_captionLabel];

  return [v5 setAdjustsFontForContentSizeCategory:v4];
}

BOOL sub_10007FD44()
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  [v0 getRed:&v6 green:&v5 blue:&v4 alpha:&v3];
  BOOL v1 = v6 >= 0.99;
  if (v5 < 0.99) {
    BOOL v1 = 0;
  }
  return v4 >= 0.99 && v1;
}

BOOL sub_10007FDE4()
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  [v0 getRed:&v6 green:&v5 blue:&v4 alpha:&v3];
  BOOL v1 = v6 <= 0.001;
  if (v5 > 0.001) {
    BOOL v1 = 0;
  }
  return v4 <= 0.001 && v1;
}

id sub_10007FE84(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 documentRange];
  id v6 = [v5 location];

  id v7 = [v2 locationFromLocation:v6 withOffset:a1];
  swift_unknownObjectRelease();
  if (!v7) {
    return 0;
  }
  id v8 = [v2 locationFromLocation:v7 withOffset:a2];
  if (!v8)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v9 = [objc_allocWithZone((Class)NSTextRange) initWithLocation:v7 endLocation:v8];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_10007FF8C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, CGRect *a7)
{
  v8.size.CGFloat height = a4;
  v8.size.CGFloat width = a3;
  v8.origin.CGFloat y = a2;
  v8.origin.CGFloat x = a1;
  *a7 = CGRectUnion(*a7, v8);
  return 1;
}

uint64_t sub_10007FFD4()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015C760);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015C760);
  if (qword_100158C28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E048);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10008009C(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  int v8 = a4 & 1;
  uint64_t v68 = sub_100109070();
  uint64_t v9 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1001091E0();
  uint64_t v12 = *(void *)(v66 - 8);
  uint64_t v13 = __chkstk_darwin(v66);
  uint64_t v56 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v55 = (char *)&v55 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  id v71 = (char *)&v55 - v18;
  __chkstk_darwin(v17);
  id v58 = (char *)&v55 - v19;
  uint64_t v61 = a3;
  uint64_t v62 = a5;
  int v59 = v8;
  int v60 = a1;
  uint64_t v20 = sub_10007AEE8(a5, 0, a3, v8, 0, 1, a1);
  uint64_t v22 = v21;
  if (qword_100158BF8 != -1)
  {
    uint64_t v54 = v20;
    swift_once();
    uint64_t v20 = v54;
  }
  id v67 = (void (**)(char *, uint64_t))(v9 + 8);
  id v23 = (void (**)(char *, uint64_t))(v12 + 8);
  unsigned int v72 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v24 = 1;
  id v25 = (void *)&unk_10016D000;
  uint64_t v63 = (void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  unint64_t v57 = (v9 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v26 = v66;
  do
  {
    uint64_t v35 = v23;
    uint64_t v36 = v20;
    id v37 = sub_1000F726C(v20, v22);
    id v38 = [v37 imageByPreparingForDisplay];

    if (!v38)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v70 = v24;
    id v39 = *(void **)(*(void *)(v25[510] + 16) + qword_1001601D0);
    id v40 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    uint64_t v69 = v36;
    NSString v41 = sub_100109CF0();
    id v42 = [v40 initWithString:v41];

    [v39 removeObjectForKey:v42];
    swift_bridgeObjectRelease();

    uint64_t v43 = qword_100158A68;
    swift_bridgeObjectRetain();
    if (v43 != -1) {
      swift_once();
    }
    uint64_t v44 = v72;
    if (qword_10016DEA8)
    {
      uint64_t v45 = v56;
      sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, v56);
      uint64_t v65 = v22;
      char v46 = v67;
      uint64_t v47 = v68;
      id v27 = *v63;
      (*v63)(v11, v44, v68);
      sub_10005058C();
      id v48 = v55;
      sub_1001091B0();
      id v64 = *v46;
      v64(v11, v47);
      id v23 = v35;
      id v49 = *v35;
      v49((char *)v45, v66);
      v27(v11, v72, v47);
      uint64_t v22 = v65;
      uint64_t v44 = v72;
      sub_1001091B0();
      v64(v11, v47);
      uint64_t v26 = v66;
      v49(v48, v66);
    }
    else
    {
      sub_1001090B0();
      id v27 = *v63;
      id v23 = v35;
    }
    uint64_t v73 = v69;
    uint64_t v74 = v22;
    uint64_t v28 = v44;
    uint64_t v29 = v68;
    v27(v11, v28, v68);
    sub_10005058C();
    uint64_t v30 = v58;
    uint64_t v31 = v71;
    sub_1001091C0();
    (*v67)(v11, v29);
    uint64_t v32 = *v23;
    (*v23)(v31, v26);
    sub_100080A8C();
    v32(v30, v26);
    swift_bridgeObjectRelease_n();
    uint64_t v33 = v70;
    uint64_t v20 = sub_10007AEE8(v62, v70, v61, v59, 0, 1, v60);
    uint64_t v22 = v34;
    uint64_t v24 = v33 + 1;
    id v25 = &unk_10016D000;
  }
  while (v24 != 102);
  swift_bridgeObjectRelease();
  if (qword_100158A90 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_100109960();
  sub_100007CB8(v50, (uint64_t)qword_10015C760);
  id v51 = sub_100109940();
  os_log_type_t v52 = sub_10010A2E0();
  if (os_log_type_enabled(v51, v52))
  {
    id v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "(purgeCache) Infinite loop, exiting", v53, 2u);
    swift_slowDealloc();
  }
}

void sub_1000806D8(uint64_t a1)
{
  uint64_t v2 = sub_1001094F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  for (uint64_t i = 0; i != 6; ++i)
  {
    int v7 = *((unsigned __int8 *)&off_1001400E0 + i + 32);
    switch(*((unsigned char *)&off_1001400E0 + i + 32))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v8 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          sub_10008009C(v7, a1, 0, 1, a1);
          sub_10008009C(v7, a1, 1, 0, a1);
          sub_10008009C(v7, a1, 2, 0, a1);
        }
        break;
    }
  }
  if (qword_100158A90 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100109960();
  sub_100007CB8(v9, (uint64_t)qword_10015C760);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v10 = sub_100109940();
  os_log_type_t v11 = sub_10010A2F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_10007B42C();
    uint64_t v13 = sub_10010AC60();
    uint64_t v15 = sub_1000C50D4(v13, v14, &v16);
    sub_10010A730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Purged cache for asset %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_100080A8C()
{
  id v0 = [self defaultManager];
  sub_1001090F0(v1);
  uint64_t v3 = v2;
  id v14 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v14];

  id v5 = v14;
  if (v4)
  {
    id v6 = v5;
  }
  else
  {
    id v7 = v14;
    sub_100108FC0();

    swift_willThrow();
    if (qword_100158A10 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_100109960();
    sub_100007CB8(v8, (uint64_t)qword_10015B290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = sub_100109940();
    os_log_type_t v10 = sub_10010A2D0();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v14 = v13;
      sub_10010A730();
      *uint64_t v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Delete data from url error: %@", v11, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

NSString sub_100080D3C()
{
  NSString result = sub_100109CF0();
  qword_10016DED8 = (uint64_t)result;
  return result;
}

NSString sub_100080D78()
{
  NSString result = sub_100109CF0();
  qword_10016DEE0 = (uint64_t)result;
  return result;
}

NSString sub_100080DB0()
{
  NSString result = sub_100109CF0();
  qword_10016DEE8 = (uint64_t)result;
  return result;
}

uint64_t _s4KeysCMa()
{
  return self;
}

uint64_t sub_100080E0C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x636973756DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x636973756DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x74736163646F70;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x656C6369747261;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1802465122;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 30324;
      break;
    case 5:
      unint64_t v3 = 0x800000010010CEC0;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x74736163646F70) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x656C6369747261) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802465122) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 30324;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x800000010010CEC0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100080FF0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656772614C78;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656772614C78;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x69576D756964656DLL;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656772616CLL;
      break;
    case 3:
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v5 = 0x657263536C6C7566;
      unint64_t v3 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006564;
      if (v5 == 0x69576D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656772616CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6C6C616D73;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006E65;
      if (v5 != 0x657263536C6C7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000811EC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD00000000000002ALL;
  unint64_t v3 = 0x800000010010CFA0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000002ALL;
    }
    else {
      unint64_t v5 = 0xD000000000000031;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000010010CFD0;
    }
    else {
      unint64_t v6 = 0x800000010010D000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD00000000000002ALL;
    unint64_t v6 = 0x800000010010CFA0;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v3 = 0x800000010010CFD0;
  }
  else
  {
    unint64_t v2 = 0xD000000000000031;
    unint64_t v3 = 0x800000010010D000;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10010ACA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1000812E4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746E656D6F6DLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746E656D6F6DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F746F6870;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461657263;
      break;
    case 3:
      uint64_t v5 = 0x6D6F74737563;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F746F6870) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461657263) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6D6F74737563;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100081490(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6144746E656D6F6DLL;
  }
  else {
    uint64_t v3 = 0x7461447972746E65;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xEA00000000006574;
  }
  if (a2) {
    uint64_t v5 = 0x6144746E656D6F6DLL;
  }
  else {
    uint64_t v5 = 0x7461447972746E65;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006574;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_10010ACA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100081540(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 1:
      BOOL v2 = (objc_class *)[self mainBundle];
      v3._object = (void *)0xEA00000000006F74;
      v9._countAndFlagsBits = 0x8000000100110CA0;
      v3._countAndFlagsBits = 0x6F6870206576696CLL;
      goto LABEL_20;
    case 2:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110C60;
      v3._countAndFlagsBits = 0x6F65646976;
      goto LABEL_22;
    case 3:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110C20;
      v3._countAndFlagsBits = 0x636973756DLL;
      goto LABEL_22;
    case 4:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110BE0;
      uint64_t v4 = 0x736163646F70;
      goto LABEL_15;
    case 5:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110BA0;
      v3._countAndFlagsBits = 1802465122;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_20;
    case 6:
    case 18:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110B60;
      v3._countAndFlagsBits = 0x6572206F69647561;
      v3._object = (void *)0xEF676E6964726F63;
      goto LABEL_23;
    case 7:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110B20;
      v3._countAndFlagsBits = 0x7469736976;
      goto LABEL_22;
    case 8:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110B20;
      v3._countAndFlagsBits = 0x6563616C70;
      goto LABEL_22;
    case 9:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110B20;
      v3._countAndFlagsBits = 0x20676E696B6C6177;
      v3._object = (void *)0xEC00000061657261;
      goto LABEL_23;
    case 10:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110AE0;
      v3._countAndFlagsBits = 1802398060;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_20;
    case 11:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110AA0;
      uint64_t v4 = 0x6361746E6F63;
      goto LABEL_15;
    case 12:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110A60;
      uint64_t v4 = 0x756F6B726F77;
LABEL_15:
      v3._countAndFlagsBits = v4 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      v3._object = (void *)0xE700000000000000;
      goto LABEL_20;
    case 13:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110A20;
      v3._countAndFlagsBits = 0x2074756F6B726F77;
      v3._object = (void *)0xED00006574756F72;
      goto LABEL_20;
    case 14:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x80000001001109E0;
      v3._countAndFlagsBits = 0x697463656C666572;
      v3._object = (void *)0xEA00000000006E6FLL;
      goto LABEL_20;
    case 15:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x80000001001109A0;
      v3._countAndFlagsBits = 0x666F206574617473;
      v3._object = (void *)0xED0000646E696D20;
      goto LABEL_20;
    case 16:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110960;
      v3._countAndFlagsBits = 0x61206E6F69746F6DLL;
      v3._object = (void *)0xEF79746976697463;
LABEL_20:
      v5.value._countAndFlagsBits = 0;
      v5.value._object = 0;
      v6.super.Class isa = v2;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      goto LABEL_24;
    case 17:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110920;
      v3._countAndFlagsBits = 0x616964656DLL;
      goto LABEL_22;
    case 19:
    case 20:
      return v1;
    default:
      BOOL v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100110CE0;
      v3._countAndFlagsBits = 0x6F746F6870;
LABEL_22:
      v3._object = (void *)0xE500000000000000;
LABEL_23:
      v5.value._countAndFlagsBits = 0;
      v5.value._object = 0;
      v6.super.Class isa = v2;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
LABEL_24:
      uint64_t v1 = sub_100108F60(v3, v5, v6, v7, v9);

      return v1;
  }
}

id sub_100081C44(uint64_t a1, unint64_t a2)
{
  sub_100004BD4(&qword_10015C8F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = NSDocumentTypeDocumentOption;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  sub_100006F28(a1, a2);
  NSBundle v6 = NSDocumentTypeDocumentOption;
  Swift::String v7 = NSRTFTextDocumentType;
  unint64_t v8 = sub_10007B484(inited);
  id v9 = objc_allocWithZone((Class)NSAttributedString);
  id v10 = sub_100085508(a1, a2, v8, 0);
  sub_100007084(a1, a2);
  return v10;
}

uint64_t sub_10008215C(char a1)
{
  uint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746F68506576696CLL;
      break;
    case 2:
      uint64_t result = 0x6F65646976;
      break;
    case 3:
      uint64_t result = 0x636973756DLL;
      break;
    case 4:
      uint64_t result = 0x74736163646F70;
      break;
    case 5:
      uint64_t result = 1802465122;
      break;
    case 6:
      uint64_t result = 0x6F69647561;
      break;
    case 7:
      uint64_t result = 0x7469736976;
      break;
    case 8:
      uint64_t result = 0x6E695069746C756DLL;
      break;
    case 9:
      uint64_t result = 0x4D636972656E6567;
      break;
    case 10:
      uint64_t result = 1802398060;
      break;
    case 11:
      uint64_t result = 0x746361746E6F63;
      break;
    case 12:
      uint64_t result = 0x4974756F6B726F77;
      break;
    case 13:
      uint64_t result = 0x5274756F6B726F77;
      break;
    case 14:
      uint64_t result = 0x697463656C666572;
      break;
    case 15:
      uint64_t result = 0x4D664F6574617473;
      break;
    case 16:
      uint64_t result = 0x63416E6F69746F6DLL;
      break;
    case 17:
      uint64_t result = 0x7261506472696874;
      break;
    case 18:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 19:
      uint64_t result = 0x76456B6165727473;
      break;
    case 20:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000823F0()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v0];
  unint64_t v3 = (unint64_t)[v2 length];
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = ObjectType;
  NSBundle v6 = (void *)swift_allocObject();
  uint64_t v6[2] = sub_100085778;
  v6[3] = v5;
  _OWORD aBlock[4] = sub_1000664B8;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1000CC1EC;
  void aBlock[3] = &unk_100143748;
  Swift::String v7 = _Block_copy(aBlock);
  id v2 = v2;
  swift_retain();
  swift_release();
  [v2 enumerateAttributesInRange:0 options:v4 usingBlock:0];
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
  id v8 = [v0 length];
  sub_100004BD4(&qword_10015C920);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  os_log_type_t v11 = NSDocumentTypeDocumentAttribute;
  uint64_t v12 = NSRTFTextDocumentType;
  sub_10007B5F0(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_1000857A8(&qword_1001591B0, type metadata accessor for DocumentAttributeKey);
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v14 = [v0 dataFromRange:0 documentAttributes:v8 error:isa aBlock];

  id v15 = aBlock[0];
  if (v14)
  {
    uint64_t v16 = sub_100109250();
    swift_release();

    return v16;
  }
  uint64_t v17 = v15;
  sub_100108FC0();

  swift_willThrow();
  if (qword_100158AB0 != -1) {
    goto LABEL_13;
  }
LABEL_6:
  uint64_t v18 = sub_100109960();
  sub_100007CB8(v18, (uint64_t)qword_10015C810);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v19 = sub_100109940();
  os_log_type_t v20 = sub_10010A2D0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    swift_errorRetain();
    id v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
    aBlock[0] = v23;
    sub_10010A730();
    *uint64_t v22 = v23;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "WARNING: failed to turn NSAttributedString to Data: %@", v21, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    swift_release();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  return 0;
}

uint64_t sub_1000828C8(char a1)
{
  uint64_t result = 0x6974736567677573;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x50616964656DLL;
      goto LABEL_6;
    case 2:
      uint64_t v3 = 0x506567616D69;
      goto LABEL_6;
    case 3:
      return 0x69506172656D6163;
    case 4:
      uint64_t v3 = 0x506F69647561;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6369000000000000;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      uint64_t result = 0x6568536572616873;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100082A2C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_100109D30();
    sub_10010ADC0();
    sub_100109DB0();
    Swift::Int v3 = sub_10010AE20();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_100109D30();
      uint64_t v9 = v8;
      if (v7 == sub_100109D30() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_100109D30();
          uint64_t v17 = v16;
          if (v15 == sub_100109D30() && v17 == v18) {
            break;
          }
          char v20 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100082BF4(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_10010ADC0();
    sub_1000ADFA0(a1);
    sub_100109DB0();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_10010AE20();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1954047348;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x64724F7465737361;
            unint64_t v9 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v10 = 0xD000000000000015;
            unint64_t v9 = 0x800000010010CF30;
            break;
          case 3:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x656C746974;
            break;
          case 4:
            unint64_t v10 = 0x7461447972746E65;
            unint64_t v9 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v9 = 0xE800000000000000;
            unint64_t v10 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v9 = 0xEA00000000006574;
            unint64_t v10 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v10 = 0x72756F5365746164;
            unint64_t v9 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v9 = 0xE700000000000000;
            unint64_t v10 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v9 = 0x800000010010CF80;
            unint64_t v10 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xED0000676E697265;
            if (v10 == 0x64724F7465737361) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            unint64_t v11 = 0x800000010010CF30;
            if (v10 != 0xD000000000000015) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x656C746974) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            unint64_t v11 = 0xE900000000000065;
            if (v10 != 0x7461447972746E65) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            if (v10 != 0x6449656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            if (v10 != 0x6144656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 7:
            unint64_t v11 = 0xEA00000000006563;
            if (v10 != 0x72756F5365746164) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x64656767616C66) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x74706D6F7270) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 10:
            unint64_t v11 = 0x800000010010CF80;
            unint64_t v12 = 0xD000000000000011;
            goto LABEL_36;
          case 11:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x726568746FLL) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v10 != v12) {
              goto LABEL_38;
            }
LABEL_37:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_38:
            char v13 = sub_10010ACA0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

BOOL sub_100083064(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_10010ADC0();
  sub_10010ADD0(v3);
  Swift::Int v4 = sub_10010AE20();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_100083154(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = HIBYTE(a2) & 0xF;
  uint64_t v10 = HIBYTE(a4) & 0xF;
  if (a2)
  {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v11 = HIBYTE(a2) & 0xF;
    }
    uint64_t v12 = a1;
    if (v11) {
      goto LABEL_9;
    }
  }
  if (!a4) {
    goto LABEL_10;
  }
  uint64_t v13 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(a4) & 0xF;
  }
  uint64_t v12 = a3;
  if (v13)
  {
LABEL_9:
    sub_1000847B0(10, v12);
    NSString v14 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    NSString v14 = 0;
  }
  [v4 setDisplayName:v14];

  if (a4)
  {
    uint64_t v15 = a3 & 0xFFFFFFFFFFFFLL;
    if ((a4 & 0x2000000000000000) != 0) {
      uint64_t v15 = v10;
    }
    if (v15) {
      goto LABEL_19;
    }
  }
  if (!a2) {
    goto LABEL_20;
  }
  uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v16 = v9;
  }
  if (v16) {
LABEL_19:
  }
    NSString v17 = sub_100109CF0();
  else {
LABEL_20:
  }
    NSString v17 = 0;
  id v18 = v17;
  [v4 setContentDescription:];
}

uint64_t sub_100083294()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015C810);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015C810);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  Swift::UInt v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10008335C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000836F0(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_10008215C);
}

Swift::Int sub_100083374(uint64_t a1, uint64_t a2)
{
  return sub_1000837A0(a1, a2, (void (*)(uint64_t))sub_10008215C);
}

uint64_t sub_10008338C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100083824(a1, a2, a3, (void (*)(void))sub_10008215C);
}

Swift::Int sub_1000833A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100083894(a1, a2, a3, (void (*)(uint64_t))sub_10008215C);
}

uint64_t sub_1000833BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10008564C();
  *a1 = result;
  return result;
}

uint64_t sub_1000833EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008215C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100083418()
{
  return sub_100081540(*v0);
}

uint64_t sub_100083420()
{
  return sub_100109F00();
}

uint64_t sub_100083480()
{
  return sub_100109EC0();
}

uint64_t sub_1000834D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);

  return v4(a2, 1, 1, a1);
}

uint64_t sub_100083540@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CD7C(v5, (uint64_t)v4);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 2, v6);
  if (result)
  {
    if (result == 1)
    {
      unint64_t v8 = 0xEA00000000007972;
      uint64_t v9 = 0x746E456B6E616C62;
    }
    else
    {
      unint64_t v8 = 0xE700000000000000;
      uint64_t v9 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    uint64_t v10 = &v4[*(int *)(v6 + 48)];
    uint64_t v11 = sub_100109460();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = sub_1001094F0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
    unint64_t v8 = 0xEE007972746E4564;
    uint64_t v9 = 0x6574736567677573;
  }
  *a2 = v9;
  a2[1] = v8;
  return result;
}

uint64_t sub_1000836D8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000836F0(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1000828C8);
}

uint64_t sub_1000836F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_10010ACA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_100083788(uint64_t a1, uint64_t a2)
{
  return sub_1000837A0(a1, a2, (void (*)(uint64_t))sub_1000828C8);
}

Swift::Int sub_1000837A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_10010ADC0();
  a3(v5);
  sub_100109DB0();
  swift_bridgeObjectRelease();
  return sub_10010AE20();
}

uint64_t sub_10008380C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100083824(a1, a2, a3, (void (*)(void))sub_1000828C8);
}

uint64_t sub_100083824(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10008387C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100083894(a1, a2, a3, (void (*)(uint64_t))sub_1000828C8);
}

Swift::Int sub_100083894(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_10010ADC0();
  a4(v6);
  sub_100109DB0();
  swift_bridgeObjectRelease();
  return sub_10010AE20();
}

uint64_t sub_1000838FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000856A0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10008392C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000828C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100083958(unsigned __int8 *a1, char *a2)
{
  return sub_1000812E4(*a1, *a2);
}

Swift::Int sub_100083964()
{
  return sub_10010AE20();
}

uint64_t sub_100083A4C()
{
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100083B1C()
{
  return sub_10010AE20();
}

uint64_t sub_100083C00@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000854BC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100083C30(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x746E656D6F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F746F6870;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F697461657263;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6D6F74737563;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t type metadata accessor for Journaling()
{
  return self;
}

uint64_t getEnumTagSinglePayload for Journaling.EntryDateSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.EntryDateSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.EntryDateSource()
{
  return &type metadata for Journaling.EntryDateSource;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083FF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetSource()
{
  return &type metadata for Journaling.AssetSource;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *uint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100084184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetType()
{
  return &type metadata for Journaling.AssetType;
}

unint64_t sub_1000841C0()
{
  unint64_t result = qword_10015C8C0;
  if (!qword_10015C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C8C0);
  }
  return result;
}

unint64_t sub_100084218()
{
  unint64_t result = qword_10015C8C8;
  if (!qword_10015C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C8C8);
  }
  return result;
}

unint64_t sub_100084270()
{
  unint64_t result = qword_10015C8D0;
  if (!qword_10015C8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C8D0);
  }
  return result;
}

uint64_t sub_1000842C4()
{
  sub_100004BD4(&qword_10015C930);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100124790;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = NSLinkAttributeName;
  *(void *)(inited + 48) = NSParagraphStyleAttributeName;
  *(void *)(inited + 56) = NSUnderlineStyleAttributeName;
  *(void *)(inited + 64) = NSStrikethroughStyleAttributeName;
  *(void *)(inited + 72) = NSStrikethroughColorAttributeName;
  *(void *)(inited + 80) = NSWritingDirectionAttributeName;
  *(void *)(inited + 88) = NSForegroundColorAttributeName;
  *(void *)(inited + 96) = NSAttachmentAttributeName;
  uint64_t v1 = NSFontAttributeName;
  int v2 = NSLinkAttributeName;
  int v3 = NSParagraphStyleAttributeName;
  unsigned int v4 = NSUnderlineStyleAttributeName;
  uint64_t v5 = NSStrikethroughStyleAttributeName;
  unsigned int v6 = NSStrikethroughColorAttributeName;
  BOOL v7 = NSWritingDirectionAttributeName;
  int v8 = NSForegroundColorAttributeName;
  uint64_t v9 = NSAttachmentAttributeName;
  uint64_t v10 = sub_10002EBC4(inited);
  swift_setDeallocating();
  type metadata accessor for Key(0);
  uint64_t result = swift_arrayDestroy();
  qword_10016DEF0 = (uint64_t)v10;
  return result;
}

void sub_100084408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v22 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  int64_t v11 = 0;
  uint64_t v21 = swift_bridgeObjectRetain() + 104;
  if (!v9) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_7:
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)&v25[0] = *(void *)(*(void *)(a1 + 48) + 8 * v13);
  uint64_t v15 = *(void **)&v25[0];
  sub_100037A20(v14 + 32 * v13, (uint64_t)v25 + 8);
  id v16 = v15;
  while (1)
  {
    sub_1000857F0((uint64_t)v25, (uint64_t)&v27);
    char v20 = v27;
    if (!v27)
    {
      swift_release();
      return;
    }
    if (qword_100158AB8 != -1) {
      swift_once();
    }
    if (sub_100082A2C((uint64_t)v20, qword_10016DEF0))
    {
      sub_10000B7B0((uint64_t)v28);

      if (v9) {
        goto LABEL_6;
      }
    }
    else
    {
      [a5 removeAttribute:v20 range:a2, a3];

      sub_10000B7B0((uint64_t)v28);
      if (v9) {
        goto LABEL_6;
      }
    }
LABEL_8:
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      int64_t v19 = v11;
    }
    else
    {
      unint64_t v18 = *(void *)(v22 + 8 * v17);
      if (v18) {
        goto LABEL_11;
      }
      int64_t v19 = v11 + 1;
      if (v11 + 2 < v10)
      {
        unint64_t v18 = *(void *)(v22 + 8 * (v11 + 2));
        if (v18)
        {
          int64_t v17 = v11 + 2;
LABEL_11:
          unint64_t v9 = (v18 - 1) & v18;
          unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
          int64_t v11 = v17;
          goto LABEL_7;
        }
        int64_t v19 = v11 + 2;
        if (v11 + 3 < v10)
        {
          unint64_t v18 = *(void *)(v22 + 8 * (v11 + 3));
          if (v18)
          {
            int64_t v17 = v11 + 3;
            goto LABEL_11;
          }
          int64_t v17 = v11 + 4;
          int64_t v19 = v11 + 3;
          if (v11 + 4 < v10)
          {
            unint64_t v18 = *(void *)(v22 + 8 * v17);
            if (v18) {
              goto LABEL_11;
            }
            while (v10 - 5 != v11)
            {
              unint64_t v18 = *(void *)(v21 + 8 * v11++);
              if (v18)
              {
                int64_t v17 = v11 + 4;
                goto LABEL_11;
              }
            }
            int64_t v19 = v10 - 1;
          }
        }
      }
    }
    unint64_t v9 = 0;
    uint64_t v26 = 0;
    int64_t v11 = v19;
    memset(v25, 0, sizeof(v25));
  }
  __break(1u);
}

id sub_100084670()
{
  id v1 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v1 setAlignment:[v0 alignment]];
  [v0 firstLineHeadIndent];
  [v1 setFirstLineHeadIndent:];
  [v0 headIndent];
  [v1 setHeadIndent:];
  [v1 setBaseWritingDirection:[v0 baseWritingDirection]];
  Class isa = (Class)[v0 textLists];
  if (!isa)
  {
    sub_10001CB98(0, &qword_10015B8E8);
    sub_100109F30();
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 setTextLists:isa];

  return v1;
}

uint64_t sub_1000847B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 1;
  unsigned int v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v4;
  v6[3] = a1;
  v6[4] = v5;
  swift_retain();
  swift_retain();
  sub_100004BD4(&qword_10015C8D8);
  sub_10005058C();
  sub_10002E5E0(&qword_10015C8E0, &qword_10015C8D8);
  sub_10010A770();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v5 + 32))
  {
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
  }
  else
  {
    sub_100109EA0();
    a2 = sub_100109D90();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return a2;
}

uint64_t sub_1000849B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (void *)(a8 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(a8 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *uint64_t v14 = v18;
    if (v18 >= a9)
    {
      uint64_t result = swift_beginAccess();
      *(void *)(a10 + 16) = a5;
      *(void *)(a10 + 24) = a6;
      *(unsigned char *)(a10 + 32) = 0;
      *a7 = 1;
    }
  }
  return result;
}

uint64_t sub_100084A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a1;
  uint64_t v89 = a3;
  uint64_t v4 = sub_100109300();
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v87 = v4;
  __chkstk_darwin(v4);
  uint64_t v85 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100109340();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  __chkstk_darwin(v6);
  id v82 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100109370();
  uint64_t v80 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  __chkstk_darwin(v8);
  int v79 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100109320();
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100109040();
  __chkstk_darwin(v12 - 8);
  id v75 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001095E0();
  __chkstk_darwin(v14 - 8);
  uint64_t v74 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001095C0();
  __chkstk_darwin(v16 - 8);
  unsigned int v72 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100109520();
  __chkstk_darwin(v18 - 8);
  uint64_t v70 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004BD4(&qword_10015BC50);
  __chkstk_darwin(v20 - 8);
  uint64_t v68 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004BD4(&qword_10015BC58);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100109390();
  uint64_t v67 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v67 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v69 = (char *)&v67 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  id v71 = (char *)&v67 - v35;
  __chkstk_darwin(v34);
  uint64_t v73 = (char *)&v67 - v36;
  uint64_t v37 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v37 - 8);
  id v39 = (char *)&v67 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100109460();
  uint64_t v91 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v90 = (char *)&v67 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a2;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_10009E5BC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v45 = *((void *)v43 + 2);
  unint64_t v44 = *((void *)v43 + 3);
  if (v45 >= v44 >> 1) {
    uint64_t v43 = sub_10009E5BC((char *)(v44 > 1), v45 + 1, 1, v43);
  }
  *((void *)v43 + 2) = v45 + 1;
  char v46 = &v43[16 * v45];
  uint64_t v47 = v89;
  *((void *)v46 + 4) = v88;
  *((void *)v46 + 5) = v42;
  sub_10006BBA8(v47, (uint64_t)v39);
  uint64_t v48 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v39, 1, v40) == 1)
  {
    sub_10000B9CC((uint64_t)v39, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    id v49 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v89 = v40;
    v49(v90, v39, v40);
    uint64_t v50 = sub_1001092A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v24, 1, 1, v50);
    uint64_t v51 = sub_100109290();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v68, 1, 1, v51);
    sub_100109500();
    sub_100109570();
    sub_1001095D0();
    sub_100109030();
    sub_1001092C0();
    os_log_type_t v52 = v76;
    sub_100109310();
    sub_1001092D0();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v78);
    id v53 = *(void (**)(char *, uint64_t))(v67 + 8);
    v53(v28, v25);
    uint64_t v54 = v79;
    sub_100109350();
    id v55 = v69;
    sub_100109380();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v54, v81);
    v53(v31, v25);
    uint64_t v56 = v82;
    sub_100109330();
    unint64_t v57 = v71;
    sub_1001092E0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v56, v84);
    v53(v55, v25);
    id v58 = v85;
    sub_1001092F0();
    int v59 = v73;
    sub_1001092B0();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v87);
    v53(v57, v25);
    sub_1000857A8((unint64_t *)&qword_10015BC60, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    sub_100109440();
    v53(v59, v25);
    int v60 = v92;
    uint64_t v61 = v93;
    unint64_t v63 = *((void *)v43 + 2);
    unint64_t v62 = *((void *)v43 + 3);
    if (v63 >= v62 >> 1) {
      uint64_t v43 = sub_10009E5BC((char *)(v62 > 1), v63 + 1, 1, v43);
    }
    *((void *)v43 + 2) = v63 + 1;
    id v64 = &v43[16 * v63];
    *((void *)v64 + 4) = v60;
    *((void *)v64 + 5) = v61;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v89);
  }
  double v92 = v43;
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_10002E5E0((unint64_t *)&qword_10015A188, (uint64_t *)&unk_10015F2A0);
  uint64_t v65 = sub_100109C30();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_100085430()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100085440()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100085450()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100085490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  return sub_1000849B0(a1, a2, a3, a4, a5, a6, a7, v7[2], v7[3], v7[4]);
}

uint64_t sub_1000854BC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10013F7A8;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

id sub_100085508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa = sub_100109240().super.isa;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_1000857A8(&qword_1001591D0, type metadata accessor for DocumentReadingOptionKey);
  Class v7 = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v8 = [v4 initWithData:isa options:v7 documentAttributes:a4 error:&v12];

  if (v8)
  {
    id v9 = v12;
  }
  else
  {
    id v10 = v12;
    sub_100108FC0();

    swift_willThrow();
  }
  return v8;
}

uint64_t sub_10008564C()
{
  unint64_t v0 = sub_10010ACD0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

uint64_t sub_1000856A0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10013FA58;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000856EC()
{
  unint64_t result = qword_10015C8E8;
  if (!qword_10015C8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015C8E8);
  }
  return result;
}

uint64_t sub_100085740()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100085778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100084408(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_100085780()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100085790(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000857A0()
{
  return swift_release();
}

uint64_t sub_1000857A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000857F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015C928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100085858(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015A630);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1001094F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v7 + 48);
      id v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_100109460();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100085A0C(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_1001094F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 48);
    uint64_t v6 = sub_100109460();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

char *sub_100085B04(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1001094F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_100109460();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *sub_100085C7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = sub_1001094F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(a1, a2, v17);
      uint64_t v18 = *(int *)(v6 + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_100109460();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
      return a1;
    }
    sub_10000B9CC((uint64_t)a1, (uint64_t *)&unk_10015A630);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1001094F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100109460();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

char *sub_100085EB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1001094F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_100109460();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *sub_100086030(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = sub_1001094F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(a1, a2, v17);
      uint64_t v18 = *(int *)(v6 + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_100109460();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
      return a1;
    }
    sub_10000B9CC((uint64_t)a1, (uint64_t *)&unk_10015A630);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1001094F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100109460();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10008626C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100086280);
}

uint64_t sub_100086280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015A630);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000862F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100086304);
}

uint64_t sub_100086304(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_10008638C(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_10015A630);
  Swift::OpaquePointer v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_1000863F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015A630);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for Journaling.EntrySource()
{
  uint64_t result = qword_10015C9A8;
  if (!qword_10015C9A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000864B8()
{
  uint64_t result = sub_1001094F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100109460();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100086588()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015C9B8);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015C9B8);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  Swift::OpaquePointer v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100086650()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for OperationsManager()) init];
  qword_10015C9D0 = (uint64_t)result;
  return result;
}

id sub_100086680()
{
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableFileAttachmentsQueue;
  uint64_t v2 = self;
  Swift::OpaquePointer v3 = v0;
  *(void *)&v0[v1] = [v2 strongToWeakObjectsMapTable];
  uint64_t v4 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableAssetMetadataQueue;
  *(void *)&v3[v4] = [self strongToWeakObjectsMapTable];
  id v5 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v6 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority;
  *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority] = v5;
  uint64_t v7 = qword_1001588F8;
  id v8 = v5;
  if (v7 != -1) {
    swift_once();
  }
  [v8 setUnderlyingQueue:qword_10016DC98];

  id v9 = *(id *)&v3[v6];
  NSString v10 = sub_100109CF0();
  [v9 setName:v10];

  uint64_t v11 = *(void **)&v3[v6];
  [v11 setMaxConcurrentOperationCount:6];
  [v11 setQualityOfService:9];
  id v12 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v13 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority;
  *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority] = v12;
  uint64_t v14 = qword_100158900;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  [v15 setUnderlyingQueue:qword_10016DCA0];

  id v16 = *(id *)&v3[v13];
  NSString v17 = sub_100109CF0();
  [v16 setName:v17];

  uint64_t v18 = *(void **)&v3[v13];
  [v18 setMaxConcurrentOperationCount:6];
  [v18 setQualityOfService:-1];
  id v19 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v20 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority;
  *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority] = v19;
  uint64_t v21 = qword_100158908;
  id v22 = v19;
  if (v21 != -1) {
    swift_once();
  }
  [v22 setUnderlyingQueue:qword_10016DCA8];

  id v23 = *(id *)&v3[v20];
  NSString v24 = sub_100109CF0();
  [v23 setName:v24];

  uint64_t v25 = *(void **)&v3[v20];
  [v25 setMaxConcurrentOperationCount:2];
  [v25 setQualityOfService:33];
  id v26 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v27 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_fileAttachmentsQueue;
  *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_fileAttachmentsQueue] = v26;
  uint64_t v28 = qword_100158BA8;
  id v29 = v26;
  if (v28 != -1) {
    swift_once();
  }
  [v29 setUnderlyingQueue:qword_10016DFC8];

  id v30 = *(id *)&v3[v27];
  NSString v31 = sub_100109CF0();
  [v30 setName:v31];

  uint64_t v32 = *(void **)&v3[v27];
  [v32 setMaxConcurrentOperationCount:2];
  [v32 setQualityOfService:-1];
  id v33 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v34 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_assetMetadataQueue;
  *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_assetMetadataQueue] = v33;
  uint64_t v35 = qword_100158BB0;
  id v36 = v33;
  if (v35 != -1) {
    swift_once();
  }
  [v36 setUnderlyingQueue:qword_10016DFD0];

  id v37 = *(id *)&v3[v34];
  NSString v38 = sub_100109CF0();
  [v37 setName:v38];

  id v39 = *(void **)&v3[v34];
  [v39 setMaxConcurrentOperationCount:2];
  [v39 setQualityOfService:-1];
  id v40 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v41 = OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_batchRecordDownloadQueue;
  *(void *)&v3[OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_batchRecordDownloadQueue] = v40;
  uint64_t v42 = qword_100158BB8;
  id v43 = v40;
  if (v42 != -1) {
    swift_once();
  }
  [v43 setUnderlyingQueue:qword_10016DFD8];

  id v44 = *(id *)&v3[v41];
  NSString v45 = sub_100109CF0();
  [v44 setName:v45];

  char v46 = *(void **)&v3[v41];
  [v46 setMaxConcurrentOperationCount:1];
  id v47 = v46;
  [v47 setQualityOfService:9];

  v49.receiver = v3;
  v49.super_class = (Class)type metadata accessor for OperationsManager();
  return [super init];
}

void static OperationsManager.getAssetMetaDataOperationsRunningCount()()
{
}

void static OperationsManager.addAssetMetadata(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id static OperationsManager.getRunningAssetsMetadataOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_100086E90(a1, a2, &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableAssetMetadataQueue);
}

id static OperationsManager.cancelAssetMetaDataOperations()()
{
  return sub_100088350("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableAssetMetadataQueue);
}

void static OperationsManager.getAttachmentOperationsRunningCount()()
{
}

void static OperationsManager.addAttachment(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100086D38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  sub_100088154(a4);
  if (v8 <= 99)
  {
    if (qword_100158AC8 != -1) {
      swift_once();
    }
    id v9 = *(void **)(qword_10015C9D0 + *a5);
    id v10 = objc_allocWithZone((Class)NSString);
    id v11 = v9;
    swift_bridgeObjectRetain();
    NSString v12 = sub_100109CF0();
    swift_bridgeObjectRelease();
    id v13 = [v10 initWithString:v12];

    [v11 setObject:a3 forKey:v13];
    uint64_t v14 = *(void **)(qword_10015C9D0 + *a4);
    [v14 addOperation:a3];
  }
}

id static OperationsManager.getRunningAttachmentOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_100086E90(a1, a2, &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableFileAttachmentsQueue);
}

id sub_100086E90(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_10015C9D0 + *a3);
  id v5 = objc_allocWithZone((Class)NSString);
  id v6 = v4;
  swift_bridgeObjectRetain();
  NSString v7 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithString:v7];

  id v9 = [v6 objectForKey:v8];
  if (v9 && [v9 isCancelled])
  {

    return 0;
  }
  return v9;
}

id static OperationsManager.cancelAttachmentOperations()()
{
  return sub_100088350("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableFileAttachmentsQueue);
}

void static OperationsManager.getBatchRecordDownloadOperationsRunningCount()()
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  id v0 = [*(id *)(qword_10015C9D0 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_batchRecordDownloadQueue) operations];
  sub_10001CB98(0, &qword_10015CA00);
  unint64_t v1 = sub_100109F30();

  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10010AA80();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_5:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v4 = (id)sub_10010A920();
      }
      else {
        id v4 = *(id *)(v1 + 8 * i + 32);
      }
      id v5 = v4;
      if ([v4 isCancelled])
      {
      }
      else
      {
        sub_10010A9B0();
        sub_10010A9E0();
        sub_10010A9F0();
        sub_10010A9C0();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_10010AA80();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

id static OperationsManager.addBatchRecordDownload(operation:)(uint64_t a1)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_10015C9D0 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_batchRecordDownloadQueue);

  return [v2 addOperation:a1];
}

id static OperationsManager.cancelAllOngoingDownloads()()
{
  sub_100088350("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableAssetMetadataQueue);
  sub_100088350("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_mapTableFileAttachmentsQueue);

  return _s21JournalShareExtension17OperationsManagerC017cancelBatchRecordD0yyFZ_0();
}

void static OperationsManager.cancelAllThumbnailOperations()()
{
  if (qword_100158AC0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100109960();
  sub_100007CB8(v0, (uint64_t)qword_10015C9B8);
  unint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2F0();
  if (os_log_type_enabled(v1, v2))
  {
    Swift::OpaquePointer v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::OpaquePointer v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelAllThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_100158AC8 != -1) {
    swift_once();
  }
  id v4 = *(void **)(qword_10015C9D0 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority);
  id v5 = *(void **)(qword_10015C9D0 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority);
  id v8 = objc_retain(*(id *)(qword_10015C9D0
                         + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority));
  id v6 = v4;
  id v7 = v5;
  [v8 cancelAllOperations];
  [v6 cancelAllOperations];
  [v7 cancelAllOperations];
}

id static OperationsManager.cancelLowPriorityThumbnailOperations()()
{
  if (qword_100158AC0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100109960();
  sub_100007CB8(v0, (uint64_t)qword_10015C9B8);
  unint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2F0();
  if (os_log_type_enabled(v1, v2))
  {
    Swift::OpaquePointer v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::OpaquePointer v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelLowPriorityThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_100158AC8 != -1) {
    swift_once();
  }
  id v4 = *(void **)(qword_10015C9D0 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority);

  return [v4 cancelAllOperations];
}

id OperationsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationsManager();
  [super dealloc];
}

void static OperationsManager.addMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.addAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_100087680(uint64_t a1, void *a2)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_10015C9D0 + *a2);
  NSString v5 = sub_100109CF0();
  [v4 addObserver:a1 forKeyPath:v5 options:0 context:0];
}

void static OperationsManager.removeMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.removeAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_100087764(uint64_t a1, void *a2)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_10015C9D0 + *a2);
  NSString v5 = sub_100109CF0();
  [v4 removeObserver:a1 forKeyPath:v5];
}

void _s21JournalShareExtension17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  if (qword_100158AC8 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v5 = qword_10015C9D0;
  sub_100004BD4(qword_100159E08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100123770;
  id v7 = *(void **)(v5 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v7;
  id v8 = *(void **)(v5 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v8;
  id v9 = *(void **)(v5 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v9;
  uint64_t v30 = inited;
  sub_100109F50();
  unint64_t v10 = v30 & 0xC000000000000001;
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  unint64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      id v15 = (id)sub_10010A920();
      goto LABEL_8;
    }
    if (v14 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v15 = *(id *)(v30 + 32 + 8 * v14);
LABEL_8:
    id v29 = v15;
    id v16 = [v15 operations:v28];
    sub_10001CB98(0, &qword_10015CA00);
    unint64_t v17 = sub_100109F30();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_10010AA80();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_10:
        uint64_t v19 = 4;
        while (1)
        {
          id v20 = (v17 & 0xC000000000000001) != 0 ? (id)sub_10010A920() : *(id *)(v17 + 8 * v19);
          uint64_t v21 = v20;
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v19 - 4, 1)) {
            break;
          }
          type metadata accessor for ThumbnailCacheOperation();
          uint64_t v23 = swift_dynamicCastClass();
          if (v23)
          {
            NSString v24 = (void *)v23;
            BOOL v25 = *(void *)(v23 + qword_100160308) == a1 && *(void *)(v23 + qword_100160308 + 8) == a2;
            if (v25 || (sub_10010ACA0() & 1) != 0)
            {
              id v26 = v21;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v27 = v26;
              [v24 setQueuePriority:v28];

              return;
            }
          }

          ++v19;
          if (v22 == v18) {
            goto LABEL_3;
          }
        }
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18) {
        goto LABEL_10;
      }
    }
LABEL_3:
    ++v14;

    swift_bridgeObjectRelease();
    unint64_t v10 = v30 & 0xC000000000000001;
    if (v14 == 3)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

void *_s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_100158AC8 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v4 = qword_10015C9D0;
    sub_10001CB98(0, &qword_10015A8C0);
    if (qword_1001588F8 != -1) {
      swift_once();
    }
    if (sub_10010A6A0())
    {
      uint64_t v5 = &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority;
    }
    else
    {
      if (qword_100158908 != -1) {
        swift_once();
      }
      char v6 = sub_10010A6A0();
      uint64_t v5 = &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority;
      if (v6) {
        uint64_t v5 = &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority;
      }
    }
    id v7 = [*(id *)(v4 + *v5) operations];
    sub_10001CB98(0, &qword_10015CA00);
    unint64_t v8 = sub_100109F30();

    if (v8 >> 62) {
      break;
    }
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_30;
    }
LABEL_12:
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)sub_10010A920() : *(id *)(v8 + 8 * v10);
      id v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      type metadata accessor for ThumbnailCacheOperation();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        id v15 = (void *)v14;
        BOOL v16 = *(void *)(v14 + qword_100160308) == a1 && *(void *)(v14 + qword_100160308 + 8) == a2;
        if (v16 || (sub_10010ACA0()) && ([v15 isCancelled] & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }

      ++v10;
      if (v13 == v9) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10010AA80();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_12;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

void _s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailjH0C_So17OS_dispatch_queueCtSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10015C9D0;
  sub_100004BD4(qword_100159E08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100123770;
  char v6 = *(void **)(v4 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v6;
  id v7 = *(void **)(v4 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v7;
  unint64_t v8 = *(void **)(v4 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v8;
  uint64_t v30 = inited;
  sub_100109F50();
  uint64_t v9 = v30;
  unint64_t v10 = v30 & 0xC000000000000001;
  uint64_t v11 = v30 & 0xFFFFFFFFFFFFFF8;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v15 = (id)sub_10010A920();
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_23;
    }
    id v15 = *(id *)(v30 + 32);
  }
  BOOL v16 = v15;
  id v17 = [v15 underlyingQueue];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = _s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a1, a2);

    BOOL v16 = v18;
    if (v19) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v20 = (id)sub_10010A920();
  }
  else
  {
    if (*(void *)(v11 + 16) < 2uLL) {
      goto LABEL_23;
    }
    id v20 = *(id *)(v9 + 40);
  }
  uint64_t v21 = v20;
  id v22 = [v20 underlyingQueue];
  if (v22)
  {
    id v23 = v22;
    NSString v24 = _s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a1, a2);

    uint64_t v21 = v23;
    if (v24) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v25 = (id)sub_10010A920();
    goto LABEL_19;
  }
  if (*(void *)(v11 + 16) < 3uLL)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v25 = *(id *)(v9 + 48);
LABEL_19:
  id v26 = v25;
  id v27 = [v25 underlyingQueue];
  if (v27)
  {
    id v28 = v27;
    id v29 = _s21JournalShareExtension17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a1, a2);

    id v26 = v28;
    if (v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }

  swift_bridgeObjectRelease();
}

id _s21JournalShareExtension17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0G14CacheOperationC_So03OS_I6_queueCtFZ_0(uint64_t a1)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10015C9D0;
  sub_10001CB98(0, &qword_10015A8C0);
  if (qword_1001588F8 != -1) {
    swift_once();
  }
  if (sub_10010A6A0())
  {
    Swift::OpaquePointer v3 = &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueLowPriority;
  }
  else
  {
    if (qword_100158908 != -1) {
      swift_once();
    }
    char v4 = sub_10010A6A0();
    Swift::OpaquePointer v3 = &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueRegularPriority;
    if (v4) {
      Swift::OpaquePointer v3 = &OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_cacheQueueHighPriority;
    }
  }
  uint64_t v5 = *(void **)(v2 + *v3);

  return [v5 addOperation:a1];
}

void sub_100088154(void *a1)
{
  if (qword_100158AC8 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(qword_10015C9D0 + *a1) operations];
  sub_10001CB98(0, &qword_10015CA00);
  unint64_t v3 = sub_100109F30();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10010AA80();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_5:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_10010A920();
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      id v7 = v6;
      if ([v6 isCancelled])
      {
      }
      else
      {
        sub_10010A9B0();
        sub_10010A9E0();
        sub_10010A9F0();
        sub_10010A9C0();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_10010AA80();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

id sub_100088350(const char *a1, void *a2, void *a3)
{
  if (qword_100158AC0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100109960();
  sub_100007CB8(v6, (uint64_t)qword_10015C9B8);
  id v7 = sub_100109940();
  os_log_type_t v8 = sub_10010A2F0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  if (qword_100158AC8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10015C9D0;
  [*(id *)(qword_10015C9D0 + *a2) cancelAllOperations];
  uint64_t v11 = *(void **)(v10 + *a3);

  return [v11 removeAllObjects];
}

id _s21JournalShareExtension17OperationsManagerC017cancelBatchRecordD0yyFZ_0()
{
  if (qword_100158AC0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100109960();
  sub_100007CB8(v0, (uint64_t)qword_10015C9B8);
  unint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2F0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelBatchRecordOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_100158AC8 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_10015C9D0 + OBJC_IVAR____TtC21JournalShareExtension17OperationsManager_batchRecordDownloadQueue);

  return [v4 cancelAllOperations];
}

uint64_t type metadata accessor for OperationsManager()
{
  return self;
}

unint64_t sub_100088600()
{
  unint64_t result = qword_10015CE10;
  if (!qword_10015CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015CE10);
  }
  return result;
}

unint64_t sub_100088654()
{
  if (*v0) {
    return 0xD000000000000045;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

void sub_1000886A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, NSObject *a6, void (*a7)(char *), uint64_t a8)
{
  v25[1] = a8;
  id v26 = a7;
  uint64_t v12 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001091E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v25 - v20;
  sub_100019290(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000192F8((uint64_t)v14);
    if (a3)
    {
      uint64_t v22 = a3;
    }
    else
    {
      sub_100088600();
      uint64_t v22 = swift_allocError();
      *id v23 = 0;
    }
    swift_errorRetain();
    a4(v22);
    swift_errorRelease();
    if (a6) {
      dispatch_group_leave(a6);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    sub_10005AD60((uint64_t)v19);
    v26(v19);
    if (a6) {
      dispatch_group_leave(a6);
    }
    NSString v24 = *(void (**)(char *, uint64_t))(v16 + 8);
    v24(v19, v15);
    v24(v21, v15);
  }
}

void sub_100088958(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100109880();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    dispatch_group_enter(a1);
  }
  sub_100109820();
  sub_100109770();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  NSString v14 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = a3;
  v15[4] = a1;
  void v15[5] = a4;
  v15[6] = a5;
  _OWORD aBlock[4] = sub_100088CA8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10005B840;
  void aBlock[3] = &unk_1001437B8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v17 = a1;
  swift_retain();
  swift_release();
  [v18[1] loadItemForTypeIdentifier:v14 options:0 completionHandler:v16];
  _Block_release(v16);
}

void sub_100088B48(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, NSObject *a5, void (*a6)(uint64_t))
{
  if (a1)
  {
    uint64_t v8 = swift_unknownObjectRetain();
    a6(v8);
    if (a5) {
      dispatch_group_leave(a5);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    if (a2)
    {
      uint64_t v10 = a2;
    }
    else
    {
      sub_100088600();
      uint64_t v10 = swift_allocError();
      *uint64_t v11 = 0;
    }
    swift_errorRetain();
    a3(v10);
    swift_errorRelease();
    if (a5)
    {
      dispatch_group_leave(a5);
    }
  }
}

uint64_t sub_100088C60()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100088CA8(uint64_t a1, uint64_t a2)
{
  sub_100088B48(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), *(void (**)(uint64_t))(v2 + 40));
}

uint64_t sub_100088CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100088CC8()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for NSItemProviderExtensionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100088D9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSItemProviderExtensionError()
{
  return &type metadata for NSItemProviderExtensionError;
}

unint64_t sub_100088DD8()
{
  unint64_t result = qword_10015CA48;
  if (!qword_10015CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015CA48);
  }
  return result;
}

uint64_t sub_100088E2C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitStackConfiguration()
{
  return self;
}

uint64_t sub_100088E90()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015CB10);
  sub_100007CB8(v0, (uint64_t)qword_10015CB10);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100088F8C(uint64_t a1)
{
  return sub_100109980();
}

uint64_t sub_100088FCC()
{
  v1[4] = v0;
  sub_100004BD4(&qword_10015A218);
  v1[5] = swift_task_alloc();
  id v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  void *v2 = v1;
  v2[1] = sub_10008908C;
  return sub_1000F7CC4();
}

uint64_t sub_10008908C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10008918C, 0, 0);
}

uint64_t sub_10008918C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1)
  {
LABEL_13:
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v21(v1);
  }
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1000899F0(*(void *)(v0 + 32) + qword_10016DEF8, v2);
  uint64_t v3 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = *(void *)(v0 + 40);
  if (v4 == 1)
  {
    sub_100089990(*(void *)(v0 + 40));
LABEL_8:
    if (qword_100158AD0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100109960();
    sub_100007CB8(v17, (uint64_t)qword_10015CB10);
    uint64_t v18 = sub_100109940();
    os_log_type_t v19 = sub_10010A2D0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "generateImage no route info in metadata", v20, 2u);
      swift_slowDealloc();
    }

    goto LABEL_13;
  }
  uint64_t v6 = sub_1000D7054();
  sub_100089A58(v5);
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v7 + qword_100160308;
  uint64_t v9 = *(void *)(v7 + qword_100160308);
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = *(void *)(v8 + 8);
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = (objc_class *)type metadata accessor for RouteMapGenerator();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_mapSnapshotter] = 0;
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_lineWidth] = 0x4008000000000000;
  uint64_t v13 = &v12[OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_id];
  *(void *)uint64_t v13 = v9;
  *((void *)v13 + 1) = v10;
  *(void *)&v12[OBJC_IVAR____TtC21JournalShareExtension17RouteMapGenerator_routeCoordinates] = v6;
  *(void *)(v0 + 16) = v12;
  *(void *)(v0 + 24) = v11;
  swift_bridgeObjectRetain();
  [super init];
  char v14 = *(unsigned char *)(v7 + qword_100160338);
  *(unsigned char *)(v0 + 104) = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_10008946C;
  return sub_10000D168(v14);
}

uint64_t sub_10008946C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_100089588, 0, 0);
}

uint64_t sub_100089588()
{
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    switch(*(unsigned char *)(v0 + 104))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v7 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          if (qword_100158BF8 != -1) {
            swift_once();
          }
          sub_1000F97C4(v1, *(void *)(v0 + 64), *(void *)(v0 + 72));
        }
        break;
    }
    uint64_t v6 = *(void *)(v0 + 96);
  }
  else
  {
    if (qword_100158AD0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_100109960();
    sub_100007CB8(v2, (uint64_t)qword_10015CB10);
    uint64_t v3 = sub_100109940();
    os_log_type_t v4 = sub_10010A2D0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "error generating route map image", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = 0;
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v6);
}

uint64_t sub_1000897E4()
{
  return sub_100089990(v0 + qword_10016DEF8);
}

uint64_t sub_1000897F4(uint64_t a1)
{
  return sub_100089990(a1 + qword_10016DEF8);
}

uint64_t type metadata accessor for WorkoutRouteThumbnailCacheOperation()
{
  uint64_t result = qword_10015CB50;
  if (!qword_10015CB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100089850()
{
  sub_1000898E0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_1000898E0()
{
  if (!qword_10015CB68)
  {
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(255);
    unint64_t v0 = sub_10010A700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015CB68);
    }
  }
}

uint64_t sub_100089938()
{
  return type metadata accessor for WorkoutRouteThumbnailCacheOperation();
}

uint64_t sub_100089940(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_100089990(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015A218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000899F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100089A58(uint64_t a1)
{
  uint64_t v2 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100089AB4()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A028);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v133 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  id v134 = (char *)&v121 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v132 = (uint64_t)&v121 - v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v121 - v8;
  uint64_t v10 = sub_1001091E0();
  uint64_t v123 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  id v125 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v124 = (char *)&v121 - v13;
  uint64_t v147 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v14 = __chkstk_darwin(v147);
  uint64_t v16 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  id v148 = (char **)((char *)&v121 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  id v126 = (char *)&v121 - v20;
  __chkstk_darwin(v19);
  uint64_t v146 = (uint64_t)&v121 - v21;
  uint64_t v22 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v128 = (uint64_t)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v153 = (uint64_t)&v121 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (uint64_t)&v121 - v28;
  __chkstk_darwin(v27);
  NSString v31 = (char *)&v121 - v30;
  uint64_t v154 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v32 = __chkstk_darwin(v154);
  uint64_t v34 = (id *)((char *)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = __chkstk_darwin(v32);
  id v140 = (UIImage **)((char *)&v121 - v36);
  uint64_t v37 = __chkstk_darwin(v35);
  id v141 = (id *)((char *)&v121 - v38);
  __chkstk_darwin(v37);
  id v40 = (UIImage **)((char *)&v121 - v39);
  uint64_t v122 = v0;
  uint64_t v41 = (uint64_t *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments);
  swift_beginAccess();
  uint64_t v42 = *v41;
  unint64_t v43 = (unint64_t)*v41 >> 62;
  uint64_t v144 = *v41;
  if (v43) {
    goto LABEL_99;
  }
  uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v44; ; uint64_t i = sub_10010AA80())
  {
    uint64_t v149 = v10;
    uint64_t v127 = v29;
    id v150 = v31;
    id v151 = v40;
    char v46 = v140;
    id v121 = v9;
    if (!i) {
      break;
    }
    uint64_t v47 = v144;
    if (i < 1)
    {
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      JUMPOUT(0x10008AEC8);
    }
    uint64_t v48 = 0;
    uint64_t v29 = 0;
    NSURLResourceKey v139 = 0;
    unint64_t v143 = v144 & 0xC000000000000001;
    *(void *)&long long v137 = v123 + 56;
    id v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
    id v135 = (void (**)(uint64_t, char *, uint64_t))(v123 + 32);
    NSURLResourceKey v131 = NSURLFileSizeKey;
    id v130 = (void (**)(uint64_t, uint64_t))(v123 + 8);
    long long v129 = xmmword_100122230;
    char v136 = v16;
    id v138 = v34;
    id v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))i;
    while (1)
    {
      uint64_t v152 = v48;
      if (v143)
      {
        uint64_t v9 = (char *)sub_10010A920();
      }
      else
      {
        uint64_t v9 = *(char **)(v47 + 8 * v29 + 32);
        swift_retain();
      }
      ++v29;
      uint64_t v49 = (uint64_t)&v9[OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType];
      sub_1000241BC((uint64_t)&v9[OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType], (uint64_t)v46, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v51 = (uint64_t)v46;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          os_log_type_t v52 = *v46;
          id v53 = UIImageHEICRepresentation(*v46);
          if (v53)
          {
            uint64_t v54 = v53;
            uint64_t v55 = sub_100109250();
            unint64_t v57 = v56;

            id v40 = v151;
            switch(v57 >> 62)
            {
              case 1uLL:

                sub_100007084(v55, v57);
                swift_release();
                LODWORD(v58) = HIDWORD(v55) - v55;
                if (__OFSUB__(HIDWORD(v55), v55)) {
                  goto LABEL_102;
                }
                uint64_t v58 = (int)v58;
LABEL_45:
                uint64_t v10 = v149;
                NSString v31 = v150;
                goto LABEL_35;
              case 2uLL:
                uint64_t v82 = *(void *)(v55 + 16);
                uint64_t v81 = *(void *)(v55 + 24);

                sub_100007084(v55, v57);
                swift_release();
                uint64_t v58 = v81 - v82;
                if (__OFSUB__(v81, v82)) {
                  goto LABEL_103;
                }
                uint64_t v10 = v149;
                goto LABEL_34;
              case 3uLL:

                sub_100007084(v55, v57);
                swift_release();
                uint64_t v58 = 0;
                goto LABEL_45;
              default:

                sub_100007084(v55, v57);
                swift_release();
                uint64_t v58 = BYTE6(v57);
                goto LABEL_45;
            }
          }
          swift_release();

          uint64_t v58 = 0;
          NSString v31 = v150;
          id v40 = v151;
          uint64_t v67 = v152;
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v51 = (uint64_t)v46 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
          goto LABEL_14;
        default:
LABEL_14:
          sub_1000240FC(v51);
          sub_1000241BC(v49, (uint64_t)v34, type metadata accessor for AssetAttachment.AssetType);
          uint64_t v59 = swift_getEnumCaseMultiPayload();
          uint64_t v60 = (uint64_t)v34;
          switch(v59)
          {
            case 1:

              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v137)(v153, 1, 1, v10);
              break;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v60 = (uint64_t)v34 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
              goto LABEL_17;
            default:
LABEL_17:
              uint64_t v61 = (unsigned int (**)(void, void, void))v148;
              sub_100024158(v60, (uint64_t)v148);
              sub_1000241BC((uint64_t)v61, (uint64_t)v16, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                (*v135)(v153, v16, v10);
                uint64_t v62 = 0;
              }
              else
              {
                uint64_t v63 = v153;
                type metadata accessor for Journaling();
                uint64_t v64 = v128;
                sub_1000CEC08(v128);
                uint64_t v10 = v149;
                swift_bridgeObjectRelease();
                if ((*v145)(v64, 1, v10) == 1)
                {
                  sub_10000B9CC(v64, (uint64_t *)&unk_100159D40);
                  uint64_t v62 = 1;
                }
                else
                {
                  uint64_t v65 = *v135;
                  uint64_t v66 = v125;
                  (*v135)((uint64_t)v125, (char *)v64, v10);
                  v65(v63, v66, v10);
                  uint64_t v62 = 0;
                }
                id v40 = v151;
                uint64_t v34 = v138;
                char v46 = v140;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v137)(v153, v62, 1, v10);
              sub_1000240FC((uint64_t)v148);
              break;
          }
          if ((*v145)(v153, 1, v10) == 1)
          {
            sub_10000B9CC(v153, (uint64_t *)&unk_100159D40);
            swift_release();
            uint64_t v58 = 0;
            NSString v31 = v150;
            uint64_t v67 = v152;
          }
          else
          {
            sub_100004BD4(&qword_10015A030);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v129;
            NSURLResourceKey v69 = v131;
            *(void *)(inited + 32) = v131;
            uint64_t v70 = v69;
            sub_10002DA44(inited);
            swift_setDeallocating();
            type metadata accessor for URLResourceKey(0);
            swift_arrayDestroy();
            uint64_t v71 = (uint64_t)v134;
            NSURLResourceKey v72 = v139;
            sub_1001090A0();
            if (v72)
            {
              swift_errorRelease();
              swift_bridgeObjectRelease();
              uint64_t v73 = sub_100108F90();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v71, 1, 1, v73);
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v73 = sub_100108F90();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v71, 0, 1, v73);
            }
            uint64_t v74 = v133;
            NSURLResourceKey v139 = 0;
            sub_1000248D8(v71, v133, &qword_10015A028);
            sub_100108F90();
            uint64_t v75 = *(void *)(v73 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v74, 1, v73) == 1)
            {
              sub_10000B9CC(v71, &qword_10015A028);
              sub_10000B9CC(v74, &qword_10015A028);
              uint64_t v10 = v149;
              (*v130)(v153, v149);
              swift_release();
              uint64_t v58 = 0;
            }
            else
            {
              uint64_t v76 = sub_100108F80();
              uint64_t v77 = v71;
              char v79 = v78;
              sub_10000B9CC(v77, &qword_10015A028);
              (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v73);
              uint64_t v10 = v149;
              (*v130)(v153, v149);
              swift_release();
              if (v79) {
                uint64_t v58 = 0;
              }
              else {
                uint64_t v58 = v76;
              }
            }
LABEL_34:
            NSString v31 = v150;
            id v40 = v151;
LABEL_35:
            uint64_t v67 = v152;
            uint64_t v16 = v136;
            uint64_t v34 = v138;
            char v46 = v140;
          }
          break;
      }
      uint64_t v47 = v144;
      BOOL v80 = __OFADD__(v67, v58);
      uint64_t v48 = v67 + v58;
      if (v80) {
        break;
      }
      if (v142 == (void (**)(char *, uint64_t, uint64_t, uint64_t))v29) {
        goto LABEL_47;
      }
    }
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    swift_bridgeObjectRetain();
  }
  uint64_t v48 = 0;
  NSURLResourceKey v139 = 0;
LABEL_47:
  uint64_t v152 = v48;
  swift_bridgeObjectRelease();
  unint64_t v83 = *(void *)(v122 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments);
  if (v83 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_10010AA80();
  }
  else
  {
    uint64_t v84 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v16 = (char *)v139;
  if (v84)
  {
    if (v84 < 1) {
      goto LABEL_104;
    }
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    id v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 & 0xC000000000000001);
    id v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56);
    id v148 = (char **)(v123 + 48);
    id v140 = (UIImage **)(v123 + 32);
    NSURLResourceKey v139 = NSURLFileSizeKey;
    id v138 = (id *)(v123 + 8);
    long long v137 = xmmword_100122230;
    uint64_t v29 = (uint64_t)v121;
    uint64_t v9 = v126;
    unint64_t v143 = v83;
    uint64_t v144 = v84;
    do
    {
      if (v145)
      {
        uint64_t v87 = v86;
        uint64_t v34 = (id *)sub_10010A920();
      }
      else
      {
        uint64_t v34 = *(id **)(v83 + 8 * v86 + 32);
        uint64_t v87 = v86;
        swift_retain();
      }
      uint64_t v153 = v87 + 1;
      uint64_t v88 = (char *)v34 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
      sub_1000241BC((uint64_t)v34 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v40, type metadata accessor for AssetAttachment.AssetType);
      uint64_t v89 = swift_getEnumCaseMultiPayload();
      uint64_t v90 = (uint64_t)v40;
      switch(v89)
      {
        case 1:
          uint64_t v91 = *v40;
          double v92 = UIImageHEICRepresentation(*v40);
          if (v92)
          {
            uint64_t v93 = v92;
            uint64_t v94 = sub_100109250();
            unint64_t v96 = v95;

            id v40 = v151;
            switch(v96 >> 62)
            {
              case 1uLL:

                sub_100007084(v94, v96);
                swift_release();
                LODWORD(v97) = HIDWORD(v94) - v94;
                if (__OFSUB__(HIDWORD(v94), v94)) {
                  goto LABEL_105;
                }
                uint64_t v97 = (int)v97;
LABEL_91:
                uint64_t v10 = v149;
                NSString v31 = v150;
                goto LABEL_81;
              case 2uLL:
                uint64_t v118 = *(void *)(v94 + 16);
                uint64_t v119 = *(void *)(v94 + 24);

                sub_100007084(v94, v96);
                swift_release();
                uint64_t v97 = v119 - v118;
                if (__OFSUB__(v119, v118)) {
                  goto LABEL_106;
                }
                uint64_t v10 = v149;
                NSString v31 = v150;
                goto LABEL_80;
              case 3uLL:

                sub_100007084(v94, v96);
                swift_release();
                uint64_t v97 = 0;
                goto LABEL_91;
              default:

                sub_100007084(v94, v96);
                swift_release();
                uint64_t v97 = BYTE6(v96);
                goto LABEL_91;
            }
          }
          swift_release();

          uint64_t v97 = 0;
          id v40 = v151;
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v90 = (uint64_t)v40 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
          goto LABEL_60;
        default:
LABEL_60:
          sub_1000240FC(v90);
          uint64_t v98 = (uint64_t)v88;
          id v99 = v141;
          sub_1000241BC(v98, (uint64_t)v141, type metadata accessor for AssetAttachment.AssetType);
          uint64_t v100 = swift_getEnumCaseMultiPayload();
          uint64_t v101 = (uint64_t)v99;
          switch(v100)
          {
            case 1:

              (*v142)(v31, 1, 1, v10);
              break;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v102 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
              uint64_t v101 = (uint64_t)v141 + *(int *)(v102 + 48);
              goto LABEL_63;
            default:
LABEL_63:
              uint64_t v103 = v146;
              sub_100024158(v101, v146);
              sub_1000241BC(v103, (uint64_t)v9, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                ((void (*)(char *, char *, uint64_t))*v140)(v31, v9, v10);
                uint64_t v104 = 0;
              }
              else
              {
                type metadata accessor for Journaling();
                uint64_t v105 = v127;
                sub_1000CEC08(v127);
                uint64_t v10 = v149;
                swift_bridgeObjectRelease();
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v148)(v105, 1, v10) == 1)
                {
                  sub_10000B9CC(v105, (uint64_t *)&unk_100159D40);
                  uint64_t v104 = 1;
                  NSString v31 = v150;
                }
                else
                {
                  id v106 = *v140;
                  id v107 = v124;
                  ((void (*)(char *, uint64_t, uint64_t))*v140)(v124, v105, v10);
                  NSString v31 = v150;
                  ((void (*)(char *, char *, uint64_t))v106)(v150, v107, v10);
                  uint64_t v104 = 0;
                }
                id v40 = v151;
                unint64_t v83 = v143;
              }
              (*v142)(v31, v104, 1, v10);
              sub_1000240FC(v146);
              break;
          }
          if (((unsigned int (*)(char *, uint64_t, uint64_t))*v148)(v31, 1, v10) == 1)
          {
            sub_10000B9CC((uint64_t)v31, (uint64_t *)&unk_100159D40);
            swift_release();
            uint64_t v97 = 0;
          }
          else
          {
            sub_100004BD4(&qword_10015A030);
            uint64_t v108 = swift_initStackObject();
            *(_OWORD *)(v108 + 16) = v137;
            NSURLResourceKey v109 = v139;
            *(void *)(v108 + 32) = v139;
            id v110 = v109;
            sub_10002DA44(v108);
            swift_setDeallocating();
            type metadata accessor for URLResourceKey(0);
            swift_arrayDestroy();
            sub_1001090A0();
            if (v16)
            {
              swift_errorRelease();
              swift_bridgeObjectRelease();
              uint64_t v111 = sub_100108F90();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v29, 1, 1, v111);
              uint64_t v16 = 0;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v111 = sub_100108F90();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v29, 0, 1, v111);
            }
            uint64_t v112 = v132;
            sub_1000248D8(v29, v132, &qword_10015A028);
            sub_100108F90();
            uint64_t v113 = *(void *)(v111 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v112, 1, v111) == 1)
            {
              sub_10000B9CC(v29, &qword_10015A028);
              sub_10000B9CC(v112, &qword_10015A028);
              uint64_t v10 = v149;
              NSString v31 = v150;
              ((void (*)(char *, uint64_t))*v138)(v150, v149);
              swift_release();
              uint64_t v97 = 0;
            }
            else
            {
              uint64_t v114 = sub_100108F80();
              char v116 = v115;
              sub_10000B9CC(v29, &qword_10015A028);
              (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v111);
              uint64_t v10 = v149;
              NSString v31 = v150;
              ((void (*)(char *, uint64_t))*v138)(v150, v149);
              swift_release();
              BOOL v117 = (v116 & 1) == 0;
              uint64_t v9 = v126;
              if (v117) {
                uint64_t v97 = v114;
              }
              else {
                uint64_t v97 = 0;
              }
            }
LABEL_80:
            id v40 = v151;
LABEL_81:
            unint64_t v83 = v143;
          }
          break;
      }
      BOOL v80 = __OFADD__(v85, v97);
      v85 += v97;
      uint64_t v86 = v153;
      if (v80) {
        goto LABEL_98;
      }
    }
    while (v144 != v153);
    swift_bridgeObjectRelease();
    if (v85 <= v152) {
      return v152;
    }
    else {
      return v85;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return v152 & ~(v152 >> 63);
  }
}

uint64_t sub_10008AF38(unint64_t a1, NSObject *a2)
{
  dispatch_group_t v48 = a2;
  uint64_t v3 = sub_100109880();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v40 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v40 - v10;
  if (!(a1 >> 62))
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
LABEL_22:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_10010AA80();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_3:
  if (v12 >= 1)
  {
    id v40 = v9;
    uint64_t v41 = v11;
    uint64_t v14 = 0;
    unint64_t v43 = a1 & 0xC000000000000001;
    uint64_t v44 = v12;
    uint64_t v15 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v45 = v3;
    unint64_t v46 = a1;
    uint64_t v42 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v20 = v9;
      if (v43) {
        id v21 = (id)sub_10010A920();
      }
      else {
        id v21 = *(id *)(a1 + 8 * v14 + 32);
      }
      uint64_t v22 = v21;
      uint64_t v23 = v41;
      sub_100109830();
      sub_100109770();
      uint64_t v24 = *v15;
      (*v15)(v23, v3);
      NSString v25 = sub_100109CF0();
      swift_bridgeObjectRelease();
      unsigned int v26 = [v22 hasItemConformingToTypeIdentifier:v25];

      if (v26)
      {
        sub_100109830();
        uint64_t v27 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        if (v48) {
          dispatch_group_enter(v48);
        }
        uint64_t v16 = (void *)swift_allocObject();
        _OWORD v16[2] = sub_10008B434;
        v16[3] = 0;
        dispatch_group_t v17 = v48;
        v16[4] = v48;
        v16[5] = sub_10008D3CC;
        v16[6] = v27;
        uint64_t v18 = v17;
        swift_retain();
        uint64_t v19 = (void *)sub_10010A320();

        swift_release();
        a1 = v46;
      }
      else
      {
        sub_1001097E0();
        sub_100109770();
        v24(v23, v3);
        NSString v28 = sub_100109CF0();
        swift_bridgeObjectRelease();
        unsigned int v29 = [v22 hasItemConformingToTypeIdentifier:v28];

        if (v29) {
          sub_1001097E0();
        }
        else {
          sub_100109820();
        }
        uint64_t v30 = swift_allocObject();
        swift_weakInit();
        NSString v31 = (void *)swift_allocObject();
        _OWORD v31[2] = v30;
        void v31[3] = v22;
        dispatch_group_t v32 = v48;
        unsigned char v31[4] = v48;
        if (v32)
        {
          uint64_t v33 = v48;
          swift_retain();
          id v34 = v22;
          dispatch_group_enter(v33);
        }
        else
        {
          swift_retain();
          id v35 = v22;
        }
        uint64_t v36 = (void *)swift_allocObject();
        id v36[2] = sub_10008B434;
        _OWORD v36[3] = 0;
        dispatch_group_t v37 = v48;
        v36[4] = v48;
        v36[5] = sub_10008D3B8;
        v36[6] = v31;
        uint64_t v38 = v37;
        swift_retain();
        uint64_t v20 = v47;
        uint64_t v39 = (void *)sub_10010A320();

        swift_release();
        a1 = v46;
        uint64_t v9 = v40;
      }
      ++v14;
      swift_release();
      uint64_t v3 = v45;
      uint64_t v15 = v42;
      v24(v20, v45);
      swift_release();
    }
    while (v44 != v14);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_10008B434(uint64_t a1)
{
}

uint64_t sub_10008B440(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10008C8D4(a1, 1);
    return swift_release();
  }
  return result;
}

void sub_10008B4A4(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100004BD4((uint64_t *)&unk_10015CE00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100122230;
    *(void *)(inited + 32) = kCGImageSourceShouldCache;
    *(unsigned char *)(inited + 40) = 1;
    CFStringRef v7 = (id)kCGImageSourceShouldCache;
    sub_10007B9D4(inited);
    type metadata accessor for CFString(0);
    sub_10008D430((unint64_t *)&qword_100159108, type metadata accessor for CFString);
    v8.super.Class isa = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    if (sub_100109050())
    {
      sub_1001090F0(v9);
      CFURLRef v11 = v10;
      Class isa = CGImageSourceCreateWithURL(v10, v8.super.isa);

      if (isa)
      {
        if (CGImageSourceGetCount((CGImageSourceRef)isa))
        {
          sub_10008C8D4(a1, 0);
          swift_release();

LABEL_14:
          return;
        }
      }
    }
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_100088958(a4, (uint64_t)sub_10008C438, 0, (uint64_t)sub_10008D478, v13);
    swift_release_n();
    id v14 = [self defaultManager];
    sub_1001090F0(v15);
    dispatch_group_t v17 = v16;
    id v24 = 0;
    unsigned int v18 = [v14 removeItemAtURL:v16 error:&v24];

    if (v18)
    {
      id v19 = v24;
      swift_release();
      Class isa = v8.super.isa;
    }
    else
    {
      id v20 = v24;
      sub_100108FC0();

      swift_willThrow();
      swift_release();

      if (qword_100158C78 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_100109960();
      sub_100007CB8(v21, (uint64_t)qword_10016E128);
      Class isa = sub_100109940();
      os_log_type_t v22 = sub_10010A2D0();
      if (os_log_type_enabled(isa, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, isa, v22, "Cannot create image from URL", v23, 2u);
        swift_slowDealloc();
      }
      swift_errorRelease();
    }
    goto LABEL_14;
  }
}

uint64_t sub_10008B81C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  CFURLRef v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = sub_1001091E0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  dispatch_group_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000248D8(a1, (uint64_t)v13, (uint64_t *)&unk_100159D40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v25[1] = a4;
    sub_10000B9CC((uint64_t)v13, (uint64_t *)&unk_100159D40);
    if (qword_100158C78 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_100109960();
    sub_100007CB8(v18, (uint64_t)qword_10016E128);
    swift_errorRetain();
    swift_errorRetain();
    id v19 = sub_100109940();
    os_log_type_t v20 = sub_10010A2D0();
    if (os_log_type_enabled(v19, v20))
    {
      v25[0] = a3;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v26 = v23;
        sub_10010A730();
      }
      else
      {
        uint64_t v26 = 0;
        sub_10010A730();
        uint64_t v23 = 0;
      }
      *os_log_type_t v22 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to fetch URL: %@", v21, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      a3 = (void (*)(char *))v25[0];
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    a3(v11);
    return sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_100159D40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    a3(v11);
    sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_100159D40);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_10008BC40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  if (a1 && (uint64_t v16 = a1, swift_unknownObjectRetain(), sub_100004BD4(&qword_10015CE18), (swift_dynamicCast() & 1) != 0))
  {
    a3(v15[0], v15[1]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100158C78 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_100109960();
    sub_100007CB8(v6, (uint64_t)qword_10016E128);
    swift_errorRetain();
    swift_errorRetain();
    CFStringRef v7 = sub_100109940();
    os_log_type_t v8 = sub_10010A2D0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v14 = a3;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      v15[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      if (!a2)
      {
        sub_100088600();
        swift_allocError();
        *uint64_t v10 = 0;
      }
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v11 = sub_10010AD50();
      unint64_t v13 = v12;
      swift_errorRelease();
      uint64_t v16 = sub_1000C50D4(v11, v13, v15);
      sub_10010A730();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to fetch string: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return ((uint64_t (*)(void, void))v14)(0, 0);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      return ((uint64_t (*)(void, void))a3)(0, 0);
    }
  }
}

uint64_t sub_10008BED4@<X0>(UIImage *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  CFStringRef v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001091E0();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  dispatch_group_t v17 = UIImagePNGRepresentation(a1);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v31 = a2;
    uint64_t v32 = sub_100109250();
    unint64_t v20 = v19;

    sub_1001090E0();
    sub_1001094E0();
    sub_100109470();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100109110();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v33 + 8);
    v21(v11, v8);
    sub_100109120();
    v21(v14, v8);
    uint64_t v22 = v32;
    sub_100109260();
    sub_100007084(v22, v20);
    uint64_t v28 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v31, v16, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v8);
  }
  else
  {
    if (qword_100158C78 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100109960();
    sub_100007CB8(v23, (uint64_t)qword_10016E128);
    id v24 = sub_100109940();
    os_log_type_t v25 = sub_10010A2D0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      swift_slowDealloc();
    }

    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
    return v27(a2, 1, 1, v8);
  }
}

void sub_10008C438(uint64_t a1)
{
}

void sub_10008C444(uint64_t a1, const char *a2)
{
  if (qword_100158C78 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100109960();
  sub_100007CB8(v3, (uint64_t)qword_10016E128);
  swift_errorRetain();
  swift_errorRetain();
  oslog = sub_100109940();
  os_log_type_t v4 = sub_10010A2D0();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    sub_10010A730();
    *uint64_t v6 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a2, v5, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_10008C620()
{
  uint64_t v0 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001091E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    self;
    uint64_t v8 = (UIImage *)swift_dynamicCastObjCClass();
    if (v8)
    {
      sub_10008BED4(v8, (uint64_t)v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
        sub_10008C8D4((uint64_t)v6, 0);
        swift_release();
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
      swift_unknownObjectRelease();
      sub_10000B9CC((uint64_t)v2, (uint64_t *)&unk_100159D40);
    }
    else
    {
      swift_unknownObjectRelease();
    }
    if (qword_100158C78 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100109960();
    sub_100007CB8(v9, (uint64_t)qword_10016E128);
    uint64_t v10 = sub_100109940();
    os_log_type_t v11 = sub_10010A2F0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to type-cast as UIImage", v12, 2u);
      swift_slowDealloc();
    }

    return swift_release();
  }
  return result;
}

uint64_t sub_10008C8D4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100109A70();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100109AC0();
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  unint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = sub_1001091E0();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  os_log_type_t v25 = (void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  if (a2)
  {
    v24(v21, a1, v22);
    (*v25)(v21, 0, 1, v22);
    sub_10005A198();
    long long v41 = 0u;
    long long v42 = 0u;
    char v43 = 1;
    uint64_t v26 = sub_1000D57B0(6, (uint64_t)v21, 0, 0, 0, (uint64_t)v15, 0, 0, 0, 1, 0, 1u, 0, 0, 1u, (uint64_t)&v41, (uint64_t)&v41, (uint64_t)&v41);
  }
  else
  {
    v24(v19, a1, v22);
    (*v25)(v19, 0, 1, v22);
    sub_10005A198();
    long long v41 = 0u;
    long long v42 = 0u;
    char v43 = 1;
    uint64_t v26 = sub_1000A6454(6, 0, (uint64_t)v19, 0, 0, (uint64_t)v13, 0, 0, 0, 1u, 0, 1u, 0, 0, 1u, (uint64_t)&v41, (uint64_t)&v41, (uint64_t)&v41);
  }
  uint64_t v27 = v26;
  sub_10008D298();
  uint64_t v28 = (void *)sub_10010A410();
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = v27;
  _OWORD aBlock[4] = sub_10008D350;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  void aBlock[3] = &unk_1001438C0;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = v27;
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10008D430((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  uint64_t v33 = v39;
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v9, v37);
}

uint64_t sub_10008CF88(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_100089AB4();
    uint64_t v6 = *(void *)(v4 + 32);
    BOOL v7 = __OFADD__(v6, v5);
    uint64_t v8 = v6 + v5;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v4 + 32) = v8;
      if (sub_1000561F0(v8))
      {
        *(unsigned char *)(v4 + 24) = 1;
        return swift_release();
      }
      swift_beginAccess();
      id v9 = a2;
      sub_100109F10();
      if (*(void *)((*(void *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)(v4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      {
LABEL_6:
        sub_100109FA0();
        sub_100109F50();
        swift_endAccess();
        return swift_release();
      }
    }
    sub_100109F70();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10008D080()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShareSheetDataManger()
{
  return self;
}

void sub_10008D0DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100109880();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109800();
  sub_100109770();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  NSString v10 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  _OWORD aBlock[4] = sub_10008D4B8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10005B840;
  void aBlock[3] = &unk_100143988;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [a1 loadItemForTypeIdentifier:v10 options:0 completionHandler:v12];
  _Block_release(v12);
}

unint64_t sub_10008D298()
{
  unint64_t result = qword_10015A5D0;
  if (!qword_10015A5D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015A5D0);
  }
  return result;
}

uint64_t sub_10008D2D8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008D310()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008D350()
{
  return sub_10008CF88(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10008D358(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008D368()
{
  return swift_release();
}

uint64_t sub_10008D370()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10008D3B8(uint64_t a1)
{
  sub_10008B4A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_10008D3CC(uint64_t a1)
{
  return sub_10008B440(a1);
}

uint64_t sub_10008D3D8()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10008D420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000886A0(a1, a2, a3, *(void (**)(uint64_t))(v3 + 16), *(void *)(v3 + 24), *(NSObject **)(v3 + 32), *(void (**)(char *))(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_10008D430(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008D478()
{
  return sub_10008C620();
}

uint64_t sub_10008D480()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008D4B8(uint64_t a1, uint64_t a2)
{
  return sub_10008BC40(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_10008D4C8()
{
  v1[2] = v0;
  sub_100004BD4(&qword_10015CF08);
  v1[3] = swift_task_alloc();
  uint64_t v2 = sub_10010A260();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_10010A280();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v4 = sub_10010A270();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_10008D680, 0, 0);
}

uint64_t sub_10008D680()
{
  (*(void (**)(void, void, void))(v0[9] + 16))(v0[10], v0[2], v0[8]);
  sub_100091AD8(&qword_10015CF10, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results);
  sub_10010A0C0();
  v0[14] = _swiftEmptyArrayStorage;
  uint64_t v1 = sub_100091AD8(&qword_10015CF18, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results.Iterator);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  void *v2 = v0;
  v2[1] = sub_10008D7E0;
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[3];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_10008D7E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v6 = v2 + 88;
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = *(void *)(v6 + 8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v7 = sub_10008DBD4;
  }
  else
  {
    uint64_t v7 = sub_10008D920;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10008D920()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    sub_10000B9CC(v3, &qword_10015CF08);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v5 = v0[14];
    return v4(v5);
  }
  else
  {
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v9(v7, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v8, v7, v1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = v0[14];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v11 = sub_10009EB70(0, *(void *)(v11 + 16) + 1, 1, v0[14]);
    }
    unint64_t v13 = *(void *)(v11 + 16);
    unint64_t v12 = *(void *)(v11 + 24);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_10009EB70(v12 > 1, v13 + 1, 1, v11);
    }
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[7];
    uint64_t v16 = v0[4];
    uint64_t v17 = v0[5];
    *(void *)(v11 + 16) = v13 + 1;
    v9(v11+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v13, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v0[14] = v11;
    uint64_t v18 = sub_100091AD8(&qword_10015CF18, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results.Iterator);
    unint64_t v19 = (void *)swift_task_alloc();
    v0[15] = v19;
    *unint64_t v19 = v0;
    v19[1] = sub_10008D7E0;
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[3];
    return dispatch thunk of AsyncIteratorProtocol.next()(v21, v20, v18);
  }
}

uint64_t sub_10008DBD4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008DC6C()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015CE20);
  sub_100007CB8(v0, (uint64_t)qword_10015CE20);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10008DE10(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100004BD4(&qword_100159850);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

uint64_t sub_10008E018(char a1, void *aBlock)
{
  *(void *)(v2 + 16) = _Block_copy(aBlock);
  id v6 = (uint64_t (*)(char))((char *)&dword_10015CEF0 + dword_10015CEF0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10008E0CC;
  return v6(a1);
}

uint64_t sub_10008E0CC()
{
  id v1 = *(void (***)(void))(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10008E34C(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10015CEC8 + dword_10015CEC8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_10008E3F4;
  return v4();
}

uint64_t sub_10008E3F4()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v2)
  {
    uint64_t v7 = (void *)sub_100108FB0();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
  }
  _Block_release(*(const void **)(v4 + 16));
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

void sub_10008E558(const char *a1, double a2)
{
  if (qword_100158AD8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100109960();
  sub_100007CB8(v4, (uint64_t)qword_10015CE20);
  oslog = sub_100109940();
  os_log_type_t v5 = sub_10010A2F0();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_100004BD4(&qword_10015A190);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100122230;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v7 + 56) = &type metadata for Double;
    *(void *)(v7 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v7 + 32) = Current - a2;
    uint64_t v9 = sub_100109D40();
    sub_1000C50D4(v9, v10, &v12);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10008E768(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015CEA0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v8 = sub_100109CF0();
  NSString v9 = sub_100109CF0();
  id v10 = [v7 initWithName:v8 bundleIdentifier:v9];

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  _OWORD aBlock[4] = sub_10008FA80;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  void aBlock[3] = &unk_100143A78;
  unint64_t v13 = _Block_copy(aBlock);
  swift_release();
  [a2 searchableIndex:v10 reindexAllSearchableItemsWithAcknowledgementHandler:v13];
  _Block_release(v13);
}

uint64_t sub_10008EB08(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  v2[4] = swift_getObjCClassMetadata();
  id v4 = a1;
  return _swift_task_switch(sub_10008EB94, 0, 0);
}

uint64_t sub_10008EB94()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  sub_100109280();
  v0[5] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[6] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10008EC94;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10008EC94()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10008EDAC, 0, 0);
}

uint64_t sub_10008EDAC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void (***)(void, void))(v0 + 24);
  sub_10008E558("SpotlightUtilities.reindexAllSearchableItems completed in %s seconds.", *(double *)(v0 + 40));

  v2[2](v2, 0);
  _Block_release(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

unint64_t sub_10008EE38(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = sub_1001091E0();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)(a2 + 16);
  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = sub_10004631C();
  if (v8)
  {
    NSString v9 = v8;
    id v10 = [v7 objectID];
    id v11 = [v10 URIRepresentation];

    uint64_t v12 = v36;
    sub_100109140();

    sub_100109090();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v37);
    id v13 = objc_allocWithZone((Class)CSSearchableItem);
    id v14 = v9;
    NSString v15 = sub_100109CF0();
    swift_bridgeObjectRelease();
    NSString v16 = sub_100109CF0();
    [v13 initWithUniqueIdentifier:v15 domainIdentifier:v16 attributeSet:v14];

    swift_beginAccess();
    sub_100109F10();
    if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_100109F70();
    }
    sub_100109FA0();
    sub_100109F50();
    swift_endAccess();
  }
  unint64_t result = sub_1000B8578();
  unint64_t v18 = result;
  if (!(result >> 62))
  {
    uint64_t v19 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  unint64_t result = sub_10010AA80();
  uint64_t v19 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (v19 >= 1)
  {
    uint64_t v20 = 0;
    unint64_t v38 = v18 & 0xC000000000000001;
    id v34 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v35 = v19;
    do
    {
      if (v38) {
        id v21 = (id)sub_10010A920();
      }
      else {
        id v21 = *(id *)(v18 + 8 * v20 + 32);
      }
      uint64_t v22 = v21;
      id v23 = sub_100046C98();
      if (v23)
      {
        id v24 = v23;
        unint64_t v25 = v18;
        id v26 = [v22 objectID];
        id v27 = [v26 URIRepresentation];

        uint64_t v28 = v36;
        sub_100109140();

        sub_100109090();
        (*v34)(v28, v37);
        id v29 = objc_allocWithZone((Class)CSSearchableItem);
        id v30 = v24;
        NSString v31 = sub_100109CF0();
        swift_bridgeObjectRelease();
        NSString v32 = sub_100109CF0();
        [v29 initWithUniqueIdentifier:v31 domainIdentifier:v32 attributeSet:v30];

        swift_beginAccess();
        sub_100109F10();
        if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100109F70();
        }
        sub_100109FA0();
        sub_100109F50();
        swift_endAccess();

        unint64_t v18 = v25;
        uint64_t v19 = v35;
      }
      ++v20;
    }
    while (v19 != v20);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_10008F2D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightUtilities();
  return [super dealloc];
}

uint64_t type metadata accessor for SpotlightUtilities()
{
  return self;
}

uint64_t sub_10008F328()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008F368()
{
  objc_super v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000091E4;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_10015CE60 + dword_10015CE60);
  return v5(v2, v3);
}

uint64_t sub_10008F41C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000091E4;
  return v6();
}

uint64_t sub_10008F4EC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000091E4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10015CE70 + dword_10015CE70);
  return v6(v2, v3, v4);
}

uint64_t sub_10008F5AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000091E4;
  return v7();
}

uint64_t sub_10008F67C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000091E4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10015CE80 + dword_10015CE80);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_10008F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10010A080();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_10010A070();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000B9CC(a1, &qword_10015A5F0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100109FF0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10008F8F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008F92C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000090F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015CE90 + dword_10015CE90);
  return v6(a1, v4);
}

void sub_10008F9E4(uint64_t a1)
{
  sub_10008E768(a1, *(void **)(v1 + 16));
}

uint64_t sub_10008F9EC()
{
  uint64_t v1 = sub_100004BD4(&qword_10015CEA0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10008FA80()
{
  return sub_10010A000();
}

uint64_t sub_10008FAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008FAF8()
{
  return swift_release();
}

uint64_t sub_10008FB00()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008FB38()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000091E4;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_10015CEA8 + dword_10015CEA8);
  return v4(v2);
}

uint64_t sub_10008FBEC(uint64_t a1)
{
  v1[18] = a1;
  uint64_t v2 = sub_10010A4C0();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  return _swift_task_switch(sub_10008FCAC, 0, 0);
}

uint64_t sub_10008FCAC()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = swift_allocObject();
  v0[22] = v5;
  *(void *)(v5 + 16) = _swiftEmptyArrayStorage;
  uint64_t v6 = swift_allocObject();
  v0[23] = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  swift_retain();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[24] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10008FE08;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_10008FE08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10008FF7C, 0, 0);
}

uint64_t sub_10008FF7C()
{
  id v1 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v2 = sub_100109CF0();
  NSString v3 = sub_100109CF0();
  id v4 = [v1 initWithName:v2 bundleIdentifier:v3];
  v0[25] = v4;

  swift_beginAccess();
  sub_10001CB98(0, &qword_10015CF00);
  swift_bridgeObjectRetain();
  Class isa = sub_100109F20().super.isa;
  v0[26] = isa;
  swift_bridgeObjectRelease();
  sub_100109D30();
  NSString v6 = sub_100109CF0();
  v0[27] = v6;
  swift_bridgeObjectRelease();
  NSString v7 = sub_100109CF0();
  v0[28] = v7;
  v0[2] = v0;
  v0[3] = sub_1000901B4;
  uint64_t v8 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10008DE10;
  v0[13] = &unk_100143C10;
  v0[14] = v8;
  [v4 indexSearchableItems:isa deleteSearchableItemsWithIdentifiers:0 clientState:0 clientStateName:0 protectionClass:v6 forBundleID:v7 options:0 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000901B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    NSString v2 = sub_10009035C;
  }
  else {
    NSString v2 = sub_1000902C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000902C4()
{
  NSString v2 = *(void **)(v0 + 216);
  uint64_t v1 = *(void **)(v0 + 224);
  NSString v3 = *(void **)(v0 + 208);

  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10009035C()
{
  uint64_t v1 = (void *)v0[28];
  NSString v3 = (void *)v0[26];
  NSString v2 = (void *)v0[27];
  uint64_t v4 = (void *)v0[25];
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100090404(char a1)
{
  *(unsigned char *)(v1 + 308) = a1;
  uint64_t v2 = sub_10010A260();
  *(void *)(v1 + 160) = v2;
  *(void *)(v1 + 168) = *(void *)(v2 - 8);
  *(void *)(v1 + 176) = swift_task_alloc();
  uint64_t v3 = sub_10010A280();
  *(void *)(v1 + 184) = v3;
  *(void *)(v1 + 192) = *(void *)(v3 - 8);
  *(void *)(v1 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_100090520, 0, 0);
}

uint64_t sub_100090520()
{
  sub_100109280();
  *(void *)(v0 + 208) = v1;
  if (qword_100158AD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100109960();
  *(void *)(v0 + 216) = sub_100007CB8(v2, (uint64_t)qword_10015CE20);
  uint64_t v3 = sub_100109940();
  os_log_type_t v4 = sub_10010A2F0();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = *(unsigned __int8 *)(v0 + 308);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    *(_DWORD *)(v0 + 304) = v5;
    sub_10010A730();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SpotlightUtilities.setDisableSearchInSpotlightFlag disableSearchInSpotlight: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }

  sub_10010A8D0(44);
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone((Class)CSSearchQuery);
  NSString v8 = sub_100109CF0();
  *(void *)(v0 + 224) = [v7 initWithQueryString:v8 queryContext:0];

  sub_10010A290();
  id v11 = (uint64_t (__cdecl *)())((char *)&dword_10015CEF8 + dword_10015CEF8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v9;
  void *v9 = v0;
  v9[1] = sub_100090748;
  return v11();
}

uint64_t sub_100090748(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  os_log_type_t v4 = (void *)*v2;
  v4[30] = a1;
  v4[31] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[24] + 8))(v3[25], v3[23]);
  if (v1) {
    int v5 = sub_1000911EC;
  }
  else {
    int v5 = sub_1000908B8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000908B8()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 240);
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 134217984;
    *(void *)(v0 + 152) = *(void *)(v3 + 16);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "SpotlightUtilities.setDisableSearchInSpotlightFlag found %ld searchable items", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = *(void *)(v0 + 240);
  id v40 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v0 + 308)];
  *(void *)(v0 + 256) = v40;
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v39 = *(void (**)(void, unint64_t, void))(v7 + 16);
    unint64_t v8 = *(void *)(v0 + 240)
       + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v38 = *(void *)(v7 + 72);
    v39(*(void *)(v0 + 176), v8, *(void *)(v0 + 160));
    while (1)
    {
      uint64_t v10 = (void *)sub_10010A250();
      id v11 = [v10 attributeSet];
      id v12 = [v11 disableSearchInSpotlight];

      if (!v12) {
        goto LABEL_11;
      }
      sub_10001CB98(0, (unint64_t *)&unk_10015B650);
      id v13 = v40;
      id v14 = v12;
      char v15 = sub_10010A6A0();

      if (v15)
      {
        (*v9)(*(void *)(v0 + 176), *(void *)(v0 + 160));
      }
      else
      {
LABEL_11:
        id v16 = [v10 attributeSet];
        [v16 setDisableSearchInSpotlight:v40];

        [v10 setIsUpdate:1];
        id v17 = v10;
        sub_100109F10();
        if (*(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_100109F70();
        uint64_t v18 = *(void *)(v0 + 176);
        uint64_t v19 = *(void *)(v0 + 160);
        sub_100109FA0();
        sub_100109F50();

        (*v9)(v18, v19);
      }
      v8 += v38;
      if (!--v6) {
        break;
      }
      v39(*(void *)(v0 + 176), v8, *(void *)(v0 + 160));
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_100109940();
  os_log_type_t v21 = sub_10010A2F0();
  uint64_t v22 = &selRef_layoutAttributesForCellWithIndexPath_;
  if (os_log_type_enabled(v20, v21))
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    *(_DWORD *)id v23 = 138412290;
    id v25 = objc_allocWithZone((Class)CSSearchableIndex);
    NSString v26 = sub_100109CF0();
    NSString v27 = sub_100109CF0();
    id v28 = [v25 initWithName:v26 bundleIdentifier:v27];

    *(void *)(v0 + 144) = v28;
    uint64_t v22 = &selRef_layoutAttributesForCellWithIndexPath_;
    sub_10010A730();
    *id v24 = v28;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "SpotlightUtilities.setDisableSearchInSpotlightFlag searchableIndeCGFloat x = %@", v23, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v29 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v30 = sub_100109CF0();
  NSString v31 = sub_100109CF0();
  id v32 = [v29 v22[435] v30 v31];
  *(void *)(v0 + 264) = v32;

  sub_10001CB98(0, &qword_10015CF00);
  swift_bridgeObjectRetain();
  Class isa = sub_100109F20().super.isa;
  *(void *)(v0 + 272) = isa;
  swift_bridgeObjectRelease();
  sub_100109D30();
  NSString v34 = sub_100109CF0();
  *(void *)(v0 + 280) = v34;
  swift_bridgeObjectRelease();
  NSString v35 = sub_100109CF0();
  *(void *)(v0 + 288) = v35;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_100090F04;
  uint64_t v36 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10008DE10;
  *(void *)(v0 + 104) = &unk_100143BA8;
  *(void *)(v0 + 112) = v36;
  [v32 indexSearchableItems:isa deleteSearchableItemsWithIdentifiers:0 clientState:0 clientStateName:0 protectionClass:v34 forBundleID:v35 options:256 completionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100090F04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 296) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_1000913C8;
  }
  else
  {
    os_log_type_t v2 = sub_10009101C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10009101C()
{
  os_log_type_t v2 = *(void **)(v0 + 280);
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void **)(v0 + 272);

  unint64_t v4 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100109940();
  os_log_type_t v6 = sub_10010A2F0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_10010AA80();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = *(NSObject **)(v0 + 256);
    uint64_t v10 = *(void **)(v0 + 224);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 136) = v8;
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SpotlightUtilities.setDisableSearchInSpotlightFlag update of %ld items was successful", v7, 0xCu);
    swift_slowDealloc();
    id v11 = v5;
    uint64_t v5 = v9;
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 256);
    id v11 = *(NSObject **)(v0 + 224);
    swift_bridgeObjectRelease_n();
  }

  sub_10008E558("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1000911EC()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    unint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v5;
    sub_10010A730();
    *unint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "SpotlightUtilities.setDisableSearchInSpotlightFlag error %@", v3, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10008E558("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000913C8()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void **)(v0 + 272);
  os_log_type_t v2 = *(void **)(v0 + 280);
  uint64_t v5 = *(void **)(v0 + 256);
  unint64_t v4 = *(void **)(v0 + 264);
  os_log_type_t v6 = *(void **)(v0 + 224);
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_100109940();
  os_log_type_t v8 = sub_10010A2D0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v11;
    sub_10010A730();
    *uint64_t v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SpotlightUtilities.setDisableSearchInSpotlightFlag error %@", v9, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10008E558("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1000915D0()
{
  return _swift_task_switch(sub_1000915EC, 0, 0);
}

uint64_t sub_1000915EC()
{
  sub_100109280();
  v0[15] = v1;
  id v2 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v3 = sub_100109CF0();
  NSString v4 = sub_100109CF0();
  id v5 = [v2 initWithName:v3 bundleIdentifier:v4];
  v0[16] = v5;

  Class isa = sub_100109F20().super.isa;
  v0[17] = isa;
  v0[2] = v0;
  v0[3] = sub_100091784;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10008DE10;
  v0[13] = &unk_100143B18;
  v0[14] = v7;
  [v5 deleteSearchableItemsWithDomainIdentifiers:isa completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100091784()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    id v2 = sub_100091910;
  }
  else {
    id v2 = sub_100091894;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100091894()
{
  uint64_t v1 = *(void **)(v0 + 136);
  double v2 = *(double *)(v0 + 120);

  sub_10008E558("SpotlightUtilities.deleteAllSearchableItems completed in %s seconds.", v2);
  NSString v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100091910()
{
  uint64_t v1 = (void *)*((void *)v0 + 17);
  double v2 = (void *)*((void *)v0 + 16);
  double v3 = v0[15];
  swift_willThrow();

  sub_10008E558("SpotlightUtilities.deleteAllSearchableItems completed in %s seconds.", v3);
  uint64_t v4 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v4();
}

uint64_t sub_1000919A4()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000919DC()
{
  char v2 = *(unsigned char *)(v0 + 16);
  double v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000090F0;
  uint64_t v5 = (uint64_t (*)(char, void *))((char *)&dword_10015CED0 + dword_10015CED0);
  return v5(v2, v3);
}

uint64_t sub_100091A98()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100091AD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100091B20()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100091B58()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100091B98()
{
  return sub_10008EE38(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void _s32MOPOIAnnotationViewConfigurationVwxx(id *a1)
{
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s32MOPOIAnnotationViewConfigurationVMa()
{
  return &_s32MOPOIAnnotationViewConfigurationVN;
}

double sub_100091DDC()
{
  double v1 = COERCE_DOUBLE(sub_10009202C());
  double v2 = 0.0;
  double v3 = 0.0;
  if ((v4 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v7 = v1 * 0.45;
      double v5 = (v1 - v1 * 0.45) * 0.5;
      double v6 = v5;
    }
    else
    {
      double v5 = v1 * 0.55 * 0.5;
      double v6 = *(double *)(v0 + 32);
      double v7 = v1 * 0.45;
    }
    nullsub_1(v5, v6, v7, v7);
    double v3 = v8;
  }
  double v9 = COERCE_DOUBLE(sub_10009202C());
  if ((v10 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v13 = v9 * 0.45;
      double v11 = (v9 - v9 * 0.45) * 0.5;
      double v12 = v11;
    }
    else
    {
      double v11 = v9 * 0.55 * 0.5;
      double v12 = *(double *)(v0 + 32);
      double v13 = v9 * 0.45;
    }
    double v2 = nullsub_1(v11, v12, v13, v13);
  }
  double v14 = COERCE_DOUBLE(sub_10009202C());
  double v15 = 0.0;
  if ((v16 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v19 = v14 * 0.45;
      double v17 = (v14 - v14 * 0.45) * 0.5;
      double v18 = v17;
    }
    else
    {
      double v17 = v14 * 0.55 * 0.5;
      double v18 = *(double *)(v0 + 32);
      double v19 = v14 * 0.45;
    }
    nullsub_1(v17, v18, v19, v19);
  }
  double v20 = v3 * 0.15 * 0.5;
  double v21 = v15 - v20;

  return nullsub_1(v2 - v20, v21, v3 * 1.15, v3 * 1.15);
}

void *sub_100091FDC()
{
  __n128 result = (void *)sub_10007B8D0((uint64_t)&off_10013FC98);
  off_10015CF28 = result;
  return result;
}

void *sub_100092004()
{
  __n128 result = (void *)sub_10007B8D0((uint64_t)&off_10013FC18);
  off_10015CF30 = result;
  return result;
}

uint64_t sub_10009202C()
{
  if (*(uint64_t *)(v0 + 16) > 1 || (*(unsigned char *)(v0 + 24) & 1) != 0)
  {
    if (qword_100158AE8 != -1) {
      swift_once();
    }
    double v1 = off_10015CF30;
    if (!*((void *)off_10015CF30 + 2)) {
      return 0;
    }
  }
  else
  {
    if (qword_100158AE0 != -1) {
      swift_once();
    }
    double v1 = off_10015CF28;
    if (!*((void *)off_10015CF28 + 2)) {
      return 0;
    }
  }
  unint64_t v2 = sub_1000FCD70(*(unsigned char *)(v0 + 8));
  if (v3) {
    return *(void *)(v1[7] + 8 * v2);
  }
  return 0;
}

uint64_t type metadata accessor for SettingsManager()
{
  return self;
}

id sub_10009212C()
{
  id result = sub_10009214C();
  qword_10016DF00 = (uint64_t)result;
  return result;
}

id sub_10009214C()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2) {
    id v2 = [self standardUserDefaults];
  }
  sub_100004BD4(&qword_10015A680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122220;
  *(void *)(inited + 32) = sub_100109D30();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = 21;
  *(void *)(inited + 80) = sub_100109D30();
  *(void *)(inited + 88) = v5;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = 1;
  sub_10007B770(inited);
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  [v2 registerDefaults:isa];

  return v2;
}

id sub_1000925D0(void *a1)
{
  sub_100109D30();
  id v2 = a1;
  NSString v3 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v4 = [v2 integerForKey:v3];

  return v4;
}

void sub_100092658(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100109D30();
  id v5 = a1;
  NSString v6 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v5 setInteger:a3 forKey:v6];
}

id sub_1000926F8(void *a1)
{
  sub_100109D30();
  id v2 = a1;
  NSString v3 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v4 = [v2 BOOLForKey:v3];

  return v4;
}

void sub_1000927E0(char a1)
{
  sub_100109D30();
  NSString v3 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v1 setBool:a1 & 1 forKey:v3];

  if ((a1 & 1) == 0)
  {
    sub_100109D30();
    NSString v4 = sub_100109CF0();
    swift_bridgeObjectRelease();
    [v1 removeObjectForKey:v4];

    sub_100109D30();
    NSString v5 = sub_100109CF0();
    swift_bridgeObjectRelease();
    [v1 removeObjectForKey:v5];
  }
}

void sub_100092A4C(uint64_t a1, unint64_t a2)
{
  NSString v3 = v2;
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_100109240().super.isa;
  }
  sub_100109D30();
  NSString v7 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v3 setObject:isa forKey:v7];
  swift_unknownObjectRelease();

  sub_100109D30();
  NSString v8 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v3 removeObjectForKey:v8];
  sub_100008508(a1, a2);
}

uint64_t sub_100092B50(uint64_t result)
{
  if (result)
  {
    switch(result)
    {
      case 1:
        return 1;
      case 5:
        return 2;
      case 15:
        return 3;
      default:
        return 5;
    }
  }
  return result;
}

uint64_t sub_100092BB0()
{
  return 1;
}

uint64_t sub_100092C40()
{
  if (qword_100158AF0 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10016DF00;
  NSString v1 = sub_100109CF0();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_10010A7B0();
    swift_unknownObjectRelease();
    sub_100017700((uint64_t)&v13);
    NSString v3 = sub_100109CF0();
    unsigned __int8 v4 = [v0 BOOLForKey:v3];

    if (v4)
    {
      NSString v5 = sub_100109CF0();
      id v6 = [v0 objectForKey:v5];

      if (v6)
      {
        sub_10010A7B0();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v11 = 0u;
        long long v12 = 0u;
      }
      sub_100024314((uint64_t)&v11, (uint64_t)&v13);
      if (*((void *)&v14 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t result = sub_100092BB0();
          if (result != 4) {
            return result;
          }
        }
      }
      else
      {
        sub_100017700((uint64_t)&v13);
      }
      return 1;
    }
    return 4;
  }
  long long v13 = 0u;
  long long v14 = 0u;
  sub_100017700((uint64_t)&v13);
  sub_100109D30();
  NSString v7 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v8 = [v0 objectForKey:v7];

  if (v8)
  {
    sub_10010A7B0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_100024314((uint64_t)&v11, (uint64_t)&v13);
  if (!*((void *)&v14 + 1))
  {
    sub_100017700((uint64_t)&v13);
    return 4;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 4;
  }
  uint64_t result = sub_100092B50(v10);
  if (result == 5) {
    return 4;
  }
  return result;
}

uint64_t *NSPredicate.assetIsBeingEdited.unsafeMutableAddressor()
{
  if (qword_100158B70 != -1) {
    swift_once();
  }
  return &static NSPredicate.assetIsBeingEdited;
}

uint64_t *NSPredicate.assetIsHidden.unsafeMutableAddressor()
{
  if (qword_100158B80 != -1) {
    swift_once();
  }
  return &static NSPredicate.assetIsHidden;
}

uint64_t *NSPredicate.validEntries.unsafeMutableAddressor()
{
  if (qword_100158B58 != -1) {
    swift_once();
  }
  return &static NSPredicate.validEntries;
}

uint64_t sub_100092FD4()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.notRemovedFromCloud = result;
  return result;
}

uint64_t *NSPredicate.notRemovedFromCloud.unsafeMutableAddressor()
{
  if (qword_100158AF8 != -1) {
    swift_once();
  }
  return &static NSPredicate.notRemovedFromCloud;
}

id static NSPredicate.notRemovedFromCloud.getter()
{
  return sub_100094298(&qword_100158AF8, (void **)&static NSPredicate.notRemovedFromCloud);
}

uint64_t sub_100093098()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.removedFromCloud = result;
  return result;
}

uint64_t *NSPredicate.removedFromCloud.unsafeMutableAddressor()
{
  if (qword_100158B00 != -1) {
    swift_once();
  }
  return &static NSPredicate.removedFromCloud;
}

id static NSPredicate.removedFromCloud.getter()
{
  return sub_100094298(&qword_100158B00, (void **)&static NSPredicate.removedFromCloud);
}

uint64_t sub_10009315C()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.notUploadedToCloud = result;
  return result;
}

uint64_t *NSPredicate.notUploadedToCloud.unsafeMutableAddressor()
{
  if (qword_100158B08 != -1) {
    swift_once();
  }
  return &static NSPredicate.notUploadedToCloud;
}

id static NSPredicate.notUploadedToCloud.getter()
{
  return sub_100094298(&qword_100158B08, (void **)&static NSPredicate.notUploadedToCloud);
}

uint64_t sub_100093220()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.entryDateNotNil = result;
  return result;
}

uint64_t *NSPredicate.entryDateNotNil.unsafeMutableAddressor()
{
  if (qword_100158B10 != -1) {
    swift_once();
  }
  return &static NSPredicate.entryDateNotNil;
}

id static NSPredicate.entryDateNotNil.getter()
{
  return sub_100094298(&qword_100158B10, (void **)&static NSPredicate.entryDateNotNil);
}

uint64_t sub_1000932E4()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.isDraftEntrCGFloat y = result;
  return result;
}

uint64_t *NSPredicate.isDraftEntry.unsafeMutableAddressor()
{
  if (qword_100158B18 != -1) {
    swift_once();
  }
  return &static NSPredicate.isDraftEntry;
}

id static NSPredicate.isDraftEntry.getter()
{
  return sub_100094298(&qword_100158B18, (void **)&static NSPredicate.isDraftEntry);
}

uint64_t sub_1000933B0()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.isNotDraftEntrCGFloat y = result;
  return result;
}

uint64_t *NSPredicate.isNotDraftEntry.unsafeMutableAddressor()
{
  if (qword_100158B20 != -1) {
    swift_once();
  }
  return &static NSPredicate.isNotDraftEntry;
}

id static NSPredicate.isNotDraftEntry.getter()
{
  return sub_100094298(&qword_100158B20, (void **)&static NSPredicate.isNotDraftEntry);
}

uint64_t sub_100093474()
{
  sub_1000942E4();
  uint64_t result = sub_10010A230();
  static NSPredicate.isNotTipEntrCGFloat y = result;
  return result;
}

uint64_t *NSPredicate.isNotTipEntry.unsafeMutableAddressor()
{
  if (qword_100158B28 != -1) {
    swift_once();
  }
  return &static NSPredicate.isNotTipEntry;
}

id static NSPredicate.isNotTipEntry.getter()
{
  return sub_100094298(&qword_100158B28, (void **)&static NSPredicate.isNotTipEntry);
}

uint64_t sub_100093538()
{
  sub_1000942E4();
  sub_100004BD4(&qword_10015A190);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100122220;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_100094324();
  *(void *)(v0 + 32) = 0x737465737361;
  *(void *)(v0 + 40) = 0xE600000000000000;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x6E65646469487369;
  *(void *)(v0 + 80) = 0xE800000000000000;
  uint64_t result = sub_10010A230();
  static NSPredicate.unhiddenAssets = result;
  return result;
}

uint64_t *NSPredicate.unhiddenAssets.unsafeMutableAddressor()
{
  if (qword_100158B30 != -1) {
    swift_once();
  }
  return &static NSPredicate.unhiddenAssets;
}

id static NSPredicate.unhiddenAssets.getter()
{
  return sub_100094298(&qword_100158B30, (void **)&static NSPredicate.unhiddenAssets);
}

uint64_t sub_10009366C()
{
  sub_1000942E4();
  sub_100004BD4(&qword_10015A190);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100122220;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_100094324();
  *(void *)(v0 + 32) = 0x676E654C74786574;
  *(void *)(v0 + 40) = 0xEA00000000006874;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x676E654C74786574;
  *(void *)(v0 + 80) = 0xEA00000000006874;
  uint64_t result = sub_10010A230();
  static NSPredicate.hasNonEmptyText = result;
  return result;
}

uint64_t *NSPredicate.hasNonEmptyText.unsafeMutableAddressor()
{
  if (qword_100158B38 != -1) {
    swift_once();
  }
  return &static NSPredicate.hasNonEmptyText;
}

id static NSPredicate.hasNonEmptyText.getter()
{
  return sub_100094298(&qword_100158B38, (void **)&static NSPredicate.hasNonEmptyText);
}

uint64_t sub_100093794()
{
  sub_1000942E4();
  sub_100004BD4(&qword_10015A190);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100122230;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_100094324();
  *(void *)(v0 + 32) = 0x656C746974;
  *(void *)(v0 + 40) = 0xE500000000000000;
  uint64_t result = sub_10010A230();
  static NSPredicate.hasNonEmptyTitle = result;
  return result;
}

uint64_t *NSPredicate.hasNonEmptyTitle.unsafeMutableAddressor()
{
  if (qword_100158B40 != -1) {
    swift_once();
  }
  return &static NSPredicate.hasNonEmptyTitle;
}

id static NSPredicate.hasNonEmptyTitle.getter()
{
  return sub_100094298(&qword_100158B40, (void **)&static NSPredicate.hasNonEmptyTitle);
}

void sub_1000938A4()
{
  sub_100004BD4(qword_100159E08);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123770;
  if (qword_100158AF8 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v0 + 32) = static NSPredicate.notRemovedFromCloud;
  uint64_t v2 = qword_100158B20;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  unsigned __int8 v4 = (void *)static NSPredicate.isNotDraftEntry;
  *(void *)(v0 + 40) = static NSPredicate.isNotDraftEntry;
  uint64_t v5 = qword_100158B28;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  NSString v7 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v0 + 48) = static NSPredicate.isNotTipEntry;
  sub_100109F50();
  sub_1000942E4();
  id v8 = v7;
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self andPredicateWithSubpredicates:isa];

  static NSPredicate.allJournalEntries = (uint64_t)v10;
}

uint64_t *NSPredicate.allJournalEntries.unsafeMutableAddressor()
{
  if (qword_100158B48 != -1) {
    swift_once();
  }
  return &static NSPredicate.allJournalEntries;
}

id static NSPredicate.allJournalEntries.getter()
{
  return sub_100094298(&qword_100158B48, (void **)&static NSPredicate.allJournalEntries);
}

void sub_100093A90()
{
  sub_100004BD4(qword_100159E08);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123770;
  if (qword_100158B30 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.unhiddenAssets;
  *(void *)(v0 + 32) = static NSPredicate.unhiddenAssets;
  uint64_t v2 = qword_100158B38;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  unsigned __int8 v4 = (void *)static NSPredicate.hasNonEmptyText;
  *(void *)(v0 + 40) = static NSPredicate.hasNonEmptyText;
  uint64_t v5 = qword_100158B40;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  NSString v7 = (void *)static NSPredicate.hasNonEmptyTitle;
  *(void *)(v0 + 48) = static NSPredicate.hasNonEmptyTitle;
  sub_100109F50();
  sub_1000942E4();
  id v8 = v7;
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self orPredicateWithSubpredicates:isa];

  static NSPredicate.entryNotBlank = (uint64_t)v10;
}

uint64_t *NSPredicate.entryNotBlank.unsafeMutableAddressor()
{
  if (qword_100158B50 != -1) {
    swift_once();
  }
  return &static NSPredicate.entryNotBlank;
}

id static NSPredicate.entryNotBlank.getter()
{
  return sub_100094298(&qword_100158B50, (void **)&static NSPredicate.entryNotBlank);
}

void sub_100093C7C()
{
  sub_100004BD4(qword_100159E08);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123790;
  if (qword_100158B50 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.entryNotBlank;
  *(void *)(v0 + 32) = static NSPredicate.entryNotBlank;
  uint64_t v2 = qword_100158AF8;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  unsigned __int8 v4 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v0 + 40) = static NSPredicate.notRemovedFromCloud;
  uint64_t v5 = qword_100158B10;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  NSString v7 = (void *)static NSPredicate.entryDateNotNil;
  *(void *)(v0 + 48) = static NSPredicate.entryDateNotNil;
  uint64_t v8 = qword_100158B28;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  id v10 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v0 + 56) = static NSPredicate.isNotTipEntry;
  sub_100109F50();
  sub_1000942E4();
  id v11 = v10;
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [self andPredicateWithSubpredicates:isa];

  static NSPredicate.validEntries = (uint64_t)v13;
}

id static NSPredicate.validEntries.getter()
{
  return sub_100094298(&qword_100158B58, (void **)&static NSPredicate.validEntries);
}

uint64_t sub_100093E5C(uint64_t a1)
{
  return sub_100094054(a1, 0x6F7250736465656ELL, 0xEF676E6973736563, &static NSPredicate.attachmentNeedsProcessing);
}

uint64_t *NSPredicate.attachmentNeedsProcessing.unsafeMutableAddressor()
{
  if (qword_100158B60 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentNeedsProcessing;
}

id static NSPredicate.attachmentNeedsProcessing.getter()
{
  return sub_100094298(&qword_100158B60, (void **)&static NSPredicate.attachmentNeedsProcessing);
}

uint64_t sub_100093EF8()
{
  sub_1000942E4();
  sub_100004BD4(&qword_10015A190);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100122220;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_100094324();
  *(void *)(v0 + 32) = 0x6F7250736465656ELL;
  *(void *)(v0 + 40) = 0xEF676E6973736563;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x6F7250736465656ELL;
  *(void *)(v0 + 80) = 0xEF676E6973736563;
  uint64_t result = sub_10010A230();
  static NSPredicate.attachmentDoesNotNeedsProcessing = result;
  return result;
}

uint64_t *NSPredicate.attachmentDoesNotNeedsProcessing.unsafeMutableAddressor()
{
  if (qword_100158B68 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentDoesNotNeedsProcessing;
}

id static NSPredicate.attachmentDoesNotNeedsProcessing.getter()
{
  return sub_100094298(&qword_100158B68, (void **)&static NSPredicate.attachmentDoesNotNeedsProcessing);
}

uint64_t sub_100094028(uint64_t a1)
{
  return sub_100094054(a1, 0x45676E6965427369, 0xED00006465746964, &static NSPredicate.assetIsBeingEdited);
}

uint64_t sub_100094054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000942E4();
  sub_100004BD4(&qword_10015A190);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100122230;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_100094324();
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  uint64_t result = sub_10010A230();
  *a4 = result;
  return result;
}

id static NSPredicate.assetIsBeingEdited.getter()
{
  return sub_100094298(&qword_100158B70, (void **)&static NSPredicate.assetIsBeingEdited);
}

uint64_t sub_100094124()
{
  sub_1000942E4();
  sub_100004BD4(&qword_10015A190);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100122220;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_100094324();
  strcpy((char *)(v0 + 32), "isBeingEdited");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  strcpy((char *)(v0 + 72), "isBeingEdited");
  *(_WORD *)(v0 + 86) = -4864;
  uint64_t result = sub_10010A230();
  static NSPredicate.attachmentAssetIsNotBeingEdited = result;
  return result;
}

uint64_t *NSPredicate.attachmentAssetIsNotBeingEdited.unsafeMutableAddressor()
{
  if (qword_100158B78 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentAssetIsNotBeingEdited;
}

id static NSPredicate.attachmentAssetIsNotBeingEdited.getter()
{
  return sub_100094298(&qword_100158B78, (void **)&static NSPredicate.attachmentAssetIsNotBeingEdited);
}

uint64_t sub_100094254(uint64_t a1)
{
  return sub_100094054(a1, 0x6E65646469487369, 0xE800000000000000, &static NSPredicate.assetIsHidden);
}

id static NSPredicate.assetIsHidden.getter()
{
  return sub_100094298(&qword_100158B80, (void **)&static NSPredicate.assetIsHidden);
}

id sub_100094298(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;

  return v3;
}

unint64_t sub_1000942E4()
{
  unint64_t result = qword_10015BC88;
  if (!qword_10015BC88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015BC88);
  }
  return result;
}

unint64_t sub_100094324()
{
  unint64_t result = qword_10015CFD0;
  if (!qword_10015CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015CFD0);
  }
  return result;
}

uint64_t sub_100094378(void *a1)
{
  uint64_t v3 = sub_100004BD4(&qword_10015D0F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_100095938();
  sub_10010AE60();
  v8[15] = 0;
  sub_10010AC10();
  if (!v1)
  {
    v8[14] = 1;
    sub_10010ABC0();
    v8[13] = 2;
    sub_10010ABC0();
    _s9BookAssetC8BookDataVMa(0);
    v8[12] = 3;
    sub_100109460();
    sub_1000958F0(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100094580@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015D0E8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s9BookAssetC8BookDataVMa(0);
  __chkstk_darwin(v10);
  long long v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B718(a1, a1[3]);
  sub_100095938();
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v29 = 0;
  *long long v12 = sub_10010AB70();
  v12[1] = v16;
  char v28 = 1;
  v12[2] = sub_10010AB20();
  v12[3] = v17;
  char v27 = 2;
  uint64_t v18 = sub_10010AB20();
  v21[1] = 0;
  v12[4] = v18;
  v12[5] = v19;
  sub_100109460();
  char v26 = 3;
  sub_1000958F0(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  sub_100012FA4(v13, (uint64_t)v12 + *(int *)(v22 + 28));
  sub_10009598C((uint64_t)v12, v23);
  sub_10000B7B0((uint64_t)a1);
  return sub_1000959F0((uint64_t)v12);
}

uint64_t sub_10009491C()
{
  uint64_t result = 0x6449616964656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x726F68747561;
      break;
    case 3:
      uint64_t result = 0x7550664F656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000949B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100095D1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000949D8(uint64_t a1)
{
  unint64_t v2 = sub_100095938();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100094A14(uint64_t a1)
{
  unint64_t v2 = sub_100095938();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100094A50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100094580(a1, a2);
}

uint64_t sub_100094A68(void *a1)
{
  return sub_100094378(a1);
}

uint64_t sub_100094A80()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A338);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9BookAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000267A8((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_100095A4C((uint64_t)v3);
    return 0;
  }
  sub_100095AAC((uint64_t)v3, (uint64_t)v7);
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122220;
  *(void *)(inited + 32) = *((void *)v7 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 24);
  *(void *)(inited + 56) = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100042280(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  sub_1000959F0((uint64_t)v7);
  return v9;
}

uint64_t sub_100094CA0()
{
  return swift_release();
}

id sub_100094CB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9BookAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100094CF8()
{
  return _s9BookAssetCMa(0);
}

uint64_t _s9BookAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015D000);
}

uint64_t sub_100094D20()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100094D64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_100109460();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v10, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t sub_100094F00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100109460();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_100094FE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

void *sub_10009512C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_100095304(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100109460();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_100095420(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100109460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1000955C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000955DC);
}

uint64_t sub_1000955DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100095690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000956A4);
}

uint64_t sub_1000956A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s9BookAssetC8BookDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015D068);
}

void sub_100095770()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100095814()
{
  return swift_retain();
}

uint64_t sub_100095824(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9BookAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10009583C()
{
  return sub_100094A80();
}

uint64_t sub_100095860()
{
  return sub_1000958F0(&qword_10015A340, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_1000958A8()
{
  return sub_1000958F0(&qword_10015D0A8, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_1000958F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100095938()
{
  unint64_t result = qword_10015D0F0;
  if (!qword_10015D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D0F0);
  }
  return result;
}

uint64_t sub_10009598C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000959F0(uint64_t a1)
{
  uint64_t v2 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100095A4C(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015A338);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100095AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s9BookAssetC8BookDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100095BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9BookAssetC8BookDataV10CodingKeysOMa()
{
  return &_s9BookAssetC8BookDataV10CodingKeysON;
}

unint64_t sub_100095C18()
{
  unint64_t result = qword_10015D100;
  if (!qword_10015D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D100);
  }
  return result;
}

unint64_t sub_100095C70()
{
  unint64_t result = qword_10015D108;
  if (!qword_10015D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D108);
  }
  return result;
}

unint64_t sub_100095CC8()
{
  unint64_t result = qword_10015D110;
  if (!qword_10015D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D110);
  }
  return result;
}

uint64_t sub_100095D1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7550664F656D6974 && a2 == 0xEE00657361686372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100095EEC(void *a1)
{
  uint64_t v3 = sub_100004BD4(&qword_10015D240);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_100097A0C();
  sub_10010AE60();
  char v13 = 0;
  sub_10010AC10();
  if (!v1)
  {
    _s12ContactAssetC11ContactDataVMa(0);
    char v12 = 1;
    sub_100109460();
    sub_1000979C4(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    char v11 = 2;
    sub_10010AC00();
    char v10 = 3;
    sub_10010ABE0();
    char v9 = 4;
    sub_10010ABF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10009614C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  char v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_100004BD4(&qword_10015D230);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (int *)_s12ContactAssetC11ContactDataVMa(0);
  __chkstk_darwin(v11);
  char v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B718(a1, a1[3]);
  sub_100097A0C();
  uint64_t v14 = v10;
  uint64_t v15 = (uint64_t)v32;
  sub_10010AE50();
  if (v15) {
    return sub_10000B7B0((uint64_t)a1);
  }
  id v32 = a1;
  uint64_t v16 = v30;
  char v37 = 0;
  *char v13 = sub_10010AB70();
  v13[1] = v17;
  sub_100109460();
  char v36 = 1;
  sub_1000979C4(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_100012FA4((uint64_t)v7, (uint64_t)v13 + v11[5]);
  char v35 = 2;
  uint64_t v18 = (uint64_t)v29;
  sub_10010AB60();
  sub_100012FA4(v18, (uint64_t)v13 + v11[6]);
  char v34 = 3;
  uint64_t v19 = sub_10010AB40();
  double v20 = (char *)v13 + v11[7];
  *(void *)double v20 = v19;
  v20[8] = v21 & 1;
  char v33 = 4;
  uint64_t v22 = sub_10010AB50();
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v31);
  uint64_t v25 = (char *)v13 + v11[8];
  *(void *)uint64_t v25 = v22;
  v25[8] = v24 & 1;
  sub_100097A60((uint64_t)v13, v28);
  sub_10000B7B0((uint64_t)v32);
  return sub_100097AC4((uint64_t)v13);
}

unint64_t sub_1000965A0()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D69547472617473;
      break;
    case 2:
      unint64_t result = 0x656D6954646E65;
      break;
    case 3:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10009664C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100097D90(a1, a2);
  *a3 = result;
  return result;
}

void sub_100096674(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100096680(uint64_t a1)
{
  unint64_t v2 = sub_100097A0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000966BC(uint64_t a1)
{
  unint64_t v2 = sub_100097A0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000966F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009614C(a1, a2);
}

uint64_t sub_100096710(void *a1)
{
  return sub_100095EEC(a1);
}

uint64_t sub_100096728()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A318);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling12ContactAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100026E10((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_10015A318);
    return 0;
  }
  sub_100097B20((uint64_t)v3, (uint64_t)v7);
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  sub_100097AC4((uint64_t)v7);
  return v8;
}

uint64_t sub_1000968C8()
{
  return swift_release();
}

id sub_1000968D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12ContactAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100096920()
{
  return _s12ContactAssetCMa(0);
}

uint64_t _s12ContactAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015D140);
}

uint64_t sub_100096948()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_10009698C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100109460();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v20;
    char v23 = (char *)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
  }
  return v4;
}

uint64_t sub_100096BE0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100109460();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_100096D08(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = (char *)a1 + v19;
  char v23 = &a2[v19];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  return a1;
}

char *sub_100096F0C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  char v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[8];
  char v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)char v26 = v28;
  return a1;
}

_OWORD *sub_1000971E0(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  int v19 = (char *)a1 + v17;
  uint64_t v20 = &a2[v17];
  *(void *)int v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = &a2[v18];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_1000973DC(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (char *)a2 + v16;
  int v19 = v12(&a1[v16], 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = (char *)a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  char v26 = &a1[v23];
  uint64_t v27 = (char *)a2 + v23;
  *(void *)char v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_10009769C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000976B0);
}

uint64_t sub_1000976B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100097764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100097778);
}

uint64_t sub_100097778(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s12ContactAssetC11ContactDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015D1A8);
}

void sub_100097844()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000978E8()
{
  return swift_retain();
}

uint64_t sub_1000978F8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling12ContactAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100097910()
{
  return sub_100096728();
}

uint64_t sub_100097934()
{
  return sub_1000979C4(&qword_10015A320, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa);
}

uint64_t sub_10009797C()
{
  return sub_1000979C4(&qword_10015D1F0, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa);
}

uint64_t sub_1000979C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100097A0C()
{
  unint64_t result = qword_10015D238;
  if (!qword_10015D238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D238);
  }
  return result;
}

uint64_t sub_100097A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100097AC4(uint64_t a1)
{
  uint64_t v2 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100097B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s12ContactAssetC11ContactDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100097C50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12ContactAssetC11ContactDataV10CodingKeysOMa()
{
  return &_s12ContactAssetC11ContactDataV10CodingKeysON;
}

unint64_t sub_100097C8C()
{
  unint64_t result = qword_10015D248;
  if (!qword_10015D248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D248);
  }
  return result;
}

unint64_t sub_100097CE4()
{
  unint64_t result = qword_10015D250;
  if (!qword_10015D250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D250);
  }
  return result;
}

unint64_t sub_100097D3C()
{
  unint64_t result = qword_10015D258;
  if (!qword_10015D258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D258);
  }
  return result;
}

uint64_t sub_100097D90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100111600)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100097FA8()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotosPickerItemModel()
{
  return self;
}

uint64_t sub_100098004()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension15ImageStateModel__imageState;
  uint64_t v2 = sub_100004BD4(&qword_10015D590);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC21JournalShareExtension15ImageStateModel__itemProvider;
  uint64_t v4 = sub_100004BD4(&qword_10015D598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1000980F0()
{
  return type metadata accessor for ImageStateModel(0);
}

uint64_t type metadata accessor for ImageStateModel(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015D370);
}

void sub_100098118()
{
  sub_1000981E4();
  if (v0 <= 0x3F)
  {
    sub_10009823C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000981E4()
{
  if (!qword_10015D380)
  {
    unint64_t v0 = sub_100109A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015D380);
    }
  }
}

void sub_10009823C()
{
  if (!qword_10015D388)
  {
    sub_100012F08((uint64_t *)&unk_10015D390);
    unint64_t v0 = sub_100109A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015D388);
    }
  }
}

uint64_t sub_100098298@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ImageStateModel(0);
  uint64_t result = sub_1001099C0();
  *a1 = result;
  return result;
}

uint64_t sub_1000982D8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension15PhotosViewModel__targetURL;
  uint64_t v2 = sub_100004BD4(&qword_10015D588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10009837C()
{
  return type metadata accessor for PhotosViewModel(0);
}

uint64_t type metadata accessor for PhotosViewModel(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015D4B0);
}

void sub_1000983A4()
{
  sub_100098434();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100098434()
{
  if (!qword_10015D4C0)
  {
    sub_1001091E0();
    unint64_t v0 = sub_100109A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015D4C0);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ImageStateModel.ImageState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1000984D4(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1000984D4(id result, unsigned __int8 a2)
{
  if (a2 == 2) {
    return (id)swift_errorRetain();
  }
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void destroy for ImageStateModel.ImageState(uint64_t a1)
{
}

void sub_100098508(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_errorRelease();
  }
  else if (a2 <= 1u)
  {
  }
}

uint64_t assignWithCopy for ImageStateModel.ImageState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1000984D4(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100098508(v5, v6);
  return a1;
}

uint64_t initializeWithTake for ImageStateModel.ImageState(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ImageStateModel.ImageState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100098508(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageStateModel.ImageState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageStateModel.ImageState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100098660(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_100098678(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ImageStateModel.ImageState()
{
  return &type metadata for ImageStateModel.ImageState;
}

uint64_t destroy for PhotoPickerItem(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhotoPickerItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v5 = *(void **)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotoPickerItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 24);
  unsigned __int8 v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PhotoPickerItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PhotoPickerItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotoPickerItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotoPickerItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotoPickerItem()
{
  return &type metadata for PhotoPickerItem;
}

uint64_t sub_1000988E4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PhotosViewModel(0);
  uint64_t result = sub_1001099C0();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for PhotoPickerItem.ItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000989F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotoPickerItem.ItemType()
{
  return &type metadata for PhotoPickerItem.ItemType;
}

unint64_t sub_100098A2C()
{
  unint64_t result = qword_10015D5A0;
  if (!qword_10015D5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D5A0);
  }
  return result;
}

uint64_t sub_100098A84(char a1)
{
  uint64_t v2 = sub_100109520();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100109CE0();
  __chkstk_darwin(v3 - 8);
  switch(a1)
  {
    case 5:
      sub_100109C80();
      sub_100109510();
      uint64_t result = sub_100109D50();
      break;
    default:
      sub_100109C80();
      sub_100109510();
      uint64_t result = sub_100109D60();
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType()
{
  return &type metadata for MediaViewType;
}

unint64_t sub_100098D44()
{
  unint64_t result = qword_10015D5A8;
  if (!qword_10015D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D5A8);
  }
  return result;
}

unint64_t sub_100098D98(char a1)
{
  unint64_t result = 1735290739;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75626C41676E6F73;
      break;
    case 2:
      unint64_t result = 0x74736163646F70;
      break;
    case 3:
      unint64_t result = 0x4174736163646F70;
      break;
    case 4:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 5:
      unint64_t result = 0x7261506472696874;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100098EC4(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_100004BD4(&qword_10015D648);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015D650);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015D658);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4(&qword_10015D660);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4(&qword_10015D668);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  char v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004BD4(&qword_10015D670);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004BD4(&qword_10015D678);
  uint64_t v32 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004BD4(&qword_10015D680);
  uint64_t v31 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004BD4(&qword_10015D688);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_10009A7EC();
  sub_10010AE60();
  switch((char)v50)
  {
    case 1:
      char v54 = 1;
      sub_10009AA38();
      uint64_t v26 = v51;
      sub_10010ABB0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 2:
      char v55 = 2;
      sub_10009A9E4();
      uint64_t v26 = v51;
      sub_10010ABB0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 3:
      char v56 = 3;
      sub_10009A990();
      uint64_t v27 = v35;
      uint64_t v26 = v51;
      sub_10010ABB0();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_10;
    case 4:
      char v57 = 4;
      sub_10009A93C();
      uint64_t v27 = v38;
      uint64_t v26 = v51;
      sub_10010ABB0();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_10;
    case 5:
      char v58 = 5;
      sub_10009A8E8();
      uint64_t v27 = v41;
      uint64_t v26 = v51;
      sub_10010ABB0();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_10;
    case 6:
      char v59 = 6;
      sub_10009A894();
      uint64_t v27 = v44;
      uint64_t v26 = v51;
      sub_10010ABB0();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
      goto LABEL_10;
    case 7:
      char v60 = 7;
      sub_10009A840();
      uint64_t v27 = v47;
      uint64_t v26 = v51;
      sub_10010ABB0();
      uint64_t v29 = v48;
      uint64_t v28 = v49;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v53 = 0;
      sub_10009AA8C();
      uint64_t v26 = v51;
      sub_10010ABB0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
}

uint64_t sub_100099638()
{
  return 0;
}

void sub_100099644(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100099650(uint64_t a1)
{
  unint64_t v2 = sub_10009A93C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009968C(uint64_t a1)
{
  unint64_t v2 = sub_10009A93C();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1000996D0()
{
  return sub_100098D98(*v0);
}

uint64_t sub_1000996D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100099B38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100099700(uint64_t a1)
{
  unint64_t v2 = sub_10009A7EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009973C(uint64_t a1)
{
  unint64_t v2 = sub_10009A7EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100099778(uint64_t a1)
{
  unint64_t v2 = sub_10009A990();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000997B4(uint64_t a1)
{
  unint64_t v2 = sub_10009A990();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000997F0(uint64_t a1)
{
  unint64_t v2 = sub_10009A9E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009982C(uint64_t a1)
{
  unint64_t v2 = sub_10009A9E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100099868(uint64_t a1)
{
  unint64_t v2 = sub_10009AA38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000998A4(uint64_t a1)
{
  unint64_t v2 = sub_10009AA38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000998E0(uint64_t a1)
{
  unint64_t v2 = sub_10009AA8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009991C(uint64_t a1)
{
  unint64_t v2 = sub_10009AA8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100099958(uint64_t a1)
{
  unint64_t v2 = sub_10009A894();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100099994(uint64_t a1)
{
  unint64_t v2 = sub_10009A894();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000999D0(uint64_t a1)
{
  unint64_t v2 = sub_10009A840();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100099A0C(uint64_t a1)
{
  unint64_t v2 = sub_10009A840();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100099A48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100099A78(uint64_t a1)
{
  unint64_t v2 = sub_10009A8E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100099AB4(uint64_t a1)
{
  unint64_t v2 = sub_10009A8E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100099AF0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100099EB8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100099B1C(void *a1)
{
  return sub_100098EC4(a1, *v1);
}

uint64_t sub_100099B38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75626C41676E6F73 && a2 == 0xE90000000000006DLL || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736163646F70 && a2 == 0xE700000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4174736163646F70 && a2 == 0xED00007473697472 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6F626F69647561 && a2 == 0xE90000000000006BLL || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7261506472696874 && a2 == 0xEF616964654D7974 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100111810 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100111830)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_100099EB8(void *a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015D5B0);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  char v59 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004BD4(&qword_10015D5B8);
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v62 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015D5C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4(&qword_10015D5C8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  __chkstk_darwin(v8);
  char v60 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4(&qword_10015D5D0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  __chkstk_darwin(v11);
  char v58 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004BD4(&qword_10015D5D8);
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  char v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BD4(&qword_10015D5E0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004BD4(&qword_10015D5E8);
  uint64_t v44 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004BD4(&qword_10015D5F0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v63 = a1;
  sub_10000B718(a1, v25);
  sub_10009A7EC();
  uint64_t v26 = v64;
  sub_10010AE50();
  if (v26) {
    goto LABEL_16;
  }
  uint64_t v41 = v20;
  uint64_t v40 = v18;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v62;
  uint64_t v64 = v22;
  uint64_t v30 = v24;
  uint64_t v31 = sub_10010ABA0();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = sub_10010A950();
    swift_allocError();
    uint64_t v34 = v33;
    sub_100004BD4(&qword_10015D600);
    *uint64_t v34 = &type metadata for MediaViewType;
    sub_10010AB10();
    sub_10010A940();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
LABEL_16:
    sub_10000B7B0((uint64_t)v63);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v66 = 1;
      sub_10009AA38();
      sub_10010AB00();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v47);
      break;
    case 2:
      char v67 = 2;
      sub_10009A9E4();
      char v35 = v57;
      sub_10010AB00();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v45);
      break;
    case 3:
      char v68 = 3;
      sub_10009A990();
      uint64_t v27 = v58;
      sub_10010AB00();
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      goto LABEL_11;
    case 4:
      char v69 = 4;
      sub_10009A93C();
      sub_10010AB00();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v51);
      break;
    case 5:
      char v70 = 5;
      sub_10009A8E8();
      sub_10010AB00();
      uint64_t v36 = v53;
      uint64_t v37 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
      break;
    case 6:
      char v71 = 6;
      sub_10009A894();
      sub_10010AB00();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
      break;
    case 7:
      char v72 = 7;
      sub_10009A840();
      uint64_t v38 = v59;
      sub_10010AB00();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      break;
    default:
      char v65 = 0;
      sub_10009AA8C();
      uint64_t v32 = v41;
      sub_10010AB00();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v40);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
  sub_10000B7B0((uint64_t)v63);
  return v24;
}

unint64_t sub_10009A7EC()
{
  unint64_t result = qword_10015D5F8;
  if (!qword_10015D5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D5F8);
  }
  return result;
}

unint64_t sub_10009A840()
{
  unint64_t result = qword_10015D608;
  if (!qword_10015D608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D608);
  }
  return result;
}

unint64_t sub_10009A894()
{
  unint64_t result = qword_10015D610;
  if (!qword_10015D610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D610);
  }
  return result;
}

unint64_t sub_10009A8E8()
{
  unint64_t result = qword_10015D618;
  if (!qword_10015D618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D618);
  }
  return result;
}

unint64_t sub_10009A93C()
{
  unint64_t result = qword_10015D620;
  if (!qword_10015D620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D620);
  }
  return result;
}

unint64_t sub_10009A990()
{
  unint64_t result = qword_10015D628;
  if (!qword_10015D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D628);
  }
  return result;
}

unint64_t sub_10009A9E4()
{
  unint64_t result = qword_10015D630;
  if (!qword_10015D630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D630);
  }
  return result;
}

unint64_t sub_10009AA38()
{
  unint64_t result = qword_10015D638;
  if (!qword_10015D638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D638);
  }
  return result;
}

unint64_t sub_10009AA8C()
{
  unint64_t result = qword_10015D640;
  if (!qword_10015D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D640);
  }
  return result;
}

unsigned char *_s21JournalShareExtension13MediaViewTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009ABACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType.CodingKeys()
{
  return &type metadata for MediaViewType.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongCodingKeys()
{
  return &type metadata for MediaViewType.SongCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongAlbumCodingKeys()
{
  return &type metadata for MediaViewType.SongAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastCodingKeys()
{
  return &type metadata for MediaViewType.PodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastArtistCodingKeys()
{
  return &type metadata for MediaViewType.PodcastArtistCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.AudiobookCodingKeys()
{
  return &type metadata for MediaViewType.AudiobookCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaAlbumCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaArtistCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaArtistCodingKeys;
}

unint64_t sub_10009AC68()
{
  unint64_t result = qword_10015D690;
  if (!qword_10015D690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D690);
  }
  return result;
}

unint64_t sub_10009ACC0()
{
  unint64_t result = qword_10015D698;
  if (!qword_10015D698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D698);
  }
  return result;
}

unint64_t sub_10009AD18()
{
  unint64_t result = qword_10015D6A0;
  if (!qword_10015D6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6A0);
  }
  return result;
}

unint64_t sub_10009AD70()
{
  unint64_t result = qword_10015D6A8;
  if (!qword_10015D6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6A8);
  }
  return result;
}

unint64_t sub_10009ADC8()
{
  unint64_t result = qword_10015D6B0;
  if (!qword_10015D6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6B0);
  }
  return result;
}

unint64_t sub_10009AE20()
{
  unint64_t result = qword_10015D6B8;
  if (!qword_10015D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6B8);
  }
  return result;
}

unint64_t sub_10009AE78()
{
  unint64_t result = qword_10015D6C0;
  if (!qword_10015D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6C0);
  }
  return result;
}

unint64_t sub_10009AED0()
{
  unint64_t result = qword_10015D6C8;
  if (!qword_10015D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6C8);
  }
  return result;
}

unint64_t sub_10009AF28()
{
  unint64_t result = qword_10015D6D0;
  if (!qword_10015D6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6D0);
  }
  return result;
}

unint64_t sub_10009AF80()
{
  unint64_t result = qword_10015D6D8;
  if (!qword_10015D6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6D8);
  }
  return result;
}

unint64_t sub_10009AFD8()
{
  unint64_t result = qword_10015D6E0;
  if (!qword_10015D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6E0);
  }
  return result;
}

unint64_t sub_10009B030()
{
  unint64_t result = qword_10015D6E8;
  if (!qword_10015D6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6E8);
  }
  return result;
}

unint64_t sub_10009B088()
{
  unint64_t result = qword_10015D6F0;
  if (!qword_10015D6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6F0);
  }
  return result;
}

unint64_t sub_10009B0E0()
{
  unint64_t result = qword_10015D6F8;
  if (!qword_10015D6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D6F8);
  }
  return result;
}

unint64_t sub_10009B138()
{
  unint64_t result = qword_10015D700;
  if (!qword_10015D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D700);
  }
  return result;
}

unint64_t sub_10009B190()
{
  unint64_t result = qword_10015D708;
  if (!qword_10015D708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D708);
  }
  return result;
}

unint64_t sub_10009B1E8()
{
  unint64_t result = qword_10015D710;
  if (!qword_10015D710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D710);
  }
  return result;
}

unint64_t sub_10009B240()
{
  unint64_t result = qword_10015D718;
  if (!qword_10015D718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D718);
  }
  return result;
}

unint64_t sub_10009B298()
{
  unint64_t result = qword_10015D720;
  if (!qword_10015D720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D720);
  }
  return result;
}

NSString sub_10009B2F8()
{
  NSString result = sub_100109CF0();
  qword_10016DFA8 = (uint64_t)result;
  return result;
}

NSString sub_10009B330()
{
  NSString result = sub_100109CF0();
  qword_10016DFB0 = (uint64_t)result;
  return result;
}

uint64_t sub_10009B368()
{
  uint64_t v1 = v0;
  v10[0] = sub_10010A3F0();
  uint64_t v2 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  unsigned int v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10010A3A0();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100109AC0();
  __chkstk_darwin(v6 - 8);
  sub_100004BD4(&qword_10015D898);
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1001099E0();
  *(void *)(v0 + 24) = 0;
  sub_10008D298();
  sub_100109A80();
  v10[1] = _swiftEmptyArrayStorage;
  sub_10009CCE8(&qword_10015D8E0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004BD4(&qword_10015D8E8);
  sub_10002E5E0(&qword_10015D8F0, &qword_10015D8E8);
  sub_10010A7D0();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10[0]);
  *(void *)(v0 + 32) = sub_10010A430();
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 0;
  id v7 = [self mainBundle];
  id v8 = [v7 bundleIdentifier];

  if (v8)
  {
    sub_100109D30();
  }
  sub_100109950();
  sub_10009B68C();
  return v1;
}

uint64_t sub_10009B68C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015D8B8);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10010A3E0();
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004BD4(&qword_10015D8C0);
  uint64_t v8 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v0 + 16);
  swift_retain();
  sub_10010A3D0();
  uint64_t v11 = *(void **)(v0 + 32);
  id v19 = v11;
  uint64_t v12 = sub_10010A3B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  id v13 = v11;
  sub_100004BD4(&qword_10015D898);
  sub_10008D298();
  sub_10002E5E0(&qword_10015D8C8, &qword_10015D898);
  sub_10009CCE8(&qword_10015D8D0, (void (*)(uint64_t))sub_10008D298);
  sub_100109A20();
  sub_10009CC48((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10002E5E0(&qword_10015D8D8, &qword_10015D8C0);
  uint64_t v14 = v18;
  uint64_t v15 = sub_100109A30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  *(void *)(v1 + 24) = v15;
  return swift_release();
}

uint64_t sub_10009B9F0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10009BA48();
    return swift_release();
  }
  return result;
}

uint64_t sub_10009BA48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100109940();
  os_log_type_t v10 = sub_10010A2C0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v0;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v4;
    uint64_t v24 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    v20[1] = v12 + 4;
    sub_100109430();
    uint64_t v14 = sub_1001093A0();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v23 = sub_1000C50D4(v14, v16, &v24);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "🫀 Reset inactivity timer at %s", v12, 0xCu);
    swift_arrayDestroy();
    unsigned int v4 = v21;
    swift_slowDealloc();
    uint64_t v1 = v22;
    swift_slowDealloc();
  }

  uint64_t v17 = sub_10010A080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  id v18[2] = 0;
  v18[3] = 0;
  v18[4] = v1;
  swift_retain();
  sub_10004C59C((uint64_t)v4, (uint64_t)&unk_10015D8B0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_10009BD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a4;
  return _swift_task_switch(sub_10009BD3C, 0, 0);
}

uint64_t sub_10009BD3C()
{
  swift_weakInit();
  sub_10010A060();
  *(void *)(v0 + 40) = sub_10010A050();
  uint64_t v2 = sub_100109FF0();
  return _swift_task_switch(sub_10009BDDC, v2, v1);
}

uint64_t sub_10009BDDC()
{
  swift_release();
  sub_10009BE64();
  swift_weakDestroy();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10009BE64()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [*(id *)(Strong + 40) invalidate];
    id v2 = [self scheduledTimerWithTimeInterval:v1 target:"inactivityTimerDidFire" selector:0 userInfo:0 repeats:60.0];
    uint64_t v3 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = v2;
    swift_release();
  }
}

uint64_t sub_10009BF1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100109460();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    uint64_t v7 = sub_100109940();
    os_log_type_t v8 = sub_10010A2C0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v17 = v15;
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v14 = v9 + 4;
      sub_100109430();
      uint64_t v10 = sub_1001093A0();
      unint64_t v12 = v11;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      uint64_t v16 = sub_1000C50D4(v10, v12, &v17);
      sub_10010A730();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "🫀 Keep alive called at %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    if (!*(void *)(v1 + 24))
    {
      sub_10009B68C();
      id v13 = [self defaultCenter];
      if (qword_100158B88 != -1) {
        swift_once();
      }
      [v13 postNotificationName:qword_10016DFA8 object:0 userInfo:0];
    }
    sub_100004BD4(&qword_10015D898);
    sub_10002E5E0(&qword_10015D8A0, &qword_10015D898);
    return sub_1001099F0();
  }
  return result;
}

uint64_t sub_10009C1E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100109940();
  os_log_type_t v10 = sub_10010A2B0();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)unint64_t v11 = 136315138;
    v18[1] = v11 + 4;
    sub_100109430();
    uint64_t v12 = sub_1001093A0();
    uint64_t v20 = v4;
    unint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = sub_1000C50D4(v12, v14, &v22);
    sub_10010A730();
    uint64_t v4 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "🫀 End session at %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (*(void *)(v1 + 24))
  {
    swift_retain();
    sub_1001099B0();
    swift_release();
  }
  *(void *)(v1 + 24) = 0;
  swift_release();
  uint64_t v15 = sub_10010A080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = 0;
  v16[3] = 0;
  v16[4] = v1;
  swift_retain();
  sub_10004C59C((uint64_t)v4, (uint64_t)&unk_10015D890, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_10009C4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10009C508, 0, 0);
}

uint64_t sub_10009C508()
{
  sub_10010A060();
  *(void *)(v0 + 24) = sub_10010A050();
  uint64_t v2 = sub_100109FF0();
  return _swift_task_switch(sub_10009C59C, v2, v1);
}

uint64_t sub_10009C59C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 40);
  if (v2)
  {
    [v2 invalidate];
    uint64_t v3 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = 0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_10009C61C()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109940();
  os_log_type_t v6 = sub_10010A2B0();
  if (os_log_type_enabled(v5, v6))
  {
    v12[1] = v0;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v12[0] = v7 + 4;
    sub_100109430();
    uint64_t v8 = sub_1001093A0();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v12[2] = sub_1000C50D4(v8, v10, &v13);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "🫀 User became inactive at %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10009C1E8();
  id v11 = [self defaultCenter];
  if (qword_100158B90 != -1) {
    swift_once();
  }
  [v11 postNotificationName:qword_10016DFB0 object:0 userInfo:0];
}

uint64_t sub_10009C8D0()
{
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension17CanvasIdleTracker_logger;
  uint64_t v2 = sub_100109960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10009C990()
{
  return type metadata accessor for CanvasIdleTracker();
}

uint64_t type metadata accessor for CanvasIdleTracker()
{
  uint64_t result = qword_10015D758;
  if (!qword_10015D758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009C9E4()
{
  uint64_t result = sub_100109960();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10009CAAC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000090F0;
  v3[2] = v2;
  return _swift_task_switch(sub_10009C508, 0, 0);
}

uint64_t sub_10009CB58()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10009CB98(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000091E4;
  v5[3] = a1;
  v5[4] = v4;
  return _swift_task_switch(sub_10009BD3C, 0, 0);
}

uint64_t sub_10009CC48(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015D8B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009CCA8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009CCE0()
{
  return sub_10009B9F0();
}

uint64_t sub_10009CCE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double *sub_10009CD30(double a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 superview];
  if (v4)
  {
    uint64_t v5 = v4;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:a1];
    if (v8)
    {
      id v9 = v8;
      sub_100109F10();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_100109F70();
      }
      sub_100109FA0();
      sub_100109F50();
    }
  }
  id v10 = [v2 superview];
  if (v10)
  {
    id v11 = v10;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v2 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:-a1];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];

      id v11 = v15;
      sub_100109F10();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_100109F70();
      }
      sub_100109FA0();
      sub_100109F50();
    }
  }
  id v16 = [v2 superview];
  if (v16)
  {
    uint64_t v17 = v16;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v2 topAnchor];
    id v19 = [v17 topAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:a1];
    if (v20)
    {
      id v21 = v20;
      sub_100109F10();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_100109F70();
      }
      sub_100109FA0();
      sub_100109F50();
    }
  }
  id v22 = [v2 superview];
  if (v22)
  {
    id v23 = v22;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v24 = [v2 bottomAnchor];
    id v25 = [v23 bottomAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    if (v26)
    {
      [v26 setConstant:-a1];

      id v23 = v26;
      sub_100109F10();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_100109F70();
      }
      sub_100109FA0();
      sub_100109F50();
    }
  }
  uint64_t v27 = self;
  sub_10001CB98(0, (unint64_t *)&qword_100159E00);
  swift_bridgeObjectRetain();
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  return _swiftEmptyArrayStorage;
}

id sub_10009D208(char a1, char a2, double a3)
{
  id v4 = v3;
  id v8 = [v4 superview];
  if (!v8) {
    return 0;
  }
  id v9 = v8;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v10 = [v4 bottomAnchor];
    if (a1 == 1)
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];
    }
    else
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintLessThanOrEqualToAnchor:v11];
    }
  }
  else
  {
    id v10 = [v4 bottomAnchor];
    id v11 = [v9 bottomAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];
  }
  id v13 = v12;

  if (v13)
  {
    [v13 setConstant:-a3];
    if (a2)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }
  else if (a2)
  {
    id v13 = 0;
  }

  return v13;
}

Swift::Void __swiftcall UIView.removeAllConstraints()()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    id v3 = v2;
    do
    {
      id v4 = v3;
      id v5 = [v4 constraints];
      sub_10001CB98(0, (unint64_t *)&qword_100159E00);
      unint64_t v6 = sub_100109F30();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_10010AA80();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_3;
        }
      }
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)sub_10010A920();
        }
        else {
          id v9 = *(id *)(v6 + 8 * i + 32);
        }
        id v10 = v9;
        if ([v9 firstItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_10001CB98(0, &qword_10015A8C0);
            if (sub_10010A6A0()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
        if ([v10 secondItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_10001CB98(0, &qword_10015A8C0);
            if (sub_10010A6A0()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      id v3 = [v4 superview];
    }
    while (v3);
  }
  Class isa = (Class)[v1 constraints];
  if (!isa)
  {
    sub_10001CB98(0, (unint64_t *)&qword_100159E00);
    sub_100109F30();
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 removeConstraints:isa];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:1];
}

uint64_t (*sub_10009D6D0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10009D7EC(v6, a2, a3);
  return sub_10009D738;
}

uint64_t (*sub_10009D73C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10009D86C(v6, a2, a3);
  return sub_10009D738;
}

void sub_10009D7A4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_10009D7EC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_10010A920();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return j__s32MOPOIAnnotationViewConfigurationVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10009D86C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_10010A920();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return _s32MOPOIAnnotationViewConfigurationVwxx;
  }
  __break(1u);
  return result;
}

id sub_10009D8F0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView;
  type metadata accessor for CanvasFallbackAssetView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v11[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_hasCalledSizeTypeUpdated] = 0;
  v11[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType] = 4;
  *(void *)&v11[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v11[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading] = 0;

  v13.receiver = v11;
  v13.super_class = (Class)type metadata accessor for JournalAssetView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10009DA04(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView;
  type metadata accessor for CanvasFallbackAssetView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_hasCalledSizeTypeUpdated] = 0;
  v5[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType] = 4;
  *(void *)&v5[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_isAssetFinishedLoading] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for JournalAssetView();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id sub_10009DB08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalAssetView()
{
  return self;
}

void sub_10009DBAC(CGRectEdge a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>, CGFloat a7@<D4>)
{
  type metadata accessor for CGRectEdge(0);
  double v14 = a6;
  switch(a1)
  {
    case CGRectMinXEdge:
    case CGRectMaxXEdge:
      goto LABEL_3;
    case CGRectMinYEdge:
    case CGRectMaxYEdge:
      double v14 = a7;
LABEL_3:
      CGFloat v15 = ceil(v14 * a3);
      memset(&slice, 0, sizeof(slice));
      memset(&v21, 0, sizeof(v21));
      v23.origin.double x = a4;
      v23.origin.double y = a5;
      v23.size.double width = a6;
      v23.size.double height = a7;
      CGRectDivide(v23, &slice, &v21, v15, a1);
      CGSize size = slice.size;
      double y = v21.origin.y;
      double x = v21.origin.x;
      double height = v21.size.height;
      double width = v21.size.width;
      switch(a1)
      {
        case CGRectMinXEdge:
        case CGRectMaxXEdge:
          double x = v21.origin.x + 0.1;
          double width = v21.size.width + -0.1;
          goto LABEL_6;
        case CGRectMinYEdge:
        case CGRectMaxYEdge:
          double y = v21.origin.y + 0.1;
          double height = v21.size.height + -0.1;
LABEL_6:
          *(CGPoint *)a2 = slice.origin;
          *(CGSize *)(a2 + 16) = size;
          *(double *)(a2 + 32) = x;
          *(double *)(a2 + 40) = y;
          *(double *)(a2 + 48) = width;
          *(double *)(a2 + 56) = height;
          return;
        default:
          goto LABEL_7;
      }
    default:
      break;
  }
LABEL_7:
  LODWORD(slice.origin.x) = a1;
  sub_10010ACE0();
  __break(1u);
  JUMPOUT(0x10009DD48);
}

void sub_10009DD68(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if (a6 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a6 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a8 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a8 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((~*(void *)&a4 & 0x7FF0000000000000) == 0
    || (*(void *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&a6 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&a8 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_22;
  }
  if (a4 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (a4 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    return;
  }
  v8.length = (uint64_t)a4;
  if (*(uint64_t *)&a2 != *(uint64_t *)&a6 || v8.length != (uint64_t)a8)
  {
    v9.length = (uint64_t)a8;
    v9.location = (uint64_t)a6;
    v8.location = (uint64_t)a2;
    NSIntersectionRange(v9, v8);
  }
}

uint64_t Journaling.EntryViewModel.accessibilityDescription.getter()
{
  uint64_t v2 = v0;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked) == 1)
  {
    if (qword_1001589D8 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_10016DE00;
    uint64_t v4 = *(void *)algn_10016DE08;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  id v5 = (void *)sub_1000D66A0();
  if (v5)
  {
    uint64_t v6 = sub_1000D6B34(v5);
    char v8 = v7;

    uint64_t v10 = 0;
    if (v8)
    {
      unint64_t v11 = 0;
      if (v6)
      {
        uint64_t v64 = v6;
        char v65 = 1;
        uint64_t v10 = sub_100109D70();
        unint64_t v11 = v12;
      }
    }
    else
    {
      unint64_t v11 = 0;
    }
    double v14 = (void *)sub_1000D66A0();
    if (v14 && (sub_1000D6B34(v14), v15))
    {
      id v16 = v15;
      id v17 = [v15 string];

      uint64_t inited = sub_100109D30();
      uint64_t v58 = v18;
    }
    else
    {
      uint64_t inited = 0;
      uint64_t v58 = 0;
    }
  }
  else
  {
    uint64_t inited = 0;
    uint64_t v58 = 0;
    uint64_t v10 = 0;
    unint64_t v11 = 0;
  }
  id v19 = (int64_t *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  int64_t v20 = *v19;
  if ((unint64_t)*v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v59 = v10;
  uint64_t v60 = inited;
  unint64_t v61 = v11;
  if (v21 < 2)
  {
    if (v21 != 1)
    {
      uint64_t v10 = v4;
      uint64_t v23 = 0;
      uint64_t v25 = 0;
      goto LABEL_35;
    }
    int64_t v26 = *v19;
    if ((v26 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = (unsigned char *)sub_10010A920();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v27)
      {
        __break(1u);
        goto LABEL_51;
      }
      uint64_t v28 = *(id *)(v26 + 32);
    }
    uint64_t v10 = v4;
    sub_100004BD4(&qword_100159730);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100122220;
    uint64_t v29 = *(void **)&v28[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_title];
    if (v29)
    {
      id v30 = [v29 string];
      uint64_t v31 = sub_100109D30();
      uint64_t v33 = v32;
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
    }
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v33;
    *(void *)(inited + 48) = sub_100081540(v28[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type]);
    *(void *)(inited + 56) = v34;
    _s5AssetCMa();
    uint64_t v1 = v28;
    sub_100004BD4(&qword_10015D948);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v63 = 0;
      memset(v62, 0, sizeof(v62));
      sub_10009E55C((uint64_t)v62);
      goto LABEL_34;
    }
    sub_10004BEA4(v62, (uint64_t)&v64);
    uint64_t v35 = v66;
    uint64_t v36 = v67;
    sub_10000B718(&v64, v66);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    int64_t v26 = v37;
    unint64_t v11 = *(void *)(inited + 16);
    unint64_t v27 = *(void *)(inited + 24);
    int64_t v20 = v11 + 1;
    if (v11 < v27 >> 1)
    {
LABEL_32:
      *(void *)(inited + 16) = v20;
      uint64_t v38 = inited + 16 * v11;
      *(void *)(v38 + 32) = v21;
      *(void *)(v38 + 40) = v26;
      sub_10000B7B0((uint64_t)&v64);
LABEL_34:
      uint64_t v23 = sub_100042280(8236, 0xE200000000000000, inited);
      uint64_t v25 = v39;
      swift_bridgeObjectRelease();

      goto LABEL_35;
    }
LABEL_51:
    uint64_t inited = (uint64_t)sub_10009EE24((double *)(v27 > 1), v20, 1, (double *)inited);
    goto LABEL_32;
  }
  uint64_t v10 = v4;
  if (qword_1001589D0 != -1) {
    swift_once();
  }
  sub_100004BD4(&qword_10015A190);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100122230;
  *(void *)(v22 + 56) = &type metadata for Int;
  *(void *)(v22 + 64) = &protocol witness table for Int;
  *(void *)(v22 + 32) = v21;
  uint64_t v23 = sub_100109D00();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v40 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
  if (!v40)
  {
LABEL_43:
    uint64_t v47 = 0;
    uint64_t v49 = 0;
    goto LABEL_44;
  }
  id v41 = [v40 string];
  uint64_t v42 = sub_100109D30();
  unint64_t v44 = v43;

  uint64_t v45 = HIBYTE(v44) & 0xF;
  if ((v44 & 0x2000000000000000) == 0) {
    uint64_t v45 = v42 & 0xFFFFFFFFFFFFLL;
  }
  if (!v45)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  if (qword_1001589E0 != -1) {
    swift_once();
  }
  sub_100004BD4(&qword_10015A190);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_100122230;
  *(void *)(v46 + 56) = &type metadata for String;
  *(void *)(v46 + 64) = sub_100094324();
  *(void *)(v46 + 32) = v42;
  *(void *)(v46 + 40) = v44;
  uint64_t v47 = sub_100109D40();
  uint64_t v49 = v48;
LABEL_44:
  sub_100004BD4(&qword_100159730);
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_100125AC0;
  *(void *)(v50 + 32) = v3;
  *(void *)(v50 + 40) = v10;
  uint64_t v51 = *(void **)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_title);
  if (v51)
  {
    id v52 = [v51 string];
    uint64_t v53 = sub_100109D30();
    uint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  *(void *)(v50 + 48) = v53;
  *(void *)(v50 + 56) = v55;
  *(void *)(v50 + 64) = v59;
  *(void *)(v50 + 72) = v61;
  *(void *)(v50 + 80) = v60;
  *(void *)(v50 + 88) = v58;
  *(void *)(v50 + 96) = v23;
  *(void *)(v50 + 104) = v25;
  *(void *)(v50 + 112) = v47;
  *(void *)(v50 + 120) = v49;
  uint64_t v56 = sub_100042280(2570, 0xE200000000000000, v50);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  return v56;
}

uint64_t sub_10009E538()
{
  return Journaling.EntryViewModel.accessibilityDescription.getter();
}

uint64_t sub_10009E55C(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_10015D950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10009E5BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4((uint64_t *)&unk_10015F2B0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      objc_super v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      objc_super v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10009F044(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_10009E6CC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4(&qword_10015D990);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      objc_super v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      objc_super v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_10009F138(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_10009E7DC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4(&qword_10015D960);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10009F244(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_10009E908(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4(&qword_10015D988);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      objc_super v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      objc_super v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_10009F338(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009EA18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009EBA4(a1, a2, a3, a4, &qword_10015D980, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

double *sub_10009EA4C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4(&qword_10015D958);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10009F580(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009EB70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009EBA4(a1, a2, a3, a4, &qword_10015D968, (uint64_t (*)(void))&type metadata accessor for CSSearchQuery.Results.Item, (uint64_t (*)(void))&type metadata accessor for CSSearchQuery.Results.Item);
}

uint64_t sub_10009EBA4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004BD4(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (double *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_10010AA50();
    __break(1u);
    return result;
  }
  *((void *)v18 + 2) = v13;
  *((void *)v18 + 3) = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10009F424(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

double *sub_10009EE24(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4(&qword_100159730);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_10009F678(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_10009EF34(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004BD4(&qword_10015D970);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_10009F784(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009F044(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_10009F138(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100004BD4(&qword_10015D998);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_10009F244(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

char *sub_10009F338(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_10009F424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_10009F580(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_10009F678(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100004BD4(&qword_100159738);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_10009F784(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_100004BD4(&qword_10015D978);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

void sub_10009F890(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10009F91C()
{
  uint64_t v1 = v0;
  uint64_t v78 = sub_100109710();
  uint64_t v2 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004BD4(&qword_10015DB00);
  uint64_t v4 = *(void *)(v76 - 8);
  uint64_t v5 = __chkstk_darwin(v76);
  uint64_t v59 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v58 = (char *)v53 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  char v57 = (char *)v53 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v75 = (char *)v53 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v53 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v63 = (char *)v53 - v17;
  __chkstk_darwin(v16);
  uint64_t v62 = (char *)v53 - v18;
  uint64_t v19 = sub_100004BD4(&qword_10015DB08);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  unint64_t v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v61 = (char *)v53 - v23;
  id v24 = [v1 itemType];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v60 = sub_100109D30();
    unint64_t v65 = v26;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v65 = 0xE000000000000000;
  }
  id v27 = [v1 siteName];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v55 = sub_100109D30();
    unint64_t v64 = v29;
  }
  else
  {
    uint64_t v55 = 0;
    unint64_t v64 = 0xE000000000000000;
  }
  unint64_t v30 = 0;
  uint64_t v73 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  char v72 = (void (**)(char *, uint64_t))(v4 + 8);
  v53[5] = "/\\bbook|books\\b/";
  v53[2] = 0x8000000100111BA0;
  v53[4] = "/\\bspotify|pandora\\b/";
  v53[1] = 0x8000000100111B80;
  v53[3] = "et";
  v53[0] = 0x8000000100111B60;
  uint64_t v54 = v15;
  uint64_t v56 = v22;
  while (1)
  {
    if (v30 >= 6)
    {
      __break(1u);
      JUMPOUT(0x1000A01E4);
    }
    uint64_t v31 = *((unsigned __int8 *)&off_10013FDA0 + v30 + 32);
    uint64_t v79 = v60;
    unint64_t v80 = v65;
    uint64_t v71 = v31;
    unint64_t v68 = v30 + 1;
    sub_100109720();
    uint64_t v32 = *v74;
    uint64_t v33 = v63;
    uint64_t v34 = v76;
    (*v74)(v63, v15, v76);
    uint64_t v35 = v75;
    sub_100109730();
    uint64_t v36 = v77;
    sub_100109700();
    int64_t v37 = v62;
    sub_100109740();
    char v70 = *v73;
    v70(v36, v78);
    uint64_t v38 = *v72;
    (*v72)(v35, v34);
    v38(v33, v34);
    unint64_t v39 = sub_1000A36D0();
    unint64_t v40 = sub_1000A3724();
    uint64_t v41 = (uint64_t)v61;
    unint64_t v69 = v40;
    sub_100109C20();
    v38(v37, v34);
    uint64_t v42 = sub_100004BD4(&qword_10015DB20);
    unint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48);
    if (v43(v41, 1, v42) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = v41;
      goto LABEL_15;
    }
    sub_10000B9CC(v41, &qword_10015DB08);
    uint64_t v79 = v55;
    unint64_t v80 = v64;
    unint64_t v44 = v59;
    uint64_t v66 = v43;
    unint64_t v67 = v39;
    sub_100109720();
    uint64_t v45 = v58;
    uint64_t v46 = v76;
    v32(v58, v44, v76);
    uint64_t v47 = v75;
    sub_100109730();
    uint64_t v48 = v77;
    sub_100109700();
    uint64_t v49 = v57;
    sub_100109740();
    v70(v48, v78);
    v38(v47, v46);
    v38(v45, v46);
    uint64_t v50 = (uint64_t)v56;
    sub_100109C20();
    v38(v49, v46);
    if (v66(v50, 1, v42) != 1) {
      break;
    }
    sub_10000B9CC(v50, &qword_10015DB08);
    unint64_t v30 = v68;
    uint64_t v15 = v54;
    if (v68 == 6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = v50;
LABEL_15:
  sub_10000B9CC(v52, &qword_10015DB08);
  return v71;
}

uint64_t sub_1000A0214()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015D9A0);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015D9A0);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000A02DC()
{
  uint64_t v0 = sub_1001094F0();
  sub_100007C54(v0, qword_10015D9B8);
  sub_100007CB8(v0, (uint64_t)qword_10015D9B8);
  return sub_1001094E0();
}

id sub_1000A0328()
{
  uint64_t v1 = (void *)v0[2];
  id v2 = v1;
  if (v1 == (void *)1)
  {
    uint64_t v3 = *v0;
    unint64_t v4 = v0[1];
    sub_100006F28(*v0, v4);
    Class isa = sub_100109240().super.isa;
    id v2 = [self metadataWithDataRepresentation:isa];
    sub_100007084(v3, v4);

    v0[2] = (uint64_t)v2;
    id v6 = v2;
  }
  sub_1000A37E8(v1);
  return v2;
}

uint64_t sub_1000A03D0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015DAF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_1000A35AC();
  sub_10010AE60();
  long long v11 = *v3;
  v10[15] = 0;
  sub_100045CC0();
  sub_10010AC30();
  if (!v2)
  {
    _s9LinkAssetC8LinkDataVMa(0);
    LOBYTE(v11) = 1;
    sub_100109460();
    sub_1000A3564(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v11) = 2;
    sub_1001091E0();
    sub_1000A3564(&qword_100159718, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10010AC00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1000A061C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4(&qword_10015DAE8);
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s9LinkAssetC8LinkDataVMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v15 + 2) = 1;
  uint64_t v16 = a1[3];
  id v24 = a1;
  sub_10000B718(a1, v16);
  sub_1000A35AC();
  sub_10010AE50();
  if (v2)
  {
    sub_10000B7B0((uint64_t)v24);
    sub_1000A3600((id)1);
  }
  else
  {
    uint64_t v17 = v22;
    uint64_t v20 = v6;
    char v26 = 0;
    sub_100045AA0();
    sub_10010AB90();
    *(_OWORD *)uint64_t v15 = v25;
    sub_100109460();
    LOBYTE(v25) = 1;
    sub_1000A3564(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AB60();
    sub_10000B800((uint64_t)v9, (uint64_t)&v15[*(int *)(v13 + 24)], (uint64_t *)&unk_10015CDE0);
    sub_1001091E0();
    LOBYTE(v25) = 2;
    sub_1000A3564(&qword_1001596F8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v18 = (uint64_t)v20;
    sub_10010AB60();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v23);
    sub_10000B800(v18, (uint64_t)&v15[*(int *)(v13 + 28)], (uint64_t *)&unk_100159D40);
    sub_1000A3610((uint64_t)v15, v21);
    sub_10000B7B0((uint64_t)v24);
    sub_1000A3674((uint64_t)v15);
  }
}

uint64_t sub_1000A0A50()
{
  uint64_t v1 = 1702125924;
  if (*v0 != 1) {
    uint64_t v1 = 7107189;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1000A0A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000A43C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000A0ABC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1000A0AC8(uint64_t a1)
{
  unint64_t v2 = sub_1000A35AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A0B04(uint64_t a1)
{
  unint64_t v2 = sub_1000A35AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000A0B40(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1000A0B58(void *a1)
{
  return sub_1000A03D0(a1);
}

id sub_1000A0B70()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A2F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004BD4(&qword_10015A2F8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata);
  if (v11)
  {
    swift_retain();
    sub_100026140((uint64_t)v10);
    uint64_t v12 = _s9LinkAssetC8LinkDataVMa(0);
    uint64_t v13 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      id v15 = sub_1000A0328();
      sub_10000B800((uint64_t)v10, (uint64_t)v3, &qword_10015A2F8);
      (*v13)(v3, 0, 1, v4);
      uint64_t v16 = v11 + *(void *)(*(void *)v11 + 104);
      swift_beginAccess();
      sub_1000A3780((uint64_t)v3, v16);
      swift_endAccess();
      swift_release();
      return v15;
    }
    sub_1000248D8((uint64_t)v10, (uint64_t)v8, &qword_10015A2F8);
    sub_10000B800((uint64_t)v8, (uint64_t)v3, &qword_10015A2F8);
    (*v13)(v3, 0, 1, v4);
    uint64_t v14 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_1000A3780((uint64_t)v3, v14);
    swift_endAccess();
    swift_release();
    sub_10000B9CC((uint64_t)v10, &qword_10015A2F8);
  }
  return 0;
}

uint64_t sub_1000A0E28(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v85 = a4;
  uint64_t v7 = sub_1001094F0();
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v77);
  uint64_t v79 = (_OWORD *)((char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1001091E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v84 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004BD4(&qword_10015A2E8);
  __chkstk_darwin(v13);
  id v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s9LinkAssetC8LinkDataVMa(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1) {
    id v19 = a1;
  }
  else {
    id v19 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  }
  sub_1000248D8(a2, (uint64_t)v18 + *(int *)(v16 + 24), (uint64_t *)&unk_10015CDE0);
  uint64_t v20 = (char *)v18 + *(int *)(v16 + 28);
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v76 = v11 + 16;
  v75(v20, a3, v10);
  uint64_t v82 = v11;
  uint64_t v83 = v10;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  void v18[2] = 1;
  id v21 = a1;
  id v22 = [v19 dataRepresentation];
  uint64_t v23 = sub_100109250();
  uint64_t v25 = v24;

  *uint64_t v18 = v23;
  v18[1] = v25;
  sub_1000A3610((uint64_t)v18, (uint64_t)v15);
  swift_storeEnumTagMultiPayload();
  sub_100004BD4(&qword_10015DB28);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v26 + *(void *)(*(void *)v26 + 104);
  uint64_t v28 = sub_100004BD4(&qword_10015A2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  *(_OWORD *)(v26 + *(void *)(*(void *)v26 + 112)) = xmmword_100121E30;
  sub_10000B800((uint64_t)v15, v26 + *(void *)(*(void *)v26 + 120), &qword_10015A2E8);
  *(void *)&v85[OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata] = v26;
  swift_release();
  if (sub_100109050())
  {
    uint64_t v74 = v18;
    if (qword_100158A68 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_10016DEA0;
    unint64_t v30 = (void *)qword_10016DEA8;
    uint64_t v31 = v83;
    if (a1)
    {
      id v32 = [v21 title];
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = sub_100109D30();
        a1 = v35;
      }
      else
      {
        uint64_t v34 = 0;
        a1 = 0;
      }
    }
    else
    {
      uint64_t v34 = 0;
    }
    uint64_t v37 = sub_100109080();
    uint64_t v38 = v84;
    sub_10004FF80(v34, (uint64_t)a1, v37, v39, v29, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v40 = [self defaultManager];
    sub_1001090F0(v41);
    unint64_t v43 = v42;
    sub_1001090F0(v44);
    uint64_t v46 = v45;
    v87[0] = 0;
    unsigned int v47 = [v40 copyItemAtURL:v43 toURL:v45 error:v87];

    if (v47)
    {
      id v48 = v87[0];
      sub_10005A630();
      uint64_t v49 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
      uint64_t v50 = (uint64_t)v79;
      uint64_t v51 = (char *)v79 + *(int *)(v49 + 48);
      *uint64_t v79 = xmmword_100125AF0;
      v75(v51, (uint64_t)v38, v31);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = v78;
      sub_1001094E0();
      uint64_t v53 = sub_100109470();
      uint64_t v55 = v54;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v81);
      type metadata accessor for AssetAttachment(0);
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = 0;
      sub_10007116C(v50, v56 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType);
      char v57 = (uint64_t *)(v56 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
      *char v57 = v53;
      v57[1] = v55;
      uint64_t v58 = &v85[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
      swift_beginAccess();
      sub_100109F10();
      if (*(void *)((*(void *)v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v58 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_100109F70();
      sub_100109FA0();
      sub_100109F50();
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v38, v31);
    }
    else
    {
      id v59 = v87[0];
      sub_100108FC0();

      swift_willThrow();
      if (qword_100158B98 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_100109960();
      sub_100007CB8(v60, (uint64_t)qword_10015D9A0);
      unint64_t v61 = v85;
      swift_errorRetain();
      uint64_t v62 = v61;
      swift_errorRetain();
      uint64_t v63 = sub_100109940();
      os_log_type_t v64 = sub_10010A2E0();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = (void *)swift_slowAlloc();
        uint64_t v85 = (char *)swift_slowAlloc();
        v87[0] = v85;
        *(_DWORD *)uint64_t v65 = 138412802;
        uint64_t v86 = (uint64_t)v62;
        unint64_t v67 = v62;
        sub_10010A730();
        *uint64_t v66 = v62;

        *(_WORD *)(v65 + 12) = 2080;
        if (qword_100158BA0 != -1) {
          swift_once();
        }
        sub_100007CB8(v81, (uint64_t)qword_10015D9B8);
        sub_1000A3564((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v68 = sub_10010AC60();
        uint64_t v86 = sub_1000C50D4(v68, v69, (uint64_t *)v87);
        sub_10010A730();
        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 22) = 2080;
        swift_getErrorValue();
        uint64_t v70 = sub_10010AD50();
        uint64_t v86 = sub_1000C50D4(v70, v71, (uint64_t *)v87);
        sub_10010A730();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "%@ %s Error copying file: %s", (uint8_t *)v65, 0x20u);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v83);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v31);
      }
    }
    uint64_t v36 = (uint64_t)v74;
  }
  else
  {
    uint64_t v36 = (uint64_t)v18;
  }
  return sub_1000A3674(v36);
}

uint64_t sub_1000A1860()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A2F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004BD4(&qword_10015A2F8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata);
  if (!v11) {
    return 0;
  }
  swift_retain();
  sub_100026140((uint64_t)v10);
  uint64_t v12 = _s9LinkAssetC8LinkDataVMa(0);
  uint64_t v13 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
  {
    sub_1000248D8((uint64_t)v10, (uint64_t)v8, &qword_10015A2F8);
    sub_10000B800((uint64_t)v8, (uint64_t)v3, &qword_10015A2F8);
    (*v13)(v3, 0, 1, v4);
    uint64_t v14 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_1000A3780((uint64_t)v3, v14);
    swift_endAccess();
    swift_release();
    sub_10000B9CC((uint64_t)v10, &qword_10015A2F8);
  }
  else
  {
    id v16 = sub_1000A0328();
    sub_10000B800((uint64_t)v10, (uint64_t)v3, &qword_10015A2F8);
    (*v13)(v3, 0, 1, v4);
    uint64_t v17 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_1000A3780((uint64_t)v3, v17);
    swift_endAccess();
    swift_release();
    if (v16)
    {
      id v18 = [v16 title];
      if (v18)
      {
        id v19 = v18;
        uint64_t v15 = sub_100109D30();

        return v15;
      }
    }
  }
  return 0;
}

void sub_1000A1B68(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v8 = sub_1001091E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v28 = a1;
    a4(a1);
    uint64_t v12 = v28;
  }
  else
  {
    if (qword_100158B98 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100109960();
    sub_100007CB8(v13, (uint64_t)qword_10015D9A0);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_100109940();
    int v15 = sub_10010A2D0();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      int v26 = v15;
      os_log_t v27 = v14;
      uint64_t v28 = a4;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v30 = v25;
      *(_DWORD *)uint64_t v16 = 136315394;
      if (!a2)
      {
        sub_100088600();
        swift_allocError();
        *uint64_t v17 = 0;
      }
      v24[1] = v16 + 4;
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v18 = sub_10010AD50();
      unint64_t v20 = v19;
      swift_errorRelease();
      uint64_t v29 = sub_1000C50D4(v18, v20, &v30);
      sub_10010A730();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v21 = sub_100109090();
      uint64_t v29 = sub_1000C50D4(v21, v22, &v30);
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      os_log_t v23 = v27;
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v26, "Failed to fetch LPLinkMetadata %s for URL %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v28(0);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

      a4(0);
    }
  }
}

void sub_1000A1F1C()
{
  uint64_t v1 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v2)
  {
    uint64_t v3 = v0;
    id v4 = v2;
    id v5 = sub_1000A0B70();
    if (v5)
    {
      uint64_t v6 = v5;
      char v7 = sub_10009F91C();

      NSString v8 = 0;
      switch(v7)
      {
        case 6:
          break;
        default:
          NSString v8 = sub_100109CF0();
          swift_bridgeObjectRelease();
          break;
      }
    }
    else
    {
      NSString v8 = 0;
    }
    [v4 setContentType:v8];

    uint64_t v9 = *(void **)(v3 + v1);
    if (v9)
    {
      [v9 setIsUploadedToCloud:0];
    }
  }
}

uint64_t sub_1000A20A8()
{
  return swift_release();
}

id sub_1000A20B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9LinkAssetCMa(0);
  [super dealloc];
}

uint64_t sub_1000A2100()
{
  return _s9LinkAssetCMa(0);
}

uint64_t _s9LinkAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015D9F8);
}

uint64_t sub_1000A2128()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_1000A2174(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100006F28(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = (void *)a2[2];
    if (v9 != (void *)1) {
      id v10 = v9;
    }
    a1[2] = (uint64_t)v9;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_100109460();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = *(int *)(a3 + 28);
    unint64_t v19 = (char *)a1 + v18;
    unint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1001091E0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100004BD4((uint64_t *)&unk_100159D40);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1000A23F4(uint64_t *a1, uint64_t a2)
{
  sub_100007084(*a1, a1[1]);
  id v4 = (void *)a1[2];
  if (v4 != (void *)1) {

  }
  int v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_100109460();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  unint64_t v8 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_1001091E0();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t *sub_1000A2594(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100006F28(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  unint64_t v8 = (void *)a2[2];
  if (v8 != (void *)1) {
    id v9 = v8;
  }
  a1[2] = (uint64_t)v8;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100109460();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1001091E0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t *sub_1000A27C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100006F28(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100007084(v8, v9);
  uint64_t v10 = a1 + 2;
  uint64_t v11 = (void *)a1[2];
  uint64_t v12 = (void *)a2[2];
  if (v11 == (void *)1)
  {
    if (v12 != (void *)1)
    {
      *uint64_t v10 = v12;
      id v13 = v12;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v12 == (void *)1)
  {
    sub_10000B9CC((uint64_t)(a1 + 2), &qword_10015DA08);
    uint64_t v12 = (void *)a2[2];
LABEL_6:
    *uint64_t v10 = v12;
    goto LABEL_8;
  }
  *uint64_t v10 = v12;
  id v14 = v12;

LABEL_8:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100109460();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_13:
    uint64_t v23 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_14:
  uint64_t v24 = *(int *)(a3 + 28);
  uint64_t v25 = (char *)a1 + v24;
  int v26 = (char *)a2 + v24;
  uint64_t v27 = sub_1001091E0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_19;
  }
  if (v31)
  {
LABEL_19:
    uint64_t v32 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t sub_1000A2B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 28);
  id v13 = (void *)(a1 + v12);
  id v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1001091E0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t *sub_1000A2D2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100007084(v6, v7);
  uint64_t v9 = a1 + 2;
  uint64_t v8 = (void *)a1[2];
  uint64_t v10 = *(void *)(a2 + 16);
  if (v8 == (void *)1) {
    goto LABEL_4;
  }
  if (v10 == 1)
  {
    sub_10000B9CC((uint64_t)(a1 + 2), &qword_10015DA08);
    uint64_t v10 = 1;
LABEL_4:
    uint64_t *v9 = v10;
    goto LABEL_6;
  }
  uint64_t *v9 = v10;

LABEL_6:
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  id v13 = (char *)(a2 + v11);
  uint64_t v14 = sub_100109460();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_11:
    uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_12:
  uint64_t v20 = *(int *)(a3 + 28);
  int v21 = (char *)a1 + v20;
  int v22 = (char *)(a2 + v20);
  uint64_t v23 = sub_1001091E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_17;
  }
  if (v27)
  {
LABEL_17:
    uint64_t v28 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_1000A3064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A3078);
}

uint64_t sub_1000A3078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_100159D40);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000A31B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A31C8);
}

uint64_t sub_1000A31C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 16) = (a2 + 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_100159D40);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s9LinkAssetC8LinkDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015DA68);
}

void sub_1000A3320()
{
  sub_1000A3434(319, (unint64_t *)&qword_10015A7C0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_1000A3434(319, (unint64_t *)&qword_100159658, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000A3434(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10010A700();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000A3488()
{
  return swift_retain();
}

uint64_t sub_1000A3498(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000A34B0()
{
  return sub_1000A1860();
}

uint64_t sub_1000A34D4()
{
  return sub_1000A3564(&qword_10015A300, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa);
}

uint64_t sub_1000A351C()
{
  return sub_1000A3564(&qword_10015DAA8, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa);
}

uint64_t sub_1000A3564(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A35AC()
{
  unint64_t result = qword_10015DAF0;
  if (!qword_10015DAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DAF0);
  }
  return result;
}

void sub_1000A3600(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_1000A3610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9LinkAssetC8LinkDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A3674(uint64_t a1)
{
  uint64_t v2 = _s9LinkAssetC8LinkDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000A36D0()
{
  unint64_t result = qword_10015DB10;
  if (!qword_10015DB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB10);
  }
  return result;
}

unint64_t sub_1000A3724()
{
  unint64_t result = qword_10015DB18;
  if (!qword_10015DB18)
  {
    sub_100012F08(&qword_10015DB00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB18);
  }
  return result;
}

uint64_t sub_1000A3780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1000A37E8(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_1000A37F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001091E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [objc_allocWithZone((Class)LPMetadataProvider) init];
  sub_1001090F0(v10);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v15 = (void *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = a2;
  v15[1] = a3;
  _OWORD aBlock[4] = sub_1000A40F0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10009F890;
  void aBlock[3] = &unk_1001442D8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v9 startFetchingMetadataForURL:v12 completionHandler:v16];
  _Block_release(v16);
}

id sub_1000A39FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v31 = sub_1001091E0();
  uint64_t v4 = *(void *)(v31 - 8);
  uint64_t v30 = *(void *)(v4 + 64);
  __chkstk_darwin(v31);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v6;
  uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v29 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = sub_1001094F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - v14;
  sub_1001094E0();
  uint64_t v16 = objc_allocWithZone((Class)_s9LinkAssetCMa(0));
  *(void *)&v16[OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_metadata] = 0;
  v16[OBJC_IVAR____TtCC21JournalShareExtension10Journaling9LinkAsset_contentType] = 6;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  id v17 = sub_10003B8A4((uint64_t)v13, 10, a1);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  int v18 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000248D8(v33, (uint64_t)v18, (uint64_t *)&unk_10015CDE0);
  uint64_t v19 = v6;
  uint64_t v21 = v31;
  uint64_t v20 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v19, v32, v31);
  unint64_t v22 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v23 = (v8 + *(unsigned __int8 *)(v4 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v24 = (v30 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  sub_10000B800((uint64_t)v18, v25 + v22, (uint64_t *)&unk_10015CDE0);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v25 + v23, v28, v21);
  *(void *)(v25 + v24) = v17;
  id v26 = v17;
  sub_1000A37F8(v20, (uint64_t)sub_1000A3F44, v25);
  swift_release();

  sub_10000B9CC(v33, (uint64_t *)&unk_10015CDE0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v21);
  return v26;
}

uint64_t sub_1000A3D74()
{
  uint64_t v1 = *(void *)(sub_100004BD4((uint64_t *)&unk_10015CDE0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v4 = sub_1001091E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_100109460();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  uint64_t v10 = (v3 + v13 + v6) & ~v6;
  unint64_t v11 = (v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return _swift_deallocObject(v0, v11 + 8, v2 | v6 | 7);
}

uint64_t sub_1000A3F44(void *a1)
{
  uint64_t v3 = *(void *)(sub_100004BD4((uint64_t *)&unk_10015CDE0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1001091E0() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(char **)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000A0E28(a1, v1 + v4, v1 + v7, v8);
}

uint64_t sub_1000A4048()
{
  uint64_t v1 = sub_1001091E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1000A40F0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1001091E0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = *(void (**)(void *))(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1000A1B68(a1, a2, v2 + v6, v7);
}

uint64_t sub_1000A41A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A41B0()
{
  return swift_release();
}

unsigned char *_s9LinkAssetC8LinkDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A4284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9LinkAssetC8LinkDataV10CodingKeysOMa()
{
  return &_s9LinkAssetC8LinkDataV10CodingKeysON;
}

unint64_t sub_1000A42C0()
{
  unint64_t result = qword_10015DB30;
  if (!qword_10015DB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB30);
  }
  return result;
}

unint64_t sub_1000A4318()
{
  unint64_t result = qword_10015DB38;
  if (!qword_10015DB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB38);
  }
  return result;
}

unint64_t sub_1000A4370()
{
  unint64_t result = qword_10015DB40;
  if (!qword_10015DB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB40);
  }
  return result;
}

uint64_t sub_1000A43C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000A44EC(char a1)
{
  BOOL v2 = v1;
  int v51 = a1 & 1;
  uint64_t v3 = sub_1001094F0();
  uint64_t v57 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = v2;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &unk_100121000;
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = v2;
    if (sub_100007CF0(ObjectType, v8))
    {
      id v60 = [self defaultCenter];
      id v59 = sub_100109CF0();
      sub_100004BD4(&qword_100159FF8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100121F30;
      id v58 = v12;
      strcpy((char *)v61, "downloadIDKey");
      HIWORD(v61[1]) = -4864;
      sub_10010A860();
      uint64_t v14 = sub_100109470();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v14;
      *(void *)(inited + 80) = v15;
      v61[0] = 0xD000000000000013;
      v61[1] = 0x80000001001102B0;
      sub_10010A860();
      *(void *)(inited + 168) = &_s16DownloadPriorityON;
      *(unsigned char *)(inited + 144) = v51;
      v61[0] = 0x64616F6C6E776F64;
      v61[1] = 0xEF79654B65707954;
      sub_10010A860();
      *(void *)(inited + 240) = &_s12DownloadTypeON;
      *(unsigned char *)(inited + 216) = 1;
      sub_10007B4AC(inited);
      Class isa = sub_100109B60().super.isa;
      swift_bridgeObjectRelease();
      id v18 = v59;
      id v17 = v60;
      [v60 postNotificationName:v59 object:0 userInfo:isa];

      uint64_t v10 = (_OWORD *)&unk_100121000;
    }
    else
    {
    }
  }
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentIdsMissingFile];
  uint64_t v20 = *(void *)(v19 + 56);
  uint64_t v42 = v19 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v43 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v53 = v57 + 16;
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  uint64_t v52 = v57 + 48;
  id v48 = (uint64_t (**)(char *, uint64_t))(v57 + 8);
  uint64_t v49 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v56 = v19;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  unint64_t v47 = 0x8000000100110290;
  long long v46 = v10[243];
  unint64_t v44 = (char *)&type metadata for Any + 8;
  unint64_t v45 = 0x80000001001102B0;
  if (!v23) {
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v25 << 6);
  uint64_t v28 = v55;
  while (1)
  {
    uint64_t v32 = v57;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v33(v28, *(void *)(v56 + 48) + *(void *)(v57 + 72) * v27, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v3) == 1) {
      return swift_release();
    }
    uint64_t v34 = *v49;
    id v60 = (id)v25;
    uint64_t v35 = v50;
    v34(v50, v28, v3);
    id v59 = [self defaultCenter];
    id v58 = sub_100109CF0();
    sub_100004BD4(&qword_100159FF8);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = v46;
    strcpy((char *)v61, "downloadIDKey");
    HIWORD(v61[1]) = -4864;
    sub_10010A860();
    *(void *)(v36 + 96) = v3;
    uint64_t v37 = sub_1000A4EE0((uint64_t *)(v36 + 72));
    v33((char *)v37, (unint64_t)v35, v3);
    v61[0] = 0xD000000000000013;
    v61[1] = v45;
    sub_10010A860();
    *(void *)(v36 + 168) = &_s16DownloadPriorityON;
    *(unsigned char *)(v36 + 144) = v51;
    v61[0] = 0x64616F6C6E776F64;
    v61[1] = 0xEF79654B65707954;
    sub_10010A860();
    *(void *)(v36 + 240) = &_s12DownloadTypeON;
    *(unsigned char *)(v36 + 216) = 0;
    sub_10007B4AC(v36);
    Class v38 = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    id v40 = v58;
    id v39 = v59;
    [v59 postNotificationName:v58 object:0 userInfo:v38];

    uint64_t v41 = v35;
    int64_t v25 = (int64_t)v60;
    uint64_t result = (*v48)(v41, v3);
    if (v23) {
      goto LABEL_14;
    }
LABEL_15:
    int64_t v29 = v25 + 1;
    uint64_t v28 = v55;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v29 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v29);
    ++v25;
    if (!v30)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v43) {
        goto LABEL_32;
      }
      unint64_t v30 = *(void *)(v42 + 8 * v25);
      if (!v30)
      {
        int64_t v25 = v29 + 2;
        if (v29 + 2 >= v43) {
          goto LABEL_32;
        }
        unint64_t v30 = *(void *)(v42 + 8 * v25);
        if (!v30) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v23 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v25 << 6);
  }
  int64_t v31 = v29 + 3;
  if (v31 >= v43)
  {
LABEL_32:
    (*v54)(v55, 1, 1, v3);
    return swift_release();
  }
  unint64_t v30 = *(void *)(v42 + 8 * v31);
  if (v30)
  {
    int64_t v25 = v31;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v25 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v25);
    ++v31;
    if (v30) {
      goto LABEL_28;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000A4C80(uint64_t a1)
{
  return sub_1000A4D28(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001ALL, 0x8000000100111C00, &qword_10016DFC8);
}

uint64_t sub_1000A4CB8(uint64_t a1)
{
  return sub_1000A4D28(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD00000000000001ELL, 0x8000000100111BE0, &qword_10016DFD0);
}

uint64_t sub_1000A4CF0(uint64_t a1)
{
  return sub_1000A4D28(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001BLL, 0x8000000100111BC0, &qword_10016DFD8);
}

uint64_t sub_1000A4D28(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_10010A3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10010A3A0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_100109AC0();
  __chkstk_darwin(v12 - 8);
  sub_10008D298();
  a2();
  sub_10010A390();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = sub_10010A430();
  *a5 = result;
  return result;
}

uint64_t *sub_1000A4EE0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

ValueMetadata *_s12DownloadTypeOMa()
{
  return &_s12DownloadTypeON;
}

unsigned char *_s12DownloadTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A5028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16DownloadPriorityOMa()
{
  return &_s16DownloadPriorityON;
}

unint64_t sub_1000A5064()
{
  unint64_t result = qword_10015DB48;
  if (!qword_10015DB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB48);
  }
  return result;
}

unint64_t sub_1000A50BC()
{
  unint64_t result = qword_10015DB50;
  if (!qword_10015DB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DB50);
  }
  return result;
}

uint64_t sub_1000A5118()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015DB58);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015DB58);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_1000A51E0(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000A5314(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015DCA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_1000A6340();
  sub_10010AE60();
  LOBYTE(v14) = 0;
  sub_10010ABC0();
  if (!v2)
  {
    uint64_t v9 = _s10PhotoAssetC9PhotoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_100109460();
    sub_1000A62F8(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v14) = 2;
    sub_10010ABC0();
    LOBYTE(v14) = 3;
    sub_10010ABE0();
    LOBYTE(v14) = 4;
    sub_10010ABE0();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_1000A62F8(&qword_10015BE98, type metadata accessor for CGSize);
    sub_10010AC00();
    LOBYTE(v14) = 6;
    sub_10010ABC0();
    LOBYTE(v14) = 7;
    sub_10010ABC0();
    LOBYTE(v14) = 8;
    sub_10010ABC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000A5680@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004BD4(&qword_10015DC98);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10PhotoAssetC9PhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_10000B718(a1, a1[3]);
  sub_1000A6340();
  unint64_t v44 = v9;
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_10010AB20();
  v11[1] = v17;
  sub_100109460();
  LOBYTE(v46) = 1;
  sub_1000A62F8(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  id v18 = (int *)v45;
  sub_10000B800(v13, (uint64_t)v11 + *(int *)(v45 + 20), (uint64_t *)&unk_10015CDE0);
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_10010AB20();
  uint64_t v20 = (uint64_t *)((char *)v11 + v18[6]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_10010AB40();
  unint64_t v23 = (char *)v11 + v18[7];
  *(void *)unint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_10010AB40();
  unint64_t v26 = (char *)v11 + v18[8];
  *(void *)unint64_t v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_1000A62F8(&qword_10015BE88, type metadata accessor for CGSize);
  sub_10010AB60();
  char v28 = v47;
  int64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)int64_t v29 = v46;
  unsigned char v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_10010AB20();
  int64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  uint64_t *v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_10010AB20();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = sub_10010AB20();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  id v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *id v40 = v37;
  v40[1] = v39;
  sub_1000A6394((uint64_t)v11, v15);
  sub_10000B7B0(v12);
  return sub_1000A63F8((uint64_t)v11);
}

unint64_t sub_1000A5CA4()
{
  return sub_1000A51E0(*v0);
}

uint64_t sub_1000A5CAC(uint64_t a1)
{
  unint64_t v2 = sub_1000A6340();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000A5CE8(uint64_t a1)
{
  unint64_t v2 = sub_1000A6340();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A5D24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A5680(a1, a2);
}

uint64_t sub_1000A5D3C(void *a1)
{
  return sub_1000A5314(a1);
}

uint64_t sub_1000A5D54()
{
  uint64_t v1 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015A2D8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_100027AE0((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_10000B9CC((uint64_t)v7, &qword_10015A2D8);
    return 0;
  }
  else
  {
    sub_1000A6394((uint64_t)v7, (uint64_t)v4);
    sub_10000B9CC((uint64_t)v7, &qword_10015A2D8);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_1000A63F8((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_1000A5EF0()
{
  return swift_release();
}

id sub_1000A5F00()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10PhotoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000A5F48()
{
  return _s10PhotoAssetCMa(0);
}

uint64_t _s10PhotoAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015DB98);
}

uint64_t sub_1000A5F70()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000A5FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A5FC8);
}

uint64_t sub_1000A5FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000A6088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A609C);
}

uint64_t sub_1000A609C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10PhotoAssetC9PhotoDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015DC00);
}

void sub_1000A6168()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000A621C()
{
  return swift_retain();
}

uint64_t sub_1000A622C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000A6244()
{
  return sub_1000A5D54();
}

uint64_t sub_1000A6268()
{
  return sub_1000A62F8(&qword_10015A2E0, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_1000A62B0()
{
  return sub_1000A62F8(&qword_10015DC58, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_1000A62F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A6340()
{
  unint64_t result = qword_10015DCA0;
  if (!qword_10015DCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DCA0);
  }
  return result;
}

uint64_t sub_1000A6394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A63F8(uint64_t a1)
{
  uint64_t v2 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1000A6454(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, char *a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v167 = a5;
  uint64_t v168 = a8;
  uint64_t v163 = a7;
  uint64_t v175 = a6;
  uint64_t v161 = a4;
  uint64_t v185 = a3;
  uint64_t v154 = a18;
  sub_10000B800(a18, (uint64_t)v181, &qword_10015DCB0);
  double v157 = *(double *)&v181[1];
  double v158 = *(double *)v181;
  double v155 = *(double *)&v181[3];
  double v156 = *(double *)&v181[2];
  uint64_t v153 = a17;
  sub_10000B800(a17, (uint64_t)v180, &qword_10015DCB0);
  CGFloat v20 = *(double *)v180;
  CGFloat v21 = *(double *)&v180[1];
  CGFloat v22 = *(double *)&v180[2];
  CGFloat v23 = *(double *)&v180[3];
  uint64_t v152 = a16;
  sub_10000B800(a16, (uint64_t)v179, &qword_10015DCB0);
  CGFloat x = *(double *)v179;
  CGFloat y = *(double *)&v179[1];
  CGFloat width = *(double *)&v179[2];
  CGFloat height = *(double *)&v179[3];
  uint64_t v162 = sub_100004BD4(&qword_10015A2C8);
  __chkstk_darwin(v162);
  uint64_t v164 = (uint64_t)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v29 - 8);
  uint64_t v171 = (uint64_t)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = _s10PhotoAssetC9PhotoDataVMa(0);
  __chkstk_darwin(v160);
  id v159 = (uint64_t *)((char *)&v144 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v32 - 8);
  uint64_t v166 = (uint64_t)&v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1001091E0();
  uint64_t v172 = *(void *)(v174 - 8);
  uint64_t v34 = __chkstk_darwin(v174);
  id v151 = (char *)&v144 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  id v170 = (char *)&v144 - v36;
  uint64_t v37 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v37);
  id v173 = (uint64_t *)((char *)&v144 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_1001094F0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v144 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v144 - v44;
  sub_1001094E0();
  *(void *)((char *)objc_allocWithZone((Class)_s10PhotoAssetCMa(0))
            + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata) = 0;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v45, v39);
  long long v46 = (char *)sub_10003B8A4((uint64_t)v43, 0, a1);
  char v47 = *(NSObject **)(v40 + 8);
  ((void (*)(char *, uint64_t))v47)(v45, v39);
  id v176 = v46;
  id v169 = a2;
  uint64_t v149 = (void *)v37;
  uint64_t v150 = v39;
  uint64_t v147 = v45;
  uint64_t v148 = v40 + 8;
  id v165 = v47;
  if (a2)
  {
    sub_100004BD4(qword_100159E08);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1001235F0;
    *id v173 = a2;
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v46;
    id v50 = a2;
    id v145 = v49;
    id v146 = v50;
    sub_1001094E0();
    uint64_t v51 = sub_100109470();
    uint64_t v53 = v52;
    ((void (*)(char *, uint64_t))v165)(v45, v39);
    type metadata accessor for AssetAttachment(0);
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    uint64_t v55 = v173;
    sub_1000A7438((uint64_t)v173, v54 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    uint64_t v56 = (uint64_t *)(v54 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
    *uint64_t v56 = v51;
    v56[1] = v53;
    *(void *)(v48 + 32) = v54;
    v178[0] = v48;
    sub_100109F50();
    uint64_t v57 = v178[0];
    id v58 = v145;
    id v59 = (uint64_t *)&v145[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    *id v59 = v57;
    uint64_t v60 = v185;

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v61 = v46;
    uint64_t v55 = v173;
    uint64_t v60 = v185;
  }
  uint64_t v62 = v166;
  sub_1000248D8(v60, v166, (uint64_t *)&unk_100159D40);
  uint64_t v63 = v172;
  uint64_t v64 = v174;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v62, 1, v174) == 1)
  {
    sub_10000B9CC(v62, (uint64_t *)&unk_100159D40);
    uint64_t v65 = v176;
  }
  else
  {
    uint64_t v66 = v170;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v170, v62, v64);
    id v67 = [self defaultManager];
    uint64_t v68 = v66;
    sub_100109160();
    NSString v69 = sub_100109CF0();
    swift_bridgeObjectRelease();
    unsigned int v70 = [v67 fileExistsAtPath:v69];

    uint64_t v71 = v63;
    uint64_t v65 = v176;
    if (v70)
    {
      sub_100004BD4(qword_100159E08);
      uint64_t v72 = swift_allocObject();
      uint64_t v73 = v64;
      uint64_t v74 = (uint64_t)v55;
      uint64_t v75 = v72;
      *(_OWORD *)(v72 + 16) = xmmword_1001235F0;
      (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v74, v68, v73);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v76 = v65;
      uint64_t v77 = v147;
      sub_1001094E0();
      uint64_t v78 = sub_100109470();
      uint64_t v80 = v79;
      ((void (*)(char *, uint64_t))v165)(v77, v150);
      type metadata accessor for AssetAttachment(0);
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = 0;
      sub_1000A7438(v74, v81 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
      uint64_t v82 = (uint64_t *)(v81 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
      *uint64_t v82 = v78;
      v82[1] = v80;
      *(void *)(v75 + 32) = v81;
      v178[0] = v75;
      sub_100109F50();
      uint64_t v83 = v178[0];
      uint64_t v84 = (uint64_t *)&v76[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
      swift_beginAccess();
      *uint64_t v84 = v83;

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v170, v174);
      uint64_t v60 = v185;
    }
    else
    {
      if (qword_100158BC0 != -1) {
        swift_once();
      }
      uint64_t v85 = sub_100109960();
      sub_100007CB8(v85, (uint64_t)qword_10015DB58);
      uint64_t v86 = v172;
      uint64_t v87 = v151;
      uint64_t v88 = v170;
      uint64_t v89 = v174;
      (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v151, v170, v174);
      uint64_t v90 = v65;
      uint64_t v91 = sub_100109940();
      os_log_type_t v92 = sub_10010A2D0();
      LODWORD(v173) = v92;
      BOOL v93 = os_log_type_enabled(v91, v92);
      uint64_t v60 = v185;
      if (v93)
      {
        uint64_t v94 = swift_slowAlloc();
        unint64_t v95 = (void *)swift_slowAlloc();
        uint64_t v149 = v95;
        uint64_t v166 = swift_slowAlloc();
        v178[0] = v166;
        *(_DWORD *)uint64_t v94 = 138412802;
        id v165 = v91;
        uint64_t v177 = (uint64_t)v90;
        unint64_t v96 = v90;
        sub_10010A730();
        *unint64_t v95 = v90;

        *(_WORD *)(v94 + 12) = 2080;
        sub_1000A62F8((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v97 = sub_10010AC60();
        uint64_t v177 = sub_1000C50D4(v97, v98, v178);
        uint64_t v65 = v176;
        sub_10010A730();

        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 22) = 2080;
        sub_1000A62F8((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
        id v99 = v151;
        uint64_t v100 = v174;
        uint64_t v101 = sub_10010AC60();
        uint64_t v177 = sub_1000C50D4(v101, v102, v178);
        sub_10010A730();
        swift_bridgeObjectRelease();
        uint64_t v103 = *(void (**)(char *, uint64_t))(v172 + 8);
        v103(v99, v100);
        os_log_t v104 = v165;
        _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v173, "%@[%s] failed init imageFile does not exist: %s", (uint8_t *)v94, 0x20u);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v103(v170, v100);
      }
      else
      {

        uint64_t v105 = *(void (**)(char *, uint64_t))(v86 + 8);
        v105(v87, v89);

        v105(v88, v89);
      }
    }
  }
  id v106 = &v65[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
  swift_beginAccess();
  unint64_t v107 = *(void *)v106;
  if (v107 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v141 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v141) {
      goto LABEL_15;
    }
LABEL_23:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000A73E4();
    swift_allocError();
    *id v142 = 0;
    swift_willThrow();

    sub_10000B9CC(v175, (uint64_t *)&unk_10015CDE0);
    sub_10000B9CC(v60, (uint64_t *)&unk_100159D40);
    return v65;
  }
  if (!*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_15:
  sub_1000248D8(v175, v171, (uint64_t *)&unk_10015CDE0);
  sub_10000B800(v152, (uint64_t)v184, &qword_10015DCB0);
  if (v184[32] == 1)
  {
    CGFloat x = CGRectZero.origin.x;
    CGFloat y = CGRectZero.origin.y;
    CGFloat width = CGRectZero.size.width;
    CGFloat height = CGRectZero.size.height;
  }
  v186.origin.CGFloat x = x;
  v186.origin.CGFloat y = y;
  v186.size.CGFloat width = width;
  v186.size.CGFloat height = height;
  uint64_t v108 = NSStringFromCGRect(v186);
  uint64_t v109 = sub_100109D30();
  id v173 = v110;
  uint64_t v174 = v109;

  sub_10000B800(v153, (uint64_t)v183, &qword_10015DCB0);
  if (v183[32] == 1)
  {
    CGFloat v20 = CGRectZero.origin.x;
    CGFloat v21 = CGRectZero.origin.y;
    CGFloat v22 = CGRectZero.size.width;
    CGFloat v23 = CGRectZero.size.height;
  }
  LODWORD(v172) = a15;
  id v170 = a14;
  uint64_t v166 = a13;
  LODWORD(v165) = a12;
  uint64_t v153 = a11;
  LODWORD(v152) = a10;
  v187.origin.CGFloat x = v20;
  v187.origin.CGFloat y = v21;
  v187.size.CGFloat width = v22;
  v187.size.CGFloat height = v23;
  uint64_t v111 = NSStringFromCGRect(v187);
  uint64_t v112 = sub_100109D30();
  uint64_t v114 = v113;

  sub_10000B800(v154, (uint64_t)v182, &qword_10015DCB0);
  CGFloat v116 = v157;
  CGFloat v115 = v158;
  CGFloat v118 = v155;
  CGFloat v117 = v156;
  if (v182[32] == 1)
  {
    CGFloat v115 = CGRectZero.origin.x;
    CGFloat v116 = CGRectZero.origin.y;
    CGFloat v117 = CGRectZero.size.width;
    CGFloat v118 = CGRectZero.size.height;
  }
  uint64_t v119 = NSStringFromCGRect(*(CGRect *)&v115);
  uint64_t v120 = sub_100109D30();
  uint64_t v122 = v121;

  sub_10000B9CC(v175, (uint64_t *)&unk_10015CDE0);
  sub_10000B9CC(v185, (uint64_t *)&unk_100159D40);
  uint64_t v123 = (int *)v160;
  id v124 = v159;
  uint64_t v125 = v167;
  *id v159 = v161;
  v124[1] = v125;
  sub_10000B800(v171, (uint64_t)v124 + v123[5], (uint64_t *)&unk_10015CDE0);
  id v126 = (void *)((char *)v124 + v123[6]);
  uint64_t v127 = v168;
  *id v126 = v163;
  v126[1] = v127;
  uint64_t v128 = (char *)v124 + v123[7];
  *(void *)uint64_t v128 = a9;
  v128[8] = v152 & 1;
  long long v129 = (char *)v124 + v123[8];
  *(void *)long long v129 = v153;
  v129[8] = v165 & 1;
  id v130 = (char *)v124 + v123[9];
  NSURLResourceKey v131 = v170;
  *(void *)id v130 = v166;
  *((void *)v130 + 1) = v131;
  v130[16] = v172 & 1;
  uint64_t v132 = (void *)((char *)v124 + v123[10]);
  uint64_t v133 = v173;
  *uint64_t v132 = v174;
  v132[1] = (uint64_t)v133;
  id v134 = (void *)((char *)v124 + v123[11]);
  *id v134 = v112;
  v134[1] = v114;
  id v135 = (void *)((char *)v124 + v123[12]);
  *id v135 = v120;
  v135[1] = v122;
  uint64_t v136 = (uint64_t)v124;
  uint64_t v137 = v164;
  sub_1000A7438(v136, v164, _s10PhotoAssetC9PhotoDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100004BD4(&qword_10015DCB8);
  uint64_t v138 = swift_allocObject();
  uint64_t v139 = v138 + *(void *)(*(void *)v138 + 104);
  uint64_t v140 = sub_100004BD4(&qword_10015A2D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v139, 1, 1, v140);
  *(_OWORD *)(v138 + *(void *)(*(void *)v138 + 112)) = xmmword_100121E30;
  sub_10000B800(v137, v138 + *(void *)(*(void *)v138 + 120), &qword_10015A2C8);
  uint64_t v65 = v176;
  *(void *)&v176[OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata] = v138;

  swift_release();
  return v65;
}

unint64_t sub_1000A73E4()
{
  unint64_t result = qword_10015DCC0;
  if (!qword_10015DCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DCC0);
  }
  return result;
}

uint64_t sub_1000A7438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *_s10PhotoAssetC9PhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A756CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10PhotoAssetC9PhotoDataV10CodingKeysOMa()
{
  return &_s10PhotoAssetC9PhotoDataV10CodingKeysON;
}

unint64_t sub_1000A75A8()
{
  unint64_t result = qword_10015DCC8;
  if (!qword_10015DCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DCC8);
  }
  return result;
}

unint64_t sub_1000A7600()
{
  unint64_t result = qword_10015DCD0;
  if (!qword_10015DCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DCD0);
  }
  return result;
}

unint64_t sub_1000A7658()
{
  unint64_t result = qword_10015DCD8;
  if (!qword_10015DCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DCD8);
  }
  return result;
}

uint64_t sub_1000A76AC()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015DCE0);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015DCE0);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000A7774()
{
  v1[4] = v0;
  sub_100004BD4((uint64_t *)&unk_100159D40);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_1001091E0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  int v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *int v3 = v1;
  v3[1] = sub_1000A7890;
  return sub_1000F7CC4();
}

uint64_t sub_1000A7890(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A7990, 0, 0);
}

uint64_t sub_1000A7990()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (!v1)
  {
    id v2 = *(id *)(v0 + 32);
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000A8230(v3, (uint64_t)v2);

    swift_bridgeObjectRelease();
    if (v4
      || (id v5 = *(id *)(v0 + 32),
          unint64_t v6 = swift_bridgeObjectRetain(),
          uint64_t v7 = sub_1000A8230(v6, (uint64_t)v5),
          v5,
          swift_bridgeObjectRelease(),
          v7))
    {
      uint64_t v8 = *(void *)(v0 + 48);
      uint64_t v9 = *(void *)(v0 + 56);
      uint64_t v10 = *(char **)(v0 + 40);
      sub_1000C7FA4(v10);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) != 1)
      {
        uint64_t v11 = *(void *)(v0 + 32);
        (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48));
        *(unsigned char *)(v0 + 112) = *(unsigned char *)(v11 + qword_100160338);
        sub_10006C4F0();
        double v13 = v12;
        id v14 = [self mainScreen];
        [v14 scale];
        double v16 = v15;

        CGFloat v21 = (uint64_t (*)(uint64_t, double))((char *)&dword_10015C1E0 + dword_10015C1E0);
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 88) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_1000A7C30;
        uint64_t v18 = *(void *)(v0 + 64);
        return v21(v18, v13 * v16);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 40), 1, 1, *(void *)(v0 + 48));
    }
    sub_10000B9CC(*(void *)(v0 + 40), (uint64_t *)&unk_100159D40);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  CGFloat v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v1);
}

uint64_t sub_1000A7C30(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1000A7F0C;
  }
  else {
    uint64_t v4 = sub_1000A7D44;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000A7D44()
{
  switch(*(unsigned char *)(v0 + 112))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v1 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      if ((v1 & 1) == 0)
      {
        if (qword_100158BF8 != -1) {
          swift_once();
        }
        sub_1000F97C4(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 32) + qword_100160308), *(void *)(*(void *)(v0 + 32) + qword_100160308 + 8));
      }
      break;
  }
  uint64_t v2 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000A7F0C()
{
  if (qword_100158BC8 != -1) {
    swift_once();
  }
  char v1 = (void *)v0[4];
  uint64_t v2 = sub_100109960();
  sub_100007CB8(v2, (uint64_t)qword_10015DCE0);
  id v3 = v1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = sub_100109940();
  os_log_type_t v6 = sub_10010A2D0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[4];
  if (v7)
  {
    os_log_type_t type = v6;
    uint64_t v9 = swift_slowAlloc();
    double v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    v0[2] = v8;
    uint64_t v10 = v8;
    sub_10010A730();
    *double v15 = v8;

    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    double v12 = v5;
    sub_10010A730();
    v15[1] = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "%@ - error generating video preview image: %@", (uint8_t *)v9, 0x16u);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    double v12 = v8;
  }

  swift_errorRelease();
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  double v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

uint64_t type metadata accessor for VideoThumbnailCacheOperation()
{
  uint64_t result = qword_10015DD20;
  if (!qword_10015DD20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A81F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000A8228()
{
  return type metadata accessor for VideoThumbnailCacheOperation();
}

uint64_t sub_1000A8230(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004BD4(&qword_10015A000);
  __chkstk_darwin(v6 - 8);
  uint64_t v78 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100109880();
  uint64_t v8 = *(void *)(v85 - 8);
  uint64_t v9 = __chkstk_darwin(v85);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)&v64 - v13;
  __chkstk_darwin(v12);
  uint64_t v77 = (char *)&v64 - v15;
  uint64_t v80 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v16 = __chkstk_darwin(v80);
  uint64_t v90 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v93 = (uint64_t)&v64 - v18;
  uint64_t v19 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v76 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v84 = (char *)&v64 - v22;
  uint64_t v91 = sub_1001091E0();
  unint64_t v23 = *(void *)(v91 - 8);
  uint64_t v24 = __chkstk_darwin(v91);
  uint64_t v71 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v86 = (char *)&v64 - v26;
  uint64_t v27 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v87 = (id *)((char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  uint64_t v31 = (void **)((char *)&v64 - v30);
  unint64_t v95 = a1;
  if (a1 >> 62) {
    goto LABEL_43;
  }
  uint64_t v32 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v32)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v64 = v3;
    uint64_t v88 = *(void *)(a2 + qword_100160340);
    int v89 = *(unsigned __int8 *)(a2 + qword_100160340 + 8);
    os_log_type_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    uint64_t v83 = (void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v66 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v73 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v72 = (void (**)(char *, uint64_t))(v23 + 8);
    unint64_t v23 = v95 & 0xC000000000000001;
    uint64_t v3 = 4;
    id v67 = v11;
    uint64_t v75 = v14;
    uint64_t v11 = v90;
    uint64_t v79 = v27;
    uint64_t v81 = v32;
    unint64_t v94 = v95 & 0xC000000000000001;
LABEL_6:
    uint64_t v8 = v3 - 4;
    if (v23) {
      break;
    }
    a2 = *(void *)(v95 + 8 * v3);
    swift_retain();
    id v14 = (char *)(v3 - 3);
    if (!__OFADD__(v8, 1)) {
      goto LABEL_11;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_10010AA80();
    if (!v32) {
      goto LABEL_44;
    }
  }
  a2 = sub_10010A920();
  id v14 = (char *)(v3 - 3);
  if (__OFADD__(v8, 1)) {
    goto LABEL_42;
  }
LABEL_11:
  uint64_t v34 = a2 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
  sub_1000241BC(a2 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v31, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = *v31;
      swift_release();

      goto LABEL_5;
    case 2u:
      uint64_t v35 = (uint64_t)v31;
      if ((v89 & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v35 = (uint64_t)v31;
      goto LABEL_40;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v37 = v34;
      uint64_t v38 = v87;
      sub_1000241BC(v37, (uint64_t)v87, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v40 = (uint64_t)v38;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v41 = (uint64_t)v84;
          uint64_t v42 = v91;
          (*v82)(v84, 1, 1, v91);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v40 = (uint64_t)v38 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
          goto LABEL_19;
        default:
LABEL_19:
          uint64_t v43 = v93;
          sub_100024158(v40, v93);
          sub_1000241BC(v43, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v41 = (uint64_t)v84;
            uint64_t v42 = v91;
            (*v83)(v84, v11, v91);
            uint64_t v44 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v45 = v76;
            sub_1000CEC08(v76);
            uint64_t v46 = v45;
            swift_bridgeObjectRelease();
            uint64_t v42 = v91;
            if ((*v92)(v45, 1, v91) == 1)
            {
              sub_10000B9CC(v45, (uint64_t *)&unk_100159D40);
              uint64_t v44 = 1;
              uint64_t v11 = v90;
              uint64_t v41 = (uint64_t)v84;
            }
            else
            {
              char v47 = *v83;
              uint64_t v48 = v71;
              (*v83)(v71, (char *)v46, v42);
              uint64_t v49 = v84;
              v47(v84, v48, v42);
              uint64_t v41 = (uint64_t)v49;
              uint64_t v44 = 0;
              uint64_t v11 = v90;
            }
            uint64_t v27 = v79;
          }
          (*v82)((char *)v41, v44, 1, v42);
          sub_1000240FC(v93);
          break;
      }
      uint64_t v35 = (uint64_t)v31 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
      if ((*v92)(v41, 1, v42) == 1)
      {
        sub_10000B9CC(v41, (uint64_t *)&unk_100159D40);
LABEL_30:
        uint64_t v32 = v81;
        goto LABEL_31;
      }
      (*v83)(v86, (char *)v41, v42);
      sub_100109080();
      uint64_t v51 = v50;
      swift_bridgeObjectRetain();
      uint64_t v52 = v75;
      sub_1001097D0();
      uint64_t v53 = (uint64_t)v78;
      sub_100109790();
      if ((*v74)(v53, 1, v85) == 1)
      {
        sub_10000B9CC(v53, &qword_10015A000);
        swift_bridgeObjectRelease();
        (*v72)(v86, v42);
        uint64_t v11 = v90;
        uint64_t v27 = v79;
        goto LABEL_30;
      }
      uint64_t v69 = v51;
      uint64_t v54 = v77;
      uint64_t v55 = v85;
      (*v66)(v77, v53, v85);
      sub_100109840();
      int v70 = sub_100109860();
      uint64_t v68 = *v73;
      v68(v52, v55);
      uint64_t v56 = v67;
      (*v65)(v67, v54, v55);
      if ((v70 & 1) == 0)
      {
        sub_100109830();
        int v70 = sub_100109860();
        uint64_t v60 = v52;
        uint64_t v61 = v85;
        uint64_t v62 = v68;
        v68(v60, v85);
        v62(v56, v61);
        v62(v77, v61);
        swift_bridgeObjectRelease();
        (*v72)(v86, v91);
        uint64_t v11 = v90;
        uint64_t v27 = v79;
        uint64_t v32 = v81;
        if (v70) {
          goto LABEL_36;
        }
LABEL_31:
        sub_1000240FC(v35);
LABEL_32:
        swift_release();
        unint64_t v23 = v94;
LABEL_5:
        ++v3;
        if (v14 == (char *)v32) {
          goto LABEL_44;
        }
        goto LABEL_6;
      }
      uint64_t v57 = v56;
      uint64_t v58 = v85;
      id v59 = v68;
      v68(v57, v85);
      v59(v77, v58);
      swift_bridgeObjectRelease();
      (*v72)(v86, v91);
      uint64_t v11 = v90;
      uint64_t v27 = v79;
      uint64_t v32 = v81;
LABEL_36:
      if ((v89 & 1) == 0)
      {
LABEL_14:
        uint64_t v36 = *(void *)(a2 + 16);
        sub_1000240FC(v35);
        if (v36 == v88) {
          goto LABEL_41;
        }
        goto LABEL_32;
      }
LABEL_40:
      sub_1000240FC(v35);
LABEL_41:
      swift_bridgeObjectRelease();
      return a2;
    default:
      sub_1000240FC((uint64_t)v31);
      swift_release();
      goto LABEL_5;
  }
}

uint64_t *sub_1000A8CF8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000A8D4C(a1, a2, a3);
}

uint64_t *sub_1000A8D4C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = *v3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*v3 + 80) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 96), a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v6 + 88) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 104), a2);
  *((unsigned char *)v3 + *(void *)(*v3 + 112)) = a3;
  return v3;
}

uint64_t *sub_1000A8E48()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 96));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t sub_1000A8F14()
{
  sub_1000A8E48();

  return swift_deallocClassInstance();
}

uint64_t LRUCache.__allocating_init(maxSize:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  LRUCache.init(maxSize:)(a1);
  return v2;
}

void *LRUCache.init(maxSize:)(uint64_t a1)
{
  v1[3] = 0;
  type metadata accessor for LRUCacheNode();
  type metadata accessor for DoublyLinkedList();
  v1[5] = DoublyLinkedList.__allocating_init()();
  v1[2] = a1;
  type metadata accessor for Node();
  v1[4] = sub_100109B90();
  return v1;
}

uint64_t type metadata accessor for LRUCacheNode()
{
  return sub_100008550();
}

uint64_t LRUCache.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  LRUCache.refreshIfNeeded(at:)();

  return LRUCache.value(for:)(a1);
}

uint64_t LRUCache.refreshIfNeeded(at:)()
{
  swift_beginAccess();
  type metadata accessor for LRUCacheNode();
  type metadata accessor for Node();
  sub_100109BE0();
  if (!v1) {
    return swift_endAccess();
  }
  swift_endAccess();
  swift_beginAccess();
  if (*(unsigned char *)(v1[2] + *(void *)(*(void *)v1[2] + 112)))
  {
    swift_retain();
    DoublyLinkedList.remove(node:)(v1);
    swift_release();
    swift_retain();
    DoublyLinkedList.prepend(node:)((uint64_t)v1);
    swift_release();
  }
  return swift_release();
}

uint64_t LRUCache.value(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 88);
  type metadata accessor for LRUCacheNode();
  type metadata accessor for Node();
  sub_100109BE0();
  swift_endAccess();
  if (!v8) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  swift_beginAccess();
  uint64_t v5 = *(void *)(v8 + 16);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v5 + *(void *)(*(void *)v5 + 104), v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v4);
}

uint64_t LRUCache.cache(value:for:expires:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v37 = a3;
  uint64_t v36 = a1;
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = v6[11];
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = v6[10];
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v8);
  id v14 = (char *)&v33 - v13;
  uint64_t v38 = v4 + 4;
  swift_beginAccess();
  uint64_t v35 = v7;
  type metadata accessor for LRUCacheNode();
  uint64_t v15 = a2;
  type metadata accessor for Node();
  uint64_t v33 = v6[12];
  sub_100109BE0();
  uint64_t v16 = v39;
  if (v39)
  {
    swift_endAccess();
    if ((Node.isLinked.getter() & 1) != 0
      || (uint64_t v22 = v4[5], swift_beginAccess(), (v23 = *(uint64_t **)(v22 + 16)) != 0) && v23 == v16)
    {
      swift_retain();
      DoublyLinkedList.remove(node:)(v16);
      swift_release();
      uint64_t result = swift_release();
      uint64_t v18 = v4[3];
      BOOL v19 = __OFSUB__(v18, 1);
      uint64_t v20 = v18 - 1;
      if (v19) {
        goto LABEL_17;
      }
      uint64_t v21 = (uint64_t)v10;
      v4[3] = v20;
    }
    else
    {
      uint64_t v21 = (uint64_t)v10;
      swift_release();
    }
  }
  else
  {
    uint64_t v21 = (uint64_t)v10;
    swift_endAccess();
  }
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v24(v14, a2, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v21, v36, v35);
  swift_allocObject();
  char v25 = v37;
  uint64_t v40 = sub_1000A8D4C((uint64_t)v14, v21, v37 & 1);
  uint64_t v26 = Node.__allocating_init(value:)((uint64_t)&v40);
  v24(v14, v15, v11);
  uint64_t v39 = (uint64_t *)v26;
  swift_beginAccess();
  sub_100109BD0();
  swift_retain();
  swift_retain();
  sub_100109BF0();
  swift_endAccess();
  if ((v25 & 1) == 0) {
    goto LABEL_15;
  }
  swift_retain();
  DoublyLinkedList.prepend(node:)(v26);
  uint64_t result = swift_release();
  uint64_t v27 = v4[3];
  uint64_t v28 = v27 + 1;
  if (!__OFADD__(v27, 1))
  {
    v4[3] = v28;
    uint64_t v29 = v4[5];
    swift_beginAccess();
    uint64_t v30 = *(uint64_t **)(v29 + 24);
    if (v30 && v4[2] < v28)
    {
      swift_beginAccess();
      swift_beginAccess();
      swift_retain();
      sub_100109B80();
      swift_endAccess();
      swift_release();
      swift_retain();
      DoublyLinkedList.remove(node:)(v30);
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v31 = v4[3];
      BOOL v19 = __OFSUB__(v31, 1);
      uint64_t v32 = v31 - 1;
      if (!v19)
      {
        v4[3] = v32;
        return result;
      }
      goto LABEL_18;
    }
LABEL_15:
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

Swift::Void __swiftcall LRUCache.clear(percentage:)(Swift::Double percentage)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v38 = sub_10010A700();
  uint64_t v5 = *(void *)(v38 - 8);
  uint64_t v6 = __chkstk_darwin(v38);
  uint64_t v8 = (char *)&v31 - v7;
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v31 - v10;
  if (percentage >= 1.0)
  {
    swift_beginAccess();
    type metadata accessor for LRUCacheNode();
    type metadata accessor for Node();
    sub_100109BD0();
    sub_100109BC0(1);
    swift_endAccess();
    swift_retain();
    DoublyLinkedList.removeAll()();
    swift_release();
    v1[3] = 0;
  }
  else
  {
    uint64_t v33 = v1;
    if (percentage > 0.0)
    {
      uint64_t v36 = v9;
      uint64_t v12 = v33 + 4;
      swift_beginAccess();
      type metadata accessor for LRUCacheNode();
      uint64_t v13 = type metadata accessor for Node();
      uint64_t v14 = *(void *)(v3 + 96);
      swift_bridgeObjectRetain();
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v15 = sub_100109BB0();
      swift_bridgeObjectRelease();
      double v16 = floor((double)v15 * percentage);
      if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (v16 <= -9.22337204e18)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (v16 >= 9.22337204e18)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v17 = (uint64_t)v16;
      if ((uint64_t)v16 < 0)
      {
LABEL_26:
        __break(1u);
        return;
      }
      uint64_t v18 = v36;
      if (v17)
      {
        uint64_t v19 = 0;
        uint64_t v20 = v5;
        uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
        uint64_t v36 = (uint64_t)v16;
        int v37 = (void (**)(char *, char *, uint64_t))(v18 + 32);
        uint64_t v22 = (void (**)(char *, uint64_t))(v18 + 8);
        unint64_t v23 = (void (**)(char *, uint64_t))(v20 + 8);
        uint64_t v32 = (uint64_t)v16;
        while (v19 != v17)
        {
          uint64_t v35 = v19;
          uint64_t v24 = v33;
          uint64_t v25 = v33[5];
          swift_beginAccess();
          uint64_t v26 = *(uint64_t **)(v25 + 24);
          if (v26)
          {
            swift_beginAccess();
            uint64_t v34 = v26[2] + *(void *)(*(void *)v26[2] + 96);
            swift_beginAccess();
            sub_100109BD0();
            swift_retain();
            sub_100109B80();
            swift_endAccess();
            swift_release();
            swift_retain();
            DoublyLinkedList.remove(node:)(v26);
            swift_release();
            swift_release();
            uint64_t v27 = v24[3];
            BOOL v28 = __OFSUB__(v27, 1);
            uint64_t v29 = v27 - 1;
            if (v28) {
              goto LABEL_22;
            }
            v24[3] = v29;
          }
          else
          {
            sub_100109BA0();
            uint64_t v30 = v36;
            do
            {
              uint64_t v41 = *v12;
              swift_getWitnessTable();
              sub_10010A1F0();
              if ((*v21)(v8, 1, v4) == 1)
              {
                (*v23)(v8, v38);
              }
              else
              {
                (*v37)(v11, v8, v4);
                swift_beginAccess();
                sub_100109BD0();
                sub_100109B80();
                swift_endAccess();
                swift_release();
                (*v22)(v11, v4);
              }
              --v30;
            }
            while (v30);
          }
          uint64_t v19 = v35 + 1;
          --v36;
          uint64_t v17 = v32;
          if (v35 + 1 == v32) {
            return;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
  }
}

uint64_t LRUCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A9E44()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000A9F20()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUCache()
{
  return sub_100008550();
}

BOOL static DataConfig.UnitsCounterType.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void DataConfig.UnitsCounterType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int DataConfig.UnitsCounterType.hashValue.getter(unsigned __int8 a1)
{
  return sub_10010AE20();
}

unint64_t sub_1000AA020()
{
  unint64_t result = qword_10015DF60;
  if (!qword_10015DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DF60);
  }
  return result;
}

unsigned char *_s16UnitsCounterTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AA140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataConfig.UnitsCounterType()
{
  return &type metadata for DataConfig.UnitsCounterType;
}

void sub_1000AA178(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = self;
  id v5 = [v4 standardUserDefaults];
  NSString v6 = sub_100109CF0();
  id v7 = [v5 stringArrayForKey:v6];

  if (v7)
  {
    uint64_t v8 = (double *)sub_100109F30();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  unint64_t v9 = sub_1000C58D8(a1, a2, v8);
  if (v10)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000C5718(v9);
    swift_bridgeObjectRelease();
    id v11 = [v4 standardUserDefaults];
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    NSString v13 = sub_100109CF0();
    [v11 setObject:isa forKey:v13];
  }
}

void sub_1000AA32C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = self;
  id v5 = [v4 standardUserDefaults];
  NSString v6 = sub_100109CF0();
  id v7 = [v5 stringArrayForKey:v6];

  if (v7)
  {
    uint64_t v8 = (double *)sub_100109F30();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  if (sub_1000DC1BC(a1, a2, v8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = (double *)sub_10009E5BC(0, *((void *)v8 + 2) + 1, 1, (char *)v8);
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = (double *)sub_10009E5BC((char *)(v9 > 1), v10 + 1, 1, (char *)v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    id v11 = &v8[2 * v10];
    *((void *)v11 + 4) = a1;
    *((void *)v11 + 5) = a2;
    id v12 = [v4 standardUserDefaults];
    Class isa = sub_100109F20().super.isa;
    swift_bridgeObjectRelease();
    NSString v14 = sub_100109CF0();
    [v12 setObject:isa forKey:v14];
  }
}

uint64_t sub_1000AA538()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015DF68);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015DF68);
  if (qword_100158C18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E018);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000AA600(void *a1)
{
  uint64_t v2 = sub_100109960();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v319 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v341 = (char *)&v319 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v332 = (char *)&v319 - v9;
  uint64_t v349 = sub_100109460();
  unint64_t v10 = *(char **)(v349 - 8);
  uint64_t v11 = __chkstk_darwin(v349);
  uint64_t v355 = (char *)&v319 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v343 = (char *)&v319 - v14;
  __chkstk_darwin(v13);
  uint64_t v365 = (char *)&v319 - v15;
  uint64_t v367 = sub_1001094F0();
  uint64_t v335 = *(void *)(v367 - 8);
  uint64_t v16 = __chkstk_darwin(v367);
  uint64_t v18 = (char *)&v319 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v338 = (char *)&v319 - v20;
  __chkstk_darwin(v19);
  unint64_t v350 = (char *)&v319 - v21;
  uint64_t v363 = sub_100004BD4(&qword_10015A010);
  uint64_t v22 = __chkstk_darwin(v363);
  uint64_t v352 = (uint64_t)&v319 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v319 - v24;
  uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v331 = (char *)&v319 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  NSString v358 = (char *)&v319 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v319 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v354 = (uint64_t)&v319 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v344 = (char *)&v319 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v366 = (char *)&v319 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v345 = (uint64_t)&v319 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v361 = (uint64_t)&v319 - v43;
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v319 - v44;
  id v46 = [a1 userInfo];
  if (!v46) {
    return;
  }
  char v47 = v46;
  CGFloat v376 = v10;
  int64_t v373 = (int64_t)v45;
  uint64_t v48 = sub_100109B70();

  unint64_t v385 = 0xD000000000000027;
  unint64_t v386 = 0x8000000100111D00;
  unint64_t v384 = &_swiftEmptySetSingleton;
  uint64_t v392 = sub_100109D30();
  uint64_t v393 = v49;
  sub_10010A860();
  uint64_t v50 = *(void *)(v48 + 16);
  uint64_t v348 = v48;
  if (v50 && (unint64_t v51 = sub_1000FCC10((uint64_t)&v381), (v52 & 1) != 0))
  {
    sub_100037A20(*(void *)(v48 + 56) + 32 * v51, (uint64_t)&v379);
  }
  else
  {
    v380[0] = 0u;
    Swift::String v379 = (Swift::String)0;
  }
  uint64_t v53 = v373;
  sub_1000AE3FC((uint64_t)&v381);
  uint64_t v353 = v3;
  Class v336 = v5;
  id v322 = v18;
  CGFloat v362 = v25;
  uint64_t v364 = v33;
  uint64_t v337 = v2;
  if (!*((void *)&v380[0] + 1))
  {
    sub_10000B9CC((uint64_t)&v379, &qword_10015A8A0);
    goto LABEL_66;
  }
  sub_100004BD4(&qword_10015DF90);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_66;
  }
  uint64_t v54 = v392;
  uint64_t v2 = v392 & 0xC000000000000001;
  if ((v392 & 0xC000000000000001) != 0)
  {
    if (sub_10010A810() > 0)
    {
      v381._id countAndFlagsBits = 40;
      v381._object = (void *)0xE100000000000000;
      uint64_t v55 = sub_10010A810();
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v55 = *(void *)(v392 + 16);
    if (v55)
    {
      v381._id countAndFlagsBits = 40;
      v381._object = (void *)0xE100000000000000;
LABEL_14:
      v379._id countAndFlagsBits = v55;
      v397._id countAndFlagsBits = sub_10010AC60();
      sub_100109E00(v397);
      swift_bridgeObjectRelease();
      v398._id countAndFlagsBits = 0x73747265736E6920;
      v398._object = (void *)0xEB00000000203A29;
      sub_100109E00(v398);
      sub_100109E00(v381);
      swift_bridgeObjectRelease();
      if (v2)
      {
        sub_10010A800();
        sub_10001CB98(0, &qword_10015A880);
        sub_1000AE57C();
        sub_10010A180();
        uint64_t v54 = v387;
        id v378 = v388;
        uint64_t v56 = v389;
        uint64_t v57 = v390;
        unint64_t v58 = v391;
      }
      else
      {
        uint64_t v57 = 0;
        uint64_t v59 = -1 << *(unsigned char *)(v54 + 32);
        uint64_t v60 = *(void *)(v54 + 56);
        id v378 = (v54 + 56);
        uint64_t v61 = ~v59;
        uint64_t v62 = -v59;
        if (v62 < 64) {
          uint64_t v63 = ~(-1 << v62);
        }
        else {
          uint64_t v63 = -1;
        }
        unint64_t v58 = v63 & v60;
        uint64_t v56 = (void *)v61;
      }
      uint64_t v375 = v54 & 0x7FFFFFFFFFFFFFFFLL;
      id v371 = v56;
      CGFloat v377 = (void (**)(char *, char *, uint64_t))(((unint64_t)v56 + 64) >> 6);
      object = (void *)((char *)&type metadata for Swift.AnyObject + 8);
      if ((v54 & 0x8000000000000000) == 0) {
        goto LABEL_29;
      }
LABEL_22:
      uint64_t v64 = sub_10010A830();
      if (!v64) {
        goto LABEL_64;
      }
      v379._id countAndFlagsBits = v64;
      sub_10001CB98(0, &qword_10015A880);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id countAndFlagsBits = (id)v381._countAndFlagsBits;
      swift_unknownObjectRelease();
      uint64_t v2 = v57;
      uint64_t v66 = v58;
      if (!countAndFlagsBits)
      {
LABEL_64:
        sub_1000AE5E4();
        goto LABEL_65;
      }
      while (1)
      {
        v381._id countAndFlagsBits = 2107914;
        v381._object = (void *)0xE300000000000000;
        v399._id countAndFlagsBits = sub_10006C5FC();
        sub_100109E00(v399);
        swift_bridgeObjectRelease();
        sub_100109E00(v381);
        swift_bridgeObjectRelease();
        type metadata accessor for JournalEntryAssetMO();
        uint64_t v71 = swift_dynamicCastClass();
        if (!v71) {
          goto LABEL_27;
        }
        uint64_t v72 = (void *)v71;
        id v73 = countAndFlagsBits;
        id v74 = [v72 entry];
        if (v74)
        {
          uint64_t v75 = v74;
          id v76 = [v74 objectID];
        }
        else
        {
          id v76 = 0;
        }
        id v77 = [*(id *)(v372 + 32) objectID];
        id countAndFlagsBits = v77;
        if (v76)
        {
          if (!v77)
          {

            goto LABEL_28;
          }
          sub_10001CB98(0, &qword_10015DFA8);
          id v78 = v76;
          uint64_t v53 = v373;
          char v79 = sub_10010A6A0();

          uint64_t v3 = v353;
          if ((v79 & 1) == 0)
          {

            goto LABEL_28;
          }
        }
        else if (v77)
        {

LABEL_27:
LABEL_28:
          uint64_t v57 = v2;
          unint64_t v58 = v66;
          if (v54 < 0) {
            goto LABEL_22;
          }
          goto LABEL_29;
        }
        id v80 = [v72 assetType];
        if (v80)
        {
          uint64_t v81 = v80;
          uint64_t v82 = sub_100109D30();
          uint64_t v84 = v83;

          if (v82 == 0x697463656C666572 && v84 == 0xEA00000000006E6FLL)
          {
            swift_bridgeObjectRelease();
LABEL_60:
            Swift::Int v86 = 4;
            goto LABEL_62;
          }
          char v85 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          if (v85) {
            goto LABEL_60;
          }
        }
        Swift::Int v86 = 1;
LABEL_62:
        sub_10003E15C(&v381, v86);

        uint64_t v57 = v2;
        unint64_t v58 = v66;
        uint64_t v3 = v353;
        if (v54 < 0) {
          goto LABEL_22;
        }
LABEL_29:
        if (v58)
        {
          uint64_t v66 = (v58 - 1) & v58;
          unint64_t v67 = __clz(__rbit64(v58)) | (v57 << 6);
          uint64_t v2 = v57;
        }
        else
        {
          uint64_t v68 = v57 + 1;
          if (__OFADD__(v57, 1)) {
            goto LABEL_341;
          }
          if (v68 >= (uint64_t)v377) {
            goto LABEL_64;
          }
          unint64_t isa = (unint64_t)v378[v68].isa;
          uint64_t v2 = v57 + 1;
          if (!isa)
          {
            uint64_t v2 = v57 + 2;
            if (v57 + 2 >= (uint64_t)v377) {
              goto LABEL_64;
            }
            unint64_t isa = (unint64_t)v378[v2].isa;
            if (!isa)
            {
              uint64_t v2 = v57 + 3;
              if (v57 + 3 >= (uint64_t)v377) {
                goto LABEL_64;
              }
              unint64_t isa = (unint64_t)v378[v2].isa;
              if (!isa)
              {
                uint64_t v2 = v57 + 4;
                if (v57 + 4 >= (uint64_t)v377) {
                  goto LABEL_64;
                }
                unint64_t isa = (unint64_t)v378[v2].isa;
                if (!isa)
                {
                  int v70 = (void (**)(char *, char *, uint64_t))(v57 + 5);
                  do
                  {
                    if (v377 == v70) {
                      goto LABEL_64;
                    }
                    unint64_t isa = (unint64_t)v378[(void)v70].isa;
                    int v70 = (void (**)(char *, char *, uint64_t))((char *)v70 + 1);
                  }
                  while (!isa);
                  uint64_t v2 = (uint64_t)v70 - 1;
                }
              }
            }
          }
          uint64_t v66 = (isa - 1) & isa;
          unint64_t v67 = __clz(__rbit64(isa)) + (v2 << 6);
        }
        id countAndFlagsBits = *(id *)(*(void *)(v54 + 48) + 8 * v67);
        if (!countAndFlagsBits) {
          goto LABEL_64;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_65:
  uint64_t v2 = v337;
LABEL_66:
  v379._id countAndFlagsBits = sub_100109D30();
  v379._object = v87;
  sub_10010A860();
  sub_1000DC158((uint64_t)&v381, v348, &v379);
  sub_1000AE3FC((uint64_t)&v381);
  if (*((void *)&v380[0] + 1))
  {
    sub_100004BD4(&qword_10015DF90);
    if (swift_dynamicCast())
    {
      uint64_t v88 = (void *)v392;
      goto LABEL_71;
    }
  }
  else
  {
    sub_10000B9CC((uint64_t)&v379, &qword_10015A8A0);
  }
  uint64_t v88 = &_swiftEmptySetSingleton;
LABEL_71:
  v379._id countAndFlagsBits = sub_100109D30();
  v379._object = v89;
  sub_10010A860();
  sub_1000DC158((uint64_t)&v381, v348, &v379);
  sub_1000AE3FC((uint64_t)&v381);
  if (*((void *)&v380[0] + 1))
  {
    sub_100004BD4(&qword_10015DF90);
    if (swift_dynamicCast())
    {
      uint64_t v90 = (void *)v392;
      goto LABEL_76;
    }
  }
  else
  {
    sub_10000B9CC((uint64_t)&v379, &qword_10015A8A0);
  }
  uint64_t v90 = &_swiftEmptySetSingleton;
LABEL_76:
  sub_1000ADCB0((unint64_t)v90, v88);
  uint64_t v92 = v91;
  unint64_t v93 = v91 & 0xC000000000000001;
  if ((v91 & 0xC000000000000001) == 0)
  {
    if (*(uint64_t *)(v91 + 16) >= 1) {
      goto LABEL_78;
    }
LABEL_81:
    swift_bridgeObjectRelease();
    goto LABEL_268;
  }
  if (sub_10010A810() < 1) {
    goto LABEL_81;
  }
LABEL_78:
  v381._id countAndFlagsBits = 0;
  v381._object = (void *)0xE000000000000000;
  sub_10010A8D0(22);
  swift_bridgeObjectRelease();
  v381._id countAndFlagsBits = 10;
  v381._object = (void *)0xE100000000000000;
  if (v93) {
    uint64_t v94 = sub_10010A810();
  }
  else {
    uint64_t v94 = *(void *)(v92 + 16);
  }
  v379._id countAndFlagsBits = v94;
  v400._id countAndFlagsBits = sub_10010AC60();
  sub_100109E00(v400);
  swift_bridgeObjectRelease();
  v401._object = (void *)0x8000000100111D50;
  v401._id countAndFlagsBits = 0xD000000000000013;
  sub_100109E00(v401);
  sub_100109E00(v381);
  swift_bridgeObjectRelease();
  if (v93)
  {
    sub_10010A800();
    sub_10001CB98(0, &qword_10015A880);
    sub_1000AE57C();
    sub_10010A180();
    uint64_t v92 = v392;
    uint64_t v346 = v393;
    uint64_t v95 = v394;
    uint64_t v2 = v395;
    uint64_t v3 = v396;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v96 = -1 << *(unsigned char *)(v92 + 32);
    uint64_t v97 = *(void *)(v92 + 56);
    uint64_t v346 = v92 + 56;
    uint64_t v95 = ~v96;
    uint64_t v98 = -v96;
    if (v98 < 64) {
      uint64_t v99 = ~(-1 << v98);
    }
    else {
      uint64_t v99 = -1;
    }
    uint64_t v3 = v99 & v97;
  }
  uint64_t v326 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text;
  uint64_t v319 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged;
  uint64_t v325 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_dateSource;
  uint64_t v328 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked;
  uint64_t v329 = v372 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_date;
  swift_beginAccess();
  uint64_t v340 = v92 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v342 = (unint64_t)(v95 + 64) >> 6;
  CGFloat v377 = (void (**)(char *, char *, uint64_t))v380;
  id v378 = v382;
  CGFloat v370 = (char *)(v335 + 56);
  uint64_t v330 = (void (**)(char *, uint64_t, uint64_t))(v335 + 32);
  uint64_t v347 = (void (**)(uint64_t, uint64_t))(v335 + 8);
  uint64_t v333 = v376 + 32;
  uint64_t v334 = v376 + 56;
  id v327 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v376 + 48);
  uint64_t v324 = (void (**)(uint64_t, char *, uint64_t))(v376 + 40);
  Class v321 = (void (**)(char *, uint64_t, uint64_t))(v376 + 16);
  uint64_t v323 = v376 + 8;
  id v320 = (void (**)(uint64_t, char *, uint64_t))(v376 + 24);
  uint64_t v359 = (char *)&type metadata for Any + 8;
  id v339 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v357 = v92;
  uint64_t v356 = v95;
  CGFloat v360 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v335 + 48);
  while (1)
  {
    if (v92 < 0)
    {
      uint64_t v103 = sub_10010A830();
      if (!v103) {
        goto LABEL_267;
      }
      v379._id countAndFlagsBits = v103;
      sub_10001CB98(0, &qword_10015A880);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v104 = (id)v381._countAndFlagsBits;
      swift_unknownObjectRelease();
      uint64_t v102 = v2;
      uint64_t v100 = v3;
      if (!v104) {
        goto LABEL_267;
      }
    }
    else
    {
      if (v3)
      {
        uint64_t v100 = (v3 - 1) & v3;
        unint64_t v101 = __clz(__rbit64(v3)) | (v2 << 6);
        uint64_t v102 = v2;
      }
      else
      {
        int64_t v105 = v2 + 1;
        if (__OFADD__(v2, 1)) {
          goto LABEL_339;
        }
        if (v105 >= v342)
        {
LABEL_267:
          sub_1000AE5E4();
          uint64_t v2 = v337;
          uint64_t v3 = v353;
LABEL_268:
          v383._id countAndFlagsBits = sub_100109D30();
          v383._object = v263;
          sub_10010A860();
          sub_1000DC158((uint64_t)&v381, v348, &v379);
          swift_bridgeObjectRelease();
          sub_1000AE3FC((uint64_t)&v381);
          if (!*((void *)&v380[0] + 1))
          {
            sub_10000B9CC((uint64_t)&v379, &qword_10015A8A0);
            goto LABEL_330;
          }
          sub_100004BD4(&qword_10015DF90);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_330;
          }
          uint64_t v264 = v383._countAndFlagsBits;
          if ((v383._countAndFlagsBits & 0xC000000000000001) != 0)
          {
            if (sub_10010A810() > 0)
            {
              v381._id countAndFlagsBits = 10;
              v381._object = (void *)0xE100000000000000;
              uint64_t v265 = sub_10010A810();
              goto LABEL_276;
            }
          }
          else
          {
            uint64_t v265 = *(void *)(v383._countAndFlagsBits + 16);
            if (v265)
            {
              v381._id countAndFlagsBits = 10;
              v381._object = (void *)0xE100000000000000;
LABEL_276:
              v379._id countAndFlagsBits = v265;
              v407._id countAndFlagsBits = sub_10010AC60();
              sub_100109E00(v407);
              swift_bridgeObjectRelease();
              v408._id countAndFlagsBits = 0x736574656C656420;
              v408._object = (void *)0xE90000000000003ALL;
              sub_100109E00(v408);
              sub_100109E00(v381);
              swift_bridgeObjectRelease();
              if ((v264 & 0xC000000000000001) != 0)
              {
                sub_10010A800();
                sub_10001CB98(0, &qword_10015A880);
                sub_1000AE57C();
                sub_10010A180();
                uint64_t v264 = v381._countAndFlagsBits;
                object = v381._object;
                uint64_t v266 = v382[0];
                uint64_t v268 = v382[1];
                unint64_t v267 = v382[2];
              }
              else
              {
                uint64_t v268 = 0;
                uint64_t v269 = -1 << *(unsigned char *)(v264 + 32);
                uint64_t v270 = *(void *)(v264 + 56);
                object = (void *)(v264 + 56);
                uint64_t v266 = ~v269;
                uint64_t v271 = -v269;
                if (v271 < 64) {
                  uint64_t v272 = ~(-1 << v271);
                }
                else {
                  uint64_t v272 = -1;
                }
                unint64_t v267 = v272 & v270;
              }
              id v371 = (id)(v264 & 0x7FFFFFFFFFFFFFFFLL);
              uint64_t v368 = v266;
              int64_t v373 = (unint64_t)(v266 + 64) >> 6;
              CGFloat v377 = (void (**)(char *, char *, uint64_t))(v335 + 32);
              CGFloat v376 = (char *)(v335 + 56);
              uint64_t v375 = v335 + 48;
              id v369 = (void (**)(char *, uint64_t))(v335 + 8);
              CGFloat v370 = (char *)&type metadata for Swift.AnyObject + 8;
LABEL_287:
              uint64_t v274 = (uint64_t)v358;
              while (1)
              {
                while (1)
                {
                  if (v264 < 0)
                  {
                    uint64_t v278 = sub_10010A830();
                    if (!v278) {
                      goto LABEL_329;
                    }
                    v383._id countAndFlagsBits = v278;
                    sub_10001CB98(0, &qword_10015A880);
                    swift_unknownObjectRetain();
                    swift_dynamicCast();
                    id v279 = (id)v379._countAndFlagsBits;
                    swift_unknownObjectRelease();
                    uint64_t v277 = v268;
                    unint64_t v275 = v267;
                  }
                  else
                  {
                    if (v267)
                    {
                      unint64_t v275 = ((v267 - 1) & v267);
                      unint64_t v276 = __clz(__rbit64(v267)) | (v268 << 6);
                      uint64_t v277 = v268;
                    }
                    else
                    {
                      int64_t v280 = v268 + 1;
                      if (__OFADD__(v268, 1))
                      {
                        __break(1u);
                        return;
                      }
                      if (v280 >= v373) {
                        goto LABEL_329;
                      }
                      unint64_t v281 = object[v280];
                      uint64_t v277 = v268 + 1;
                      if (!v281)
                      {
                        uint64_t v277 = v268 + 2;
                        if (v268 + 2 >= v373) {
                          goto LABEL_329;
                        }
                        unint64_t v281 = object[v277];
                        if (!v281)
                        {
                          uint64_t v277 = v268 + 3;
                          if (v268 + 3 >= v373) {
                            goto LABEL_329;
                          }
                          unint64_t v281 = object[v277];
                          if (!v281)
                          {
                            uint64_t v277 = v268 + 4;
                            if (v268 + 4 >= v373) {
                              goto LABEL_329;
                            }
                            unint64_t v281 = object[v277];
                            if (!v281)
                            {
                              uint64_t v282 = v268 + 5;
                              do
                              {
                                if (v373 == v282) {
                                  goto LABEL_329;
                                }
                                unint64_t v281 = object[v282++];
                              }
                              while (!v281);
                              uint64_t v277 = v282 - 1;
                            }
                          }
                        }
                      }
                      unint64_t v275 = ((v281 - 1) & v281);
                      unint64_t v276 = __clz(__rbit64(v281)) + (v277 << 6);
                    }
                    id v279 = *(id *)(*(void *)(v264 + 48) + 8 * v276);
                  }
                  if (!v279) {
                    goto LABEL_329;
                  }
                  v379._id countAndFlagsBits = 2107914;
                  v379._object = (void *)0xE300000000000000;
                  v409._id countAndFlagsBits = sub_10006C5FC();
                  sub_100109E00(v409);
                  swift_bridgeObjectRelease();
                  sub_100109E00(v379);
                  swift_bridgeObjectRelease();
                  type metadata accessor for JournalEntryMO();
                  uint64_t v283 = swift_dynamicCastClass();
                  if (v283) {
                    break;
                  }
                  type metadata accessor for JournalEntryAssetMO();
                  if (swift_dynamicCastClass())
                  {
                    sub_10003E15C(&v379, 4);
                    sub_10003E15C(&v379, 1);
                  }

                  uint64_t v268 = v277;
                  unint64_t v267 = (unint64_t)v275;
                }
                CGFloat v284 = (void *)v283;
                id v378 = v275;
                id v285 = v279;
                id v286 = [v284 id];
                CGFloat v287 = v377;
                if (v286)
                {
                  CGFloat v288 = v286;
                  id v289 = v350;
                  sub_1001094B0();

                  CGFloat v290 = *v287;
                  uint64_t v291 = v289;
                  uint64_t v292 = v367;
                  (*v287)(v358, v291, v367);
                  uint64_t v293 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v376;
                  (*(void (**)(char *, void, uint64_t, uint64_t))v376)(v358, 0, 1, v292);
                  uint64_t v294 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v375;
                  uint64_t v295 = v292;
                  uint64_t v274 = (uint64_t)v358;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v375)(v358, 1, v295) != 1)
                  {
                    uint64_t v296 = v274;
                    uint64_t v297 = v367;
                    v290(v338, (char *)v296, v367);
                    id v298 = [v284 id];
                    if (!v298)
                    {
                      uint64_t v273 = (uint64_t)v331;
                      v293(v331, 1, 1, v297);
                      uint64_t v3 = v353;
LABEL_285:

                      (*v369)(v338, v297);
                      sub_10000B9CC(v273, (uint64_t *)&unk_10015A850);
                      goto LABEL_286;
                    }
                    uint64_t v299 = v298;
                    uint64_t v300 = v350;
                    sub_1001094B0();

                    uint64_t v273 = (uint64_t)v331;
                    v290(v331, v300, v297);
                    v293((char *)v273, 0, 1, v297);
                    int v301 = v294(v273, 1, v297);
                    uint64_t v3 = v353;
                    if (v301 == 1) {
                      goto LABEL_285;
                    }
                    uint64_t v302 = v322;
                    v290(v322, (char *)v273, v297);
                    unint64_t v303 = v338;
                    if (sub_1001094A0()) {
                      sub_10003E15C(&v379, 9);
                    }

                    uint64_t v304 = *v369;
                    (*v369)(v302, v297);
                    v304(v303, v297);
LABEL_286:
                    uint64_t v268 = v277;
                    unint64_t v267 = (unint64_t)v378;
                    goto LABEL_287;
                  }
                }
                else
                {
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v376)(v274, 1, 1, v367);
                }

                sub_10000B9CC(v274, (uint64_t *)&unk_10015A850);
                uint64_t v268 = v277;
                unint64_t v267 = (unint64_t)v378;
                uint64_t v3 = v353;
              }
            }
          }
          swift_bridgeObjectRelease();
          goto LABEL_330;
        }
        unint64_t v106 = *(void *)(v346 + 8 * v105);
        uint64_t v102 = v2 + 1;
        if (!v106)
        {
          uint64_t v102 = v2 + 2;
          if (v2 + 2 >= v342) {
            goto LABEL_267;
          }
          unint64_t v106 = *(void *)(v346 + 8 * v102);
          if (!v106)
          {
            uint64_t v102 = v2 + 3;
            if (v2 + 3 >= v342) {
              goto LABEL_267;
            }
            unint64_t v106 = *(void *)(v346 + 8 * v102);
            if (!v106)
            {
              uint64_t v102 = v2 + 4;
              if (v2 + 4 >= v342) {
                goto LABEL_267;
              }
              unint64_t v106 = *(void *)(v346 + 8 * v102);
              if (!v106)
              {
                uint64_t v107 = v2 + 5;
                do
                {
                  if (v342 == v107) {
                    goto LABEL_267;
                  }
                  unint64_t v106 = *(void *)(v346 + 8 * v107++);
                }
                while (!v106);
                uint64_t v102 = v107 - 1;
              }
            }
          }
        }
        uint64_t v100 = (v106 - 1) & v106;
        unint64_t v101 = __clz(__rbit64(v106)) + (v102 << 6);
      }
      id v104 = *(id *)(*(void *)(v92 + 48) + 8 * v101);
      if (!v104) {
        goto LABEL_267;
      }
    }
    uint64_t v368 = v100;
    id v369 = (void (**)(char *, uint64_t))v102;
    v381._id countAndFlagsBits = 2107914;
    v381._object = (void *)0xE300000000000000;
    v402._id countAndFlagsBits = sub_10006C5FC();
    sub_100109E00(v402);
    swift_bridgeObjectRelease();
    v403._id countAndFlagsBits = 58;
    v403._object = (void *)0xE100000000000000;
    sub_100109E00(v403);
    sub_100109E00(v381);
    swift_bridgeObjectRelease();
    id v371 = v104;
    id v108 = [v104 changedValuesForCurrentEvent];
    uint64_t v2 = sub_100109B70();

    int64_t v109 = 0;
    uint64_t v110 = v2 + 64;
    uint64_t v111 = 1 << *(unsigned char *)(v2 + 32);
    if (v111 < 64) {
      uint64_t v112 = ~(-1 << v111);
    }
    else {
      uint64_t v112 = -1;
    }
    unint64_t v113 = v112 & *(void *)(v2 + 64);
    int64_t v114 = (unint64_t)(v111 + 63) >> 6;
    CGFloat v376 = (char *)(v114 - 1);
    if (!v113)
    {
LABEL_120:
      int64_t v120 = v109 + 1;
      if (!__OFADD__(v109, 1))
      {
        if (v120 < v114)
        {
          unint64_t v121 = *(void *)(v110 + 8 * v120);
          if (v121)
          {
LABEL_123:
            unint64_t v113 = (v121 - 1) & v121;
            unint64_t v116 = __clz(__rbit64(v121)) + (v120 << 6);
            int64_t v109 = v120;
            goto LABEL_119;
          }
          int64_t v122 = v109 + 2;
          ++v109;
          if (v120 + 1 < v114)
          {
            unint64_t v121 = *(void *)(v110 + 8 * v122);
            if (v121)
            {
LABEL_126:
              int64_t v120 = v122;
              goto LABEL_123;
            }
            int64_t v109 = v120 + 1;
            if (v120 + 2 < v114)
            {
              unint64_t v121 = *(void *)(v110 + 8 * (v120 + 2));
              if (v121)
              {
                v120 += 2;
                goto LABEL_123;
              }
              int64_t v122 = v120 + 3;
              int64_t v109 = v120 + 2;
              if (v120 + 3 < v114)
              {
                unint64_t v121 = *(void *)(v110 + 8 * v122);
                if (v121) {
                  goto LABEL_126;
                }
                while (1)
                {
                  int64_t v120 = v122 + 1;
                  if (__OFADD__(v122, 1)) {
                    goto LABEL_340;
                  }
                  if (v120 >= v114) {
                    break;
                  }
                  unint64_t v121 = *(void *)(v110 + 8 * v120);
                  ++v122;
                  if (v121) {
                    goto LABEL_123;
                  }
                }
                int64_t v109 = (int64_t)v376;
              }
            }
          }
        }
        unint64_t v113 = 0;
        memset(v380, 0, sizeof(v380));
        Swift::String v379 = (Swift::String)0;
        goto LABEL_138;
      }
      __break(1u);
LABEL_339:
      __break(1u);
LABEL_340:
      __break(1u);
LABEL_341:
      __break(1u);
LABEL_342:
      swift_once();
      goto LABEL_331;
    }
    while (1)
    {
      unint64_t v115 = __clz(__rbit64(v113));
      v113 &= v113 - 1;
      unint64_t v116 = v115 | (v109 << 6);
LABEL_119:
      uint64_t v117 = *(void *)(v2 + 56);
      CGFloat v118 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v116);
      uint64_t v119 = (void *)v118[1];
      v379._id countAndFlagsBits = *v118;
      v379._object = v119;
      sub_100037A20(v117 + 32 * v116, (uint64_t)v377);
      swift_bridgeObjectRetain();
LABEL_138:
      sub_10000B800((uint64_t)&v379, (uint64_t)&v381, &qword_10015DFA0);
      uint64_t v123 = v381._object;
      if (!v381._object) {
        break;
      }
      uint64_t v3 = v381._countAndFlagsBits;
      sub_10002426C(v378, &v379);
      v383._id countAndFlagsBits = 0;
      v383._object = (void *)0xE000000000000000;
      v404._id countAndFlagsBits = 0x20202020200ALL;
      v404._object = (void *)0xE600000000000000;
      sub_100109E00(v404);
      v405._id countAndFlagsBits = v3;
      v405._object = v123;
      sub_100109E00(v405);
      swift_bridgeObjectRelease();
      v406._id countAndFlagsBits = 8250;
      v406._object = (void *)0xE200000000000000;
      sub_100109E00(v406);
      sub_10010AA40();
      sub_100109E00(v383);
      swift_bridgeObjectRelease();
      sub_10000B7B0((uint64_t)&v379);
      if (!v113) {
        goto LABEL_120;
      }
    }
    swift_release();
    id v124 = v371;
    id v125 = [v371 changedValuesForCurrentEvent];
    uint64_t v126 = sub_100109B70();

    uint64_t v3 = *(void *)(v126 + 16);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v139 = _swiftEmptyArrayStorage;
LABEL_166:
    uint64_t v147 = (char *)sub_1000AE69C((uint64_t)v139);
    swift_bridgeObjectRelease();
    type metadata accessor for JournalEntryMO();
    uint64_t v148 = swift_dynamicCastClass();
    uint64_t v149 = v367;
    uint64_t v150 = v365;
    uint64_t v151 = (uint64_t)v364;
    uint64_t v152 = (uint64_t)v366;
    if (!v148) {
      goto LABEL_189;
    }
    uint64_t v153 = (void *)v148;
    uint64_t v375 = (uint64_t)v124;
    id v154 = [v153 id];
    if (v154)
    {
      double v155 = v154;
      sub_1001094B0();

      double v156 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v370;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v370)(v53, 0, 1, v149);
    }
    else
    {
      double v156 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v370;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v370)(v53, 1, 1, v149);
    }
    CGFloat v376 = v147;
    object = v153;
    double v157 = *(void **)(v372 + 32);
    id v158 = [v157 id];
    if (v158)
    {
      id v159 = v158;
      uint64_t v160 = v361;
      sub_1001094B0();

      uint64_t v161 = 0;
    }
    else
    {
      uint64_t v161 = 1;
      uint64_t v160 = v361;
    }
    v156(v160, v161, 1, v149);
    uint64_t v162 = (uint64_t)v362;
    uint64_t v163 = (uint64_t)&v362[*(int *)(v363 + 48)];
    sub_10006CD14(v53, (uint64_t)v362);
    sub_10006CD14(v160, v163);
    uint64_t v164 = *v360;
    if ((*v360)(v162, 1, v149) == 1)
    {
      sub_10000B9CC(v160, (uint64_t *)&unk_10015A850);
      sub_10000B9CC(v53, (uint64_t *)&unk_10015A850);
      if (v164(v163, 1, v149) == 1)
      {
        sub_10000B9CC((uint64_t)v362, (uint64_t *)&unk_10015A850);
        uint64_t v165 = (uint64_t)v376;
        goto LABEL_180;
      }
      goto LABEL_178;
    }
    uint64_t v166 = v345;
    sub_10006CD14(v162, v345);
    if (v164(v163, 1, v149) == 1)
    {
      sub_10000B9CC(v361, (uint64_t *)&unk_10015A850);
      sub_10000B9CC(v53, (uint64_t *)&unk_10015A850);
      (*v347)(v166, v149);
LABEL_178:
      sub_10000B9CC((uint64_t)v362, &qword_10015A010);
LABEL_188:

      uint64_t v151 = (uint64_t)v364;
      uint64_t v152 = (uint64_t)v366;
      id v124 = v371;
LABEL_189:
      swift_bridgeObjectRelease();
      type metadata accessor for JournalEntryAssetMO();
      uint64_t v180 = swift_dynamicCastClass();
      if (v180)
      {
        id v181 = (void *)v180;
        CGFloat v376 = (char *)v124;
        id v182 = [v181 entry];
        if (v182)
        {
          id v183 = v182;
          id v184 = [v182 id];

          uint64_t v185 = v352;
          if (v184)
          {
            uint64_t v186 = (uint64_t)v344;
            sub_1001094B0();

            CGRect v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v370;
            id v188 = (char *)v186;
            uint64_t v189 = 0;
          }
          else
          {
            CGRect v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v370;
            uint64_t v186 = (uint64_t)v344;
            id v188 = v344;
            uint64_t v189 = 1;
          }
          uint64_t v149 = v367;
          v187(v188, v189, 1, v367);
          sub_10000B800(v186, v152, (uint64_t *)&unk_10015A850);
        }
        else
        {
          CGRect v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v370;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v370)(v152, 1, 1, v149);
          uint64_t v185 = v352;
        }
        id v190 = [*(id *)(v372 + 32) id];
        if (v190)
        {
          CGFloat v191 = v190;
          uint64_t v192 = v354;
          sub_1001094B0();

          uint64_t v193 = 0;
        }
        else
        {
          uint64_t v193 = 1;
          uint64_t v192 = v354;
        }
        v187((char *)v192, v193, 1, v149);
        uint64_t v194 = v185 + *(int *)(v363 + 48);
        sub_10006CD14(v152, v185);
        sub_10006CD14(v192, v194);
        uint64_t v195 = *v360;
        if ((*v360)(v185, 1, v149) == 1)
        {
          sub_10000B9CC(v192, (uint64_t *)&unk_10015A850);
          sub_10000B9CC(v152, (uint64_t *)&unk_10015A850);
          if (v195(v194, 1, v149) != 1) {
            goto LABEL_204;
          }
          sub_10000B9CC(v185, (uint64_t *)&unk_10015A850);
          uint64_t v92 = v357;
          uint64_t v196 = v369;
          uint64_t v3 = v368;
LABEL_206:
          id v200 = [v181 assetType];
          if (!v200) {
            goto LABEL_212;
          }
          Class v201 = v200;
          uint64_t v202 = sub_100109D30();
          uint64_t v204 = v203;

          if (v202 == 0x697463656C666572 && v204 == 0xEA00000000006E6FLL)
          {
            swift_bridgeObjectRelease();
            goto LABEL_211;
          }
          char v205 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          if (v205) {
LABEL_211:
          }
            Swift::Int v206 = 4;
          else {
LABEL_212:
          }
            Swift::Int v206 = 1;
          sub_10003E15C(&v381, v206);
          goto LABEL_214;
        }
        sub_10006CD14(v185, v151);
        if (v195(v194, 1, v149) == 1)
        {
          sub_10000B9CC(v354, (uint64_t *)&unk_10015A850);
          sub_10000B9CC(v152, (uint64_t *)&unk_10015A850);
          (*v347)(v151, v149);
LABEL_204:
          sub_10000B9CC(v185, &qword_10015A010);
          uint64_t v92 = v357;
          uint64_t v196 = v369;
          uint64_t v3 = v368;
          goto LABEL_214;
        }
        uint64_t v197 = v350;
        (*v330)(v350, v194, v149);
        sub_1000AE75C(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v198 = sub_100109C70();
        uint64_t v199 = *v347;
        (*v347)((uint64_t)v197, v149);
        sub_10000B9CC(v354, (uint64_t *)&unk_10015A850);
        sub_10000B9CC(v152, (uint64_t *)&unk_10015A850);
        v199(v151, v149);
        sub_10000B9CC(v352, (uint64_t *)&unk_10015A850);
        uint64_t v92 = v357;
        uint64_t v196 = v369;
        uint64_t v3 = v368;
        if (v198) {
          goto LABEL_206;
        }
LABEL_214:
        id v207 = v376;

        uint64_t v2 = (uint64_t)v196;
      }
      else
      {

        uint64_t v2 = (uint64_t)v369;
        uint64_t v3 = v368;
        uint64_t v92 = v357;
      }
    }
    else
    {
      uint64_t v167 = v350;
      (*v330)(v350, v163, v149);
      sub_1000AE75C(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v168 = sub_100109C70();
      id v169 = *v347;
      uint64_t v150 = v365;
      (*v347)((uint64_t)v167, v149);
      sub_10000B9CC(v361, (uint64_t *)&unk_10015A850);
      sub_10000B9CC(v53, (uint64_t *)&unk_10015A850);
      v169(v166, v149);
      sub_10000B9CC(v162, (uint64_t *)&unk_10015A850);
      uint64_t v165 = (uint64_t)v376;
      if ((v168 & 1) == 0) {
        goto LABEL_188;
      }
LABEL_180:
      if (sub_100082BF4(1u, v165)) {
        sub_10003E15C(&v381, 1);
      }
      char v170 = sub_100082BF4(0, v165);
      uint64_t v171 = v355;
      uint64_t v172 = v329;
      id v173 = v157;
      id v174 = object;
      if (v170)
      {
        id v175 = [object text];
        if (v175)
        {
          uint64_t v176 = sub_100109250();
          unint64_t v178 = v177;

          id v175 = sub_100081C44(v176, v178);
          sub_100007084(v176, v178);
          if (v175 && *(void *)(v372 + v326))
          {
            unsigned __int8 v179 = [v175 isEqualToAttributedString:];
            uint64_t v171 = v355;
            uint64_t v150 = v365;
            if ((v179 & 1) == 0) {
              *(unsigned char *)(v372 + v319) = 1;
            }
          }
          else
          {
            uint64_t v171 = v355;
            uint64_t v150 = v365;
          }
        }
        uint64_t v208 = *(void **)(v372 + v326);
        *(void *)(v372 + v326) = v175;

        sub_10003E15C(&v381, 0);
      }
      if (sub_100082BF4(3u, v165))
      {
        id v209 = [v174 title];
        if (v209)
        {
          uint64_t v210 = v209;
          uint64_t v211 = sub_100109250();
          unint64_t v213 = v212;

          id v214 = sub_100081C44(v211, v213);
          uint64_t v150 = v365;
          unint64_t v215 = v213;
          uint64_t v165 = (uint64_t)v376;
          sub_100007084(v211, v215);
        }
        else
        {
          id v214 = 0;
        }
        sub_1000F2708(v214);

        sub_10003E15C(&v381, 2);
        uint64_t v171 = v355;
      }
      if (sub_100082BF4(4u, v165))
      {
        id v216 = [v173 entryDate];
        if (v216)
        {
          NSString v217 = v216;
          uint64_t v218 = v343;
          sub_100109420();

          id v219 = *(void (**)(char *, uint64_t, uint64_t))v333;
          uint64_t v220 = (uint64_t)v332;
          uint64_t v221 = v218;
          uint64_t v222 = v349;
          (*(void (**)(char *, char *, uint64_t))v333)(v332, v221, v349);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v334)(v220, 0, 1, v222);
          uint64_t v223 = v222;
          uint64_t v171 = v355;
          if ((*v327)(v220, 1, v223) != 1)
          {
            v219(v150, v220, v349);
LABEL_228:
            swift_beginAccess();
            (*v324)(v172, v150, v349);
            swift_endAccess();
            sub_10003E15C(&v381, 3);
            goto LABEL_229;
          }
        }
        else
        {
          uint64_t v220 = (uint64_t)v332;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v334)(v332, 1, 1, v349);
        }
        sub_100109450();
        sub_10000B9CC(v220, (uint64_t *)&unk_10015CDE0);
        goto LABEL_228;
      }
LABEL_229:
      if (sub_100082BF4(7u, v165))
      {
        id v224 = [v173 dateSource];
        if (v224)
        {
          Class v225 = v224;
          uint64_t v226 = sub_100109D30();
          id v228 = v227;
        }
        else
        {
          uint64_t v226 = 0;
          id v228 = (void *)0xE000000000000000;
        }
        char v229 = sub_1000854BC(v226, v228);
        *(unsigned char *)(v372 + v325) = v229;
        sub_10003E15C(&v381, 3);
        uint64_t v171 = v355;
      }
      if (sub_100082BF4(9u, v165))
      {
        id v230 = [v173 prompt];
        if (v230)
        {
          uint64_t v231 = v230;
          uint64_t v232 = sub_100109250();
          unint64_t v234 = v233;

          id v235 = sub_100081C44(v232, v234);
          unint64_t v236 = v234;
          uint64_t v165 = (uint64_t)v376;
          sub_100007084(v232, v236);
        }
        else
        {
          id v235 = 0;
        }
        sub_1000F2738(v235);

        sub_10003E15C(&v381, 6);
        uint64_t v171 = v355;
      }
      if (sub_100082BF4(8u, v165)) {
        sub_10003E15C(&v381, 7);
      }
      if (sub_100082BF4(5u, v165))
      {
        swift_bridgeObjectRelease();
LABEL_244:
        sub_10003E15C(&v381, 8);
        goto LABEL_245;
      }
      char v237 = sub_100082BF4(6u, v165);
      swift_bridgeObjectRelease();
      if (v237) {
        goto LABEL_244;
      }
LABEL_245:
      unsigned __int8 v238 = [v174 isRemovedFromCloud];
      uint64_t v239 = v349;
      if ((v238 & 1) != 0 || [v174 isFullyRemoved]) {
        sub_10003E15C(&v381, 9);
      }
      id v240 = [v174 entryDate];
      if (!v240)
      {
        uint64_t v244 = (uint64_t)v341;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v334)(v341, 1, 1, v239);
LABEL_253:
        sub_10000B9CC(v244, (uint64_t *)&unk_10015CDE0);
LABEL_254:
        uint64_t v92 = v357;
        goto LABEL_255;
      }
      uint64_t v241 = v240;
      NSString v242 = v343;
      sub_100109420();

      uint64_t v243 = *(void (**)(char *, uint64_t, uint64_t))v333;
      uint64_t v244 = (uint64_t)v341;
      (*(void (**)(char *, char *, uint64_t))v333)(v341, v242, v239);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v334)(v244, 0, 1, v239);
      if ((*v327)(v244, 1, v239) == 1) {
        goto LABEL_253;
      }
      v243(v171, v244, v239);
      id v245 = v343;
      (*v321)(v343, v172, v239);
      sub_1000AE75C((unint64_t *)&unk_10015A8B0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v246 = sub_100109C70();
      CGFloat v247 = *(void (**)(char *, uint64_t))v323;
      (*(void (**)(char *, uint64_t))v323)(v245, v239);
      if (v246)
      {
        v247(v171, v239);
        goto LABEL_254;
      }
      swift_beginAccess();
      (*v320)(v172, v171, v239);
      swift_endAccess();
      id v257 = [v173 dateSource];
      if (v257)
      {
        CGFloat v258 = v257;
        uint64_t v259 = sub_100109D30();
        NSString v261 = v260;
      }
      else
      {
        uint64_t v259 = 0;
        NSString v261 = (void *)0xE000000000000000;
      }
      uint64_t v92 = v357;
      char v262 = sub_1000854BC(v259, v261);
      *(unsigned char *)(v372 + v325) = v262;
      sub_10003E15C(&v381, 3);
      v247(v355, v239);
LABEL_255:
      int v248 = *(unsigned __int8 *)(v372 + v328);
      if (v248 != [v174 flagged])
      {
        sub_1000F02C4((uint64_t)[v174 flagged]);
        sub_10003E15C(&v381, 7);
      }
      id v249 = [v174 text];
      if (v249)
      {
        uint64_t v250 = v249;
        uint64_t v251 = sub_100109250();
        unint64_t v253 = v252;

        id v254 = sub_100081C44(v251, v253);
        sub_100007084(v251, v253);
      }
      else
      {
        id v254 = 0;
      }
      uint64_t v2 = (uint64_t)v369;
      uint64_t v3 = v368;
      char v255 = sub_1000F004C(v254);

      if (v255) {
        sub_10003E15C(&v381, 0);
      }
      id v256 = (id)v375;
    }
  }
  v381._id countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  sub_1000AE328(v3);
  uint64_t v127 = sub_1000AE5EC(v126);
  int v129 = v128;
  uint64_t v130 = 0;
  NSURLResourceKey v131 = (char *)(v126 + 64);
  char v132 = *(unsigned char *)(v126 + 32);
  uint64_t v375 = v128;
  uint64_t v351 = v126 + 88;
  object = (void *)v3;
  CGFloat v376 = (char *)(v126 + 64);
  while ((v127 & 0x8000000000000000) == 0 && v127 < 1 << v132)
  {
    unint64_t v134 = (unint64_t)v127 >> 6;
    if ((*(void *)&v131[8 * ((unint64_t)v127 >> 6)] & (1 << v127)) == 0) {
      goto LABEL_324;
    }
    if (*(_DWORD *)(v126 + 36) != v129) {
      goto LABEL_325;
    }
    id v135 = (uint64_t *)(*(void *)(v126 + 48) + 16 * v127);
    uint64_t v136 = *v135;
    uint64_t v137 = (void *)v135[1];
    swift_bridgeObjectRetain();
    unsigned int v138 = sub_1000AE710(v136, v137);
    if (v138 == 12) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = v138;
    }
    sub_1000AE3A0();
    uint64_t v139 = (double *)v381._countAndFlagsBits;
    unint64_t v141 = *(void *)(v381._countAndFlagsBits + 16);
    unint64_t v140 = *(void *)(v381._countAndFlagsBits + 24);
    if (v141 >= v140 >> 1)
    {
      sub_1000BDE0C(v140 > 1, v141 + 1, 1);
      uint64_t v139 = (double *)v381._countAndFlagsBits;
    }
    *((void *)v139 + 2) = v141 + 1;
    *((unsigned char *)v139 + v141 + 32) = v3;
    char v132 = *(unsigned char *)(v126 + 32);
    unint64_t v133 = 1 << v132;
    if (v127 >= 1 << v132) {
      goto LABEL_326;
    }
    NSURLResourceKey v131 = v376;
    uint64_t v142 = *(void *)&v376[8 * v134];
    if ((v142 & (1 << v127)) == 0) {
      goto LABEL_327;
    }
    if (*(_DWORD *)(v126 + 36) != v129) {
      goto LABEL_328;
    }
    unint64_t v143 = v142 & (-2 << (v127 & 0x3F));
    if (v143)
    {
      unint64_t v133 = __clz(__rbit64(v143)) | v127 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v3 = (uint64_t)object;
    }
    else
    {
      unint64_t v144 = v134 + 1;
      unint64_t v145 = (v133 + 63) >> 6;
      uint64_t v3 = (uint64_t)object;
      if (v134 + 1 < v145)
      {
        unint64_t v146 = *(void *)&v376[8 * v144];
        if (!v146)
        {
          unint64_t v144 = v134 + 2;
          if (v134 + 2 >= v145) {
            goto LABEL_142;
          }
          unint64_t v146 = *(void *)&v376[8 * v144];
          if (!v146)
          {
            while (v145 - 3 != v134)
            {
              unint64_t v146 = *(void *)(v351 + 8 * v134++);
              if (v146)
              {
                unint64_t v144 = v134 + 2;
                goto LABEL_158;
              }
            }
            goto LABEL_142;
          }
        }
LABEL_158:
        unint64_t v133 = __clz(__rbit64(v146)) + (v144 << 6);
      }
    }
LABEL_142:
    ++v130;
    int v129 = v375;
    uint64_t v127 = v133;
    uint64_t v53 = v373;
    if (v130 == v3)
    {
      swift_bridgeObjectRelease();
      id v124 = v371;
      goto LABEL_166;
    }
  }
  __break(1u);
LABEL_324:
  __break(1u);
LABEL_325:
  __break(1u);
LABEL_326:
  __break(1u);
LABEL_327:
  __break(1u);
LABEL_328:
  __break(1u);
LABEL_329:
  sub_1000AE5E4();
  uint64_t v2 = v337;
LABEL_330:
  v379._id countAndFlagsBits = 0;
  v379._object = (void *)0xE000000000000000;
  sub_10010A8D0(22);
  swift_bridgeObjectRelease();
  v379._id countAndFlagsBits = 0xD000000000000013;
  v379._object = (void *)0x8000000100111D30;
  sub_1000AE450();
  swift_bridgeObjectRetain();
  v410._id countAndFlagsBits = sub_10010A160();
  sub_100109E00(v410);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v411._id countAndFlagsBits = 10;
  v411._object = (void *)0xE100000000000000;
  sub_100109E00(v411);
  sub_100109E00(v379);
  swift_bridgeObjectRelease();
  if (qword_100158BD0 != -1) {
    goto LABEL_342;
  }
LABEL_331:
  uint64_t v305 = sub_100007CB8(v2, (uint64_t)qword_10015DF68);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v336, v305, v2);
  uint64_t v306 = v385;
  unint64_t v307 = v386;
  uint64_t v308 = swift_allocObject();
  CGFloat v377 = (void (**)(char *, char *, uint64_t))v306;
  *(void *)(v308 + 16) = v306;
  *(void *)(v308 + 24) = v307;
  swift_bridgeObjectRetain();
  Class v309 = sub_100109940();
  os_log_type_t v310 = sub_10010A2C0();
  uint64_t v311 = swift_allocObject();
  *(unsigned char *)(v311 + 16) = 32;
  uint64_t v312 = swift_allocObject();
  *(unsigned char *)(v312 + 16) = 8;
  uint64_t v313 = swift_allocObject();
  *(void *)(v313 + 16) = sub_1000AE4DC;
  *(void *)(v313 + 24) = v308;
  uint64_t v314 = swift_allocObject();
  *(void *)(v314 + 16) = sub_1000AE534;
  *(void *)(v314 + 24) = v313;
  sub_100004BD4(&qword_10015DF88);
  uint64_t v315 = swift_allocObject();
  *(_OWORD *)(v315 + 16) = xmmword_100121F30;
  *(void *)(v315 + 32) = sub_1000AE51C;
  *(void *)(v315 + 40) = v311;
  *(void *)(v315 + 48) = sub_1000AE9E4;
  *(void *)(v315 + 56) = v312;
  *(void *)(v315 + 64) = sub_1000AE574;
  *(void *)(v315 + 72) = v314;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v316 = v310;
  id v378 = v309;
  if (os_log_type_enabled(v309, v310))
  {
    uint64_t v317 = (uint8_t *)swift_slowAlloc();
    v379._id countAndFlagsBits = swift_slowAlloc();
    *(_WORD *)uint64_t v317 = 258;
    v317[2] = 32;
    swift_release();
    v317[3] = 8;
    swift_release();
    swift_bridgeObjectRetain();
    v383._id countAndFlagsBits = sub_1000C50D4((uint64_t)v377, v307, &v379._countAndFlagsBits);
    sub_10010A730();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    CGFloat v318 = v378;
    _os_log_impl((void *)&_mh_execute_header, v378, v316, "%s", v317, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v353 + 8))(v336, v337);
  if (v384[2])
  {
    v379._id countAndFlagsBits = (uint64_t)v384;
    sub_1001099D0();
  }
  swift_bridgeObjectRelease();
}