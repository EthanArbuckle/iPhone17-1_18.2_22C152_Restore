void sub_1002CC968(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  Swift::String v42;
  Class isa;
  void *v44;
  void *v45;
  objc_class *v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  os_unfair_lock_s *v56;
  uint64_t v57;
  os_unfair_lock_s *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  NSString v65;
  id v66;
  void v67[2];
  uint64_t v68;
  objc_class *v69;
  int v70;
  void *v71;
  objc_super v72;
  id v73;

  v9 = type metadata accessor for UUID();
  v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v13 - 8);
  v15 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)v67 - v18;
  v20 = [a1 id];
  if (v20)
  {
    v21 = v20;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
  }
  sub_10002C4EC((uint64_t)v15, (uint64_t)v19, &qword_100800950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9))
  {
    sub_10001457C((uint64_t)v19, &qword_100800950);
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    v22 = type metadata accessor for Logger();
    sub_100026A54(v22, (uint64_t)qword_100806C78);
    v23 = a1;
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      *(_DWORD *)v26 = 138412290;
      v73 = v23;
      v28 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v27 = v23;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "(downloadAssetsMetadataFromiCloud) assetMO object doesn't have an id assetMO:%@", v26, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    v71 = a3;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v19, v9);
    sub_10001457C((uint64_t)v19, &qword_100800950);
    v29 = UUID.uuidString.getter();
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (qword_1007F7E60 != -1) {
      swift_once();
    }
    v32 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
    v33 = objc_allocWithZone((Class)NSString);
    v34 = v32;
    swift_bridgeObjectRetain();
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v36 = [v33 initWithString:v35];

    v37 = [v34 objectForKey:v36];
    if (v37 && (v38 = [v37 isCancelled], v37, (v38 & 1) == 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v70 = a5;
      v68 = a4;
      sub_1005B6900();
      sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
      v39 = qword_1007F6D38;
      swift_bridgeObjectRetain();
      if (v39 != -1) {
        swift_once();
      }
      v40 = *(void *)(qword_10083D2F8 + 24);
      v41 = [*(id *)(v40 + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
      v42._countAndFlagsBits = v29;
      v42._object = v31;
      isa = CKRecordID.init(recordName:zoneID:)(v42, (CKRecordZoneID)v41).super.isa;
      v44 = *(void **)(v40 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
      v45 = *(void **)(v40 + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadConfig);
      v46 = (objc_class *)type metadata accessor for AssetMetadataDownloadOperation();
      v47 = (char *)objc_allocWithZone(v46);
      *(void *)&v47[qword_1007FECC8] = isa;
      *(void *)&v47[qword_1007FECD0] = v44;
      *(void *)&v47[qword_1007FECD8] = v45;
      v72.receiver = v47;
      v72.super_class = v46;
      v69 = isa;
      v48 = v44;
      v49 = v45;
      v50 = [super init];
      v51 = (void *)swift_allocObject();
      v52 = v29;
      v53 = v71;
      v51[2] = v71;
      v51[3] = v52;
      v67[1] = v52;
      v51[4] = v31;
      v51[5] = a1;
      v54 = swift_allocObject();
      *(void *)(v54 + 16) = sub_1002D277C;
      *(void *)(v54 + 24) = v51;
      __chkstk_darwin(v54);
      v67[-2] = sub_1002D2788;
      v67[-1] = v55;
      v57 = (uint64_t)&v56[4];
      v58 = v56 + 10;
      swift_bridgeObjectRetain();
      v59 = a1;
      v60 = v53;
      swift_retain();
      os_unfair_lock_lock(v58);
      sub_1002D27A0(v57);
      os_unfair_lock_unlock(v58);
      swift_release();
      swift_release();
      if ((v70 & 1) == 0) {
        [v50 setQueuePriority:v68];
      }
      sub_1005B6920();
      if (v61 <= 99)
      {
        v62 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
        v63 = objc_allocWithZone((Class)NSString);
        swift_bridgeObjectRetain();
        v64 = v62;
        v65 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v66 = [v63 initWithString:v65];

        [v64 setObject:v50 forKey:v66];
        [*(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue) addOperation:v50];
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1002CD0D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  v9 = *(void **)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  v12 = (void *)swift_allocObject();
  v12[2] = v9;
  v12[3] = v10;
  v12[4] = v11;
  v12[5] = a3;
  v12[6] = a4;
  v12[7] = a5;
  v12[8] = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1002D281C;
  *(void *)(v13 + 24) = v12;
  v18[4] = sub_10001B3DC;
  v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1003F44E4;
  v18[3] = &unk_1007A3CE0;
  v14 = _Block_copy(v18);
  sub_1002D2840(v9, v10, v11);
  swift_bridgeObjectRetain();
  id v15 = a5;
  id v16 = a2;
  swift_retain();
  swift_release();
  [v16 performBlockAndWait:v14];
  _Block_release(v14);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v16) {
    __break(1u);
  }
  return result;
}

void sub_1002CD27C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6, void *a7)
{
  if (a3)
  {
    sub_100040D64(a1, a2);
    sub_100040D64(a1, a2);
    id v12 = a3;
    sub_100040DD0(a1, a2);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [a6 setAssetMetaData:isa];

    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    id v14 = [v12 recordID];
    id v15 = [v14 recordName];

    Swift::Int v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Int v18 = v17;

    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10054BEBC((Swift::Int *)&v39, v16, v18);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40[0] = 0;
    unsigned int v19 = [a7 save:v40];
    id v20 = v40[0];
    if (v19)
    {
      type metadata accessor for CloudKitStack();
      id v21 = v20;
      sub_1002C9DC8();
      sub_100040DD0(a1, a2);
    }
    else
    {
      id v31 = v40[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F6D68 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      sub_100026A54(v32, (uint64_t)qword_100806C78);
      swift_errorRetain();
      swift_errorRetain();
      v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v38 = v12;
        v36 = (void *)swift_slowAlloc();
        *(_DWORD *)v35 = 138412290;
        swift_errorRetain();
        v37 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v40[0] = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v36 = v37;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "(downloadAssetsMetadataFromiCloud) unable to save: %@", v35, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_100040DD0(a1, a2);

        swift_errorRelease();
      }
      else
      {
        sub_100040DD0(a1, a2);

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100026A54(v24, (uint64_t)qword_100806C78);
    swift_bridgeObjectRetain_n();
    id v25 = a6;
    v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      v29 = (void *)swift_slowAlloc();
      v40[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      swift_bridgeObjectRetain();
      sub_10011EA98(a4, a5, (uint64_t *)v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2112;
      id v39 = v25;
      id v30 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v29 = v25;

      _os_log_impl((void *)&_mh_execute_header, v26, v27, "(downloadAssetsMetadataFromiCloud) failed to get data for idString: %s assetMO:%@", (uint8_t *)v28, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1002CD838(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, int a6)
{
  int v69 = a6;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v14 - 8);
  Swift::Int v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  id v20 = (char *)&v66 - v19;
  id v21 = [a1 id:v18];
  if (v21)
  {
    v22 = v21;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
  }
  sub_10002C4EC((uint64_t)v16, (uint64_t)v20, &qword_100800950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v20, 1, v10))
  {
    sub_10001457C((uint64_t)v20, &qword_100800950);
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100026A54(v23, (uint64_t)qword_100806C78);
    id v24 = a1;
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v27 = 138412290;
      id v71 = v24;
      id v29 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v28 = v24;

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "(downloadAttachmentFromiCloud) emptyAttahmentMO object doesn't have an id emptyAttahmentMO:%@", v27, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v20, v10);
    sub_10001457C((uint64_t)v20, &qword_100800950);
    uint64_t v30 = UUID.uuidString.getter();
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (qword_1007F7E60 != -1) {
      swift_once();
    }
    v33 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableFileAttachmentsQueue);
    id v34 = objc_allocWithZone((Class)NSString);
    id v35 = v33;
    swift_bridgeObjectRetain();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [v34 initWithString:v36];

    id v38 = [v35 objectForKey:v37];
    if (v38 && (unsigned __int8 v39 = [v38 isCancelled], v38, (v39 & 1) == 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v67 = a5;
      sub_1005B6900();
      sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
      uint64_t v40 = qword_1007F6D38;
      swift_bridgeObjectRetain();
      if (v40 != -1) {
        swift_once();
      }
      uint64_t v41 = *(void *)(qword_10083D2F8 + 24);
      id v42 = [*(id *)(v41 + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
      v43._countAndFlagsBits = v30;
      v43._object = v32;
      Class isa = CKRecordID.init(recordName:zoneID:)(v43, (CKRecordZoneID)v42).super.isa;
      v45 = *(void **)(v41 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
      v46 = (objc_class *)type metadata accessor for AttachmentDownloadOperation();
      v47 = (char *)objc_allocWithZone(v46);
      *(void *)&v47[qword_10080AD08] = isa;
      *(void *)&v47[qword_10080AD10] = a1;
      *(void *)&v47[qword_10080ACE8] = v45;
      *(void *)&v47[qword_10080ACF0] = a3;
      v70.receiver = v47;
      v70.super_class = v46;
      id v48 = a1;
      v68 = isa;
      id v49 = v45;
      id v50 = a3;
      id v51 = [super init];
      v52 = (void *)swift_allocObject();
      v52[2] = a4;
      v52[3] = v30;
      uint64_t v66 = v30;
      v52[4] = v32;
      v52[5] = v48;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = sub_1002D22B0;
      *(void *)(v53 + 24) = v52;
      __chkstk_darwin(v53);
      *(&v66 - 2) = (uint64_t)sub_1002D22BC;
      *(&v66 - 1) = v54;
      uint64_t v56 = (uint64_t)&v55[4];
      v57 = v55 + 10;
      swift_bridgeObjectRetain();
      id v58 = v48;
      id v59 = a4;
      swift_retain();
      os_unfair_lock_lock(v57);
      sub_1002D22C4(v56);
      os_unfair_lock_unlock(v57);
      swift_release();
      swift_release();
      if ((v69 & 1) == 0) {
        [v51 setQueuePriority:v67];
      }
      sub_1005B6914();
      if (v60 <= 99)
      {
        v61 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableFileAttachmentsQueue);
        id v62 = objc_allocWithZone((Class)NSString);
        swift_bridgeObjectRetain();
        id v63 = v61;
        NSString v64 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v65 = [v62 initWithString:v64];

        [v63 setObject:v51 forKey:v65];
        [*(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue) addOperation:v51];
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1002CDFA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v25 = a5;
  uint64_t v9 = sub_100010218(&qword_100800978);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v12, &qword_100800978);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  sub_10002C4EC((uint64_t)v12, v16 + v13, &qword_100800978);
  uint64_t v17 = (void *)(v16 + v14);
  *uint64_t v17 = a3;
  v17[1] = a4;
  double v18 = v25;
  *(void *)(v16 + v15) = v25;
  *(void *)(v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)) = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1002D2450;
  *(void *)(v19 + 24) = v16;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007A3A88;
  id v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v21 = v18;
  id v22 = a2;
  swift_retain();
  swift_release();
  [v22 performBlockAndWait:v20];
  _Block_release(v20);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v22) {
    __break(1u);
  }
  return result;
}

void sub_1002CE1FC(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4, void *a5)
{
  v75 = a4;
  unint64_t v76 = a3;
  uint64_t v74 = a2;
  uint64_t v7 = sub_100010218(&qword_100800978);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v70 - v11;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = (void (*)(char *, uint64_t))a1;
  sub_10001B220(a1, (uint64_t)v12, &qword_100800978);
  uint64_t v20 = sub_100010218((uint64_t *)&unk_100800980);
  id v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  if (v21(v12, 1, v20) == 1)
  {
    sub_10001457C((uint64_t)v12, &qword_100800978);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_4:
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_100800A60);
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100026A54(v23, (uint64_t)qword_100806C78);
    unint64_t v24 = v76;
    swift_bridgeObjectRetain_n();
    id v25 = v75;
    os_log_type_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      id v29 = (void *)swift_slowAlloc();
      v78[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      swift_bridgeObjectRetain();
      Swift::Int v77 = sub_10011EA98(v74, v24, (uint64_t *)v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2112;
      Swift::Int v77 = (Swift::Int)v25;
      uint64_t v30 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v29 = v25;

      _os_log_impl((void *)&_mh_execute_header, v26, v27, "(downloadAttachmentFromiCloud) failed to get fileURL for idString: %s attachment:%@", (uint8_t *)v28, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  id v71 = a5;
  v72 = v19;

  id v22 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v22(v15, v12, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_4;
  }
  v22(v72, v15, v16);
  sub_10001B220((uint64_t)v73, (uint64_t)v9, &qword_100800978);
  if (v21(v9, 1, v20) != 1)
  {
    id v40 = *(id *)&v9[*(int *)(v20 + 48)];
    uint64_t v41 = *(void (**)(char *, uint64_t))(v17 + 8);
    v41(v9, v16);
    uint64_t v42 = v16;
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    id v43 = *(id *)(qword_10083D2F8 + 16);
    LODWORD(v75) = sub_100534084(v72, v40, v75);

    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    sub_100026A54(v44, (uint64_t)qword_100806C78);
    unint64_t v45 = v76;
    swift_bridgeObjectRetain_n();
    v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      id v70 = v40;
      v73 = v41;
      uint64_t v49 = v48;
      v78[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315394;
      swift_bridgeObjectRetain();
      Swift::Int v77 = sub_10011EA98(v74, v45, (uint64_t *)v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 12) = 1024;
      char v50 = (char)v75;
      LODWORD(v77) = v75 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "(downloadAttachmentFromiCloud) idString: %s assigned: %{BOOL}d", (uint8_t *)v49, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v41 = v73;
      id v40 = v70;
      swift_slowDealloc();

      if ((v50 & 1) == 0)
      {
LABEL_20:
        v41(v72, v42);

        return;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if ((v75 & 1) == 0) {
        goto LABEL_20;
      }
    }
    v73 = (void (*)(char *, uint64_t))v42;
    id v51 = [v40 recordID];
    v52 = v40;
    id v53 = [v51 recordName];

    Swift::Int v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Int v56 = v55;

    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10054BEBC(&v77, v54, v56);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78[0] = 0;
    unsigned int v57 = [v71 save:v78];
    id v58 = v78[0];
    if (v57)
    {
      type metadata accessor for CloudKitStack();
      id v59 = v58;
      sub_1002C9DC8();

      uint64_t v60 = v72;
      uint64_t v61 = (uint64_t)v73;
    }
    else
    {
      id v70 = v52;
      id v62 = v78[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      id v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v63, v64))
      {
        id v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = v41;
        uint64_t v67 = (void *)swift_slowAlloc();
        *(_DWORD *)id v65 = 138412290;
        swift_errorRetain();
        v68 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v78[0] = v68;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v67 = v68;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "(downloadAttachmentFromiCloud) unable to save: %@", v65, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        uint64_t v41 = v66;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v69 = (uint64_t)v73;
      swift_errorRelease();
      uint64_t v60 = v72;
      uint64_t v61 = v69;
    }
    v41(v60, v61);
    return;
  }
  v73 = (void (*)(char *, uint64_t))v16;
  sub_10001457C((uint64_t)v9, &qword_100800978);
  uint64_t v31 = v17;
  if (qword_1007F6D68 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_100026A54(v32, (uint64_t)qword_100806C78);
  unint64_t v33 = v76;
  swift_bridgeObjectRetain_n();
  id v34 = v75;
  id v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    id v38 = (void *)swift_slowAlloc();
    v75 = swift_slowAlloc();
    v78[0] = v75;
    *(_DWORD *)uint64_t v37 = 136315394;
    swift_bridgeObjectRetain();
    Swift::Int v77 = sub_10011EA98(v74, v33, (uint64_t *)v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2112;
    Swift::Int v77 = (Swift::Int)v34;
    unsigned __int8 v39 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v38 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "(downloadAttachmentFromiCloud) record is nil for idString: %s attachment:%@", (uint8_t *)v37, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v72, (uint64_t)v73);
}

uint64_t sub_1002CEE04(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v4 + OBJC_IVAR____TtC7Journal13CloudKitStack_fetchRecordQueue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a1;
  aBlock[4] = sub_1002D1BE4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A3880;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v18 = a1;
  static DispatchQoS.unspecified.getter();
  id v22 = _swiftEmptyArrayStorage;
  sub_1002D2898((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  swift_release();
  return swift_release();
}

void sub_1002CF0F4(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    aBlock[4] = sub_1002D1BF0;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002CF7F8;
    aBlock[3] = &unk_1007A38D0;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v9;
    swift_retain();
    swift_release();
    [v12 fetchRecordWithID:a4 completionHandler:v11];
    _Block_release(v11);
  }
  else
  {
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100026A54(v13, (uint64_t)qword_100806C78);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "(fetchRecordWithID) no self", v16, 2u);
      swift_slowDealloc();
    }

    a2(0, 0);
  }
}

void sub_1002CF2F4(void *a1, uint64_t a2, void (*a3)(void, uint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_100806C78);
    swift_errorRetain();
    swift_errorRetain();
    v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v9 = v28;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "(fetchRecordWithID) error fetcing record error:%@", v8, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a3(0, a2);
    swift_errorRelease();
    swift_errorRelease();
  }
  else if (a1)
  {
    uint64_t v11 = qword_1007F6D68;
    id v12 = a1;
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100026A54(v13, (uint64_t)qword_100806C78);
    id v14 = v12;
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      uint64_t v28 = (uint64_t)v14;
      os_log_type_t v27 = a3;
      id v18 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v26 = a1;

      a3 = v27;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "(fetchRecordWithID) record :%@", v17, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v25 = v14;
    a3(a1, 0);
  }
  else
  {
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100026A54(v19, (uint64_t)qword_100806C78);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)id v22 = 136315138;
      sub_100010218((uint64_t *)&unk_100806080);
      uint64_t v23 = Optional.debugDescription.getter();
      sub_10011EA98(v23, v24, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "(fetchRecordWithID) could not find record with id recordId:%s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    a3(0, 0);
  }
}

void *sub_1002CF7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    BOOL v7 = a1 == 1;
    if (a1 == 1)
    {
      if (qword_1007F6D68 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100026A54(v8, (uint64_t)qword_100806C78);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v9, v10))
      {
        BOOL v7 = 1;
        goto LABEL_14;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      id v12 = "Logged in to iCloud";
    }
    else
    {
      if (qword_1007F6D68 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_100026A54(v13, (uint64_t)qword_100806C78);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v9, v10))
      {
        BOOL v7 = 0;
        goto LABEL_14;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      id v12 = "User is not logged in to iCloud";
    }
    _os_log_impl((void *)&_mh_execute_header, v9, v10, v12, v11, 2u);
    swift_slowDealloc();
LABEL_14:

    return (void *)a4(v7);
  }
  return result;
}

void sub_1002CF9CC(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, id))
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    if (a2)
    {
      swift_errorRetain();
      if (qword_1007F6D68 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100026A54(v8, (uint64_t)qword_100806C78);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_getErrorValue();
        uint64_t v12 = Error.localizedDescription.getter();
        sub_10011EA98(v12, v13, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error fetching iCloud user %s", v11, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_errorRetain();
      a4(0, 0, a2);
      swift_errorRelease();
      swift_errorRelease();
    }
    else if (a1)
    {
      id v14 = a1;
      id v15 = [v14 recordName];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      a4(v16, v18, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1007F6D68 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_100026A54(v19, (uint64_t)qword_100806C78);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        id v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "User record ID is nil", v22, 2u);
        swift_slowDealloc();
      }

      id v23 = objc_allocWithZone((Class)NSError);
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = [v23 initWithDomain:v24 code:-1 userInfo:0];

      a4(0, 0, v25);
    }
  }
}

uint64_t sub_1002CFD94(uint64_t a1, uint64_t a2)
{
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6D00;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC7Journal13CloudKitStack_zone);
  *(void *)(v5 + 32) = v6;
  specialized Array._endMutation()();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  id v9 = v6;
  swift_retain();
  swift_retain();
  CKDatabase.modifyRecordZones(saving:deleting:completionHandler:)();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void sub_1002CFED4(uint64_t a1, _DWORD *a2, char a3, uint64_t a4, void (*a5)(void))
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  if (a3)
  {
    swift_errorRetain();
    if (qword_1007F6D68 != -1) {
      goto LABEL_49;
    }
    goto LABEL_41;
  }
  uint64_t v72 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  uint64_t v70 = OBJC_IVAR____TtC7Journal13CloudKitStack_zone;
  int64_t v73 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  char v64 = 0;
  int64_t v10 = 0;
  uint64_t v11 = &off_1007F6000;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v10 << 6);
LABEL_23:
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v13);
    uint64_t v18 = *(void *)(a1 + 56) + 16 * v13;
    uint64_t v19 = *(void **)v18;
    if (*(unsigned char *)(v18 + 8))
    {
      sub_1001F987C(v19, 1);
      sub_1001F987C(v19, 1);
      uint64_t v20 = v11[429];
      id v21 = v17;
      if (v20 != (void *)-1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_100026A54(v22, (uint64_t)qword_100806C78);
      sub_1001F987C(v19, 1);
      a2 = v21;
      sub_1001F987C(v19, 1);
      id v23 = a2;
      NSString v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        int64_t v68 = v10;
        uint64_t v26 = swift_slowAlloc();
        os_log_type_t v27 = (void *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v75 = v66;
        *(_DWORD *)uint64_t v26 = 136315394;
        id v28 = [v23 zoneName];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v30 = v9;
        unint64_t v32 = v31;

        uint64_t v11 = &off_1007F6000;
        *(void *)(v26 + 4) = sub_10011EA98(v29, v32, &v75);

        unint64_t v9 = v30;
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2112;
        swift_errorRetain();
        uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v26 + 14) = v33;
        *os_log_type_t v27 = v33;
        sub_1001F9888(v19, 1);
        sub_1001F9888(v19, 1);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Error saving zone %s: %@", (uint8_t *)v26, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = (_DWORD *)v66;
        swift_arrayDestroy();
        swift_slowDealloc();
        int64_t v10 = v68;
        swift_slowDealloc();

        sub_1001F9888(v19, 1);
        sub_1001F9888(v19, 1);
      }
      else
      {
        sub_1001F9888(v19, 1);

        sub_1001F9888(v19, 1);
        sub_1001F9888(v19, 1);

        sub_1001F9888(v19, 1);
      }
    }
    else
    {
      sub_10001B284(0, (unint64_t *)&unk_100800920);
      id v34 = *(void **)&Strong[v70];
      sub_1001F987C(v19, 0);
      sub_1001F987C(v19, 0);
      id v35 = v17;
      a2 = [v34 zoneID];
      char v36 = static NSObject.== infix(_:_:)();

      uint64_t v37 = v11[429];
      if (v36)
      {
        if (v37 != (void *)-1) {
          swift_once();
        }
        uint64_t v47 = type metadata accessor for Logger();
        sub_100026A54(v47, (uint64_t)qword_100806C78);
        id v48 = v19;
        id v40 = Logger.logObject.getter();
        os_log_type_t v49 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v40, v49))
        {
          uint64_t v63 = swift_slowAlloc();
          uint64_t v67 = swift_slowAlloc();
          uint64_t v75 = v67;
          *(_DWORD *)uint64_t v63 = 136315138;
          id v50 = [v48 zoneID];
          uint64_t v69 = v35;
          unint64_t v51 = v9;
          int64_t v52 = v10;
          id v53 = [v50 zoneName];

          uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v56 = v55;

          int64_t v10 = v52;
          unint64_t v9 = v51;
          *(void *)(v63 + 4) = sub_10011EA98(v54, v56, &v75);
          swift_bridgeObjectRelease();
          sub_1001F9888(v19, 0);
          sub_1001F9888(v19, 0);
          _os_log_impl((void *)&_mh_execute_header, v40, v49, "Successfully Saved zone: %s", (uint8_t *)v63, 0xCu);
          char v64 = 1;
          a2 = (_DWORD *)v67;
          swift_arrayDestroy();
          swift_slowDealloc();
LABEL_33:
          swift_slowDealloc();

          sub_1001F9888(v19, 0);
          sub_1001F9888(v19, 0);
        }
        else
        {
          sub_1001F9888(v19, 0);
          sub_1001F9888(v19, 0);

          sub_1001F9888(v19, 0);
          char v64 = 1;
        }
      }
      else
      {
        if (v37 != (void *)-1) {
          swift_once();
        }
        uint64_t v38 = type metadata accessor for Logger();
        sub_100026A54(v38, (uint64_t)qword_100806C78);
        id v39 = v19;
        id v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v40, v41))
        {
          a2 = (_DWORD *)swift_slowAlloc();
          uint64_t v69 = v35;
          uint64_t v75 = swift_slowAlloc();
          *a2 = 136315138;
          id v42 = [v39 zoneID];
          id v43 = [v42 zoneName];

          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v46 = v45;

          *(void *)(a2 + 1) = sub_10011EA98(v44, v46, &v75);
          uint64_t v11 = &off_1007F6000;
          swift_bridgeObjectRelease();
          sub_1001F9888(v19, 0);
          sub_1001F9888(v19, 0);
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unknown zone saved: %s", (uint8_t *)a2, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_33;
        }
        sub_1001F9888(v19, 0);
        sub_1001F9888(v19, 0);

        sub_1001F9888(v19, 0);
      }
    }
  }
  int64_t v14 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v14 >= v73) {
    goto LABEL_43;
  }
  unint64_t v15 = *(void *)(v72 + 8 * v14);
  ++v10;
  if (v15) {
    goto LABEL_22;
  }
  int64_t v10 = v14 + 1;
  if (v14 + 1 >= v73) {
    goto LABEL_43;
  }
  unint64_t v15 = *(void *)(v72 + 8 * v10);
  if (v15) {
    goto LABEL_22;
  }
  int64_t v10 = v14 + 2;
  if (v14 + 2 >= v73) {
    goto LABEL_43;
  }
  unint64_t v15 = *(void *)(v72 + 8 * v10);
  if (v15)
  {
LABEL_22:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    goto LABEL_23;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v73)
  {
LABEL_43:
    swift_release();
    a5(v64 & 1);

    return;
  }
  unint64_t v15 = *(void *)(v72 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v73) {
      goto LABEL_43;
    }
    unint64_t v15 = *(void *)(v72 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_41:
  uint64_t v57 = type metadata accessor for Logger();
  sub_100026A54(v57, (uint64_t)qword_100806C78);
  swift_errorRetain();
  swift_errorRetain();
  id v58 = Logger.logObject.getter();
  os_log_type_t v59 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v60 = 138412290;
    swift_errorRetain();
    uint64_t v62 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v75 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v61 = v62;
    sub_1002D1B50(a1, (uint64_t)a2, 1);
    sub_1002D1B50(a1, (uint64_t)a2, 1);
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Error modifying record zones: %@", v60, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002D1B50(a1, (uint64_t)a2, 1);
    sub_1002D1B50(a1, (uint64_t)a2, 1);
  }

  a5(0);
  sub_1002D1B50(a1, (uint64_t)a2, 1);
}

uint64_t sub_1002D0968(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t))
{
  if (a3)
  {
    swift_errorRetain();
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100026A54(v15, (uint64_t)qword_100806C78);
    swift_errorRetain();
    swift_errorRetain();
    int64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v37 = a1;
      swift_errorRetain();
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      uint64_t v19 = String.init<A>(describing:)();
      uint64_t v37 = sub_10011EA98(v19, v20, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002D1B50(a1, a2, 1);
      sub_1002D1B50(a1, a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Error zone deletion: %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002D1B50(a1, a2, 1);
      sub_1002D1B50(a1, a2, 1);
    }

    a5(0);
    return sub_1002D1B50(a1, a2, 1);
  }
  else
  {
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100806C78);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    int64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = a2;
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 136315138;
      id v34 = v12 + 4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100010218(&qword_100806D40);
      uint64_t v13 = String.init<A>(describing:)();
      uint64_t v35 = sub_10011EA98(v13, v14, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Deletion Results: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v21 = [*(id *)(a4 + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID:v34];
    uint64_t v22 = v21;
    if (*(void *)(a2 + 16) && (unint64_t v23 = sub_10001BE88((uint64_t)v21), (v24 & 1) != 0))
    {
      uint64_t v25 = *(void *)(a2 + 56) + 16 * v23;
      uint64_t v26 = *(void *)v25;
      char v27 = *(unsigned char *)(v25 + 8);
      sub_1002D2880(*(void *)v25, v27);

      sub_1002D2880(v26, v27);
      sub_1002D2880(v26, v27);
      id v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        unint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        *(_DWORD *)unint64_t v30 = 136315138;
        LOBYTE(v36) = v27;
        sub_1002D2880(v26, v27);
        sub_100010218(&qword_100806D38);
        uint64_t v31 = String.init<A>(describing:)();
        uint64_t v35 = sub_10011EA98(v31, v32, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1002D288C(v26, v27);
        sub_1002D288C(v26, v27);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Success deleting zone: %s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1002D288C(v26, v27);
        sub_1002D288C(v26, v27);
      }

      a5(1);
      return sub_1002D288C(v26, v27);
    }
    else
    {

      return ((uint64_t (*)(void))a5)(0);
    }
  }
}

uint64_t sub_1002D0F64()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1002D0F84, 0, 0);
}

uint64_t sub_1002D0F84()
{
  uint64_t v1 = v0[2];
  sub_10001B284(0, &qword_1007F8F48);
  v2._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v2._object = v3;
  v4._countAndFlagsBits = 0x636973736172754ALL;
  v4._object = (void *)0xEC000000656E6F5ALL;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v4, v2).super.isa;
  v0[3] = isa;
  uint64_t v6 = swift_task_alloc();
  v0[4] = v6;
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = isa;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[5] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002D10E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000011, 0x8000000100696600, sub_1002D1990, v6, &type metadata for Bool);
}

uint64_t sub_1002D10E0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    Swift::String v2 = sub_1002D1264;
  }
  else
  {
    swift_task_dealloc();
    Swift::String v2 = sub_1002D11FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002D11FC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
  Swift::String v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1002D1264()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

void sub_1002D12D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100806D18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = __chkstk_darwin(v6);
  int64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1002D1A2C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002CF7F8;
  aBlock[3] = &unk_1007A37E0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  [v10 fetchRecordZoneWithID:a3 completionHandler:v13];
  _Block_release(v13);
}

void sub_1002D1490(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      sub_1002D2898((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);
      _BridgedStoredNSError.code.getter();
      if (a2 == 26)
      {
        sub_100010218(&qword_100806D18);
        CheckedContinuation.resume(returning:)();

        return;
      }
    }
    else
    {
      swift_errorRetain();
    }
    sub_100010218(&qword_100806D18);
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_100010218(&qword_100806D18);
    CheckedContinuation.resume(returning:)();
  }
}

uint64_t type metadata accessor for CloudKitStack()
{
  return self;
}

uint64_t sub_1002D163C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CloudKitStack();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002D1678()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080E368 + dword_10080E368);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002D1718;
  return v3();
}

uint64_t sub_1002D1718(char a1)
{
  *(unsigned char *)(*(void *)v1 + 24) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D1818, 0, 0);
}

uint64_t sub_1002D1818()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    sub_1005B6914();
    if (v1 || (sub_1005B6920(), v2) || (byte_10083D318 & 1) != 0 || (byte_10083D319 & 1) != 0)
    {
      id v3 = [self defaultCenter];
      uint64_t v4 = qword_1007F6E68;
      uint64_t v5 = &qword_10083D3F0;
      goto LABEL_9;
    }
    id v6 = [self defaultCenter];
  }
  else
  {
    byte_10083D318 = 0;
    byte_10083D319 = 0;
    id v6 = [self defaultCenter];
  }
  id v3 = v6;
  uint64_t v4 = qword_1007F6E70;
  uint64_t v5 = &qword_10083D3F8;
LABEL_9:
  if (v4 != -1) {
    swift_once();
  }
  [v3 postNotificationName:*v5 object:0];

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_1002D1990(uint64_t a1)
{
  sub_1002D12D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002D1998()
{
  uint64_t v1 = sub_100010218(&qword_100806D18);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1002D1A2C(uint64_t a1, uint64_t a2)
{
  sub_100010218(&qword_100806D18);

  sub_1002D1490(a1, a2);
}

uint64_t sub_1002D1AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002D1AC0()
{
  return swift_release();
}

uint64_t sub_1002D1AC8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002D1B00()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1002D1B40(uint64_t a1, _DWORD *a2, char a3)
{
  sub_1002CFED4(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void (**)(void))(v3 + 24));
}

uint64_t sub_1002D1B50(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002D1B9C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1002D1BE4()
{
  sub_1002CF0F4(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1002D1BF0(void *a1, uint64_t a2)
{
  sub_1002CF2F4(a1, a2, *(void (**)(void, uint64_t))(v2 + 16));
}

uint64_t sub_1002D1BF8()
{
  return swift_deallocObject();
}

uint64_t sub_1002D1C3C()
{
  return swift_deallocObject();
}

uint64_t sub_1002D1C54()
{
  return swift_deallocObject();
}

uint64_t sub_1002D1C64()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10001457C((uint64_t)v2, &qword_1007FA1D0);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_100806D28;
  *(void *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    v11[2] = v6;
    v11[3] = v7;
  }
  swift_task_create();
  return swift_release();
}

id sub_1002D1E90()
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

id sub_1002D1F50(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_100040D64(a1, a2);
  id v5 = sub_1002D1E90();
  sub_100040DD0(a1, a2);
  id v6 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v5];

  return v6;
}

void sub_1002D2184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2
    && (a1 == 0xD000000000000011 && a2 == 0x8000000100696690
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    sub_10001B220(a3, (uint64_t)v7, &qword_1007FAD50);
    if (v8)
    {
      sub_10001B284(0, &qword_100806D30);
      if (swift_dynamicCast())
      {
        id v4 = [v6 progress];
        unsigned int v5 = [v4 isFinished];

        if (v5) {
          sub_1002D1C64();
        }
      }
    }
    else
    {
      sub_10001457C((uint64_t)v7, &qword_1007FAD50);
    }
  }
}

uint64_t sub_1002D22B0(uint64_t a1)
{
  return sub_1002CDFA8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1002D22BC(uint64_t a1)
{
  return sub_100184258(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1002D22C4(uint64_t a1)
{
  return sub_100183F08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002D22E0()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_100800978) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800980);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
  }
  unint64_t v6 = (((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002D2450()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_100800978) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(NSObject **)(v0 + v4);
  unint64_t v6 = *(void **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *(void *)(v0 + v3);
  unint64_t v8 = *(void *)(v0 + v3 + 8);

  sub_1002CE1FC(v0 + v2, v7, v8, v5, v6);
}

uint64_t sub_1002D24FC()
{
  return swift_deallocObject();
}

uint64_t sub_1002D250C()
{
  return swift_deallocObject();
}

uint64_t sub_1002D2544()
{
  return sub_1002CC06C(*(void **)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

void sub_1002D254C()
{
  sub_1002CC968(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1002D255C()
{
  return swift_deallocObject();
}

uint64_t sub_1002D2570()
{
  return swift_deallocObject();
}

void sub_1002D25B8()
{
  sub_1002CD838(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1002D25CC()
{
  return swift_deallocObject();
}

uint64_t sub_1002D25DC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002D2614()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10002C194;
  unint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10080E368 + dword_10080E368);
  unint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_1002D1718;
  return v4();
}

uint64_t sub_1002D26F8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002D2734()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002D277C(uint64_t a1)
{
  return sub_1002CD0D8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_1002D2788(uint64_t a1)
{
  sub_1001841C4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1002D27A0(uint64_t a1)
{
  return sub_100183EC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002D27BC()
{
  if (*(void *)(v0 + 32))
  {
    sub_100040DD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002D281C()
{
  sub_1002CD27C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1002D2830()
{
  return swift_deallocObject();
}

id sub_1002D2840(id result, unint64_t a2, void *a3)
{
  if (a3)
  {
    sub_100040D64((uint64_t)result, a2);
    return a3;
  }
  return result;
}

uint64_t sub_1002D2880(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_1002D288C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1002D2898(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002D2938(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[6];
    char v8 = *((unsigned char *)a2 + 56);
    sub_100026CCC(v7, v8);
    *(void *)(v4 + 48) = v7;
    *(unsigned char *)(v4 + 56) = v8;
    uint64_t v9 = a3[8];
    int64_t v10 = (void *)(v4 + v9);
    unint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *int64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[9];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    sub_100026CCC(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    *(unsigned char *)(v15 + 8) = v18;
    uint64_t v19 = a3[10];
    uint64_t v20 = a3[11];
    uint64_t v21 = v4 + v19;
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = *v22;
    LOBYTE(v22) = *((unsigned char *)v22 + 8);
    *(void *)uint64_t v21 = v23;
    *(unsigned char *)(v21 + 8) = (_BYTE)v22;
    *(void *)(v4 + v20) = *(uint64_t *)((char *)a2 + v20);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1002D2AEC(uint64_t a1, uint64_t a2)
{
  sub_100026DF8(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(a1 + *(int *)(a2 + 36)), *(unsigned char *)(a1 + *(int *)(a2 + 36) + 8));

  return swift_release();
}

uint64_t sub_1002D2BBC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  sub_100026CCC(v6, v7);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  int64_t v10 = (void *)(a2 + v8);
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for Calendar();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_100026CCC(*(void *)v14, v16);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = v16;
  uint64_t v17 = a3[10];
  uint64_t v18 = a3[11];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_retain();
  return a1;
}

uint64_t sub_1002D2D24(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = a2[6];
  char v10 = *((unsigned char *)a2 + 56);
  sub_100026CCC(v9, v10);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  sub_100026DF8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_10001457C(a1 + v13, &qword_1007F9480);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_100026CCC(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  sub_100026DF8(v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = (_BYTE)v26;
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1002D2ECC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for Calendar();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1002D3028(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  sub_100026DF8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_10001457C(a1 + v10, &qword_1007F9480);
    uint64_t v13 = sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for Calendar();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  uint64_t v19 = *(void *)v16;
  char v20 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = (_BYTE)v17;
  sub_100026DF8(v19, v20);
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  char v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = (_BYTE)v23;
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1002D31C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D31D4);
}

uint64_t sub_1002D31D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100010218(&qword_1008155B0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1002D3280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D3294);
}

uint64_t sub_1002D3294(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 56) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_100010218(&qword_1008155B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for InsightsJournaledDaysView()
{
  uint64_t result = qword_100806DA8;
  if (!qword_100806DA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002D3388()
{
  sub_1002D343C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1002D343C()
{
  if (!qword_1007F94F8)
  {
    type metadata accessor for Calendar();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007F94F8);
    }
  }
}

uint64_t sub_1002D3494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002D34B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v70 = a1;
  uint64_t v72 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v69 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  id v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100010218(&qword_100806DF8);
  __chkstk_darwin(v67);
  uint64_t v64 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for ColorResource();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v58 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ColorScheme();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  unint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100010218(&qword_100806E00) - 8;
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100806E08);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100806E10);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100806E18);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  char v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_100806E20);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100010218(&qword_100806E28);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v26 = sub_100010218(&qword_100806E30);
  sub_1002D3ECC(v2, (uint64_t)&v12[*(int *)(v26 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v12, (uint64_t)v16, &qword_100806E08);
  id v28 = &v16[*(int *)(v14 + 44)];
  *(void *)id v28 = KeyPath;
  v28[8] = 1;
  sub_10001457C((uint64_t)v12, &qword_100806E08);
  uint64_t v29 = enum case for BlendMode.plusDarker(_:);
  uint64_t v30 = type metadata accessor for BlendMode();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104);
  v31(v9, v29, v30);
  v31(&v9[*(int *)(v54 + 48)], enum case for BlendMode.plusLighter(_:), v30);
  sub_10001B220((uint64_t)v9, (uint64_t)&v20[*(int *)(v18 + 44)], &qword_100806E00);
  sub_10001B220((uint64_t)v16, (uint64_t)v20, &qword_100806E10);
  sub_10001457C((uint64_t)v9, &qword_100806E00);
  sub_10001457C((uint64_t)v16, &qword_100806E10);
  uint64_t v32 = v56;
  uint64_t v33 = v55;
  uint64_t v34 = v57;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for ColorScheme.dark(_:), v57);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = (uint64_t *)&v24[*(int *)(v22 + 44)];
  uint64_t v37 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v34);
  uint64_t *v36 = v35;
  sub_10001B220((uint64_t)v20, (uint64_t)v24, &qword_100806E18);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  sub_10001457C((uint64_t)v20, &qword_100806E18);
  sub_100010218(&qword_100800168);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1006D6270;
  if (qword_1007F7F78 != -1) {
    swift_once();
  }
  uint64_t v39 = v60;
  uint64_t v40 = sub_100026A54(v60, (uint64_t)qword_10083EF88);
  os_log_type_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  id v42 = v58;
  v41(v58, v40, v39);
  *(void *)(v38 + 32) = Color.init(_:)();
  if (qword_1007F7F60 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_100026A54(v39, (uint64_t)qword_10083EF40);
  v41(v42, v43, v39);
  *(void *)(v38 + 40) = Color.init(_:)();
  *(void *)&long long v73 = v38;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  swift_bridgeObjectRelease();
  long long v77 = v80;
  long long v78 = v81;
  uint64_t v79 = v82;
  long long v73 = v80;
  long long v74 = v81;
  uint64_t v75 = v82;
  __int16 v76 = 256;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800170);
  sub_100014488(&qword_100800178, &qword_100800170);
  uint64_t v44 = AnyView.init<A>(_:)();
  uint64_t v45 = v64;
  sub_10001B220((uint64_t)v24, v64, &qword_100806E20);
  uint64_t v46 = v67;
  *(void *)(v45 + *(int *)(v67 + 36)) = v44;
  uint64_t v47 = v65;
  static ContainerBackgroundPlacement.widget.getter();
  unint64_t v48 = sub_1002D6B40();
  os_log_type_t v49 = v61;
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v68);
  sub_10001457C(v45, &qword_100806DF8);
  sub_100179324((uint64_t)&v80);
  sub_10001457C((uint64_t)v24, &qword_100806E20);
  id v50 = v69;
  static AccessibilityChildBehavior.combine.getter();
  *(void *)&long long v73 = v46;
  *((void *)&v73 + 1) = &type metadata for LinearGradient;
  *(void *)&long long v74 = v48;
  *((void *)&v74 + 1) = &protocol witness table for LinearGradient;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v63;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v49, v51);
}

uint64_t sub_1002D3ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = sub_100010218(&qword_100800618);
  __chkstk_darwin(v68);
  long long v73 = (uint64_t *)((char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ContentTransition();
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100010218(&qword_100806E70);
  __chkstk_darwin(v67);
  uint64_t v8 = (_OWORD *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = sub_100010218(&qword_100806E78);
  __chkstk_darwin(v70);
  uint64_t v75 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v74 = (uint64_t)&v57 - v11;
  uint64_t v12 = sub_100010218(&qword_100806E80);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = sub_100010218(&qword_100806E88);
  __chkstk_darwin(v18 - 8);
  char v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v76 = (uint64_t)&v57 - v22;
  sub_1002D45F8((uint64_t)&v57 - v22);
  uint64_t v23 = *(void *)(a1 + 48);
  char v24 = *(unsigned char *)(a1 + 56);
  sub_100026CCC(v23, v24);
  char v25 = sub_100666714(v23, v24);
  sub_100026DF8(v23, v24);
  if (v25)
  {
    uint64_t v64 = v20;
    id v65 = v17;
    uint64_t v66 = a2;
    uint64_t v62 = static VerticalAlignment.firstTextBaseline.getter();
    sub_1002D4FF8((uint64_t)&v89);
    long long v26 = v89;
    char v27 = v90;
    uint64_t v58 = v91;
    uint64_t v59 = *((void *)&v90 + 1);
    char v28 = BYTE8(v91);
    uint64_t v60 = *((void *)&v92 + 1);
    uint64_t v61 = v92;
    char v29 = v93;
    uint64_t v63 = *((void *)&v93 + 1);
    uint64_t v57 = static Font.footnote.getter();
    uint64_t KeyPath = swift_getKeyPath();
    int v31 = static HierarchicalShapeStyle.secondary.getter();
    char v80 = 0;
    char v79 = v27;
    char v78 = v28;
    char v77 = v29;
    uint64_t v32 = swift_getKeyPath();
    long long v81 = (unint64_t)v62;
    v82[0] = v80;
    *(_OWORD *)&v82[8] = v26;
    v82[24] = v79;
    *(void *)&long long v83 = v59;
    *((void *)&v83 + 1) = v58;
    LOBYTE(v84) = v78;
    *((void *)&v84 + 1) = v61;
    *(void *)&long long v85 = v60;
    BYTE8(v85) = v77;
    *(void *)&long long v86 = v63;
    *((void *)&v86 + 1) = KeyPath;
    *(void *)&long long v87 = v57;
    DWORD2(v87) = v31;
    *(void *)&long long v88 = v32;
    *((void *)&v88 + 1) = 0x3FE3333333333333;
    char v33 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    long long v95 = v86;
    long long v96 = v87;
    long long v97 = v88;
    long long v91 = *(_OWORD *)&v82[16];
    long long v92 = v83;
    long long v93 = v84;
    long long v94 = v85;
    long long v89 = v81;
    long long v90 = *(_OWORD *)v82;
    LOBYTE(v98) = v33;
    *((void *)&v98 + 1) = v34;
    *(void *)&v99[0] = v35;
    *((void *)&v99[0] + 1) = v36;
    *(void *)&v99[1] = v37;
    BYTE8(v99[1]) = 0;
    uint64_t v38 = v69;
    static ContentTransition.numericText(countsDown:)();
    uint64_t v39 = swift_getKeyPath();
    uint64_t v41 = v72;
    uint64_t v40 = v73;
    uint64_t v42 = v71;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))((char *)v73 + *(int *)(v68 + 28), v38, v72);
    *uint64_t v40 = v39;
    sub_10001B220((uint64_t)v40, (uint64_t)v8 + *(int *)(v67 + 36), &qword_100800618);
    long long v43 = v98;
    v8[8] = v97;
    v8[9] = v43;
    v8[10] = v99[0];
    *(_OWORD *)((char *)v8 + 169) = *(_OWORD *)((char *)v99 + 9);
    long long v44 = v94;
    v8[4] = v93;
    v8[5] = v44;
    long long v45 = v96;
    v8[6] = v95;
    v8[7] = v45;
    long long v46 = v90;
    *uint64_t v8 = v89;
    v8[1] = v46;
    long long v47 = v92;
    v8[2] = v91;
    v8[3] = v47;
    sub_1002D6DFC((uint64_t)&v89);
    sub_10001457C((uint64_t)v40, &qword_100800618);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v41);
    sub_1002D6EA0((uint64_t)&v81);
    if (qword_1007F6BD8 != -1) {
      swift_once();
    }
    uint64_t v48 = qword_10083D1D0;
    uint64_t v49 = v75;
    sub_10001B220((uint64_t)v8, v75, &qword_100806E70);
    *(void *)(v49 + *(int *)(v70 + 36)) = v48;
    swift_retain();
    sub_10001457C((uint64_t)v8, &qword_100806E70);
    uint64_t v50 = v74;
    sub_10002C4EC(v49, v74, &qword_100806E78);
    sub_10001B220(v50, v49, &qword_100806E78);
    *(void *)uint64_t v14 = 0x4030000000000000;
    v14[8] = 0;
    uint64_t v51 = sub_100010218(&qword_100806EA0);
    sub_10001B220(v49, (uint64_t)&v14[*(int *)(v51 + 48)], &qword_100806E78);
    sub_10001457C(v50, &qword_100806E78);
    sub_10001457C(v49, &qword_100806E78);
    uint64_t v52 = sub_100010218(&qword_100806E90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v14, 0, 1, v52);
    uint64_t v17 = v65;
    sub_10002C4EC((uint64_t)v14, (uint64_t)v65, &qword_100806E80);
    a2 = v66;
    char v20 = v64;
  }
  else
  {
    uint64_t v53 = sub_100010218(&qword_100806E90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v17, 1, 1, v53);
  }
  uint64_t v54 = v76;
  sub_10001B220(v76, (uint64_t)v20, &qword_100806E88);
  sub_10001B220((uint64_t)v17, (uint64_t)v14, &qword_100806E80);
  sub_10001B220((uint64_t)v20, a2, &qword_100806E88);
  uint64_t v55 = sub_100010218(&qword_100806E98);
  sub_10001B220((uint64_t)v14, a2 + *(int *)(v55 + 48), &qword_100806E80);
  sub_10001457C((uint64_t)v17, &qword_100806E80);
  sub_10001457C(v54, &qword_100806E88);
  sub_10001457C((uint64_t)v14, &qword_100806E80);
  return sub_10001457C((uint64_t)v20, &qword_100806E88);
}

uint64_t sub_1002D45F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v82 = a1;
  uint64_t v79 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v79);
  char v80 = (char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v3 - 8);
  char v78 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  char v77 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  __chkstk_darwin(v7);
  id v65 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  __chkstk_darwin(v9);
  v63[1] = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1007F8E58);
  uint64_t v66 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v83 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v64 = (char *)v63 - v14;
  uint64_t v15 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for AttributedString();
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v76 = v16;
  __chkstk_darwin(v16);
  uint64_t v72 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v74 = (char *)v63 - v19;
  __chkstk_darwin(v20);
  long long v73 = (char *)v63 - v21;
  uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v22);
  char v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v25 - 8);
  char v27 = (char *)v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for InsightsJournaledDaysView();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)v1;
  int v32 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v81 = v1;
  sub_1002D6F4C(v1, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
  uint64_t v67 = v28;
  if (v32 == 1)
  {
    char v33 = v30[*(int *)(v28 + 40) + 8];
    uint64_t v34 = swift_retain();
    uint64_t v35 = sub_100666C70(v34, v33);
    swift_release();
    swift_getKeyPath();
    uint64_t v85 = v35;
    sub_1002D7014((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v36 = v35 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1002D6F4C(v36, (uint64_t)v27, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1007FF080);
    sub_1002D6FB4((uint64_t)v27, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    uint64_t v37 = *(void *)&v24[*(int *)(v22 + 32)];
    uint64_t v38 = sub_100650E60(v37);
    uint64_t v40 = v39;
    LOBYTE(v36) = v41 & 1;
    uint64_t v31 = sub_100650F04(v38, v39, v41 & 1, 1 << *(unsigned char *)(v37 + 32), *(_DWORD *)(v37 + 36), 0);
    sub_1000733B8(v38, v40, v36);
    sub_10001457C((uint64_t)v24, (uint64_t *)&unk_1007FF080);
  }
  sub_1002D6FB4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v42._countAndFlagsBits = 0x656C616E72756F4ALL;
  v42._object = (void *)0xEC0000002A2A2064;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
  long long v84 = (double *)v31;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  uint64_t v43 = *(void *)(v81 + 48);
  char v44 = *(unsigned char *)(v81 + 56);
  sub_100026CCC(v43, v44);
  char v45 = sub_100666714(v43, v44);
  sub_100026DF8(v43, v44);
  long long v46 = v65;
  if (v45) {
    static NumberFormatStyleConfiguration.Notation.automatic.getter();
  }
  else {
    static NumberFormatStyleConfiguration.Notation.compactName.getter();
  }
  long long v47 = v64;
  uint64_t v48 = v83;
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v69);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v66 + 8);
  v49(v48, v11);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  sub_100014344();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
  v49(v47, v11);
  v50._countAndFlagsBits = 673196586;
  v50._object = (void *)0xE400000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v50);
  long long v84 = (double *)v31;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v51._countAndFlagsBits = 0x737961442029;
  v51._object = (void *)0xE600000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v51);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v78, 1, 1, v71);
  long long v84 = _swiftEmptyArrayStorage;
  sub_1002D7014(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v52 = v73;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t v54 = v74;
  uint64_t v53 = v75;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  uint64_t v56 = v76;
  v55(v74, v52, v76);
  uint64_t v57 = Namespace.wrappedValue.getter();
  uint64_t v58 = (uint64_t)v72;
  v55(v72, v54, v56);
  static UnitPoint.center.getter();
  sub_10063063C(v58, v57, (uint64_t)sub_100292BF0, 0, v82, v59, v60);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v53 + 8);
  v61(v54, v56);
  return ((uint64_t (*)(char *, uint64_t))v61)(v52, v56);
}

uint64_t sub_1002D4FF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1002D50F0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_1002D5E10();
  uint64_t v11 = v10;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  char v13 = v12 & 1;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v12 & 1;
  *(void *)(a1 + 72) = v14;
  sub_1000C04A4(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002D50F0()
{
  uint64_t v1 = sub_100010218(&qword_100806EA8);
  uint64_t v95 = *(void *)(v1 - 8);
  uint64_t v96 = v1;
  __chkstk_darwin(v1);
  long long v94 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  __chkstk_darwin(v3);
  uint64_t v85 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100010218(&qword_100806EB0);
  uint64_t v86 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  long long v84 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100010218(&qword_1008006B8);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributeContainer();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  __chkstk_darwin(v7);
  long long v83 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v88 = (char *)&v69 - v10;
  __chkstk_darwin(v11);
  long long v87 = (char *)&v69 - v12;
  uint64_t v74 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v74);
  uint64_t v75 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v14 - 8);
  long long v73 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v72 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for AttributedString();
  uint64_t v81 = *(void *)(v19 - 8);
  uint64_t v82 = v19;
  __chkstk_darwin(v19);
  uint64_t v79 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v80 = (char *)&v69 - v22;
  uint64_t v71 = type metadata accessor for Date();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  char v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v25 - 8);
  char v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InsightsJournaledDaysView();
  __chkstk_darwin(v31);
  char v33 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(v0 + 16);
  char v35 = *(unsigned char *)(v0 + 24);
  sub_1002D6F4C(v0, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
  if (v35)
  {
    char v36 = v33[*(int *)(v31 + 40) + 8];
    uint64_t v37 = swift_retain();
    uint64_t v38 = sub_100666C70(v37, v36);
    swift_release();
    swift_getKeyPath();
    uint64_t v98 = v38;
    sub_1002D7014((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v39 = v38 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1002D6F4C(v39, (uint64_t)v30, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)&v30[*(int *)(v28 + 24)], (uint64_t)v27, (uint64_t *)&unk_1007FF080);
    sub_1002D6FB4((uint64_t)v30, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    static Date.now.getter();
    uint64_t v34 = sub_100650BCC((uint64_t)v24);
    uint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v71);
    sub_10001457C((uint64_t)v27, (uint64_t *)&unk_1007FF080);
    sub_1002D6FB4((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = 0;
    }
  }
  else
  {
    sub_1002D6FB4((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v42._countAndFlagsBits = 10794;
  v42._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
  unint64_t v97 = v34;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v43._countAndFlagsBits = 0x20736968540A2A2ALL;
  v43._object = (void *)0xED000068746E6F4DLL;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v43);
  String.LocalizationValue.init(stringInterpolation:)();
  uint64_t v44 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v73, 1, 1, v44);
  unint64_t v97 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1002D7014(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  char v45 = v80;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_10017AB0C();
  long long v47 = v76;
  static AttributeContainer.subscript.getter();
  swift_release();
  unint64_t v97 = 2;
  uint64_t v48 = v87;
  uint64_t v49 = v78;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v49);
  uint64_t v50 = swift_getKeyPath();
  __chkstk_darwin(v50);
  swift_getKeyPath();
  sub_1002D70A4();
  Swift::String v51 = v84;
  static AttributeContainer.subscript.getter();
  swift_release();
  static Font.title.getter();
  Font.bold()();
  swift_release();
  uint64_t v53 = v90;
  uint64_t v52 = v91;
  uint64_t v54 = v85;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v85, enum case for Font.Leading.tight(_:), v91);
  uint64_t v55 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
  unint64_t v97 = v55;
  uint64_t v56 = v83;
  uint64_t v57 = v89;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v51, v57);
  uint64_t v58 = swift_getKeyPath();
  __chkstk_darwin(v58);
  swift_getKeyPath();
  sub_1002D7118();
  double v59 = v94;
  AttributeContainer.subscript.getter();
  swift_release();
  double v60 = *(void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v61 = v56;
  uint64_t v62 = v93;
  v60(v61, v93);
  unint64_t v97 = 0xBFF0000000000000;
  uint64_t v63 = v88;
  uint64_t v64 = v96;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v59, v64);
  AttributedString.replaceAttributes(_:with:)();
  v60(v63, v62);
  v60(v48, v62);
  uint64_t v66 = v81;
  uint64_t v65 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v79, v45, v82);
  uint64_t v67 = Text.init(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v65);
  return v67;
}

uint64_t sub_1002D5E10()
{
  uint64_t v1 = sub_100010218(&qword_100806EA8);
  uint64_t v95 = *(void *)(v1 - 8);
  uint64_t v96 = v1;
  __chkstk_darwin(v1);
  long long v94 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  __chkstk_darwin(v3);
  uint64_t v85 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100010218(&qword_100806EB0);
  uint64_t v86 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  long long v84 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100010218(&qword_1008006B8);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributeContainer();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  __chkstk_darwin(v7);
  long long v83 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v88 = (char *)&v69 - v10;
  __chkstk_darwin(v11);
  long long v87 = (char *)&v69 - v12;
  uint64_t v74 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v74);
  uint64_t v75 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v14 - 8);
  long long v73 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v72 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for AttributedString();
  uint64_t v81 = *(void *)(v19 - 8);
  uint64_t v82 = v19;
  __chkstk_darwin(v19);
  uint64_t v79 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v80 = (char *)&v69 - v22;
  uint64_t v71 = type metadata accessor for Date();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  char v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v25 - 8);
  char v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InsightsJournaledDaysView();
  __chkstk_darwin(v31);
  char v33 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(v0 + 32);
  char v35 = *(unsigned char *)(v0 + 40);
  sub_1002D6F4C(v0, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
  if (v35)
  {
    char v36 = v33[*(int *)(v31 + 40) + 8];
    uint64_t v37 = swift_retain();
    uint64_t v38 = sub_100666C70(v37, v36);
    swift_release();
    swift_getKeyPath();
    uint64_t v98 = v38;
    sub_1002D7014((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v39 = v38 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1002D6F4C(v39, (uint64_t)v30, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)&v30[*(int *)(v28 + 28)], (uint64_t)v27, (uint64_t *)&unk_1007FF080);
    sub_1002D6FB4((uint64_t)v30, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    static Date.now.getter();
    uint64_t v34 = sub_100650BCC((uint64_t)v24);
    uint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v71);
    sub_10001457C((uint64_t)v27, (uint64_t *)&unk_1007FF080);
    sub_1002D6FB4((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = 0;
    }
  }
  else
  {
    sub_1002D6FB4((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for InsightsJournaledDaysView);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v42._countAndFlagsBits = 10794;
  v42._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
  unint64_t v97 = v34;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v43._countAndFlagsBits = 0x20736968540A2A2ALL;
  v43._object = (void *)0xEC00000072616559;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v43);
  String.LocalizationValue.init(stringInterpolation:)();
  uint64_t v44 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v73, 1, 1, v44);
  unint64_t v97 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1002D7014(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  char v45 = v80;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_10017AB0C();
  long long v47 = v76;
  static AttributeContainer.subscript.getter();
  swift_release();
  unint64_t v97 = 2;
  uint64_t v48 = v87;
  uint64_t v49 = v78;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v49);
  uint64_t v50 = swift_getKeyPath();
  __chkstk_darwin(v50);
  swift_getKeyPath();
  sub_1002D70A4();
  Swift::String v51 = v84;
  static AttributeContainer.subscript.getter();
  swift_release();
  static Font.title.getter();
  Font.bold()();
  swift_release();
  uint64_t v53 = v90;
  uint64_t v52 = v91;
  uint64_t v54 = v85;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v85, enum case for Font.Leading.tight(_:), v91);
  uint64_t v55 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
  unint64_t v97 = v55;
  uint64_t v56 = v83;
  uint64_t v57 = v89;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v51, v57);
  uint64_t v58 = swift_getKeyPath();
  __chkstk_darwin(v58);
  swift_getKeyPath();
  sub_1002D7118();
  double v59 = v94;
  AttributeContainer.subscript.getter();
  swift_release();
  double v60 = *(void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v61 = v56;
  uint64_t v62 = v93;
  v60(v61, v93);
  unint64_t v97 = 0xBFF0000000000000;
  uint64_t v63 = v88;
  uint64_t v64 = v96;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v59, v64);
  AttributedString.replaceAttributes(_:with:)();
  v60(v63, v62);
  v60(v48, v62);
  uint64_t v66 = v81;
  uint64_t v65 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v79, v45, v82);
  uint64_t v67 = Text.init(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v65);
  return v67;
}

unint64_t sub_1002D6B40()
{
  unint64_t result = qword_100806E38;
  if (!qword_100806E38)
  {
    sub_100014440(&qword_100806DF8);
    sub_1002D6BE0();
    sub_100014488(&qword_100800188, &qword_100800190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806E38);
  }
  return result;
}

unint64_t sub_1002D6BE0()
{
  unint64_t result = qword_100806E40;
  if (!qword_100806E40)
  {
    sub_100014440(&qword_100806E20);
    sub_1002D6C80();
    sub_100014488(&qword_100800158, &qword_100800120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806E40);
  }
  return result;
}

unint64_t sub_1002D6C80()
{
  unint64_t result = qword_100806E48;
  if (!qword_100806E48)
  {
    sub_100014440(&qword_100806E18);
    sub_1002D6D20();
    sub_100014488(&qword_100806E60, &qword_100806E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806E48);
  }
  return result;
}

unint64_t sub_1002D6D20()
{
  unint64_t result = qword_100806E50;
  if (!qword_100806E50)
  {
    sub_100014440(&qword_100806E10);
    sub_100014488(&qword_100806E58, &qword_100806E08);
    sub_100014488(&qword_100800148, &qword_100800150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806E50);
  }
  return result;
}

uint64_t sub_1002D6DFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  sub_1000C04A4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1000C04A4(v2, v3, v4);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1002D6EA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  sub_10002B8D0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_10002B8D0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1002D6F4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002D6FB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002D7014(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002D7068()
{
  return 8;
}

uint64_t sub_1002D7074()
{
  return swift_release();
}

uint64_t sub_1002D707C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1002D7090(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1002D70A4()
{
  unint64_t result = qword_100806EB8;
  if (!qword_100806EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806EB8);
  }
  return result;
}

uint64_t sub_1002D70FC()
{
  return 8;
}

unint64_t sub_1002D7118()
{
  unint64_t result = qword_100806EC0;
  if (!qword_100806EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806EC0);
  }
  return result;
}

uint64_t sub_1002D7170()
{
  return 8;
}

uint64_t sub_1002D7184()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002D7240(uint64_t a1, uint64_t a2)
{
  static MainActor.shared.getter();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_1002DDEA0();
  if (v2) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    _StringGuts.grow(_:)(66);
    v8._object = (void *)0x8000000100696950;
    v8._countAndFlagsBits = 0xD00000000000003FLL;
    String.append(_:)(v8);
    v9._countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D73CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002D745C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002D74F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002D75C0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

double sub_1002D75FC()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 64);
}

double sub_1002D7688@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 64);
  *a2 = result;
  return result;
}

uint64_t sub_1002D771C()
{
  return swift_release();
}

uint64_t sub_1002D77E0(uint64_t result, double a2)
{
  *(double *)(result + 64) = a2;
  return result;
}

double sub_1002D77E8()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 80);
}

double sub_1002D7874@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1002D7908()
{
  return swift_release();
}

uint64_t sub_1002D79CC(uint64_t result, double a2)
{
  *(double *)(result + 80) = a2;
  return result;
}

uint64_t sub_1002D79D4()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1002D7A60@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 88);
  return result;
}

uint64_t sub_1002D7AF4()
{
  return swift_release();
}

uint64_t sub_1002D7BB0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 88) = a2;
  return result;
}

double sub_1002D7BB8()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime);
}

double sub_1002D7C4C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime);
  *a2 = result;
  return result;
}

uint64_t sub_1002D7CE8()
{
  return swift_release();
}

uint64_t sub_1002D7DAC()
{
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = [objc_allocWithZone((Class)AVPlayer) init];
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 0;
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime) = 0;
  uint64_t v3 = (_OWORD *)(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_playbackTimeObserverToken);
  *uint64_t v3 = 0u;
  v3[1] = 0u;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo) = 1;
  ObservationRegistrar.init()();
  sub_1002D7EF4();
  return v0;
}

void sub_1002D7EF4()
{
  id v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0];

  id v3 = [v1 defaultCenter];
  [v3 addObserver:v0 selector:"didPlayToEndWithNotification:" name:AVPlayerItemDidPlayToEndTimeNotification object:0];

  id v4 = [v1 defaultCenter];
  id v5 = [self sharedInstance];
  [v4 addObserver:v0 selector:"handleAudioSessionInterruption:" name:AVAudioSessionInterruptionNotification object:v5];
}

void sub_1002D802C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo;
  int v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo);
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (a1)
  {
    if (v5) {
      return;
    }
    uint64_t v6 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
    if (v7)
    {
      [v7 setAutomaticallyPublishesNowPlayingInfo:0];
      id v8 = *(id *)(v1 + v6);
    }
    else
    {
      id v8 = 0;
    }
    *(void *)(v2 + v6) = 0;
    goto LABEL_16;
  }
  if (*(unsigned char *)(v1 + 88) == 1) {
    int v9 = v5;
  }
  else {
    int v9 = 0;
  }
  if (v9 == 1 && *(unsigned char *)(v1 + v4) == 1)
  {
    uint64_t v10 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
    if (v11)
    {
      id v8 = *(id *)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
    }
    else
    {
      id v12 = sub_1002DB6F8();
      uint64_t v13 = *(void **)(v1 + v10);
      *(void *)(v1 + v10) = v12;
      id v8 = v12;

      uint64_t v11 = 0;
    }
    id v14 = v11;
    [v8 becomeActiveIfPossibleWithCompletion:0];
LABEL_16:
  }
}

uint64_t sub_1002D817C()
{
  sub_10001457C(v0 + 16, &qword_1007F9470);
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_playbackTimeObserverToken, &qword_1007FAD50);

  uint64_t v3 = v0 + OBJC_IVAR____TtC7Journal11AudioPlayer___observationRegistrar;
  uint64_t v4 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1002D82A8()
{
  return type metadata accessor for AudioPlayer();
}

uint64_t type metadata accessor for AudioPlayer()
{
  uint64_t result = qword_100806F20;
  if (!qword_100806F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002D82FC()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

id sub_1002D8424()
{
  id result = [self mapTableWithKeyOptions:0x10000 valueOptions:5];
  qword_100806EC8 = (uint64_t)result;
  return result;
}

double *sub_1002D8468(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    id result = (double *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (!a1) {
    return _swiftEmptyArrayStorage;
  }
  id result = (double *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  *((void *)result + 2) = a1;
  uint64_t v4 = result + 4;
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  id v8 = (int64x2_t *)(result + 6);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *id v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

double *sub_1002D855C(char a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    id result = (double *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return (double *)v4;
  }
  return result;
}

uint64_t sub_1002D8618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a5;
  v5[6] = type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  unint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_100807BE8 + dword_100807BE8);
  int64x2_t v7 = (void *)swift_task_alloc();
  v5[8] = v7;
  *int64x2_t v7 = v5;
  v7[1] = sub_1002D86E0;
  return v9(a4);
}

uint64_t sub_1002D86E0(uint64_t a1, double a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 72) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
    uint64_t v10 = sub_1002D8A28;
  }
  else
  {
    *(double *)(v6 + 80) = a2;
    swift_bridgeObjectRelease();
    *(void *)(v6 + 88) = a1;
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v11;
    uint64_t v10 = sub_1002D8884;
  }
  return _swift_task_switch(v10, v7, v9);
}

uint64_t sub_1002D8884()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[5];
  swift_release();
  swift_getKeyPath();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v1;
  v0[3] = v3;
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  v0[4] = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002D8A28()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to read audio intensity values: %@", v3, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002D8BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  type metadata accessor for MainActor();
  v5[12] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[13] = v7;
  v5[14] = v6;
  return _swift_task_switch(sub_1002D8C88, v7, v6);
}

uint64_t sub_1002D8C88()
{
  *(void *)(v0 + 120) = [*(id *)(v0 + 80) asset];
  sub_100010218(&qword_1008071B8);
  uint64_t v1 = static AVPartialAsyncProperty<A>.duration.getter();
  *(void *)(v0 + 128) = v1;
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_1002D8D70;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 16, v1);
}

uint64_t sub_1002D8D70()
{
  os_log_type_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[15];
  if (v0)
  {
    swift_errorRelease();
    swift_release();

    uint64_t v4 = v2[13];
    uint64_t v5 = v2[14];
    uint64_t v6 = sub_1002D9240;
  }
  else
  {
    swift_release();

    uint64_t v4 = v2[13];
    uint64_t v5 = v2[14];
    uint64_t v6 = sub_1002D8EDC;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1002D8EDC()
{
  uint64_t v1 = *((void *)v0 + 11);
  swift_release();
  id v2 = [*(id *)(v1 + 72) currentItem];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (void *)*((void *)v0 + 10);
    sub_10001B284(0, &qword_1008071C0);
    id v5 = v4;
    char v6 = static NSObject.== infix(_:_:)();

    if ((v6 & 1) != 0 && (CMTime.isIndefinite.getter() & 1) == 0)
    {
      uint64_t v7 = *((void *)v0 + 11);
      CMTime.seconds.getter();
      double v9 = v8;
      swift_getKeyPath();
      *((void *)v0 + 5) = v7;
      sub_1002DDCFC(&qword_100807168);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (vabdd_f64(v9, *(double *)(v7 + 80)) >= 0.01)
      {
        swift_retain_n();
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.error.getter();
        BOOL v12 = os_log_type_enabled(v10, v11);
        uint64_t v13 = *((void *)v0 + 11);
        if (v12)
        {
          uint64_t v14 = swift_slowAlloc();
          *(_DWORD *)uint64_t v14 = 134218240;
          v0[7] = v9;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v14 + 12) = 2048;
          swift_getKeyPath();
          *((void *)v0 + 8) = v13;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          v0[9] = *(double *)(v7 + 80);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "Player duration %f differs from initial value %f. Using player duration.", (uint8_t *)v14, 0x16u);
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }
        uint64_t v15 = *((void *)v0 + 11);

        swift_getKeyPath();
        uint64_t v16 = swift_task_alloc();
        *(void *)(v16 + 16) = v15;
        *(double *)(v16 + 24) = v9;
        *((void *)v0 + 6) = v15;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_task_dealloc();
      }
    }
  }
  uint64_t v17 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v17();
}

uint64_t sub_1002D9240()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D92A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v10 - 8);
  BOOL v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - v14;
  sub_1002D98B4();
  uint64_t v16 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
  uint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
  if (v17)
  {
    [v17 setAutomaticallyPublishesNowPlayingInfo:0];
    uint64_t v18 = *(void **)(v3 + v16);
  }
  else
  {
    uint64_t v18 = 0;
  }
  *(void *)(v3 + v16) = 0;

  uint64_t v19 = *(void **)(v3 + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
  uint64_t v43 = ObjectType;
  v21(ObjectType, a2);
  sub_10001B220((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100800A60);
  id v22 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    swift_retain_n();
    id v22 = sub_1002DD9F8((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release_n();
  }
  sub_10001457C((uint64_t)v15, (uint64_t *)&unk_100800A60);
  [v19 replaceCurrentItemWithPlayerItem:v22];

  uint64_t v23 = v43;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 32))(v44, v43, a2);
  swift_beginAccess();
  sub_100041190((uint64_t)v44, v3 + 16, &qword_1007F9470);
  swift_endAccess();
  v44[0] = a1;
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v40 = a1;
  uint64_t v25 = *(double (**)(uint64_t, uint64_t))(v24 + 24);
  double v26 = v25(v23, v24);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v39 - 2) = v3;
  *((double *)&v39 - 1) = v26;
  uint64_t v28 = v3 + OBJC_IVAR____TtC7Journal11AudioPlayer___observationRegistrar;
  v44[0] = v3;
  uint64_t v42 = sub_1002DDCFC(&qword_100807168);
  uint64_t v41 = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  v44[0] = a1;
  uint64_t v29 = v43;
  double v30 = v25(v43, v24);
  uint64_t v31 = swift_getKeyPath();
  __chkstk_darwin(v31);
  *(&v39 - 2) = v3;
  *((double *)&v39 - 1) = v30;
  v44[0] = v3;
  uint64_t v39 = v28;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v32 = swift_getKeyPath();
  __chkstk_darwin(v32);
  *(&v39 - 2) = v3;
  *((unsigned char *)&v39 - 8) = 0;
  v44[0] = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v33 = v40;
  v44[0] = v40;
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v29, v24);
  uint64_t v35 = swift_getKeyPath();
  __chkstk_darwin(v35);
  *(&v39 - 2) = v3;
  *(&v39 - 1) = v34;
  v44[0] = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  v44[0] = v33;
  double v36 = (*(double (**)(uint64_t, uint64_t))(v24 + 32))(v43, v24);
  uint64_t v37 = swift_getKeyPath();
  __chkstk_darwin(v37);
  *(&v39 - 2) = v3;
  *((double *)&v39 - 1) = v36;
  v44[0] = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_1002D98B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_playbackTimeObserverToken;
  swift_beginAccess();
  sub_10001B220(v1, (uint64_t)&v4, &qword_1007FAD50);
  if (!*((void *)&v5 + 1)) {
    return sub_10001457C((uint64_t)&v4, &qword_1007FAD50);
  }
  sub_10002102C(&v4, &v6);
  uint64_t v2 = *(void **)(v0 + 72);
  sub_10002E0BC(&v6, v7);
  [v2 removeTimeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  long long v4 = 0u;
  long long v5 = 0u;
  swift_beginAccess();
  sub_100041190((uint64_t)&v4, v1, &qword_1007FAD50);
  swift_endAccess();
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v6);
}

void sub_1002D99B8()
{
  CMTimeValue v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&value - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AudioManager(0);
  uint64_t v6 = sub_1002DDCFC(&qword_100805568);
  uint64_t v7 = swift_retain();
  sub_1003B3B70(v7, v6);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  type metadata accessor for MainActor();
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v5;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B380, (uint64_t)v10);
  swift_release();
  if (sub_1002D9D94())
  {
    uint64_t v11 = *(void **)(v1 + 72);
    CMTimeEpoch epoch = kCMTimeZero.epoch;
    CMTimeValue value = kCMTimeZero.value;
    uint64_t v24 = *(void *)&kCMTimeZero.timescale;
    [v11 seekToTime:&value kCMTimeZero.value v24 epoch];
  }
  else
  {
    swift_getKeyPath();
    CMTimeValue value = v1;
    sub_1002DDCFC(&qword_100807168);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!*(unsigned char *)(v1 + 88))
    {
      swift_getKeyPath();
      CMTimeValue value = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v13 = OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime;
      if ((*(void *)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime) & 0x7FFFFFFFFFFFFFFFLL) != 0)
      {
        uint64_t v14 = *(void **)(v1 + 72);
        swift_getKeyPath();
        CMTimeValue value = v1;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        __C::CMTime v25 = CMTime.init(seconds:preferredTimescale:)(*(Swift::Double *)(v1 + v13), 100);
        [v14 seekToTime:&value v25.value v25.timescale v25.epoch];
      }
    }
  }
  sub_1002D9EB8();
  [*(id *)(v1 + 72) play];
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&value - 2) = v1;
  *((unsigned char *)&value - 8) = 1;
  CMTimeValue value = v1;
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  uint64_t v16 = swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo) == 1)
  {
    uint64_t v17 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
    if (v18)
    {
      id v19 = *(id *)(v1 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
    }
    else
    {
      uint64_t v20 = (void *)sub_1002DB6F8(v16);
      uint64_t v21 = *(void **)(v1 + v17);
      *(void *)(v1 + v17) = v20;
      id v19 = v20;

      uint64_t v18 = 0;
    }
    id v22 = v18;
    [v19 becomeActiveIfPossibleWithCompletion:0];
  }
}

BOOL sub_1002D9D94()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 88) == 3) {
    return 1;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double v2 = *(double *)(v0 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime);
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return vabdd_f64(v2, *(double *)(v0 + 80)) < 0.01;
}

uint64_t sub_1002D9EB8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal11AudioPlayer_playbackTimeObserverToken;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v1 + 24))
  {
    __C::CMTime v19 = CMTime.init(seconds:preferredTimescale:)(0.01, 1000000000);
    Swift::Int64 value = v19.value;
    Swift::Int32 timescale = v19.timescale;
    Swift::Int64 epoch = v19.epoch;
    uint64_t v6 = HIDWORD(*(void *)&v19.timescale);
    uint64_t v7 = *(void **)(v0 + 72);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    uint64_t v17 = sub_1002DDE68;
    uint64_t v18 = v9;
    aBlock = _NSConcreteStackBlock;
    unint64_t v14 = 1107296256;
    uint64_t v15 = sub_1002DB33C;
    uint64_t v16 = &unk_1007A4098;
    uint64_t v10 = _Block_copy(&aBlock);
    swift_release();
    aBlock = (void **)value;
    unint64_t v14 = __PAIR64__(v6, timescale);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
    id v11 = [v7 addPeriodicTimeObserverForInterval:&aBlock queue:v8 usingBlock:v10];
    _Block_release(v10);

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10002C4EC((uint64_t)&aBlock, (uint64_t)v12, &qword_1007FAD50);
    swift_beginAccess();
    sub_100041190((uint64_t)v12, v1, &qword_1007FAD50);
    return swift_endAccess();
  }
  return result;
}

void sub_1002DA098()
{
  uint64_t v1 = v0;
  double v2 = *(void **)(v0 + 72);
  CMTimeEpoch epoch = kCMTimeZero.epoch;
  v8[0] = kCMTimeZero.value;
  v8[1] = *(void *)&kCMTimeZero.timescale;
  v8[2] = epoch;
  [v2 seekToTime:v8];
  swift_getKeyPath();
  v8[0] = v0;
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  uint64_t v7 = v0;
  v8[0] = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_1002D98B4();
  uint64_t v4 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
  uint64_t v5 = *(void **)(v7 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded);
  if (v5)
  {
    [v5 setAutomaticallyPublishesNowPlayingInfo:0];
    uint64_t v6 = *(void **)(v1 + v4);
  }
  else
  {
    uint64_t v6 = 0;
  }
  *(void *)(v1 + v4) = 0;

  if (qword_10083D488)
  {
    if (qword_10083D488 == v1)
    {
      type metadata accessor for AudioManager(0);
      sub_1003B3B70(0, 0);
      sub_1003A6CDC();
    }
  }
}

uint64_t sub_1002DA250(Swift::Double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 88) != 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v1;
    *((Swift::Double *)&v16 - 1) = a1;
    uint64_t v17 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
  }
  __C::CMTime v18 = CMTime.init(seconds:preferredTimescale:)(a1, 1000000000);
  Swift::Int64 value = v18.value;
  Swift::Int32 timescale = v18.timescale;
  Swift::Int64 epoch = v18.epoch;
  uint64_t v11 = HIDWORD(*(void *)&v18.timescale);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  *(void *)(v14 + 32) = v2;
  *(void *)(v14 + 40) = value;
  *(_DWORD *)(v14 + 48) = timescale;
  *(_DWORD *)(v14 + 52) = v11;
  *(void *)(v14 + 56) = epoch;
  sub_100328A60((uint64_t)v6, (uint64_t)&unk_100807188, v14);
  return swift_release();
}

uint64_t sub_1002DA498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[26] = a6;
  v7[27] = a7;
  unsigned char v7[24] = a4;
  v7[25] = a5;
  type metadata accessor for MainActor();
  v7[28] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[29] = v9;
  v7[30] = v8;
  return _swift_task_switch(sub_1002DA534, v9, v8);
}

uint64_t sub_1002DA534()
{
  uint64_t v1 = v0 + 2;
  uint64_t v3 = v0[26];
  uint64_t v2 = v0[27];
  uint64_t v4 = v0[25];
  uint64_t v5 = *(void **)(v0[24] + 72);
  v0[31] = v5;
  v0[2] = v0;
  v0[7] = v0 + 32;
  v0[3] = sub_1002DA690;
  uint64_t v6 = swift_continuation_init();
  v0[15] = kCMTimeZero.value;
  uint64_t v7 = v0 + 15;
  CMTimeScale timescale = kCMTimeZero.timescale;
  CMTimeFlags flags = kCMTimeZero.flags;
  CMTimeEpoch epoch = kCMTimeZero.epoch;
  *(v7 - 5) = _NSConcreteStackBlock;
  *(v7 - 4) = 0x40000000;
  *(v7 - 3) = sub_1002DA94C;
  *(v7 - 2) = &unk_1007A3F18;
  *(v7 - 1) = v6;
  v7[3] = v4;
  v7[4] = v3;
  v7[5] = v2;
  *((_DWORD *)v7 + 2) = timescale;
  *((_DWORD *)v7 + 3) = flags;
  v7[2] = epoch;
  v7[6] = kCMTimeZero.value;
  *((_DWORD *)v7 + 14) = timescale;
  *((_DWORD *)v7 + 15) = flags;
  v7[8] = epoch;
  [v5 seekToTime:v7 + 3 toleranceBefore:v7 toleranceAfter:v7 + 6 completionHandler:nil];
  return _swift_continuation_await(v1);
}

uint64_t sub_1002DA690()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  uint64_t v2 = *(void *)(*(void *)v0 + 232);
  return _swift_task_switch(sub_1002DA798, v2, v1);
}

uint64_t sub_1002DA798()
{
  swift_release();
  if (*(unsigned char *)(v0 + 256) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 192) + OBJC_IVAR____TtC7Journal11AudioPlayer_playbackTimeObserverToken;
    swift_beginAccess();
    if (!*(void *)(v1 + 24))
    {
      id v2 = [*(id *)(v0 + 248) currentItem];
      if (v2)
      {
        uint64_t v3 = v2;
        uint64_t v4 = *(void *)(v0 + 192);
        [v2 currentTime];

        CMTime.seconds.getter();
        uint64_t v6 = v5;
        swift_getKeyPath();
        uint64_t v7 = swift_task_alloc();
        *(void *)(v7 + 16) = v4;
        *(void *)(v7 + 24) = v6;
        *(void *)(v0 + 120) = v4;
        sub_1002DDCFC(&qword_100807168);
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_task_dealloc();
        sub_1002DA970();
      }
    }
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1002DA94C(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1002DA970()
{
  [*(id *)(v0 + 72) timeControlStatus];
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

id sub_1002DAA50()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 88) == 1) {
    uint64_t v1 = &selRef_rate;
  }
  else {
    uint64_t v1 = &selRef_defaultRate;
  }
  return [*(id *)(v0 + 72) *v1];
}

id sub_1002DAB00(float a1)
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 88) == 1)
  {
    *(float *)&double v3 = a1;
    [*(id *)(v1 + 72) setRate:v3];
  }
  *(float *)&double v3 = a1;
  return [*(id *)(v1 + 72) setDefaultRate:v3];
}

uint64_t sub_1002DABC8@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*(id *)(v1 + 72) currentItem];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 asset];

    if (v5)
    {
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        id v7 = [v6 URL];
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v8 = type metadata accessor for URL();
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
        uint64_t v10 = v8;
        uint64_t v11 = a1;
        uint64_t v12 = 0;
        goto LABEL_7;
      }
    }
  }
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v10 = v13;
  uint64_t v11 = a1;
  uint64_t v12 = 1;
LABEL_7:

  return v9(v11, v12, 1, v10);
}

BOOL sub_1002DACF8()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned char *)(v0 + 88) == 1;
}

BOOL sub_1002DAD8C()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned char *)(v0 + 88) == 2;
}

uint64_t sub_1002DAE30@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_10001B220(v1 + 16, a1, &qword_1007F9470);
}

uint64_t sub_1002DAE84(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = sub_10002E0BC(a1, v2);

  return sub_1002DD0A4((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1002DAEDC()
{
  [*(id *)(v0 + 72) pause];
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_1002D98B4();
}

uint64_t sub_1002DAFB4()
{
  return swift_bridgeObjectRetain();
}

double sub_1002DB044()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v1 + 80);
}

double sub_1002DB0D0()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v1 + 64);
}

uint64_t sub_1002DB15C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = a2;
  unint64_t v8 = HIDWORD(a2);
  type metadata accessor for MainActor();
  v10[2] = a4;
  v10[3] = a1;
  int v11 = v6;
  int v12 = v8;
  uint64_t v13 = a3;
  return sub_1002D7240((uint64_t)sub_1002DDE70, (uint64_t)v10);
}

uint64_t sub_1002DB1F4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    CMTime.seconds.getter();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_1002DDCFC(&qword_100807168);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002DB33C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);

  return swift_release();
}

uint64_t sub_1002DB3A8()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  id v2 = [self defaultCenter];
  if (qword_1007F6BB8 != -1) {
    swift_once();
  }
  [v2 postNotificationName:qword_10083D1A0 object:v1];

  return sub_1002D98B4();
}

void sub_1002DB4E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    int v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received playback finished notification", v6, 2u);
    swift_slowDealloc();
  }

  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_10002C4EC((uint64_t)v13, (uint64_t)v14, &qword_1007FAD50);
  if (v15)
  {
    sub_10001B284(0, &qword_1008071C0);
    if (swift_dynamicCast())
    {
      id v7 = *(void **)(v2 + 72);
      id v8 = v12;
      id v9 = [v7 currentItem];
      if (v9)
      {
        uint64_t v10 = v9;
        id v8 = v8;
        char v11 = static NSObject.== infix(_:_:)();

        if (v11) {
          sub_1002DB3A8();
        }
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10001457C((uint64_t)v14, &qword_1007FAD50);
  }
}

id sub_1002DB6F8()
{
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1006D6D00;
  uint64_t v2 = *(void **)(v0 + 72);
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  id v3 = objc_allocWithZone((Class)MPNowPlayingSession);
  sub_10001B284(0, &qword_100807190);
  id v4 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithPlayers:isa];

  [v6 setAutomaticallyPublishesNowPlayingInfo:1];
  id v7 = [v6 remoteCommandCenter];
  id v8 = [v7 playCommand];

  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDDB0;
  uint64_t v66 = v9;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A3F80;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_release();
  id v11 = [v8 addTargetWithHandler:v10];
  _Block_release(v10);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  id v12 = [v6 remoteCommandCenter];
  id v13 = [v12 stopCommand];

  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDDF8;
  uint64_t v66 = v14;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A3FA8;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = [v13 addTargetWithHandler:v15];
  _Block_release(v15);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  id v17 = [v6 remoteCommandCenter];
  id v18 = [v17 pauseCommand];

  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDE28;
  uint64_t v66 = v19;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A3FD0;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  id v21 = [v18 addTargetWithHandler:v20];
  _Block_release(v20);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  id v22 = [v6 remoteCommandCenter];
  id v23 = [v22 skipBackwardCommand];

  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1006D6D00;
  *(void *)(v24 + 32) = [objc_allocWithZone((Class)NSNumber) initWithDouble:15.0];
  aBlock = (void **)v24;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 setPreferredIntervals:v25];

  id v26 = [v6 remoteCommandCenter];
  id v27 = [v26 skipBackwardCommand];

  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDE30;
  uint64_t v66 = v28;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A3FF8;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_release();
  id v30 = [v27 addTargetWithHandler:v29];
  _Block_release(v29);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  id v31 = [v6 remoteCommandCenter];
  id v32 = [v31 skipForwardCommand];

  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1006D6D00;
  *(void *)(v33 + 32) = [objc_allocWithZone((Class)NSNumber) initWithDouble:15.0];
  aBlock = (void **)v33;
  specialized Array._endMutation()();
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 setPreferredIntervals:v34];

  id v35 = [v6 remoteCommandCenter];
  id v36 = [v35 skipForwardCommand];

  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDE38;
  uint64_t v66 = v37;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A4020;
  uint64_t v38 = _Block_copy(&aBlock);
  swift_release();
  id v39 = [v36 addTargetWithHandler:v38];
  _Block_release(v38);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  id v40 = [v6 remoteCommandCenter];
  id v41 = [v40 changePlaybackPositionCommand];

  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDE40;
  uint64_t v66 = v42;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A4048;
  uint64_t v43 = _Block_copy(&aBlock);
  swift_release();
  id v44 = [v41 addTargetWithHandler:v43];
  _Block_release(v43);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  id v45 = [v6 remoteCommandCenter];
  id v46 = [v45 changePlaybackRateCommand];

  if (qword_1007F6F48 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_10083D4C0;
  uint64_t v48 = *(void *)(qword_10083D4C0 + 16);
  if (v48)
  {
    aBlock = (void **)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v49 = 0;
    do
    {
      uint64_t v50 = v49 + 1;
      int v51 = *(_DWORD *)(v47 + 4 * v49 + 32);
      id v52 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v53) = v51;
      [v52 initWithFloat:v53];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v49 = v50;
    }
    while (v48 != v50);
    swift_bridgeObjectRelease();
  }
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v46 setSupportedPlaybackRates:v54];

  id v55 = [v6 remoteCommandCenter];
  id v56 = [v55 changePlaybackRateCommand];

  uint64_t v57 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = sub_1002DDE48;
  uint64_t v66 = v57;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1002DC20C;
  uint64_t v64 = &unk_1007A4070;
  uint64_t v58 = _Block_copy(&aBlock);
  swift_release();
  id v59 = [v56 addTargetWithHandler:v58];
  _Block_release(v58);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  return v6;
}

uint64_t sub_1002DC20C(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = v3();
  swift_release();

  return v5;
}

uint64_t sub_1002DC264(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (!swift_weakLoadStrong()) {
    return 200;
  }
  a3();
  swift_release();
  return 0;
}

uint64_t sub_1002DC2D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 200;
  }
  [*(id *)(Strong + 72) pause];
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_1002D98B4();
  swift_release();
  return 0;
}

uint64_t sub_1002DC40C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 200;
  }
  uint64_t v3 = Strong;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_release();
    return 200;
  }
  uint64_t v5 = (void *)v4;
  id v6 = a1;
  [v5 interval];
  double v8 = v7;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double v9 = *(double *)(v3 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime) - v8;
  if (v9 <= 0.0) {
    double v9 = 0.0;
  }
  sub_1002DA250(v9);
  swift_release();

  return 0;
}

uint64_t sub_1002DC544(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 200;
  }
  uint64_t v3 = Strong;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_release();
    return 200;
  }
  uint64_t v5 = (void *)v4;
  id v6 = a1;
  [v5 interval];
  double v8 = v7;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double v9 = v8 + *(double *)(v3 + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime);
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double v10 = *(double *)(v3 + 80);
  if (v10 >= v9) {
    double v10 = v9;
  }
  sub_1002DA250(v10);
  swift_release();

  return 0;
}

uint64_t sub_1002DC6B4(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      id v4 = a1;
      [v3 positionTime];
      sub_1002DA250(v5);
      swift_release();

      return 0;
    }
    swift_release();
  }
  return 200;
}

uint64_t sub_1002DC768(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 200;
  }
  uint64_t v3 = Strong;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_release();
    return 200;
  }
  Swift::Double v5 = (void *)v4;
  id v6 = a1;
  [v5 playbackRate];
  int v8 = v7;
  swift_getKeyPath();
  uint64_t v11 = v3;
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v3 + 88) == 1)
  {
    LODWORD(v9) = v8;
    [*(id *)(v3 + 72) setRate:v9, v3];
  }
  LODWORD(v9) = v8;
  [*(id *)(v3 + 72) setDefaultRate:v9, v11];
  swift_release();

  return 0;
}

uint64_t sub_1002DC8B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    return sub_10001457C((uint64_t)&v9, &qword_1007FAD50);
  }
  uint64_t v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10001B738((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_10001B648(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)v8);
  if (!*((void *)&v10 + 1)) {
    return sub_10001457C((uint64_t)&v9, &qword_1007FAD50);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) != 0 && v8[0] == 1)
  {
    [*(id *)(v1 + 72) pause];
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v8[0] = v1;
    sub_1002DDCFC(&qword_100807168);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return sub_1002D98B4();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioPlayer.PlaybackState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002DCC44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioPlayer.PlaybackState()
{
  return &type metadata for AudioPlayer.PlaybackState;
}

unint64_t sub_1002DCC80()
{
  unint64_t result = qword_100807160;
  if (!qword_100807160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807160);
  }
  return result;
}

uint64_t sub_1002DCCD4()
{
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(double *)(v0 + 80) != 0.0)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002DCDE4(double a1)
{
  uint64_t v3 = *v1;
  swift_getKeyPath();
  sub_1002DDCFC(&qword_100807168);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return sub_1002DA250(*(double *)(v3 + 80) * a1);
}

uint64_t sub_1002DCE88()
{
  return sub_1002DCCD4();
}

uint64_t sub_1002DCEAC(uint64_t a1)
{
  uint64_t result = sub_1002DDCFC(&qword_100807168);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002DCEF0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1002DDCFC(&qword_100807170);
  uint64_t result = sub_1002DDCFC(&qword_100807178);
  *(void *)(a1 + 16) = result;
  return result;
}

double sub_1002DCF68()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal11AudioPlayer__lastUpdatedTime) = result;
  return result;
}

uint64_t sub_1002DCF80()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DCFC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *long long v10 = v2;
  v10[1] = sub_100052588;
  return sub_1002DA498(a1, v4, v5, v6, v7, v9, v8);
}

void sub_1002DD094()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 88) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1002DD0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v68 = a2;
  uint64_t v69 = a1;
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  id v17 = (char *)&v58 - v16;
  v72[3] = a3;
  v72[4] = a4;
  id v18 = sub_100062E54(v72);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v18, v69, a3);
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_100800A60);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Tried to play attachment but couldn't find a valid url", v21, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v58 = v18;
    uint64_t v63 = v14;
    uint64_t v66 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v65 = v8;
    uint64_t v64 = v13;
    id v22 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 32);
    uint64_t v69 = v12;
    uint64_t v61 = v13 + 32;
    double v60 = v22;
    v22((unint64_t)v17, v11, v12);
    uint64_t v67 = v17;
    id v23 = sub_1002DD9F8((uint64_t)v17);
    uint64_t v24 = v68;
    if (*(unsigned char *)(v68 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo))
    {
      uint64_t v25 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
      if (!*(void *)(v68 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded))
      {
        id v26 = sub_1002DB6F8();
        id v27 = *(void **)(v24 + v25);
        *(void *)(v24 + v25) = v26;
      }
    }
    uint64_t v28 = *(void **)(v24 + 72);
    id v62 = v23;
    [v28 replaceCurrentItemWithPlayerItem:v23];
    sub_100141410((uint64_t)v72, (uint64_t)v71);
    sub_10002C4EC((uint64_t)v71, (uint64_t)v70, &qword_1007F9470);
    swift_beginAccess();
    sub_100041190((uint64_t)v70, v24 + 16, &qword_1007F9470);
    swift_endAccess();
    double v29 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4));
    double v31 = 0.0;
    if (v30) {
      double v32 = 0.0;
    }
    else {
      double v32 = v29;
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v58 - 2) = (uint64_t *)v24;
    *((double *)&v58 - 1) = v32;
    Class v34 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v24
                                                                 + OBJC_IVAR____TtC7Journal11AudioPlayer___observationRegistrar);
    v71[0] = v24;
    sub_1002DDCFC(&qword_100807168);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v35 = swift_getKeyPath();
    __chkstk_darwin(v35);
    *(&v58 - 2) = (uint64_t *)v24;
    *((unsigned char *)&v58 - 8) = 0;
    v71[0] = v24;
    id v59 = v34;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    if (v36)
    {
      unint64_t v37 = *(void *)(v36 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v37 = 0;
    }
    uint64_t v38 = v66;
    id v39 = sub_1002D8468(v37, 0.0001);
    uint64_t v40 = swift_getKeyPath();
    __chkstk_darwin(v40);
    *(&v58 - 2) = (uint64_t *)v24;
    *(&v58 - 1) = (uint64_t *)v39;
    v71[0] = v24;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v71[0] = v24;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((*(void *)(v24 + 80) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      swift_getKeyPath();
      v71[0] = v24;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      double v41 = (double)*(uint64_t *)(*(void *)(v24 + 56) + 16);
      swift_getKeyPath();
      v71[0] = v24;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      double v31 = floor(v41 / *(double *)(v24 + 80) + 0.2);
    }
    uint64_t v42 = swift_getKeyPath();
    __chkstk_darwin(v42);
    *(&v58 - 2) = (uint64_t *)v24;
    *((double *)&v58 - 1) = v31;
    v71[0] = v24;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v43 = type metadata accessor for TaskPriority();
    uint64_t v44 = *(void *)(v43 - 8);
    id v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
    uint64_t v66 = (char *)(v44 + 56);
    uint64_t v45 = v24;
    uint64_t v46 = (uint64_t)v65;
    v59(v65, 1, 1, v43);
    uint64_t v47 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v38, v67, v69);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v48 = static MainActor.shared.getter();
    unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v50 = v38;
    unint64_t v51 = (v63 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v48;
    *(void *)(v52 + 24) = &protocol witness table for MainActor;
    uint64_t v53 = v69;
    v60(v52 + v49, v50, v69);
    *(void *)(v52 + v51) = v45;
    sub_100328A60(v46, (uint64_t)&unk_1008071A0, v52);
    swift_release();
    v59((char *)v46, 1, 1, v43);
    swift_retain();
    id v54 = v62;
    uint64_t v55 = static MainActor.shared.getter();
    id v56 = (void *)swift_allocObject();
    v56[2] = v55;
    v56[3] = &protocol witness table for MainActor;
    v56[4] = v54;
    v56[5] = v45;
    sub_100328A60(v46, (uint64_t)&unk_1008071B0, (uint64_t)v56);

    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v67, v53);
  }
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v72);
}

id sub_1002DD9F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  id v4 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  id v8 = [v4 initWithURL:v6 options:0];

  id v9 = [objc_allocWithZone((Class)AVPlayerItem) initWithAsset:v8];
  sub_100010218((uint64_t *)&unk_1008010F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D70D0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v11;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v14;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v15 = String.init(localized:table:bundle:locale:comment:)();
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v15;
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v17;
  *(void *)(inited + 168) = &type metadata for UInt;
  *(void *)(inited + 144) = 1;
  *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 184) = v18;
  uint64_t v19 = type metadata accessor for URL();
  *(void *)(inited + 216) = v19;
  os_log_type_t v20 = sub_100062E54((uint64_t *)(inited + 192));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v20, a1, v19);
  sub_100396C34(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setNowPlayingInfo:isa];

  return v9;
}

uint64_t sub_1002DDCFC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioPlayer();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002DDD40()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002DDD78()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002DDDB0(uint64_t a1)
{
  return sub_1002DC264(a1, v1, sub_1002D99B8);
}

uint64_t sub_1002DDDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002DDDF0()
{
  return swift_release();
}

uint64_t sub_1002DDDF8(uint64_t a1)
{
  return sub_1002DC264(a1, v1, sub_1002DA098);
}

uint64_t sub_1002DDE28()
{
  return sub_1002DC2D0();
}

uint64_t sub_1002DDE30(void *a1)
{
  return sub_1002DC40C(a1);
}

uint64_t sub_1002DDE38(void *a1)
{
  return sub_1002DC544(a1);
}

uint64_t sub_1002DDE40(void *a1)
{
  return sub_1002DC6B4(a1);
}

uint64_t sub_1002DDE48(void *a1)
{
  return sub_1002DC768(a1);
}

double sub_1002DDE58()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 80) = result;
  return result;
}

uint64_t sub_1002DDE68(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1002DB15C(a1, a2, a3, v3);
}

uint64_t sub_1002DDE70()
{
  return sub_1002DB1F4();
}

uint64_t sub_1002DDE90()
{
  return swift_deallocObject();
}

uint64_t sub_1002DDEA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1002DDED0()
{
  return sub_1002DE214();
}

double sub_1002DDEF0()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 64) = result;
  return result;
}

uint64_t sub_1002DDF00()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DDFE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100052588;
  return sub_1002D8618(a1, v6, v7, v8, v9);
}

uint64_t sub_1002DE10C()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002DE154(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1002D8BF0(a1, v4, v5, v7, v6);
}

uint64_t sub_1002DE214()
{
  *(void *)(*(void *)(v0 + 16) + 56) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

double sub_1002DE288()
{
  return sub_1002DCF68();
}

void sub_1002DE2A0()
{
}

double sub_1002DE2B8()
{
  return sub_1002DDE58();
}

double sub_1002DE2D0()
{
  return sub_1002DDEF0();
}

uint64_t sub_1002DE2EC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002DE328()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008071C8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008071C8);
  if (qword_1007F7D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC08);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002DE3F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Notification();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  uint64_t v19 = static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  *(void *)(v15 + v14) = v12;
  aBlock[4] = sub_1002DF10C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A4230;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v17 = (void *)v19;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v21);
}

void sub_1002DE75C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v44)
  {
    sub_10001B418((uint64_t)&v42);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    if (qword_1007F6D78 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100026A54(v14, (uint64_t)qword_1008071C8);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v10, v11)) {
      goto LABEL_16;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    unint64_t v13 = "No systemAlert object found in notification";
    goto LABEL_15;
  }
  uint64_t v5 = aBlock;
  uint64_t v4 = v37;
  uint64_t v7 = (void **)v38;
  uint64_t v6 = (uint64_t)v39;
  char v8 = (char)v40;
  if ((_BYTE)v40)
  {
    if (v40 == 1 && byte_1007F9FB8 == 1)
    {
      uint64_t v42 = aBlock;
      uint64_t v43 = v37;
      sub_1002DF1B0((uint64_t)&v42);
      aBlock = v7;
      uint64_t v37 = v6;
      sub_1002DF1B0((uint64_t)&aBlock);
      if (qword_1007F6D78 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_100026A54(v9, (uint64_t)qword_1008071C8);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v10, v11)) {
        goto LABEL_16;
      }
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      unint64_t v13 = "iCloudManateeUnavailable dialog was already displayed, ignoring.";
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v10, v11, v13, v12, 2u);
      swift_slowDealloc();
LABEL_16:

      return;
    }
  }
  else if (byte_1007F9FB9 == 1)
  {
    uint64_t v42 = aBlock;
    uint64_t v43 = v37;
    sub_1002DF1B0((uint64_t)&v42);
    aBlock = v7;
    uint64_t v37 = v6;
    sub_1002DF1B0((uint64_t)&aBlock);
    if (qword_1007F6D78 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100026A54(v15, (uint64_t)qword_1008071C8);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v10, v11)) {
      goto LABEL_16;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    unint64_t v13 = "quotaExceeded dialog was already displayed, ignoring.";
    goto LABEL_15;
  }
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_37;
  }
  uint64_t v17 = Strong;
  uint64_t v18 = *(void **)&Strong[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertWindow];
  if (!v18)
  {

LABEL_37:
    v45[0] = v5;
    v45[1] = v4;
    sub_1002DF1B0((uint64_t)v45);
    aBlock = v7;
    uint64_t v37 = v6;
    sub_1002DF1B0((uint64_t)&aBlock);
    return;
  }
  id v19 = v18;
  if (([v19 isKeyWindow] & 1) != 0
    && v17[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertDialogLastTypeShowed] != 4)
  {

    goto LABEL_37;
  }
  id v35 = v19;
  v17[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertDialogLastTypeShowed] = v8;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v21 = v20;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v22 = (double *)&v17[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertDialogLastDate];
  if ((v17[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertDialogLastDate + 8] & 1) == 0 && v21 - *v22 <= 5.0)
  {

    goto LABEL_37;
  }
  double *v22 = v21;
  *((unsigned char *)v22 + 8) = 0;
  [v35 makeKeyAndVisible];
  type metadata accessor for JurassicAlertController();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v25 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v23 message:v24 preferredStyle:1];

  if (qword_1007F7478 != -1) {
    swift_once();
  }
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v5;
  *(void *)(v26 + 24) = v4;
  *(void *)(v26 + 32) = v7;
  *(void *)(v26 + 40) = v6;
  *(unsigned char *)(v26 + 48) = v8;
  id v27 = v35;
  *(void *)(v26 + 56) = v35;
  id v28 = v27;
  swift_bridgeObjectRetain();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1002DF224;
  uint64_t v41 = v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_10007453C;
  id v39 = &unk_1007A4280;
  char v30 = _Block_copy(&aBlock);
  swift_release();
  id v31 = [self actionWithTitle:v29 style:0 handler:v30];
  _Block_release(v30);

  [v25 addAction:v31];
  id v32 = [v28 rootViewController];
  if (v32)
  {
    uint64_t v33 = v32;
    [v32 presentViewController:v25 animated:1 completion:0];
  }
  else
  {
  }
}

unsigned char *_s15SystemAlertTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002DEFA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15SystemAlertTypeOMa()
{
  return &_s15SystemAlertTypeON;
}

unint64_t sub_1002DEFDC()
{
  unint64_t result = qword_1008071E0;
  if (!qword_1008071E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008071E0);
  }
  return result;
}

uint64_t sub_1002DF030()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002DF068()
{
  uint64_t v1 = type metadata accessor for Notification();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1002DF10C()
{
  type metadata accessor for Notification();

  sub_1002DE75C();
}

uint64_t sub_1002DF198(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002DF1A8()
{
  return swift_release();
}

uint64_t sub_1002DF1B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002DF1DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1002DF224()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    uint64_t v2 = &byte_1007F9FB8;
  }
  else
  {
    if (*(unsigned char *)(v0 + 48)) {
      goto LABEL_6;
    }
    uint64_t v2 = &byte_1007F9FB9;
  }
  *uint64_t v2 = 1;
LABEL_6:
  [v1 resignKeyWindow];

  return [v1 setHidden:1];
}

uint64_t _s17SystemAlertObjectVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17SystemAlertObjectVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 _s17SystemAlertObjectVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s17SystemAlertObjectVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s17SystemAlertObjectVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17SystemAlertObjectVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17SystemAlertObjectVMa()
{
  return &_s17SystemAlertObjectVN;
}

ValueMetadata *_s30HalfHeightStartRecordingPromptVMa()
{
  return &_s30HalfHeightStartRecordingPromptVN;
}

ValueMetadata *_s16HalfHeightHeaderVMa()
{
  return &_s16HalfHeightHeaderVN;
}

uint64_t sub_1002DF488()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002DF4A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Duration.TimeFormatStyle.Pattern();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Duration.TimeFormatStyle();
  __chkstk_darwin(v6);
  sub_1003D58AC();
  uint64_t v31 = static Duration.seconds(_:)();
  uint64_t v32 = v7;
  static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
  static FormatStyle<>.time(pattern:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1002DF878();
  uint64_t v8 = Text.init<A>(_:format:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.subheadline.getter();
  uint64_t v13 = Text.font(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_release();
  sub_10002B8D0(v8, v10, v12);
  swift_bridgeObjectRelease();
  LODWORD(v31) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v18 = Text.foregroundStyle<A>(_:)();
  uint64_t v20 = v19;
  LOBYTE(v5) = v21;
  uint64_t v23 = v22;
  sub_10002B8D0(v13, v15, v17 & 1);
  swift_bridgeObjectRelease();
  char v24 = static Edge.Set.top.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v23;
  *(unsigned char *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v26;
  *(void *)(a1 + 48) = v27;
  *(void *)(a1 + 56) = v28;
  *(void *)(a1 + 64) = v29;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1002DF6F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002DF4A4(a1);
}

uint64_t sub_1002DF700()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002DF71C@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.title3.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_10002B8D0(v2, v4, v6);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.tertiary.getter();
  uint64_t v12 = Text.foregroundStyle<A>(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  sub_10002B8D0(v7, v9, v11 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

unint64_t sub_1002DF878()
{
  unint64_t result = qword_1008019E0;
  if (!qword_1008019E0)
  {
    type metadata accessor for Duration.TimeFormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008019E0);
  }
  return result;
}

void *sub_1002DF8D0()
{
  return &protocol witness table for Text;
}

unint64_t sub_1002DF8E0()
{
  unint64_t result = qword_1008071E8;
  if (!qword_1008071E8)
  {
    sub_100014440(&qword_1008071F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008071E8);
  }
  return result;
}

uint64_t sub_1002DF954(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1002DF974, 0, 0);
}

uint64_t sub_1002DF974()
{
  uint64_t v1 = sub_1003F2BE0();
  if (v1 == 1)
  {
    sub_1002E00EC();
    swift_allocError();
    *uint64_t v2 = 5;
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t v6 = sub_1002DFD1C(v1);
    unint64_t v8 = v7;
    sub_10003F810(v5);
    unint64_t v9 = sub_1001DC4FC(v6, v8, 0xD000000000000015, (void *)0x8000000100696A70, 0xD000000000000020, (void *)0x8000000100696A90);
    v0[4] = v10;
    swift_bridgeObjectRelease();
    char v11 = (void *)swift_task_alloc();
    v0[5] = v11;
    void *v11 = v0;
    v11[1] = sub_1002DFB4C;
    uint64_t v12 = v0[2];
    return sub_1005E885C(v12, 0, 0, 0, 0, 0, 0, v9);
  }
}

uint64_t sub_1002DFB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_1002DFCB8, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_1002DFCB8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002DFD1C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    uint64_t v5 = (double *)a1;
  }
  else {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_10009ADC0((uint64_t)v5);
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (a1)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if (v10)
      {
        sub_10003F820(a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
      }
      swift_bridgeObjectRelease();
      _s10VisitAssetC9VisitDataVMa(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) != 1)
      {
        uint64_t v6 = *((void *)v4 + 2);
        swift_bridgeObjectRetain();
        sub_10003F884((uint64_t)v4);
        return v6;
      }
      sub_10009C490((uint64_t)v4);
    }
    return 0;
  }
  return v6;
}

uint64_t sub_1002DFF08(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1001DBEDC;
  return _swift_task_switch(sub_1002DF974, 0, 0);
}

void sub_1002DFFB4(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    && (swift_retain(), uint64_t v3 = sub_100039114(), swift_release(), v3 != 1))
  {
    uint64_t v4 = sub_1002E07E0(v3);
    *(void *)(a1 + 24) = &_s6ResultVN_1;
    *(void *)(a1 + 32) = sub_1002E0A60();
    *(void *)(a1 + 40) = sub_1002E0AB4();
    *(void *)a1 = v4;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

unint64_t sub_1002E006C(uint64_t a1)
{
  unint64_t result = sub_1002E0094();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002E0094()
{
  unint64_t result = qword_1008071F8;
  if (!qword_1008071F8)
  {
    _s16MultiPinMapAssetCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008071F8);
  }
  return result;
}

unint64_t sub_1002E00EC()
{
  unint64_t result = qword_100807210;
  if (!qword_100807210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807210);
  }
  return result;
}

uint64_t sub_1002E0140(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100807278);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_1002E1828();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002E0320()
{
  uint64_t result = 0x6D614E6563616C70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2037672291;
      break;
    case 2:
      uint64_t result = 0x6C50664F65707974;
      break;
    case 3:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002E03CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002E0F28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002E03F4(uint64_t a1)
{
  unint64_t v2 = sub_1002E1828();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E0430(uint64_t a1)
{
  unint64_t v2 = sub_1002E1828();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1002E046C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002E1168(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1002E04B8(void *a1)
{
  return sub_1002E0140(a1);
}

uint64_t sub_1002E04FC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807250);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1002E16BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[1] = a2;
  sub_100010218(&qword_100807238);
  sub_1002E1764(&qword_100807258, (void (*)(void))sub_1002E17D4);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1002E067C()
{
  return 0x737469736976;
}

uint64_t sub_1002E0690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x737469736976 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1002E0720(uint64_t a1)
{
  unint64_t v2 = sub_1002E16BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E075C(uint64_t a1)
{
  unint64_t v2 = sub_1002E16BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1002E0798@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1002E1514(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002E07C4(void *a1)
{
  return sub_1002E04FC(a1, *v1);
}

double *sub_1002E07E0(uint64_t a1)
{
  uint64_t v27 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v2 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v26 = (uint64_t)&v24 - v6;
  if (!a1) {
    return 0;
  }
  int64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_100095D20(0, v7, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    uint64_t v24 = a1;
    uint64_t v25 = v9;
    uint64_t v10 = v34;
    do
    {
      uint64_t v11 = v26;
      sub_10003F820(v8, v26);
      sub_10003F820(v11, (uint64_t)v4);
      uint64_t v12 = *v4;
      uint64_t v13 = v4[1];
      uint64_t v14 = v4[3];
      uint64_t v32 = v4[2];
      uint64_t v33 = v12;
      uint64_t v15 = v4[5];
      uint64_t v31 = v4[4];
      char v16 = (char *)v4 + *(int *)(v27 + 40);
      uint64_t v17 = *(void *)v16;
      int v18 = v16[8];
      uint64_t v19 = (char *)v4 + *(int *)(v27 + 44);
      uint64_t v28 = *(void *)v19;
      LODWORD(v19) = v19[8];
      int v29 = v18;
      int v30 = (int)v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003F884((uint64_t)v4);
      sub_10003F884(v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100095D20(0, *((void *)v10 + 2) + 1, 1);
        uint64_t v10 = v34;
      }
      unint64_t v21 = *((void *)v10 + 2);
      unint64_t v20 = *((void *)v10 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_100095D20(v20 > 1, v21 + 1, 1);
        uint64_t v10 = v34;
      }
      *((void *)v10 + 2) = v21 + 1;
      uint64_t v22 = &v10[10 * v21];
      *((void *)v22 + 4) = v33;
      *((void *)v22 + 5) = v13;
      *((void *)v22 + 6) = v32;
      *((void *)v22 + 7) = v14;
      *((void *)v22 + 8) = v31;
      *((void *)v22 + 9) = v15;
      *((void *)v22 + 10) = v17;
      *((unsigned char *)v22 + 88) = v29;
      *((void *)v22 + 12) = v28;
      *((unsigned char *)v22 + 104) = v30;
      v8 += v25;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v10;
}

unint64_t sub_1002E0A60()
{
  unint64_t result = qword_100807218;
  if (!qword_100807218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807218);
  }
  return result;
}

unint64_t sub_1002E0AB4()
{
  unint64_t result = qword_100807220;
  if (!qword_100807220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807220);
  }
  return result;
}

uint64_t _s5VisitVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s5VisitVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5VisitVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  return a1;
}

uint64_t _s5VisitVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t _s5VisitVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s5VisitVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s5VisitVMa()
{
  return &_s5VisitVN;
}

void *_s6ResultVwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6ResultVwca_1(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PlaceCategory(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *_s6ResultVwta_1(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet_1(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6ResultVwst_1(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s6ResultVMa_2()
{
  return &_s6ResultVN_1;
}

uint64_t sub_1002E0F28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C50664F65707974 && a2 == 0xEB00000000656361 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1002E1168@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100010218(&qword_100807268);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1002E1828();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  char v37 = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v31 = v9;
  char v36 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v32 = v13;
  uint64_t v28 = v12;
  char v35 = 2;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  uint64_t v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v34 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v29 = v15;
  HIDWORD(v25) = v17;
  uint64_t v26 = v16;
  char v33 = 4;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v19 = v8;
  char v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  uint64_t v22 = v29;
  swift_bridgeObjectRelease();
  uint64_t v23 = v32;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v31;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v23;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = BYTE4(v25) & 1;
  *(void *)(a2 + 64) = v18;
  *(unsigned char *)(a2 + 72) = v21 & 1;
  return result;
}

void *sub_1002E1514(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100807228);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002E0BC(a1, a1[3]);
  sub_1002E16BC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100010218(&qword_100807238);
    sub_1002E1764(&qword_100807240, (void (*)(void))sub_1002E1710);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1002E16BC()
{
  unint64_t result = qword_100807230;
  if (!qword_100807230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807230);
  }
  return result;
}

unint64_t sub_1002E1710()
{
  unint64_t result = qword_100807248;
  if (!qword_100807248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807248);
  }
  return result;
}

uint64_t sub_1002E1764(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(&qword_100807238);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002E17D4()
{
  unint64_t result = qword_100807260;
  if (!qword_100807260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807260);
  }
  return result;
}

unint64_t sub_1002E1828()
{
  unint64_t result = qword_100807270;
  if (!qword_100807270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807270);
  }
  return result;
}

unsigned char *_s5VisitV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E1948);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5VisitV10CodingKeysOMa()
{
  return &_s5VisitV10CodingKeysON;
}

unsigned char *_s6ResultV10CodingKeysOwst_2(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1002E1A1CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_2()
{
  return &_s6ResultV10CodingKeysON_2;
}

unint64_t sub_1002E1A58()
{
  unint64_t result = qword_100807280;
  if (!qword_100807280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807280);
  }
  return result;
}

unint64_t sub_1002E1AB0()
{
  unint64_t result = qword_100807288;
  if (!qword_100807288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807288);
  }
  return result;
}

unint64_t sub_1002E1B08()
{
  unint64_t result = qword_100807290;
  if (!qword_100807290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807290);
  }
  return result;
}

unint64_t sub_1002E1B60()
{
  unint64_t result = qword_100807298;
  if (!qword_100807298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807298);
  }
  return result;
}

unint64_t sub_1002E1BB8()
{
  unint64_t result = qword_1008072A0;
  if (!qword_1008072A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008072A0);
  }
  return result;
}

unint64_t sub_1002E1C10()
{
  unint64_t result = qword_1008072A8;
  if (!qword_1008072A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008072A8);
  }
  return result;
}

uint64_t sub_1002E1C68()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008072B0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008072B0);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002E1D30(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_1008074B0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_100010218(&qword_100807408);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1002E1E24, v1, 0);
}

uint64_t sub_1002E1E24()
{
  uint64_t v1 = v0[3];
  type metadata accessor for SiriSpeechRecognitionManager();
  swift_allocObject();
  *(void *)(v1 + 112) = sub_1004D135C();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 112);
  v0[8] = v2;
  if (v2)
  {
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1002E1F9C;
    uint64_t v4 = v0[4];
    return sub_1004CDFA0(v4);
  }
  else
  {
    uint64_t v6 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[6] + 56))(v6, 1, 1, v0[5]);
    sub_10001457C(v6, &qword_1008074B0);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[11] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1002E21B4;
    return sub_1002E2414();
  }
}

uint64_t sub_1002E1F9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = sub_1002E239C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    swift_release();
    uint64_t v4 = sub_1002E20C4;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002E20C4()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[2];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v4, v3);
  sub_1002E4BC4(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002E21B4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 24);
    return _swift_task_switch(sub_1002E22F8, v6, 0);
  }
}

uint64_t sub_1002E22F8()
{
  sub_1002E63B4();
  swift_allocError();
  *uint64_t v1 = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002E239C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E2414()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for TranscriptionUpdate(0);
  v1[10] = swift_task_alloc();
  uint64_t v2 = sub_100010218(&qword_1007FF9C8);
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  sub_100010218(&qword_100807410);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  sub_100010218(&qword_100807448);
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_1002E2584, v0, 0);
}

uint64_t sub_1002E2584()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v5 = OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  v0[18] = OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  sub_1002E61F4(v6, v1);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[19] = v7;
  v0[20] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v8 = v7(v1, 1, v2);
  uint64_t v10 = v0[16];
  uint64_t v9 = v0[17];
  if (v8)
  {
    sub_10001457C(v0[16], &qword_100807410);
    uint64_t v11 = sub_100010218(&qword_100807450);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  else
  {
    uint64_t v13 = v0[12];
    uint64_t v12 = v0[13];
    uint64_t v15 = (unsigned char *)v0[10];
    uint64_t v14 = v0[11];
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 16))(v12, v0[16], v14);
    sub_10001457C(v10, &qword_100807410);
    *uint64_t v15 = 1;
    swift_storeEnumTagMultiPayload();
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v16 = sub_100010218(&qword_100807450);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  }
  uint64_t v17 = v0[8];
  sub_10001457C(v0[17], &qword_100807448);
  uint64_t v18 = *(void *)(v17 + 112);
  v0[21] = v18;
  if (v18)
  {
    swift_retain();
    uint64_t v19 = (void *)swift_task_alloc();
    v0[22] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1002E294C;
    return sub_1004CF6E0();
  }
  else
  {
    char v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[19];
    uint64_t v22 = v0[15];
    uint64_t v23 = v0[11];
    uint64_t v24 = v0[8];
    uint64_t v25 = v24 + v0[18];
    *(void *)(v24 + 112) = 0;
    sub_1002E61F4(v25, v22);
    int v26 = v21(v22, 1, v23);
    uint64_t v27 = v0[15];
    if (v26)
    {
      sub_10001457C(v0[15], &qword_100807410);
    }
    else
    {
      uint64_t v29 = v0[12];
      uint64_t v28 = v0[13];
      uint64_t v30 = v0[11];
      (*(void (**)(uint64_t, void, uint64_t))(v29 + 16))(v28, v0[15], v30);
      sub_10001457C(v27, &qword_100807410);
      AsyncStream.Continuation.finish()();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
    uint64_t v31 = v0[14];
    uint64_t v32 = v0[8] + v0[18];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[12] + 56))(v31, 1, 1, v0[11]);
    swift_beginAccess();
    sub_1002E5FB4(v31, v32);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
}

uint64_t sub_1002E294C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = sub_1002E2C34;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 64);
    swift_release();
    uint64_t v4 = sub_1002E2A74;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002E2A74()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[19];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v5 = v1 + v0[18];
  *(void *)(v1 + 112) = 0;
  swift_release();
  sub_1002E61F4(v5, v3);
  int v6 = v2(v3, 1, v4);
  uint64_t v7 = v0[15];
  if (v6)
  {
    sub_10001457C(v0[15], &qword_100807410);
  }
  else
  {
    uint64_t v9 = v0[12];
    uint64_t v8 = v0[13];
    uint64_t v10 = v0[11];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 16))(v8, v0[15], v10);
    sub_10001457C(v7, &qword_100807410);
    AsyncStream.Continuation.finish()();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[8] + v0[18];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[12] + 56))(v11, 1, 1, v0[11]);
  swift_beginAccess();
  sub_1002E5FB4(v11, v12);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1002E2C34()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E2CE8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_100010218(&qword_1007FA1D0);
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_100010218(&qword_100807418);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  sub_100010218(&qword_100807458);
  v3[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ClientInfo();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[16] = swift_task_alloc();
  sub_100010218(&qword_100807460);
  v3[17] = swift_task_alloc();
  sub_100010218(&qword_100807468);
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_1002E2F54, v2, 0);
}

uint64_t sub_1002E2F54()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[14];
  uint64_t v29 = v0[13];
  uint64_t v30 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v32 = v0[10];
  uint64_t v33 = v0[12];
  uint64_t v34 = v0[9];
  uint64_t v31 = v0[3];
  type metadata accessor for SiriSpeechRecognitionManager();
  swift_allocObject();
  uint64_t v28 = sub_1004D135C();
  v0[19] = v28;
  uint64_t v5 = enum case for TaskHint.offlineTranscription(_:);
  uint64_t v6 = type metadata accessor for TaskHint();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  uint64_t v8 = type metadata accessor for Transcriber.ModelOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v1, 1, 1, v8);
  sub_1004D1498();
  sub_100010218(&qword_100807470);
  uint64_t v9 = type metadata accessor for Transcriber.ReportingOption();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, enum case for Transcriber.ReportingOption.multisegmentResults(_:), v9);
  sub_1000F8428(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100010218(&qword_100807478);
  uint64_t v13 = type metadata accessor for TranscriptionResultAttributeOption();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, enum case for TranscriptionResultAttributeOption.timeRange(_:), v13);
  sub_1000F8740(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static Locale.current.getter();
  type metadata accessor for Transcriber();
  swift_allocObject();
  uint64_t v17 = Transcriber.init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)();
  v0[20] = v17;
  type metadata accessor for SpeechAnalyzer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v30, v28 + OBJC_IVAR____TtC7Journal28SiriSpeechRecognitionManager_clientInfo, v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v33, v31, v32);
  sub_100010218(&qword_100807480);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1006D6280;
  uint64_t v19 = sub_1002E625C(&qword_100807488, (void (*)(uint64_t))&type metadata accessor for Transcriber);
  *(void *)(v18 + 32) = v17;
  *(void *)(v18 + 40) = v19;
  uint64_t v20 = type metadata accessor for AnalysisOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v34, 1, 1, v20);
  id v21 = objc_allocWithZone((Class)type metadata accessor for AnalysisContext());
  swift_retain();
  id v22 = [v21 init];
  uint64_t v23 = (void *)swift_task_alloc();
  v0[21] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1002E3470;
  uint64_t v24 = v0[15];
  uint64_t v25 = v0[12];
  uint64_t v26 = v0[9];
  return SpeechAnalyzer.__allocating_init(client:inputAudioFile:modules:options:restrictedLogging:analysisContext:didChangeVolatileRange:)(v24, v25, v18, v26, 1, v22, 0, 0);
}

uint64_t sub_1002E3470(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[22] = a1;
  v3[23] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v3[4];
    return _swift_task_switch(sub_1002E3954, v5, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v3[24] = v6;
    void *v6 = v4;
    v6[1] = sub_1002E35F4;
    return SpeechAnalyzer.finalizeAndFinishThroughEndOfInput()();
  }
}

uint64_t sub_1002E35F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_1002E3A3C;
  }
  else {
    uint64_t v4 = sub_1002E3720;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002E3720()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  type metadata accessor for TranscriptionUpdate(0);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v3);
  AsyncStream.init(_:bufferingPolicy:_:)();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = sub_1002E625C(&qword_100807428, (void (*)(uint64_t))type metadata accessor for SiriTranscriptionMethod);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v6;
  v9[3] = v8;
  v9[4] = v6;
  v9[5] = v1;
  swift_retain_n();
  sub_1005D74B4(v5, (uint64_t)&unk_100807498, (uint64_t)v9);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1002E3954()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E3A3C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E3B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = sub_100010218(&qword_1007FF9C8);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_1002E5F4C((uint64_t)v9, (uint64_t)v6);
  uint64_t v12 = a2 + OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  swift_beginAccess();
  sub_1002E5FB4((uint64_t)v6, v12);
  return swift_endAccess();
}

uint64_t sub_1002E3C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v7 = type metadata accessor for Transcriber.MultisegmentResult();
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  sub_100010218(&qword_100807438);
  v5[11] = swift_task_alloc();
  v5[12] = sub_100010218(&qword_1008074A0);
  v5[13] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_1008074A8);
  v5[14] = v8;
  v5[15] = *(void *)(v8 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for TranscriptionUpdate(0);
  v5[18] = swift_task_alloc();
  uint64_t v9 = sub_100010218(&qword_1007FF9C8);
  v5[19] = v9;
  v5[20] = *(void *)(v9 - 8);
  v5[21] = swift_task_alloc();
  sub_100010218(&qword_100807410);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  sub_100010218(&qword_100807448);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  return _swift_task_switch(sub_1002E3F40, a4, 0);
}

uint64_t sub_1002E3F40()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[6];
  uint64_t v5 = OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  v0[28] = OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  sub_1002E61F4(v6, v1);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[29] = v7;
  v0[30] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v8 = v7(v1, 1, v2);
  uint64_t v9 = v0[27];
  uint64_t v10 = v0[24];
  if (v8)
  {
    sub_10001457C(v0[24], &qword_100807410);
    uint64_t v11 = sub_100010218(&qword_100807450);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  else
  {
    uint64_t v13 = v0[20];
    uint64_t v12 = v0[21];
    unint64_t v15 = (unsigned char *)v0[18];
    uint64_t v14 = v0[19];
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 16))(v12, v0[24], v14);
    sub_10001457C(v10, &qword_100807410);
    *unint64_t v15 = 0;
    swift_storeEnumTagMultiPayload();
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v16 = sub_100010218(&qword_100807450);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  }
  sub_10001457C(v0[27], &qword_100807448);
  Transcriber.multisegmentResults.getter();
  v0[31] = swift_getOpaqueTypeConformance2();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v17 = sub_1002E625C(&qword_100807428, (void (*)(uint64_t))type metadata accessor for SiriTranscriptionMethod);
  v0[32] = v17;
  uint64_t v18 = v0[6];
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[33] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1002E4240;
  uint64_t v20 = v0[11];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v20, v18, v17);
}

uint64_t sub_1002E4240()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v4 = sub_1002E4AA4;
  }
  else {
    uint64_t v4 = sub_1002E4354;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002E4354()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v6 = v0[28];
  uint64_t v7 = v0[19];
  if (v4 == 1)
  {
    uint64_t v8 = v0[23];
    uint64_t v9 = v0[6] + v6;
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    sub_1002E61F4(v9, v8);
    int v10 = v5(v8, 1, v7);
    uint64_t v11 = v0[26];
    uint64_t v12 = v0[23];
    if (v10)
    {
      sub_10001457C(v0[23], &qword_100807410);
      uint64_t v13 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
    }
    else
    {
      uint64_t v21 = v0[20];
      uint64_t v20 = v0[21];
      uint64_t v23 = (unsigned char *)v0[18];
      uint64_t v22 = v0[19];
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v20, v0[23], v22);
      sub_10001457C(v12, &qword_100807410);
      *uint64_t v23 = 1;
      swift_storeEnumTagMultiPayload();
      AsyncStream.Continuation.yield(_:)();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      uint64_t v24 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
    }
    sub_10001457C(v0[26], &qword_100807448);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[34] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1002E482C;
    return sub_1002E2414();
  }
  else
  {
    uint64_t v14 = v0[22];
    uint64_t v15 = v0[6] + v6;
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[10], v1, v2);
    sub_1002E61F4(v15, v14);
    int v16 = v5(v14, 1, v7);
    uint64_t v17 = v0[25];
    uint64_t v18 = v0[22];
    if (v16)
    {
      (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
      sub_10001457C(v18, &qword_100807410);
      uint64_t v19 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    }
    else
    {
      uint64_t v28 = v0[20];
      uint64_t v27 = v0[21];
      uint64_t v30 = v0[18];
      uint64_t v29 = v0[19];
      uint64_t v31 = v0[9];
      uint64_t v32 = v0[10];
      uint64_t v33 = v0[8];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v18, v29);
      sub_10001457C(v18, &qword_100807410);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v32, v33);
      swift_storeEnumTagMultiPayload();
      AsyncStream.Continuation.yield(_:)();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
      uint64_t v34 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v17, 0, 1, v34);
    }
    sub_10001457C(v0[25], &qword_100807448);
    uint64_t v35 = v0[32];
    uint64_t v36 = v0[6];
    swift_getAssociatedConformanceWitness();
    char v37 = (void *)swift_task_alloc();
    v0[33] = v37;
    void *v37 = v0;
    v37[1] = sub_1002E4240;
    uint64_t v38 = v0[11];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v38, v36, v35);
  }
}

uint64_t sub_1002E482C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002E4AA4()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002E4BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v42 = sub_100010218(&qword_100807408);
  uint64_t v37 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v40 = v2;
  uint64_t v41 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100807410);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_100010218(&qword_100807418);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_1007FF9C8);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TranscriptionUpdate(0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v12);
  uint64_t v20 = v36;
  static AsyncStream.makeStream(of:bufferingPolicy:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v11, v19, v16);
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v38 = v16;
  v21(v11, 0, 1, v16);
  sub_1002E5F4C((uint64_t)v11, (uint64_t)v8);
  uint64_t v22 = v20 + OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  swift_beginAccess();
  sub_1002E5FB4((uint64_t)v8, v22);
  swift_endAccess();
  if (qword_1007F6D80 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_100026A54(v23, (uint64_t)qword_1008072B0);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Recognition stream task started", v26, 2u);
    swift_slowDealloc();
  }

  uint64_t v27 = type metadata accessor for TaskPriority();
  uint64_t v28 = (uint64_t)v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v5, 1, 1, v27);
  uint64_t v29 = v37;
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v41, v39, v42);
  uint64_t v32 = sub_1002E625C(&qword_100807428, (void (*)(uint64_t))type metadata accessor for SiriTranscriptionMethod);
  unint64_t v33 = (*(unsigned __int8 *)(v29 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v20;
  *((void *)v34 + 3) = v32;
  *((void *)v34 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v34[v33], v31, v30);
  swift_retain_n();
  sub_100328A60(v28, (uint64_t)&unk_100807430, (uint64_t)v34);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v38);
}

uint64_t sub_1002E5118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v7 = type metadata accessor for Transcriber.MultisegmentResult();
  v5[7] = v7;
  v5[8] = *(void *)(v7 - 8);
  v5[9] = swift_task_alloc();
  sub_100010218(&qword_100807438);
  v5[10] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_100807440);
  v5[11] = v8;
  v5[12] = *(void *)(v8 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = type metadata accessor for TranscriptionUpdate(0);
  v5[15] = swift_task_alloc();
  uint64_t v9 = sub_100010218(&qword_1007FF9C8);
  v5[16] = v9;
  v5[17] = *(void *)(v9 - 8);
  v5[18] = swift_task_alloc();
  sub_100010218(&qword_100807410);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  sub_100010218(&qword_100807448);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  return _swift_task_switch(sub_1002E53A0, a4, 0);
}

uint64_t sub_1002E53A0()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[5];
  uint64_t v5 = OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  v0[26] = OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  sub_1002E61F4(v6, v1);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[27] = v7;
  v0[28] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v8 = v7(v1, 1, v2);
  uint64_t v9 = v0[25];
  uint64_t v10 = v0[22];
  if (v8)
  {
    sub_10001457C(v0[22], &qword_100807410);
    uint64_t v11 = sub_100010218(&qword_100807450);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  else
  {
    uint64_t v13 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v15 = (unsigned char *)v0[15];
    uint64_t v14 = v0[16];
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 16))(v12, v0[22], v14);
    sub_10001457C(v10, &qword_100807410);
    *uint64_t v15 = 0;
    swift_storeEnumTagMultiPayload();
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v16 = sub_100010218(&qword_100807450);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  }
  sub_10001457C(v0[25], &qword_100807448);
  sub_100010218(&qword_100807408);
  AsyncStream.makeAsyncIterator()();
  uint64_t v17 = sub_1002E625C(&qword_100807428, (void (*)(uint64_t))type metadata accessor for SiriTranscriptionMethod);
  v0[29] = v17;
  uint64_t v18 = v0[5];
  uint64_t v19 = (void *)swift_task_alloc();
  v0[30] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1002E5640;
  uint64_t v20 = v0[10];
  uint64_t v21 = v0[11];
  return AsyncStream.Iterator.next(isolation:)(v20, v18, v17, v21);
}

uint64_t sub_1002E5640()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002E5750, v1, 0);
}

uint64_t sub_1002E5750()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[27];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[16];
  if (v4 == 1)
  {
    uint64_t v8 = v0[21];
    uint64_t v9 = v0[5] + v6;
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    sub_1002E61F4(v9, v8);
    int v10 = v5(v8, 1, v7);
    uint64_t v11 = v0[24];
    uint64_t v12 = v0[21];
    if (v10)
    {
      sub_10001457C(v0[21], &qword_100807410);
      uint64_t v13 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
    }
    else
    {
      uint64_t v21 = v0[17];
      uint64_t v20 = v0[18];
      uint64_t v23 = (unsigned char *)v0[15];
      uint64_t v22 = v0[16];
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v20, v0[21], v22);
      sub_10001457C(v12, &qword_100807410);
      *uint64_t v23 = 1;
      swift_storeEnumTagMultiPayload();
      AsyncStream.Continuation.yield(_:)();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      uint64_t v24 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
    }
    os_log_type_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[27];
    uint64_t v26 = v0[19];
    uint64_t v27 = v0[16];
    uint64_t v28 = v0[5] + v0[26];
    sub_10001457C(v0[24], &qword_100807448);
    sub_1002E61F4(v28, v26);
    int v29 = v25(v26, 1, v27);
    uint64_t v30 = v0[19];
    if (v29)
    {
      sub_10001457C(v0[19], &qword_100807410);
    }
    else
    {
      uint64_t v45 = v0[17];
      uint64_t v44 = v0[18];
      uint64_t v46 = v0[16];
      (*(void (**)(uint64_t, void, uint64_t))(v45 + 16))(v44, v0[19], v46);
      sub_10001457C(v30, &qword_100807410);
      AsyncStream.Continuation.finish()();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
    }
    if (qword_1007F6D80 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_100026A54(v47, (uint64_t)qword_1008072B0);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Recognition stream task completed", v50, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v51 = (uint64_t (*)(void))v0[1];
    return v51();
  }
  else
  {
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[5] + v6;
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
    sub_1002E61F4(v15, v14);
    int v16 = v5(v14, 1, v7);
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[20];
    if (v16)
    {
      (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
      sub_10001457C(v18, &qword_100807410);
      uint64_t v19 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    }
    else
    {
      uint64_t v32 = v0[17];
      uint64_t v31 = v0[18];
      uint64_t v34 = v0[15];
      uint64_t v33 = v0[16];
      uint64_t v35 = v0[8];
      uint64_t v36 = v0[9];
      uint64_t v37 = v0[7];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v18, v33);
      sub_10001457C(v18, &qword_100807410);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v36, v37);
      swift_storeEnumTagMultiPayload();
      AsyncStream.Continuation.yield(_:)();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
      uint64_t v38 = sub_100010218(&qword_100807450);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v17, 0, 1, v38);
    }
    sub_10001457C(v0[23], &qword_100807448);
    uint64_t v39 = v0[29];
    uint64_t v40 = v0[5];
    uint64_t v41 = (void *)swift_task_alloc();
    v0[30] = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_1002E5640;
    uint64_t v42 = v0[10];
    uint64_t v43 = v0[11];
    return AsyncStream.Iterator.next(isolation:)(v42, v40, v39, v43);
  }
}

uint64_t sub_1002E5DA8()
{
  swift_release();
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal23SiriTranscriptionMethod_transcriptionContinuation, &qword_100807410);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1002E5DF8()
{
  return type metadata accessor for SiriTranscriptionMethod();
}

uint64_t type metadata accessor for SiriTranscriptionMethod()
{
  uint64_t result = qword_1008072F8;
  if (!qword_1008072F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002E5E4C()
{
  sub_1002E5EF0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002E5EF0()
{
  if (!qword_100807320)
  {
    sub_100014440(&qword_1007FF9C8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100807320);
    }
  }
}

uint64_t sub_1002E5F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E5FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E601C()
{
  uint64_t v1 = sub_100010218(&qword_100807408);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1002E60F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100010218(&qword_100807408) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1002E5118(a1, v5, v6, v7, v8);
}

uint64_t sub_1002E61F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E625C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002E62A4(uint64_t a1)
{
  return sub_1002E3B30(a1, v1);
}

uint64_t sub_1002E62AC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002E62F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1002E3C90(a1, v4, v5, v7, v6);
}

unint64_t sub_1002E63B4()
{
  unint64_t result = qword_1008074B8;
  if (!qword_1008074B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008074B8);
  }
  return result;
}

BOOL sub_1002E6408(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a1;
  uint64_t v39 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v13 - 8);
    v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      uint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      uint64_t v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1002E66E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1002F4F8C(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002E6794()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002E6878()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008074C0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008074C0);
  if (qword_1007F7D60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC20);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002E6940()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100035380(v0, qword_1008074D8);
  sub_100026A54(v0, (uint64_t)qword_1008074D8);
  return UUID.init()();
}

objc_class *sub_1002E698C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___removeButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___removeButton);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___removeButton);
  }
  else
  {
    uint64_t v4 = v0;
    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = v5;
    uint64_t v6 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_10001B284(0, (unint64_t *)&qword_100803F80);
    id v7 = v6;
    v16.value.super.super.Class isa = (Class)v6;
    v16.is_nil = 0;
    v8.super.super.Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemTrash, v16, v17).super.super.isa;
    uint64_t v9 = qword_1007F7520;
    uint64_t v10 = v8.super.super.isa;
    if (v9 != -1) {
      swift_once();
    }
    NSString v11 = String._bridgeToObjectiveC()();
    -[objc_class setAccessibilityLabel:](v10, "setAccessibilityLabel:", v11, 0, 2, 0, sub_1002F4D5C, v15);

    uint64_t v12 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    uint64_t v3 = v10;

    uint64_t v2 = 0;
  }
  id v13 = v2;
  return v3;
}

id sub_1002E6B28()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___videoMuteButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___videoMuteButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___videoMuteButton);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:0 style:0 target:v0 action:"videoMuteButtonTapped:"];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

objc_class *sub_1002E6BB4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___closeButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___closeButton);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___closeButton);
  }
  else
  {
    uint64_t v4 = v0;
    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v6 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_10001B284(0, (unint64_t *)&qword_100803F80);
    id v7 = [self mainBundle];
    v24._object = (void *)0x8000000100694A30;
    v8._countAndFlagsBits = 0x65736F6C43;
    v8._object = (void *)0xE500000000000000;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0xD000000000000020;
    Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v24);

    id v11 = v6;
    v21.value.super.Class isa = 0;
    v21.is_nil = (char)v6;
    v22.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)v10, v21, v22, v23).super.super.isa;
    sub_100010218(&qword_100802498);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    uint64_t v14 = self;
    uint64_t v15 = NSForegroundColorAttributeName;
    id v16 = [v14 systemIndigoColor];
    *(void *)(inited + 64) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    *(void *)(inited + 40) = v16;
    sub_100396DBC(inited);
    type metadata accessor for Key(0);
    sub_1002F4F8C((unint64_t *)&qword_10080A680, type metadata accessor for Key);
    Class v17 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [(objc_class *)isa setTitleTextAttributes:v17 forState:0];

    uint64_t v18 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = isa;
    id v3 = isa;

    uint64_t v2 = 0;
  }
  id v19 = v2;
  return v3;
}

void sub_1002E6E80()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_1005D68BC(0, 1);
      swift_unknownObjectRelease();
    }
  }
}

char *sub_1002E6F0C(uint64_t a1, uint64_t a2, char a3)
{
  v3[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing] = 0;
  uint64_t v5 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_interactiveCoordinator;
  id v6 = objc_allocWithZone((Class)type metadata accessor for InteractiveGalleryToTimelineTransition());
  id v7 = v3;
  *(void *)&v3[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasLoaded] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry] = 0;
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave] = 2;
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_textExists;
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_textExists] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)UIPageControl) init];
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___removeButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___videoMuteButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___closeButton] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_trashAndOpenInContextMenuButton;
  *(void *)&v7[v10] = [objc_allocWithZone((Class)UIBarButtonItem) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted;
  v7[v11] = UIAccessibilityIsVideoAutoplayEnabled();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = self;
  id v14 = [v13 systemImageNamed:v12];

  if (v14)
  {
    id v15 = [self systemIndigoColor];
    id v16 = [v14 imageWithTintColor:v15];
  }
  else
  {
    id v16 = 0;
  }
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_unmuteSymbol] = v16;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v13 systemImageNamed:v17];

  if (v18)
  {
    id v19 = [self systemIndigoColor];
    id v20 = [v18 imageWithTintColor:v19];
  }
  else
  {
    id v20 = 0;
  }
  uint64_t v21 = a1;
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_muteSymbol] = v20;
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_didScrollToInitIndexPath] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_imageryIndexes] = _swiftEmptyArrayStorage;
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset] = 0;
  UIAction_optional v22 = &v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin];
  *(void *)UIAction_optional v22 = 0;
  *((void *)v22 + 1) = 0;
  v22[16] = 1;
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = 0;
  v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasAppeared] = 0;
  UIMenu_optional v23 = &v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_initIndexPath];
  uint64_t v24 = type metadata accessor for IndexPath();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, a1, v24);
  *(void *)&v7[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets] = a2;
  v7[v8] = a3 & 1;

  v38.receiver = v7;
  v38.super_class = (Class)type metadata accessor for FullScreenCollectionViewController();
  char v26 = (char *)[super initWithNibName:0 bundle:0];
  sub_1002EA694();
  sub_1002EAC84();
  sub_1002EA180();
  sub_1002EFE3C();
  uint64_t v27 = *(void **)&v26[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView];
  if (v27)
  {
    type metadata accessor for FullScreenCollectionViewCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v29 = v27;
    NSString v30 = String._bridgeToObjectiveC()();
    [v29 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v30];

    uint64_t v31 = self;
    id v32 = v29;
    id v33 = [v31 clearColor];
    [v32 setBackgroundColor:v33];

    [v32 setDelegate:v26];
    [v32 setDataSource:v26];
    [v32 setPagingEnabled:1];
    [v32 setShowsHorizontalScrollIndicator:0];
    [v32 setShowsVerticalScrollIndicator:0];
    [v32 setAlwaysBounceVertical:0];
    id v34 = v32;
    [v34 setTranslatesAutoresizingMaskIntoConstraints:0];

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a1, v24);
  }
  return v26;
}

id sub_1002E74AC()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FullScreenCollectionViewController();
  return [super dealloc];
}

uint64_t sub_1002E7700()
{
  return type metadata accessor for FullScreenCollectionViewController();
}

uint64_t type metadata accessor for FullScreenCollectionViewController()
{
  uint64_t result = qword_1008075D8;
  if (!qword_1008075D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002E7754()
{
  id v1 = v0;
  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for FullScreenCollectionViewController();
  [super viewDidLoad];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView];
  if (!v2) {
    return;
  }
  id v3 = v2;
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  [v4 setAccessibilityViewIsModal:1];

  id v6 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  id v7 = self;
  id v8 = v6;
  id v9 = [v7 effectWithStyle:8];
  [v8 setBackgroundEffect:v9];

  uint64_t v10 = self;
  id v11 = v8;
  id v12 = [v10 clearColor];
  [v11 setShadowColor:v12];

  id v13 = [v1 navigationItem];
  [v13 setScrollEdgeAppearance:v11];

  id v14 = [v1 navigationItem];
  [v14 setCompactAppearance:v11];

  id v15 = [v1 navigationItem];
  [v15 setStandardAppearance:v11];

  id v16 = [v1 view];
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  NSString v17 = v16;
  id v18 = [v10 clearColor];
  [v17 setBackgroundColor:v18];

  id v19 = [v1 view];
  if (!v19)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v20 = v19;
  [v19 addSubview:v3];

  id v21 = [v1 view];
  if (!v21)
  {
LABEL_18:
    __break(1u);
    return;
  }
  UIAction_optional v22 = v21;
  uint64_t v23 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
  [v21 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl]];

  id v24 = *(id *)&v1[v23];
  id v25 = [v24 superview];
  if (v25)
  {
    char v26 = v25;
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v27 = [v24 centerXAnchor];
    id v28 = [v26 centerXAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    if (v29)
    {
      id v29 = v29;
      [v29 setActive:1];

      char v26 = v29;
    }
  }
  else
  {
    id v29 = 0;
  }

  id v30 = *(id *)&v1[v23];
  id v31 = sub_1001DDD3C(0, 0.0);

  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  id v32 = self;
  id v33 = [v32 defaultCenter];
  [v33 addObserver:v1 selector:"handleAppWillMoveToBackground" name:UIApplicationWillResignActiveNotification object:0];

  id v34 = [v32 defaultCenter];
  [v34 addObserver:v1 selector:"handleAppWillMoveToForeground" name:UIApplicationDidBecomeActiveNotification object:0];

  id v35 = [v32 defaultCenter];
  if (qword_1007F6E88 != -1) {
    swift_once();
  }
  [v35 addObserver:v1 selector:"handleDeletedAssetWithNotification:" name:qword_10083D410 object:0];

  [v3 reloadData];
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v38[4] = sub_1002F4FD4;
  v38[5] = v36;
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 1107296256;
  v38[2] = sub_1001C7318;
  v38[3] = &unk_1007A4A98;
  uint64_t v37 = _Block_copy(v38);
  swift_release();
  [v3 performBatchUpdates:0 completion:v37];
  _Block_release(v37);
}

void sub_1002E7CF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasLoaded) = 1;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100490D0C();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1002E7DCC(char a1)
{
  v30.receiver = v1;
  v30.super_class = (Class)type metadata accessor for FullScreenCollectionViewController();
  [super viewDidAppear:a1 & 1];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView];
  if (v3)
  {
    id v23 = v3;
    id v4 = [v23 visibleCells];
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v24 = v1;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v7 = 0;
        unint64_t v8 = v5 & 0xC000000000000001;
        id v9 = &qword_100807600;
        do
        {
          if (v8) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v5 + 8 * v7 + 32);
          }
          id v11 = v10;
          type metadata accessor for FullScreenCollectionViewCell();
          uint64_t v12 = swift_dynamicCastClass();
          if (v12)
          {
            id v13 = *(void **)(v12 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
            if (v13)
            {
              uint64_t v14 = (uint64_t)v13 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView;
              swift_beginAccess();
              sub_10001B220(v14, (uint64_t)v28, v9);
              if (v29)
              {
                sub_100141410((uint64_t)v28, (uint64_t)v25);
                id v15 = v13;
                sub_10001457C((uint64_t)v28, v9);
                unint64_t v16 = v8;
                uint64_t v17 = v6;
                unint64_t v18 = v5;
                id v19 = v9;
                uint64_t v21 = v26;
                uint64_t v20 = v27;
                sub_10002E0BC(v25, v26);
                uint64_t v22 = v21;
                id v9 = v19;
                unint64_t v5 = v18;
                uint64_t v6 = v17;
                unint64_t v8 = v16;
                (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v20);
                _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v25);
              }
              else
              {
                sub_10001457C((uint64_t)v28, v9);
              }
            }
          }

          ++v7;
        }
        while (v6 != v7);
      }
    }
    swift_bridgeObjectRelease();

    v24[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasAppeared] = 1;
  }
}

void sub_1002E8098(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  unint64_t v5 = (unint64_t *)(v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  swift_beginAccess();
  unint64_t v6 = *v5;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl);
  swift_bridgeObjectRetain();
  sub_100518068((uint64_t)[v7 currentPage], v6);
  id v9 = v8;
  uint64_t v11 = v10;
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v11 == v13 >> 1)
  {
    swift_unknownObjectRelease();
    id v9 = 0;
LABEL_3:
    uint64_t v14 = self;
    id v15 = [v14 mainBundle];
    v120._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v120._object = (void *)0x80000001006972B0;
    v16._object = (void *)0x8000000100697290;
    v16._uint64_t countAndFlagsBits = 0xD000000000000011;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v120);
    uint64_t countAndFlagsBits = v18._countAndFlagsBits;
    object = v18._object;

    id v21 = [v14 mainBundle];
    v22._uint64_t countAndFlagsBits = 0xD000000000000030;
    v121._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
    v121._object = (void *)0x8000000100697310;
    v22._object = (void *)0x80000001006972D0;
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v121);
    uint64_t v25 = v24._countAndFlagsBits;
    uint64_t v26 = v24._object;

    id v27 = [v14 mainBundle];
    unint64_t v28 = 0xD000000000000056;
    unint64_t v29 = 0xD000000000000091;
    unint64_t v119 = 0x80000001006973C0;
    objc_super v30 = "This attachment is the only content in your entry. Removing it will delete this entry.";
LABEL_4:
    unint64_t v31 = (unint64_t)(v30 - 32) | 0x8000000000000000;
    v32._uint64_t countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    Swift::String v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, (Swift::String_optional)0, (NSBundle)v27, v32, *(Swift::String *)&v29);
    uint64_t v34 = v33._countAndFlagsBits;
    id v35 = v33._object;
  }
  else
  {
    if (v11 < (uint64_t)(v13 >> 1))
    {
      id v9 = (id *)v9[v11];
      swift_unknownObjectRelease();
      switch(*((unsigned char *)v9 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type))
      {
        case 0:
        case 1:
          uint64_t v45 = self;
          id v46 = [v45 mainBundle];
          v124._uint64_t countAndFlagsBits = 0xD000000000000019;
          v124._object = (void *)0x80000001006982E0;
          v47._uint64_t countAndFlagsBits = 0x502065766F6D6552;
          v47._object = (void *)0xEC0000006F746F68;
          v48._uint64_t countAndFlagsBits = 0;
          v48._object = (void *)0xE000000000000000;
          Swift::String v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v124);
          uint64_t countAndFlagsBits = v49._countAndFlagsBits;
          object = v49._object;

          id v50 = [v45 mainBundle];
          v51._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
          v125._uint64_t countAndFlagsBits = 0xD000000000000048;
          v125._object = (void *)0x8000000100698330;
          v51._object = (void *)0x8000000100698300;
          v52._uint64_t countAndFlagsBits = 0;
          v52._object = (void *)0xE000000000000000;
          Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v125);
          uint64_t v25 = v53._countAndFlagsBits;
          uint64_t v26 = v53._object;

          id v27 = [v45 mainBundle];
          unint64_t v28 = 0xD000000000000051;
          unint64_t v29 = 0xD000000000000087;
          unint64_t v119 = 0x80000001006983E0;
          objc_super v30 = "This photo is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 2:
          id v54 = self;
          id v55 = [v54 mainBundle];
          v126._uint64_t countAndFlagsBits = 0xD000000000000019;
          v126._object = (void *)0x8000000100698150;
          v56._uint64_t countAndFlagsBits = 0x562065766F6D6552;
          v56._object = (void *)0xEC0000006F656469;
          v57._uint64_t countAndFlagsBits = 0;
          v57._object = (void *)0xE000000000000000;
          Swift::String v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v126);
          uint64_t countAndFlagsBits = v58._countAndFlagsBits;
          object = v58._object;

          id v59 = [v54 mainBundle];
          v60._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
          v127._uint64_t countAndFlagsBits = 0xD000000000000048;
          v127._object = (void *)0x80000001006981A0;
          v60._object = (void *)0x8000000100698170;
          v61._uint64_t countAndFlagsBits = 0;
          v61._object = (void *)0xE000000000000000;
          Swift::String v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v127);
          uint64_t v25 = v62._countAndFlagsBits;
          uint64_t v26 = v62._object;

          id v27 = [v54 mainBundle];
          unint64_t v28 = 0xD000000000000051;
          unint64_t v29 = 0xD000000000000087;
          unint64_t v119 = 0x8000000100698250;
          objc_super v30 = "This video is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 3:
          uint64_t v63 = self;
          id v64 = [v63 mainBundle];
          v128._uint64_t countAndFlagsBits = 0xD000000000000018;
          v128._object = (void *)0x8000000100697DD0;
          v65._uint64_t countAndFlagsBits = 0x532065766F6D6552;
          v65._object = (void *)0xEB00000000676E6FLL;
          v66._uint64_t countAndFlagsBits = 0;
          v66._object = (void *)0xE000000000000000;
          Swift::String v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v128);
          uint64_t countAndFlagsBits = v67._countAndFlagsBits;
          object = v67._object;

          id v68 = [v63 mainBundle];
          v69._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
          v129._uint64_t countAndFlagsBits = 0xD000000000000047;
          v129._object = (void *)0x8000000100697E20;
          v69._object = (void *)0x8000000100697DF0;
          v70._uint64_t countAndFlagsBits = 0;
          v70._object = (void *)0xE000000000000000;
          Swift::String v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v129);
          uint64_t v25 = v71._countAndFlagsBits;
          uint64_t v26 = v71._object;

          id v27 = [v63 mainBundle];
          unint64_t v28 = 0xD000000000000050;
          unint64_t v29 = 0xD000000000000085;
          unint64_t v119 = 0x8000000100697ED0;
          objc_super v30 = "This song is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 4:
          uint64_t v72 = self;
          id v73 = [v72 mainBundle];
          v130._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
          v130._object = (void *)0x8000000100697C40;
          v74._uint64_t countAndFlagsBits = 0x502065766F6D6552;
          v74._object = (void *)0xEE0074736163646FLL;
          v75._uint64_t countAndFlagsBits = 0;
          v75._object = (void *)0xE000000000000000;
          Swift::String v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, (Swift::String_optional)0, (NSBundle)v73, v75, v130);
          uint64_t countAndFlagsBits = v76._countAndFlagsBits;
          object = v76._object;

          id v77 = [v72 mainBundle];
          v78._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
          v131._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
          v131._object = (void *)0x8000000100697C90;
          v78._object = (void *)0x8000000100697C60;
          v79._uint64_t countAndFlagsBits = 0;
          v79._object = (void *)0xE000000000000000;
          Swift::String v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v78, (Swift::String_optional)0, (NSBundle)v77, v79, v131);
          uint64_t v25 = v80._countAndFlagsBits;
          uint64_t v26 = v80._object;

          id v27 = [v72 mainBundle];
          unint64_t v28 = 0xD000000000000053;
          unint64_t v29 = 0xD00000000000008BLL;
          unint64_t v119 = 0x8000000100697D40;
          objc_super v30 = "This podcast is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 6:
          uint64_t v81 = self;
          id v82 = [v81 mainBundle];
          v83._uint64_t countAndFlagsBits = 0xD000000000000016;
          v132._uint64_t countAndFlagsBits = 0xD000000000000023;
          v132._object = (void *)0x8000000100697F80;
          v83._object = (void *)0x8000000100697F60;
          v84._uint64_t countAndFlagsBits = 0;
          v84._object = (void *)0xE000000000000000;
          Swift::String v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v83, (Swift::String_optional)0, (NSBundle)v82, v84, v132);
          uint64_t countAndFlagsBits = v85._countAndFlagsBits;
          object = v85._object;

          id v86 = [v81 mainBundle];
          v87._uint64_t countAndFlagsBits = 0xD000000000000035;
          v133._uint64_t countAndFlagsBits = 0xD000000000000052;
          v133._object = (void *)0x8000000100697FF0;
          v87._object = (void *)0x8000000100697FB0;
          v88._uint64_t countAndFlagsBits = 0;
          v88._object = (void *)0xE000000000000000;
          Swift::String v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v133);
          uint64_t v25 = v89._countAndFlagsBits;
          uint64_t v26 = v89._object;

          id v27 = [v81 mainBundle];
          unint64_t v28 = 0xD00000000000005BLL;
          unint64_t v29 = 0xD00000000000009BLL;
          unint64_t v119 = 0x80000001006980B0;
          objc_super v30 = "This audio recording is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 8:
          uint64_t v90 = self;
          id v91 = [v90 mainBundle];
          v134._uint64_t countAndFlagsBits = 0xD000000000000017;
          v134._object = (void *)0x8000000100697960;
          v92._uint64_t countAndFlagsBits = 0x4D2065766F6D6552;
          v92._object = (void *)0xEA00000000007061;
          v93._uint64_t countAndFlagsBits = 0;
          v93._object = (void *)0xE000000000000000;
          Swift::String v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v92, (Swift::String_optional)0, (NSBundle)v91, v93, v134);
          uint64_t countAndFlagsBits = v94._countAndFlagsBits;
          object = v94._object;

          id v95 = [v90 mainBundle];
          v96._uint64_t countAndFlagsBits = 0xD000000000000029;
          v135._uint64_t countAndFlagsBits = 0xD000000000000046;
          v135._object = (void *)0x8000000100697980;
          v96._object = (void *)0x8000000100696E90;
          v97._uint64_t countAndFlagsBits = 0;
          v97._object = (void *)0xE000000000000000;
          Swift::String v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, (Swift::String_optional)0, (NSBundle)v95, v97, v135);
          uint64_t v25 = v98._countAndFlagsBits;
          uint64_t v26 = v98._object;

          id v27 = [v90 mainBundle];
          unint64_t v28 = 0xD00000000000004FLL;
          unint64_t v29 = 0xD000000000000083;
          unint64_t v119 = 0x8000000100697A20;
          objc_super v30 = "This map is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 0xA:
          v99 = self;
          id v100 = [v99 mainBundle];
          v136._uint64_t countAndFlagsBits = 0xD000000000000018;
          v136._object = (void *)0x80000001006977D0;
          v101._uint64_t countAndFlagsBits = 0x4C2065766F6D6552;
          v101._object = (void *)0xEB000000006B6E69;
          v102._uint64_t countAndFlagsBits = 0;
          v102._object = (void *)0xE000000000000000;
          Swift::String v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v101, (Swift::String_optional)0, (NSBundle)v100, v102, v136);
          uint64_t countAndFlagsBits = v103._countAndFlagsBits;
          object = v103._object;

          id v104 = [v99 mainBundle];
          v105._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
          v137._uint64_t countAndFlagsBits = 0xD000000000000047;
          v137._object = (void *)0x8000000100697820;
          v105._object = (void *)0x80000001006977F0;
          v106._uint64_t countAndFlagsBits = 0;
          v106._object = (void *)0xE000000000000000;
          Swift::String v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v137);
          uint64_t v25 = v107._countAndFlagsBits;
          uint64_t v26 = v107._object;

          id v27 = [v99 mainBundle];
          unint64_t v28 = 0xD000000000000050;
          unint64_t v29 = 0xD000000000000085;
          unint64_t v119 = 0x80000001006978D0;
          objc_super v30 = "This link is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 0xB:
          v108 = self;
          id v109 = [v108 mainBundle];
          v138._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
          v138._object = (void *)0x8000000100697620;
          v110._object = (void *)0x8000000100697600;
          v110._uint64_t countAndFlagsBits = 0xD000000000000011;
          v111._uint64_t countAndFlagsBits = 0;
          v111._object = (void *)0xE000000000000000;
          Swift::String v112 = NSLocalizedString(_:tableName:bundle:value:comment:)(v110, (Swift::String_optional)0, (NSBundle)v109, v111, v138);
          uint64_t countAndFlagsBits = v112._countAndFlagsBits;
          object = v112._object;

          id v113 = [v108 mainBundle];
          v114._uint64_t countAndFlagsBits = 0xD000000000000030;
          v139._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
          v139._object = (void *)0x8000000100697680;
          v114._object = (void *)0x8000000100697640;
          v115._uint64_t countAndFlagsBits = 0;
          v115._object = (void *)0xE000000000000000;
          Swift::String v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v114, (Swift::String_optional)0, (NSBundle)v113, v115, v139);
          uint64_t v25 = v116._countAndFlagsBits;
          uint64_t v26 = v116._object;

          id v27 = [v108 mainBundle];
          unint64_t v28 = 0xD000000000000056;
          unint64_t v29 = 0xD000000000000091;
          unint64_t v119 = 0x8000000100697730;
          objc_super v30 = "This connection is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 0xC:
        case 0xD:
        case 0x10:
          uint64_t v36 = self;
          id v37 = [v36 mainBundle];
          v122._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
          v122._object = (void *)0x8000000100697AB0;
          v38._uint64_t countAndFlagsBits = 0x412065766F6D6552;
          v38._object = (void *)0xEF79746976697463;
          v39._uint64_t countAndFlagsBits = 0;
          v39._object = (void *)0xE000000000000000;
          Swift::String v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v122);
          uint64_t countAndFlagsBits = v40._countAndFlagsBits;
          object = v40._object;

          id v41 = [v36 mainBundle];
          v42._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
          v123._uint64_t countAndFlagsBits = 0xD00000000000004BLL;
          v123._object = (void *)0x8000000100697B00;
          v42._object = (void *)0x8000000100697AD0;
          v43._uint64_t countAndFlagsBits = 0;
          v43._object = (void *)0xE000000000000000;
          Swift::String v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v123);
          uint64_t v25 = v44._countAndFlagsBits;
          uint64_t v26 = v44._object;

          id v27 = [v36 mainBundle];
          unint64_t v28 = 0xD000000000000054;
          unint64_t v29 = 0xD00000000000008DLL;
          unint64_t v119 = 0x8000000100697BB0;
          objc_super v30 = "This activity is the only content in your entry. Removing it will delete this entry.";
          goto LABEL_4;
        case 0xF:
          if (qword_1007F7518 == -1) {
            goto LABEL_19;
          }
          goto LABEL_20;
        default:
          goto LABEL_3;
      }
    }
    __break(1u);
LABEL_20:
    swift_once();
LABEL_19:
    uint64_t countAndFlagsBits = qword_10083DBD8;
    object = (void *)unk_10083DBE0;
    swift_bridgeObjectRetain();
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v25 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v26 = v117;
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v34 = String.init(localized:table:bundle:locale:comment:)();
    id v35 = v118;
  }

  *a1 = countAndFlagsBits;
  a1[1] = (uint64_t)object;
  a1[2] = v25;
  a1[3] = (uint64_t)v26;
  a1[4] = v34;
  a1[5] = (uint64_t)v35;
}

uint64_t sub_1002E9054()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v47 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  unint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v49) {
    return sub_10001457C((uint64_t)aBlock, &qword_1007FAD50);
  }
  sub_100010218((uint64_t *)&unk_1008076A0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v43 = (uint64_t)v3;
    uint64_t v44 = v0;
    uint64_t v17 = v52;
    aBlock[0] = type metadata accessor for Journaling.EntryViewModel();
    sub_100010218(&qword_100803958);
    uint64_t v18 = String.init<A>(describing:)();
    if (*(void *)(v17 + 16)
      && (unint64_t v20 = sub_10001B5D0(v18, v19), (v21 & 1) != 0)
      && (uint64_t v22 = *(void *)(*(void *)(v17 + 56) + 8 * v20),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          *(void *)(v22 + 16))
      && (uint64_t v23 = *(void *)(v44 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry)) != 0)
    {
      v42[0] = v22;
      v42[1] = v23;
      uint64_t v24 = v23 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
      swift_beginAccess();
      sub_10001B220(v24, (uint64_t)v11, &qword_100800950);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        swift_bridgeObjectRelease();
        sub_10001457C((uint64_t)v11, &qword_100800950);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
        swift_retain();
        uint64_t v35 = UUID.uuidString.getter();
        char v37 = sub_100542090(v35, v36, v42[0]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v37)
        {
          swift_bridgeObjectRelease();
          sub_10001B284(0, (unint64_t *)&qword_100805AB0);
          uint64_t v43 = static OS_dispatch_queue.main.getter();
          uint64_t v38 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v50 = sub_1002F4F68;
          uint64_t v51 = v38;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10017D530;
          Swift::String v49 = &unk_1007A4A70;
          Swift::String v39 = _Block_copy(aBlock);
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_1002F4F8C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100010218(&qword_100804DB0);
          sub_10001B1BC();
          uint64_t v40 = v45;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          id v41 = (void *)v43;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v39);

          swift_release();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v40);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v6);
          return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        }
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    aBlock[0] = _s5AssetCMa();
    sub_100010218(&qword_1008076B0);
    uint64_t v25 = String.init<A>(describing:)();
    if (*(void *)(v17 + 16) && (unint64_t v27 = sub_10001B5D0(v25, v26), (v28 & 1) != 0))
    {
      uint64_t v29 = *(void *)(*(void *)(v17 + 56) + 8 * v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v29 + 16))
      {
        uint64_t v30 = type metadata accessor for TaskPriority();
        uint64_t v31 = v43;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v43, 1, 1, v30);
        uint64_t v32 = swift_allocObject();
        swift_unknownObjectWeakInit();
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v33 = static MainActor.shared.getter();
        uint64_t v34 = (void *)swift_allocObject();
        v34[2] = v33;
        v34[3] = &protocol witness table for MainActor;
        v34[4] = v32;
        v34[5] = v29;
        swift_release();
        sub_100328A60(v31, (uint64_t)&unk_1008076C0, (uint64_t)v34);
        return swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002E979C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002E9834, v7, v6);
}

uint64_t sub_1002E9834()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_27:
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  uint64_t v2 = (char *)Strong;
  uint64_t result = (uint64_t)[*(id *)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl) numberOfPages];
  if (result < 0) {
    goto LABEL_32;
  }
  uint64_t v4 = result;
  if (!result)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_24:
    if (*((void *)v7 + 2))
    {
      sub_1002ECA50((uint64_t)v7);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    goto LABEL_27;
  }
  unint64_t v5 = &v2[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  swift_beginAccess();
  uint64_t v6 = 0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v8 = *(void *)v5;
    if (!(*(void *)v5 >> 62))
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v6 >= v9) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result < 0) {
      break;
    }
    if (v6 >= result)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
LABEL_9:
    if ((v8 & 0xC000000000000001) != 0)
    {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((unint64_t)v6 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_31;
      }
      id v10 = *(id *)(v8 + 8 * v6 + 32);
    }
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v0 + 72);
    swift_bridgeObjectRelease();
    uint64_t v13 = UUID.uuidString.getter();
    LOBYTE(v12) = sub_100542090(v13, v14, v12);
    swift_bridgeObjectRelease();
    if (v12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = (double *)sub_1002A6500(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      unint64_t v16 = *((void *)v7 + 2);
      unint64_t v15 = *((void *)v7 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v7 = (double *)sub_1002A6500((void *)(v15 > 1), v16 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v16 + 1;
      *(void *)&v7[v16 + 4] = v6;
    }

LABEL_6:
    if (v4 == ++v6) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void sub_1002E9BF8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  if (!v1) {
    return;
  }
  id v20 = v1;
  id v2 = [v20 subviews];
  sub_10001B284(0, (unint64_t *)&qword_100802730);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = &OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView;
      unint64_t v21 = v3;
      unint64_t v22 = v3 & 0xC000000000000001;
      do
      {
        if (v6) {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v8 = *(id *)(v3 + 8 * v5 + 32);
        }
        uint64_t v9 = v8;
        type metadata accessor for FullScreenCollectionViewCell();
        uint64_t v10 = swift_dynamicCastClass();
        if (v10
          && (uint64_t v11 = *(char **)(v10 + *v7)) != 0
          && (uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia],
              swift_unknownObjectWeakLoadStrong()))
        {
          uint64_t v13 = *((void *)v12 + 1);
          uint64_t v14 = v7;
          uint64_t ObjectType = swift_getObjectType();
          unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
          uint64_t v17 = v11;
          uint64_t v18 = ObjectType;
          uint64_t v7 = v14;
          uint64_t v19 = v13;
          unint64_t v3 = v21;
          unint64_t v6 = v22;
          v16(v18, v19);

          swift_unknownObjectRelease();
        }
        else
        {
        }
        ++v5;
      }
      while (v4 != v5);
    }
  }

  swift_bridgeObjectRelease();
}

void sub_1002E9E48()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  if (v1)
  {
    id v29 = v1;
    id v2 = [v29 subviews];
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_39;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v4)
    {
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      unint64_t v30 = v3 + 32;
      uint64_t v31 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v33 = v4;
      unint64_t v34 = v3;
      unint64_t v32 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v31 + 16)) {
            goto LABEL_37;
          }
          id v7 = *(id *)(v30 + 8 * v5);
        }
        id v8 = v7;
        if (__OFADD__(v5++, 1)) {
          break;
        }
        type metadata accessor for FullScreenCollectionViewCell();
        uint64_t v10 = swift_dynamicCastClass();
        if (!v10) {
          goto LABEL_6;
        }
        uint64_t v11 = *(char **)(v10 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
        if (!v11) {
          goto LABEL_6;
        }
        uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          unint64_t v3 = Strong;
          uint64_t v14 = *((void *)v12 + 1);
          uint64_t ObjectType = swift_getObjectType();
          unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 24);
          uint64_t v17 = v11;
          v16(ObjectType, v14);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v18 = v11;
        }
        id v19 = [v11 subviews];
        unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v21)
          {
LABEL_19:
            if (v21 < 1) {
              goto LABEL_38;
            }
            for (uint64_t i = 0; i != v21; ++i)
            {
              if ((v20 & 0xC000000000000001) != 0) {
                id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v23 = *(id *)(v20 + 8 * i + 32);
              }
              uint64_t v24 = v23;
              swift_getObjectType();
              uint64_t v25 = swift_conformsToProtocol2();
              if (v25) {
                uint64_t v26 = v25;
              }
              else {
                uint64_t v26 = 0;
              }
              if (v25) {
                unint64_t v27 = v24;
              }
              else {
                unint64_t v27 = 0;
              }
              if (v27)
              {
                uint64_t v28 = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v26 + 24))(v28, v26);
              }
            }
          }
        }
        else
        {
          uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v21) {
            goto LABEL_19;
          }
        }

        swift_bridgeObjectRelease();
        uint64_t v4 = v33;
        unint64_t v3 = v34;
        unint64_t v6 = v32;
LABEL_6:

        if (v5 == v4) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_40:

    swift_bridgeObjectRelease();
  }
}

void sub_1002EA180()
{
  uint64_t v1 = v0;
  id v2 = self;
  id v3 = [v2 fractionalWidthDimension:1.0];
  id v4 = [v2 fractionalHeightDimension:1.0];
  unint64_t v5 = self;
  id v6 = [v5 sizeWithWidthDimension:v3 heightDimension:v4];

  id v7 = [self itemWithLayoutSize:v6];
  id v8 = [v2 fractionalWidthDimension:1.0];
  id v9 = [v2 fractionalHeightDimension:1.0];
  id v10 = [v5 sizeWithWidthDimension:v8 heightDimension:v9];

  uint64_t v11 = self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1006D6D00;
  *(void *)(v12 + 32) = v7;
  v27[0] = v12;
  specialized Array._endMutation()();
  sub_10001B284(0, &qword_100807690);
  id v13 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v11 horizontalGroupWithLayoutSize:v10 subitems:isa, v27[0]];

  id v16 = [self sectionWithGroup:v15];
  [v16 setOrthogonalScrollingBehavior:5];
  if (qword_1007F7300 != -1) {
    swift_once();
  }
  [v16 setInterGroupSpacing:*(double *)&qword_10083D910];
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27[4] = sub_1002F4E54;
  v27[5] = v17;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  v27[2] = sub_1002EA5E0;
  v27[3] = &unk_1007A4A20;
  uint64_t v18 = _Block_copy(v27);
  swift_release();
  [v16 setVisibleItemsInvalidationHandler:v18];
  _Block_release(v18);
  id v19 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  id v20 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayout) initWithSection:v16 configuration:v19];
  id v21 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v20 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  uint64_t v22 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView;
  id v23 = *(void **)(v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView) = v21;

  uint64_t v24 = *(void **)(v1 + v22);
  if (v24)
  {
    [v24 setAutomaticallyAdjustsScrollIndicatorInsets:0];
    uint64_t v25 = *(void **)(v1 + v22);
    if (v25)
    {
      id v26 = v25;
      [v26 setContentInsetAdjustmentBehavior:2];
    }
  }
}

void sub_1002EA584(unint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    sub_1002F3D88(a1);
  }
}

uint64_t sub_1002EA5E0(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v8 = *(void (**)(uint64_t, uint64_t, double, double))(a1 + 32);
  sub_100010218(&qword_100807698);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  swift_unknownObjectRetain();
  v8(v9, a5, a2, a3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

id sub_1002EA694()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl);
  id v3 = (unint64_t *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  swift_beginAccess();
  unint64_t v4 = *v3;
  if (v4 >> 62)
  {
    id v15 = v2;
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v6 = v2;
  }
  [v2 setNumberOfPages:v5];

  [*(id *)(v0 + v1) setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = *(void **)(v0 + v1);
  id v8 = self;
  id v9 = v7;
  id v10 = [v8 labelColor];
  [v9 setCurrentPageIndicatorTintColor:v10];

  id v11 = *(id *)(v0 + v1);
  id v12 = [v8 grayColor];
  id v13 = [v12 colorWithAlphaComponent:0.5];

  [v11 setPageIndicatorTintColor:v13];
  [*(id *)(v0 + v1) addTarget:v0 action:"pageControlTapped" forControlEvents:4096];
  [*(id *)(v0 + v1) setAccessibilityContainerType:4];
  return [*(id *)(v0 + v1) setHidesForSinglePage:1];
}

id sub_1002EA868()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = __chkstk_darwin(v1).n128_u64[0];
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id result = [*(id *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl) currentPage:v3];
  id v7 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  if (v7)
  {
    uint64_t v8 = (uint64_t)result;
    id v9 = v7;
    IndexPath.init(item:section:)();
    uint64_t v10 = (uint64_t)[v9 numberOfItemsInSection:0];
    if (v8 < v10 && v10 >= 2)
    {
      id v12 = [v9 indexPathsForVisibleItems];
      uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v14);
      *(void *)&v16[-16] = v5;
      LOBYTE(v12) = sub_1002E6408((uint64_t (*)(char *))sub_1002F4DA8, (uint64_t)&v16[-32], v13);
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_1002EAC84();
      }
      else
      {
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v9 scrollToItemAtIndexPath:isa atScrollPosition:16 animated:1];
      }
    }

    return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

void sub_1002EAAA0(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v9 = *(void **)(v2 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  if (v9)
  {
    id v10 = v9;
    IndexPath.init(item:section:)();
    uint64_t v11 = (uint64_t)[v10 numberOfItemsInSection:0];
    if (v11 > a1 && v11 >= 2)
    {
      id v13 = [v10 indexPathsForVisibleItems];
      uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v15);
      *(void *)&v17[-16] = v8;
      LOBYTE(v13) = sub_1002E6408((uint64_t (*)(char *))sub_1002F4DA8, (uint64_t)&v17[-32], v14);
      swift_bridgeObjectRelease();
      if (v13)
      {
        sub_1002EAC84();
      }
      else
      {
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v10 scrollToItemAtIndexPath:isa atScrollPosition:16 animated:a2 & 1];
      }
    }

    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_1002EAC84()
{
  uint64_t v1 = v0;
  sub_1002EB9A8();
  id v2 = [v0 navigationItem];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6D00;
  *(void *)(v3 + 32) = sub_1002E6BB4();
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setLeftBarButtonItems:isa];

  uint64_t v5 = (unint64_t *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  swift_beginAccess();
  unint64_t v6 = *v5;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl];
  swift_bridgeObjectRetain();
  sub_100518068((uint64_t)[v7 currentPage], v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = 0;
  if (v11 != v13 >> 1)
  {
    if (v11 >= (uint64_t)(v13 >> 1))
    {
      __break(1u);
      return;
    }
    uint64_t v14 = *(void **)(v9 + 8 * v11);
    id v15 = v14;
  }
  swift_unknownObjectRelease();
  id v16 = [v1 navigationItem];
  if (sub_1002EAEE4((char *)v14))
  {
    v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v17.super.Class isa = 0;
  }
  [v16 setRightBarButtonItems:v17.super.isa animated:1];

  id v18 = [v1 navigationItem];
  sub_1002EB12C(v14);
  sub_10001B284(0, (unint64_t *)&unk_100807650);
  Class v19 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setCenterItemGroups:v19];
}

void *sub_1002EAEE4(char *a1)
{
  if (!a1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (!v4)
  {
    id v16 = a1;
LABEL_16:

    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = a1;
  id v6 = v4;
  signed int v7 = [v6 minimumSupportedAppVersion];
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  signed int v8 = static Journaling.EntryViewModel.currentAppVersion;

  if (v8 < v7) {
    goto LABEL_16;
  }
  int v9 = v5[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];
  if (v9 == 2)
  {
    if ((*(unsigned char *)(v2
                   + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset) & 1) == 0)
    {
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1006D6D10;
      *(void *)(v18 + 32) = sub_1002E698C();
      *(void *)(v18 + 40) = sub_1002E6B28();
      goto LABEL_21;
    }
LABEL_20:
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1006D6D00;
    *(void *)(v18 + 32) = sub_1002E698C();
LABEL_21:
    specialized Array._endMutation()();
    uint64_t v15 = v18;
LABEL_23:

    return (void *)v15;
  }
  if (v9 == 15)
  {
    sub_1002F20A0();
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1006D6D00;
    id v20 = *(void **)(v2 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_trashAndOpenInContextMenuButton);
    *(void *)(v19 + 32) = v20;
    uint64_t v22 = v19;
    specialized Array._endMutation()();
    uint64_t v15 = v22;
    id v21 = v20;
    goto LABEL_23;
  }
  if (v9 != 6) {
    goto LABEL_20;
  }
  _s10AudioAssetCMa(0);
  if (!swift_dynamicCastClass()) {
    goto LABEL_20;
  }
  uint64_t v10 = v5;
  uint64_t v11 = sub_10010F0D8();
  unint64_t v13 = v12;

  if (!v13) {
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14) {
    goto LABEL_20;
  }

  return 0;
}

void *sub_1002EB12C(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  if (!a1) {
    return _swiftEmptyArrayStorage;
  }
  if (*((unsigned char *)a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type) != 6)
  {
    id v15 = a1;
LABEL_14:

    return _swiftEmptyArrayStorage;
  }
  _s10AudioAssetCMa(0);
  uint64_t v4 = swift_dynamicCastClass();
  id v5 = a1;
  if (!v4) {
    goto LABEL_14;
  }
  id v6 = (char *)v5;
  uint64_t v7 = sub_10010F0D8();
  unint64_t v9 = v8;

  if (!v9) {
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10) {
    goto LABEL_14;
  }
  uint64_t v11 = *(void **)&v6[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (!v11) {
    goto LABEL_12;
  }
  id v12 = v11;
  signed int v13 = [v12 minimumSupportedAppVersion];
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  signed int v14 = static Journaling.EntryViewModel.currentAppVersion;

  if (v14 < v13)
  {
LABEL_12:

    return _swiftEmptyArrayStorage;
  }
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1006D6D00;
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1006D6D20;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v18 = String._bridgeToObjectiveC()();
  uint64_t v35 = self;
  id v19 = [v35 systemImageNamed:v18];

  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v20 = v19;
  char v21 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  v39.value.super.Class isa = 0;
  v39.is_nil = v21;
  v42.value.super.super.Class isa = 0;
  Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v39, v42, v44).super.super.isa;

  *(void *)(v36 + 32) = isa;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v35 systemImageNamed:v23];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v25 = v24;
  v40.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v40.value.super.Class isa = 0;
  v43.value.super.super.Class isa = 0;
  Class v26 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v40, v43, v45).super.super.isa;

  *(void *)(v36 + 40) = v26;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  if (qword_1007F7BC0 != -1) {
    swift_once();
  }
  unint64_t v27 = (void *)qword_10083E8A8;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v28 = v27;
  id v29 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v30 = v29;
  v38.value.super.super.Class isa = (Class)v29;
  v38.is_nil = 0;
  Class v31 = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemTrash, v38, v41).super.super.isa;
  [(objc_class *)v31 setMenuRepresentation:v30];

  *(void *)(v36 + 48) = v31;
  specialized Array._endMutation()();
  id v32 = objc_allocWithZone((Class)UIBarButtonItemGroup);
  Class v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v32 initWithBarButtonItems:v33 representativeItem:0];

  *(void *)(v37 + 32) = v34;
  specialized Array._endMutation()();
  uint64_t v16 = v37;

  return (void *)v16;
}

uint64_t sub_1002EB7E0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (unint64_t *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  swift_beginAccess();
  unint64_t v6 = *v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_initIndexPath, v1);
  swift_bridgeObjectRetain();
  unint64_t v7 = IndexPath.item.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_13:
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v7 & 0x8000000000000000) != 0 || v7 >= v9)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v6 & 0xC000000000000001) != 0) {
    goto LABEL_13;
  }
  if (v7 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v6 + 8 * v7 + 32);
LABEL_8:
    id v11 = v10;
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void sub_1002EB9A8()
{
  id v1 = sub_1002E6B28();
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted)) {
    uint64_t v4 = &OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_muteSymbol;
  }
  else {
    uint64_t v4 = &OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_unmuteSymbol;
  }
  [v1 setImage:*(void *)(v0 + *v4)];

  id v5 = sub_1002E6B28();
  if (*(unsigned char *)(v0 + v3) != 1)
  {
    if (qword_1007F7AA0 == -1) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (qword_1007F7B08 != -1) {
LABEL_11:
  }
    swift_once();
LABEL_8:
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setAccessibilityLabel:v6];
}

void sub_1002EBB50()
{
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl] currentPage];
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  swift_beginAccess();
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((uint64_t)v1 < v20) {
      goto LABEL_3;
    }
  }
  else if ((uint64_t)v1 < *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_1002E8098(&aBlock);
    if (*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v3 == 1 && (v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_textExists] & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v4 = [self mainBundle];
      v34._uint64_t countAndFlagsBits = 0xD000000000000022;
      v34._object = (void *)0x80000001006970E0;
      v5._uint64_t countAndFlagsBits = 0x45206574656C6544;
      v5._object = (void *)0xEC0000007972746ELL;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v34);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    type metadata accessor for JurassicAlertController();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v8 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:0 message:v7 preferredStyle:0];

    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v31 = sub_1002F4BD8;
    uint64_t v32 = v9;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    id v29 = sub_10007453C;
    id v30 = &unk_1007A49A8;
    id v11 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v12 = self;
    id v13 = [v12 actionWithTitle:v10 style:2 handler:v11];
    _Block_release(v11);

    swift_release();
    id v14 = [self mainBundle];
    v35._object = (void *)0x80000001006970C0;
    v15._uint64_t countAndFlagsBits = 0x6C65636E6143;
    v15._object = (void *)0xE600000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v35._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v35);

    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v31 = (void (*)())AudioRecordingActivityState.hash(into:);
    uint64_t v32 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    id v29 = sub_10007453C;
    id v30 = &unk_1007A49D0;
    NSString v18 = _Block_copy(&aBlock);
    swift_release();
    id v19 = [v12 actionWithTitle:v17 style:1 handler:v18];
    _Block_release(v18);

    [v8 addAction:v13];
    [v8 addAction:v19];
    [v0 presentViewController:v8 animated:1 completion:0];

    goto LABEL_17;
  }
  if (qword_1007F6D88 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_100026A54(v21, (uint64_t)qword_1008074C0);
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v22))
  {
    NSString v23 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)NSString v23 = 136315138;
    if (qword_1007F6D90 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for UUID();
    sub_100026A54(v24, (uint64_t)qword_1008074D8);
    sub_1002F4F8C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v33 = sub_10011EA98(v25, v26, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v22, "%s journalAssets out of bounds error", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
LABEL_17:
}

void sub_1002EC1A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl);

    id v3 = [v2 currentPage];
    swift_beginAccess();
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      Swift::String v5 = (void *)v4;
      sub_100010218(&qword_1007FC110);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1006D6280;
      *(void *)(v6 + 32) = v3;
      sub_1002ECA50(v6);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002EC288()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v53 = (char *)&v52 - v8;
  uint64_t v9 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v16 - 8);
  NSString v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v57 = *(void *)(v19 - 8);
  uint64_t v58 = v19;
  *(void *)&double v20 = __chkstk_darwin(v19).n128_u64[0];
  Swift::String v56 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = [(id *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl) currentPage:v20];
  NSString v23 = (unint64_t *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  swift_beginAccess();
  unint64_t v24 = *v23;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    if ((v26 & 0x8000000000000000) == 0) {
      goto LABEL_27;
    }
    __break(1u);
LABEL_25:
    id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    _s16StateOfMindAssetCMa(0);
    uint64_t v29 = swift_dynamicCastClass();
    if (!v29)
    {

      return;
    }
    if (!*(void *)(v29 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata)) {
      goto LABEL_11;
    }
    swift_retain();
    sub_100039278((uint64_t)v15);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
    {
      sub_10001457C((uint64_t)v15, (uint64_t *)&unk_100807640);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v18, 1, 1, v58);
LABEL_12:

      sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FC470);
      return;
    }
    sub_100090BD0((uint64_t)v15, (uint64_t)v12);
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_100807640);
    sub_10001B220((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v18, (uint64_t *)&unk_1007FC470);
    sub_100090B74((uint64_t)v12);
    uint64_t v31 = v57;
    uint64_t v30 = v58;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v18, 1, v58) == 1) {
      goto LABEL_12;
    }
    uint64_t v52 = v28;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v56, v18, v30);
    Class v32 = (Class)[objc_allocWithZone((Class)HealthAppDataTypeDetailLinkBuilder) init];
    id v33 = [self stateOfMindType];
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v35 = [(objc_class *)v32 URLForDataTypeDetailWithObjectType:v33 date:isa];

    if (v35)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v37 = v54;
      uint64_t v36 = v55;
      UIAction_optional v38 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      v38(v3, v6, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v3, 0, 1, v36);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v3, 1, v36) != 1)
      {
        UIImage_optional v39 = v53;
        v38(v53, v3, v36);
LABEL_20:
        UIImage_optional v40 = self;
        id v41 = [v40 sharedApplication];
        URL._bridgeToObjectiveC()(v42);
        UIMenu_optional v44 = v43;
        unsigned int v45 = [v41 canOpenURL:v43];

        if (v45)
        {
          id v46 = [v40 sharedApplication];
          URL._bridgeToObjectiveC()(v47);
          Swift::String v49 = v48;
          sub_100397800((uint64_t)_swiftEmptyArrayStorage);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_1002F4F8C((unint64_t *)&qword_1007F8B80, type metadata accessor for OpenExternalURLOptionsKey);
          Class v50 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v46 openURL:v49 options:v50 completionHandler:0];

          Class v32 = v50;
        }
        uint64_t v51 = v52;

        (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
        return;
      }
    }
    else
    {
      uint64_t v37 = v54;
      uint64_t v36 = v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v3, 1, 1, v55);
    }
    UIImage_optional v39 = v53;
    URL.init(fileURLWithPath:)();
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_100800A60);
    goto LABEL_20;
  }
  unint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v26 = swift_bridgeObjectRetain();
  if ((v22 & 0x8000000000000000) == 0)
  {
    while (v22 < v25)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        goto LABEL_25;
      }
      if (v22 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v27 = *(id *)(v24 + 8 * v22 + 32);
        goto LABEL_7;
      }
      __break(1u);
LABEL_27:
      unint64_t v25 = v26;
      if ((v22 & 0x8000000000000000) != 0) {
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1002ECA50(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v7 = static MainActor.shared.getter();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    void v8[3] = &protocol witness table for MainActor;
    v8[4] = v6;
    void v8[5] = a1;
    swift_release();
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_100807630, (uint64_t)v8);
    swift_release();
  }
}

uint64_t sub_1002ECBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[24] = a4;
  v5[25] = a5;
  uint64_t v6 = type metadata accessor for IndexPath();
  v5[26] = v6;
  v5[27] = *(void *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  sub_100010218(&qword_1007FA1D0);
  v5[30] = swift_task_alloc();
  v5[31] = type metadata accessor for MainActor();
  v5[32] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[33] = v8;
  v5[34] = v7;
  return _swift_task_switch(sub_1002ECCE8, v8, v7);
}

uint64_t sub_1002ECCE8()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  v0[35] = (unint64_t)Strong;
  if (!Strong) {
    goto LABEL_54;
  }
  unint64_t v3 = *(void *)&Strong[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry];
  v0[36] = v3;
  if (!v3)
  {

LABEL_54:
    swift_release();
LABEL_55:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v49 = (uint64_t (*)(void))v0[1];
    return v49();
  }
  Swift::String v66 = v0 + 23;
  unint64_t v4 = v0[25];
  v0[23] = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v5 = swift_allocObject();
  v0[37] = v5;
  *(void *)(v5 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
LABEL_68:
    swift_retain();
LABEL_60:
    swift_release();
    unint64_t i = v0[35];
    if (*(unsigned char *)(i + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave))
    {
      uint64_t v50 = v0[30];
      uint64_t v51 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);
      id v52 = (id)i;
      uint64_t v53 = static MainActor.shared.getter();
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v53;
      v54[3] = &protocol witness table for MainActor;
      v54[4] = v52;
      sub_100328C78(v50, (uint64_t)&unk_100807638, (uint64_t)v54);
      swift_release();
      unint64_t i = v0[35];
    }
    uint64_t v55 = *(void **)(i + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
    unint64_t v57 = v0[36];
    unint64_t v56 = v0[37];
    if (v55)
    {
      uint64_t v58 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v59 = (void *)swift_allocObject();
      v59[2] = v58;
      v59[3] = v66;
      v59[4] = v56;
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = sub_1002F4B24;
      *(void *)(v60 + 24) = v59;
      v0[6] = (unint64_t)sub_10001AC84;
      v0[7] = v60;
      v0[2] = (unint64_t)_NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = (unint64_t)sub_1003F44E4;
      v0[5] = (unint64_t)&unk_1007A48B8;
      Swift::String v61 = _Block_copy(v0 + 2);
      id v62 = v55;
      swift_retain();
      swift_release();
      uint64_t v63 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v63;
      *(void *)(v64 + 24) = v57;
      v0[12] = (unint64_t)sub_1002F4B80;
      v0[13] = v64;
      v0[8] = (unint64_t)_NSConcreteStackBlock;
      v0[9] = 1107296256;
      v0[10] = (unint64_t)sub_1001C7318;
      v0[11] = (unint64_t)&unk_1007A4908;
      Swift::String v65 = _Block_copy(v0 + 8);
      swift_retain();
      swift_release();
      [v62 performBatchUpdates:v61 completion:v65];

      swift_release();
      _Block_release(v65);
      _Block_release(v61);
      swift_release();

      swift_release();
    }
    else
    {
LABEL_65:
      swift_release();

      swift_release();
    }
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  uint64_t v7 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets;
  v0[38] = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView;
  v0[39] = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v8 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  while (1)
  {
    v0[40] = v6;
    unint64_t v10 = *(void *)(v0[25] + 8 * v6 + 24);
    v0[41] = v10;
    IndexPath.init(row:section:)();
    unint64_t v11 = v0[23];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[23] = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v11 = sub_1002A5EB8(0, *(void *)(v11 + 16) + 1, 1, v11);
      *Swift::String v66 = v11;
    }
    unint64_t v14 = *(void *)(v11 + 16);
    unint64_t v13 = *(void *)(v11 + 24);
    if (v14 >= v13 >> 1)
    {
      unint64_t v11 = sub_1002A5EB8(v13 > 1, v14 + 1, 1, v11);
      *Swift::String v66 = v11;
    }
    unint64_t v15 = v0[37];
    unint64_t v16 = v0[29];
    unint64_t v17 = v0[26];
    unint64_t v18 = v0[27];
    *(void *)(v11 + 16) = v14 + 1;
    (*(void (**)(unint64_t, unint64_t, unint64_t))(v18 + 32))(v11+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v14, v16, v17);
    if (*(void *)(v15 + 16) >= (int64_t)v10)
    {
      if (__OFSUB__(v10, 1))
      {
        __break(1u);
        goto LABEL_65;
      }
      *(void *)(v0[37] + 16) = (v10 - 1) & ~((uint64_t)(v10 - 1) >> 63);
    }
    uint64_t v19 = *(void **)(v0[35] + v0[38]);
    if (v19)
    {
      unint64_t v21 = v0[27];
      unint64_t v20 = v0[28];
      unint64_t v22 = v0[26];
      id v23 = v19;
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(unint64_t, unint64_t))(v21 + 8))(v20, v22);
      id v25 = [v23 v8[431]];

      if (v25)
      {
        type metadata accessor for FullScreenCollectionViewCell();
        uint64_t v26 = swift_dynamicCastClass();
        if (!v26) {
          goto LABEL_38;
        }
        id v27 = *(char **)(v26 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
        if (!v27) {
          goto LABEL_38;
        }
        uint64_t v28 = &v27[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v29 = *((void *)v28 + 1);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 24);
          Class v32 = v27;
          v31(ObjectType, v29);
          swift_unknownObjectRelease();
        }
        else
        {
          id v33 = v27;
        }
        id v34 = [v27 subviews:v66];
        sub_10001B284(0, (unint64_t *)&qword_100802730);
        unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        Swift::String v67 = v27;
        if (v35 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v36) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v36)
          {
LABEL_22:
            if (v36 < 1)
            {
              __break(1u);
              goto LABEL_68;
            }
            for (unint64_t i = 0; i != v36; ++i)
            {
              if ((v35 & 0xC000000000000001) != 0) {
                id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v37 = *(id *)(v35 + 8 * i + 32);
              }
              UIAction_optional v38 = v37;
              swift_getObjectType();
              uint64_t v39 = swift_conformsToProtocol2();
              if (v39) {
                uint64_t v40 = v39;
              }
              else {
                uint64_t v40 = 0;
              }
              if (v39) {
                id v41 = v38;
              }
              else {
                id v41 = 0;
              }
              if (v41)
              {
                uint64_t v42 = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v40 + 24))(v42, v40);
              }
            }
          }
        }

        swift_bridgeObjectRelease();
        uint64_t v8 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_38:
      }
    }
    unint64_t v43 = *(void *)(v0[35] + v0[39]);
    if (v43 >> 62) {
      break;
    }
    unint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if ((v10 & 0x8000000000000000) == 0) {
      goto LABEL_41;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    unint64_t v9 = v0[40];
    unint64_t v6 = v9 - 1;
    if (v9 == 1) {
      goto LABEL_59;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (result < 0)
  {
    __break(1u);
LABEL_59:
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  unint64_t v44 = result;
  if ((v10 & 0x8000000000000000) != 0) {
    goto LABEL_5;
  }
LABEL_41:
  if (v10 >= v44) {
    goto LABEL_5;
  }
  if ((v43 & 0xC000000000000001) != 0)
  {
    id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_49:
    uint64_t v47 = (uint64_t)v46;
    v0[42] = (unint64_t)v46;
    swift_bridgeObjectRelease();
    Swift::String v48 = (void *)swift_task_alloc();
    v0[43] = (unint64_t)v48;
    *Swift::String v48 = v0;
    v48[1] = sub_1002ED5DC;
    return sub_1000E99A4(v47);
  }
  else
  {
    if (v10 < *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v46 = *(id *)(v43 + 8 * v10 + 32);
      goto LABEL_49;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002ED5DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 272);
  uint64_t v3 = *(void *)(v1 + 264);
  return _swift_task_switch(sub_1002ED6FC, v3, v2);
}

uint64_t sub_1002ED6FC()
{
  uint64_t v64 = v0 + 23;
  unint64_t v2 = v0[41];
  uint64_t v3 = (void *)v0[42];
  swift_beginAccess();
  unint64_t v4 = (void *)sub_10035FEF4(v2);
  swift_endAccess();

  unint64_t v5 = v0[40];
  unint64_t v6 = v5 - 1;
  if (v5 == 1)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t i = v0[35];
    if (*(unsigned char *)(i + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave))
    {
      uint64_t v47 = v0[30];
      uint64_t v48 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
      id v49 = (id)i;
      uint64_t v50 = static MainActor.shared.getter();
      uint64_t v51 = (void *)swift_allocObject();
      v51[2] = v50;
      v51[3] = &protocol witness table for MainActor;
      v51[4] = v49;
      sub_100328C78(v47, (uint64_t)&unk_100807638, (uint64_t)v51);
      swift_release();
      unint64_t i = v0[35];
    }
    id v52 = *(void **)(i + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
    unint64_t v54 = v0[36];
    unint64_t v53 = v0[37];
    if (v52)
    {
      uint64_t v55 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v56 = (void *)swift_allocObject();
      v56[2] = v55;
      v56[3] = v64;
      v56[4] = v53;
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = sub_1002F4B24;
      *(void *)(v57 + 24) = v56;
      v0[6] = (unint64_t)sub_10001AC84;
      v0[7] = v57;
      v0[2] = (unint64_t)_NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = (unint64_t)sub_1003F44E4;
      v0[5] = (unint64_t)&unk_1007A48B8;
      uint64_t v58 = _Block_copy(v0 + 2);
      id v59 = v52;
      swift_retain();
      swift_release();
      uint64_t v60 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v60;
      *(void *)(v61 + 24) = v54;
      v0[12] = (unint64_t)sub_1002F4B80;
      v0[13] = v61;
      v0[8] = (unint64_t)_NSConcreteStackBlock;
      v0[9] = 1107296256;
      v0[10] = (unint64_t)sub_1001C7318;
      v0[11] = (unint64_t)&unk_1007A4908;
      id v62 = _Block_copy(v0 + 8);
      swift_retain();
      swift_release();
      [v59 performBatchUpdates:v58 completion:v62];

      swift_release();
      _Block_release(v62);
      _Block_release(v58);
      swift_release();

      swift_release();
    }
    else
    {
LABEL_56:
      swift_release();

      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = (uint64_t (*)(void))v0[1];
    return v63();
  }
  uint64_t v7 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  while (1)
  {
    v0[40] = v6;
    unint64_t v8 = *(void *)(v0[25] + 8 * v5 + 16);
    v0[41] = v8;
    IndexPath.init(row:section:)();
    unint64_t v9 = v0[23];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[23] = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v9 = sub_1002A5EB8(0, *(void *)(v9 + 16) + 1, 1, v9);
      *uint64_t v64 = v9;
    }
    unint64_t v12 = *(void *)(v9 + 16);
    unint64_t v11 = *(void *)(v9 + 24);
    if (v12 >= v11 >> 1)
    {
      unint64_t v9 = sub_1002A5EB8(v11 > 1, v12 + 1, 1, v9);
      *uint64_t v64 = v9;
    }
    unint64_t v13 = v0[37];
    unint64_t v14 = v0[29];
    unint64_t v15 = v0[26];
    unint64_t v16 = v0[27];
    *(void *)(v9 + 16) = v12 + 1;
    (*(void (**)(unint64_t, unint64_t, unint64_t))(v16 + 32))(v9+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v12, v14, v15);
    if (*(void *)(v13 + 16) >= (int64_t)v8)
    {
      if (__OFSUB__(v8, 1)) {
        goto LABEL_55;
      }
      *(void *)(v0[37] + 16) = (v8 - 1) & ~((uint64_t)(v8 - 1) >> 63);
    }
    unint64_t v17 = *(void **)(v0[35] + v0[38]);
    if (v17)
    {
      unint64_t v19 = v0[27];
      unint64_t v18 = v0[28];
      unint64_t v20 = v0[26];
      id v21 = v17;
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(unint64_t, unint64_t))(v19 + 8))(v18, v20);
      id v23 = [v21 v7[431]];

      if (v23)
      {
        type metadata accessor for FullScreenCollectionViewCell();
        uint64_t v24 = swift_dynamicCastClass();
        if (!v24) {
          goto LABEL_36;
        }
        id v25 = *(char **)(v24 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
        if (!v25) {
          goto LABEL_36;
        }
        uint64_t v26 = &v25[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v27 = *((void *)v26 + 1);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 24);
          uint64_t v30 = v25;
          v29(ObjectType, v27);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v31 = v25;
        }
        id v32 = [v25 subviews:v64];
        sub_10001B284(0, (unint64_t *)&qword_100802730);
        unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        Swift::String v65 = v25;
        if (v33 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v34) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v34)
          {
LABEL_20:
            if (v34 < 1)
            {
              __break(1u);
              goto LABEL_61;
            }
            for (unint64_t i = 0; i != v34; ++i)
            {
              if ((v33 & 0xC000000000000001) != 0) {
                id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v35 = *(id *)(v33 + 8 * i + 32);
              }
              uint64_t v36 = v35;
              swift_getObjectType();
              uint64_t v37 = swift_conformsToProtocol2();
              if (v37) {
                uint64_t v38 = v37;
              }
              else {
                uint64_t v38 = 0;
              }
              if (v37) {
                uint64_t v39 = v36;
              }
              else {
                uint64_t v39 = 0;
              }
              if (v39)
              {
                uint64_t v40 = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v38 + 24))(v40, v38);
              }
            }
          }
        }

        swift_bridgeObjectRelease();
        uint64_t v7 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_36:
      }
    }
    unint64_t v41 = *(void *)(v0[35] + v0[39]);
    if (v41 >> 62) {
      break;
    }
    unint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_39;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    unint64_t v5 = v0[40];
    unint64_t v6 = v5 - 1;
    if (v5 == 1) {
      goto LABEL_50;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (result < 0)
  {
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  unint64_t v42 = result;
  if ((v8 & 0x8000000000000000) != 0) {
    goto LABEL_3;
  }
LABEL_39:
  if (v8 >= v42) {
    goto LABEL_3;
  }
  if ((v41 & 0xC000000000000001) != 0)
  {
LABEL_61:
    id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_47;
  }
  if (v8 >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  id v44 = *(id *)(v41 + 8 * v8 + 32);
LABEL_47:
  uint64_t v45 = (uint64_t)v44;
  v0[42] = (unint64_t)v44;
  swift_bridgeObjectRelease();
  id v46 = (void *)swift_task_alloc();
  v0[43] = (unint64_t)v46;
  void *v46 = v0;
  v46[1] = sub_1002ED5DC;
  return sub_1000E99A4(v45);
}

void sub_1002EDF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = Strong;
    unint64_t v6 = *(void **)&Strong[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView];
    if (v6)
    {
      type metadata accessor for IndexPath();
      id v7 = v6;
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v7 deleteItemsAtIndexPaths:isa];

      unint64_t v9 = self;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v5;
      *(void *)(v10 + 24) = a3;
      aBlock[4] = sub_1002F4BD0;
      aBlock[5] = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      void aBlock[3] = &unk_1007A4980;
      unint64_t v11 = _Block_copy(aBlock);
      id v12 = v5;
      swift_retain();
      swift_release();
      [v9 animateWithDuration:0 delay:v11 options:0 animations:0.3 completion:0.0];

      _Block_release(v11);
    }
    else
    {
    }
  }
}

void sub_1002EE108(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl);
  unint64_t v4 = (unint64_t *)(a1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  swift_beginAccess();
  unint64_t v5 = *v4;
  if (v5 >> 62)
  {
    id v8 = v3;
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v7 = v3;
  }
  [v3 setNumberOfPages:v6];

  swift_beginAccess();
  sub_1002EAAA0(*(void *)(a2 + 16), 0);
}

void sub_1002EE1F4(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (char *)Strong;
    if ((a1 & 1) == 0)
    {
LABEL_6:

      return;
    }
    unint64_t v4 = (unint64_t *)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
    swift_beginAccess();
    unint64_t v5 = *v4;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_5;
    }
    uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry];
    if (v7)
    {
      char v8 = *(unsigned char *)(v7 + 16);
      uint64_t v9 = swift_unknownObjectWeakLoadStrong();
      if (v8)
      {
        if (!v9) {
          goto LABEL_5;
        }
        char v10 = 0;
      }
      else
      {
        if (!v9) {
          goto LABEL_5;
        }
        char v10 = sub_10018AF68() ^ 1;
      }
      sub_1005D68BC(v10 & 1, 1);
      swift_unknownObjectRelease();
    }
LABEL_5:
    sub_1002EFE3C();
    goto LABEL_6;
  }
}

void sub_1002EE324()
{
  unint64_t v4 = v0;
  unint64_t v5 = (unint64_t *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  swift_beginAccess();
  unint64_t v6 = *v5;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl];
  swift_bridgeObjectRetain();
  sub_100518068((uint64_t)[v7 currentPage], v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v11 == v13 >> 1)
  {
    swift_unknownObjectRelease();
    return;
  }
  if (v11 < (uint64_t)(v13 >> 1))
  {
    uint64_t v9 = (id *)v9[v11];
    swift_unknownObjectRelease();
    _s16MultiPinMapAssetCMa();
    uint64_t v14 = swift_dynamicCastClass();
    if (!v14
      || (unint64_t v15 = (uint64_t *)&v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin],
          (v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin + 16] & 1) != 0))
    {

      return;
    }
    uint64_t v11 = v14;
    uint64_t v3 = *v15;
    uint64_t v2 = v15[1];
    uint64_t v1 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
    if (!*(void *)(v14 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
      goto LABEL_23;
    }
    swift_retain();
    uint64_t v16 = sub_100039114();
    swift_release();
    if (v16 == 1) {
      goto LABEL_15;
    }
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_10003F810(v17);
    if (!v16) {
      goto LABEL_15;
    }
    uint64_t v18 = *(void *)(v16 + 16);
    swift_bridgeObjectRelease();
    if (v18 != 1) {
      goto LABEL_15;
    }
    if (!(*v5 >> 62))
    {
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v54 != 1) {
    goto LABEL_15;
  }
LABEL_14:
  if ((v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_textExists] & 1) == 0)
  {
    uint64_t v50 = self;
    id v51 = [v50 mainBundle];
    v52._uint64_t countAndFlagsBits = 0xD000000000000051;
    v67._uint64_t countAndFlagsBits = 0xD000000000000095;
    v67._object = (void *)0x8000000100696FE0;
    v52._object = (void *)0x8000000100696F80;
    v53._uint64_t countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v67);

    id v26 = [v50 mainBundle];
    unint64_t v27 = 0xD000000000000034;
    unint64_t v56 = 0x8000000100697080;
    uint64_t v28 = 0x45206574656C6544;
    uint64_t v34 = 2037544046;
    goto LABEL_24;
  }
LABEL_15:
  if (!*(void *)(v11 + v1)
    || (swift_retain(), uint64_t v19 = sub_100039114(), swift_release(), v19 == 1)
    || (uint64_t v20 = swift_bridgeObjectRetain(), sub_10003F810(v20), !v19)
    || (uint64_t v21 = *(void *)(v19 + 16), swift_bridgeObjectRelease(), v21 != 1))
  {
LABEL_23:
    uint64_t v30 = self;
    id v31 = [v30 mainBundle];
    v65._uint64_t countAndFlagsBits = 0xD000000000000054;
    v65._object = (void *)0x8000000100696DD0;
    v32._object = (void *)0x8000000100696DA0;
    v32._uint64_t countAndFlagsBits = 0xD000000000000029;
    v33._uint64_t countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v65);

    id v26 = [v30 mainBundle];
    unint64_t v27 = 0xD00000000000003DLL;
    unint64_t v56 = 0x8000000100696E30;
    uint64_t v28 = 0x502065766F6D6552;
    uint64_t v34 = 1701011820;
LABEL_24:
    unint64_t v29 = v34 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
    goto LABEL_25;
  }
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v55 > 1) {
      goto LABEL_22;
    }
LABEL_21:
    if (v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_textExists] == 1) {
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (*(uint64_t *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 1) {
    goto LABEL_21;
  }
LABEL_22:
  unint64_t v22 = self;
  id v23 = [v22 mainBundle];
  v64._uint64_t countAndFlagsBits = 0xD00000000000007ALL;
  v64._object = (void *)0x8000000100696EC0;
  v24._object = (void *)0x8000000100696E90;
  v24._uint64_t countAndFlagsBits = 0xD000000000000029;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v64);

  id v26 = [v22 mainBundle];
  unint64_t v27 = 0xD000000000000032;
  unint64_t v56 = 0x8000000100696F40;
  uint64_t v28 = 0x4D2065766F6D6552;
  unint64_t v29 = 0xEA00000000007061;
LABEL_25:
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, (Swift::String_optional)0, (NSBundle)v26, v35, *(Swift::String *)&v27);

  type metadata accessor for JurassicAlertController();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v37 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:0 message:v36 preferredStyle:0];

  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v4;
  v38[3] = v11;
  v38[4] = v3;
  v38[5] = v2;
  uint64_t v57 = v9;
  uint64_t v39 = v4;
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v62 = sub_1002F4850;
  uint64_t v63 = v38;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_10007453C;
  uint64_t v61 = &unk_1007A4750;
  unint64_t v41 = _Block_copy(&aBlock);
  swift_release();
  unint64_t v42 = self;
  id v43 = [v42 actionWithTitle:v40 style:2 handler:v41];
  _Block_release(v41);

  id v44 = [self mainBundle];
  v66._uint64_t countAndFlagsBits = 0xD000000000000017;
  v66._object = (void *)0x8000000100696E70;
  v45._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v45._object = (void *)0xE600000000000000;
  v46._uint64_t countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v66);

  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v62 = (uint64_t (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  uint64_t v63 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  uint64_t v60 = sub_10007453C;
  uint64_t v61 = &unk_1007A4778;
  uint64_t v48 = _Block_copy(&aBlock);
  swift_release();
  id v49 = [v42 actionWithTitle:v47 style:1 handler:v48];
  _Block_release(v48);

  [v37 addAction:v43];
  [v37 addAction:v49];
  [v39 presentViewController:v37 animated:1 completion:0];
}

uint64_t sub_1002EEB34(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  id v13 = a5;
  uint64_t v14 = static MainActor.shared.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v13;
  *(double *)(v15 + 48) = a1;
  *(double *)(v15 + 56) = a2;
  swift_release();
  sub_100328A60((uint64_t)v10, (uint64_t)&unk_100807610, v15);
  return swift_release();
}

uint64_t sub_1002EECA8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(double *)(v7 + 112) = a1;
  *(double *)(v7 + 120) = a2;
  *(void *)(v7 + 96) = a6;
  *(void *)(v7 + 104) = a7;
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v7 + 128) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v7 + 136) = v8;
  *(void *)(v7 + 144) = *(void *)(v8 - 8);
  *(void *)(v7 + 152) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  *(void *)(v7 + 160) = v9;
  *(void *)(v7 + 168) = *(void *)(v9 - 8);
  *(void *)(v7 + 176) = swift_task_alloc();
  *(void *)(v7 + 184) = type metadata accessor for MainActor();
  *(void *)(v7 + 192) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 200) = v11;
  *(void *)(v7 + 208) = v10;
  return _swift_task_switch(sub_1002EEE30, v11, v10);
}

uint64_t sub_1002EEE30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *((void *)v0 + 27) = Strong;
  if (!Strong) {
    goto LABEL_14;
  }
  if (*(void *)(*((void *)v0 + 13) + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
  {
    uint64_t v2 = Strong;
    swift_retain();
    uint64_t v3 = sub_100039114();
    swift_release();
    if (v3 != 1)
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_10003F810(v4);
      if (v3)
      {
        uint64_t v5 = *(void *)(v3 + 16);
        swift_bridgeObjectRelease();
        if (v5 == 1)
        {
          sub_100010218(&qword_1007FC110);
          uint64_t v6 = swift_allocObject();
          *(_OWORD *)(v6 + 16) = xmmword_1006D6280;
          *(void *)(v6 + 32) = [*(id *)(v2 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl) currentPage];
          sub_1002ECA50(v6);
          uint64_t v7 = swift_bridgeObjectRelease();
          if (sub_10003D0C8(v7))
          {
            uint64_t v8 = *(void *)(*((void *)v0 + 27) + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry);
            *((void *)v0 + 31) = v8;
            if (v8)
            {
              swift_retain();
              *((void *)v0 + 32) = static MainActor.shared.getter();
              uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
              return _swift_task_switch(sub_1002EFB90, v10, v9);
            }
          }
          swift_release();
          uint64_t v15 = (unsigned __int8 *)*((void *)v0 + 27);
          int v16 = v15[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave];
          if (v16 == 2 || (v16 & 1) == 0)
          {

            goto LABEL_15;
          }
          uint64_t v17 = *((void *)v0 + 16);
          uint64_t v18 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
          uint64_t v19 = v15;
          uint64_t v20 = static MainActor.shared.getter();
          uint64_t v21 = (void *)swift_allocObject();
          v21[2] = v20;
          v21[3] = &protocol witness table for MainActor;
          v21[4] = v19;
          sub_100328C78(v17, (uint64_t)&unk_100807618, (uint64_t)v21);

LABEL_14:
          swift_release();
LABEL_15:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v14 = (uint64_t (*)(void))*((void *)v0 + 1);
          return v14();
        }
      }
    }
  }
  uint64_t v11 = (void *)swift_task_alloc();
  *((void *)v0 + 28) = v11;
  void *v11 = v0;
  v11[1] = sub_1002EF1A0;
  double v12 = v0[14];
  double v13 = v0[15];
  return sub_100098E64(v12, v13);
}

uint64_t sub_1002EF1A0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EF29C, 0, 0);
}

uint64_t sub_1002EF29C()
{
  uint64_t v1 = (void *)v0[13];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[29] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1002EF410;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[30] = v9;
    void *v9 = v0;
    v9[1] = sub_1002EF5B8;
    return v10();
  }
}

uint64_t sub_1002EF410()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EF50C, 0, 0);
}

uint64_t sub_1002EF50C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002EF5B8;
  return v3();
}

uint64_t sub_1002EF5B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EF6B4, 0, 0);
}

uint64_t sub_1002EF6B4()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(v0[13] + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v2 object:isa];

  uint64_t v4 = v0[25];
  uint64_t v5 = v0[26];
  return _swift_task_switch(sub_1002EF7E8, v4, v5);
}

uint64_t sub_1002EF7E8()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v20 = v0[21];
  uint64_t v21 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[6] = sub_1002F4978;
  v0[7] = v5;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_1007A47C8;
  id v6 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[11] = _swiftEmptyArrayStorage;
  sub_1002F4F8C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v6);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v21);
  swift_release();
  uint64_t v7 = swift_release();
  if ((sub_10003D0C8(v7) & 1) != 0
    && (uint64_t v8 = *(void *)(v0[27] + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry),
        (v0[31] = v8) != 0))
  {
    swift_retain();
    v0[32] = static MainActor.shared.getter();
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1002EFB90, v10, v9);
  }
  else
  {
    swift_release();
    uint64_t v11 = (void *)v0[27];
    if (*((unsigned char *)v11 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave))
    {
      uint64_t v12 = v0[16];
      uint64_t v13 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
      id v14 = v11;
      uint64_t v15 = static MainActor.shared.getter();
      int v16 = (void *)swift_allocObject();
      v16[2] = v15;
      v16[3] = &protocol witness table for MainActor;
      v16[4] = v14;
      sub_100328C78(v12, (uint64_t)&unk_100807618, (uint64_t)v16);
      swift_release();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1002EFB90()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = v0[31];
  if (Strong)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v5 = sub_1000F678C((uint64_t)&off_1007944C0);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 8))(v2, v5, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  swift_release();
  uint64_t v6 = v0[25];
  uint64_t v7 = v0[26];
  return _swift_task_switch(sub_1002EFC70, v6, v7);
}

uint64_t sub_1002EFC70()
{
  swift_release();
  uint64_t v1 = (void *)v0[27];
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave))
  {
    uint64_t v2 = v0[16];
    uint64_t v3 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
    id v4 = v1;
    uint64_t v5 = static MainActor.shared.getter();
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v5;
    _OWORD v6[3] = &protocol witness table for MainActor;
    v6[4] = v4;
    sub_100328C78(v2, (uint64_t)&unk_100807618, (uint64_t)v6);
    swift_release();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_1002EFDB0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin;
    *(void *)uint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    *(unsigned char *)(v2 + 16) = 1;
    id v3 = *(id *)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
    [v3 reloadData];
  }
}

uint64_t sub_1002EFE3C()
{
  uint64_t v19 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (unint64_t *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_imageryIndexes);
  swift_beginAccess();
  *id v4 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v5 = (unint64_t *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  uint64_t result = swift_beginAccess();
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v16) {
      return result;
    }
  }
  else if (!*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  unint64_t v7 = *v5;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = result;
    if (result) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_5:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = 0;
      uint64_t v17 = v1 + 32;
      uint64_t v18 = v8;
      do
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v7 + 8 * v9 + 32);
        }
        uint64_t v11 = v10;
        _s10PhotoAssetCMa(0);
        if (swift_dynamicCastClass()
          || (_s14LivePhotoAssetCMa(0), swift_dynamicCastClass())
          || (_s10VideoAssetCMa(0), swift_dynamicCastClass()))
        {
          IndexPath.init(row:section:)();
          swift_beginAccess();
          unint64_t v12 = *v4;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *id v4 = v12;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v12 = sub_1002A5EB8(0, *(void *)(v12 + 16) + 1, 1, v12);
            *id v4 = v12;
          }
          unint64_t v15 = *(void *)(v12 + 16);
          unint64_t v14 = *(void *)(v12 + 24);
          if (v15 >= v14 >> 1)
          {
            unint64_t v12 = sub_1002A5EB8(v14 > 1, v15 + 1, 1, v12);
            *id v4 = v12;
          }
          *(void *)(v12 + 16) = v15 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v12+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v15, v3, v19);
          swift_endAccess();
          uint64_t v8 = v18;
        }
        ++v9;
      }
      while (v8 != v9);
    }
  }
  return swift_bridgeObjectRelease();
}

void *sub_1002F0148()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v2 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_11:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v6 = 4;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * v6);
    }
    uint64_t v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    type metadata accessor for FullScreenCollectionViewCell();
    uint64_t v10 = swift_dynamicCastClass();
    if (v10) {
      break;
    }

    ++v6;
    if (v9 == v5) {
      goto LABEL_11;
    }
  }
  uint64_t v13 = v10;
  swift_bridgeObjectRelease();

  uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
  if (v14)
  {
    uint64_t v11 = *(void **)(v14 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView);
    id v15 = v11;

    return v11;
  }

  return 0;
}

uint64_t sub_1002F0308()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1002F04CC(void *a1)
{
  id v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  type metadata accessor for FullScreenCollectionViewCell();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7) {
    return (uint64_t)v6;
  }
  uint64_t v8 = v7;
  id v9 = v6;
  unint64_t v10 = IndexPath.item.getter();
  uint64_t v11 = &v2[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *(void *)v11;
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v10 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v14 = *(id *)(v13 + 8 * v10 + 32);
LABEL_6:
    int v15 = v2[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset];
    int v16 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption);
    *(unsigned char *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption) = v15;
    if (v15 != v16)
    {
      uint64_t v17 = *(unsigned char **)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
      if (v17)
      {
        char v18 = v17[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption];
        v17[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption] = v15;
        uint64_t v19 = v17;
        sub_100376908(v18);
      }
    }
    uint64_t v20 = OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAsset;
    uint64_t v21 = *(char **)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAsset);
    *(void *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAsset) = v14;
    id v22 = v14;
    if (v14)
    {
      if (v21)
      {
        _s5AssetCMa();
        uint64_t v23 = v21;
        id v24 = v22;
        char v25 = static NSObject.== infix(_:_:)();

        if (v25)
        {
LABEL_18:

          *(void *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_delegate + 8) = &off_1007A4620;
          swift_unknownObjectWeakAssign();
          uint64_t v31 = *(void *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
          if (v31 && *(void *)(v31 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController)) {
            [v2 addChildViewController:];
          }
          Swift::String v32 = *(void **)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAssetView);
          if (!v32) {
            goto LABEL_32;
          }
          type metadata accessor for InteractiveDismissalGestureRecognizer();
          Swift::String v33 = v32;
          uint64_t v34 = (void *)sub_100264A74(v33);
          Swift::String v35 = v34;
          if (v34) {

          }
          char v36 = (*(uint64_t (**)(void))((swift_isaMask & *v33) + 0xF0))();
          if (v35)
          {
            if (v36) {
              goto LABEL_31;
            }
            [v33 setUserInteractionEnabled:0];
            uint64_t v37 = sub_100264A74(v33);
            if (!v37) {
              goto LABEL_31;
            }
            uint64_t v38 = (char *)v37;
            [v33 removeGestureRecognizer:v37];
          }
          else
          {
            if ((v36 & 1) == 0)
            {
LABEL_31:

LABEL_32:
              return v8;
            }
            uint64_t v38 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
            *(void *)&v38[OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_dismissalDelegate + 8] = &off_1007A4658;
            swift_unknownObjectWeakAssign();
            [v38 setDelegate:v38];
            [v38 addTarget:v38 action:"didPan:"];
            [v33 setUserInteractionEnabled:1];
            [v33 addGestureRecognizer:v38];
          }

          goto LABEL_31;
        }
      }
    }
    else if (!v21)
    {
      goto LABEL_17;
    }
    id v26 = *(void **)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
    if (v26)
    {
      unint64_t v27 = *(void **)(v8 + v20);
      id v28 = v27;
      uint64_t v23 = v26;
      sub_100376C94(v27);
      unint64_t v29 = *(void **)&v23[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
      id v24 = *(id *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAssetView);
      *(void *)(v8 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAssetView) = v29;
      id v30 = v29;

      goto LABEL_18;
    }
LABEL_17:
    uint64_t v23 = v21;
    id v24 = v22;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void sub_1002F0A14()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, unsigned char *, uint64_t, __n128))(v3 + 16))(v6, &v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_initIndexPath], v2, v4);
  uint64_t v7 = IndexPath.item.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v8 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
  [*(id *)&v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl] setCurrentPage:v7];
  sub_1002EAAA0(v7, 0);
  sub_1002EAC84();
  id v9 = (unint64_t *)&v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  swift_beginAccess();
  unint64_t v10 = *v9;
  uint64_t v11 = *(void **)&v1[v8];
  swift_bridgeObjectRetain();
  sub_100518068((uint64_t)[v11 currentPage], v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v15 == v17 >> 1)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (v15 >= (uint64_t)(v17 >> 1))
  {
    __break(1u);
    return;
  }
  char v18 = (unsigned __int8 *)*(id *)(v13 + 8 * v15);
  swift_unknownObjectRelease();
  unsigned int v19 = v18[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];

  if (v19 >= 3)
  {
LABEL_8:
    char v22 = v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden];
    v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = 0;
    if ((v22 & 1) == 0) {
      return;
    }
    goto LABEL_9;
  }
  int v20 = v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset];
  int v21 = v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden];
  v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = v20;
  if (v20 != v21) {
LABEL_9:
  }
    [v1 setNeedsStatusBarAppearanceUpdate];
}

void sub_1002F0C38(void *a1)
{
  type metadata accessor for FullScreenCollectionViewCell();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView;
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
    if (v5
      && (uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController)) != 0
      && (swift_beginAccess(), (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) != 0))
    {
      uint64_t v8 = (void *)Strong;
      id v9 = a1;
      [v8 addChildViewController:v6];

      if (!UIAccessibilityIsVideoAutoplayEnabled()) {
        goto LABEL_21;
      }
    }
    else
    {
      id v10 = a1;
      if (!UIAccessibilityIsVideoAutoplayEnabled())
      {
LABEL_21:

        return;
      }
    }
    uint64_t v11 = *(char **)(v3 + v4);
    if (v11)
    {
      uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v13 = *((void *)v12 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        unint64_t v16 = v11;
        v15(ObjectType, v13);

        swift_unknownObjectRelease();
      }
    }
    uint64_t v17 = *(void *)(v3 + v4);
    if (v17)
    {
      uint64_t v18 = v17 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView;
      swift_beginAccess();
      sub_10001B220(v18, (uint64_t)v31, &qword_100807600);
      uint64_t v19 = v32;
      if (v32)
      {
        uint64_t v20 = v33;
        sub_10002E0BC(v31, v32);
        (*(void (**)(void, uint64_t, uint64_t))(v20 + 16))(0, v19, v20);
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v31);
      }
      else
      {
        sub_10001457C((uint64_t)v31, &qword_100807600);
      }
    }
    swift_beginAccess();
    int v21 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
    if (v21)
    {
      char v22 = v21[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasAppeared];

      if (v22)
      {
        uint64_t v23 = *(void **)(v3 + v4);
        if (v23)
        {
          uint64_t v24 = (uint64_t)v23 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView;
          swift_beginAccess();
          sub_10001B220(v24, (uint64_t)v31, &qword_100807600);
          if (v32)
          {
            sub_100141410((uint64_t)v31, (uint64_t)v28);
            id v25 = v23;
            sub_10001457C((uint64_t)v31, &qword_100807600);
            uint64_t v26 = v29;
            uint64_t v27 = v30;
            sub_10002E0BC(v28, v29);
            (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
            _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);

            return;
          }
          sub_10001457C((uint64_t)v31, &qword_100807600);
        }
      }
    }
    goto LABEL_21;
  }
}

void sub_1002F113C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_1005D68BC(0, 1);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1002F11B8()
{
  id v1 = sub_1002E6B28();
  uint64_t v2 = (unint64_t *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
  swift_beginAccess();
  unint64_t v3 = *v2;
  uint64_t v4 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl];
  swift_bridgeObjectRetain();
  sub_100518068((uint64_t)[v5 currentPage], v3);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v9 == v11 >> 1)
  {
    swift_unknownObjectRelease();
    char v12 = 1;
  }
  else
  {
    if (v9 >= (uint64_t)(v11 >> 1))
    {
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v13 = *(id *)(v7 + 8 * v9);
    swift_unknownObjectRelease();
    char v14 = v13[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];

    if (sub_100041A58(v14) == 0x6F65646976 && v15 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      char v12 = 0;
    }
    else
    {
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v12 = v17 ^ 1;
    }
  }
  [v1 setHidden:v12 & 1];

  int v18 = v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden];
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = 0;
  if (v18 == 1) {
    [v0 setNeedsStatusBarAppearanceUpdate];
  }
  id v19 = [v0 navigationController];
  [v19 setNavigationBarHidden:0];

  uint64_t v20 = sub_1002E6BB4();
  [(objc_class *)v20 setHidden:0];

  int v21 = sub_1002E698C();
  [(objc_class *)v21 setHidden:0];

  unint64_t v22 = *v2;
  if (!(v22 >> 62))
  {
    if (*(uint64_t *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v26 >= 2) {
LABEL_15:
  }
    [*(id *)&v0[v4] setHidden:0];
LABEL_16:
  sub_1002EAC84();
  id v23 = [v0 view];
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = [self clearColor];
    [v24 setBackgroundColor:v25];

    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1002F1480()
{
  id v1 = sub_1002E6B28();
  [v1 setHidden:1];

  id v2 = [v0 navigationController];
  [v2 setNavigationBarHidden:1];

  char v3 = v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden];
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = 1;
  if ((v3 & 1) == 0) {
    [v0 setNeedsStatusBarAppearanceUpdate];
  }
  uint64_t v4 = sub_1002E6BB4();
  [(objc_class *)v4 setHidden:1];

  uint64_t v5 = sub_1002E698C();
  [(objc_class *)v5 setHidden:1];

  [*(id *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl] setHidden:1];
  id v6 = [v0 navigationItem];
  [v6 setRightBarButtonItems:0 animated:1];

  id v8 = [v0 view];
  if (v8)
  {
    id v7 = [self blackColor];
    [v8 setBackgroundColor:v7];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002F1610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_1002F16A8, v6, v5);
}

uint64_t sub_1002F16A8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry);
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    swift_retain();
    id v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *id v2 = v0;
    v2[1] = sub_1002F17A4;
    return sub_100580C88();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = *(void *)(v0 + 56) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1002F17A4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1002F18E8, v3, v2);
}

uint64_t sub_1002F18E8()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 56) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F195C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1002F1D9C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_1007A46B0;
  unint64_t v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1002F4F8C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1002F1C1C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1002F1C54()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView;
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
    if (v3)
    {
      id v4 = [v3 indexPathsForVisibleItems];
      type metadata accessor for IndexPath();
      uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_1002F3524(v6, v5);
      swift_bridgeObjectRelease();
      id v7 = *(void **)&v1[v2];
      if (v7)
      {
        id v8 = v7;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v8 reloadItemsAtIndexPaths:isa];
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      [v1 setNeedsStatusBarAppearanceUpdate];
    }
  }
}

void sub_1002F1D9C()
{
}

uint64_t sub_1002F1DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002F1DB4()
{
  return swift_release();
}

uint64_t sub_1002F1DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_1002F1E58, v6, v5);
}

uint64_t sub_1002F1E58()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry);
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    swift_retain();
    *(void *)(v0 + 72) = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1002F1F4C, v3, v2);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = *(void *)(v0 + 64) == 0;
    id v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1002F1F4C()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = v0[8];
  if (Strong)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v5 = sub_1000F678C((uint64_t)&off_1007944E8);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 8))(v2, v5, ObjectType, v3);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  return _swift_task_switch(sub_1002F202C, v6, v7);
}

uint64_t sub_1002F202C()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 64) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002F20A0()
{
  uint64_t v1 = v0;
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  if (qword_1007F7518 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1007F7BC0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10083E8A8;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v4 = v3;
  id v24 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F75C8 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1007F7BA8;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_10083E890;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = v6;
  uint64_t v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D6D10;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = v24;
  UIMenuElementSize v25 = v9;
  specialized Array._endMutation()();
  if ((unint64_t)v25 >> 62)
  {
    sub_10001B284(0, (unint64_t *)&unk_100807680);
    id v22 = v8;
    id v23 = v24;
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = v8;
    id v11 = v24;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10001B284(0, (unint64_t *)&unk_100807680);
    UIMenuElementSize preferredElementSize = v25;
  }
  swift_bridgeObjectRelease();
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v27.value.super.Class isa = 0;
  v27.is_nil = 0;
  v14.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  uint64_t v15 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_trashAndOpenInContextMenuButton;
  id v16 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_trashAndOpenInContextMenuButton));
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [self systemImageNamed:v17];

  [v16 setImage:v18];
  uint64_t v19 = qword_1007F7B28;
  id v20 = *(id *)(v1 + v15);
  if (v19 != -1) {
    swift_once();
  }
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityLabel:v21];

  [*(id *)(v1 + v15) setStyle:0];
  [*(id *)(v1 + v15) setTarget:v1];
  [*(id *)(v1 + v15) setMenu:v14.super.super.isa];
}

void sub_1002F2540()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = (unint64_t *)(Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
    swift_beginAccess();
    if (*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v13) {
        goto LABEL_11;
      }
    }
    else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_11;
    }
    unint64_t v3 = *v2;
    id v4 = *(void **)&v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl];
    swift_bridgeObjectRetain();
    sub_100518068((uint64_t)[v4 currentPage], v3);
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    if (v8 == v10 >> 1)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      if (v8 >= (uint64_t)(v10 >> 1))
      {
        __break(1u);
        return;
      }
      id v11 = *(id *)(v6 + 8 * v8);
      swift_unknownObjectRelease();
      _s16MultiPinMapAssetCMa();
      uint64_t v12 = swift_dynamicCastClass();

      if (v12 && (v1[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin + 16] & 1) == 0)
      {
        sub_1002EE324();
        goto LABEL_11;
      }
    }
    sub_1002EBB50();
LABEL_11:
  }
}

void sub_1002F26C4()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = Strong;
    uint64_t v12 = *(void *)&Strong[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry];
    if (!v12)
    {

      return;
    }
    uint64_t v13 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView;
    UIMenu v14 = *(void **)&Strong[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView];
    if (!v14)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);

LABEL_11:
      sub_10001457C((uint64_t)v5, (uint64_t *)&unk_1007FD5D0);
      return;
    }
    swift_retain();
    id v15 = [v14 indexPathsForVisibleItems];
    uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v16 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v17, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {

      swift_release();
      goto LABEL_11;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    id v18 = *(void **)&v11[v13];
    if (v18)
    {
      id v19 = v18;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v21 = [v19 cellForItemAtIndexPath:isa];

      if (v21)
      {
        type metadata accessor for FullScreenCollectionViewCell();
        uint64_t v22 = swift_dynamicCastClass();
        if (v22)
        {
          uint64_t v23 = *(void *)(v22 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
          if (v23)
          {
            uint64_t v24 = v23 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView;
            swift_beginAccess();
            sub_10001B220(v24, (uint64_t)&v63, &qword_100807600);
            if (*((void *)&v64 + 1))
            {
              sub_100010218((uint64_t *)&unk_100807660);
              type metadata accessor for FullScreenAudioTranscriptionView();
              if (swift_dynamicCast())
              {
                id v61 = v62;
                uint64_t v25 = *(void *)&v62[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcriptionCoordinator];
                swift_getKeyPath();
                id v60 = (id)(v25 + OBJC_IVAR____TtC7Journal24TranscriptionCoordinator___observationRegistrar);
                *(void *)&long long v63 = v25;
                sub_1002F4F8C(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
                swift_retain();
                ObservationRegistrar.access<A, B>(_:keyPath:)();
                swift_release();
                swift_bridgeObjectRetain();
                swift_release();
                id v26 = objc_allocWithZone((Class)NSAttributedString);
                NSString v27 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v28 = [v26 initWithString:v27];

                id v29 = [v11 traitCollection];
                id v30 = v28;
                uint64_t v31 = sub_100020C00(v29, v28, 0, 0.0);

                id v60 = v30;
                if (!v31)
                {
LABEL_39:
                  if (swift_unknownObjectWeakLoadStrong())
                  {
                    uint64_t v51 = *(void *)(v12 + 56);
                    id ObjectType = (id)swift_getObjectType();
                    Swift::Int v52 = sub_1000F678C((uint64_t)&off_100794510);
                    (*(void (**)(uint64_t, Swift::Int, id, uint64_t))(v51 + 8))(v12, v52, ObjectType, v51);
                    swift_bridgeObjectRelease();
                    swift_unknownObjectRelease();
                  }
                  if ((*(unsigned char *)(v12 + 16) & 1) == 0)
                  {
                    uint64_t v53 = type metadata accessor for TaskPriority();
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v2, 1, 1, v53);
                    type metadata accessor for MainActor();
                    swift_retain();
                    uint64_t v54 = static MainActor.shared.getter();
                    uint64_t v55 = (void *)swift_allocObject();
                    v55[2] = v54;
                    v55[3] = &protocol witness table for MainActor;
                    v55[4] = v12;
                    sub_100328A60((uint64_t)v2, (uint64_t)&unk_100807678, (uint64_t)v55);
                    swift_release();
                  }
                  if (!swift_unknownObjectWeakLoadStrong())
                  {
                    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

                    swift_release();
                    return;
                  }
                  sub_1005D68BC(0, 1);

                  swift_release();
                  swift_unknownObjectRelease();

                  goto LABEL_26;
                }
                uint64_t v32 = (void *)v31;
                uint64_t v33 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
                uint64_t v34 = *(void **)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
                if (!v34) {
                  goto LABEL_34;
                }
                id v35 = v34;
                if ((uint64_t)[v35 length] >= 1)
                {
                  id v36 = objc_allocWithZone((Class)NSMutableAttributedString);
                  id v57 = v35;
                  id ObjectType = [v36 initWithAttributedString:v35];
                  id v37 = objc_allocWithZone((Class)NSAttributedString);
                  NSString v38 = String._bridgeToObjectiveC()();
                  uint64_t v58 = v33;
                  uint64_t v39 = v38;
                  id v40 = [v37 initWithString:v38];

                  id v41 = ObjectType;
                  [ObjectType appendAttributedString:v40];

                  uint64_t v42 = v58;
                  [v41 appendAttributedString:v32];
                  uint64_t v43 = v42;
                  uint64_t v44 = *(void *)(v12 + v42);
                  if (v44)
                  {
                    if (([ObjectType isEqualToAttributedString:v44] & 1) == 0) {
                      *(unsigned char *)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
                    }
                  }
                  else
                  {
                    id v48 = ObjectType;
                  }
                  uint64_t v49 = v43;
                  NSString v47 = *(void **)(v12 + v43);
                  id v50 = ObjectType;
                  *(void *)(v12 + v49) = ObjectType;

                  goto LABEL_38;
                }

                uint64_t v45 = *(void *)(v12 + v33);
                if (v45)
                {
                  if (([v32 isEqualToAttributedString:v45] & 1) == 0) {
                    *(unsigned char *)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
                  }
                }
                else
                {
LABEL_34:
                  id v46 = v32;
                }
                NSString v47 = *(void **)(v12 + v33);
                *(void *)(v12 + v33) = v32;
LABEL_38:

                goto LABEL_39;
              }

              swift_release();
LABEL_26:
              (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
              return;
            }
          }
          else
          {
            uint64_t v65 = 0;
            long long v63 = 0u;
            long long v64 = 0u;
          }

          swift_release();
          sub_10001457C((uint64_t)&v63, &qword_100807600);
          goto LABEL_26;
        }
      }
    }

    swift_release();
    goto LABEL_26;
  }
}

uint64_t sub_1002F2F38()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10010AD78;
  return sub_100580C88();
}

uint64_t sub_1002F2FE4()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (char *)result;
    uint64_t v9 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView;
    unint64_t v10 = *(void **)(result + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
    if (!v10)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
LABEL_8:

      return sub_10001457C((uint64_t)v2, (uint64_t *)&unk_1007FD5D0);
    }
    id v11 = [v10 indexPathsForVisibleItems];
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v12 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v2, v12 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, v13, 1, v3);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
      goto LABEL_8;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    UIMenu v14 = *(void **)&v8[v9];
    if (!v14) {
      goto LABEL_19;
    }
    id v15 = v14;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v17 = [v15 cellForItemAtIndexPath:isa];

    if (!v17) {
      goto LABEL_19;
    }
    type metadata accessor for FullScreenCollectionViewCell();
    uint64_t v18 = swift_dynamicCastClass();
    if (v18)
    {
      uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
      if (v19)
      {
        uint64_t v20 = v19 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView;
        swift_beginAccess();
        sub_10001B220(v20, (uint64_t)&v29, &qword_100807600);
        if (*((void *)&v30 + 1))
        {
          sub_100010218((uint64_t *)&unk_100807660);
          type metadata accessor for FullScreenAudioTranscriptionView();
          if (swift_dynamicCast())
          {
            id v21 = v28;
            uint64_t v22 = *(void *)&v28[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcriptionCoordinator];
            swift_getKeyPath();
            *(void *)&long long v29 = v22;
            sub_1002F4F8C(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
            swift_retain();
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            swift_bridgeObjectRetain();
            swift_release();
            id v23 = objc_allocWithZone((Class)NSAttributedString);
            NSString v24 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v25 = [v23 initWithString:v24];

            id v26 = [self generalPasteboard];
            NSString v27 = [v25 string];
            if (!v27)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v27 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            [v26 setString:v27];
          }
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v31 = 0;
        long long v29 = 0u;
        long long v30 = 0u;
      }

      sub_10001457C((uint64_t)&v29, &qword_100807600);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
LABEL_18:

LABEL_19:
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void sub_1002F34C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    a3();
  }
}

void sub_1002F3524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v31 - v8;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v37 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v40 = (char *)v31 - v14;
  __n128 v16 = __chkstk_darwin(v15);
  NSString v47 = (char *)v31 - v17;
  id v50 = _swiftEmptyArrayStorage;
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    unint64_t v18 = 0;
    uint64_t v43 = v11 + 48;
    uint64_t v44 = v11 + 16;
    uint64_t v49 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    id v41 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v46 = v11 + 56;
    v31[1] = (v11 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v33 = a2;
    uint64_t v34 = v9;
    uint64_t v35 = a1;
    uint64_t v32 = v11;
    uint64_t v19 = v40;
    while (v18 < *(void *)(a1 + 16))
    {
      unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      unint64_t v38 = v18;
      unint64_t v39 = v20;
      uint64_t v45 = *(void *)(v11 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
      v42(v9, a1 + v20 + v45 * v18, v10, v16);
      id v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v21(v9, 0, 1, v10);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v22(v9, 1, v10) == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      id v48 = *v49;
      v48(v47, v9, v10);
      uint64_t v23 = a2;
      uint64_t v24 = *(void *)(a2 + 16);
      if (v24)
      {
        uint64_t v25 = v23 + v39;
        swift_bridgeObjectRetain();
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v42)(v6, v25, v10);
          v21(v6, 0, 1, v10);
          if (v22(v6, 1, v10) == 1) {
            break;
          }
          v48(v19, v6, v10);
          sub_1002F4F8C((unint64_t *)&unk_100805AC8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
          NSString v27 = *v41;
          (*v41)(v19, v10);
          if (v26)
          {
            a2 = v33;
            swift_bridgeObjectRelease();
            v27(v47, v10);
            goto LABEL_4;
          }
          v25 += v45;
          if (!--v24) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_14:
        v21(v6, 1, 1, v10);
      }
      a2 = v33;
      swift_bridgeObjectRelease();
      v48(v37, v47, v10);
      id v28 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100095F98(0, *((void *)v28 + 2) + 1, 1);
        id v28 = v50;
      }
      unint64_t v30 = *((void *)v28 + 2);
      unint64_t v29 = *((void *)v28 + 3);
      if (v30 >= v29 >> 1)
      {
        sub_100095F98(v29 > 1, v30 + 1, 1);
        id v28 = v50;
      }
      *((void *)v28 + 2) = v30 + 1;
      v48((char *)v28 + v39 + v30 * v45, v37, v10);
      id v50 = v28;
LABEL_4:
      unint64_t v18 = v38 + 1;
      a1 = v35;
      uint64_t v9 = v34;
      uint64_t v11 = v32;
      if (v38 + 1 == v36) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
    id v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_22:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v21)(v9, 1, 1, v10, v16);
    swift_bridgeObjectRelease();
LABEL_23:
    sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FD5D0);
  }
}

void sub_1002F3A50()
{
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_interactiveCoordinator;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for InteractiveGalleryToTimelineTransition()) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasLoaded] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry] = 0;
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave] = 2;
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView] = 0;
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_textExists] = 0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIPageControl) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___removeButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___videoMuteButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController____lazy_storage___closeButton] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_trashAndOpenInContextMenuButton;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIBarButtonItem) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted;
  v0[v4] = UIAccessibilityIsVideoAutoplayEnabled();
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v6 = self;
  id v7 = [v6 systemImageNamed:v5];

  if (v7)
  {
    id v8 = [self systemIndigoColor];
    id v9 = [v7 imageWithTintColor:v8];
  }
  else
  {
    id v9 = 0;
  }
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_unmuteSymbol] = v9;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v6 systemImageNamed:v10];

  if (v11)
  {
    id v12 = [self systemIndigoColor];
    id v13 = [v11 imageWithTintColor:v12];
  }
  else
  {
    id v13 = 0;
  }
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_muteSymbol] = v13;
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_didScrollToInitIndexPath] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_imageryIndexes] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset] = 0;
  uint64_t v14 = &v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = 0;
  v0[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_hasAppeared] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002F3D88(unint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    NSString v10 = (unint64_t *)_CocoaArrayWrapper.endIndex.getter();
    if (v10)
    {
LABEL_3:
      unint64_t v11 = (unint64_t)v10 - 1;
      if (__OFSUB__(v10, 1))
      {
        __break(1u);
      }
      else if ((a1 & 0xC000000000000001) == 0)
      {
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v11 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v12 = *(void **)(a1 + 8 * v11 + 32);
          swift_unknownObjectRetain();
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_35;
      }
      id v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
      swift_bridgeObjectRelease();
      id v13 = [v12 indexPath];
      swift_unknownObjectRelease();
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v14 = IndexPath.row.getter();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v3 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl;
      uint64_t v2 = &selRef_setDeliversTouchesForGesturesToSuperview_;
      if ((id)v14 == [*(id *)&v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_pageControl] currentPage])return; {
      [*(id *)&v4[v3] setCurrentPage:v14];
      }
      NSString v10 = (unint64_t *)&v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets];
      swift_beginAccess();
      unint64_t v15 = *v10;
      if ((*v10 & 0xC000000000000001) == 0)
      {
        if ((v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v14 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __n128 v16 = (unsigned __int8 *)*(id *)(v15 + 8 * v14 + 32);
LABEL_13:
          v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted] = 1;
          sub_1002EAC84();
          unint64_t v17 = *v10;
          unint64_t v18 = *(void **)&v4[v3];
          swift_bridgeObjectRetain();
          sub_100518068((uint64_t)[v18 v2[335]], v17);
          uint64_t v20 = v19;
          uint64_t v22 = v21;
          unint64_t v24 = v23;
          swift_bridgeObjectRelease();
          if (v22 == v24 >> 1)
          {
            swift_unknownObjectRelease();
            goto LABEL_19;
          }
          if (v22 < (uint64_t)(v24 >> 1))
          {
            uint64_t v25 = (unsigned __int8 *)*(id *)(v20 + 8 * v22);
            swift_unknownObjectRelease();
            unsigned int v26 = v25[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];

            if (v26 < 3)
            {
              int v27 = v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset];
              int v28 = v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden];
              v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = v27;
              if (v27 == v28) {
                goto LABEL_21;
              }
              goto LABEL_20;
            }
LABEL_19:
            char v29 = v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden];
            v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_statusBarHidden] = 0;
            if ((v29 & 1) == 0)
            {
LABEL_21:
              if (v4[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset] == 1)
              {
                if (v16[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type] > 2u) {
                  sub_1002F11B8();
                }
                else {
                  sub_1002F1480();
                }
              }

              return;
            }
LABEL_20:
            [v4 setNeedsStatusBarAppearanceUpdate];
            goto LABEL_21;
          }
LABEL_38:
          __break(1u);
          return;
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_35:
      swift_bridgeObjectRetain();
      __n128 v16 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  else
  {
    NSString v10 = *(unint64_t **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_1002F413C()
{
  uint64_t v23 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted) = (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isMuted) & 1) == 0;
  sub_1002EB9A8();
  uint64_t v24 = v0;
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_collectionView);
  if (!v1) {
    return;
  }
  id v25 = v1;
  id v2 = [v25 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v4 = (unint64_t)sub_1000E53D4(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v6 = v25;
      if (v5) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v6 = v25;
      if (v5)
      {
LABEL_5:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v7 = 0;
        unint64_t v8 = v4 & 0xC000000000000001;
        uint64_t v21 = (void *)v4;
        uint64_t v22 = v5;
        do
        {
          if (v8) {
            id v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v9 = (char *)*(id *)(v4 + 8 * v7 + 32);
          }
          NSString v10 = v9;
          unint64_t v11 = *(char **)&v9[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView];
          if (v11
            && (uint64_t v12 = *(unsigned __int8 *)(v24 + v23),
                id v13 = &v11[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia],
                swift_unknownObjectWeakLoadStrong()))
          {
            uint64_t v14 = *((void *)v13 + 1);
            uint64_t ObjectType = swift_getObjectType();
            unint64_t v16 = v8;
            unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
            unint64_t v18 = v11;
            uint64_t v19 = ObjectType;
            uint64_t v20 = v14;
            unint64_t v4 = (unint64_t)v21;
            uint64_t v5 = v22;
            v17(v12, v19, v20);
            unint64_t v8 = v16;

            swift_unknownObjectRelease();
          }
          else
          {
          }
          ++v7;
          uint64_t v6 = v25;
        }
        while (v5 != v7);
      }
    }

    swift_bridgeObjectRelease();
    return;
  }
}

uint64_t sub_1002F43B8(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  NSString v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_didScrollToInitIndexPath) & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_didScrollToInitIndexPath) = 1;
    sub_1002F0A14();
  }
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  unint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1002F4808;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_1007A4700;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1002F4F8C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1002F46BC(void *a1)
{
  type metadata accessor for FullScreenCollectionViewCell();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView;
  uint64_t v4 = *(char **)(v1 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
  if (v4)
  {
    uint64_t v5 = &v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *((void *)v5 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
      id v9 = a1;
      NSString v10 = v4;
      v8(ObjectType, v6);

      swift_unknownObjectRelease();
      uint64_t v11 = *(void *)(v2 + v3);
      if (!v11) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    id v13 = a1;
    uint64_t v11 = *(void *)(v2 + v3);
    if (v11) {
LABEL_9:
    }
      [*(id *)(v11 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController) removeFromParentViewController];
  }
  else
  {
    id v12 = a1;
  }
LABEL_10:
}

void sub_1002F4808()
{
  sub_1002F0C38(*(void **)(v0 + 16));
}

uint64_t sub_1002F4810()
{
  return swift_deallocObject();
}

uint64_t sub_1002F4850(uint64_t a1)
{
  return sub_1002EEB34(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1002F485C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002F48A4(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  double v8 = v1[6];
  double v9 = v1[7];
  NSString v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *NSString v10 = v2;
  v10[1] = sub_100052588;
  return sub_1002EECA8(v8, v9, a1, v4, v5, v6, v7);
}

void sub_1002F4978()
{
}

uint64_t sub_1002F4984(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002F1610(a1, v4, v5, v6);
}

uint64_t sub_1002F4A3C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  double v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *double v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1002ECBB0(a1, v4, v5, v7, v6);
}

uint64_t sub_1002F4AFC()
{
  return swift_deallocObject();
}

uint64_t sub_1002F4B0C()
{
  return sub_1002F4C60((void (*)(void))&_swift_release);
}

void sub_1002F4B24()
{
  sub_1002EDF5C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002F4B30()
{
  return swift_deallocObject();
}

uint64_t sub_1002F4B40()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1002F4B80(char a1)
{
}

uint64_t sub_1002F4B90()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002F4BD0()
{
  sub_1002EE108(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1002F4BD8()
{
}

void sub_1002F4BE0()
{
}

uint64_t sub_1002F4BE8()
{
  return sub_1002F2FE4();
}

void sub_1002F4BF0(uint64_t a1)
{
  sub_1002F34C8(a1, v1, sub_1002EBB50);
}

uint64_t sub_1002F4C28()
{
  return sub_10013B9F8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002F4C48()
{
  return sub_1002F4C60((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1002F4C60(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002F4CA8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052588;
  return sub_1002F2F38();
}

void sub_1002F4D5C()
{
}

void sub_1002F4D78(uint64_t a1)
{
  sub_1002F34C8(a1, v1, sub_1002EC288);
}

uint64_t sub_1002F4DA8()
{
  return sub_1002F4DC4() & 1;
}

uint64_t sub_1002F4DC4()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_1002F4E54(unint64_t a1)
{
}

uint64_t sub_1002F4E60()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002F4EA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  double v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *double v8 = v2;
  v8[1] = sub_100052588;
  return sub_1002E979C(a1, v4, v5, v7, v6);
}

void sub_1002F4F68()
{
}

void sub_1002F4F84()
{
}

uint64_t sub_1002F4F8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002F4FD4()
{
}

id sub_1002F503C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup;
  id v4 = objc_allocWithZone((Class)CAAnimationGroup);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_radius] = 0x4069000000000000;
  *(void *)&v5[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration] = 0x3FF8000000000000;
  *(void *)&v5[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_scale] = 0x3FF3333333333333;
  *(void *)&v5[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_startTime] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_pulseAnimationKey];
  *(void *)uint64_t v6 = 0x65736C7570;
  *((void *)v6 + 1) = 0xE500000000000000;
  *(void *)&v5[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_pulseAnimationCancellable] = 0;

  sub_10002E0BC(a1, a1[3]);
  uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AudioButtonPulseAnimation();
  [super initWithLayer:v7];
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return v8;
}

char *sub_1002F51B8(double a1, double a2, double a3)
{
  uint64_t v7 = OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup;
  id v8 = objc_allocWithZone((Class)CAAnimationGroup);
  uint64_t v9 = v3;
  *(void *)&v3[v7] = [v8 init];
  *(void *)&v9[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_radius] = 0x4069000000000000;
  *(void *)&v9[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration] = 0x3FF8000000000000;
  *(void *)&v9[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_scale] = 0x3FF3333333333333;
  *(void *)&v9[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_startTime] = 0;
  objc_super v10 = &v9[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_pulseAnimationKey];
  *(void *)objc_super v10 = 0x65736C7570;
  *((void *)v10 + 1) = 0xE500000000000000;
  *(void *)&v9[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_pulseAnimationCancellable] = 0;

  v24.receiver = v9;
  v24.super_class = (Class)type metadata accessor for AudioButtonPulseAnimation();
  id v11 = [super init];
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = [v12 redColor];
  id v15 = [v14 colorWithAlphaComponent:0.1];

  id v16 = [v15 CGColor];
  [v13 setBackgroundColor:v16];

  unint64_t v17 = self;
  unint64_t v18 = (char *)v13;
  id v19 = [v17 mainScreen];
  [v19 scale];
  double v21 = v20;

  [v18 setContentsScale:v21];
  LODWORD(v22) = 1058642330;
  [v18 setOpacity:v22];
  *(double *)&v18[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_radius] = a1;
  *(double *)&v18[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration] = a2;
  *(double *)&v18[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_startTime] = a3;
  [v18 setBounds:0.0, 0.0, a1 + a1, a1 + a1];
  [v18 setCornerRadius:a1];
  sub_1002F586C();

  return v18;
}

uint64_t sub_1002F5460(double a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = a1 + 1.0;
  if (a1 + 1.0 <= 0.2) {
    double v10 = 0.2;
  }
  if (a1 >= 1.0) {
    double v11 = 2.0;
  }
  else {
    double v11 = v10;
  }
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(double *)(v14 + 24) = v11;
  aBlock[4] = sub_1002F614C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_1007A4B38;
  id v15 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1002F573C(double a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong superlayer];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = self;
      [v6 begin];
      double v7 = CACurrentMediaTime();
      id v8 = v3;
      [v8 convertTime:0 fromLayer:v7];
      [v8 setTimeOffset:];

      id v9 = v8;
      [v5 convertTime:0 fromLayer:v7];
      [v9 setBeginTime:];

      *(float *)&double v10 = a1;
      [v9 setSpeed:v10];
      [v6 commit];

      uint64_t v3 = v5;
    }
  }
}

uint64_t sub_1002F586C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  id v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1002F60F4;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_1007A4AE8;
  double v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1002F5AFC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup) setBeginTime:*(double *)(Strong + OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_startTime)];
    uint64_t v3 = OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration;
    [*(id *)&v1[v2] setDuration:*(double *)&v1[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration]];
    LODWORD(v4) = 2139095040;
    [*(id *)&v1[v2] setRepeatCount:v4];
    uint64_t v5 = *(void **)&v1[v2];
    uint64_t v6 = self;
    id v7 = v5;
    id v8 = [v6 functionWithName:kCAMediaTimingFunctionDefault];
    [v7 setTimingFunction:v8];

    uint64_t v9 = *(void **)&v1[v2];
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1006D6D10;
    id v11 = v9;
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [self animationWithKeyPath:v12];

    id v14 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
    [v13 setFromValue:v14];

    id v15 = [objc_allocWithZone((Class)NSNumber) initWithDouble:2.5];
    [v13 setToValue:v15];

    [v13 setDuration:*(double *)&v1[v3]];
    *(void *)(v10 + 32) = v13;
    *(void *)(v10 + 40) = sub_1002F5DEC();
    uint64_t v19 = v10;
    specialized Array._endMutation()();
    sub_10001B284(0, &qword_100807728);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 setAnimations:isa, v19];

    id v17 = *(id *)&v1[v2];
    swift_bridgeObjectRetain();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 addAnimation:v17 forKey:v18];
  }
}

id sub_1002F5DEC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self animationWithKeyPath:v1];

  [v2 setDuration:*(double *)(v0 + OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration)];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6D20;
  sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
  *(NSNumber *)(v3 + 32) = NSNumber.init(integerLiteral:)(0);
  *(NSNumber *)(v3 + 40) = NSNumber.init(floatLiteral:)(0.3);
  *(NSNumber *)(v3 + 48) = NSNumber.init(integerLiteral:)(1);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setKeyTimes:isa];

  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D7C30;
  *(void *)(v5 + 32) = 1;
  *(void *)(v5 + 56) = &type metadata for Int;
  *(void *)(v5 + 64) = 0x3FE999999999999ALL;
  *(void *)(v5 + 120) = &type metadata for Double;
  *(void *)(v5 + 88) = &type metadata for Double;
  *(void *)(v5 + 96) = 0x3FA999999999999ALL;
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setValues:v6];

  return v2;
}

id sub_1002F6004()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioButtonPulseAnimation();
  [super dealloc];
}

uint64_t type metadata accessor for AudioButtonPulseAnimation()
{
  return self;
}

uint64_t sub_1002F60BC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1002F60F4()
{
}

uint64_t sub_1002F60FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002F610C()
{
  return swift_release();
}

uint64_t sub_1002F6114()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002F614C()
{
  sub_1002F573C(*(double *)(v0 + 24));
}

void sub_1002F6158()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CAAnimationGroup) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_radius] = 0x4069000000000000;
  *(void *)&v0[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationDuration] = 0x3FF8000000000000;
  *(void *)&v0[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_scale] = 0x3FF3333333333333;
  *(void *)&v0[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_startTime] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_pulseAnimationKey];
  *(void *)uint64_t v2 = 0x65736C7570;
  *((void *)v2 + 1) = 0xE500000000000000;
  *(void *)&v0[OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_pulseAnimationCancellable] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Int sub_1002F6254()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  double v4 = v0[3];
  uint64_t v5 = (void *)*((void *)v0 + 4);
  Hasher.init(_seed:)();
  sub_1002F7ADC(v1, v2, v3, v4);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    id v6 = v5;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1002F62F0()
{
  double v1 = *(void **)(v0 + 32);
  sub_1002F7ADC(*(double *)v0, *(double *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24));
  if (v1)
  {
    Hasher._combine(_:)(1u);
    id v2 = v1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1002F638C()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  double v4 = v0[3];
  uint64_t v5 = (void *)*((void *)v0 + 4);
  Hasher.init(_seed:)();
  sub_1002F7ADC(v1, v2, v3, v4);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    id v6 = v5;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

BOOL sub_1002F6424(uint64_t a1, uint64_t a2)
{
  double v2 = *(void **)(a1 + 32);
  double v3 = *(void **)(a2 + 32);
  BOOL result = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  if (result)
  {
    if (v2)
    {
      if (v3)
      {
        sub_100088B50();
        id v5 = v3;
        id v6 = v2;
        char v7 = static NSObject.== infix(_:_:)();

        if (v7) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

id sub_1002F64B4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_quoteAreas] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_barInset] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_topInset] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for BlockQuoteLayerView();
  id v9 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 clearColor];
  [v11 setBackgroundColor:v12];

  [v11 setContentMode:5];
  return v11;
}

void sub_1002F667C(void *a1, CGFloat a2, double a3, CGFloat a4)
{
  CGFloat.roundToScreenScale()();
  double v9 = v8;
  CGFloat.roundToScreenScale()();
  double v11 = v10;
  id v12 = (uint64_t *)(v4 + OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_quoteAreas);
  swift_beginAccess();
  NSUInteger v13 = swift_bridgeObjectRetain();
  char v14 = sub_1002F7B5C(v13, v9, v11);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = *v12;
    uint64_t v16 = *(void *)(*v12 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      id v17 = a1;
      NSString v18 = (id *)(v15 + 64);
      while (1)
      {
        id v19 = *v18;
        CGFloat v21 = *((double *)v18 - 2);
        CGFloat v20 = *((double *)v18 - 1);
        CGFloat v23 = *((double *)v18 - 4);
        CGFloat v22 = *((double *)v18 - 3);
        id v24 = *v18;
        v39.origin.x = v23;
        v39.origin.y = v22;
        v39.size.width = v21;
        v39.size.height = v20;
        v40.origin.x = a2;
        v40.origin.y = v9;
        v40.size.width = a4;
        v40.size.height = v11;
        if (!CGRectEqualToRect(v39, v40)) {
          goto LABEL_4;
        }
        if (!v19)
        {
          if (!a1)
          {
LABEL_12:
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_5;
        }
        if (a1)
        {
          sub_100088B50();
          id v25 = v17;
          id v26 = v24;
          char v27 = static NSObject.== infix(_:_:)();

          if (v27) {
            goto LABEL_12;
          }
        }
        else
        {
LABEL_4:
        }
LABEL_5:
        v18 += 5;
        if (!--v16)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_15;
        }
      }
    }
    id v17 = a1;
LABEL_15:
    swift_beginAccess();
    int v28 = (void *)*v12;
    id v29 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v12 = (uint64_t)v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int v28 = sub_1002A5C84(0, v28[2] + 1, 1, v28);
      uint64_t *v12 = (uint64_t)v28;
    }
    unint64_t v32 = v28[2];
    unint64_t v31 = v28[3];
    if (v32 >= v31 >> 1)
    {
      int v28 = sub_1002A5C84((void *)(v31 > 1), v32 + 1, 1, v28);
      uint64_t *v12 = (uint64_t)v28;
    }
    v28[2] = v32 + 1;
    uint64_t v33 = (CGFloat *)&v28[5 * v32];
    v33[4] = a2;
    v33[5] = v9;
    v33[6] = a4;
    v33[7] = v11;
    *((void *)v33 + 8) = a1;
    uint64_t v34 = *v12;
    swift_endAccess();
    v38[0] = v34;
    swift_bridgeObjectRetain_n();
    sub_1002F7074(v38);
    swift_bridgeObjectRelease();
    uint64_t *v12 = v38[0];
    swift_bridgeObjectRelease();
    uint64_t v35 = (void *)swift_bridgeObjectRetain();
    sub_1002F7CF8(v35);
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t *v12 = v37;

    swift_bridgeObjectRelease();
  }
}

void sub_1002F695C(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v53 = type metadata accessor for CGPathFillRule();
  uint64_t v10 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  Swift::Int v52 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (objc_class *)type metadata accessor for BlockQuoteLayerView();
  v54.receiver = v4;
  v54.super_class = v12;
  [super drawRect:a1, a2, a3, a4];
  NSUInteger v13 = UIGraphicsGetCurrentContext();
  if (v13)
  {
    char v14 = v13;
    CGContextSaveGState(v13);
    uint64_t v15 = &v5[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_quoteAreas];
    swift_beginAccess();
    uint64_t v51 = v15;
    uint64_t v16 = *(void *)v15;
    uint64_t v50 = *(void *)(v16 + 16);
    if (v50)
    {
      id v17 = self;
      uint64_t v47 = OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_topInset;
      id v48 = v17;
      uint64_t v46 = OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_barInset;
      unsigned int v45 = enum case for CGPathFillRule.winding(_:);
      uint64_t v44 = (void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = (void (**)(char *, uint64_t))(v10 + 8);
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      unint64_t v19 = 0;
      uint64_t v49 = v16;
      do
      {
        BOOL v23 = 0;
        uint64_t v24 = v16 + v18;
        double v25 = *(double *)(v16 + v18 + 40);
        uint64_t v26 = *(void *)v51;
        unint64_t v27 = *(void *)(*(void *)v51 + 16);
        if (v18)
        {
          int v28 = &selRef_drawMapRect_zoomScale_inContext_;
          if ((uint64_t)v19 <= (uint64_t)v27) {
            BOOL v23 = vabdd_f64(*(double *)(v26 + v18) + *(double *)(v26 + v18 + 16), v25) < 1.0;
          }
        }
        else
        {
          int v28 = &selRef_drawMapRect_zoomScale_inContext_;
        }
        double v29 = *(double *)(v24 + 56);
        unint64_t v30 = v19 + 1;
        if (v19 >= v27 || v30 >= v27 || vabdd_f64(*(double *)(v26 + v18 + 80), v25 + v29) >= 1.0)
        {
          if (v23) {
            uint64_t v31 = -4;
          }
          else {
            uint64_t v31 = -1;
          }
        }
        else if (v23)
        {
          uint64_t v31 = -16;
        }
        else
        {
          uint64_t v31 = -13;
        }
        unint64_t v32 = *(void **)(v24 + 64);
        double v33 = v25 + *(double *)&v5[v47];
        double v34 = *(double *)&v5[v46];
        id v35 = v32;
        id v36 = [v48 bezierPathWithRoundedRect:v31 byRoundingCorners:v34 cornerRadii:v33 4.0 v29 2.0 2.0];
        uint64_t v37 = (const CGPath *)[v36 CGPath];

        CGContextAddPath(v14, v37);
        if (qword_1007F7200 != -1) {
          swift_once();
        }
        id v38 = [qword_10083D7C8 v28[130] 0.45];
        if (v32)
        {
          CGRect v39 = v5;
          id v40 = v35;
          id v41 = [v40 v28[130] 0.45];

          id v5 = v39;
          id v38 = v41;
        }
        CGFloat v20 = (CGColor *)[v38 CGColor];
        CGContextSetFillColorWithColor(v14, v20);

        CGContextClosePath(v14);
        CGFloat v22 = v52;
        uint64_t v21 = v53;
        (*v44)(v52, v45, v53);
        CGContextRef.fillPath(using:)();

        (*v43)(v22, v21);
        v18 += 40;
        unint64_t v19 = v30;
        uint64_t v16 = v49;
      }
      while (v50 != v30);
      swift_bridgeObjectRelease();
    }
    CGContextRestoreGState(v14);
  }
}

id sub_1002F6E04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlockQuoteLayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for BlockQuoteLayerView()
{
  return self;
}

void destroy for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1)
{
}

uint64_t initializeWithCopy for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  id v5 = v4;
  return a1;
}

void *assignWithCopy for BlockQuoteLayerView.BlockQuoteArea(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  long long v3 = (void *)a1[4];
  uint64_t v4 = (void *)a2[4];
  a1[4] = v4;
  id v5 = v4;

  return a1;
}

__n128 _s32MOPOIAnnotationViewConfigurationVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockQuoteLayerView.BlockQuoteArea(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockQuoteLayerView.BlockQuoteArea()
{
  return &type metadata for BlockQuoteLayerView.BlockQuoteArea;
}

unint64_t sub_1002F7020()
{
  unint64_t result = qword_100807770;
  if (!qword_100807770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807770);
  }
  return result;
}

Swift::Int sub_1002F7074(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000F3F58(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1002F70E0(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1002F70E0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v93 = *a1;
      uint64_t v94 = *a1 + 72;
      uint64_t v95 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v97 = *(double *)(v93 + 40 * i + 8);
        uint64_t v98 = v95;
        uint64_t v99 = v94;
        do
        {
          if (v97 >= *(double *)(v99 - 64)) {
            break;
          }
          if (!v93) {
            goto LABEL_141;
          }
          uint64_t v100 = v99 - 32;
          Swift::String v101 = (_OWORD *)(v99 - 72);
          uint64_t v102 = *(void *)(v99 - 40);
          *(void *)(v99 - 40) = *(void *)v99;
          v99 -= 40;
          uint64_t v103 = *(void *)(v99 + 8);
          long long v104 = *(_OWORD *)(v99 + 24);
          long long v105 = v101[1];
          *(_OWORD *)uint64_t v100 = *v101;
          *(_OWORD *)(v100 + 16) = v105;
          *(void *)(v100 + 32) = v102;
          *(void *)(v99 - 32) = v103;
          *(double *)(v99 - 24) = v97;
          *(_OWORD *)(v99 - 16) = v104;
        }
        while (!__CFADD__(v98++, 1));
        v94 += 40;
        --v95;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  Swift::String v116 = a1;
  if (v3 < 2)
  {
    double v9 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      id v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      Swift::String v107 = v12;
      v118 = v9;
      if (v13 >= 2)
      {
        uint64_t v108 = *v116;
        do
        {
          unint64_t v109 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v108) {
            goto LABEL_145;
          }
          Swift::String v110 = v107;
          uint64_t v111 = *(void *)&v107[16 * v109 + 32];
          uint64_t v112 = *(void *)&v107[16 * v13 + 24];
          sub_1002F7820((double *)(v108 + 40 * v111), (double *)(v108 + 40 * *(void *)&v107[16 * v13 + 16]), v108 + 40 * v112, __dst);
          if (v1) {
            break;
          }
          if (v112 < v111) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v110 = sub_1000F1E40((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_134;
          }
          id v113 = &v110[16 * v109 + 32];
          *(void *)id v113 = v111;
          *((void *)v113 + 1) = v112;
          unint64_t v114 = *((void *)v110 + 2);
          if (v13 > v114) {
            goto LABEL_135;
          }
          memmove(&v110[16 * v13 + 16], &v110[16 * v13 + 32], 16 * (v114 - v13));
          Swift::String v107 = v110;
          *((void *)v110 + 2) = v114 - 1;
          unint64_t v13 = v114 - 1;
        }
        while (v114 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v118[2] = 0;
      return swift_bridgeObjectRelease();
    }
    v118 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    v118 = (void *)v8;
    __dst = (double *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v117 = *a1 + 88;
  uint64_t v115 = *a1 + 32;
  id v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v119 = v6;
  Swift::Int v120 = v3;
  uint64_t v121 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 40 * v10 + 8);
      double v16 = *(double *)(v11 + 40 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        id v17 = (double *)(v117 + 40 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 5;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 40 * v10;
          uint64_t v21 = 40 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = *(void *)(v11 + v21 + 32);
              uint64_t v26 = v11 + v20;
              long long v27 = *(_OWORD *)(v11 + v21);
              long long v28 = *(_OWORD *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v20 - 8);
              long long v30 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v30;
              *(void *)(v24 + 32) = v29;
              *(_OWORD *)(v26 - 40) = v27;
              *(_OWORD *)(v26 - 24) = v28;
              *(void *)(v26 - 8) = v25;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v31 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v31 >= v3) {
      Swift::Int v31 = v3;
    }
    if (v31 < v14) {
      break;
    }
    if (v10 != v31)
    {
      uint64_t v32 = v115 + 40 * v10;
      do
      {
        double v33 = *(double *)(v11 + 40 * v10 + 8);
        Swift::Int v34 = v14;
        uint64_t v35 = v32;
        do
        {
          if (v33 >= *(double *)(v35 - 64)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v36 = v35 - 32;
          uint64_t v37 = (_OWORD *)(v35 - 72);
          uint64_t v38 = *(void *)(v35 - 40);
          *(void *)(v35 - 40) = *(void *)v35;
          v35 -= 40;
          uint64_t v39 = *(void *)(v35 + 8);
          long long v40 = *(_OWORD *)(v35 + 24);
          long long v41 = v37[1];
          *(_OWORD *)uint64_t v36 = *v37;
          *(_OWORD *)(v36 + 16) = v41;
          *(void *)(v36 + 32) = v38;
          *(void *)(v35 - 32) = v39;
          *(double *)(v35 - 24) = v33;
          *(_OWORD *)(v35 - 16) = v40;
          ++v34;
        }
        while (v10 != v34);
        ++v10;
        v32 += 40;
      }
      while (v10 != v31);
      Swift::Int v10 = v31;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v12 = sub_1000F1750(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v43 = *((void *)v12 + 2);
    unint64_t v42 = *((void *)v12 + 3);
    unint64_t v13 = v43 + 1;
    uint64_t v11 = v121;
    if (v43 >= v42 >> 1)
    {
      Swift::String v92 = sub_1000F1750((char *)(v42 > 1), v43 + 1, 1, v12);
      uint64_t v11 = v121;
      id v12 = v92;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v44 = v12 + 32;
    unsigned int v45 = &v12[16 * v43 + 32];
    *(void *)unsigned int v45 = v14;
    *((void *)v45 + 1) = v10;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v51 = &v44[16 * v13];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_120;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_121;
          }
          unint64_t v58 = v13 - 2;
          uint64_t v59 = &v44[16 * v13 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_123;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_126;
          }
          if (v63 >= v54)
          {
            uint64_t v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_130;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v75 = *((void *)v12 + 4);
            uint64_t v76 = *((void *)v12 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_77;
          }
          uint64_t v48 = *((void *)v12 + 4);
          uint64_t v47 = *((void *)v12 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_122;
        }
        unint64_t v58 = v13 - 2;
        long long v64 = &v44[16 * v13 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_125;
        }
        Swift::String v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_128;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_129;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_83:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v69) {
          goto LABEL_124;
        }
        id v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_127;
        }
        if (v80 < v68) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        id v86 = v12;
        Swift::String v87 = &v44[16 * v85];
        uint64_t v88 = *(void *)v87;
        Swift::String v89 = &v44[16 * v46];
        uint64_t v90 = *((void *)v89 + 1);
        sub_1002F7820((double *)(v11 + 40 * *(void *)v87), (double *)(v11 + 40 * *(void *)v89), v11 + 40 * v90, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v90 < v88) {
          goto LABEL_117;
        }
        if (v46 > *((void *)v86 + 2)) {
          goto LABEL_118;
        }
        *(void *)Swift::String v87 = v88;
        *(void *)&v44[16 * v85 + 8] = v90;
        unint64_t v91 = *((void *)v86 + 2);
        if (v46 >= v91) {
          goto LABEL_119;
        }
        id v12 = v86;
        unint64_t v13 = v91 - 1;
        memmove(&v44[16 * v46], v89 + 16, 16 * (v91 - 1 - v46));
        *((void *)v86 + 2) = v91 - 1;
        uint64_t v11 = v121;
        if (v91 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v119;
    Swift::Int v3 = v120;
    if (v10 >= v120)
    {
      double v9 = v118;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002F7820(double *__src, double *a2, unint64_t a3, double *__dst)
{
  int v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v29 = __src;
  long long v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[5 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      double v18 = &v4[5 * v11];
      long long v27 = (char *)v18;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v19 = a3 - 40;
        do
        {
          uint64_t v20 = (double *)(v19 + 40);
          if (*(v18 - 4) >= *(v6 - 4))
          {
            long long v27 = (char *)(v18 - 5);
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 5);
              long long v25 = *(_OWORD *)(v18 - 3);
              *(double *)(v19 + 32) = *(v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
              *(_OWORD *)(v19 + 16) = v25;
            }
            uint64_t v21 = v6;
            v18 -= 5;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 5;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              long long v22 = *(_OWORD *)v21;
              long long v23 = *(_OWORD *)(v6 - 3);
              *(double *)(v19 + 32) = *(v6 - 1);
              *(_OWORD *)unint64_t v19 = v22;
              *(_OWORD *)(v19 + 16) = v23;
            }
            uint64_t v29 = v6 - 5;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 40;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1000F184C((void **)&v29, (const void **)&v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[5 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    id v12 = &v4[5 * v9];
    long long v27 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v6[1] >= v13[1])
        {
          int v4 = v13 + 5;
          double v15 = v13;
          Swift::Int v14 = v6;
          if (v7 == v13)
          {
            v13 += 5;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 5;
          }
        }
        else
        {
          Swift::Int v14 = v6 + 5;
          double v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        long long v17 = *((_OWORD *)v15 + 1);
        v7[4] = v15[4];
        *(_OWORD *)uint64_t v7 = v16;
        *((_OWORD *)v7 + 1) = v17;
LABEL_18:
        v7 += 5;
        if (v13 < v12)
        {
          Swift::Int v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        long long v28 = v4;
        uint64_t v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1002F7ADC(double a1, double a2, double a3, double a4)
{
  CGRect v11 = CGRectStandardize(*(CGRect *)&a1);
  CGFloat y = v11.origin.y;
  CGFloat width = v11.size.width;
  CGFloat height = v11.size.height;
  if ((*(void *)&v11.origin.x & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    CGFloat x = v11.origin.x;
  }
  else {
    CGFloat x = 0.0;
  }
  Hasher._combine(_:)(*(Swift::UInt64 *)&x);
  if ((*(void *)&y & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)&y;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  if ((*(void *)&width & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = *(void *)&width;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  if ((*(void *)&height & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = *(void *)&height;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  Hasher._combine(_:)(v10);
}

NSUInteger sub_1002F7B5C(NSUInteger result, double a2, double a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    if (a2 > -9.22337204e18)
    {
      if (a2 >= 9.22337204e18)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if ((*(void *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&a3 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_35;
      }
      if (a3 <= -9.22337204e18)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (a3 >= 9.22337204e18)
      {
LABEL_37:
        __break(1u);
        return result;
      }
      NSUInteger v4 = (uint64_t)a2;
      int64_t v5 = (uint64_t)a3;
      uint64_t result = swift_bridgeObjectRetain();
      Swift::Int v6 = (double *)(result + 56);
      while (1)
      {
        double v7 = *(v6 - 2);
        if (v7 <= -9.22337204e18) {
          break;
        }
        if (v7 >= 9.22337204e18) {
          goto LABEL_29;
        }
        double v8 = *v6;
        if ((*(void *)&v7 & 0x7FF0000000000000) == 0x7FF0000000000000
          || (*(void *)v6 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_30;
        }
        if (v8 <= -9.22337204e18) {
          goto LABEL_31;
        }
        if (v8 >= 9.22337204e18) {
          goto LABEL_32;
        }
        v10.length = (uint64_t)v8;
        BOOL v11 = (uint64_t)v7 == v4 && v10.length == v5;
        if (v11
          || (v14.location = v4,
              v14.length = v5,
              v10.location = (uint64_t)v7,
              NSRange v12 = NSIntersectionRange(v14, v10),
              uint64_t result = v12.location,
              (uint64_t)v12.length >= v5))
        {
          uint64_t v13 = 1;
          goto LABEL_25;
        }
        v6 += 5;
        if (!--v3)
        {
          uint64_t v13 = 0;
LABEL_25:
          swift_bridgeObjectRelease();
          return v13;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
  return 0;
}

void sub_1002F7CF8(void *a1)
{
  id v77 = a1;
  unint64_t v1 = a1[2];
  if (!v1)
  {
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v2 = a1 + 4;
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  uint64_t v72 = v2;
  while (1)
  {
    uint64_t v6 = v3 + 1;
    if (v3 + 1 >= v1) {
      goto LABEL_5;
    }
    double v7 = (double *)&v2[5 * v3];
    double v8 = *v7;
    double v9 = v7[1];
    double v10 = v7[2];
    double v11 = v7[3];
    NSRange v12 = (double *)&v2[5 * v6];
    double v13 = *v12;
    double v14 = v12[1];
    double v15 = v12[2];
    double v16 = v12[3];
    sub_100496110(*v12, v14, v15, v16, v8, v9, v10, v11);
    if (v17)
    {
      double v18 = v77;
      uint64_t v19 = v77[2];
      if (v19)
      {
        CGFloat v20 = *((double *)v77 + 4);
        CGFloat v21 = *((double *)v77 + 5);
        CGFloat v22 = *((double *)v77 + 6);
        CGFloat v23 = *((double *)v77 + 7);
        swift_bridgeObjectRetain();
        v78.origin.CGFloat x = v20;
        v78.origin.CGFloat y = v21;
        v78.size.CGFloat width = v22;
        v78.size.CGFloat height = v23;
        v80.origin.CGFloat x = v8;
        v80.origin.CGFloat y = v9;
        v80.size.CGFloat width = v10;
        v80.size.CGFloat height = v11;
        if (CGRectEqualToRect(v78, v80))
        {
          uint64_t v5 = 0;
        }
        else
        {
          if (v19 == 1)
          {
LABEL_53:
            swift_bridgeObjectRelease();
            uint64_t v5 = v19;
LABEL_54:
            int64_t v4 = v18[2];
            uint64_t v2 = v72;
            if (v4 < v5) {
              goto LABEL_78;
            }
            goto LABEL_4;
          }
          uint64_t v68 = v77 + 12;
          uint64_t v5 = 1;
          while (1)
          {
            v84.origin.CGFloat x = v8;
            v84.origin.CGFloat y = v9;
            v84.size.CGFloat width = v10;
            v84.size.CGFloat height = v11;
            if (CGRectEqualToRect(*(CGRect *)(v68 - 3), v84)) {
              break;
            }
            uint64_t v69 = v5 + 1;
            if (__OFADD__(v5, 1)) {
              goto LABEL_71;
            }
            ++v5;
            v68 += 5;
            if (v69 == v19) {
              goto LABEL_53;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_83;
        }
        if (v24 != v19)
        {
          uint64_t v25 = 40 * v5 + 104;
          unint64_t v26 = v5 + 1;
          while ((v24 & 0x8000000000000000) == 0)
          {
            if (v26 >= v18[2]) {
              goto LABEL_67;
            }
            long long v28 = (char *)v18 + v25;
            v81.origin.CGFloat x = v8;
            v81.origin.CGFloat y = v9;
            v81.size.CGFloat width = v10;
            v81.size.CGFloat height = v11;
            if (!CGRectEqualToRect(*(CGRect *)((char *)v18 + v25 - 32), v81))
            {
              if (v26 != v5)
              {
                if (v5 < 0) {
                  goto LABEL_72;
                }
                unint64_t v29 = v18[2];
                if (v5 >= v29) {
                  goto LABEL_73;
                }
                if (v26 >= v29) {
                  goto LABEL_74;
                }
                uint64_t v30 = (uint64_t)&v18[5 * v5 + 4];
                long long v73 = *(_OWORD *)(v30 + 16);
                long long v75 = *(_OWORD *)v30;
                Swift::Int v31 = *(void **)(v30 + 32);
                uint64_t v32 = *((void *)v28 - 4);
                uint64_t v33 = *((void *)v28 - 3);
                uint64_t v34 = *((void *)v28 - 2);
                uint64_t v35 = *((void *)v28 - 1);
                uint64_t v36 = *(void **)((char *)v18 + v25);
                id v37 = v36;
                id v38 = v31;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  double v18 = sub_1000EFF9C(v18);
                }
                uint64_t v39 = &v18[5 * v5];
                long long v40 = (void *)v39[8];
                v39[4] = v32;
                v39[5] = v33;
                v39[6] = v34;
                v39[7] = v35;
                v39[8] = v36;

                if (v26 >= v18[2]) {
                  goto LABEL_75;
                }
                long long v41 = (void *)((char *)v18 + v25);
                unint64_t v42 = *(void **)((char *)v18 + v25);
                *((_OWORD *)v41 - 2) = v75;
                *((_OWORD *)v41 - 1) = v73;
                *long long v41 = v31;

                id v77 = v18;
              }
              BOOL v27 = __OFADD__(v5++, 1);
              if (v27) {
                goto LABEL_68;
              }
            }
            ++v26;
            v25 += 40;
            if (v26 == v18[2]) {
              goto LABEL_54;
            }
          }
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        goto LABEL_54;
      }
      goto LABEL_3;
    }
    sub_100496110(v8, v9, v10, v11, v13, v14, v15, v16);
    if ((v43 & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v44 = v77;
    uint64_t v45 = v77[2];
    if (v45) {
      break;
    }
LABEL_3:
    int64_t v4 = 0;
    uint64_t v5 = 0;
LABEL_4:
    sub_1000F6B58(v5, v4);
LABEL_5:
    uint64_t v3 = v6;
    if (v6 == v1) {
      goto LABEL_64;
    }
  }
  CGFloat v46 = *((double *)v77 + 4);
  CGFloat v47 = *((double *)v77 + 5);
  CGFloat v48 = *((double *)v77 + 6);
  CGFloat v49 = *((double *)v77 + 7);
  swift_bridgeObjectRetain();
  v79.origin.CGFloat x = v46;
  v79.origin.CGFloat y = v47;
  v79.size.CGFloat width = v48;
  v79.size.CGFloat height = v49;
  v82.origin.CGFloat x = v13;
  v82.origin.CGFloat y = v14;
  v82.size.CGFloat width = v15;
  v82.size.CGFloat height = v16;
  if (CGRectEqualToRect(v79, v82))
  {
    uint64_t v5 = 0;
    goto LABEL_31;
  }
  if (v45 == 1)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    uint64_t v5 = v45;
    goto LABEL_62;
  }
  Swift::String v70 = v77 + 12;
  uint64_t v5 = 1;
  while (1)
  {
    v85.origin.CGFloat x = v13;
    v85.origin.CGFloat y = v14;
    v85.size.CGFloat width = v15;
    v85.size.CGFloat height = v16;
    if (CGRectEqualToRect(*(CGRect *)(v70 - 3), v85)) {
      break;
    }
    uint64_t v71 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_77;
    }
    ++v5;
    v70 += 5;
    if (v71 == v45) {
      goto LABEL_61;
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v50 = v5 + 1;
  if (__OFADD__(v5, 1)) {
    goto LABEL_84;
  }
  if (v50 == v45)
  {
LABEL_62:
    int64_t v4 = v44[2];
    uint64_t v2 = v72;
    if (v4 < v5)
    {
      __break(1u);
LABEL_64:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_4;
  }
  uint64_t v51 = 40 * v5 + 104;
  unint64_t v52 = v5 + 1;
  while ((v50 & 0x8000000000000000) == 0)
  {
    if (v52 >= v44[2]) {
      goto LABEL_70;
    }
    uint64_t v55 = (char *)v44 + v51;
    v83.origin.CGFloat x = v13;
    v83.origin.CGFloat y = v14;
    v83.size.CGFloat width = v15;
    v83.size.CGFloat height = v16;
    if (!CGRectEqualToRect(*(CGRect *)((char *)v44 + v51 - 32), v83))
    {
      if (v52 != v5)
      {
        if (v5 < 0) {
          goto LABEL_79;
        }
        unint64_t v56 = v44[2];
        if (v5 >= v56) {
          goto LABEL_80;
        }
        if (v52 >= v56) {
          goto LABEL_81;
        }
        uint64_t v57 = (uint64_t)&v44[5 * v5 + 4];
        long long v74 = *(_OWORD *)(v57 + 16);
        long long v76 = *(_OWORD *)v57;
        unint64_t v58 = *(void **)(v57 + 32);
        uint64_t v59 = *((void *)v55 - 4);
        uint64_t v60 = *((void *)v55 - 3);
        uint64_t v61 = *((void *)v55 - 2);
        uint64_t v62 = *((void *)v55 - 1);
        uint64_t v63 = *(void **)((char *)v44 + v51);
        id v64 = v63;
        id v65 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v44 = sub_1000EFF9C(v44);
        }
        uint64_t v66 = &v44[5 * v5];
        BOOL v67 = (void *)v66[8];
        v66[4] = v59;
        v66[5] = v60;
        v66[6] = v61;
        v66[7] = v62;
        v66[8] = v63;

        if (v52 >= v44[2]) {
          goto LABEL_82;
        }
        uint64_t v53 = (void *)((char *)v44 + v51);
        uint64_t v54 = *(void **)((char *)v44 + v51);
        *((_OWORD *)v53 - 2) = v76;
        *((_OWORD *)v53 - 1) = v74;
        *uint64_t v53 = v58;

        id v77 = v44;
      }
      BOOL v27 = __OFADD__(v5++, 1);
      if (v27) {
        goto LABEL_76;
      }
    }
    ++v52;
    v51 += 40;
    if (v52 == v44[2]) {
      goto LABEL_62;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
}

uint64_t sub_1002F8230()
{
  v1[2] = v0;
  sub_100010218(&qword_1008077C0);
  v1[3] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CSSearchQuery.Results.Item();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CSSearchQuery.Results();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CSSearchQuery.Results.Iterator();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_1002F83E8, 0, 0);
}

uint64_t sub_1002F83E8()
{
  (*(void (**)(void, void, void))(v0[9] + 16))(v0[10], v0[2], v0[8]);
  sub_1002FA754(&qword_1008077C8, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  v0[14] = _swiftEmptyArrayStorage;
  uint64_t v1 = sub_1002FA754(&qword_1008077D0, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results.Iterator);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002F8548;
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[3];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_1002F8548()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v6 = v2 + 88;
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = *(void *)(v6 + 8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    double v7 = sub_1002F8934;
  }
  else
  {
    double v7 = sub_1002F8688;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002F8688()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    sub_1002FA79C(v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v5 = v0[14];
    return v4(v5);
  }
  else
  {
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v9(v7, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v8, v7, v1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = v0[14];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v11 = sub_1002A5C1C(0, *(void *)(v11 + 16) + 1, 1, v0[14]);
    }
    unint64_t v13 = *(void *)(v11 + 16);
    unint64_t v12 = *(void *)(v11 + 24);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_1002A5C1C(v12 > 1, v13 + 1, 1, v11);
    }
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[7];
    uint64_t v16 = v0[4];
    uint64_t v17 = v0[5];
    *(void *)(v11 + 16) = v13 + 1;
    v9(v11+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v13, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v0[14] = v11;
    uint64_t v18 = sub_1002FA754(&qword_1008077D0, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results.Iterator);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[15] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1002F8548;
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[3];
    return dispatch thunk of AsyncIteratorProtocol.next()(v21, v20, v18);
  }
}

uint64_t sub_1002F8934()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002F89CC()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SpotlightDebugVC();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D6D10;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  *(void *)(swift_allocObject() + 16) = v0;
  id v3 = v0;
  v11.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v4.value._uint64_t countAndFlagsBits = 0x7865646E696552;
  v4.value._object = (void *)0xE700000000000000;
  v11.value.super.Class isa = 0;
  v13.value.super.super.Class isa = 0;
  *(UIBarButtonItem *)(v2 + 32) = UIBarButtonItem.init(title:image:primaryAction:menu:)(v4, v11, v13, v15);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  id v6 = v3;
  v12.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v7.value._uint64_t countAndFlagsBits = 0x6574656C6544;
  v7.value._object = (void *)0xE600000000000000;
  v12.value.super.Class isa = 0;
  v14.value.super.super.Class isa = 0;
  *(UIBarButtonItem *)(v2 + 40) = UIBarButtonItem.init(title:image:primaryAction:menu:)(v7, v12, v14, v16);
  uint64_t v9 = v2;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setRightBarButtonItems:isa, 0, 0, 0, sub_1002FA83C, v5, v9];
}

void sub_1002F8C00(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    type metadata accessor for MainActor();
    id v8 = v6;
    id v9 = a2;
    uint64_t v10 = static MainActor.shared.getter();
    UIImage_optional v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    void v11[4] = v8;
    v11[5] = v9;
    sub_100328A60((uint64_t)v5, (uint64_t)&unk_1008077F0, (uint64_t)v11);
    swift_release();
  }
}

uint64_t sub_1002F8D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  v5[6] = type metadata accessor for SpotlightUtilities();
  return _swift_task_switch(sub_1002F8E0C, 0, 0);
}

uint64_t sub_1002F8E0C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  static Date.timeIntervalSinceReferenceDate.getter();
  v0[7] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002F8F0C;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD00000000000002DLL, 0x8000000100688640, sub_100052294, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1002F8F0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F9024, 0, 0);
}

uint64_t sub_1002F9024()
{
  sub_1000500A0(*(double *)(v0 + 56));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002F90BC;
  return sub_1002F9BB0();
}

uint64_t sub_1002F90BC()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v2;
    uint64_t v4 = sub_1002FAA6C;
  }
  else
  {
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v5;
    uint64_t v4 = sub_1002F9240;
  }
  return _swift_task_switch(v4, v1, v3);
}

uint64_t sub_1002F9240()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002F92A0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    type metadata accessor for MainActor();
    id v8 = v6;
    id v9 = a2;
    uint64_t v10 = static MainActor.shared.getter();
    UIImage_optional v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    void v11[4] = v9;
    sub_100328A60((uint64_t)v5, (uint64_t)&unk_1008077E0, (uint64_t)v11);

    swift_release();
  }
}

uint64_t sub_1002F9428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_1007FA5B8 + dword_1007FA5B8);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[5] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1002F94E4;
  return v7();
}

uint64_t sub_1002F94E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1002F9624;
  return sub_1002F9BB0();
}

uint64_t sub_1002F9624()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v2;
    uint64_t v4 = sub_1002FAA78;
  }
  else
  {
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v5;
    uint64_t v4 = sub_100193204;
  }
  return _swift_task_switch(v4, v1, v3);
}

uint64_t sub_1002F97F0()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  type metadata accessor for MainActor();
  id v5 = v0;
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v5;
  sub_100328C78((uint64_t)v3, (uint64_t)&unk_1008077B0, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1002F9908(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1002F99B8;
  return sub_1002F9BB0();
}

uint64_t sub_1002F99B8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    id v5 = sub_1002FAA74;
  }
  else
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v6;
    id v5 = sub_1002F9B3C;
  }
  return _swift_task_switch(v5, v2, v4);
}

uint64_t sub_1002F9B3C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (BOOL *)v0[2];
  swift_release();
  *uint64_t v2 = v1 != 0;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002F9BB0()
{
  v1[3] = v0;
  uint64_t v2 = type metadata accessor for CSSearchQuery.Results.Item();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CSSearchQuery.Results();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[11] = v5;
  v1[12] = v4;
  return _swift_task_switch(sub_1002F9D00, v5, v4);
}

uint64_t sub_1002F9D00()
{
  id v1 = objc_allocWithZone((Class)CSSearchQuery);
  NSString v2 = String._bridgeToObjectiveC()();
  *(void *)(v0 + 104) = [v1 initWithQueryString:v2 queryContext:0];

  CSSearchQuery.results.getter();
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1008077B8 + dword_1008077B8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002F9E08;
  return v5();
}

uint64_t sub_1002F9E08(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 72);
  uint64_t v6 = *(void *)(*v2 + 64);
  uint64_t v7 = *(void *)(*v2 + 56);
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void *)(v3 + 96);
  uint64_t v9 = *(void *)(v3 + 88);
  if (v1) {
    uint64_t v10 = sub_1002FA338;
  }
  else {
    uint64_t v10 = sub_1002F9FA8;
  }
  return _swift_task_switch(v10, v9, v8);
}

id sub_1002F9FA8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v0 + 120);
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 40);
    sub_100095FD4(0, v2, 0);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v4 + 16;
    uint64_t v7 = v3 + ((*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64));
    uint64_t v32 = *(void *)(v5 + 56);
    uint64_t v33 = v6;
    uint64_t v34 = v0;
    do
    {
      uint64_t v8 = *(void *)(v0 + 48);
      uint64_t v9 = *(void *)(v0 + 32);
      v33(v8, v7, v9);
      uint64_t v10 = (void *)CSSearchQuery.Results.Item.item.getter();
      id v11 = [v10 debugDescription];

      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      UIMenu_optional v15 = (void *)CSSearchQuery.Results.Item.item.getter();
      id v16 = [v15 attributeSet];

      id v17 = [v16 debugDescription];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      (*(void (**)(uint64_t, uint64_t))(v5 - 8))(v8, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100095FD4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      double v22 = _swiftEmptyArrayStorage[2];
      double v21 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v22 >= *(void *)&v21 >> 1) {
        sub_100095FD4(*(void *)&v21 > 1uLL, *(void *)&v22 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v22 + 1;
      CGFloat v23 = &_swiftEmptyArrayStorage[4 * *(void *)&v22];
      *((void *)v23 + 4) = v12;
      *((void *)v23 + 5) = v14;
      *((void *)v23 + 6) = v18;
      *((void *)v23 + 7) = v20;
      v7 += v32;
      --v2;
      uint64_t v0 = v34;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(char **)(v0 + 24);
  sub_100010218(&qword_1007FC1C8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1006D6280;
  *(void *)(v25 + 32) = 0x746E756F63;
  *(void *)(v25 + 40) = 0xE500000000000000;
  *(double *)(v0 + 16) = _swiftEmptyArrayStorage[2];
  *(void *)(v25 + 48) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v25 + 56) = v26;
  sub_100010218(&qword_100800CB0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1006D6270;
  *(void *)(v27 + 32) = 0x6867696C746F7053;
  *(void *)(v27 + 40) = 0xEF7865646E492074;
  *(void *)(v27 + 48) = v25;
  *(void *)(v27 + 56) = 0xD000000000000010;
  *(void *)(v27 + 64) = 0x80000001006986C0;
  *(void *)(v27 + 72) = _swiftEmptyArrayStorage;
  *(void *)&v24[OBJC_IVAR____TtC7Journal29TitleValueTableViewController_data] = v27;
  swift_bridgeObjectRelease();
  id result = [v24 tableView];
  if (result)
  {
    unint64_t v29 = result;
    uint64_t v30 = *(void **)(v0 + 104);
    [result reloadData];

    swift_task_dealloc();
    swift_task_dealloc();
    Swift::Int v31 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v31();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FA338()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1002FA4F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightDebugVC();
  return [super dealloc];
}

uint64_t type metadata accessor for SpotlightDebugVC()
{
  return self;
}

uint64_t sub_1002FA550(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100052588;
  return sub_1002F9908(a1);
}

id sub_1002FA604()
{
  type metadata accessor for SpotlightDebugVC();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v1 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v0];

  return v1;
}

uint64_t sub_1002FA664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002FAA18();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002FA6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002FAA18();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002FA72C()
{
}

uint64_t sub_1002FA754(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002FA79C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1008077C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002FA7FC()
{
  return swift_deallocObject();
}

void sub_1002FA834(uint64_t a1)
{
  sub_1002F8C00(a1, *(void **)(v1 + 16));
}

void sub_1002FA83C(uint64_t a1)
{
  sub_1002F92A0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002FA848(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1002F9428(a1, v4, v5, v6);
}

uint64_t sub_1002FA8FC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002FA944(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_1002F8D84(a1, v4, v5, v7, v6);
}

ValueMetadata *type metadata accessor for SpotlightDebugSwiftUIVC()
{
  return &type metadata for SpotlightDebugSwiftUIVC;
}

unint64_t sub_1002FAA18()
{
  unint64_t result = qword_1008077F8;
  if (!qword_1008077F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008077F8);
  }
  return result;
}

uint64_t sub_1002FAA7C()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration();
  sub_100035380(v0, qword_10083D330);
  sub_100026A54(v0, (uint64_t)qword_10083D330);
  type metadata accessor for FullScreenUtilities();
  id v1 = [self mainBundle];
  v7._object = (void *)0x8000000100698730;
  v2._uint64_t countAndFlagsBits = 2036427856;
  v2._object = (void *)0xE400000000000000;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0xD000000000000016;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v7);

  sub_1002FAB84(v4._countAndFlagsBits, (uint64_t)v4._object, 0x6C69662E79616C70, 0xE90000000000006CLL);

  return swift_bridgeObjectRelease();
}

void sub_1002FAB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v42[1] = a4;
  uint64_t v42[2] = a3;
  v42[0] = a2;
  uint64_t v48 = a1;
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  CGFloat v46 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007FE5B8);
  __chkstk_darwin(v6 - 8);
  CGFloat v47 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  __chkstk_darwin(v8);
  char v43 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  uint64_t v18 = self;
  id v19 = [v18 systemIndigoColor:v42[0]];
  id v20 = [v19 colorWithAlphaComponent:0.15];

  double v21 = v18;
  UIButton.Configuration.baseBackgroundColor.setter();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v14);
  UIButton.Configuration.cornerStyle.setter();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for UIButton.Configuration.Size.medium(_:), v10);
  UIButton.Configuration.buttonSize.setter();
  id v22 = [v18 systemIndigoColor];
  CGFloat v23 = self;
  id v24 = [v23 configurationWithHierarchicalColor:v22];

  swift_bridgeObjectRetain();
  id v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [self systemImageNamed:v26 withConfiguration:v25];

  id v28 = v27;
  UIButton.Configuration.image.setter();
  UIButton.Configuration.imagePadding.setter();
  UIButton.Configuration.imagePlacement.setter();
  id v29 = [v23 configurationWithScale:2];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, enum case for UIButton.Configuration.TitleAlignment.trailing(_:), v45);
  UIButton.Configuration.titleAlignment.setter();
  sub_100010218(&qword_100802498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v31 = qword_1007F7280;
  swift_bridgeObjectRetain();
  uint64_t v32 = NSFontAttributeName;
  if (v31 != -1) {
    swift_once();
  }
  id v33 = [(id)qword_10083D848 fontDescriptor];
  id v34 = [v33 fontDescriptorWithSymbolicTraits:2];

  if (v34)
  {
    [(id)qword_10083D848 pointSize];
    id v36 = [self fontWithDescriptor:v34 size:v35];
  }
  else
  {
    id v36 = (id)qword_10083D848;
  }
  uint64_t v37 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
  *(void *)(inited + 40) = v36;
  *(void *)(inited + 64) = v37;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  id v38 = NSForegroundColorAttributeName;
  id v39 = [v21 systemIndigoColor];
  *(void *)(inited + 104) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  *(void *)(inited + 80) = v39;
  sub_100396DBC(inited);
  AttributeContainer.init(_:)();
  long long v40 = v47;
  AttributedString.init(_:attributes:)();
  uint64_t v41 = type metadata accessor for AttributedString();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  UIButton.Configuration.attributedTitle.setter();
}

uint64_t sub_1002FB1C4()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration();
  sub_100035380(v0, qword_10083D348);
  sub_100026A54(v0, (uint64_t)qword_10083D348);
  type metadata accessor for FullScreenUtilities();
  id v1 = [self mainBundle];
  v7._object = (void *)0x8000000100698710;
  v2._uint64_t countAndFlagsBits = 0x6573756150;
  v2._object = (void *)0xE500000000000000;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0xD000000000000017;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v7);

  sub_1002FAB84(v4._countAndFlagsBits, (uint64_t)v4._object, 0x69662E6573756170, 0xEA00000000006C6CLL);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FullScreenUtilities()
{
  return self;
}

uint64_t sub_1002FB2F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithSuiteName:v6];

  if (v7)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 objectForKey:v8];

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    sub_1000685B8((uint64_t)v15, (uint64_t)v16);
    if (!v17)
    {
      sub_10001457C((uint64_t)v16, &qword_1007FAD50);
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
LABEL_9:
      sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FC470);
      type metadata accessor for Date();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
    uint64_t v10 = type metadata accessor for Date();
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    v13(v4, v11 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v10) == 1) {
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v4, v10);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v13)(a1, 0, 1, v10);
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FB624@<X0>(uint64_t a1@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithSuiteName:v4];

  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 objectForKey:v6];

    if (v7)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v16, 0, sizeof(v16));
    }
    sub_1000685B8((uint64_t)v16, (uint64_t)v17);
    if (v18)
    {
      if (swift_dynamicCast())
      {
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        PropertyListDecoder.init()();
        sub_1002FCE80(&qword_100807950);
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        sub_100040DD0(v14, v15);
        swift_release();
        uint64_t v12 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56))(a1, v12, 1, started);
      }
    }
    else
    {
      sub_10001457C((uint64_t)v17, &qword_1007FAD50);
    }
    id v8 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 initWithSuiteName:v9];

    if (v10)
    {
      NSString v11 = String._bridgeToObjectiveC()();
      [v10 removeObjectForKey:v11];

      uint64_t v12 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56))(a1, v12, 1, started);
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002FB984(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100807938);
  __chkstk_darwin(v2 - 8);
  NSString v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v6 = *(void *)(started - 8);
  __chkstk_darwin(started);
  id v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001B220(a1, (uint64_t)v4, &qword_100807938);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, started) == 1)
  {
    sub_10001457C((uint64_t)v4, &qword_100807938);
    id v9 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 initWithSuiteName:v10];

    if (v11)
    {
      NSString v12 = String._bridgeToObjectiveC()();
      [v11 removeObjectForKey:v12];

      return 1;
    }
  }
  else
  {
    sub_1002FCB24((uint64_t)v4, (uint64_t)v8);
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    sub_1002FCE80(&qword_100807948);
    uint64_t v13 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    unint64_t v15 = v14;
    swift_release();
    id v16 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 initWithSuiteName:v17];

    if (v18)
    {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      NSString v20 = String._bridgeToObjectiveC()();
      [v18 setObject:isa forKey:v20];
      sub_100040DD0(v13, v15);

      sub_1002FCB88((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetPersistedPrompts);
      return 1;
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002FBD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for StartWritingWidgetPersistedPrompts() + 20);
  char v4 = *(unsigned char *)(v3 + 8);
  __int16 v5 = *(_WORD *)(v3 + 9);
  char v6 = *(unsigned char *)(v3 + 11);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  *(void *)a2 = *(void *)v3;
  *(unsigned char *)(a2 + 8) = v4;
  *(_WORD *)(a2 + 9) = v5;
  *(unsigned char *)(a2 + 11) = v6;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = 1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002FBDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for StartWritingWidgetPersistedPrompts() + 24);
  char v4 = *(unsigned char *)(v3 + 8);
  __int16 v5 = *(_WORD *)(v3 + 9);
  char v6 = *(unsigned char *)(v3 + 11);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  *(void *)a2 = *(void *)v3;
  *(unsigned char *)(a2 + 8) = v4;
  *(_WORD *)(a2 + 9) = v5;
  *(unsigned char *)(a2 + 11) = v6;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = 1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002FBE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for StartWritingWidgetPersistedPrompts() + 28);
  char v4 = *(unsigned char *)(v3 + 8);
  __int16 v5 = *(_WORD *)(v3 + 9);
  char v6 = *(unsigned char *)(v3 + 11);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  *(void *)a2 = *(void *)v3;
  *(unsigned char *)(a2 + 8) = v4;
  *(_WORD *)(a2 + 9) = v5;
  *(unsigned char *)(a2 + 11) = v6;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = 1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002FBEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_100010218(&qword_1008044C0);
  v4[3] = swift_task_alloc();
  uint64_t v5 = sub_100010218(&qword_1008044C8);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v6 = sub_100010218(&qword_1008044D0);
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_1008044D8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 - 8);
  v4[12] = swift_task_alloc();
  return _swift_task_switch(sub_1002FC068, 0, 0);
}

uint64_t sub_1002FC068()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002FC0FC, v2, v1);
}

uint64_t sub_1002FC0FC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  swift_release();
  *uint64_t v1 = 1;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v1, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v3);
  v0[14] = sub_100010218(&qword_100804520);
  AsyncStream.init(_:bufferingPolicy:_:)();
  return _swift_task_switch(sub_1002FC1E8, 0, 0);
}

uint64_t sub_1002FC1E8()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002FC2C4;
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[3];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_1002FC2C4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002FC3C0, 0, 0);
}

uint64_t sub_1002FC3C0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2 + *(int *)(v1 + 48);
    type metadata accessor for WidgetCenter();
    static WidgetCenter.shared.getter();
    dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)();
    swift_release();
    static WidgetCenter.shared.getter();
    dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)();
    swift_release();
    static WidgetCenter.shared.getter();
    v6._uint64_t countAndFlagsBits = 0xD000000000000012;
    v6._object = (void *)0x8000000100698780;
    WidgetCenter.invalidateRelevances(ofKind:)(v6);
    swift_release();
    static WidgetCenter.shared.getter();
    v7._uint64_t countAndFlagsBits = 0xD000000000000012;
    v7._object = (void *)0x80000001006987A0;
    WidgetCenter.invalidateRelevances(ofKind:)(v7);
    swift_release();
    sub_1002FCB88(v5, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[15] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1002FC2C4;
    uint64_t v9 = v0[10];
    uint64_t v10 = v0[3];
    return AsyncStream.Iterator.next(isolation:)(v10, 0, 0, v9);
  }
}

uint64_t type metadata accessor for JournalWidgetBridge()
{
  return self;
}

uint64_t sub_1002FC638(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = type metadata accessor for WidgetFamily();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100807938);
  __chkstk_darwin(v5 - 8);
  Swift::String v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v12 = *(void *)(started - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(started);
  unint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  NSString v17 = (char *)&v33 - v16;
  id v33 = "dge.demoModeStartDate";
  sub_1002FB624((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, started) == 1) {
    return sub_10001457C((uint64_t)v10, &qword_100807938);
  }
  sub_1002FCB24((uint64_t)v10, (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v34, v1);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v19 == enum case for WidgetFamily.systemSmall(_:) || v19 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_1002FCBE8((uint64_t)v17, (uint64_t)v14);
    unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v22 = swift_allocObject();
    sub_1002FCB24((uint64_t)v14, v22 + v21);
    CGFloat v23 = sub_1002FCC50;
    uint64_t v24 = (uint64_t)v7;
    id v25 = 0;
    NSString v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = v22;
  }
  else
  {
    if (v19 == enum case for WidgetFamily.accessoryRectangular(_:))
    {
      sub_1002FCBE8((uint64_t)v17, (uint64_t)v14);
      unint64_t v29 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v30 = swift_allocObject();
      sub_1002FCB24((uint64_t)v14, v30 + v29);
      NSString v26 = sub_1002FCC6C;
      uint64_t v24 = (uint64_t)v7;
      id v25 = 0;
      uint64_t v27 = v30;
    }
    else
    {
      if (v19 != enum case for WidgetFamily.accessoryInline(_:))
      {
        sub_1002FCB88((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetPersistedPrompts);
        return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      sub_1002FCBE8((uint64_t)v17, (uint64_t)v14);
      unint64_t v31 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v32 = swift_allocObject();
      sub_1002FCB24((uint64_t)v14, v32 + v31);
      id v25 = sub_1002FCDE4;
      uint64_t v24 = (uint64_t)v7;
      NSString v26 = 0;
      uint64_t v27 = 0;
    }
    CGFloat v23 = 0;
    uint64_t v28 = 0;
  }
  sub_100505D2C(0, (void (*)(uint64_t *__return_ptr, uint64_t))v25, (void (*)(void *__return_ptr, void))v26, v27, (void (*)(uint64_t *__return_ptr, uint64_t))v23, v28, v24);
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, started);
  sub_1002FB984((uint64_t)v7);
  sub_10001457C((uint64_t)v7, &qword_100807938);
  type metadata accessor for WidgetCenter();
  static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)();
  swift_release();
  return sub_1002FCB88((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetPersistedPrompts);
}

uint64_t sub_1002FCB24(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_1002FCB88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002FCBE8(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_1002FCC50()
{
  return sub_1002FCDFC((uint64_t (*)(uint64_t))sub_1002FBE30);
}

uint64_t sub_1002FCC6C()
{
  return sub_1002FCDFC((uint64_t (*)(uint64_t))sub_1002FBDAC);
}

uint64_t sub_1002FCC88()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StartWritingWidgetPersistedPrompts() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = sub_100010218(&qword_100807940);
  v4(v2 + *(int *)(v5 + 36), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002FCDE4()
{
  return sub_1002FCDFC((uint64_t (*)(uint64_t))sub_1002FBD28);
}

uint64_t sub_1002FCDFC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for StartWritingWidgetPersistedPrompts() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1002FCE80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StartWritingWidgetPersistedPrompts();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002FCEC4(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v4, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FC470);
    id v9 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 initWithSuiteName:v10];

    if (v11)
    {
      NSString v12 = String._bridgeToObjectiveC()();
      [v11 removeObjectForKey:v12];

LABEL_6:
      type metadata accessor for WidgetCenter();
      static WidgetCenter.shared.getter();
      dispatch thunk of WidgetCenter.reloadAllTimelines()();
      swift_release();
      return sub_10001457C(a1, (uint64_t *)&unk_1007FC470);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v13 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v13 initWithSuiteName:v14];

    if (v15)
    {
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      NSString v17 = String._bridgeToObjectiveC()();
      [v15 setObject:isa forKey:v17];

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_6;
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1002FD1F4()
{
  unint64_t result = qword_100807958;
  if (!qword_100807958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807958);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CAGradientPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002FD314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CAGradientPoint()
{
  return &type metadata for CAGradientPoint;
}

uint64_t sub_1002FD34C(char a1, char a2, unint64_t a3, void *a4)
{
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v8 frame];
  [v8 setFrame:0.0, 0.0];
  [v8 setStartPoint:dbl_1006E29B8[a1], dbl_1006E2A00[a1]];
  [v8 setEndPoint:dbl_1006E29B8[a2], dbl_1006E2A00[a2]];
  sub_100091570(a3);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setColors:isa];

  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease_n();
    if (v10 < 0)
    {
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  if (v10)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    for (uint64_t i = 0; i != v10; ++i)
    {
      [objc_allocWithZone((Class)NSNumber) initWithInteger:i];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  sub_1002FD59C();
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setLocations:v12];

  [v8 setType:a4];
  return (uint64_t)v8;
}

unint64_t sub_1002FD59C()
{
  unint64_t result = qword_1007FEB30;
  if (!qword_1007FEB30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007FEB30);
  }
  return result;
}

uint64_t sub_1002FD5DC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = a1;
  *(void *)(a2 + 8) = 0x4020000000000000;
  sub_100010218(&qword_100807968);
  State.init(wrappedValue:)();
  *(void *)(a2 + 16) = v10;
  *(unsigned char *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  type metadata accessor for InsightsDataManager(0);
  sub_100303A94((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  *(void *)(a2 + 40) = Environment.init<A>(_:)();
  *(unsigned char *)(a2 + 48) = v3 & 1;
  unsigned int v4 = (int *)type metadata accessor for InsightsView();
  uint64_t v5 = (uint64_t *)(a2 + v4[8]);
  *uint64_t v5 = swift_getKeyPath();
  sub_100010218((uint64_t *)&unk_1008156C0);
  swift_storeEnumTagMultiPayload();
  unsigned int v6 = (uint64_t *)(a2 + v4[9]);
  uint64_t *v6 = swift_getKeyPath();
  sub_100010218(&qword_100807970);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = v4[10];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10083D3C0;
  uint64_t result = AppStorage.init<A>(wrappedValue:_:store:)();
  *(void *)(a2 + v7) = result;
  return result;
}

uint64_t sub_1002FD7A0()
{
  sub_10012BBF0();
  EnvironmentValues.subscript.getter();
  uint64_t Strong = swift_weakLoadStrong();
  sub_10012BC44((uint64_t)v2);
  return Strong;
}

uint64_t type metadata accessor for InsightsView()
{
  uint64_t result = qword_1008079E8;
  if (!qword_1008079E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002FD844@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v118 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v118);
  uint64_t v117 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v116 = (uint64_t)&v88 - v5;
  uint64_t v115 = type metadata accessor for TaskPriority();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  id v113 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InsightsView();
  uint64_t v106 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v107 = v8;
  uint64_t v109 = (uint64_t)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorResource();
  *(void *)&long long v98 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for ContentMarginPlacement();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  unint64_t v91 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100807AA0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100010218(&qword_100807A98);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  id v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100010218(&qword_100807AD8);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100010218(&qword_100807A90);
  __chkstk_darwin(v94);
  uint64_t v99 = (uint64_t (*)())((char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v101 = (uint64_t (*)(void))sub_100010218(&qword_100807A70);
  __chkstk_darwin(v101);
  uint64_t v100 = (uint64_t)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100010218(&qword_100807AE0);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  Swift::Int v120 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100010218(&qword_100807A68);
  __chkstk_darwin(v102);
  long long v105 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100010218(&qword_100807A50);
  __chkstk_darwin(v121);
  uint64_t v111 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100010218(&qword_100807A48);
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v123 = a1;
  static Axis.Set.vertical.getter();
  sub_100010218(&qword_100807AE8);
  sub_10030342C();
  ScrollView.init(_:showsIndicators:content:)();
  Swift::String v122 = a1;
  if (*a1 == 8) {
    static UnitPoint.bottom.getter();
  }
  uint64_t v26 = sub_100014488(&qword_100807AA8, &qword_100807AA0);
  View.defaultScrollAnchor(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  unsigned __int8 v27 = static Edge.Set.horizontal.getter();
  unsigned __int8 v28 = static Edge.Set.bottom.getter();
  Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v27) {
    Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v28) {
    Edge.Set.init(rawValue:)();
  }
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  unint64_t v29 = v91;
  static ContentMarginPlacement.scrollContent.getter();
  uint64_t v128 = v13;
  *(void *)&long long v129 = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v95;
  uint64_t v31 = v90;
  View.contentMargins(_:_:for:)();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v29, v93);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v18, v31);
  sub_100010218(&qword_100800168);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1006D7C30;
  if (qword_1007F8000 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_100026A54(v9, (uint64_t)qword_10083F120);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  v34(v11, v33, v9);
  *(void *)(v32 + 32) = Color.init(_:)();
  if (qword_1007F7FF8 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_100026A54(v9, (uint64_t)qword_10083F108);
  v34(v11, v35, v9);
  *(void *)(v32 + 40) = Color.init(_:)();
  if (qword_1007F7FF0 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_100026A54(v9, (uint64_t)qword_10083F0F0);
  v34(v11, v36, v9);
  *(void *)(v32 + 48) = Color.init(_:)();
  uint64_t v128 = v32;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v37 = v128;
  long long v98 = v129;
  uint64_t v38 = v130;
  uint64_t v39 = v131;
  swift_bridgeObjectRelease();
  char v40 = static Edge.Set.all.getter();
  uint64_t v41 = v96;
  unint64_t v42 = v99;
  uint64_t v43 = v97;
  (*(void (**)(uint64_t (*)(), char *, uint64_t))(v96 + 16))(v99, v30, v97);
  uint64_t v44 = (char *)v42 + *(int *)(v94 + 36);
  *(void *)uint64_t v44 = v37;
  *(_OWORD *)(v44 + 8) = v98;
  *((void *)v44 + 3) = v38;
  *((void *)v44 + 4) = v39;
  v44[40] = v40;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v43);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v45 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v47 = v46;
  LOBYTE(v43) = v48;
  uint64_t v50 = v49;
  uint64_t v51 = v100;
  sub_10001B220((uint64_t)v42, v100, &qword_100807A90);
  uint64_t v52 = v51 + *((int *)v101 + 9);
  *(void *)uint64_t v52 = v45;
  *(void *)(v52 + 8) = v47;
  *(unsigned char *)(v52 + 16) = v43 & 1;
  *(void *)(v52 + 24) = v50;
  sub_10001457C((uint64_t)v42, &qword_100807A90);
  sub_100010218(&qword_100807A78);
  sub_100303220();
  uint64_t v53 = sub_100014440(&qword_100807AC8);
  uint64_t v54 = sub_100014488(&qword_100807AD0, &qword_100807AC8);
  uint64_t v126 = v53;
  uint64_t v127 = v54;
  swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  sub_10001457C(v51, &qword_100807A70);
  Swift::String v101 = (uint64_t (*)(void))type metadata accessor for InsightsView;
  uint64_t v55 = v109;
  sub_1003041C4((uint64_t)v122, v109, (uint64_t (*)(void))type metadata accessor for InsightsView);
  uint64_t v56 = *(unsigned __int8 *)(v106 + 80);
  v107 += (v56 + 16) & ~v56;
  uint64_t v57 = (v56 + 16) & ~v56;
  uint64_t v106 = v57;
  uint64_t v100 = v56 | 7;
  uint64_t v58 = swift_allocObject();
  uint64_t v99 = type metadata accessor for InsightsView;
  sub_10030422C(v55, v58 + v57, (uint64_t (*)(void))type metadata accessor for InsightsView);
  uint64_t v59 = v113;
  static TaskPriority.userInitiated.getter();
  uint64_t v60 = (uint64_t)v105;
  uint64_t v61 = &v105[*(int *)(v102 + 36)];
  uint64_t v102 = type metadata accessor for _TaskModifier();
  uint64_t v62 = &v61[*(int *)(v102 + 20)];
  uint64_t v63 = v114;
  *(void *)&long long v98 = *(void *)(v114 + 16);
  uint64_t v64 = v115;
  ((void (*)(char *, char *, uint64_t))v98)(v62, v59, v115);
  *(void *)uint64_t v61 = &unk_100807B20;
  *((void *)v61 + 1) = v58;
  uint64_t v65 = v103;
  uint64_t v66 = v120;
  uint64_t v67 = v104;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v60, v120, v104);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
  v68(v59, v64);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  uint64_t v69 = (uint64_t)v122;
  sub_1003041C4((uint64_t)v122, v55, v101);
  uint64_t v70 = swift_allocObject();
  sub_10030422C(v55, v70 + v106, (uint64_t (*)(void))v99);
  static TaskPriority.userInitiated.getter();
  uint64_t v71 = (uint64_t)v111;
  uint64_t v72 = &v111[*(int *)(v121 + 36)];
  ((void (*)(char *, char *, uint64_t))v98)(&v72[*(int *)(v102 + 20)], v59, v64);
  *(void *)uint64_t v72 = &unk_100807B30;
  *((void *)v72 + 1) = v70;
  sub_10001B220(v60, v71, &qword_100807A68);
  v68(v59, v64);
  sub_10001457C(v60, &qword_100807A68);
  LOBYTE(v72) = *(unsigned char *)(v69 + 48);
  uint64_t v73 = swift_retain();
  uint64_t v74 = sub_100666C70(v73, (char)v72);
  swift_release();
  swift_getKeyPath();
  uint64_t v126 = v74;
  sub_100303A94((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v75 = v74 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  uint64_t v76 = v75;
  uint64_t v77 = v116;
  sub_1003041C4(v76, v116, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  uint64_t v78 = type metadata accessor for StreakSummary();
  uint64_t v79 = *(void *)(v77 + *(int *)(v78 + 28));
  sub_100304294(v77, type metadata accessor for InsightsDataManager.Streaks);
  LOBYTE(v69) = *(unsigned char *)(v69 + 48);
  uint64_t v80 = swift_retain();
  uint64_t v81 = sub_100666C70(v80, v69);
  swift_release();
  swift_getKeyPath();
  uint64_t v125 = v81;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v82 = v81 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  uint64_t v83 = v117;
  sub_1003041C4(v82, v117, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  uint64_t v84 = *(void *)(v83 + *(int *)(v118 + 20) + *(int *)(v78 + 28));
  sub_100304294(v83, type metadata accessor for InsightsDataManager.Streaks);
  if (v84 <= v79) {
    uint64_t v85 = v79;
  }
  else {
    uint64_t v85 = v84;
  }
  uint64_t v124 = v85;
  sub_100303010();
  id v86 = v108;
  View.onChange<A>(of:initial:_:)();
  sub_10001457C(v71, &qword_100807A50);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v110 + 32))(v119, v86, v112);
}

uint64_t sub_1002FEA20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100807B50);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100807978);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - v14;
  __chkstk_darwin(v16);
  id v18 = (char *)&v33 - v17;
  type metadata accessor for InsightsView();
  uint64_t v36 = a1;
  sub_1006672D4((uint64_t)v18);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v15, enum case for UserInterfaceSizeClass.regular(_:), v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10001B220((uint64_t)v18, (uint64_t)v9, &qword_100807978);
  sub_10001B220((uint64_t)v15, v19, &qword_100807978);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) != 1)
  {
    sub_10001B220((uint64_t)v9, (uint64_t)v12, &qword_100807978);
    if (v20(v19, 1, v3) != 1)
    {
      uint64_t v21 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v19, v3);
      sub_100303A94(&qword_100807B60, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v21, v3);
      sub_10001457C((uint64_t)v15, &qword_100807978);
      sub_10001457C((uint64_t)v18, &qword_100807978);
      v23(v12, v3);
      sub_10001457C((uint64_t)v9, &qword_100807978);
      if (v22) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v25 = v36;
      uint64_t v28 = *(void *)(v36 + 8);
      uint64_t v37 = static HorizontalAlignment.center.getter();
      uint64_t v38 = v28;
      LOBYTE(v39) = 0;
      sub_1001796A4();
      goto LABEL_10;
    }
    sub_10001457C((uint64_t)v15, &qword_100807978);
    sub_10001457C((uint64_t)v18, &qword_100807978);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
LABEL_6:
    sub_10001457C((uint64_t)v9, &qword_100807B50);
    goto LABEL_9;
  }
  sub_10001457C((uint64_t)v15, &qword_100807978);
  sub_10001457C((uint64_t)v18, &qword_100807978);
  if (v20(v19, 1, v3) != 1) {
    goto LABEL_6;
  }
  sub_10001457C((uint64_t)v9, &qword_100807978);
LABEL_8:
  uint64_t v24 = static Alignment.topLeading.getter();
  uint64_t v25 = v36;
  uint64_t v26 = *(void *)(v36 + 8);
  uint64_t v37 = v24;
  uint64_t v38 = v27;
  uint64_t v39 = v26;
  char v40 = 0;
  uint64_t v41 = v26;
  char v42 = 0;
  sub_100303A40();
LABEL_10:
  uint64_t v29 = AnyLayout.init<A>(_:)();
  uint64_t v30 = v35;
  uint64_t *v35 = v29;
  uint64_t v31 = sub_100010218(&qword_100807AE8);
  return sub_1002FEE98(v25, (uint64_t)v30 + *(int *)(v31 + 44));
}

uint64_t sub_1002FEE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v109 = sub_100010218((uint64_t *)&unk_1007FF070);
  __chkstk_darwin(v109);
  uint64_t v108 = (uint64_t)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v107 = (char *)&v86 - v5;
  uint64_t v105 = type metadata accessor for InsightsCalendarView(0);
  __chkstk_darwin(v105);
  uint64_t v106 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100010218(&qword_100807B68);
  __chkstk_darwin(v104);
  uint64_t v111 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v110 = (uint64_t *)((char *)&v86 - v9);
  uint64_t v10 = type metadata accessor for ColorResource();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v100 = v10;
  uint64_t v101 = v11;
  __chkstk_darwin(v10);
  uint64_t v99 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100010218(&qword_1007FF230);
  __chkstk_darwin(v89);
  uint64_t v88 = (uint64_t *)((char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for InsightsView();
  Swift::String v87 = *(void (**)(char *, uint64_t, uint64_t))(v14 - 8);
  uint64_t v15 = *((void *)v87 + 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = sub_100010218(&qword_100807B70);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100010218(&qword_100807B78);
  __chkstk_darwin(v94);
  uint64_t v95 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100010218(&qword_100807B80);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  unint64_t v91 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100010218(&qword_100807B88);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v90 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100010218(&qword_100807B90);
  uint64_t v23 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v96 = (uint64_t)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100010218(&qword_100807B98);
  __chkstk_darwin(v25 - 8);
  uint64_t v103 = (uint64_t)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v86 - v28;
  char v30 = *(unsigned char *)(a1 + 48);
  uint64_t v31 = swift_retain();
  sub_100666C70(v31, v30);
  swift_release();
  char v32 = sub_10046AE60();
  swift_release();
  id v113 = v29;
  if ((v32 & 1) != 0 || *(unsigned char *)a1 == 8)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v29, 1, 1, v102);
  }
  else
  {
    char v33 = *(unsigned char *)(a1 + 24);
    uint64_t v34 = *(void *)(a1 + 32);
    uint64_t v114 = *(void *)(a1 + 16);
    LOBYTE(v115) = v33;
    uint64_t v116 = v34;
    sub_100010218(&qword_100807B38);
    State.wrappedValue.getter();
    if (v118)
    {
      uint64_t v35 = 1;
      uint64_t v36 = v98;
      uint64_t v37 = v96;
    }
    else
    {
      BOOL v38 = v117 == 1;
      LOBYTE(v114) = v117 == 1;
      sub_1003041C4(a1, (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for InsightsView);
      unint64_t v39 = (*((unsigned __int8 *)v87 + 80) + 17) & ~(unint64_t)*((unsigned __int8 *)v87 + 80);
      uint64_t v40 = swift_allocObject();
      *(unsigned char *)(v40 + 16) = v38;
      sub_10030422C((uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v40 + v39, (uint64_t (*)(void))type metadata accessor for InsightsView);
      sub_1001E0F50();
      TipView.init(_:arrowEdge:action:)();
      uint64_t v41 = static Color.secondary.getter();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v43 = v95;
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v95, v19, v16);
      uint64_t v44 = (uint64_t *)&v43[*(int *)(v94 + 36)];
      *uint64_t v44 = KeyPath;
      v44[1] = v41;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      if (qword_1007F7FA8 != -1) {
        swift_once();
      }
      uint64_t v45 = v100;
      uint64_t v46 = sub_100026A54(v100, (uint64_t)qword_10083F018);
      uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
      v101 += 16;
      Swift::String v87 = v47;
      v47(v99, v46, v45);
      uint64_t v48 = Color.init(_:)();
      uint64_t v49 = v89;
      uint64_t v50 = v88;
      uint64_t v51 = (char *)v88 + *(int *)(v89 + 36);
      uint64_t v52 = enum case for BlendMode.normal(_:);
      uint64_t v53 = type metadata accessor for BlendMode();
      uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104);
      v54(v51, v52, v53);
      v54((char *)v50 + *(int *)(v49 + 40), enum case for BlendMode.plusLighter(_:), v53);
      *uint64_t v50 = v48;
      sub_100014488((unint64_t *)&unk_100802710, &qword_1007FF230);
      uint64_t v114 = AnyShapeStyle.init<A>(_:)();
      sub_100303DF8();
      uint64_t v55 = v91;
      uint64_t v56 = (uint64_t)v95;
      View.tipBackground<A>(_:)();
      swift_release();
      sub_10001457C(v56, &qword_100807B78);
      if (qword_1007F7458 != -1) {
        swift_once();
      }
      uint64_t v57 = qword_10083DA68;
      uint64_t v36 = v98;
      if (qword_1007F7FB0 != -1) {
        swift_once();
      }
      uint64_t v58 = v100;
      uint64_t v59 = sub_100026A54(v100, (uint64_t)qword_10083F030);
      v87(v99, v59, v58);
      uint64_t v60 = Color.init(_:)();
      if (qword_1007F7460 != -1) {
        swift_once();
      }
      uint64_t v61 = qword_10083DA70;
      uint64_t v62 = v92;
      uint64_t v63 = (uint64_t)v90;
      uint64_t v64 = v93;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v90, v55, v93);
      uint64_t v65 = (uint64_t *)(v63 + *(int *)(v36 + 36));
      *uint64_t v65 = v60;
      v65[1] = v57;
      v65[2] = 0;
      v65[3] = v61;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v64);
      uint64_t v37 = v96;
      sub_10002C4EC(v63, v96, &qword_100807B88);
      uint64_t v35 = 0;
      uint64_t v29 = v113;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v37, v35, 1, v36);
    sub_10002C4EC(v37, (uint64_t)v29, &qword_100807B90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v102);
  }
  LOBYTE(v117) = *(unsigned char *)a1;
  sub_100010218(&qword_100807BA0);
  State.init(wrappedValue:)();
  LODWORD(v102) = v114;
  uint64_t v66 = v115;
  uint64_t v67 = swift_getKeyPath();
  type metadata accessor for InsightsDataManager(0);
  sub_100303A94((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  uint64_t v68 = Environment.init<A>(_:)();
  LODWORD(v101) = v69;
  uint64_t v70 = (uint64_t)v110;
  *uint64_t v110 = 0;
  *(unsigned char *)(v70 + 8) = 1;
  uint64_t v71 = v70 + *(int *)(v104 + 36);
  char v72 = *(unsigned char *)(a1 + 48);
  uint64_t v73 = swift_retain();
  uint64_t v74 = sub_100666C70(v73, v72);
  swift_release();
  swift_getKeyPath();
  uint64_t v114 = v74;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v75 = v74 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
  swift_beginAccess();
  uint64_t v76 = v106;
  sub_1003041C4(v75, v106, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  swift_release();
  uint64_t v77 = type metadata accessor for DateComponents();
  uint64_t v78 = (uint64_t)v107;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v107, 1, 1, v77);
  sub_10001B220(v78, v108, (uint64_t *)&unk_1007FF070);
  State.init(wrappedValue:)();
  sub_10001457C(v78, (uint64_t *)&unk_1007FF070);
  sub_10030422C(v76, v71, type metadata accessor for InsightsCalendarView);
  uint64_t v79 = (uint64_t)v113;
  uint64_t v80 = v103;
  sub_10001B220((uint64_t)v113, v103, &qword_100807B98);
  uint64_t v81 = v111;
  sub_10001B220(v70, v111, &qword_100807B68);
  uint64_t v82 = v112;
  sub_10001B220(v80, v112, &qword_100807B98);
  uint64_t v83 = sub_100010218(&qword_100807BA8);
  uint64_t v84 = v82 + *(int *)(v83 + 48);
  *(void *)uint64_t v84 = 0;
  *(unsigned char *)(v84 + 8) = 1;
  *(unsigned char *)(v84 + 16) = v102;
  *(void *)(v84 + 24) = v66;
  *(void *)(v84 + 32) = v67;
  *(unsigned char *)(v84 + 40) = 0;
  *(void *)(v84 + 48) = v68;
  *(unsigned char *)(v84 + 56) = v101 & 1;
  *(void *)(v84 + 64) = 0x4024000000000000;
  sub_10001B220(v81, v82 + *(int *)(v83 + 64), &qword_100807B68);
  swift_retain();
  sub_100026CCC(v67, 0);
  swift_retain();
  sub_10001457C(v70, &qword_100807B68);
  sub_10001457C(v79, &qword_100807B98);
  sub_10001457C(v81, &qword_100807B68);
  swift_release();
  sub_100026DF8(v67, 0);
  swift_release();
  return sub_10001457C(v80, &qword_100807B98);
}

uint64_t sub_1002FFCC0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for InsightsView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1003041C4(a3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for InsightsView);
  type metadata accessor for MainActor();
  uint64_t v13 = static MainActor.shared.getter();
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v15 + 32) = a2;
  sub_10030422C((uint64_t)v8, v15 + v14, (uint64_t (*)(void))type metadata accessor for InsightsView);
  sub_1005D74B4((uint64_t)v11, (uint64_t)&unk_100807BC8, v15);
  return swift_release();
}

uint64_t sub_1002FFE9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 296) = a5;
  *(unsigned char *)(v5 + 499) = a4;
  *(void *)(v5 + 304) = type metadata accessor for StreakSummary();
  *(void *)(v5 + 312) = swift_task_alloc();
  *(void *)(v5 + 320) = swift_task_alloc();
  *(void *)(v5 + 328) = type metadata accessor for InsightsDataManager.Streaks(0);
  *(void *)(v5 + 336) = swift_task_alloc();
  *(void *)(v5 + 344) = swift_task_alloc();
  *(void *)(v5 + 352) = swift_task_alloc();
  *(void *)(v5 + 360) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  *(void *)(v5 + 368) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OpenURLAction();
  *(void *)(v5 + 376) = v6;
  *(void *)(v5 + 384) = *(void *)(v6 - 8);
  *(void *)(v5 + 392) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Tips.InvalidationReason();
  *(void *)(v5 + 400) = v7;
  *(void *)(v5 + 408) = *(void *)(v7 - 8);
  *(void *)(v5 + 416) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 424) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 432) = v9;
  *(void *)(v5 + 440) = v8;
  return _swift_task_switch(sub_1003000B8, v9, v8);
}

uint64_t sub_1003000B8()
{
  if (qword_1007F6BF8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 448) = qword_10083D1E8;
  return _swift_task_switch(sub_100300154, 0, 0);
}

uint64_t sub_100300154()
{
  uint64_t v1 = *(void **)(v0[56] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[57] = v1;
  v0[2] = v0;
  v0[7] = v0 + 34;
  v0[3] = sub_100300260;
  uint64_t v2 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_100232BB4;
  v0[26] = &unk_1007A4F08;
  v0[27] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100300260()
{
  return _swift_task_switch(sub_100300340, 0, 0);
}

uint64_t sub_100300340()
{
  uint64_t v1 = (void *)v0[34];
  id v2 = [v1 authorizationStatus];

  if (v2)
  {
    v0[59] = v2;
    uint64_t v3 = v0[54];
    uint64_t v4 = v0[55];
    return _swift_task_switch(sub_100300654, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)v0[57];
    v0[10] = v0;
    v0[15] = (char *)v0 + 497;
    v0[11] = sub_10030049C;
    uint64_t v6 = swift_continuation_init();
    v0[18] = _NSConcreteStackBlock;
    v0[19] = 0x40000000;
    v0[20] = sub_100232C08;
    v0[21] = &unk_1007A4F20;
    v0[22] = v6;
    [v5 requestAuthorizationWithOptions:6 completionHandler:v0 + 18];
    return _swift_continuation_await(v0 + 10);
  }
}

uint64_t sub_10030049C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 464) = v1;
  if (v1) {
    id v2 = sub_100300BF0;
  }
  else {
    id v2 = sub_1003005AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003005AC()
{
  int v1 = *(unsigned __int8 *)(v0 + 497);
  id v2 = *(void **)(*(void *)(v0 + 448) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
  [v2 setIsJournalingScheduleEnabled:0];
  [v2 setIsStreakReminderEnabled:0];
  uint64_t v3 = 1;
  if (v1) {
    uint64_t v3 = 2;
  }
  *(void *)(v0 + 472) = v3;
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v5 = *(void *)(v0 + 440);
  return _swift_task_switch(sub_100300654, v4, v5);
}

uint64_t sub_100300654()
{
  unint64_t v1 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 400);
  *(unsigned char *)(v0 + 498) = *(unsigned char *)(v0 + 499);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for Tips.InvalidationReason.actionPerformed(_:), v4);
  sub_1001E0F50();
  Tip.invalidate(reason:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v1 > 1)
  {
    uint64_t v15 = *(void *)(v0 + 352);
    uint64_t v16 = *(void *)(v0 + 360);
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v36 = *(void *)(v0 + 304);
    uint64_t v37 = *(void *)(v0 + 344);
    char v18 = *(unsigned char *)(*(void *)(v0 + 296) + 48);
    uint64_t v19 = swift_retain();
    char v38 = v18;
    uint64_t v20 = sub_100666C70(v19, v18);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 280) = v20;
    sub_100303A94((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v21 = v20 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    sub_1003041C4(v21, v16, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    sub_1003041C4(v16, v15, type metadata accessor for InsightsDataManager.Streaks);
    uint64_t v22 = *(void *)(v15 + *(int *)(v17 + 20) + *(int *)(v36 + 28));
    sub_10030422C(v15, v37, type metadata accessor for InsightsDataManager.Streaks);
    uint64_t v23 = *(void *)(v0 + 344);
    if (v22 >= 2)
    {
      uint64_t v25 = *(void *)(v23 + *(int *)(v36 + 28));
      sub_100304294(v23, type metadata accessor for InsightsDataManager.Streaks);
      char v24 = v25 < 3;
    }
    else
    {
      sub_100304294(v23, type metadata accessor for InsightsDataManager.Streaks);
      char v24 = 0;
    }
    uint64_t v26 = *(void *)(v0 + 336);
    sub_100304294(*(void *)(v0 + 360), type metadata accessor for InsightsDataManager.Streaks);
    uint64_t v27 = swift_retain();
    uint64_t v28 = sub_100666C70(v27, v38);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 288) = v28;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v29 = v28 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    sub_1003041C4(v29, v26, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    uint64_t v30 = *(void *)(v0 + 336);
    uint64_t v31 = v30;
    if (v24) {
      uint64_t v31 = v30 + *(int *)(v17 + 20);
    }
    uint64_t v33 = *(void *)(v0 + 312);
    uint64_t v32 = *(void *)(v0 + 320);
    sub_1003041C4(v31, v33, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    sub_10030422C(v33, v32, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    sub_100304294(v30, type metadata accessor for InsightsDataManager.Streaks);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_100300C74;
    uint64_t v35 = *(void *)(v0 + 320);
    return sub_100234478(v35, v24);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 392);
    uint64_t v6 = *(void *)(v0 + 368);
    swift_release();
    type metadata accessor for InsightsView();
    sub_10066730C(v5);
    URL.init(string:)();
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = *(void *)(v0 + 384);
      uint64_t v10 = *(void *)(v0 + 392);
      uint64_t v13 = *(void *)(v0 + 368);
      uint64_t v12 = *(void *)(v0 + 376);
      OpenURLAction.callAsFunction(_:)();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
      return v14();
    }
  }
  return result;
}

uint64_t sub_100300BF0()
{
  swift_willThrow();
  swift_willThrow();
  swift_errorRelease();
  v0[59] = 0;
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[55];
  return _swift_task_switch(sub_100300654, v1, v2);
}

uint64_t sub_100300C74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 440);
  uint64_t v4 = *(void *)(v2 + 432);
  if (v0) {
    uint64_t v5 = sub_100300ED8;
  }
  else {
    uint64_t v5 = sub_100300DB0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100300DB0()
{
  uint64_t v1 = *(void *)(v0 + 320);
  swift_release();
  type metadata accessor for InsightsView();
  *(unsigned char *)(v0 + 496) = 1;
  AppStorage.wrappedValue.setter();
  sub_100304294(v1, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100300ED8()
{
  uint64_t v1 = *(void *)(v0 + 320);
  swift_release();
  sub_100304294(v1, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100300FD4()
{
  uint64_t v0 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100010218(&qword_100807AC8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.topBarTrailing.getter();
  sub_100010218(&qword_100807B40);
  sub_100014488(&qword_100807B48, &qword_100807B40);
  ToolbarItem<>.init(placement:content:)();
  sub_100014488(&qword_100807AD0, &qword_100807AC8);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100301190@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_100010218((uint64_t *)&unk_1008156D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (char *)a1 + *(int *)(sub_100010218(&qword_100807B40) + 36);
  *(void *)uint64_t v2 = swift_getKeyPath();
  unsigned char v2[8] = 0;
  return Label.init(title:icon:)();
}

uint64_t sub_10030126C(uint64_t a1)
{
  v1[2] = a1;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100301304, v3, v2);
}

uint64_t sub_100301304()
{
  char v1 = *(unsigned char *)(v0[2] + 48);
  uint64_t v2 = swift_retain();
  v0[6] = sub_100666C70(v2, v1);
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1003013C0;
  return sub_100145B40();
}

uint64_t sub_1003013C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10010AEB4, v3, v2);
}

uint64_t sub_100301504(uint64_t a1)
{
  v1[17] = a1;
  type metadata accessor for MainActor();
  v1[18] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[19] = v3;
  v1[20] = v2;
  return _swift_task_switch(sub_10030159C, v3, v2);
}

uint64_t sub_10030159C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 16);
  char v3 = *(unsigned char *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)(v0 + 80) = v2;
  *(unsigned char *)(v0 + 88) = v3;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 168) = sub_100010218(&qword_100807B38);
  State.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    if (qword_1007F6BF8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 176) = qword_10083D1E8;
    return _swift_task_switch(sub_1003016B8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1003016B8()
{
  uint64_t v1 = *(void **)(v0[22] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1003017C0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100232BB4;
  v0[13] = &unk_1007A4EA0;
  v0[14] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003017C0()
{
  return _swift_task_switch(sub_1003018A0, 0, 0);
}

uint64_t sub_1003018A0()
{
  uint64_t v1 = (void *)v0[15];
  v0[23] = [v1 authorizationStatus];

  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  return _swift_task_switch(sub_100301918, v2, v3);
}

uint64_t sub_100301918()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 136);
  swift_release();
  char v3 = *(unsigned char *)(v2 + 24);
  uint64_t v4 = *(void *)(v2 + 32);
  *(void *)(v0 + 80) = *(void *)(v2 + 16);
  *(unsigned char *)(v0 + 88) = v3;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 120) = v1;
  *(unsigned char *)(v0 + 128) = 0;
  State.wrappedValue.setter();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1003019B8()
{
  if (qword_1007F6B48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100010218(qword_100802748);
  sub_100026A54(v0, (uint64_t)qword_10083D108);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100301A94()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100301AB8(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100807978);
  __chkstk_darwin(v2 - 8);
  sub_10001B220(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100807978);
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_100301B50()
{
  return EnvironmentValues._openSensitiveURL.getter();
}

uint64_t sub_100301B74()
{
  return EnvironmentValues._openSensitiveURL.getter();
}

uint64_t sub_100301B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100303540(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues._openSensitiveURL.setter);
}

uint64_t sub_100301BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100303540(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues._openSensitiveURL.setter);
}

uint64_t sub_100301C04()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_100301CBC()
{
  return swift_weakInit();
}

uint64_t sub_100301CCC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1007F6DA8 != -1) {
    swift_once();
  }

  return sub_100302FF8((uint64_t)&unk_100807960, a1);
}

uint64_t sub_100301D3C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    *(unsigned char *)(v4 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)(v4 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    *(void *)(v4 + 32) = v8;
    *(void *)(v4 + 40) = v9;
    swift_retain();
    swift_retain();
    sub_100010218((uint64_t *)&unk_1008156C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_100010218(&qword_100807978);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[9];
    char v18 = (void *)(v4 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *char v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)(v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_100301FDC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100010218((uint64_t *)&unk_1008156C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100302160(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  swift_retain();
  swift_retain();
  sub_100010218((uint64_t *)&unk_1008156C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100010218(&qword_100807978);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  return a1;
}

uint64_t sub_1003023B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  char v7 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_10001457C(a1 + v8, (uint64_t *)&unk_1008156C0);
    sub_100010218((uint64_t *)&unk_1008156C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100010218(&qword_100807978);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[9];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_10001457C(a1 + v14, &qword_100807970);
    sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100302660(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1008156C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = sub_100010218(&qword_100807978);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1003028BC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  char v6 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_10001457C(a1 + v7, (uint64_t *)&unk_1008156C0);
    uint64_t v10 = sub_100010218((uint64_t *)&unk_1008156C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_100010218(&qword_100807978);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v14 = a3[9];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_10001457C(a1 + v14, &qword_100807970);
    uint64_t v17 = sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_100302B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100302B7C);
}

uint64_t sub_100302B7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218(&qword_100807980);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[8];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_100010218(&qword_100807988);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[9];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[10]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100302C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100302CA8);
}

uint64_t sub_100302CA8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100010218(&qword_100807980);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
  }
  else
  {
    uint64_t result = sub_100010218(&qword_100807988);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[10]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[9];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_100302DBC()
{
  sub_100302EBC();
  if (v0 <= 0x3F)
  {
    sub_100302F18();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100302EBC()
{
  if (!qword_1008079F8)
  {
    sub_100014440(&qword_100807978);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1008079F8);
    }
  }
}

void sub_100302F18()
{
  if (!qword_100807A00)
  {
    type metadata accessor for OpenURLAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100807A00);
    }
  }
}

uint64_t _s24NavigationCoordinatorKeyVwcp()
{
  return _swift_weakCopyInit();
}

uint64_t _s24NavigationCoordinatorKeyVwca()
{
  return _swift_weakCopyAssign();
}

uint64_t _s24NavigationCoordinatorKeyVwtk()
{
  return _swift_weakTakeInit();
}

uint64_t _s24NavigationCoordinatorKeyVwta()
{
  return _swift_weakTakeAssign();
}

uint64_t _s24NavigationCoordinatorKeyVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s24NavigationCoordinatorKeyVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *_s24NavigationCoordinatorKeyVMa()
{
  return &_s24NavigationCoordinatorKeyVN;
}

uint64_t sub_100302FDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100302FF8(uint64_t a1, uint64_t a2)
{
  return _swift_weakCopyInit(a2, a1);
}

uint64_t sub_100303008@<X0>(uint64_t a1@<X8>)
{
  return sub_1002FD844(*(unsigned char **)(v1 + 16), a1);
}

unint64_t sub_100303010()
{
  unint64_t result = qword_100807A58;
  if (!qword_100807A58)
  {
    sub_100014440(&qword_100807A50);
    sub_1003030BC();
    sub_100303A94(&qword_1007FCE30, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807A58);
  }
  return result;
}

unint64_t sub_1003030BC()
{
  unint64_t result = qword_100807A60;
  if (!qword_100807A60)
  {
    sub_100014440(&qword_100807A68);
    sub_100014440(&qword_100807A70);
    sub_100014440(&qword_100807A78);
    sub_100303220();
    sub_100014440(&qword_100807AC8);
    sub_100014488(&qword_100807AD0, &qword_100807AC8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100303A94(&qword_1007FCE30, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807A60);
  }
  return result;
}

unint64_t sub_100303220()
{
  unint64_t result = qword_100807A80;
  if (!qword_100807A80)
  {
    sub_100014440(&qword_100807A70);
    sub_10030329C();
    sub_1003033D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807A80);
  }
  return result;
}

unint64_t sub_10030329C()
{
  unint64_t result = qword_100807A88;
  if (!qword_100807A88)
  {
    sub_100014440(&qword_100807A90);
    sub_100014440(&qword_100807A98);
    sub_100014440(&qword_100807AA0);
    sub_100014488(&qword_100807AA8, &qword_100807AA0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100807AB0, &qword_100807AB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807A88);
  }
  return result;
}

unint64_t sub_1003033D0()
{
  unint64_t result = qword_100807AC0;
  if (!qword_100807AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807AC0);
  }
  return result;
}

uint64_t sub_100303424@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002FEA20(*(void *)(v1 + 16), a1);
}

unint64_t sub_10030342C()
{
  unint64_t result = qword_100807AF0;
  if (!qword_100807AF0)
  {
    sub_100014440(&qword_100807AE8);
    sub_100014488(&qword_100807AF8, &qword_100807B00);
    sub_100014488(&qword_100807B08, &qword_100807B10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807AF0);
  }
  return result;
}

uint64_t sub_1003034F0()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100303514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100303540(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100303540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100303610@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = DynamicTypeSize.isAccessibilitySize.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100303644()
{
  uint64_t v2 = *(void *)(type metadata accessor for InsightsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10002C194;
  return sub_10030126C(v3);
}

uint64_t sub_100303714()
{
  uint64_t v1 = type metadata accessor for InsightsView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  sub_100010218((uint64_t *)&unk_1008156C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v2 + *(int *)(v1 + 36);
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100303918()
{
  uint64_t v2 = *(void *)(type metadata accessor for InsightsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100052588;
  return sub_100301504(v3);
}

uint64_t sub_1003039EC()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_100303A10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isPresented.getter();
  *a1 = result & 1;
  return result;
}

unint64_t sub_100303A40()
{
  unint64_t result = qword_100807B58;
  if (!qword_100807B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807B58);
  }
  return result;
}

uint64_t sub_100303A94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100303ADC()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100303B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100303540(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100303B40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = DynamicTypeSize.isAccessibilitySize.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100303B78()
{
  uint64_t v1 = type metadata accessor for InsightsView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  sub_100010218((uint64_t *)&unk_1008156C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v2 + *(int *)(v1 + 36);
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100303D7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for InsightsView() - 8);
  char v4 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1002FFCC0(a1, v4, v5);
}

unint64_t sub_100303DF8()
{
  unint64_t result = qword_100807BB0;
  if (!qword_100807BB0)
  {
    sub_100014440(&qword_100807B78);
    sub_100014488(&qword_100807BB8, &qword_100807B70);
    sub_100014488(&qword_1007F9628, &qword_1007F9630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807BB0);
  }
  return result;
}

uint64_t sub_100303EBC()
{
  uint64_t v1 = type metadata accessor for InsightsView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 32);
  sub_100010218((uint64_t *)&unk_1008156C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }
  unint64_t v6 = v0 + v2 + *(int *)(v1 + 36);
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003040C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for InsightsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1002FFE9C(a1, v5, v6, v7, v8);
}

uint64_t sub_1003041C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10030422C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100304294(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003042F4()
{
  return sub_100014488(&qword_100807BD0, &qword_100807BD8);
}

uint64_t initializeBufferWithCopyOfBuffer for AudioIntensityProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for AudioIntensityProcessor(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for AudioIntensityProcessor(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for AudioIntensityProcessor(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioIntensityProcessor(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 12)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioIntensityProcessor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioIntensityProcessor()
{
  return &type metadata for AudioIntensityProcessor;
}

void sub_1003044C8()
{
  dword_100807BE0 = 1920;
}

double *sub_1003044D8(id a1)
{
  id v3 = *v1;
  if (*v1) {
    goto LABEL_6;
  }
  id v4 = [a1 format];
  [v4 sampleRate];
  double v6 = v5;

  double v7 = v6 / 25.0;
  if ((~COERCE__INT64(v6 / 25.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_72;
  }
  if (v7 <= -1.0)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v7 >= 4294967300.0)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  uint64_t v8 = v7;
  *(_DWORD *)(v69 + 8) = v8;
  id v9 = [a1 format];
  id v3 = [objc_allocWithZone((Class)AVAudioPCMBuffer) initWithPCMFormat:v9 frameCapacity:v8];

  *(void *)uint64_t v69 = v3;
LABEL_6:
  unsigned int v10 = 0;
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v12 = &stru_1007D7000;
  id v68 = v3;
  for (unsigned int i = [a1 frameLength];
        v10 < i && v3 != 0;
        unsigned int i = objc_msgSend(a1, "frameLength", v65))
  {
    unsigned int v16 = *(_DWORD *)(v69 + 8);
    if (__CFADD__(v10, v16))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    id v17 = v3;
    unsigned int v18 = [a1 v12[74].name];
    unsigned int v19 = v18 - v10;
    if (v18 < v10) {
      goto LABEL_66;
    }
    unsigned int v20 = [v17 v12[74].name];
    unsigned int v21 = v16 - v20;
    if (v16 < v20) {
      goto LABEL_67;
    }
    if (v19 >= v10 + v16) {
      unsigned int v22 = v10 + v16;
    }
    else {
      unsigned int v22 = v19;
    }
    if (v21 >= v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = v21;
    }
    char v24 = (uint64_t *)[v17 floatChannelData];
    if (v24)
    {
      uint64_t v25 = *v24;
      uint64_t v26 = (uint64_t *)[a1 floatChannelData];
      if (v26)
      {
        uint64_t v67 = v11;
        uint64_t v27 = *v26;
        unsigned int v28 = [v17 v12[74].name];
        id v29 = [a1 format];
        uint64_t v30 = (unsigned int *)[v29 streamDescription];

        int64_t v31 = v30[6] * (unint64_t)v23;
        if ((v23 * (unsigned __int128)v30[6]) >> 64 != v31 >> 63) {
          goto LABEL_70;
        }
        memcpy((void *)(v25 + 4 * v28), (const void *)(v27 + 4 * v10), v31);
        uint64_t v11 = v67;
        id v3 = v68;
        uint64_t v12 = &stru_1007D7000;
      }
    }
    unsigned int v32 = [v17 v12[74].name];
    if (__CFADD__(v32, v23)) {
      goto LABEL_68;
    }
    [v17 setFrameLength:v32 + v23];
    unsigned int v33 = [v17 v12[74].name];
    if (v33 != [v17 frameCapacity]) {
      goto LABEL_8;
    }
    id v34 = [v17 averagePowerPerChannel];
    if (!v34) {
      goto LABEL_75;
    }
    uint64_t v35 = v34;
    sub_1002FD59C();
    unint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v50)
      {
LABEL_47:

        swift_bridgeObjectRelease();
        id v3 = v68;
        goto LABEL_9;
      }
    }
    else if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_47;
    }
    if ((v36 & 0xC000000000000001) != 0)
    {
      id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_71;
      }
      id v37 = *(id *)(v36 + 32);
    }
    char v38 = v37;
    swift_bridgeObjectRelease();
    [v38 floatValue];
    int v40 = v39;

    uint64_t v41 = (const float **)[v17 floatChannelData];
    if (v41)
    {
      char v42 = *v41;
      unsigned int v43 = [v17 frameLength];
      LODWORD(__C) = 2143289344;
      vDSP_maxmgv(v42, 1, (float *)&__C, v43);
      int v44 = (int)__C;
      id v3 = v68;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v45 = (double *)v65;
      }
      else {
        uint64_t v45 = sub_1002A7170(0, *(void *)(v65 + 16) + 1, 1, (double *)v65);
      }
      unint64_t v47 = *((void *)v45 + 2);
      unint64_t v46 = *((void *)v45 + 3);
      if (v47 >= v46 >> 1) {
        uint64_t v45 = sub_1002A7170((double *)(v46 > 1), v47 + 1, 1, v45);
      }
      *((void *)v45 + 2) = v47 + 1;
      uint64_t v66 = v45;
      *((_DWORD *)v45 + v47 + 8) = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1002A7170(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v49 = *((void *)v11 + 2);
      unint64_t v48 = *((void *)v11 + 3);
      if (v49 >= v48 >> 1) {
        uint64_t v11 = sub_1002A7170((double *)(v48 > 1), v49 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v49 + 1;
      *((_DWORD *)v11 + v49 + 8) = v44;
      [v17 setFrameLength:0 v66];
LABEL_8:

      goto LABEL_9;
    }

    id v3 = v68;
LABEL_9:
    BOOL v14 = __CFADD__(v10, v23);
    v10 += v23;
    uint64_t v12 = &stru_1007D7000;
    if (v14) {
      goto LABEL_69;
    }
  }
  int64_t v51 = *((void *)v11 + 2);
  if (v51)
  {
    __C = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100095C00(0, v51, 0);
    uint64_t v52 = 0;
    uint64_t v53 = __C;
    unint64_t v54 = *((void *)__C + 2);
    do
    {
      float v55 = *((float *)v11 + v52 + 8);
      __C = v53;
      unint64_t v56 = *((void *)v53 + 3);
      if (v54 >= v56 >> 1)
      {
        sub_100095C00(v56 > 1, v54 + 1, 1);
        uint64_t v53 = __C;
      }
      ++v52;
      *((void *)v53 + 2) = v54 + 1;
      v53[v54++ + 4] = v55;
    }
    while (v51 != v52);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = _swiftEmptyArrayStorage;
  }
  int64_t v57 = *(void *)(v65 + 16);
  if (v57)
  {
    __C = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100095C00(0, v57, 0);
    uint64_t v58 = v65;
    uint64_t v59 = 0;
    uint64_t v60 = __C;
    unint64_t v61 = *((void *)__C + 2);
    do
    {
      float v62 = *(float *)(v58 + 4 * v59 + 32);
      __C = v60;
      unint64_t v63 = *((void *)v60 + 3);
      if (v61 >= v63 >> 1)
      {
        sub_100095C00(v63 > 1, v61 + 1, 1);
        uint64_t v58 = v65;
        uint64_t v60 = __C;
      }
      ++v59;
      *((void *)v60 + 2) = v61 + 1;
      v60[v61++ + 4] = v62;
    }
    while (v57 != v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v53;
}

void *sub_100304B78(uint64_t a1, void *a2, id a3, void *a4)
{
  id v4 = a4;
  id v12 = 0;
  if ([a3 readIntoBuffer:a4 frameCount:a1 error:&v12])
  {
    id v7 = v12;
    id v8 = [a3 framePosition];
    *a2 = 2 * ((uint64_t)v8 >= (uint64_t)[a3 length]);
    id v9 = v4;
  }
  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v4;
}

id sub_100304C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  double v6 = (void *)v5(a2, a3);
  swift_release();

  return v6;
}

id sub_100304CE0(uint64_t a1)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  double v5 = v4;
  id v14 = 0;
  id v6 = [v2 initForReading:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL();
    id v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_100304E2C(uint64_t a1)
{
  v1[13] = a1;
  uint64_t v2 = type metadata accessor for URL();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_100304F18, 0, 0);
}

uint64_t sub_100304F18()
{
  uint64_t v1 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 120) + 16))(v1, *(void *)(v0 + 104), *(void *)(v0 + 112));
  id v2 = objc_allocWithZone((Class)AVAudioFile);
  id v3 = sub_100304CE0(v1);
  uint64_t v4 = &selRef_setDeliversTouchesForGesturesToSuperview_;
  id v5 = [v3 processingFormat];
  [v5 sampleRate];
  double v7 = v6;

  uint64_t v8 = &off_1007F6000;
  id v9 = &selRef_setDeliversTouchesForGesturesToSuperview_;
  if (v7 != 48000.0)
  {
    id v11 = [objc_allocWithZone((Class)AVAudioFormat) initStandardFormatWithSampleRate:1 channels:48000.0];
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [v3 processingFormat];
      id v14 = [objc_allocWithZone((Class)AVAudioConverter) initFromFormat:v13 toFormat:v12];

      if (v14)
      {
        [v14 setSampleRateConverterQuality:0x7FFFFFFFFFFFFFFFLL];
        uint64_t v15 = v14;
        uint64_t v16 = qword_1007F6DB0;
        type = v15;
        id v17 = v15;
        if (v16 != -1) {
          swift_once();
        }
        id v10 = [objc_allocWithZone((Class)AVAudioPCMBuffer) initWithPCMFormat:v12 frameCapacity:dword_100807BE0];

        uint64_t v8 = &off_1007F6000;
        goto LABEL_15;
      }

      uint64_t v8 = &off_1007F6000;
    }
    if (qword_1007F7DF0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100026A54(v18, (uint64_t)qword_10083EDD0);
    id v19 = v3;
    unsigned int v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v85 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412546;
      id v23 = [v19 processingFormat];
      *(void *)(v0 + 88) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v85 = v23;
      uint64_t v4 = &selRef_setDeliversTouchesForGesturesToSuperview_;

      *(_WORD *)(v22 + 12) = 2048;
      *(void *)(v0 + 96) = 0x40E7700000000000;
      id v9 = &selRef_setDeliversTouchesForGesturesToSuperview_;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "AudioWaveformSource: Failed to create AVAudioConverter from %@ to standard format with sample rate: %f; will con"
        "tinue without sample rate conversion",
        (uint8_t *)v22,
        0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v8 = &off_1007F6000;
      swift_slowDealloc();
    }
    else
    {
    }
    id v10 = 0;
    type = 0;
    goto LABEL_15;
  }
  id v10 = 0;
  type = 0;
LABEL_15:
  id v24 = [v3 v4[379]];
  if (v8[438] != (_UNKNOWN *)-1) {
    swift_once();
  }
  id v25 = [objc_allocWithZone((Class)AVAudioPCMBuffer) initWithPCMFormat:v9[381] frameCapacity:v24 frameLength:dword_100807BE0];

  uint64_t v86 = v25;
  if (!v25)
  {
    sub_100305B74();
    swift_allocError();
    unsigned char *v57 = 0;
    swift_willThrow();

    uint64_t v41 = (uint64_t)type;
    goto LABEL_59;
  }
  id v26 = [v3 framePosition];
  if ((uint64_t)v26 >= (uint64_t)[v3 length])
  {
    id v29 = _swiftEmptyArrayStorage;
    id v40 = v10;
    uint64_t v78 = _swiftEmptyArrayStorage;
LABEL_63:

    swift_task_dealloc();
    uint64_t v60 = *(uint64_t (**)(double *, double *, __n128))(v0 + 8);
    v61.n128_u64[0] = 25.0;
    return v60(v29, v78, v61);
  }
  uint64_t v77 = (void *)(v0 + 80);
  __C = (float *)(v0 + 136);
  uint64_t v79 = (void **)(v0 + 72);
  if (type) {
    BOOL v27 = v10 == 0;
  }
  else {
    BOOL v27 = 1;
  }
  char v28 = v27;
  char log = v28;
  id v29 = _swiftEmptyArrayStorage;
  uint64_t v78 = _swiftEmptyArrayStorage;
  while ((log & 1) != 0)
  {
    unint64_t v31 = v0 + 72;
    *uint64_t v79 = 0;
    unsigned int v32 = [v3 readIntoBuffer:v86 error:v79];
    unsigned int v33 = *v79;
    if (!v32)
    {
      id v62 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v41 = (uint64_t)v86;
      goto LABEL_59;
    }
    if (v10)
    {
      id v34 = v33;
      id v35 = v10;
    }
    else
    {
      id v35 = v86;
      id v43 = v33;
    }
LABEL_35:
    id v40 = v10;
    int v44 = (const float **)[v35 floatChannelData];
    if (v44)
    {
      uint64_t v45 = *v44;
      unsigned int v46 = [v35 frameLength];
      float *__C = NAN;
      vDSP_maxmgv(v45, 1, __C, v46);
      float v47 = *__C;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v29 = sub_1002A5898(0, *((void *)v29 + 2) + 1, 1, v29);
      }
      unint64_t v31 = *((void *)v29 + 2);
      unint64_t v48 = *((void *)v29 + 3);
      if (v31 >= v48 >> 1) {
        id v29 = sub_1002A5898((double *)(v48 > 1), v31 + 1, 1, v29);
      }
      *((void *)v29 + 2) = v31 + 1;
      v29[v31 + 4] = v47;
    }
    id v49 = [v35 averagePowerPerChannel:v77];
    if (!v49) {
      goto LABEL_27;
    }
    uint64_t v50 = v49;
    sub_1002FD59C();
    uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((unint64_t)v41 >> 62)
    {
      if (v41 < 0) {
        unint64_t v31 = v41;
      }
      else {
        unint64_t v31 = v41 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      id v42 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v42)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    else
    {
      id v42 = *(id *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v42) {
        goto LABEL_26;
      }
    }
    if ((v41 & 0xC000000000000001) != 0)
    {
      id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_79:
        swift_once();
LABEL_69:
        uint64_t v64 = type metadata accessor for Logger();
        sub_100026A54(v64, (uint64_t)qword_10083EDD0);
        id v65 = (id)v31;
        uint64_t v66 = Logger.logObject.getter();
        os_log_type_t v67 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v66, v67))
        {
          loga = v66;
          os_log_type_t typea = v67;
          id v68 = (uint8_t *)swift_slowAlloc();
          uint64_t v69 = (void *)swift_slowAlloc();
          *(_DWORD *)id v68 = 138412290;
          *uint64_t v77 = v65;
          id v70 = v65;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v69 = v42;

          uint64_t v66 = loga;
          _os_log_impl((void *)&_mh_execute_header, loga, typea, "AudioWaveformSource: Failed to convert buffer: %@", v68, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v76 = v65;
        swift_willThrow();

        uint64_t v41 = (uint64_t)v76;
        goto LABEL_59;
      }
      id v51 = *(id *)(v41 + 32);
    }
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    CGFloat.init(truncating:)();
    double v54 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v78 = sub_1002A5898(0, *((void *)v78 + 2) + 1, 1, v78);
    }
    unint64_t v56 = *((void *)v78 + 2);
    unint64_t v55 = *((void *)v78 + 3);
    if (v56 >= v55 >> 1) {
      uint64_t v78 = sub_1002A5898((double *)(v55 > 1), v56 + 1, 1, v78);
    }
    *((void *)v78 + 2) = v56 + 1;
    v78[v56 + 4] = v54;

LABEL_27:
    id v30 = [v3 framePosition];
    if ((uint64_t)v30 >= (uint64_t)[v3 length]) {
      goto LABEL_63;
    }
  }
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v3;
  *(void *)(v36 + 24) = v86;
  *(void *)(v0 + 48) = sub_100305C08;
  *(void *)(v0 + 56) = v36;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_100304C74;
  *(void *)(v0 + 40) = &unk_1007A4FE0;
  id v37 = _Block_copy((const void *)(v0 + 16));
  id v38 = v3;
  id v39 = v3;
  id v40 = type;
  id v35 = v10;
  uint64_t v41 = v86;
  swift_release();
  *(void *)(v0 + 64) = 0;
  unint64_t v31 = (unint64_t)[v40 convertToBuffer:v35 error:v0 + 64 withInputFromBlock:v37];
  _Block_release(v37);
  id v42 = *(id *)(v0 + 64);
  if (v31 != 3)
  {

    id v3 = v38;
    goto LABEL_35;
  }
  uint64_t v86 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = qword_1007F7DF0;
  if (v42)
  {
    unint64_t v31 = (unint64_t)v42;
    if (v63 != -1) {
      goto LABEL_79;
    }
    goto LABEL_69;
  }
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v71 = type metadata accessor for Logger();
  sub_100026A54(v71, (uint64_t)qword_10083EDD0);
  char v72 = Logger.logObject.getter();
  os_log_type_t v73 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v74 = 0;
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "AudioWaveformSource: Failed to convert buffer", v74, 2u);
    swift_slowDealloc();
  }

  sub_100305B74();
  swift_allocError();
  unsigned char *v75 = 1;
  swift_willThrow();

LABEL_59:
  swift_task_dealloc();
  uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
  return v58();
}

unint64_t sub_100305B74()
{
  unint64_t result = qword_100807BF0;
  if (!qword_100807BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807BF0);
  }
  return result;
}

uint64_t sub_100305BC8()
{
  return swift_deallocObject();
}

void *sub_100305C08(uint64_t a1, void *a2)
{
  return sub_100304B78(a1, a2, *(id *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100305C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100305C20()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for AudioIntensityProcessor.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100305CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioIntensityProcessor.Error()
{
  return &type metadata for AudioIntensityProcessor.Error;
}

unint64_t sub_100305D30()
{
  unint64_t result = qword_100807BF8;
  if (!qword_100807BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807BF8);
  }
  return result;
}

void sub_100305D88(char a1, double a2, double a3, double a4)
{
  [v4 bounds];
  double v12 = v11;
  double v14 = v13;
  if (a1)
  {
    double v15 = v9;
    double v16 = v10;
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [self animationWithKeyPath:v17];

    id v19 = self;
    id v20 = [v19 valueWithCGRect:v12, v14, v15, v16];
    [v18 setFromValue:v20];

    id v21 = [v19 valueWithCGRect:v12, v14, a2, a3];
    [v18 setToValue:v21];

    [v18 setFillMode:kCAFillModeForwards];
    [v18 setDuration:a4];
    uint64_t v22 = self;
    id v23 = v18;
    id v24 = [v22 functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    [v23 setTimingFunction:v24];

    [v4 setBounds:v12, v14, a2, a3];
    NSString v25 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v23 forKey:v25];
  }
  else
  {
    [v4 setBounds:];
  }
}

uint64_t sub_100306030()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100807C00);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100807C00);
  if (qword_1007F7D18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB48);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003060F8(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for Date();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for UserEngagement.StateSnapshot();
  v1[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  return _swift_task_switch(sub_10030625C, 0, 0);
}

uint64_t sub_10030625C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v0 + 104) = *(void *)(*(void *)(v0 + 16) + 24);
  *(_DWORD *)(v0 + 192) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 112) = v3;
  *(void *)(v0 + 120) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v3(v1);
  swift_retain();
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_100306370;
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 196, v5, sub_10005F0F8, v6, &type metadata for Bool);
}

uint64_t sub_100306370()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = *(void *)(*v0 + 72);
  uint64_t v4 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 136) = v5;
  *(void *)(v1 + 144) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1003064F8, 0, 0);
}

uint64_t sub_1003064F8()
{
  *(unsigned char *)(v0 + 197) = *(unsigned char *)(v0 + 196);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 152) = v2;
  *(void *)(v0 + 160) = v1;
  return _swift_task_switch(sub_100306578, v2, v1);
}

uint64_t sub_100306578()
{
  if (*(unsigned char *)(v0 + 197))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 16);
    static Date.now.getter();
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
    if (v4)
    {
      id v5 = *(id *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
    }
    else
    {
      id v6 = objc_allocWithZone((Class)NSAttributedString);
      NSString v7 = String._bridgeToObjectiveC()();
      id v5 = [v6 initWithString:v7];

      uint64_t v4 = 0;
    }
    double v9 = *(int **)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 16);
    uint64_t v12 = *(void *)(v0 + 24);
    id v14 = v4;
    double v15 = sub_1000CE544(v13);
    LOBYTE(v13) = *(unsigned char *)(v13 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8, v10, v12);
    *(void *)(v8 + v9[5]) = v5;
    *(void *)(v8 + v9[6]) = v15;
    *(unsigned char *)(v8 + v9[7]) = v13;
    sub_1000CEFAC(v8, v8, (void *)3);
    if (qword_1007F7CE0 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_10083EA18;
    *(void *)(v0 + 168) = qword_10083EA18;
    return _swift_task_switch(sub_100306760, v16, 0);
  }
}

uint64_t sub_100306760()
{
  (*(void (**)(void, void, void))(v0 + 112))(*(void *)(v0 + 80), *(unsigned int *)(v0 + 192), *(void *)(v0 + 64));
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100306840;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_100306840()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  uint64_t v4 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  v2(v3, v4);
  return _swift_task_switch(sub_1003069D8, v1, 0);
}

uint64_t sub_1003069D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100306A68;
  return sub_100580C88();
}

uint64_t sub_100306A68()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_100306B88, v3, v2);
}

uint64_t sub_100306B88()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  sub_1002565E8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100306C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 388) = a6;
  *(void *)(v6 + 128) = a4;
  *(void *)(v6 + 136) = a5;
  *(void *)(v6 + 112) = a2;
  *(void *)(v6 + 120) = a3;
  *(void *)(v6 + 104) = a1;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v6 + 144) = v7;
  *(void *)(v6 + 152) = *(void *)(v7 - 8);
  *(void *)(v6 + 160) = swift_task_alloc();
  sub_100010218(&qword_10080CF60);
  *(void *)(v6 + 168) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UserEngagement.StateSnapshot();
  *(void *)(v6 + 176) = v8;
  *(void *)(v6 + 184) = *(void *)(v8 - 8);
  *(void *)(v6 + 192) = swift_task_alloc();
  *(void *)(v6 + 200) = swift_task_alloc();
  *(void *)(v6 + 208) = sub_100010218((uint64_t *)&unk_1007FC470);
  *(void *)(v6 + 216) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Date();
  *(void *)(v6 + 224) = v9;
  *(void *)(v6 + 232) = *(void *)(v9 - 8);
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 256) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 264) = v11;
  *(void *)(v6 + 272) = v10;
  return _swift_task_switch(sub_100306E50, v11, v10);
}

uint64_t sub_100306E50()
{
  sub_10001B220(*(void *)(v0 + 120), v0 + 16, &qword_100807C28);
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 48);
    sub_10002E0BC((void *)(v0 + 16), *(void *)(v0 + 40));
    unint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003074B8;
    return v31(v1, v2);
  }
  sub_10001457C(v0 + 16, &qword_100807C28);
  uint64_t v5 = sub_100585038();
  if (sub_100038BD0(v5))
  {
    char v6 = 0;
LABEL_7:
    swift_release();
    sub_10030892C();
    swift_allocError();
    *uint64_t v7 = v6;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  if (!sub_10018AE4C()
    && ((sub_10018B38C() & 1) == 0
     || (*(unsigned char *)(*(void *)(v0 + 104) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) & 1) != 0))
  {
    uint64_t v9 = (void *)sub_100339674();
    if (v9)
    {
      sub_10033AA5C(v9);

      if ((sub_10018AF68() & 1) == 0)
      {
        char v6 = 1;
        goto LABEL_7;
      }
    }
    uint64_t v11 = (void *)sub_100020C00(0, *(void **)(v0 + 112), 0, 0.0);
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)(v0 + 104);
    if (v11)
    {
      if (*(void *)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text))
      {
        unsigned __int8 v14 = [v11 isEqualToAttributedString:];
        uint64_t v13 = *(void *)(v0 + 104);
        if ((v14 & 1) == 0)
        {
          *(unsigned char *)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
          uint64_t v13 = *(void *)(v0 + 104);
        }
      }
    }
    uint64_t v15 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
    *(void *)(v0 + 296) = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
    uint64_t v16 = *(void **)(v13 + v15);
    *(void *)(v13 + v15) = v12;

    uint64_t v17 = (void *)sub_100339674();
    if (!v17) {
      goto LABEL_37;
    }
    uint64_t v18 = *(void *)(v0 + 104);
    sub_10033AA5C(v17);

    id v20 = (void *)(v18 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    if (*v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_37;
      }
    }
    else if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_37;
    }
    if ((sub_10018B188() & 1) == 0)
    {
      switch(*(unsigned char *)(*(void *)(v0 + 104) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource))
      {
        case 1:
        case 2:
        case 3:
        case 4:
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v23 & 1) == 0) {
            goto LABEL_37;
          }
          break;
        case 5:
          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v24 = *(void *)(v0 + 224);
      uint64_t v25 = *(void *)(v0 + 232);
      uint64_t v26 = *(void *)(v0 + 216);
      swift_allocObject();
      swift_weakInit();
      NSManagedObjectContext.performAndWait<A>(_:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v26, 1, v24) == 1)
      {
        uint64_t v27 = *(void *)(v0 + 216);
        Date.init()();
        sub_10001457C(v27, (uint64_t *)&unk_1007FC470);
      }
      else
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 216), *(void *)(v0 + 224));
      }
      char v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v28;
      *char v28 = v0;
      v28[1] = sub_100307D10;
      uint64_t v29 = *(void *)(v0 + 248);
      return sub_100583590(v29, 2);
    }
LABEL_37:
    return _swift_task_switch(sub_100307E68, 0, 0);
  }
  unsigned int v32 = (uint64_t (*)(uint64_t))((char *)&dword_100807C18 + dword_100807C18);
  id v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v21;
  *id v21 = v0;
  v21[1] = sub_100307B38;
  uint64_t v22 = *(void *)(v0 + 104);
  return v32(v22);
}

uint64_t sub_1003074B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 272);
  uint64_t v3 = *(void *)(v1 + 264);
  return _swift_task_switch(sub_1003075D8, v3, v2);
}

uint64_t sub_1003075D8()
{
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  uint64_t v1 = sub_100585038();
  if (sub_100038BD0(v1))
  {
    char v2 = 0;
LABEL_3:
    swift_release();
    sub_10030892C();
    swift_allocError();
    *uint64_t v3 = v2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  if (!sub_10018AE4C()
    && ((sub_10018B38C() & 1) == 0
     || (*(unsigned char *)(*(void *)(v0 + 104) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) & 1) != 0))
  {
    char v6 = (void *)sub_100339674();
    if (v6)
    {
      sub_10033AA5C(v6);

      if ((sub_10018AF68() & 1) == 0)
      {
        char v2 = 1;
        goto LABEL_3;
      }
    }
    uint64_t v8 = (void *)sub_100020C00(0, *(void **)(v0 + 112), 0, 0.0);
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v0 + 104);
    if (v8)
    {
      if (*(void *)(v10 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text))
      {
        unsigned __int8 v11 = [v8 isEqualToAttributedString:];
        uint64_t v10 = *(void *)(v0 + 104);
        if ((v11 & 1) == 0)
        {
          *(unsigned char *)(v10 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
          uint64_t v10 = *(void *)(v0 + 104);
        }
      }
    }
    uint64_t v12 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
    *(void *)(v0 + 296) = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
    uint64_t v13 = *(void **)(v10 + v12);
    *(void *)(v10 + v12) = v9;

    unsigned __int8 v14 = (void *)sub_100339674();
    if (!v14) {
      goto LABEL_33;
    }
    uint64_t v15 = *(void *)(v0 + 104);
    sub_10033AA5C(v14);

    uint64_t v17 = (void *)(v15 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    if (*v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_33;
      }
    }
    else if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_33;
    }
    if ((sub_10018B188() & 1) == 0)
    {
      switch(*(unsigned char *)(*(void *)(v0 + 104) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource))
      {
        case 1:
        case 2:
        case 3:
        case 4:
          char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0) {
            goto LABEL_33;
          }
          break;
        case 5:
          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v21 = *(void *)(v0 + 224);
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 216);
      swift_allocObject();
      swift_weakInit();
      NSManagedObjectContext.performAndWait<A>(_:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1)
      {
        uint64_t v24 = *(void *)(v0 + 216);
        Date.init()();
        sub_10001457C(v24, (uint64_t *)&unk_1007FC470);
      }
      else
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 216), *(void *)(v0 + 224));
      }
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_100307D10;
      uint64_t v26 = *(void *)(v0 + 248);
      return sub_100583590(v26, 2);
    }
LABEL_33:
    return _swift_task_switch(sub_100307E68, 0, 0);
  }
  char v28 = (uint64_t (*)(uint64_t))((char *)&dword_100807C18 + dword_100807C18);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100307B38;
  uint64_t v19 = *(void *)(v0 + 104);
  return v28(v19);
}

uint64_t sub_100307B38()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 272);
  uint64_t v3 = *(void *)(v1 + 264);
  return _swift_task_switch(sub_100307C58, v3, v2);
}

uint64_t sub_100307C58()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100307D10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  uint64_t v2 = *(void *)(*(void *)v0 + 232);
  uint64_t v3 = *(void *)(*(void *)v0 + 224);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100307E68, 0, 0);
}

uint64_t sub_100307E68()
{
  uint64_t v1 = (unint64_t *)(*(void *)(v0 + 104) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v2 = *v1;
  *(void *)(v0 + 312) = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = (uint64_t)v4;
    *(void *)(v0 + 320) = v4;
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v22;
    void *v22 = v0;
    v22[1] = sub_100308124;
    return sub_100580C88();
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v4 = (void *)swift_bridgeObjectRetain();
  *(void *)(v0 + 320) = v3;
  if (!v3) {
    goto LABEL_16;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = 0;
    *(_DWORD *)(v0 + 384) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
    while (1)
    {
      *(void *)(v0 + 336) = v9;
      uint64_t v10 = *(void *)(v0 + 312);
      unsigned __int8 v11 = (v10 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v10 + 8 * v9 + 32);
      *(void *)(v0 + 344) = v11;
      uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
      *(void *)(v0 + 352) = v12;
      if (v12)
      {
        uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
        *(void *)(v0 + 360) = v13;
        if (v13) {
          break;
        }
      }
      uint64_t v14 = *(void *)(v0 + 336);
      uint64_t v15 = *(void *)(v0 + 320);

      if (v14 + 1 == v15) {
        goto LABEL_16;
      }
      uint64_t v9 = *(void *)(v0 + 336) + 1;
    }
    uint64_t v16 = *(unsigned int *)(v0 + 384);
    uint64_t v18 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 144);
    uint64_t v20 = swift_allocObject();
    *(void *)(v0 + 368) = v20;
    *(void *)(v20 + 16) = v13;
    *(unsigned char *)(v20 + 24) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v17, v16, v19);
    id v21 = v13;
    v12;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100308474;
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v8 = (char *)&type metadata for () + 8;
    char v6 = sub_1003088D4;
    uint64_t v7 = v20;
  }
  return NSManagedObjectContext.perform<A>(schedule:_:)(v4, v5, v6, v7, v8);
}

uint64_t sub_100308124()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 272);
  uint64_t v3 = *(void *)(v1 + 264);
  return _swift_task_switch(sub_100308244, v3, v2);
}

uint64_t sub_100308244()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 128);
  swift_release();
  type metadata accessor for AssetPostprocessingOperation();
  sub_10039D88C();
  sub_10001B220(v4, v3, &qword_10080CF60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(*(void *)(v0 + 168), &qword_10080CF60);
  }
  else
  {
    char v5 = *(unsigned char *)(v0 + 388);
    sub_100308838(*(void *)(v0 + 168), *(void *)(v0 + 200));
    if (v5)
    {
      uint64_t v9 = *(void *)(v0 + 200);
    }
    else
    {
      uint64_t v6 = *(void *)(v0 + 296);
      uint64_t v7 = *(void *)(v0 + 104);
      static Date.now.getter();
      uint64_t v8 = *(void **)(v7 + v6);
      if (v8)
      {
        id v24 = *(id *)(v7 + v6);
      }
      else
      {
        id v10 = objc_allocWithZone((Class)NSAttributedString);
        NSString v11 = String._bridgeToObjectiveC()();
        id v24 = [v10 initWithString:v11];

        uint64_t v8 = 0;
      }
      uint64_t v13 = *(void *)(v0 + 232);
      uint64_t v12 = *(void *)(v0 + 240);
      uint64_t v14 = *(void *)(v0 + 224);
      uint64_t v16 = *(void *)(v0 + 192);
      uint64_t v15 = *(void *)(v0 + 200);
      uint64_t v17 = *(int **)(v0 + 176);
      uint64_t v18 = *(void **)(v0 + 136);
      uint64_t v19 = *(void *)(v0 + 104);
      id v20 = v8;
      id v21 = sub_1000CE544(v19);
      LOBYTE(v19) = *(unsigned char *)(v19 + 40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v12, v14);
      *(void *)(v16 + v17[5]) = v24;
      *(void *)(v16 + v17[6]) = v21;
      *(unsigned char *)(v16 + v17[7]) = v19;
      sub_1000CEFAC(v15, v16, v18);
      sub_1002565E8(v16);
      uint64_t v9 = v15;
    }
    sub_1002565E8(v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_100308474()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  uint64_t v2 = *(void *)(*(void *)v0 + 152);
  uint64_t v3 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003085E8, 0, 0);
}

uint64_t sub_1003085E8()
{
  uint64_t v1 = *(void **)(v0 + 352);

  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);

  if (v2 + 1 == v3)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100308124;
    return sub_100580C88();
  }
  else
  {
    while (1)
    {
      uint64_t v8 = *(void *)(v0 + 336) + 1;
      *(void *)(v0 + 336) = v8;
      uint64_t v9 = *(void *)(v0 + 312);
      id v10 = (v9 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v9 + 8 * v8 + 32);
      *(void *)(v0 + 344) = v10;
      NSString v11 = *(void **)&v10[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
      *(void *)(v0 + 352) = v11;
      if (v11)
      {
        uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
        *(void *)(v0 + 360) = v12;
        if (v12) {
          break;
        }
      }
      uint64_t v6 = *(void *)(v0 + 336);
      uint64_t v7 = *(void *)(v0 + 320);

      if (v6 + 1 == v7) {
        goto LABEL_2;
      }
    }
    uint64_t v13 = *(unsigned int *)(v0 + 384);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v17 = swift_allocObject();
    *(void *)(v0 + 368) = v17;
    *(void *)(v17 + 16) = v12;
    *(unsigned char *)(v17 + 24) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v14, v13, v16);
    id v18 = v12;
    v11;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100308474;
    uint64_t v20 = *(void *)(v0 + 160);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v19, v20, sub_1003088D4, v17, (char *)&type metadata for () + 8);
  }
}

uint64_t sub_100308838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserEngagement.StateSnapshot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10030889C()
{
  return swift_deallocObject();
}

id sub_1003088D4()
{
  return sub_10018207C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1003088F4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

unint64_t sub_10030892C()
{
  unint64_t result = qword_100807C30;
  if (!qword_100807C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807C30);
  }
  return result;
}

unsigned char *_s22EntrySaveFailureReasonOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100308A4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s22EntrySaveFailureReasonOMa()
{
  return &_s22EntrySaveFailureReasonON;
}

unint64_t sub_100308A88()
{
  unint64_t result = qword_100807C38;
  if (!qword_100807C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100807C38);
  }
  return result;
}

uint64_t sub_100308ADC(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  id v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_10030A4E8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_1007A51E0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100308DB0(uint64_t a1, void *a2)
{
  v155 = a2;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v147 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v145 = (char *)v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v144 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v143 = (char *)v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v142);
  v141 = (char *)v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)v137 - v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v151 = *(void *)(v15 - 8);
  uint64_t v152 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v149 = (char *)v137 - v19;
  uint64_t v20 = sub_100010218(&qword_1007F9EB0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v24 = *((void *)v23 - 1);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v140 = v5;
  v150 = (char *)Strong;
  v148 = v4;
  id v28 = [objc_allocWithZone((Class)UIStackView) init];
  id v153 = [objc_allocWithZone((Class)UIStackView) init];
  id v154 = [objc_allocWithZone((Class)UILabel) init];
  [v28 setUserInteractionEnabled:1];
  [v28 setAxis:1];
  [v28 setAlignment:3];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  [v28 setSpacing:*(double *)&qword_10083D908];
  sub_1003F3C1C((uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_10001457C((uint64_t)v22, &qword_1007F9EB0);
LABEL_22:
    id v38 = v153;
    goto LABEL_23;
  }
  sub_10030A5FC((uint64_t)v22, (uint64_t)v26);
  uint64_t v29 = &v26[v23[12]];
  if ((v29[8] & 1) != 0 || *(void *)v29 == 1)
  {
    id v139 = v28;
    sub_100045944((uint64_t)&v26[v23[6]], (uint64_t)v14);
    uint64_t v31 = v151;
    uint64_t v30 = v152;
    unsigned int v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
    if (v32(v14, 1, v152) == 1)
    {
      uint64_t v11 = v14;
    }
    else
    {
      Swift::String v138 = v17;
      uint64_t v33 = v149;
      id v34 = v14;
      id v35 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v35(v149, v34, v30);
      sub_100045944((uint64_t)&v26[v23[7]], (uint64_t)v11);
      if (v32(v11, 1, v30) != 1)
      {
        id v42 = v138;
        v35(v138, v11, v30);
        id v28 = v139;
        if (qword_1007F75E0 != -1) {
          swift_once();
        }
        v137[0] = *((void *)&xmmword_10083DD68 + 1);
        v137[1] = xmmword_10083DD68;
        sub_100010218((uint64_t *)&unk_100806070);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1006D6270;
        uint64_t v44 = (uint64_t)v141;
        static Date.FormatStyle.TimeStyle.shortened.getter();
        static FormatStyleCapitalizationContext.standalone.getter();
        static Locale.autoupdatingCurrent.getter();
        static Calendar.autoupdatingCurrent.getter();
        static TimeZone.autoupdatingCurrent.getter();
        static Date.now.getter();
        sub_10001FF10((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
        Date.formatted<A>(_:)();
        sub_10030A660(v44, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
        long long v45 = v156[0];
        *(void *)(v43 + 56) = &type metadata for String;
        unint64_t v46 = sub_10001B2C0();
        *(void *)(v43 + 64) = v46;
        *(_OWORD *)(v43 + 32) = v45;
        float v47 = v143;
        static Date.FormatStyle.DateStyle.omitted.getter();
        unint64_t v48 = v145;
        static Date.FormatStyle.TimeStyle.shortened.getter();
        uint64_t v49 = Date.formatted(date:time:)();
        uint64_t v51 = v50;
        (*(void (**)(char *, uint64_t))(v147 + 8))(v48, v140);
        (*(void (**)(char *, uint64_t))(v144 + 8))(v47, v146);
        *(void *)(v43 + 96) = &type metadata for String;
        *(void *)(v43 + 104) = v46;
        *(void *)(v43 + 72) = v49;
        *(void *)(v43 + 80) = v51;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        NSString v52 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v154 setText:v52];

        uint64_t v53 = v152;
        double v54 = *(void (**)(char *, uint64_t))(v151 + 8);
        v54(v42, v152);
        v54(v149, v53);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    }
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
    id v28 = v139;
  }
  uint64_t v36 = *(void **)&v26[v23[14]];
  if (!v36)
  {
LABEL_21:
    sub_10030A660((uint64_t)v26, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    goto LABEL_22;
  }
  uint64_t v37 = *(void *)&v26[v23[15]];
  id v38 = v153;
  if (v37)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1002AC074(v36, v37);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40)
    {
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v41 = 0;
    }
    unint64_t v55 = &MPMediaItemPropertyTitle_ptr;
    [v154 setText:v41];

    sub_10030A660((uint64_t)v26, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    goto LABEL_24;
  }
  sub_10030A660((uint64_t)v26, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
LABEL_23:
  unint64_t v55 = &MPMediaItemPropertyTitle_ptr;
LABEL_24:
  id v56 = [objc_allocWithZone((Class)v55[323]) init];
  id v57 = [objc_allocWithZone((Class)v55[323]) init];
  id v58 = [objc_allocWithZone((Class)UIButton) init];
  sub_100540B38(v38, v56, v57, v154, 0, v58);

  uint64_t v59 = OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutActivityView;
  uint64_t v60 = v150;
  __n128 v61 = *(unsigned char **)&v150[OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutActivityView];
  uint64_t v62 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v63 = v61[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v61[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
  uint64_t v64 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (v61[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
  {
    switch(v63)
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v68 = v61;
        swift_bridgeObjectRelease();
        if ((v67 & 1) == 0)
        {
          uint64_t v66 = v61[v62];
          goto LABEL_30;
        }

        break;
    }
  }
  else
  {
    id v65 = v61;
    uint64_t v66 = 5;
LABEL_30:
    uint64_t v69 = *(void **)&v61[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    id v70 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v69) + 0x58);
    uint64_t v71 = v69;
    v70(7, v66);

    uint64_t v72 = type metadata accessor for TaskPriority();
    uint64_t v73 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v148, 1, 1, v72);
    uint64_t v74 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v75 = static MainActor.shared.getter();
    id v76 = (void *)swift_allocObject();
    v76[2] = v75;
    v76[3] = &protocol witness table for MainActor;
    v76[4] = v74;
    swift_release();
    sub_100328A60(v73, (uint64_t)&unk_100807C78, (uint64_t)v76);
    swift_release();
    v61[v64] = 1;
  }
  uint64_t v77 = *(char **)&v60[v59];
  uint64_t v78 = *(void **)&v77[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset];
  uint64_t v79 = v155;
  *(void *)&v77[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset] = v155;
  id v80 = v79;
  uint64_t v81 = v77;

  sub_10059BF80();
  id v82 = [*(id *)&v60[v59] layer];
  if (qword_1007F7CA0 != -1) {
    swift_once();
  }
  v156[0] = xmmword_10083E9C0;
  v156[1] = *(_OWORD *)&qword_10083E9D0;
  v156[2] = xmmword_10083E9E0;
  v156[3] = *(_OWORD *)&qword_10083E9F0;
  [v82 setCornerRadii:v156];

  id v83 = *(id *)&v60[v59];
  sub_1005412A4(v83);

  [v28 addArrangedSubview:*(void *)&v60[v59]];
  uint64_t v84 = qword_1007F7300;
  id v85 = *(id *)&v60[v59];
  if (v84 != -1) {
    swift_once();
  }
  double v86 = *(double *)&qword_10083D910;
  id v87 = [v85 superview];
  uint64_t v88 = &stru_1007D7000;
  if (v87)
  {
    uint64_t v89 = v87;
    [v85 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v90 = [v85 leadingAnchor];
    id v91 = [v89 leadingAnchor];
    id v92 = [v90 constraintEqualToAnchor:v91];

    [v92 setConstant:v86];
    if (v92)
    {
      id v92 = v92;
      uint64_t v88 = &stru_1007D7000;
      [v92 setActive:1];

      id v85 = v92;
    }
    else
    {
      uint64_t v88 = &stru_1007D7000;
    }
  }
  else
  {
    id v92 = 0;
    uint64_t v89 = v85;
  }

  double v93 = *(double *)&qword_10083D910;
  id v94 = *(id *)&v60[v59];
  id v95 = [v94 superview];
  if (v95)
  {
    uint64_t v96 = v95;
    [v94 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v97 = [v94 trailingAnchor];
    id v98 = [v96 trailingAnchor];
    id v99 = [v97 constraintEqualToAnchor:v98];

    [v99 setConstant:-v93];
    if (v99)
    {
      id v99 = v99;
      uint64_t v88 = &stru_1007D7000;
      [v99 setActive:1];

      id v94 = v99;
      uint64_t v100 = v153;
    }
    else
    {
      uint64_t v100 = v153;
      uint64_t v88 = &stru_1007D7000;
    }
  }
  else
  {
    id v99 = 0;
    uint64_t v96 = v94;
    uint64_t v100 = v153;
  }

  id v101 = *(id *)&v60[v59];
  [v101 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v102 = [v101 heightAnchor];
  id v103 = [v101 widthAnchor];
  id v104 = [v102 constraintEqualToAnchor:v103 multiplier:1.0];

  [v104 v88[90].name:1];
  [v28 addArrangedSubview:v100];
  if (qword_1007F7368 != -1) {
    swift_once();
  }
  double v105 = *(double *)&qword_10083D978;
  id v106 = [v100 superview];
  if (v106)
  {
    uint64_t v107 = v106;
    [v100 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v108 = [v100 leadingAnchor];
    id v109 = [v107 leadingAnchor];
    id v110 = [v108 constraintEqualToAnchor:v109];

    [v110 setConstant:v105];
    id v111 = v110;
    [v111 setActive:1];
  }
  double v112 = *(double *)&qword_10083D978;
  id v113 = [v100 superview];
  if (v113)
  {
    uint64_t v114 = v113;
    [v100 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v115 = [v100 trailingAnchor];
    id v116 = [v114 trailingAnchor];
    id v117 = [v115 constraintEqualToAnchor:v116];

    [v117 setConstant:-v112];
    id v118 = v117;
    [v118 setActive:1];
  }
  [v60 addSubview:v28];
  id v119 = [v28 superview];
  if (v119)
  {
    Swift::Int v120 = v119;
    [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v121 = [v28 centerYAnchor];
    id v122 = [v120 centerYAnchor];
    id v123 = [v121 constraintEqualToAnchor:v122];

    [v123 setConstant:0.0];
    id v124 = v123;
    [v124 setActive:1];
  }
  id v125 = [v28 superview];
  if (v125)
  {
    uint64_t v126 = v125;
    [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v127 = [v28 leadingAnchor];
    id v128 = [v126 leadingAnchor];
    id v129 = [v127 constraintEqualToAnchor:v128];

    [v129 setConstant:0.0];
    id v130 = v129;
    [v130 setActive:1];
  }
  id v131 = [v28 superview];
  if (v131)
  {
    Swift::String v132 = v131;
    [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v133 = [v28 trailingAnchor];
    id v134 = [v132 trailingAnchor];
    id v135 = [v133 constraintEqualToAnchor:v134];

    [v135 setConstant:0.0];
    id v136 = v135;
    [v136 setActive:1];
  }
  [v60 layoutIfNeeded];
  [v28 layoutIfNeeded];
  [*(id *)&v60[v59] layoutIfNeeded];
}

id sub_10030A2FC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutActivityView;
  type metadata accessor for WorkoutActivityGridView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutAsset] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for FullScreenWorkoutView();
  [super initWithCoder:a1];

  return v6;
}

id sub_10030A3CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenWorkoutView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenWorkoutView()
{
  return self;
}

uint64_t sub_10030A470()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10030A4A8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10030A4E8()
{
  sub_100308DB0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10030A4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10030A500()
{
  return swift_release();
}

uint64_t sub_10030A508()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10030A548(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10059E2DC(a1, v4, v5, v6);
}

uint64_t sub_10030A5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10030A660(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10030A6C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (v1)
  {
    unint64_t v87 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v2 = v1;
    id v3 = [v2 visibleCells];
    sub_10030AE38();
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
    {
LABEL_66:
      id v76 = v2;
      unint64_t v77 = swift_bridgeObjectRetain();
      uint64_t v5 = (uint64_t)sub_1000CCE20(v77);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v6 = v2;
      swift_bridgeObjectRetain();
    }
    uint64_t v86 = v5;
    uint64_t v7 = v2;
    sub_10030D050(&v86, v7);
    swift_bridgeObjectRelease();

    uint64_t v8 = v86;
    uint64_t v9 = &stru_1007D7000;
    [v7 bounds];
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    [v7 adjustedContentInset];
    double v20 = sub_10028472C(v11, v13, v15, v17, v18, v19);
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (v27) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v27 = *(void *)(v8 + 16);
      if (v27)
      {
LABEL_8:
        unint64_t v28 = 0;
        unint64_t v29 = v8 & 0xC000000000000001;
        uint64_t v83 = v8 + 32;
        uint64_t v30 = (char *)_swiftEmptyArrayStorage;
        while (1)
        {
          if (v29)
          {
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v32 = __OFADD__(v28++, 1);
            if (v32) {
              goto LABEL_65;
            }
          }
          else
          {
            if (v28 >= *(void *)(v8 + 16))
            {
              __break(1u);

              swift_release();
              __break(1u);
              return;
            }
            id v31 = *(id *)(v83 + 8 * v28);
            BOOL v32 = __OFADD__(v28++, 1);
            if (v32) {
              goto LABEL_65;
            }
          }
          uint64_t v33 = v31;
          type metadata accessor for JournalEntryCollectionViewCell();
          uint64_t v34 = swift_dynamicCastClass();
          uint64_t v84 = v33;
          if (v34)
          {
            uint64_t v2 = (unsigned __int8 *)v34;
            id v35 = v33;
            [v2 v9[66].types];
            [v7 convertPoint:v2 fromCoordinateSpace:];
            v88.CGFloat x = v36;
            v88.CGFloat y = v37;
            v89.origin.CGFloat x = v20;
            v89.origin.CGFloat y = v22;
            v89.size.CGFloat width = v24;
            v89.size.CGFloat height = v26;
            if (CGRectContainsPoint(v89, v88))
            {
              id v80 = v35;
              uint64_t v38 = (uint64_t)sub_10037CC74(v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded]);
              uint64_t v85 = v38;
              if ((unint64_t)v38 >> 62)
              {
                if (v38 < 0) {
                  uint64_t v2 = (unsigned __int8 *)v38;
                }
                else {
                  uint64_t v2 = (unsigned __int8 *)(v38 & 0xFFFFFFFFFFFFFF8);
                }
                swift_bridgeObjectRetain();
                unint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
              }
              else
              {
                unint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              unint64_t v78 = v28;
              uint64_t v79 = v27;
              uint64_t v81 = v8;
              id v82 = v7;
              if (v39)
              {
                while (1)
                {
                  BOOL v32 = __OFSUB__(v39--, 1);
                  if (v32) {
                    break;
                  }
                  if ((v85 & 0xC000000000000001) != 0)
                  {
                    id v42 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if ((v39 & 0x8000000000000000) != 0) {
                      goto LABEL_63;
                    }
                    if (v39 >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_64;
                    }
                    id v42 = (char *)*(id *)(v85 + 32 + 8 * v39);
                  }
                  uint64_t v43 = v42;
                  uint64_t v44 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
                  long long v45 = *(void **)&v42[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView];
                  if (v45)
                  {
                    id v46 = v45;
                    id v47 = [v46 layer];
                    self;
                    unint64_t v48 = (void *)swift_dynamicCastObjCClass();
                    if (!v48) {

                    }
                    id v49 = [v48 player];
                    if (v49)
                    {
                      [v49 rate];
                      float v51 = v50;

                      if (v51 > 0.0)
                      {
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_bridgeObjectRelease();

                        swift_bridgeObjectRelease();
                        return;
                      }
                    }
                  }
                  NSString v52 = (uint64_t *)&v43[OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction];
                  uint64_t v53 = *(void *)&v43[OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction];
                  uint64_t *v52 = 0;
                  v52[1] = 0;
                  sub_10001ABB8(v53);
                  double v54 = *(void **)&v43[v44];
                  if (v54)
                  {
                    id v55 = v54;
                    id v56 = [v55 layer];
                    self;
                    id v57 = (void *)swift_dynamicCastObjCClass();
                    if (!v57) {

                    }
                    id v58 = [v57 player];
                    [v58 pause];

                    uint64_t v59 = *(void **)&v43[v44];
                    if (v59)
                    {
                      id v60 = v59;
                      id v61 = [v60 layer];
                      self;
                      uint64_t v62 = (void *)swift_dynamicCastObjCClass();
                      if (!v62) {

                      }
                      id v63 = [v62 player];
                      if (v63)
                      {
                        [v63 replaceCurrentItemWithPlayerItem:0];
                      }
                      uint64_t v64 = *(void **)&v43[v44];
                      if (v64)
                      {
                        id v65 = v64;
                        id v66 = [v65 layer];
                        self;
                        char v67 = (void *)swift_dynamicCastObjCClass();
                        if (!v67) {

                        }
                        [v67 setPlayer:0];
                      }
                    }
                  }
                  v43[OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded] = 0;
                  sub_1005DFB64();
                  uint64_t v68 = *v52;
                  uint64_t *v52 = 0;
                  v52[1] = 0;
                  sub_10001ABB8(v68);
                  NSString v41 = v43;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  uint64_t v2 = *(unsigned __int8 **)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if ((unint64_t)v2 >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  }
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                  uint64_t v69 = *(void **)&v41[OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset];
                  if (v69)
                  {
                    id v70 = v69;
                    uint64_t v71 = UUID.uuidString.getter();
                    uint64_t v2 = v72;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v30 = sub_1002A54A0(0, *((void *)v30 + 2) + 1, 1, v30);
                    }
                    unint64_t v74 = *((void *)v30 + 2);
                    unint64_t v73 = *((void *)v30 + 3);
                    if (v74 >= v73 >> 1) {
                      uint64_t v30 = sub_1002A54A0((char *)(v73 > 1), v74 + 1, 1, v30);
                    }
                    *((void *)v30 + 2) = v74 + 1;
                    uint64_t v40 = &v30[16 * v74];
                    *((void *)v40 + 4) = v71;
                    *((void *)v40 + 5) = v2;

                    NSString v41 = v70;
                  }

                  if (!v39) {
                    goto LABEL_55;
                  }
                }
                __break(1u);
LABEL_63:
                __break(1u);
LABEL_64:
                __break(1u);
LABEL_65:
                __break(1u);
                goto LABEL_66;
              }
LABEL_55:

              swift_bridgeObjectRelease();
              uint64_t v8 = v81;
              uint64_t v7 = v82;
              uint64_t v9 = &stru_1007D7000;
              unint64_t v28 = v78;
              uint64_t v27 = v79;
            }
            else
            {
            }
          }

          if (v28 == v27)
          {
            swift_release();
            uint64_t v75 = (void *)v87;
            goto LABEL_69;
          }
        }
      }
    }
    swift_release();
    uint64_t v75 = _swiftEmptyArrayStorage;
    uint64_t v30 = (char *)_swiftEmptyArrayStorage;
LABEL_69:
    sub_1000D6534((unint64_t)v75, (uint64_t)v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_10030AE38()
{
  unint64_t result = qword_10080A0D0;
  if (!qword_10080A0D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080A0D0);
  }
  return result;
}

uint64_t sub_10030AE78(void **a1, char *a2, id *a3, char *a4, void *a5)
{
  id v109 = a5;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v9 - 8);
  id v95 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v101 = (char *)&v93 - v12;
  __chkstk_darwin(v13);
  id v97 = (char *)&v93 - v14;
  __chkstk_darwin(v15);
  double v105 = (char *)&v93 - v16;
  uint64_t v106 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  double v93 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v96 = (char *)&v93 - v20;
  __chkstk_darwin(v21);
  id v94 = (char *)&v93 - v22;
  __chkstk_darwin(v23);
  id v104 = (char *)&v93 - v24;
  __chkstk_darwin(v25);
  id v99 = a4;
  uint64_t v100 = (char *)&v93 - v26;
  uint64_t v27 = a2 - (char *)a1;
  uint64_t v28 = a2 - (char *)a1 + 7;
  if (a2 - (char *)a1 >= 0) {
    uint64_t v28 = a2 - (char *)a1;
  }
  uint64_t v29 = v28 >> 3;
  uint64_t v30 = a2;
  id v98 = a3;
  uint64_t v31 = (char *)a3 - a2;
  uint64_t v32 = v31 / 8;
  id v110 = a1;
  id v113 = (char *)a1;
  double v112 = (void **)a4;
  if (v28 >> 3 >= v31 / 8)
  {
    if (v31 < -7) {
      goto LABEL_60;
    }
    id v63 = v99;
    unint64_t v64 = (unint64_t)v30;
    if (v99 != v30 || &v30[8 * v32] <= v99) {
      memmove(v99, v30, 8 * v32);
    }
    id v65 = &v63[8 * v32];
    id v111 = (void **)v65;
    id v113 = (char *)v64;
    if (v31 < 8 || (unint64_t)v110 >= v64)
    {
LABEL_59:
      sub_1000F1918(&v113, &v112, &v111);
      return 1;
    }
    uint64_t v100 = (char *)(v17 + 56);
    id v97 = (char *)(v17 + 48);
    id v94 = (char *)(v17 + 8);
    id v66 = v98 - 1;
    char v67 = (void **)v64;
    id v102 = (void **)(v17 + 32);
    while (1)
    {
      id v108 = (void **)v64;
      uint64_t v68 = (char *)(v66 + 1);
      uint64_t v69 = v65 - 8;
      id v70 = *--v67;
      uint64_t v71 = (char *)*((id *)v65 - 1);
      id v107 = v70;
      double v105 = v71;
      id v72 = [v109 indexPathForCell:v71];
      if (!v72) {
        break;
      }
      unint64_t v73 = v72;
      unint64_t v74 = v104;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v75 = (void (*)(char *, char *, uint64_t))*v102;
      id v103 = v66 + 1;
      id v76 = v101;
      uint64_t v77 = v106;
      v75(v101, v74, v106);
      id v98 = *(id **)v100;
      ((void (*)(char *, void, uint64_t, uint64_t))v98)(v76, 0, 1, v77);
      unint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))v97;
      int v79 = (*(uint64_t (**)(char *, uint64_t, uint64_t))v97)(v76, 1, v77);
      uint64_t v80 = (uint64_t)v76;
      uint64_t v68 = (char *)v103;
      if (v79 == 1) {
        goto LABEL_49;
      }
      v75(v96, v101, v77);
      id v81 = [v109 indexPathForCell:v107];
      uint64_t v82 = v77;
      if (!v81)
      {
        uint64_t v85 = v95;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v98)(v95, 1, 1, v82);
LABEL_48:
        (*(void (**)(char *, uint64_t))v94)(v96, v82);
        uint64_t v80 = (uint64_t)v85;
        uint64_t v68 = (char *)v103;
LABEL_49:
        sub_10030D0F0(v80);

        goto LABEL_50;
      }
      uint64_t v83 = v81;
      uint64_t v84 = v104;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v85 = v95;
      v75(v95, v84, v82);
      ((void (*)(char *, void, uint64_t, uint64_t))v98)(v85, 0, 1, v82);
      if (v78(v85, 1, v82) == 1) {
        goto LABEL_48;
      }
      uint64_t v86 = v93;
      v75(v93, v85, v82);
      unint64_t v87 = v96;
      LODWORD(v98) = static IndexPath.< infix(_:_:)();
      CGPoint v88 = *(void (**)(char *, uint64_t))v94;
      (*(void (**)(char *, uint64_t))v94)(v86, v82);
      v88(v87, v82);

      uint64_t v68 = (char *)v103;
      if (v98)
      {
        CGRect v89 = v99;
        if (v103 != v108 || v66 >= v108) {
          *id v66 = *v67;
        }
        id v113 = (char *)v67;
LABEL_57:
        id v91 = v110;
        if (v65 <= v89) {
          goto LABEL_59;
        }
        goto LABEL_58;
      }
LABEL_50:
      id v111 = (void **)(v65 - 8);
      CGRect v89 = v99;
      if (v68 < v65 || v66 >= (id *)v65)
      {
        *id v66 = *(id *)v69;
        char v67 = v108;
        v65 -= 8;
        goto LABEL_57;
      }
      id v91 = v110;
      if (v68 != v65) {
        *id v66 = *(id *)v69;
      }
      char v67 = v108;
      v65 -= 8;
      if (v69 <= v89) {
        goto LABEL_59;
      }
LABEL_58:
      --v66;
      unint64_t v64 = (unint64_t)v67;
      if (v67 <= v91) {
        goto LABEL_59;
      }
    }
    id v90 = v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v100)(v101, 1, 1, v106);
    uint64_t v80 = (uint64_t)v90;
    goto LABEL_49;
  }
  if (v27 >= -7)
  {
    uint64_t v33 = (void **)v99;
    uint64_t v34 = v110;
    id v35 = (id *)v30;
    if (v99 != (char *)v110 || &v110[v29] <= (void **)v99) {
      memmove(v99, v110, 8 * v29);
    }
    id v102 = &v33[v29];
    id v111 = v102;
    if (v27 >= 8 && v35 < v98)
    {
      CGFloat v36 = (void (**)(char *, char *, uint64_t))(v17 + 32);
      id v103 = (void **)(v17 + 56);
      id v101 = (char *)(v17 + 48);
      uint64_t v96 = (char *)(v17 + 8);
      while (1)
      {
        id v110 = v34;
        CGFloat v37 = *v33;
        id v38 = *v35;
        id v107 = v37;
        id v39 = [v109 indexPathForCell:v38];
        if (!v39) {
          break;
        }
        uint64_t v40 = v39;
        NSString v41 = v104;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        id v42 = *v36;
        uint64_t v43 = v36;
        long long v45 = v105;
        uint64_t v44 = v106;
        v42(v105, v41, v106);
        id v46 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v103;
        ((void (*)(char *, void, uint64_t, uint64_t))*v103)(v45, 0, 1, v44);
        id v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))v101;
        int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))v101)(v45, 1, v44);
        uint64_t v49 = (uint64_t)v45;
        CGFloat v36 = v43;
        if (v48 == 1) {
          goto LABEL_23;
        }
        id v108 = v35;
        v42(v100, v105, v44);
        id v50 = [v109 indexPathForCell:v107];
        uint64_t v51 = v44;
        if (!v50)
        {
          double v54 = v97;
          v46(v97, 1, 1, v51);
LABEL_22:
          (*(void (**)(char *, uint64_t))v96)(v100, v51);
          uint64_t v49 = (uint64_t)v54;
          id v35 = v108;
          goto LABEL_23;
        }
        NSString v52 = v50;
        uint64_t v53 = v104;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        double v54 = v97;
        id v55 = v53;
        CGFloat v36 = v43;
        v42(v97, v55, v51);
        v46(v54, 0, 1, v51);
        if (v47(v54, 1, v51) == 1) {
          goto LABEL_22;
        }
        id v56 = v94;
        v42(v94, v54, v51);
        id v57 = v100;
        char v58 = static IndexPath.< infix(_:_:)();
        uint64_t v59 = *(void (**)(char *, uint64_t))v96;
        (*(void (**)(char *, uint64_t))v96)(v56, v51);
        v59(v57, v51);

        id v35 = v108;
        if ((v58 & 1) == 0) {
          goto LABEL_24;
        }
        unint64_t v60 = (unint64_t)(v108 + 1);
        id v61 = v110;
        if (v110 < v108 || (unint64_t)v110 >= v60 || v110 != v108) {
          *id v110 = *v108;
        }
LABEL_27:
        uint64_t v34 = v61 + 1;
        id v113 = (char *)v34;
        if (v33 < v102)
        {
          id v35 = (id *)v60;
          if (v60 < (unint64_t)v98) {
            continue;
          }
        }
        goto LABEL_59;
      }
      uint64_t v62 = v105;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v103)(v105, 1, 1, v106);
      uint64_t v49 = (uint64_t)v62;
LABEL_23:
      sub_10030D0F0(v49);

LABEL_24:
      id v61 = v110;
      if (v110 != v33) {
        *id v110 = *v33;
      }
      double v112 = ++v33;
      unint64_t v60 = (unint64_t)v35;
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_60:

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10030B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  id v67 = a5;
  uint64_t v54 = a1;
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v8 - 8);
  char v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v52 - v11;
  uint64_t v12 = type metadata accessor for IndexPath();
  __chkstk_darwin(v12);
  id v56 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v65 = (char *)&v52 - v15;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v53 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *a4;
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    id v57 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v60 = v20;
    uint64_t v24 = v20 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v27 = *(void **)(v60 + 8 * a3);
      uint64_t v63 = v54;
      uint64_t v55 = v24;
      uint64_t v28 = (void **)v24;
      uint64_t v61 = a3;
      while (1)
      {
        unint64_t v64 = v28;
        uint64_t v29 = *v28;
        id v30 = v27;
        id v68 = v29;
        id v31 = [v67 indexPathForCell:v30];
        if (!v31) {
          break;
        }
        uint64_t v32 = v31;
        id v66 = v30;
        uint64_t v33 = v65;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v34 = *v21;
        id v35 = v59;
        (*v21)(v59, v33, v12);
        CGFloat v36 = *v22;
        (*v22)(v35, 0, 1, v12);
        CGFloat v37 = *v23;
        if ((*v23)(v35, 1, v12) == 1) {
          goto LABEL_18;
        }
        v34(v19, v35, v12);
        id v38 = [v67 indexPathForCell:v68];
        if (!v38)
        {
          id v35 = v58;
          v36(v58, 1, 1, v12);
LABEL_17:
          (*v57)(v19, v12);
LABEL_18:
          uint64_t v26 = (uint64_t)v35;
          a3 = v61;
          id v30 = v66;
          goto LABEL_5;
        }
        id v39 = v38;
        uint64_t v62 = v36;
        uint64_t v40 = v23;
        NSString v41 = v22;
        uint64_t v42 = v12;
        uint64_t v43 = v21;
        uint64_t v44 = v19;
        long long v45 = v65;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        id v35 = v58;
        id v46 = v45;
        uint64_t v19 = v44;
        uint64_t v21 = v43;
        uint64_t v12 = v42;
        uint64_t v22 = v41;
        uint64_t v23 = v40;
        v34(v58, v46, v12);
        v62(v35, 0, 1, v12);
        if (v37(v35, 1, v12) == 1) {
          goto LABEL_17;
        }
        id v47 = v56;
        v34(v56, v35, v12);
        char v48 = static IndexPath.< infix(_:_:)();
        uint64_t v49 = *v57;
        (*v57)(v47, v12);
        v49(v19, v12);

        a3 = v61;
        id v50 = v64;
        if ((v48 & 1) == 0) {
          goto LABEL_6;
        }
        if (!v60)
        {
          __break(1u);
          return;
        }
        uint64_t v51 = *v64;
        uint64_t v27 = v64[1];
        *unint64_t v64 = v27;
        v50[1] = v51;
        uint64_t v28 = v50 - 1;
        if (a3 == ++v63) {
          goto LABEL_6;
        }
      }
      uint64_t v25 = v59;
      (*v22)(v59, 1, 1, v12);
      uint64_t v26 = (uint64_t)v25;
LABEL_5:
      sub_10030D0F0(v26);

LABEL_6:
      ++a3;
      uint64_t v24 = v55 + 8;
      if (a3 == v53) {
        return;
      }
      continue;
    }
  }
}

void sub_10030BD18(uint64_t *a1, void *a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v4 - 8);
  v214 = (char *)&v193 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v216 = (char *)&v193 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v193 - v9;
  __chkstk_darwin(v11);
  v203 = (char *)&v193 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v193 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v193 - v17;
  uint64_t v217 = type metadata accessor for IndexPath();
  uint64_t v19 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  v213 = (char *)&v193 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v221 = (char *)&v193 - v22;
  __chkstk_darwin(v23);
  v199 = (char *)&v193 - v24;
  __chkstk_darwin(v25);
  v201 = (char *)&v193 - v26;
  __chkstk_darwin(v27);
  v196 = (char *)&v193 - v28;
  __chkstk_darwin(v29);
  v224 = (char *)&v193 - v30;
  __chkstk_darwin(v31);
  v198 = (char *)&v193 - v32;
  v200 = a1;
  Swift::Int v33 = a1[1];
  id v226 = a2;
  Swift::Int v34 = _minimumMergeRunLength(_:)(v33);
  if (v34 >= v33)
  {
    if (v33 < 0) {
      goto LABEL_171;
    }
    if (v33)
    {
      id v38 = v226;
      sub_10030B870(0, v33, 1, v200, v38);
    }
    else
    {
      id v38 = v226;
    }
    return;
  }
  if (v33 >= 0) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = v33 + 1;
  }
  if (v33 < -1) {
    goto LABEL_179;
  }
  Swift::Int v197 = v34;
  Swift::Int v204 = v33;
  if (v33 < 2)
  {
    id v39 = (char *)_swiftEmptyArrayStorage;
    uint64_t v228 = (uint64_t)_swiftEmptyArrayStorage;
    v208 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v33 != 1)
    {
      unint64_t v44 = _swiftEmptyArrayStorage[2];
LABEL_136:
      v211 = v39;
      if (v44 >= 2)
      {
        v174 = (char *)*v200;
        v227 = (char *)*v200;
        do
        {
          unint64_t v175 = v44 - 2;
          if (v44 < 2) {
            goto LABEL_166;
          }
          if (!v174) {
            goto LABEL_178;
          }
          uint64_t v176 = *(void *)&v211[16 * v175 + 32];
          uint64_t v177 = *(void *)&v211[16 * v44 + 24];
          v178 = (void **)&v174[8 * v176];
          v179 = &v174[8 * *(void *)&v211[16 * v44 + 16]];
          v180 = (id *)&v174[8 * v177];
          id v181 = v226;
          uint64_t v182 = v212;
          sub_10030AE78(v178, v179, v180, v208, v181);
          if (v182) {
            goto LABEL_148;
          }
          uint64_t v212 = 0;

          if (v177 < v176) {
            goto LABEL_167;
          }
          v183 = v211;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v183 = sub_1000F1E40((uint64_t)v183);
          }
          if (v175 >= *((void *)v183 + 2)) {
            goto LABEL_168;
          }
          v184 = &v183[16 * v175 + 32];
          *(void *)v184 = v176;
          *((void *)v184 + 1) = v177;
          unint64_t v185 = *((void *)v183 + 2);
          if (v44 > v185) {
            goto LABEL_169;
          }
          memmove(&v183[16 * v44 + 16], &v183[16 * v44 + 32], 16 * (v185 - v44));
          v211 = v183;
          *((void *)v183 + 2) = v185 - 1;
          unint64_t v44 = v185 - 1;
          v174 = v227;
        }
        while (v185 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v228 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      id v187 = v226;

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v36 = v35 >> 1;
    sub_10030AE38();
    uint64_t v37 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) = v36;
    v208 = (char *)((v37 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v228 = v37;
  }
  uint64_t v40 = 0;
  uint64_t v41 = *v200;
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  v225 = (id *)(v19 + 56);
  v223 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v215 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v194 = v41 + 16;
  uint64_t v195 = v41 - 8;
  id v39 = (char *)_swiftEmptyArrayStorage;
  v209 = v15;
  v210 = v10;
  v207 = v18;
  Swift::Int v43 = v204;
  uint64_t v218 = v41;
  v219 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  while (1)
  {
    Swift::Int v45 = v40 + 1;
    v211 = v39;
    uint64_t v205 = v40;
    if (v40 + 1 >= v43) {
      goto LABEL_57;
    }
    id v46 = *(void **)(v41 + 8 * v45);
    id v47 = *(void **)(v41 + 8 * v40);
    char v48 = v46;
    uint64_t v49 = v47;
    id v50 = [v226 indexPathForCell:v48];
    if (!v50)
    {
      v227 = (char *)*v225;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(v18, 1, 1, v217);
      goto LABEL_21;
    }
    uint64_t v51 = v50;
    v220 = v49;
    v206 = v48;
    uint64_t v52 = v224;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v53 = *v42;
    uint64_t v54 = v52;
    uint64_t v55 = v217;
    (*v42)(v18, v54, v217);
    v227 = (char *)*v225;
    ((void (*)(char *, void, uint64_t, uint64_t))v227)(v18, 0, 1, v55);
    id v56 = *v223;
    if ((*v223)(v18, 1, v55) == 1)
    {
      id v39 = v211;
      char v48 = v206;
      uint64_t v49 = v220;
LABEL_21:
      sub_10030D0F0((uint64_t)v18);
      LODWORD(v222) = 0;
      goto LABEL_28;
    }
    v53(v198, v18, v55);
    id v57 = [v226 indexPathForCell:v220];
    if (!v57)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(v15, 1, 1, v55);
LABEL_26:
      (*v215)(v198, v55);
      sub_10030D0F0((uint64_t)v15);
      LODWORD(v222) = 0;
      goto LABEL_27;
    }
    char v58 = v57;
    uint64_t v59 = v224;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v60 = v59;
    uint64_t v41 = v218;
    v53(v15, v60, v55);
    ((void (*)(char *, void, uint64_t, uint64_t))v227)(v15, 0, 1, v55);
    if (v56(v15, 1, v55) == 1) {
      goto LABEL_26;
    }
    uint64_t v61 = v196;
    v53(v196, v15, v55);
    uint64_t v62 = v198;
    LODWORD(v222) = static IndexPath.< infix(_:_:)();
    uint64_t v63 = *v215;
    (*v215)(v61, v55);
    v63(v62, v55);
LABEL_27:
    id v39 = v211;
    char v48 = v206;
    uint64_t v49 = v220;
LABEL_28:

    uint64_t v40 = v205;
    Swift::Int v45 = v205 + 2;
    if (v205 + 2 < v204)
    {
      unint64_t v64 = (id *)(v194 + 8 * v205);
      while (1)
      {
        v220 = (char *)v45;
        id v65 = *(v64 - 1);
        id v66 = *v64;
        id v67 = v65;
        id v68 = [v226 indexPathForCell:v66];
        if (!v68)
        {
          uint64_t v72 = (uint64_t)v203;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(v203, 1, 1, v217);
LABEL_34:
          sub_10030D0F0(v72);

          id v39 = v211;
          if (v222) {
            goto LABEL_48;
          }
          goto LABEL_42;
        }
        uint64_t v69 = v68;
        id v70 = v224;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v71 = *v219;
        uint64_t v72 = (uint64_t)v203;
        uint64_t v73 = v217;
        (*v219)(v203, v70, v217);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v227)(v72, 0, 1, v73);
        unint64_t v74 = *v223;
        if ((*v223)((char *)v72, 1, v73) == 1)
        {
          uint64_t v15 = v209;
          goto LABEL_34;
        }
        v71(v201, (char *)v72, v73);
        id v75 = [v226 indexPathForCell:v67];
        uint64_t v76 = v73;
        if (v75)
        {
          uint64_t v77 = v75;
          unint64_t v78 = v224;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v79 = (uint64_t)v210;
          v71(v210, v78, v76);
          uint64_t v80 = v79;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v227)(v79, 0, 1, v76);
          if (v74((char *)v79, 1, v76) != 1)
          {
            id v81 = v199;
            v71(v199, (char *)v79, v76);
            uint64_t v82 = v201;
            uint64_t v83 = v76;
            int v84 = static IndexPath.< infix(_:_:)();
            uint64_t v85 = *v215;
            (*v215)(v81, v83);
            v85(v82, v83);

            uint64_t v15 = v209;
            id v39 = v211;
            uint64_t v41 = v218;
            if ((v222 ^ v84))
            {
              uint64_t v18 = v207;
              uint64_t v42 = v219;
              Swift::Int v45 = (Swift::Int)v220;
LABEL_44:
              uint64_t v40 = v205;
              break;
            }
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v80 = (uint64_t)v210;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(v210, 1, 1, v73);
        }
        (*v215)(v201, v76);
        sub_10030D0F0(v80);

        uint64_t v15 = v209;
        id v39 = v211;
        uint64_t v41 = v218;
        if (v222)
        {
LABEL_48:
          uint64_t v18 = v207;
          uint64_t v42 = v219;
          Swift::Int v45 = (Swift::Int)v220;
          uint64_t v40 = v205;
          if ((uint64_t)v220 < v205) {
            goto LABEL_172;
          }
LABEL_49:
          if (v40 < v45)
          {
            uint64_t v86 = (uint64_t *)(v195 + 8 * v45);
            Swift::Int v87 = v40;
            Swift::Int v88 = v45;
            Swift::Int v89 = v87;
            id v90 = (uint64_t *)(v41 + 8 * v87);
            do
            {
              if (v89 != --v88)
              {
                if (!v41) {
                  goto LABEL_177;
                }
                uint64_t v91 = *v90;
                *id v90 = *v86;
                *uint64_t v86 = v91;
              }
              ++v89;
              --v86;
              ++v90;
            }
            while (v89 < v88);
            uint64_t v40 = v205;
          }
          goto LABEL_57;
        }
LABEL_42:
        Swift::Int v45 = (Swift::Int)(v220 + 1);
        ++v64;
        if ((char *)v204 == v220 + 1)
        {
          Swift::Int v45 = v204;
          uint64_t v18 = v207;
          uint64_t v42 = v219;
          goto LABEL_44;
        }
      }
    }
    if (v222)
    {
      if (v45 < v40) {
        goto LABEL_172;
      }
      goto LABEL_49;
    }
LABEL_57:
    if (v45 >= v204) {
      goto LABEL_84;
    }
    if (__OFSUB__(v45, v40)) {
      goto LABEL_170;
    }
    if (v45 - v40 >= v197)
    {
      uint64_t v40 = v205;
LABEL_84:
      if (v45 < v40) {
        goto LABEL_165;
      }
      goto LABEL_85;
    }
    Swift::Int v92 = v205 + v197;
    if (__OFADD__(v205, v197)) {
      goto LABEL_173;
    }
    if (v92 >= v204) {
      Swift::Int v92 = v204;
    }
    uint64_t v40 = v205;
    if (v92 < v205) {
      break;
    }
    if (v45 == v92) {
      goto LABEL_84;
    }
    uint64_t v202 = v92;
    double v93 = (void **)(v195 + 8 * v45);
    while (2)
    {
      uint64_t v96 = *(void **)(v41 + 8 * v45);
      uint64_t v97 = v40;
      v206 = v93;
      v220 = (char *)v45;
      while (1)
      {
        id v98 = *v93;
        id v99 = v96;
        v227 = v98;
        id v100 = [v226 indexPathForCell:v99];
        if (!v100)
        {
          uint64_t v94 = (uint64_t)v216;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v225)(v216, 1, 1, v217);
LABEL_67:
          sub_10030D0F0(v94);

          goto LABEL_68;
        }
        id v101 = v100;
        v222 = v99;
        id v102 = v224;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        id v103 = *v42;
        uint64_t v94 = (uint64_t)v216;
        id v104 = v102;
        uint64_t v105 = v217;
        (*v42)(v216, v104, v217);
        uint64_t v106 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v225;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))*v225)(v94, 0, 1, v105);
        id v107 = *v223;
        if ((*v223)((char *)v94, 1, v105) == 1) {
          goto LABEL_81;
        }
        v103(v221, (char *)v94, v105);
        id v108 = [v226 indexPathForCell:v227];
        if (!v108)
        {
          uint64_t v94 = (uint64_t)v214;
          v106(v214, 1, 1, v105);
LABEL_80:
          (*v215)(v221, v105);
LABEL_81:
          uint64_t v41 = v218;
          id v99 = v222;
          goto LABEL_67;
        }
        id v109 = v108;
        id v110 = v224;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v94 = (uint64_t)v214;
        id v111 = v110;
        uint64_t v42 = v219;
        v103(v214, v111, v105);
        v106((char *)v94, 0, 1, v105);
        if (v107((char *)v94, 1, v105) == 1) {
          goto LABEL_80;
        }
        double v112 = v213;
        v103(v213, (char *)v94, v105);
        id v113 = v221;
        char v114 = static IndexPath.< infix(_:_:)();
        id v115 = *v215;
        (*v215)(v112, v105);
        v115(v113, v105);

        if ((v114 & 1) == 0) {
          break;
        }
        uint64_t v41 = v218;
        id v95 = v220;
        if (!v218) {
          goto LABEL_175;
        }
        id v116 = *v93;
        uint64_t v96 = v93[1];
        *double v93 = v96;
        v93[1] = v116;
        --v93;
        if (v95 == (char *)++v97) {
          goto LABEL_69;
        }
      }
      uint64_t v41 = v218;
LABEL_68:
      id v95 = v220;
LABEL_69:
      Swift::Int v45 = (Swift::Int)(v95 + 1);
      double v93 = v206 + 1;
      uint64_t v40 = v205;
      if (v45 != v202) {
        continue;
      }
      break;
    }
    Swift::Int v45 = v202;
    uint64_t v15 = v209;
    uint64_t v18 = v207;
    id v39 = v211;
    if (v202 < v205) {
      goto LABEL_165;
    }
LABEL_85:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v220 = (char *)v45;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v39 = sub_1000F1750(0, *((void *)v39 + 2) + 1, 1, v39);
    }
    unint64_t v119 = *((void *)v39 + 2);
    unint64_t v118 = *((void *)v39 + 3);
    unint64_t v44 = v119 + 1;
    uint64_t v120 = v205;
    if (v119 >= v118 >> 1)
    {
      v173 = sub_1000F1750((char *)(v118 > 1), v119 + 1, 1, v39);
      uint64_t v120 = v205;
      id v39 = v173;
    }
    *((void *)v39 + 2) = v44;
    id v121 = v39 + 32;
    id v122 = &v39[16 * v119 + 32];
    *(void *)id v122 = v120;
    *((void *)v122 + 1) = v220;
    if (v119)
    {
      v211 = v39;
      v227 = v39 + 32;
      while (1)
      {
        unint64_t v123 = v44 - 1;
        if (v44 >= 4)
        {
          id v128 = &v121[16 * v44];
          uint64_t v129 = *((void *)v128 - 8);
          uint64_t v130 = *((void *)v128 - 7);
          BOOL v134 = __OFSUB__(v130, v129);
          uint64_t v131 = v130 - v129;
          if (v134) {
            goto LABEL_154;
          }
          uint64_t v133 = *((void *)v128 - 6);
          uint64_t v132 = *((void *)v128 - 5);
          BOOL v134 = __OFSUB__(v132, v133);
          uint64_t v126 = v132 - v133;
          char v127 = v134;
          if (v134) {
            goto LABEL_155;
          }
          unint64_t v135 = v44 - 2;
          id v136 = &v121[16 * v44 - 32];
          uint64_t v138 = *(void *)v136;
          uint64_t v137 = *((void *)v136 + 1);
          BOOL v134 = __OFSUB__(v137, v138);
          uint64_t v139 = v137 - v138;
          if (v134) {
            goto LABEL_157;
          }
          BOOL v134 = __OFADD__(v126, v139);
          uint64_t v140 = v126 + v139;
          if (v134) {
            goto LABEL_160;
          }
          if (v140 >= v131)
          {
            v158 = &v121[16 * v123];
            uint64_t v160 = *(void *)v158;
            uint64_t v159 = *((void *)v158 + 1);
            BOOL v134 = __OFSUB__(v159, v160);
            uint64_t v161 = v159 - v160;
            if (v134) {
              goto LABEL_164;
            }
            BOOL v151 = v126 < v161;
            goto LABEL_122;
          }
        }
        else
        {
          if (v44 != 3)
          {
            uint64_t v152 = *((void *)v39 + 4);
            uint64_t v153 = *((void *)v39 + 5);
            BOOL v134 = __OFSUB__(v153, v152);
            uint64_t v145 = v153 - v152;
            char v146 = v134;
            goto LABEL_116;
          }
          uint64_t v125 = *((void *)v39 + 4);
          uint64_t v124 = *((void *)v39 + 5);
          BOOL v134 = __OFSUB__(v124, v125);
          uint64_t v126 = v124 - v125;
          char v127 = v134;
        }
        if (v127) {
          goto LABEL_156;
        }
        unint64_t v135 = v44 - 2;
        v141 = &v121[16 * v44 - 32];
        uint64_t v143 = *(void *)v141;
        uint64_t v142 = *((void *)v141 + 1);
        BOOL v144 = __OFSUB__(v142, v143);
        uint64_t v145 = v142 - v143;
        char v146 = v144;
        if (v144) {
          goto LABEL_159;
        }
        uint64_t v147 = &v121[16 * v123];
        uint64_t v149 = *(void *)v147;
        uint64_t v148 = *((void *)v147 + 1);
        BOOL v134 = __OFSUB__(v148, v149);
        uint64_t v150 = v148 - v149;
        if (v134) {
          goto LABEL_162;
        }
        if (__OFADD__(v145, v150)) {
          goto LABEL_163;
        }
        if (v145 + v150 >= v126)
        {
          BOOL v151 = v126 < v150;
LABEL_122:
          if (v151) {
            unint64_t v123 = v135;
          }
          goto LABEL_124;
        }
LABEL_116:
        if (v146) {
          goto LABEL_158;
        }
        id v154 = &v121[16 * v123];
        uint64_t v156 = *(void *)v154;
        uint64_t v155 = *((void *)v154 + 1);
        BOOL v134 = __OFSUB__(v155, v156);
        uint64_t v157 = v155 - v156;
        if (v134) {
          goto LABEL_161;
        }
        if (v157 < v145) {
          goto LABEL_15;
        }
LABEL_124:
        unint64_t v162 = v123 - 1;
        if (v123 - 1 >= v44)
        {
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
          goto LABEL_174;
        }
        if (!v41) {
          goto LABEL_176;
        }
        v163 = &v121[16 * v162];
        uint64_t v164 = *(void *)v163;
        unint64_t v165 = v123;
        v166 = &v121[16 * v123];
        uint64_t v167 = *(void *)v166;
        uint64_t v168 = *((void *)v166 + 1);
        v222 = (void **)(v41 + 8 * *(void *)v163);
        v169 = (char *)(v41 + 8 * v167);
        id v170 = v226;
        uint64_t v171 = v212;
        sub_10030AE78(v222, v169, (id *)(v41 + 8 * v168), v208, v170);
        if (v171)
        {
LABEL_148:
          swift_bridgeObjectRelease();
          id v186 = v226;

          *(void *)((v228 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()();

          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v212 = 0;

        if (v168 < v164) {
          goto LABEL_151;
        }
        id v39 = v211;
        if (v165 > *((void *)v211 + 2)) {
          goto LABEL_152;
        }
        *(void *)v163 = v164;
        *(void *)&v227[16 * v162 + 8] = v168;
        unint64_t v172 = *((void *)v39 + 2);
        if (v165 >= v172) {
          goto LABEL_153;
        }
        unint64_t v44 = v172 - 1;
        memmove(v166, v166 + 16, 16 * (v172 - 1 - v165));
        id v121 = v227;
        *((void *)v39 + 2) = v172 - 1;
        uint64_t v15 = v209;
        uint64_t v18 = v207;
        uint64_t v41 = v218;
        uint64_t v42 = v219;
        if (v172 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v44 = 1;
LABEL_15:
    Swift::Int v43 = v204;
    uint64_t v40 = (uint64_t)v220;
    if ((uint64_t)v220 >= v204) {
      goto LABEL_136;
    }
  }
LABEL_174:
  __break(1u);
LABEL_175:
  id v188 = v226;

  __break(1u);
LABEL_176:
  id v189 = v226;

  __break(1u);
LABEL_177:
  id v190 = v226;

  __break(1u);
LABEL_178:
  id v191 = v226;

  __break(1u);
LABEL_179:
  id v192 = v226;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10030D050(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_1000F93C0(v3);
    *a1 = v3;
  }
  uint64_t v6 = *(void *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  id v7 = v4;
  sub_10030BD18(v8, v7);

  specialized ContiguousArray._endMutation()();
}

uint64_t sub_10030D0F0(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10030D150()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100807C80);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100807C80);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10030D218(double a1)
{
  if (qword_1007F6DC0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_100807C80);
  oschar log = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v5 + 56) = &type metadata for Double;
    *(void *)(v5 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v5 + 32) = Current - a1;
    uint64_t v7 = String.init(format:_:)();
    sub_10011EA98(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "JournalSortingUtilities.updateSortingColumnsForAllEntries completed in %s seconds", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10030D41C(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v65 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v54 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v54 - v16;
  type metadata accessor for JournalEntryMO();
  unint64_t v18 = NSManagedObjectContext.fetch<A>(_:)();
  if (v1)
  {
LABEL_2:
    if (qword_1007F6DC0 != -1) {
      goto LABEL_41;
    }
    goto LABEL_3;
  }
  unint64_t v25 = v18;
  id v67 = v17;
  id v57 = v14;
  char v58 = v11;
  uint64_t v61 = v5;
  uint64_t v62 = v8;
  unint64_t v55 = v18 >> 62;
  id v56 = a1;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v26 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v27 = (uint64_t)v62;
  uint64_t v28 = v65;
  if (!v26)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
LABEL_28:
    id v46 = v56;
    if (objc_msgSend(v56, "hasChanges", v54))
    {
      id v68 = 0;
      if (![v46 save:&v68])
      {
        id v53 = v68;
        swift_bridgeObjectRelease();
        _convertNSErrorToError(_:)();

        swift_willThrow();
        goto LABEL_2;
      }
      id v47 = v68;
    }
    if (qword_1007F6DC0 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_100026A54(v48, (uint64_t)qword_100807C80);
    swift_bridgeObjectRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 134218240;
      id v68 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 12) = 2048;
      if (v55)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = (void *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = *(void **)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      id v68 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "JournalSortingUtilities.updateSortingColumnsForAllEntries updated %ld of %ld entries", (uint8_t *)v51, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  uint64_t v54 = 0;
  if (v26 < 1) {
    __break(1u);
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v65 = v26;
  unint64_t v66 = v25 & 0xC000000000000001;
  uint64_t v31 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  uint64_t v59 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  unint64_t v60 = v25;
  uint64_t v63 = (void (**)(char *, uint64_t))(v28 + 8);
  unint64_t v64 = (void (**)(char *, uint64_t, uint64_t))(v28 + 32);
  while (1)
  {
    if (v66) {
      id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v32 = *(id *)(v25 + 8 * v30 + 32);
    }
    Swift::Int v33 = v32;
    sub_10030DFA0(v27);
    Swift::Int v34 = *v31;
    if ((*v31)(v27, 1, v9) == 1)
    {
      sub_10001457C(v27, (uint64_t *)&unk_1007FC470);
      goto LABEL_11;
    }
    uint64_t v35 = *v64;
    (*v64)(v67, v27, v9);
    id v36 = [v33 momentDateForSorting];
    if (!v36) {
      break;
    }
    uint64_t v37 = v36;
    id v38 = v58;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v39 = (uint64_t)v61;
    v35(v61, (uint64_t)v38, v9);
    (*v59)(v39, 0, 1, v9);
    if (v34(v39, 1, v9) == 1) {
      goto LABEL_22;
    }
    uint64_t v40 = v57;
    v35(v57, v39, v9);
    char v41 = static Date.== infix(_:_:)();
    uint64_t v42 = *v63;
    (*v63)(v40, v9);
    unint64_t v25 = v60;
    if ((v41 & 1) == 0) {
      goto LABEL_23;
    }
    v42(v67, v9);
    uint64_t v27 = (uint64_t)v62;
LABEL_11:

LABEL_12:
    if (v65 == ++v30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  uint64_t v39 = (uint64_t)v61;
  (*v59)((uint64_t)v61, 1, 1, v9);
LABEL_22:
  sub_10001457C(v39, (uint64_t *)&unk_1007FC470);
  unint64_t v25 = v60;
LABEL_23:
  Swift::Int v43 = v67;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v33 setMomentDateForSorting:isa];

  (*v63)(v43, v9);
  if (!__OFADD__(v29++, 1))
  {
    uint64_t v27 = (uint64_t)v62;
    goto LABEL_12;
  }
  __break(1u);
LABEL_41:
  swift_once();
LABEL_3:
  uint64_t v19 = type metadata accessor for Logger();
  sub_100026A54(v19, (uint64_t)qword_100807C80);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138412290;
    swift_errorRetain();
    uint64_t v24 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v68 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "JournalSortingUtilities.updateSortingColumnsForAllEntries error %@", v22, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_10030DC34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v30 = (char *)&v29 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v29 - v15;
  sub_10030DFA0((uint64_t)v7);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v17(v7, 1, v8) == 1)
  {
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
    return 0;
  }
  uint64_t v19 = *(void (**)(void))(v9 + 32);
  uint64_t v29 = v16;
  uint64_t v20 = v19;
  v19();
  id v21 = [v0 momentDateForSorting];
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
    goto LABEL_9;
  }
  uint64_t v22 = v21;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = v20;
  ((void (*)(char *, char *, uint64_t))v20)(v4, v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  if (v17(v4, 1, v8) == 1)
  {
LABEL_9:
    sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FC470);
    unint64_t v25 = v29;
    goto LABEL_10;
  }
  uint64_t v24 = v30;
  ((void (*)(char *, char *, uint64_t))v23)(v30, v4, v8);
  unint64_t v25 = v29;
  char v26 = static Date.== infix(_:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27(v24, v8);
  if (v26)
  {
    v27(v25, v8);
    return 0;
  }
LABEL_10:
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v1 setMomentDateForSorting:isa];

  (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v8);
  return 1;
}

uint64_t type metadata accessor for JournalSortingUtilities()
{
  return self;
}

uint64_t sub_10030DFA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v148 = a1;
  uint64_t v139 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v139);
  uint64_t v138 = (void *)((char *)v127 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = sub_100010218(&qword_1007F9E10);
  char v146 = *(char **)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v4 = (char *)v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v142);
  v141 = (void *)((char *)v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v140 = sub_100010218((uint64_t *)&unk_100804090);
  *(void *)&long long v136 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v152 = (uint64_t)v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v145);
  BOOL v144 = (void *)((char *)v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v143 = sub_100010218((uint64_t *)&unk_100804080);
  unint64_t v135 = *(char **)(v143 - 8);
  __chkstk_darwin(v143);
  v158 = (char *)v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v127 - v13;
  __chkstk_darwin(v15);
  uint64_t v150 = (uint64_t)v127 - v16;
  __chkstk_darwin(v17);
  uint64_t v151 = (uint64_t)v127 - v18;
  __chkstk_darwin(v19);
  uint64_t v153 = (uint64_t)v127 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v127 - v22;
  uint64_t v24 = type metadata accessor for Date();
  unint64_t v25 = *(void **)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v133 = (char *)v127 - v29;
  __chkstk_darwin(v30);
  BOOL v134 = (char *)v127 - v31;
  __chkstk_darwin(v32);
  Swift::Int v34 = (char *)v127 - v33;
  *(void *)&double v36 = __chkstk_darwin(v35).n128_u64[0];
  uint64_t v147 = (char *)v127 - v37;
  id v38 = [v1 bundleDate:v36];
  uint64_t v149 = v25;
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v132 = v27;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v40 = v25 + 4;
    char v41 = (void (*)(char *, char *, uint64_t))v25[4];
    v41(v23, v34, v24);
    uint64_t v42 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25[7];
    uint64_t v156 = v25 + 7;
    uint64_t v157 = v42;
    v42((uint64_t)v23, 0, 1, v24);
    id v154 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v25[6];
    uint64_t v155 = v25 + 6;
    if (v154((uint64_t)v23, 1, v24) != 1)
    {
      uint64_t v162 = v24;
      v41(v147, v23, v24);
      id v43 = v1;
      id v44 = [v43 managedObjectContext];
      Swift::Int v45 = v41;
      if (!v44) {
        id v44 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      uint64_t v46 = sub_10057F170(v43, 0, 0, v44);
      id v47 = (uint64_t *)(v46 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      uint64_t v48 = *v47;
      uint64_t v49 = v157;
      if ((unint64_t)*v47 >> 62)
      {
LABEL_74:
        swift_bridgeObjectRetain();
        uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
        if (v50) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v50 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v50)
        {
LABEL_7:
          v127[1] = v46;
          unint64_t v161 = v48 & 0xC000000000000001;
          uint64_t v130 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
          uint64_t v129 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56);
          id v128 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56);
          uint64_t v51 = 4;
          long long v136 = xmmword_1006D6A80;
          unint64_t v135 = "";
          uint64_t v131 = "intelligentToolbox";
          char v146 = v4;
          uint64_t v159 = v50;
          uint64_t v160 = v45;
          while (1)
          {
            if (v161) {
              id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v52 = *(id *)(v48 + 8 * v51);
            }
            id v53 = v52;
            uint64_t v46 = v51 - 3;
            if (__OFADD__(v51 - 4, 1))
            {
              __break(1u);
              goto LABEL_74;
            }
            uint64_t v54 = v40;
            switch(*((unsigned char *)v52 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_source))
            {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
                char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v55 & 1) == 0) {
                  goto LABEL_8;
                }
                break;
              default:
                swift_bridgeObjectRelease();
                break;
            }
            _s10PhotoAssetCMa(0);
            uint64_t v56 = swift_dynamicCastClass();
            uint64_t v57 = (uint64_t)v158;
            if (v56) {
              break;
            }
LABEL_30:
            _s14LivePhotoAssetCMa(0);
            uint64_t v73 = swift_dynamicCastClass();
            if (!v73) {
              goto LABEL_42;
            }
            uint64_t v74 = v73;
            uint64_t v4 = (char *)OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
            if (*(void *)(v73 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
            {
              id v75 = v53;
            }
            else
            {
              uint64_t v76 = *(void **)(v73 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
              if (v76)
              {
                id v77 = v53;
                id v78 = [v76 assetMetaData];
                if (v78)
                {
                  uint64_t v79 = v78;
                  uint64_t v80 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v82 = v81;

                  uint64_t v83 = (uint64_t)v141;
                  uint64_t *v141 = v80;
                  *(void *)(v83 + 8) = v82;
                  uint64_t v49 = v157;
                  swift_storeEnumTagMultiPayload();
                  sub_100010218(&qword_1007F99C0);
                  uint64_t v84 = swift_allocObject();
                  (*v129)(v84 + *(void *)(*(void *)v84 + 104), 1, 1, v140);
                  *(_OWORD *)(v84 + *(void *)(*(void *)v84 + 112)) = v136;
                  sub_10002C4EC(v83, v84 + *(void *)(*(void *)v84 + 120), (uint64_t *)&unk_10080F2B0);
                  *(void *)&v4[v74] = v84;
                  swift_release();
                }
                if (!*(void *)&v4[v74])
                {
LABEL_56:
                  uint64_t v105 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
                  uint64_t v85 = v152;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v152, 1, 1, v105);

                  goto LABEL_38;
                }
              }
              else
              {
                id v104 = v53;
                if (!*(void *)&v4[v74]) {
                  goto LABEL_56;
                }
              }
            }
            swift_retain();
            uint64_t v85 = v152;
            sub_1000398E0(v152);

            swift_release();
LABEL_38:
            uint64_t v86 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 48))(v85, 1, v86) == 1)
            {
              sub_10001457C(v85, (uint64_t *)&unk_100804090);
              uint64_t v71 = v151;
              v49(v151, 1, 1, v162);
            }
            else
            {
              uint64_t v87 = v85 + *(int *)(v86 + 20);
              uint64_t v71 = v151;
              sub_100045944(v87, v151);
              sub_1001905C4(v85, _s14LivePhotoAssetC13LivePhotoDataVMa);
              if (v154(v71, 1, v162) != 1)
              {
                swift_bridgeObjectRelease();

                swift_release();
                uint64_t v118 = v162;
                ((void (*)(char *, uint64_t))v149[1])(v147, v162);
                unint64_t v119 = &v164;
                goto LABEL_72;
              }
            }
            sub_10001457C(v71, (uint64_t *)&unk_1007FC470);
LABEL_42:
            _s10VideoAssetCMa(0);
            uint64_t v88 = swift_dynamicCastClass();
            if (!v88)
            {
LABEL_8:

              goto LABEL_9;
            }
            uint64_t v89 = v88;
            uint64_t v4 = (char *)OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
            if (*(void *)(v88 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
            {
              id v90 = v53;
            }
            else
            {
              uint64_t v91 = *(void **)(v88 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
              if (v91)
              {
                id v92 = v53;
                id v93 = [v91 assetMetaData];
                if (v93)
                {
                  uint64_t v94 = v93;
                  uint64_t v95 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v97 = v96;

                  uint64_t v98 = (uint64_t)v138;
                  *uint64_t v138 = v95;
                  *(void *)(v98 + 8) = v97;
                  uint64_t v49 = v157;
                  swift_storeEnumTagMultiPayload();
                  sub_100010218((uint64_t *)&unk_10080F2D0);
                  uint64_t v99 = swift_allocObject();
                  (*v128)(v99 + *(void *)(*(void *)v99 + 104), 1, 1, v137);
                  *(_OWORD *)(v99 + *(void *)(*(void *)v99 + 112)) = v136;
                  sub_10002C4EC(v98, v99 + *(void *)(*(void *)v99 + 120), (uint64_t *)&unk_10080F2A0);
                  *(void *)&v4[v89] = v99;
                  swift_release();
                }
                if (!*(void *)&v4[v89])
                {
LABEL_58:
                  uint64_t v107 = _s10VideoAssetC9VideoDataVMa(0);
                  uint64_t v100 = (uint64_t)v146;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v146, 1, 1, v107);

                  goto LABEL_50;
                }
              }
              else
              {
                id v106 = v53;
                if (!*(void *)&v4[v89]) {
                  goto LABEL_58;
                }
              }
            }
            swift_retain();
            uint64_t v100 = (uint64_t)v146;
            sub_100039C14((uint64_t)v146);

            swift_release();
LABEL_50:
            uint64_t v101 = _s10VideoAssetC9VideoDataVMa(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v100, 1, v101) == 1)
            {
              sub_10001457C(v100, &qword_1007F9E10);
              uint64_t v71 = v150;
              v49(v150, 1, 1, v162);
            }
            else
            {
              uint64_t v102 = v100 + *(int *)(v101 + 20);
              uint64_t v71 = v150;
              sub_100045944(v102, v150);
              sub_1001905C4(v100, _s10VideoAssetC9VideoDataVMa);
              if (v154(v71, 1, v162) != 1)
              {
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v118 = v162;
                ((void (*)(char *, uint64_t))v149[1])(v147, v162);
                unint64_t v119 = &v163;
                goto LABEL_72;
              }
            }
            sub_10001457C(v71, (uint64_t *)&unk_1007FC470);
LABEL_9:
            uint64_t v40 = v54;
            ++v51;
            Swift::Int v45 = v160;
            if (v46 == v159) {
              goto LABEL_75;
            }
          }
          uint64_t v58 = v56;
          uint64_t v4 = (char *)OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
          if (*(void *)(v56 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
          {
            id v59 = v53;
          }
          else
          {
            unint64_t v60 = *(void **)(v56 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
            if (v60)
            {
              id v61 = v53;
              id v62 = [v60 assetMetaData];
              if (v62)
              {
                uint64_t v63 = v62;
                uint64_t v64 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v66 = v65;

                uint64_t v67 = (uint64_t)v144;
                *BOOL v144 = v64;
                *(void *)(v67 + 8) = v66;
                uint64_t v49 = v157;
                swift_storeEnumTagMultiPayload();
                sub_100010218((uint64_t *)&unk_10080F2E0);
                uint64_t v68 = swift_allocObject();
                (*v130)(v68 + *(void *)(*(void *)v68 + 104), 1, 1, v143);
                *(_OWORD *)(v68 + *(void *)(*(void *)v68 + 112)) = v136;
                sub_10002C4EC(v67, v68 + *(void *)(*(void *)v68 + 120), (uint64_t *)&unk_10080F2C0);
                *(void *)&v4[v58] = v68;
                swift_release();
              }
            }
            else
            {
              id v69 = v53;
            }
            uint64_t v57 = (uint64_t)v158;
            if (!*(void *)&v4[v58])
            {
              uint64_t v103 = _s10PhotoAssetC9PhotoDataVMa(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v57, 1, 1, v103);

              goto LABEL_26;
            }
          }
          swift_retain();
          sub_1000395AC(v57);

          swift_release();
LABEL_26:
          uint64_t v70 = _s10PhotoAssetC9PhotoDataVMa(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v57, 1, v70) == 1)
          {
            sub_10001457C(v57, (uint64_t *)&unk_100804080);
            uint64_t v71 = v153;
            v49(v153, 1, 1, v162);
          }
          else
          {
            uint64_t v72 = v57 + *(int *)(v70 + 20);
            uint64_t v71 = v153;
            sub_100045944(v72, v153);
            sub_1001905C4(v57, _s10PhotoAssetC9PhotoDataVMa);
            if (v154(v71, 1, v162) != 1)
            {
              swift_bridgeObjectRelease();

              swift_release();
              uint64_t v118 = v162;
              ((void (*)(char *, uint64_t))v149[1])(v147, v162);
              unint64_t v119 = &v165;
LABEL_72:
              uint64_t v120 = *((void *)v119 - 32);
              id v121 = (void (*)(uint64_t, uint64_t, uint64_t))v160;
              v160((char *)v120, (char *)v71, v118);
              uint64_t v122 = v148;
              v121(v148, v120, v118);
              uint64_t v123 = v122;
              uint64_t v124 = v118;
              return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v49)(v123, 0, 1, v124);
            }
          }
          sub_10001457C(v71, (uint64_t *)&unk_1007FC470);
          goto LABEL_30;
        }
      }
LABEL_75:
      swift_release();
      uint64_t v125 = v148;
      swift_bridgeObjectRelease();
      uint64_t v126 = v162;
      v45((char *)v125, v147, v162);
      uint64_t v123 = v125;
      uint64_t v124 = v126;
      return ((uint64_t (*)(void, void, void, void))v49)(v123, 0, 1, v124);
    }
  }
  else
  {
    uint64_t v157 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25[7];
    v157((uint64_t)v23, 1, 1, v24);
  }
  sub_10001457C((uint64_t)v23, (uint64_t *)&unk_1007FC470);
  id v108 = [v1 entryDate];
  if (v108)
  {
    id v109 = v108;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v110 = v149;
    id v111 = (void (*)(char *, char *, uint64_t))v149[4];
    v111(v14, v34, v24);
    v157((uint64_t)v14, 0, 1, v24);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v110[6])(v14, 1, v24) != 1)
    {
      uint64_t v112 = v148;
      v111((char *)v148, v14, v24);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v157)(v112, 0, 1, v24);
    }
  }
  else
  {
    v157((uint64_t)v14, 1, 1, v24);
  }
  id v114 = [v1 createdDate];
  if (v114)
  {
    id v115 = v114;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v116 = 0;
  }
  else
  {
    uint64_t v116 = 1;
  }
  uint64_t v117 = v148;
  v157((uint64_t)v11, v116, 1, v24);
  sub_10002C4EC((uint64_t)v11, v117, (uint64_t *)&unk_1007FC470);
  return sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
}

uint64_t sub_10030F40C(char a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  *(unsigned char *)(v2 + 88) = a1;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = *(void *)(v3 - 8);
  *(void *)(v2 + 40) = swift_task_alloc();
  return _swift_task_switch(sub_10030F4D0, 0, 0);
}

uint64_t sub_10030F4D0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 88);
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v0 + 48) = v3;
  id v4 = [v1 newBackgroundContext];
  *(void *)(v0 + 56) = v4;
  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithEntityName:v6];
  *(void *)(v0 + 64) = v7;

  if ((v2 & 1) == 0)
  {
    sub_1000FBDC8();
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_10001B2C0();
    *(void *)(v8 + 32) = 0xD000000000000014;
    *(void *)(v8 + 40) = 0x80000001006989A0;
    uint64_t v9 = NSPredicate.init(format:_:)();
    [v7 setPredicate:v9];
  }
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 24);
  [v7 setFetchBatchSize:300];
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D70D0;
  *(void *)(v13 + 32) = 0xD000000000000014;
  *(void *)(v13 + 40) = 0x80000001006989A0;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = 0x6144656C646E7562;
  *(void *)(v13 + 72) = 0xEA00000000006574;
  *(void *)(v13 + 88) = &type metadata for String;
  *(void *)(v13 + 96) = 0x7461447972746E65;
  *(void *)(v13 + 104) = 0xE900000000000065;
  *(void *)(v13 + 152) = &type metadata for String;
  *(void *)(v13 + 120) = &type metadata for String;
  *(void *)(v13 + 128) = 0x4464657461657263;
  *(void *)(v13 + 136) = 0xEB00000000657461;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 setPropertiesToFetch:isa];

  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 72) = v15;
  *(void *)(v15 + 16) = v4;
  *(void *)(v15 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v12);
  v4;
  id v16 = v7;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_10030F814;
  uint64_t v18 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v17, v18, sub_10030FA4C, v15, (char *)&type metadata for () + 8);
}

uint64_t sub_10030F814()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 32);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10030F988, 0, 0);
}

uint64_t sub_10030F988()
{
  uint64_t v1 = *(void **)(v0 + 64);
  double v2 = *(double *)(v0 + 48);

  sub_10030D218(v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10030FA0C()
{
  return swift_deallocObject();
}

void sub_10030FA4C()
{
  sub_10030D41C(*(void **)(v0 + 16));
}

uint64_t sub_10030FA68@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v20 = type metadata accessor for WidgetFamily();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
      uint64_t v21 = type metadata accessor for CanvasStartingState();
      uint64_t v22 = a2 + *(int *)(v21 + 24);
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
      uint64_t v24 = (void *)(a2 + *(int *)(v21 + 20));
      uint64_t v8 = (int *)(v21 + 28);
      *uint64_t v24 = 0;
      v24[1] = 0;
      char v9 = 33;
      break;
    case 2:
      uint64_t v10 = type metadata accessor for WidgetFamily();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
      uint64_t v11 = type metadata accessor for CanvasStartingState();
      uint64_t v12 = a2 + *(int *)(v11 + 24);
      uint64_t v13 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
      uint64_t v14 = (void *)(a2 + *(int *)(v11 + 20));
      uint64_t v8 = (int *)(v11 + 28);
      void *v14 = 0;
      v14[1] = 0;
      char v9 = 96;
      break;
    case 3:
      uint64_t v15 = type metadata accessor for WidgetFamily();
      char v9 = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
      uint64_t v16 = type metadata accessor for CanvasStartingState();
      uint64_t v17 = (void *)(a2 + *(int *)(v16 + 20));
      *uint64_t v17 = 0;
      v17[1] = 0;
      uint64_t v18 = a2 + *(int *)(v16 + 24);
      uint64_t v19 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
      uint64_t v8 = (int *)(v16 + 28);
      break;
    default:
      uint64_t v3 = type metadata accessor for WidgetFamily();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 1, 1, v3);
      uint64_t v4 = type metadata accessor for CanvasStartingState();
      uint64_t v5 = a2 + *(int *)(v4 + 24);
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
      id v7 = (void *)(a2 + *(int *)(v4 + 20));
      uint64_t v8 = (int *)(v4 + 28);
      *id v7 = 0;
      v7[1] = 0;
      char v9 = 65;
      break;
  }
  *(unsigned char *)(a2 + *v8) = v9;
  uint64_t v25 = type metadata accessor for AppLaunchAction();
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);

  return v26(a2, 0, 1, v25);
}

unint64_t sub_10030FDD8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100794538, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10030FE24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    if (!(*(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 40))(ObjectType, v10))
    {
      return swift_unknownObjectRelease();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v12 = *(void *)(v2 + 24);
      uint64_t v13 = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v12 + 32))(&v28, v13, v12);
      swift_unknownObjectRelease();
      uint64_t v14 = *((void *)&v29 + 1);
      if (*((void *)&v29 + 1))
      {
        uint64_t v15 = v30;
        sub_10002E0BC(&v28, *((uint64_t *)&v29 + 1));
        uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
        uint64_t v18 = v17;
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v28);
        if (!a1) {
          goto LABEL_6;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
    }
    sub_1001B4990((uint64_t)&v28);
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    if (!a1)
    {
LABEL_6:
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      if (!v18)
      {
LABEL_20:
        if (v20) {
          goto LABEL_21;
        }
        return swift_unknownObjectRelease();
      }
LABEL_15:
      if (!v20)
      {
LABEL_21:
        swift_bridgeObjectRelease();
LABEL_24:
        uint64_t v25 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
        type metadata accessor for MainActor();
        swift_unknownObjectRetain();
        uint64_t v26 = static MainActor.shared.getter();
        uint64_t v27 = (void *)swift_allocObject();
        v27[2] = v26;
        v27[3] = &protocol witness table for MainActor;
        v27[4] = v9;
        v27[5] = v10;
        sub_100328C78((uint64_t)v7, (uint64_t)&unk_100807DE0, (uint64_t)v27);
        swift_unknownObjectRelease();
        return swift_release();
      }
      if (v16 == v19 && v18 == v20)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_24;
      }
      return swift_unknownObjectRelease();
    }
LABEL_13:
    uint64_t v21 = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 32))(&v28, v21, a2);
    uint64_t v19 = *((void *)&v29 + 1);
    if (*((void *)&v29 + 1))
    {
      uint64_t v22 = v30;
      sub_10002E0BC(&v28, *((uint64_t *)&v29 + 1));
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v19, v22);
      uint64_t v20 = v23;
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v28);
      if (!v18) {
        goto LABEL_20;
      }
    }
    else
    {
      sub_1001B4990((uint64_t)&v28);
      uint64_t v20 = 0;
      if (!v18) {
        goto LABEL_20;
      }
    }
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_100310198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a1;
  v5[3] = type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a5 + 88) + **(int **)(a5 + 88));
  uint64_t v8 = (void *)swift_task_alloc();
  v5[5] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1002F99B8;
  return v10(ObjectType, a5);
}

uint64_t sub_1003102C0()
{
  type metadata accessor for AudioRecordingCoordinator();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = 0;
  uint64_t result = swift_unknownObjectWeakInit();
  qword_10083D360 = v0;
  return result;
}

uint64_t sub_100310308()
{
  sub_1000109BC(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioRecordingCoordinator()
{
  return self;
}

uint64_t sub_100310364()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003103A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10002C194;
  return sub_100310198(a1, v4, v5, v7, v6);
}

uint64_t sub_100310464()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100807DE8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100807DE8);
  if (qword_1007F7D98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ECC8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10031052C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 369) = a5;
  *(unsigned char *)(v6 + 368) = a4;
  *(void *)(v6 + 256) = a3;
  *(void *)(v6 + 264) = a6;
  *(void *)(v6 + 240) = a1;
  *(void *)(v6 + 248) = a2;
  uint64_t v7 = sub_100010218(&qword_100807EC0);
  *(void *)(v6 + 272) = v7;
  *(void *)(v6 + 280) = *(void *)(v7 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = swift_task_alloc();
  *(void *)(v6 + 312) = type metadata accessor for MainActor();
  *(void *)(v6 + 320) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 328) = v9;
  *(void *)(v6 + 336) = v8;
  return _swift_task_switch(sub_100310674, v9, v8);
}

uint64_t sub_100310674()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = (_OWORD *)(v0 + 16);
    char v37 = *(unsigned char *)(v0 + 369);
    uint64_t v4 = v1 + 32;
    uint64_t v36 = type metadata accessor for TaskPriority();
    uint64_t v5 = *(void *)(v36 - 8);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    Swift::Int v34 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v33 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v38 = v2;
      uint64_t v7 = *(void *)(v0 + 296);
      uint64_t v8 = *(void *)(v0 + 304);
      uint64_t v9 = *(void **)(v0 + 264);
      char v10 = *(unsigned char *)(v0 + 368);
      long long v12 = *(_OWORD *)(v4 + 16);
      long long v11 = *(_OWORD *)(v4 + 32);
      *unint64_t v3 = *(_OWORD *)v4;
      *(_OWORD *)(v0 + 32) = v12;
      *(_OWORD *)(v0 + 48) = v11;
      long long v14 = *(_OWORD *)(v4 + 64);
      long long v13 = *(_OWORD *)(v4 + 80);
      long long v15 = *(_OWORD *)(v4 + 48);
      *(void *)(v0 + 112) = *(void *)(v4 + 96);
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      *(_OWORD *)(v0 + 64) = v15;
      v35(v8, 1, 1, v36);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      uint64_t v17 = (void *)(v16 + 16);
      *(void *)(v16 + 24) = 0;
      long long v18 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v16 + 96) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v16 + 112) = v18;
      *(void *)(v16 + 128) = *(void *)(v0 + 112);
      long long v19 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v16 + 32) = *v3;
      *(_OWORD *)(v16 + 48) = v19;
      long long v20 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v16 + 64) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v16 + 80) = v20;
      *(unsigned char *)(v16 + 136) = v10;
      *(unsigned char *)(v16 + 137) = v37;
      *(void *)(v16 + 144) = v9;
      sub_1002BC878(v8, v7);
      LODWORD(v8) = (*v34)(v7, 1, v36);
      sub_10031307C(v0 + 16);
      sub_10031307C(v0 + 16);
      id v21 = v9;
      uint64_t v22 = *(void *)(v0 + 296);
      if (v8 == 1)
      {
        sub_1000D9A48(*(void *)(v0 + 296));
        if (!*v17) {
          goto LABEL_8;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v33)(v22, v36);
        if (!*v17)
        {
LABEL_8:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v26 = **(void **)(v0 + 248);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_100807ED8;
      *(void *)(v27 + 24) = v16;
      sub_100010218(&qword_100806178);
      uint64_t v28 = v25 | v23;
      if (v25 | v23)
      {
        uint64_t v28 = v0 + 184;
        *(void *)(v0 + 184) = 0;
        *(void *)(v0 + 192) = 0;
        *(void *)(v0 + 200) = v23;
        *(void *)(v0 + 208) = v25;
      }
      uint64_t v6 = *(void *)(v0 + 304);
      *(void *)(v0 + 216) = 1;
      *(void *)(v0 + 224) = v28;
      *(void *)(v0 + 232) = v26;
      swift_task_create();
      swift_release();
      sub_1003131C0(v0 + 16);
      sub_1000D9A48(v6);
      v4 += 104;
      uint64_t v2 = v38 - 1;
      if (v38 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_100010218(&qword_100806178);
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 344) = _swiftEmptyArrayStorage;
  uint64_t v29 = static MainActor.shared.getter();
  *(void *)(v0 + 352) = v29;
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_100310A3C;
  uint64_t v31 = *(void *)(v0 + 272);
  return TaskGroup.Iterator.next(isolation:)(v0 + 120, v29, &protocol witness table for MainActor, v31);
}

uint64_t sub_100310A3C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_100310B80, v3, v2);
}

uint64_t sub_100310B80()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void **)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v5 = *(void **)(v0 + 176);
    uint64_t v22 = *(void **)(v0 + 128);
    id v6 = v22;
    id v19 = v1;
    sub_100312EC4(v4, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(double **)(v0 + 344);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v8 = sub_1002A7280(0, *((void *)v8 + 2) + 1, 1, *(double **)(v0 + 344));
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1002A7280((double *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    long long v11 = &v8[8 * v10];
    *((void *)v11 + 4) = v19;
    *((void *)v11 + 5) = v22;
    *((unsigned char *)v11 + 48) = v2;
    *((unsigned char *)v11 + 49) = BYTE1(v2) & 1;
    *((void *)v11 + 7) = v21;
    *((unsigned char *)v11 + 64) = v3 & 1;
    *((unsigned char *)v11 + 65) = BYTE1(v3) & 1;
    *((unsigned char *)v11 + 66) = BYTE2(v3) & 1;
    *((void *)v11 + 9) = v20;
    *((void *)v11 + 10) = v4;
    *((void *)v11 + 11) = v5;
    sub_100313214(v1, v22, v2, v21, v3, v20, v4, v5);
    *(void *)(v0 + 344) = v8;
    uint64_t v12 = static MainActor.shared.getter();
    *(void *)(v0 + 352) = v12;
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v13;
    *long long v13 = v0;
    v13[1] = sub_100310A3C;
    uint64_t v14 = *(void *)(v0 + 272);
    return TaskGroup.Iterator.next(isolation:)(v0 + 120, v12, &protocol witness table for MainActor, v14);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v16 = *(void **)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    swift_release();
    *uint64_t v16 = v15;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_100310DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a7;
  *(unsigned char *)(v7 + 57) = a6;
  *(unsigned char *)(v7 + 56) = a5;
  *(void *)(v7 + 32) = a1;
  return _swift_task_switch(sub_100310E18, 0, 0);
}

uint64_t sub_100310E18()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = (objc_class *)_s15MOMapAnnotationCMa();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  id v6 = &v5[OBJC_IVAR____TtCC7Journal10MapManager15MOMapAnnotation_title];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtCC7Journal10MapManager15MOMapAnnotation_coordinate];
  *(void *)uint64_t v7 = v2;
  *((void *)v7 + 1) = v3;
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  id v27 = [super init];
  int v8 = *((unsigned __int8 *)v1 + 32);
  char v9 = *((unsigned char *)v1 + 56);
  long long v11 = (void *)v1[2];
  uint64_t v10 = v1[3];
  uint64_t v12 = *(void *)(v0 + 40);
  if (!v11) {
    goto LABEL_6;
  }
  unint64_t v13 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v13) & 0xF;
  }
  char v15 = v14 != 0;
  if (v14)
  {
    char v16 = 0;
  }
  else
  {
LABEL_6:
    char v15 = 0;
    char v16 = *(double *)(v12 + 80) > 150.0;
  }
  char v26 = *(unsigned char *)(v0 + 57);
  char v17 = *(unsigned char *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 32);
  if (v8) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v10;
  }
  id v20 = [*(id *)(v0 + 48) traitCollection];
  id v21 = sub_1001213BC(v11, v9, v15, v16, v20);
  uint64_t v23 = v22;

  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 17) = v9;
  *(void *)(v18 + 24) = v19;
  *(unsigned char *)(v18 + 32) = (v26 & 1) == 0;
  *(unsigned char *)(v18 + 33) = v15;
  *(unsigned char *)(v18 + 34) = v16;
  *(void *)(v18 + 40) = 0x4000000000000000;
  *(void *)(v18 + 48) = v21;
  *(void *)(v18 + 56) = v23;
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t _s36MOSuggestionAssetMapSnapshotProviderCMa()
{
  return self;
}

uint64_t sub_10031100C(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100154874;
  return v6(a1);
}

uint64_t sub_1003110E8(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10031332C;
  return v6(a1);
}

void *sub_1003111C4(void *a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1[2] < 3uLL)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v36 = v4;
    if (qword_1007F6DD0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100026A54(v7, (uint64_t)qword_100807DE8);
    int v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetMapsClusterer] Building dendrogram", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = objc_allocWithZone((Class)_s30MOSuggestionAssetMapsClustererCMa());
    uint64_t v12 = swift_bridgeObjectRetain();
    id v13 = sub_10032C5F8(v12, 1.0);
    sub_10032C8DC();
    uint64_t v14 = sub_10032D7F0();
    int64_t v15 = v14[2];
    if (v15)
    {
      id v35 = v13;
      char v41 = _swiftEmptyArrayStorage;
      sub_100095DD8(0, v15, 0);
      uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
      Swift::Int v34 = v14;
      uint64_t v17 = (uint64_t)v14 + ((v16 + 32) & ~v16);
      uint64_t v37 = *(void *)(v3 + 72);
      a1 = v41;
      uint64_t v18 = v36;
      do
      {
        sub_10031326C(v17, (uint64_t)v6);
        uint64_t v19 = *v6;
        uint64_t v20 = v6[1];
        uint64_t v21 = v18[12];
        uint64_t v22 = (uint64_t *)((char *)v6 + v18[11]);
        uint64_t v23 = v22[1];
        uint64_t v40 = *v22;
        uint64_t v24 = v6[3];
        uint64_t v25 = *(void **)((char *)v6 + v18[9]);
        if (v24 >= 2) {
          uint64_t v26 = v6[3];
        }
        else {
          uint64_t v26 = 0;
        }
        uint64_t v38 = v26;
        int v39 = *((unsigned __int8 *)v6 + v21);
        uint64_t v27 = *(uint64_t *)((char *)v6 + v18[13]);
        id v28 = v25;
        swift_bridgeObjectRetain();
        sub_1003132D0((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095DD8(0, a1[2] + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        unint64_t v30 = a1[2];
        unint64_t v29 = a1[3];
        if (v30 >= v29 >> 1)
        {
          sub_100095DD8(v29 > 1, v30 + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        a1[2] = v30 + 1;
        uint64_t v31 = &a1[13 * v30];
        v31[4] = v19;
        v31[5] = v20;
        uint64_t v32 = v38;
        v31[6] = v25;
        v31[7] = v32;
        *((unsigned char *)v31 + 64) = v24 < 2;
        v31[9] = v40;
        v31[10] = v23;
        *((unsigned char *)v31 + 88) = v39;
        v31[12] = 0;
        v31[13] = 0;
        v31[14] = v27;
        v17 += v37;
        v31[15] = 0;
        v31[16] = 0xE000000000000000;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
  }
  return a1;
}

#error "1003120E8: switch analysis failed: failed to propagate the switch expression (funcsize=966)"

uint64_t sub_1003127D4(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 152) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  *(void *)(v3 + 80) = type metadata accessor for MainActor();
  *(void *)(v3 + 88) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = v4;
  return _swift_task_switch(sub_100312874, v5, v4);
}

uint64_t sub_100312874()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v4 = sub_1003111C4(v2);
  *(void *)(v0 + 112) = v4;
  BOOL v5 = v2[2] == 1;
  uint64_t v6 = sub_100311520(v2, v4, v3, v1, 1);
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = sub_100010218(&qword_100806178);
  uint64_t v8 = sub_100010218(&qword_100807EA0);
  uint64_t v9 = static MainActor.shared.getter();
  *(void *)(v0 + 128) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *(void *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 24) = v3;
  *(unsigned char *)(v10 + 25) = v5;
  *(void *)(v10 + 32) = v6;
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  void *v11 = v0;
  v11[1] = sub_100312A00;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 56, v7, v8, v9, &protocol witness table for MainActor, &unk_100807EB0, v10, v7);
}

uint64_t sub_100312A00()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_100312B84, v3, v2);
}

uint64_t sub_100312B84()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = 0;
    do
    {
      uint64_t v5 = *(void **)(v1 + v3 + 32);
      uint64_t v4 = *(void **)(v1 + v3 + 40);
      char v6 = *(unsigned char *)(v1 + v3 + 48);
      char v7 = *(unsigned char *)(v1 + v3 + 49);
      uint64_t v8 = *(void *)(v1 + v3 + 56);
      char v9 = *(unsigned char *)(v1 + v3 + 64);
      char v10 = *(unsigned char *)(v1 + v3 + 65);
      char v11 = *(unsigned char *)(v1 + v3 + 66);
      uint64_t v12 = *(void *)(v1 + v3 + 72);
      uint64_t v13 = *(void **)(v1 + v3 + 80);
      uint64_t v14 = *(void **)(v1 + v3 + 88);
      *(void *)(v0 + 16) = v4;
      *(unsigned char *)(v0 + 24) = v6;
      *(unsigned char *)(v0 + 25) = v7;
      *(void *)(v0 + 32) = v8;
      *(unsigned char *)(v0 + 40) = v9;
      *(unsigned char *)(v0 + 41) = v10;
      *(unsigned char *)(v0 + 42) = v11;
      *(void *)(v0 + 48) = v12;
      id v15 = v4;
      id v16 = v5;
      sub_100312EC4(v13, v14);
      id v17 = v16;
      id v18 = v15;
      sub_100312EC4(v13, v14);
      sub_100021D58(v13, v14);

      id v19 = v17;
      id v20 = v18;
      sub_100312EC4(v13, v14);
      sub_100021D58(v13, v14);

      id v21 = v19;
      id v22 = v20;
      sub_100312EC4(v13, v14);

      id v23 = objc_allocWithZone((Class)_s19MOPOIAnnotationViewCMa());
      sub_1000210E4((uint64_t)v17, (long long *)(v0 + 16), v13, v14);

      sub_100021D58(v13, v14);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void **)(v0 + 120);
  sub_100312F04();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 setAnnotationViews:isa];

  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v27 = *(void *)(v0 + 120);
  return v26(v27);
}

uint64_t sub_100312DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 25);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 24);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *char v10 = v3;
  v10[1] = sub_100052588;
  return sub_10031052C(a1, a2, v6, v9, v7, v8);
}

id sub_100312EC4(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

unint64_t sub_100312F04()
{
  unint64_t result = qword_100807EB8;
  if (!qword_100807EB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100807EB8);
  }
  return result;
}

uint64_t sub_100312F44()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100312FA4(uint64_t a1)
{
  uint64_t v4 = v1 + 32;
  char v5 = *(unsigned char *)(v1 + 136);
  char v6 = *(unsigned char *)(v1 + 137);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_10002C194;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 57) = v6;
  *(unsigned char *)(v8 + 56) = v5;
  *(void *)(v8 + 32) = a1;
  return _swift_task_switch(sub_100310E18, 0, 0);
}

uint64_t sub_10031307C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003130D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100313108(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_10002C194;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100807ED0 + dword_100807ED0);
  return v6(a1, v4);
}

uint64_t sub_1003131C0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

void sub_100313214(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  if (a1)
  {

    sub_100021D58(a7, a8);
  }
}

uint64_t sub_10031326C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003132D0(uint64_t a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100313330()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___recordingViewModel;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___recordingViewModel))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___recordingViewModel);
  }
  else
  {
    uint64_t v2 = sub_100313398(v0);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100313398(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AudioPlayer();
  swift_allocObject();
  uint64_t v8 = sub_1002D7DAC();
  char v9 = *(unsigned char *)(v8 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo);
  *(unsigned char *)(v8 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo) = 0;
  sub_1002D802C(v9);
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_asset);
  if (!v10) {
    goto LABEL_4;
  }
  id v11 = v10;
  sub_1003B2D58(v7);
  uint64_t v12 = type metadata accessor for URL();
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v7, 1, v12);
  sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100800A60);

  if (v13 == 1)
  {

LABEL_4:
    type metadata accessor for TranscriptionCoordinator(0);
    long long v37 = 0u;
    long long v38 = 0u;
    int v39 = 0;
    swift_allocObject();
    uint64_t v14 = sub_10013C4E4((uint64_t)&v37);
    type metadata accessor for AudioAssetPersistenceStrategy();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 0;
    uint64_t v16 = v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_logger;
    uint64_t v17 = qword_1007F7DF0;
    swift_retain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v19 = sub_100026A54(v18, (uint64_t)qword_10083EDD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v19, v18);
    uint64_t v20 = OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset;
    *(void *)(v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset) = 0;
    *(void *)(v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate + 8) = 0;
    swift_unknownObjectWeakInit();
    id v21 = *(void **)(v15 + v20);
    *(void *)(v15 + v20) = 0;

    *(void *)(v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_transcriptionCoordinator) = v14;
    goto LABEL_10;
  }
  uint64_t v22 = type metadata accessor for AudioManager(0);
  uint64_t v23 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
  type metadata accessor for MainActor();
  uint64_t v24 = static MainActor.shared.getter();
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v24;
  void v25[3] = &protocol witness table for MainActor;
  v25[4] = v22;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B380, (uint64_t)v25);
  swift_release();
  id v26 = v11;
  sub_100315D38(v26, v8);

  *((void *)&v38 + 1) = _s10AudioAssetCMa(0);
  int v39 = &off_1007B7DC8;
  *(void *)&long long v37 = v26;
  type metadata accessor for TranscriptionCoordinator(0);
  swift_allocObject();
  id v27 = v26;
  uint64_t v14 = sub_10013C4E4((uint64_t)&v37);
  type metadata accessor for AudioAssetPersistenceStrategy();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 0;
  uint64_t v28 = v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_logger;
  uint64_t v29 = qword_1007F7DF0;
  id v30 = v27;
  swift_retain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v32 = sub_100026A54(v31, (uint64_t)qword_10083EDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v28, v32, v31);
  uint64_t v33 = OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset;
  *(void *)(v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset) = 0;
  *(void *)(v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  Swift::Int v34 = *(void **)(v15 + v33);
  *(void *)(v15 + v33) = v10;

  *(void *)(v15 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_transcriptionCoordinator) = v14;
LABEL_10:
  type metadata accessor for RecordingViewModel();
  swift_allocObject();
  uint64_t v35 = sub_100316798(v8, v15, v14, 0);
  swift_release();
  swift_release();
  swift_release();
  return v35;
}

id sub_100313894()
{
  return sub_10031584C(&OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___fullScreenHostingViewController, (uint64_t (*)(uint64_t))sub_1003138B4);
}

uint64_t sub_1003138B4()
{
  uint64_t v0 = type metadata accessor for RecordingView(0);
  uint64_t v1 = (int *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = &v16[-v5];
  sub_100313330();
  type metadata accessor for RecordingViewModel();
  sub_100317110((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  Bindable<A>.init(wrappedValue:)();
  uint64_t v7 = &v6[v1[7]];
  char v17 = 0;
  State.init(wrappedValue:)();
  uint64_t v8 = v19;
  *uint64_t v7 = v18;
  *((void *)v7 + 1) = v8;
  char v9 = &v6[v1[8]];
  char v17 = 0;
  State.init(wrappedValue:)();
  uint64_t v10 = v19;
  unsigned char *v9 = v18;
  *((void *)v9 + 1) = v10;
  id v11 = &v6[v1[9]];
  char v17 = 0;
  State.init(wrappedValue:)();
  uint64_t v12 = v19;
  unsigned char *v11 = v18;
  *((void *)v11 + 1) = v12;
  sub_100316C00((uint64_t)v6, (uint64_t)v3);
  id v13 = objc_allocWithZone((Class)sub_100010218(&qword_100807F78));
  uint64_t v14 = UIHostingController.init(rootView:)();
  sub_100316F38((uint64_t)v6, type metadata accessor for RecordingView);
  return v14;
}

void sub_100313AB0()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CanvasTranscribingAudioPickerController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  if (qword_1007F79A0 != -1) {
    swift_once();
  }
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityLabel:v3];

  id v4 = [v0 view];
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  [v4 setAccessibilityContainerType:4];

  id v6 = [v0 view];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [self systemBackgroundColor];
    [v7 setBackgroundColor:v8];

    sub_1003154A4();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100313D10(char a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (objc_class *)type metadata accessor for CanvasTranscribingAudioPickerController();
  v12.receiver = v1;
  v12.super_class = v6;
  [super viewWillAppear:a1 & 1];
  sub_1003155B4();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  type metadata accessor for MainActor();
  id v8 = v1;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  void v10[4] = v8;
  *(void *)&v8[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_notificationsTask] = sub_100328A60((uint64_t)v5, (uint64_t)&unk_100807F98, (uint64_t)v10);
  return swift_release();
}

id sub_100313EBC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for CanvasTranscribingAudioPickerController();
  v14.receiver = v2;
  v14.super_class = v7;
  id result = [super viewIsAppearing:a1 & 1];
  if (v2[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_recordOnInit] == 1)
  {
    uint64_t v9 = OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_recordOnInitTask;
    if (!*(void *)&v2[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_recordOnInitTask])
    {
      uint64_t v10 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
      type metadata accessor for MainActor();
      id v11 = v2;
      uint64_t v12 = static MainActor.shared.getter();
      id v13 = (void *)swift_allocObject();
      _OWORD v13[2] = v12;
      v13[3] = &protocol witness table for MainActor;
      v13[4] = v11;
      *(void *)&v2[v9] = sub_100328A60((uint64_t)v6, (uint64_t)&unk_100807F88, (uint64_t)v13);
      return (id)swift_release();
    }
  }
  return result;
}

uint64_t sub_100314034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_1003140CC, v6, v5);
}

id sub_1003140CC()
{
  id result = [*(id *)(v0 + 16) view];
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for AppSecureAccessManager();
    id v3 = [v2 window];

    id v4 = [v3 windowScene];
    *(void *)(v0 + 48) = v4;

    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1003141D8;
    return (id)sub_100082D54((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003141D8(char a1)
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 48);
  *(unsigned char *)(*v1 + 64) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 32);
  return _swift_task_switch(sub_100314320, v5, v4);
}

uint64_t sub_100314320()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  swift_release();
  if (v1 == 1)
  {
    sub_100313330();
    RecordingViewModel.didTapRecordingButton(allowsPausing:)(1);
    swift_release();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100314458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  sub_100010218(&qword_1007FA1D0);
  v4[14] = swift_task_alloc();
  sub_100010218(&qword_100806050);
  v4[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Notification();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v4[20] = swift_task_alloc();
  uint64_t v6 = sub_100010218(&qword_100807FA0);
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_100807FA8);
  v4[25] = v7;
  v4[26] = *(void *)(v7 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for MainActor();
  v4[29] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[30] = v9;
  v4[31] = v8;
  return _swift_task_switch(sub_1003146B0, v9, v8);
}

uint64_t sub_1003146B0()
{
  id v1 = [self defaultCenter];
  if (qword_1007F6EA0 != -1) {
    swift_once();
  }
  uint64_t v2 = NSNotificationCenter.notifications(named:object:)();

  v0[10] = v2;
  type metadata accessor for NSNotificationCenter.Notifications();
  sub_100317110(&qword_100807FB8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications);
  AsyncMapSequence.init(_:transform:)();
  AsyncMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v3 = static MainActor.shared.getter();
  v0[32] = v3;
  if (v3)
  {
    swift_getObjectType();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v0[33] = v4;
  v0[34] = v6;
  return _swift_task_switch(sub_1003148C8, v4, v6);
}

uint64_t sub_1003148C8()
{
  uint64_t v1 = v0[32];
  v0[35] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100317110(&qword_1007FBB50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[36] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003149D0;
  uint64_t v3 = v0[15];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1003149D0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_100314CF4;
  }
  else
  {
    (*(void (**)(void))(v2 + 280))();
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_100314AF8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100314AF8()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(v3, &qword_100806050);
    swift_release();
    uint64_t v4 = v0[30];
    uint64_t v5 = v0[31];
    return _swift_task_switch(sub_100314D0C, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v8 = v0[21];
    uint64_t v9 = v0[22];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[18], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[37] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[38] = v12;
    void *v12 = v0;
    v12[1] = sub_100314E14;
    uint64_t v13 = v0[18];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 39, v13);
  }
}

uint64_t sub_100314CF4()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t sub_100314D0C()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[21];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100314E14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 144);
  uint64_t v3 = *(void *)(*v0 + 136);
  uint64_t v4 = *(void *)(*v0 + 128);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 272);
  uint64_t v6 = *(void *)(v1 + 264);
  return _swift_task_switch(sub_100314FB4, v6, v5);
}

uint64_t sub_100314FB4()
{
  *(unsigned char *)(v0 + 312) = 0;
  swift_release();
  *(unsigned char *)(v0 + 313) = *(unsigned char *)(v0 + 312);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 248);
  return _swift_task_switch(sub_100315024, v1, v2);
}

uint64_t sub_100315024()
{
  if (*(unsigned char *)(v0 + 313))
  {
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v1 = *(void *)(v0 + 216);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 168);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t v9 = sub_100313330();
  swift_getKeyPath();
  *(void *)(v0 + 96) = v9;
  sub_100317110((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = *(void *)(v9 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 40);
    swift_unknownObjectRetain();
    LODWORD(v10) = v12(ObjectType, v10);
    swift_unknownObjectRelease();
    if (v10)
    {
      uint64_t v13 = *(void *)(v0 + 112);
      uint64_t v14 = type metadata accessor for TaskPriority();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
      swift_retain();
      uint64_t v16 = static MainActor.shared.getter();
      char v17 = (void *)swift_allocObject();
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v9;
      int v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
      uint64_t v19 = *(void *)(v0 + 112);
      if (v18 == 1)
      {
        sub_10001457C(*(void *)(v0 + 112), &qword_1007FA1D0);
        if (v16)
        {
LABEL_9:
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v22 = v21;
          swift_unknownObjectRelease();
LABEL_13:
          uint64_t v23 = swift_allocObject();
          *(void *)(v23 + 16) = &unk_100807FC0;
          *(void *)(v23 + 24) = v17;
          if (v22 | v20)
          {
            *(void *)(v0 + 48) = 0;
            *(void *)(v0 + 56) = 0;
            *(void *)(v0 + 64) = v20;
            *(void *)(v0 + 72) = v22;
          }
          swift_task_create();
          swift_release();
          goto LABEL_16;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
        if (v17[2]) {
          goto LABEL_9;
        }
      }
      uint64_t v20 = 0;
      uint64_t v22 = 0;
      goto LABEL_13;
    }
  }
LABEL_16:
  swift_release();
  uint64_t v24 = static MainActor.shared.getter();
  *(void *)(v0 + 256) = v24;
  if (v24)
  {
    swift_getObjectType();
    uint64_t v25 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  *(void *)(v0 + 264) = v25;
  *(void *)(v0 + 272) = v27;
  return _swift_task_switch(sub_1003148C8, v25, v27);
}

uint64_t sub_100315470()
{
  return sub_100317254(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1003154A4()
{
  uint64_t v1 = v0;
  id v2 = sub_100313894();
  [v1 addChildViewController:v2];

  id v3 = [v1 view];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = sub_10031582C();
    [v4 addSubview:v5];

    id v6 = sub_10031582C();
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v7 = sub_10031582C();
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    id v8 = sub_100313894();
    [v8 didMoveToParentViewController:v1];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003155B4()
{
  id v1 = [v0 presentingViewController];
  id v2 = v1;
  if (!v1) {
    goto LABEL_8;
  }
  id v3 = [v1 presentedViewController];

  if (!v3)
  {
    id v2 = 0;
    goto LABEL_8;
  }
  id v2 = [v3 sheetPresentationController];

  if (!v2)
  {
LABEL_8:
    char v6 = 1;
    goto LABEL_9;
  }
  id v4 = [v2 detents];

  sub_100316BC0();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    id v2 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v2 = *(id *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  char v6 = 0;
LABEL_9:
  uint64_t v7 = sub_100313330();
  swift_getKeyPath();
  sub_100317110((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v8 = *(id *)(v7 + 88);
  char v9 = *(unsigned char *)(v7 + 96);
  uint64_t result = swift_release();
  if (v9)
  {
    if (v6) {
      return result;
    }
    goto LABEL_16;
  }
  if (v8 == v2) {
    char v11 = v6;
  }
  else {
    char v11 = 1;
  }
  if (v11)
  {
LABEL_16:
    sub_100313330();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_10031582C()
{
  return sub_10031584C(&OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___journalAssetView, (uint64_t (*)(uint64_t))sub_1003158B0);
}

id sub_10031584C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    char v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1003158B0()
{
  id v0 = sub_100313894();
  id v1 = (objc_class *)type metadata accessor for TranscribingAudioAssetView();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_hostingController] = v0;
  v6.receiver = v2;
  v6.super_class = v1;
  id v3 = v0;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001B1978();

  return v4;
}

id sub_1003159AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasTranscribingAudioPickerController();
  return [super dealloc];
}

uint64_t sub_100315AB4()
{
  return type metadata accessor for CanvasTranscribingAudioPickerController();
}

uint64_t type metadata accessor for CanvasTranscribingAudioPickerController()
{
  uint64_t result = qword_100807F60;
  if (!qword_100807F60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100315B08()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100315BC0()
{
  v1[2] = *v0;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100315C5C, v3, v2);
}

uint64_t sub_100315C5C()
{
  *(void *)(v0 + 48) = sub_100313330();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1003013C0;
  return sub_1003D4218();
}

uint64_t sub_100315CF8()
{
  sub_100313330();
  sub_1003D2EC8();

  return swift_release();
}

uint64_t sub_100315D38(void *a1, uint64_t a2)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v11 = (double *)((char *)&v63 - v10);
  uint64_t v12 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v63 - v19;
  v79[3] = _s10AudioAssetCMa(0);
  v79[4] = &off_1007B7DC8;
  v79[0] = a1;
  id v21 = a1;
  sub_1003B2D58(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    uint64_t v65 = v11;
    uint64_t v71 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v73 = v5;
    uint64_t v66 = v8;
    uint64_t v70 = v17;
    uint64_t v25 = *(void (**)(unint64_t, char *, uint64_t))(v16 + 32);
    uint64_t v68 = v16 + 32;
    uint64_t v67 = v25;
    v25((unint64_t)v20, v14, v15);
    id v26 = sub_1002DD9F8((uint64_t)v20);
    uint64_t v27 = v76;
    if (*(unsigned char *)(v76 + OBJC_IVAR____TtC7Journal11AudioPlayer_automaticallyPublishesNowPlayingInfo))
    {
      uint64_t v28 = OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded;
      if (!*(void *)(v76 + OBJC_IVAR____TtC7Journal11AudioPlayer_nowPlayingSessionIfLoaded))
      {
        id v29 = sub_1002DB6F8();
        id v30 = *(void **)(v27 + v28);
        *(void *)(v27 + v28) = v29;
      }
    }
    uint64_t v31 = *(void **)(v27 + 72);
    id v69 = v26;
    [v31 replaceCurrentItemWithPlayerItem:v26];
    sub_100141410((uint64_t)v79, (uint64_t)v78);
    sub_100316C9C((uint64_t)v78, (uint64_t)v77);
    uint64_t v32 = v27;
    swift_beginAccess();
    sub_100316D04((uint64_t)v77, v27 + 16);
    swift_endAccess();
    uint64_t v33 = v65;
    sub_1003F2894((uint64_t)v65);
    uint64_t v34 = _s10AudioAssetC9AudioDataVMa(0);
    uint64_t v64 = *(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48);
    int v35 = v64(v33, 1, v34);
    uint64_t v75 = v15;
    uint64_t v72 = v16;
    uint64_t v74 = v20;
    if (v35 == 1)
    {
      sub_10001457C((uint64_t)v33, &qword_1007F9E38);
      double v36 = 0.0;
    }
    else
    {
      double v36 = *v33;
      int v37 = *((unsigned __int8 *)v33 + 8);
      sub_100316F38((uint64_t)v33, _s10AudioAssetC9AudioDataVMa);
      if (v37) {
        double v36 = 0.0;
      }
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v39 = v32;
    *(&v63 - 2) = v32;
    *((double *)&v63 - 1) = v36;
    v78[0] = v32;
    sub_100317110(&qword_100807168, (void (*)(uint64_t))type metadata accessor for AudioPlayer);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v40 = swift_getKeyPath();
    __chkstk_darwin(v40);
    *(&v63 - 2) = v32;
    *((unsigned char *)&v63 - 8) = 0;
    v78[0] = v32;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v41 = (uint64_t)v66;
    sub_1003F2894((uint64_t)v66);
    if (v64((double *)v41, 1, v34) == 1)
    {
      sub_10001457C(v41, &qword_1007F9E38);
    }
    else
    {
      uint64_t v42 = *(void *)(v41 + 16);
      swift_bridgeObjectRetain();
      sub_100316F38(v41, _s10AudioAssetC9AudioDataVMa);
      if (v42)
      {
        unint64_t v43 = *(void *)(v42 + 16);
        swift_bridgeObjectRelease();
LABEL_18:
        id v44 = sub_1002D8468(v43, 0.0001);
        uint64_t v45 = swift_getKeyPath();
        __chkstk_darwin(v45);
        *(&v63 - 2) = v39;
        *(&v63 - 1) = (uint64_t)v44;
        v78[0] = v39;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_bridgeObjectRelease();
        swift_getKeyPath();
        v78[0] = v39;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if ((*(void *)(v39 + 80) & 0x7FFFFFFFFFFFFFFFLL) != 0)
        {
          swift_getKeyPath();
          v78[0] = v39;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          double v46 = (double)*(uint64_t *)(*(void *)(v39 + 56) + 16);
          swift_getKeyPath();
          v78[0] = v39;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          double v47 = floor(v46 / *(double *)(v39 + 80) + 0.2);
        }
        else
        {
          double v47 = 0.0;
        }
        uint64_t v48 = swift_getKeyPath();
        __chkstk_darwin(v48);
        *(&v63 - 2) = v39;
        *((double *)&v63 - 1) = v47;
        v78[0] = v39;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        uint64_t v49 = type metadata accessor for TaskPriority();
        uint64_t v50 = *(void *)(v49 - 8);
        uint64_t v65 = *(double **)(v50 + 56);
        uint64_t v66 = (char *)(v50 + 56);
        uint64_t v51 = (uint64_t)v73;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v73, 1, 1, v49);
        uint64_t v52 = v72;
        id v53 = v71;
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v74, v75);
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v54 = static MainActor.shared.getter();
        unint64_t v55 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
        unint64_t v56 = (v70 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v54;
        *(void *)(v57 + 24) = &protocol witness table for MainActor;
        uint64_t v58 = v75;
        v67(v57 + v55, v53, v75);
        *(void *)(v57 + v56) = v39;
        sub_100328A60(v51, (uint64_t)&unk_1008071A0, v57);
        swift_release();
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v51, 1, 1, v49);
        swift_retain();
        id v59 = v69;
        uint64_t v60 = static MainActor.shared.getter();
        id v61 = (void *)swift_allocObject();
        v61[2] = v60;
        v61[3] = &protocol witness table for MainActor;
        v61[4] = v59;
        v61[5] = v39;
        sub_100328A60(v51, (uint64_t)&unk_1008071B0, (uint64_t)v61);

        swift_release();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v74, v58);
        return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v79);
      }
    }
    unint64_t v43 = 0;
    goto LABEL_18;
  }
  sub_10001457C((uint64_t)v14, (uint64_t *)&unk_100800A60);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Tried to play attachment but couldn't find a valid url", v24, 2u);
    swift_slowDealloc();
  }

  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v79);
}

uint64_t sub_100316798(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0x3F847AE147AE147BLL;
  if (qword_1007F7E00 != -1) {
    swift_once();
  }
  *(void *)(v4 + 40) = qword_10083EDE8;
  *(_WORD *)(v4 + 81) = 0;
  *(void *)(v4 + 88) = 0;
  *(unsigned char *)(v4 + 96) = 1;
  swift_retain();
  ObservationRegistrar.init()();
  uint64_t v13 = sub_100317110(&qword_100805568, (void (*)(uint64_t))type metadata accessor for AudioPlayer);
  *(void *)(v4 + 48) = a2;
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 64) = v13;
  *(void *)(v4 + 72) = a3;
  *(unsigned char *)(v4 + 80) = a4 & 1;
  *(unsigned char *)(v4 + 82) = a4 & 1;
  swift_getKeyPath();
  v20[1] = a1;
  sub_100317110(&qword_100807168, (void (*)(uint64_t))type metadata accessor for AudioPlayer);
  swift_retain();
  swift_retain();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(a1 + 88) == 1) {
    uint64_t v14 = &selRef_rate;
  }
  else {
    uint64_t v14 = &selRef_defaultRate;
  }
  [*(id *)(a1 + 72) *v14];
  *(_DWORD *)(v4 + 100) = v15;
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  *(void *)(v18 + 32) = v5;
  *(unsigned char *)(v18 + 40) = 0;
  sub_100328A60((uint64_t)v12, (uint64_t)&unk_100801DA0, v18);
  swift_release();
  return v5;
}

id sub_100316A48(void *a1, char a2)
{
  *(void *)&v2[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_notificationsTask] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_recordOnInitTask] = 0;
  v2[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_shouldAutosaveAsset] = 0;
  uint64_t v5 = OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_asset;
  *(void *)&v2[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_asset] = 0;
  uint64_t v6 = OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_logger;
  uint64_t v7 = qword_1007F7DF0;
  id v8 = v2;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_100026A54(v9, (uint64_t)qword_10083EDD0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(&v8[v6], v10, v9);
  *(void *)&v8[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___recordingViewModel] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___fullScreenHostingViewController] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___journalAssetView] = 0;
  uint64_t v11 = *(void **)&v2[v5];
  *(void *)&v2[v5] = a1;
  id v12 = a1;

  v8[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_recordOnInit] = a2 & 1;
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for CanvasTranscribingAudioPickerController();
  return [super initWithNibName:0 bundle:0];
}

unint64_t sub_100316BC0()
{
  unint64_t result = qword_1007FB5F0;
  if (!qword_1007FB5F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007FB5F0);
  }
  return result;
}

uint64_t sub_100316C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecordingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100316C64()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100316C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100316D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100316D74()
{
  return sub_1002D79CC(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100316D9C()
{
  return sub_1002D7BB0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100316DC4()
{
  return sub_1002D75C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100316DE8()
{
  return sub_1002D77E0(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100316E08()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100316EF0()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100316F38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100316F98()
{
  return sub_10025F9CC();
}

uint64_t sub_100316FA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100314034(a1, v4, v5, v6);
}

uint64_t sub_10031705C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100314458(a1, v4, v5, v6);
}

uint64_t sub_100317110(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100317160()
{
  return sub_10025F9CC();
}

uint64_t sub_100317168()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052588;
  return sub_1003D9464();
}

uint64_t sub_10031721C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100317254(uint64_t (*a1)(void))
{
  return a1();
}

void sub_10031725C()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_notificationsTask] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_recordOnInitTask] = 0;
  v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_shouldAutosaveAsset] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_asset] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController_logger;
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = sub_100026A54(v2, (uint64_t)qword_10083EDD0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(&v0[v1], v3, v2);
  *(void *)&v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___recordingViewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___fullScreenHostingViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal39CanvasTranscribingAudioPickerController____lazy_storage___journalAssetView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_10031739C(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int v37 = a1;
  uint64_t v38 = a2;
  uint64_t v6 = sub_100010218(&qword_1007FC1E8);
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (!v8) {
    return result;
  }
  unint64_t v43 = _swiftEmptyArrayStorage;
  sub_100095E7C(0, v8, 0);
  uint64_t v40 = v43;
  uint64_t result = (void *)sub_100650E60(a3);
  uint64_t v10 = (uint64_t)result;
  uint64_t v12 = v11;
  uint64_t v13 = 0;
  int v15 = v14 & 1;
  uint64_t v16 = a3 + 64;
  uint64_t v33 = v11;
  int64_t v34 = v8;
  uint64_t v31 = a3 + 96;
  uint64_t v35 = a3 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a3 + 32))
  {
    unint64_t v19 = (unint64_t)v10 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_32;
    }
    int v32 = v15;
    uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 8 * v10);
    v42[0] = *(void *)(*(void *)(a3 + 48) + 8 * v10);
    v42[1] = v20;
    v37(v42);
    if (v4) {
      return (void *)swift_release();
    }
    uint64_t v39 = 0;
    id v21 = v40;
    unint64_t v43 = v40;
    unint64_t v23 = v40[2];
    unint64_t v22 = v40[3];
    if (v23 >= v22 >> 1)
    {
      sub_100095E7C(v22 > 1, v23 + 1, 1);
      id v21 = v43;
    }
    v21[2] = v23 + 1;
    unint64_t v24 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v40 = v21;
    uint64_t result = (void *)sub_10002C4EC(v41, (uint64_t)v21 + v24 + *(void *)(v36 + 72) * v23, &qword_1007FC1E8);
    int64_t v17 = 1 << *(unsigned char *)(a3 + 32);
    if (v10 >= v17) {
      goto LABEL_33;
    }
    uint64_t v16 = v35;
    uint64_t v25 = *(void *)(v35 + 8 * v19);
    if ((v25 & (1 << v10)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_35;
    }
    unint64_t v26 = v25 & (-2 << (v10 & 0x3F));
    if (v26)
    {
      int64_t v17 = __clz(__rbit64(v26)) | v10 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v4 = v39;
      int64_t v18 = v34;
    }
    else
    {
      unint64_t v27 = v19 + 1;
      unint64_t v28 = (unint64_t)(v17 + 63) >> 6;
      uint64_t v4 = v39;
      int64_t v18 = v34;
      if (v19 + 1 < v28)
      {
        unint64_t v29 = *(void *)(v35 + 8 * v27);
        if (!v29)
        {
          unint64_t v27 = v19 + 2;
          if (v19 + 2 >= v28) {
            goto LABEL_4;
          }
          unint64_t v29 = *(void *)(v35 + 8 * v27);
          if (!v29)
          {
            unint64_t v27 = v19 + 3;
            if (v19 + 3 >= v28) {
              goto LABEL_4;
            }
            unint64_t v29 = *(void *)(v35 + 8 * v27);
            if (!v29)
            {
              while (v28 - 4 != v19)
              {
                unint64_t v29 = *(void *)(v31 + 8 * v19++);
                if (v29)
                {
                  uint64_t result = (void *)sub_1000733B8(v10, v12, v32 & 1);
                  uint64_t v16 = v35;
                  unint64_t v27 = v19 + 3;
                  goto LABEL_18;
                }
              }
              uint64_t result = (void *)sub_1000733B8(v10, v12, v32 & 1);
              uint64_t v16 = v35;
              goto LABEL_4;
            }
          }
        }
LABEL_18:
        int64_t v17 = __clz(__rbit64(v29)) + (v27 << 6);
      }
    }
LABEL_4:
    int v15 = 0;
    ++v13;
    uint64_t v12 = v33;
    uint64_t v10 = v17;
    if (v13 == v18) {
      return v40;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void *sub_10031770C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v9 = *(void *)(type metadata accessor for SuggestedDateItem.PhotoDateItem(0) - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

int64x2_t sub_100317854()
{
  int64x2_t result = vdupq_n_s64(0x4046000000000000uLL);
  xmmword_100807FC8 = (__int128)result;
  return result;
}

uint64_t sub_1003179A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a1;
  uint64_t v44 = a3;
  uint64_t v46 = a2;
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v42 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v43 = v4;
  uint64_t v45 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v49 = type metadata accessor for UIListContentConfiguration();
  uint64_t v12 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  char v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  UITableViewCell.defaultContentConfiguration()();
  sub_1004B59C0();
  UIListContentConfiguration.text.setter();
  id v41 = self;
  id v15 = [v41 systemIndigoColor];
  uint64_t v16 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v16(aBlock, 0);
  uint64_t v17 = v47;
  uint64_t v18 = v47 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v18, v5);
  static Date.now.getter();
  sub_1002AB594(1, 0, (uint64_t)v8);
  unint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  uint64_t v20 = v11;
  id v21 = (void *)v49;
  v19(v20, v5);
  UIListContentConfiguration.secondaryText.setter();
  uint64_t v52 = v21;
  id v53 = (uint64_t (*)(uint64_t, uint64_t))&protocol witness table for UIListContentConfiguration;
  unint64_t v22 = sub_100062E54(aBlock);
  unint64_t v23 = *(void (**)(uint64_t *, char *, void *))(v12 + 16);
  uint64_t v50 = v14;
  v23(v22, v14, v21);
  unint64_t v24 = v48;
  UITableViewCell.contentConfiguration.setter();
  if (*(unsigned char *)(v17 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) == 1)
  {
    uint64_t v25 = *(void **)&v24[OBJC_IVAR____TtC7Journal17SuggestedDateCell_popupMenuButton];
    if (qword_1007F7C58 != -1) {
      swift_once();
    }
    [v25 setImage:qword_10083E940 forState:0];
    [v24 setAccessoryView:v25];
    id v26 = [v24 accessoryView];
    if (v26)
    {
      unint64_t v27 = v26;
      id v28 = [v41 secondaryLabelColor];
      [v27 setTintColor:v28];
    }
    [v25 setShowsMenuAsPrimaryAction:1];
    sub_10001B284(0, (unint64_t *)&unk_100809EE0);
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1006D6D00;
    uint64_t v30 = v45;
    sub_100045944(v44, v45);
    unint64_t v31 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v46;
    *(void *)(v32 + 24) = v24;
    sub_10002C4EC(v30, v32 + v31, (uint64_t *)&unk_1007FC470);
    id v53 = sub_100318CF0;
    uint64_t v54 = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100318A0C;
    uint64_t v52 = &unk_1007A5478;
    uint64_t v33 = _Block_copy(aBlock);
    int64_t v34 = self;
    swift_retain();
    uint64_t v35 = v24;
    id v36 = [v34 elementWithProvider:v33];
    _Block_release(v33);
    swift_release();
    *(void *)(v29 + 32) = v36;
    aBlock[0] = v29;
    specialized Array._endMutation()();
    v37._uint64_t countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v55.value.super.Class isa = 0;
    v55.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v55, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock[0], v40).super.super.isa;
    [v25 setMenu:isa];
  }
  return (*(uint64_t (**)(char *, void *))(v12 + 8))(v50, v21);
}

uint64_t sub_100317F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100045944(a5, (uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  sub_10002C4EC((uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v12, (uint64_t *)&unk_1007FC470);
  *(void *)(v14 + v13) = v11;
  id v15 = (void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8));
  *id v15 = a1;
  v15[1] = a2;
  swift_retain();
  swift_retain();
  sub_10006E300((uint64_t (*)(void, __n128))sub_100318F58, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_100318120(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (result)
  {
    __chkstk_darwin(result);
    v10[2] = v5;
    v10[3] = v6;
    unint64_t v8 = (unint64_t)sub_10031770C((void (*)(uint64_t *__return_ptr, uint64_t))sub_100319008, (uint64_t)v10, v7);
    if (v8 >> 62)
    {
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      uint64_t v9 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      uint64_t v9 = v8;
    }
    swift_bridgeObjectRelease();
    a4(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10031824C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v58 = a4;
  uint64_t v53 = a3;
  uint64_t v46 = (void *)a2;
  uint64_t v5 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  uint64_t v6 = v5 - 8;
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v55 = v7;
  uint64_t v57 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v42 - v12;
  __chkstk_darwin(v14);
  id v59 = (char *)&v42 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void **)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  uint64_t v23 = sub_1002AB594(1, 0, (uint64_t)v22);
  uint64_t v51 = v24;
  uint64_t v52 = v23;
  uint64_t v25 = (void (*)(char *, uint64_t))v20[1];
  uint64_t v43 = v22;
  v25(v22, v19);
  id v50 = *(id *)(a1 + *(int *)(v6 + 28));
  uint64_t v56 = a1;
  sub_1002AA5EC((uint64_t)v18);
  id v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v20[7];
  uint64_t v48 = v18;
  v26(v18, 0, 1, v19);
  sub_100045944((uint64_t)v46, (uint64_t)v13);
  uint64_t v46 = v20;
  unint64_t v27 = (uint64_t (*)(char *, uint64_t, uint64_t))v20[6];
  int v28 = v27(v13, 1, v19);
  uint64_t v44 = v20 + 1;
  if (v28 == 1)
  {
    sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FC470);
    uint64_t v29 = 1;
  }
  else
  {
    sub_1002AA5EC((uint64_t)v59);
    v25(v13, v19);
    uint64_t v29 = 0;
  }
  uint64_t v30 = (uint64_t)v59;
  v26(v59, v29, 1, v19);
  uint64_t v31 = (uint64_t)v48;
  uint64_t v32 = v49;
  uint64_t v33 = v49 + *(int *)(v47 + 48);
  sub_100045944((uint64_t)v48, v49);
  sub_100045944(v30, v33);
  if (v27((char *)v32, 1, v19) != 1)
  {
    uint64_t v34 = v45;
    sub_100045944(v32, v45);
    if (v27((char *)v33, 1, v19) != 1)
    {
      uint64_t v35 = v43;
      ((void (*)(char *, uint64_t, uint64_t))v46[4])(v43, v33, v19);
      sub_100065D60();
      dispatch thunk of static Equatable.== infix(_:_:)();
      v25(v35, v19);
      sub_10001457C(v30, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v31, (uint64_t *)&unk_1007FC470);
      v25((char *)v34, v19);
      sub_10001457C(v32, (uint64_t *)&unk_1007FC470);
      goto LABEL_11;
    }
    sub_10001457C(v30, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v31, (uint64_t *)&unk_1007FC470);
    v25((char *)v34, v19);
    goto LABEL_9;
  }
  sub_10001457C(v30, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v31, (uint64_t *)&unk_1007FC470);
  if (v27((char *)v33, 1, v19) != 1)
  {
LABEL_9:
    sub_10001457C(v32, &qword_1007FB8B0);
    goto LABEL_11;
  }
  sub_10001457C(v32, (uint64_t *)&unk_1007FC470);
LABEL_11:
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  uint64_t v36 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v38 = v57;
  sub_100319028(v56, v57);
  unint64_t v39 = (*(unsigned __int8 *)(v54 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v36;
  sub_100319184(v38, v40 + v39);
  uint64_t result = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  *uint64_t v58 = result;
  return result;
}

void sub_10031886C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100010218(&qword_1007FABA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = Strong + OBJC_IVAR____TtC7Journal17SuggestedDateCell_delegate;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    uint64_t v11 = *(void *)(v9 + 8);

    if (v10)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v13 = sub_100010218((uint64_t *)&unk_100804070);
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v6, a3, v15);
      v6[v14] = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
      sub_100062EC0((uint64_t)v6, ObjectType, v11);
      swift_unknownObjectRelease();
      sub_10001457C((uint64_t)v6, &qword_1007FABA8);
    }
  }
}

uint64_t sub_100318A0C(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_100318DC8, v4);
  swift_release();

  return swift_release();
}

void sub_100318AA0(uint64_t a1, uint64_t a2)
{
  sub_10001B284(0, (unint64_t *)&unk_100807680);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

id sub_100318B1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SuggestedDateCell();
  return [super dealloc];
}

uint64_t type metadata accessor for SuggestedDateCell()
{
  return self;
}

uint64_t sub_100318BC0()
{
  uint64_t v1 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();

  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_100318CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100317F94(a1, a2, v6, v7, v8);
}

uint64_t sub_100318D78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100318D88()
{
  return swift_release();
}

uint64_t sub_100318D90()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_100318DC8(uint64_t a1)
{
  sub_100318AA0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100318DD0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100318E08()
{
  uint64_t v1 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100318F58(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void (**)(uint64_t))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100318120(a1, v1 + v4, v6, v7);
}

uint64_t sub_100319008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10031824C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100319028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031908C()
{
  uint64_t v1 = (int *)(type metadata accessor for SuggestedDateItem.PhotoDateItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_100319184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003191E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SuggestedDateItem.PhotoDateItem(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_10031886C(a1, v4, v5);
}

id sub_10031925C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC7Journal17SuggestedDateCell_popupMenuButton;
  uint64_t v5 = qword_1007F6DD8;
  uint64_t v6 = v2;
  if (v5 != -1) {
    swift_once();
  }
  *(void *)&v2[v4] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, xmmword_100807FC8];
  *(void *)&v6[OBJC_IVAR____TtC7Journal17SuggestedDateCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for SuggestedDateCell();
  id v8 = [super initWithStyle:1 reuseIdentifier:v7];

  id v9 = v8;
  [v9 setSelectionStyle:0];
  [v9 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];

  return v9;
}

void sub_1003193BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AudioManager(0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor();
  uint64_t v7 = static MainActor.shared.getter();
  id v8 = (void *)swift_allocObject();
  uint64_t v8[2] = v7;
  void v8[3] = &protocol witness table for MainActor;
  v8[4] = v5;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_1008083A8, (uint64_t)v8);
  swift_release();
  uint64_t v9 = *(void *)(v1 + qword_1007FB128);
  uint64_t v10 = qword_10083D378;
  objc_super v11 = *(void **)(v1 + qword_10083D378);
  uint64_t v12 = *(void **)(v9 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
  *(void *)(v9 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset) = v11;
  id v13 = v11;
  sub_1005E0A28(v12);

  uint64_t v15 = *(void **)(v1 + v10);
  if (v15)
  {
    id v16 = v15;
    sub_1001832CC();
    uint64_t v18 = v17;
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v21 = v1 + qword_1007FB130;
  *(void *)uint64_t v21 = v18;
  *(void *)(v21 + 8) = v20;
  *(unsigned char *)(v21 + 16) = v15 == 0;
  sub_100501C44(v14);
  sub_10031B61C();
}

void sub_10031958C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10031E824();
}

char *sub_1003195B4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[qword_100808010];
  uint64_t v10 = qword_1007F7D60;
  objc_super v11 = v4;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_100026A54(v12, (uint64_t)qword_10083EC20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v13, v12);
  UUID.init()();
  *(void *)&v11[qword_10083D368 + 8] = 0;
  swift_unknownObjectWeakInit();
  v11[qword_10083D370] = 0;
  *(void *)&v11[qword_10083D378] = 0;
  if (qword_1007F7BF0 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_10083E8D8;
  if (qword_10083E8D8)
  {
    id v15 = [self systemIndigoColor];
    id v16 = [v14 imageWithTintColor:v15];

    if (qword_1007F7450 != -1) {
      swift_once();
    }
    id v17 = [v16 imageWithConfiguration:qword_10083DA60];
  }
  else
  {
    id v17 = 0;
  }
  *(void *)&v11[qword_100808020] = v17;
  if (qword_1007F7C00 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_10083E8E8;
  if (qword_10083E8E8)
  {
    id v19 = [self systemIndigoColor];
    id v20 = [v18 imageWithTintColor:v19];

    if (qword_1007F7450 != -1) {
      swift_once();
    }
    id v21 = [v20 imageWithConfiguration:qword_10083DA60];
  }
  else
  {
    id v21 = 0;
  }
  *(void *)&v11[qword_100808028] = v21;
  uint64_t v22 = qword_100808030;
  type metadata accessor for NoThumbUISlider();
  *(void *)&v11[v22] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v23 = qword_100808038;
  *(void *)&v11[v23] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v24 = qword_100808040;
  *(void *)&v11[v24] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v25 = qword_100808048;
  *(void *)&v11[v25] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v26 = qword_100808050;
  *(void *)&v11[v26] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v27 = qword_100808058;
  *(void *)&v11[v27] = [objc_allocWithZone((Class)UIStackView) init];
  v11[qword_100808060] = 0;

  type metadata accessor for VideoAssetView();
  id v28 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_100501C38(v28, a1, a2, a3, a4);
  uint64_t v30 = v29;
  uint64_t v31 = qword_1007FB128;
  uint64_t v32 = *(void **)&v29[qword_1007FB128];
  uint64_t v33 = *((unsigned __int8 *)v32 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  *((unsigned char *)v32 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = 5;
  uint64_t v34 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (*((unsigned char *)v32 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated) == 1)
  {
    switch(v33)
    {
      case 5:
        uint64_t v168 = v29;
        v169 = v32;
        swift_bridgeObjectRelease();
        break;
      default:
        char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v38 = v30;
        unint64_t v39 = v32;
        uint64_t v36 = (void *)swift_bridgeObjectRelease();
        if ((v37 & 1) == 0) {
          goto LABEL_21;
        }
        break;
    }
  }
  else
  {
    uint64_t v35 = v29;
    uint64_t v36 = v32;
LABEL_21:
    (*(void (**)(void *))((swift_isaMask & *v32) + 0x110))(v36);
    *((unsigned char *)v32 + v34) = 1;
  }

  *(void *)(*(void *)&v30[v31] + OBJC_IVAR____TtC7Journal14VideoAssetView_delegate + 8) = &off_1007A5540;
  swift_unknownObjectWeakAssign();
  uint64_t v40 = qword_100808048;
  [*(id *)&v30[qword_100808048] addTarget:v30 action:"togglePlay:" forControlEvents:64];
  uint64_t v41 = qword_100808030;
  [*(id *)&v30[qword_100808030] addTarget:v30 action:"timeSliderDidChange:" forControlEvents:4096];
  uint64_t v42 = qword_100808050;
  uint64_t v43 = *(void **)&v30[qword_100808050];
  [v43 setAdjustsFontForContentSizeCategory:1];
  [v43 setAdjustsFontSizeToFitWidth:1];
  [v43 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [v43 setLineBreakMode:0];
  [v43 setNumberOfLines:0];
  uint64_t v44 = qword_1007F7290;
  id v45 = v43;
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v170 = v40;
  [v45 setFont:qword_10083D858];

  uint64_t v171 = (char *)v42;
  uint64_t v46 = *(void **)&v30[v42];
  uint64_t v47 = self;
  id v48 = v46;
  id v49 = [v47 secondaryLabelColor];
  [v48 setTextColor:v49];

  id v50 = *(id *)&v30[v41];
  id v51 = [v47 systemGrayColor];
  [v50 setMinimumTrackTintColor:v51];

  id v52 = *(id *)&v30[v41];
  id v53 = [v47 clearColor];
  [v52 setThumbTintColor:v53];

  uint64_t v173 = v41;
  [*(id *)&v30[v41] setContinuous:1];
  uint64_t v54 = qword_100808038;
  uint64_t v55 = qword_1007F7250;
  id v56 = *(id *)&v30[qword_100808038];
  if (v55 != -1) {
    swift_once();
  }
  [v56 setFont:qword_10083D818];

  id v57 = *(id *)&v30[v54];
  id v58 = [v47 secondaryLabelColor];
  [v57 setTextColor:v58];

  [*(id *)&v30[v54] setTextAlignment:0];
  uint64_t v59 = qword_100808040;
  [*(id *)&v30[qword_100808040] setFont:qword_10083D818];
  id v60 = *(id *)&v30[v59];
  id v61 = [v47 secondaryLabelColor];
  [v60 setTextColor:v61];

  [*(id *)&v30[v59] setTextAlignment:2];
  id v62 = [objc_allocWithZone((Class)UIStackView) init];
  [v62 setAxis:0];
  [v62 setAlignment:3];
  [v62 setDistribution:1];
  [v62 addArrangedSubview:*(void *)&v30[v54]];
  [v62 addArrangedSubview:*(void *)&v30[v59]];
  uint64_t v174 = qword_100808058;
  uint64_t v63 = *(void **)&v30[qword_100808058];
  [v63 setAxis:1];
  [v63 setAlignment:3];
  [v63 setSpacing:0.0];
  uint64_t v64 = qword_1007F7308;
  id v65 = v63;
  if (v64 != -1) {
    swift_once();
  }
  double v66 = *(double *)&qword_10083D918;
  if (qword_1007F7348 != -1) {
    swift_once();
  }
  double v67 = 0.0;
  [v65 setLayoutMargins:v66 0.0 *(double *)&qword_10083D958 0.0];

  uint64_t v68 = *(void **)&v30[v174];
  [v68 setLayoutMarginsRelativeArrangement:1];
  id v69 = self;
  id v70 = v68;
  id v71 = [v69 effectWithStyle:9];
  id v72 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v71];
  id v73 = [v47 clearColor];
  [v72 setBackgroundColor:v73];

  id v74 = v72;
  [v70 bounds];
  [v74 setFrame:];

  [v74 setAutoresizingMask:18];
  [v74 setUserInteractionEnabled:0];
  [v70 insertSubview:v74 atIndex:0];

  id v75 = [objc_allocWithZone((Class)UIView) init];
  id v76 = [v47 clearColor];
  [v75 setBackgroundColor:v76];

  id v77 = [self sharedApplication];
  id v78 = [v77 connectedScenes];
  sub_10001B284(0, (unint64_t *)&qword_10080CF00);
  sub_1000872E4();
  uint64_t v79 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v80 = (void *)sub_1003F1F90(v79);
  swift_bridgeObjectRelease();
  if (v80)
  {
    self;
    uint64_t v81 = (void *)swift_dynamicCastObjCClass();

    uint64_t v82 = v173;
    if (v81)
    {
      id v83 = [v81 keyWindow];

      if (v83)
      {
        [v83 safeAreaInsets];
        double v67 = v84;
      }
    }
    else
    {
    }
  }
  else
  {

    uint64_t v82 = v173;
  }
  uint64_t v85 = *(void **)&v30[v174];
  [v85 addArrangedSubview:*(void *)&v171[(void)v30]];
  [v85 addArrangedSubview:*(void *)&v30[v82]];
  [v85 addArrangedSubview:v62];
  [v85 addArrangedSubview:*(void *)&v30[v170]];
  [v85 addArrangedSubview:v75];
  if (qword_1007F7408 != -1) {
    swift_once();
  }
  double v86 = *(double *)&qword_10083DA18;
  if (qword_1007F7418 != -1) {
    swift_once();
  }
  if (v86 > *(double *)&qword_10083DA28) {
    double v87 = v86;
  }
  else {
    double v87 = *(double *)&qword_10083DA28;
  }
  id v88 = *(id *)&v30[v170];
  uint64_t v89 = &stru_1007D7000;
  [v88 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v90 = [v88 heightAnchor];
  id v91 = [v90 constraintEqualToConstant:v87];

  [v91 setActive:1];
  id v92 = *(id *)&v30[v170];
  [v92 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v93 = [v92 widthAnchor];
  id v94 = [v93 constraintEqualToConstant:v87];

  [v94 setActive:1];
  id v95 = [*(id *)&v30[v170] imageView];
  if (v95)
  {
    uint64_t v96 = v95;
    [v95 setFrame:((v87 - v86) * 0.5) 0.0 v87 v87];
  }
  uint64_t v97 = qword_1007F7368;
  id v98 = *(id *)&v30[v173];
  if (v97 != -1) {
    swift_once();
  }
  double v99 = *(double *)&qword_10083D978;
  id v100 = [v98 superview];
  id v172 = v75;
  if (v100)
  {
    uint64_t v101 = v100;
    [v98 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v102 = [v98 leadingAnchor];
    id v103 = [v101 leadingAnchor];
    id v104 = [v102 constraintEqualToAnchor:v103];

    [v104 setConstant:v99];
    uint64_t v105 = v62;
    if (v104)
    {
      id v104 = v104;
      [v104 setActive:1];

      id v98 = v104;
    }
    uint64_t v106 = v173;

    uint64_t v89 = &stru_1007D7000;
  }
  else
  {
    id v104 = 0;
    uint64_t v101 = v98;
    uint64_t v105 = v62;
    uint64_t v106 = v173;
  }

  double v107 = *(double *)&qword_10083D978;
  id v108 = *(id *)&v30[v106];
  id v109 = [v108 superview];
  if (v109)
  {
    id v110 = v109;
    [v108 v89[96].name];
    id v111 = [v108 trailingAnchor];
    id v112 = [v110 trailingAnchor];
    id v113 = [v111 constraintEqualToAnchor:v112];

    [v113 setConstant:-v107];
    if (v113)
    {
      id v113 = v113;
      [v113 setActive:1];

      id v108 = v113;
    }

    uint64_t v106 = v173;
    uint64_t v89 = &stru_1007D7000;
  }
  else
  {
    id v113 = 0;
    id v110 = v108;
  }

  double v114 = *(double *)&qword_10083D978;
  id v115 = [v105 superview];
  if (v115)
  {
    uint64_t v116 = v115;
    [v105 v89[96].name];
    id v117 = [v105 leadingAnchor];
    id v118 = [v116 leadingAnchor];
    id v119 = [v117 constraintEqualToAnchor:v118];

    [v119 setConstant:v114];
    id v120 = v119;
    uint64_t v89 = &stru_1007D7000;
    id v121 = v120;
    [v120 setActive:1];
  }
  double v122 = *(double *)&qword_10083D978;
  id v123 = [v105 superview];
  uint64_t v124 = &stru_1007D7000;
  if (v123)
  {
    uint64_t v125 = v123;
    [v105 v89[96].name];
    id v126 = [v105 trailingAnchor];
    id v127 = [v125 trailingAnchor];
    id v128 = [v126 constraintEqualToAnchor:v127];

    uint64_t v124 = &stru_1007D7000;
    [v128 setConstant:-v122];
    id v129 = v128;
    uint64_t v89 = &stru_1007D7000;
    id v130 = v129;
    [v129 setActive:1];
  }
  uint64_t v131 = v172;
  id v132 = [v172 superview];
  if (v132)
  {
    uint64_t v133 = v132;
    [v172 v89[96].name];
    id v134 = [v172 leadingAnchor];
    id v135 = [v133 leadingAnchor];
    id v136 = [v134 constraintEqualToAnchor:v135];

    uint64_t v124 = &stru_1007D7000;
    [v136 setConstant:0.0];
    id v137 = v136;
    uint64_t v89 = &stru_1007D7000;
    id v138 = v137;
    [v137 setActive:1];
  }
  id v139 = [v172 superview];
  if (v139)
  {
    uint64_t v140 = v139;
    [v172 v89[96].name];
    id v141 = [v172 trailingAnchor];
    id v142 = [v140 trailingAnchor];
    id v143 = [v141 constraintEqualToAnchor:v142];

    uint64_t v124 = &stru_1007D7000;
    [v143 setConstant:0.0];
    id v144 = v143;
    uint64_t v89 = &stru_1007D7000;
    id v145 = v144;
    [v144 setActive:1];
  }
  if (qword_1007F7370 != -1) {
    swift_once();
  }
  double v146 = *(double *)&qword_10083D980 - v67;
  [v172 v89[96].name];
  id v147 = [v172 heightAnchor];
  id v148 = [v147 constraintEqualToConstant:v146];

  [v148 v124[90].name:1];
  uint64_t v149 = *(void **)&v30[v174];
  [v149 setCustomSpacing:*(void *)&v30[v106] afterView:-*(double *)&qword_10083D958];
  [v149 bringSubviewToFront:*(void *)&v30[v106]];
  [v149 bringSubviewToFront:*(void *)&v30[v170]];
  [v30 addSubview:v149];
  id v150 = v149;
  id v151 = sub_1001DD438(0, 1, 0.0);

  id v152 = *(id *)&v30[v174];
  id v153 = [v152 superview];
  if (v153)
  {
    id v154 = v153;
    [v152 v89[96].name];
    id v155 = [v152 leadingAnchor];
    id v156 = [v154 leadingAnchor];
    id v157 = [v155 constraintEqualToAnchor:v156];

    [v157 setConstant:0.0];
    if (v157)
    {
      id v157 = v157;
      [v157 setActive:1];

      id v152 = v157;
    }

    uint64_t v89 = &stru_1007D7000;
    uint64_t v131 = v172;
  }
  else
  {
    id v157 = 0;
    id v154 = v152;
  }

  id v158 = *(id *)&v30[v174];
  id v159 = [v158 superview];
  if (v159)
  {
    uint64_t v160 = v159;
    [v158 v89[96].name];
    id v161 = [v158 trailingAnchor];
    id v162 = [v160 trailingAnchor];
    id v163 = [v161 constraintEqualToAnchor:v162];

    [v163 setConstant:0.0];
    if (v163)
    {
      id v163 = v163;
      [v163 setActive:1];

      id v158 = v163;
    }
  }
  else
  {
    id v163 = 0;
    uint64_t v160 = v158;
  }

  id v164 = [self defaultCenter];
  uint64_t v165 = qword_1007F6E98;
  v166 = v30;
  if (v165 != -1) {
    swift_once();
  }
  [v164 addObserver:v166 selector:"onFullScreenAssetViewClosedNotificationReceived" name:qword_10083D420 object:0];

  return v166;
}

void sub_10031AD68()
{
  uint64_t v1 = *(void *)(v0 + qword_1007FB128);
  uint64_t v2 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v3)
  {
    id v4 = v3;
    id v5 = [v4 layer];
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6) {

    }
    id v7 = [v6 player];
    [v7 setMuted:1];

    id v8 = *(void **)(v1 + v2);
    if (v8)
    {
      id v9 = v8;
      id v10 = [v9 layer];
      self;
      objc_super v11 = (void *)swift_dynamicCastObjCClass();
      if (!v11) {

      }
      id v12 = [v11 player];
      [v12 pause];
    }
  }
}

void sub_10031AEE8(char a1)
{
  uint64_t v2 = *(void **)(*(void *)(v1 + qword_1007FB128) + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v2)
  {
    id v4 = v2;
    id v5 = [v4 layer];
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6) {

    }
    id v7 = [v6 player];
    [v7 setMuted:a1 & 1];
  }
}

void sub_10031AFDC(void *a1)
{
  id v1 = a1;
  sub_10031AD68();
}

void sub_10031B024(void *a1)
{
  uint64_t v2 = self;
  id v3 = a1;
  id v4 = [v2 defaultCenter];
  if (qword_1007F6E98 != -1) {
    swift_once();
  }
  [v4 removeObserver:v3 name:qword_10083D420 object:0];

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for FullScreenVideoView();
  [super removeFromSuperview];
}

void sub_10031B0F4()
{
  uint64_t v1 = v0 + qword_100808010;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_100808018;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1000109BC(v0 + qword_10083D368);

  objc_super v5 = *(void **)(v0 + qword_100808058);
}

id sub_10031B244()
{
  id v1 = v0;
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v14 = v5;
    type metadata accessor for UUID();
    sub_10031EF58((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v13 = sub_10011EA98(v6, v7, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s FullScreenVideoViewController is deinited", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v8 = [self defaultCenter];
  uint64_t v9 = qword_1007F6E98;
  id v10 = v1;
  if (v9 != -1) {
    swift_once();
  }
  [v8 removeObserver:v10 name:qword_10083D420 object:0 v13 v14];

  objc_super v11 = (objc_class *)type metadata accessor for FullScreenVideoView();
  v15.receiver = v10;
  v15.super_class = v11;
  return [super dealloc];
}

id sub_10031B4A0(void *a1)
{
  id v1 = a1;
  return sub_10031B244();
}

void sub_10031B4C8(uint64_t a1)
{
  uint64_t v2 = a1 + qword_100808010;
  uint64_t v3 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_100808018;
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1000109BC(a1 + qword_10083D368);

  uint64_t v6 = *(void **)(a1 + qword_100808058);
}

void sub_10031B61C()
{
  id v1 = v0;
  uint64_t v2 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1007F9E10);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v49 - v9;
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = qword_10083D378;
  id v19 = *(void **)&v0[qword_10083D378];
  if (!v19) {
    goto LABEL_4;
  }
  id v20 = v19;
  sub_1003F3154((uint64_t)v10);

  uint64_t v21 = _s10VideoAssetC9VideoDataVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21) == 1)
  {
    sub_10001457C((uint64_t)v10, &qword_1007F9E10);
LABEL_4:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(v13, 1, 1, v14, v16);
LABEL_5:
    sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FC470);
    uint64_t v22 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_6;
  }
  sub_100045944((uint64_t)&v10[*(int *)(v21 + 20)], (uint64_t)v13);
  sub_10031F168((uint64_t)v10, _s10VideoAssetC9VideoDataVMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  static Date.FormatStyle.TimeStyle.shortened.getter();
  static FormatStyleCapitalizationContext.standalone.getter();
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static Date.now.getter();
  sub_10031EF58((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
  Date.formatted<A>(_:)();
  sub_10031F168((uint64_t)v4, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
  uint64_t v27 = v51;
  uint64_t v28 = v52;
  uint64_t v22 = sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v30 = *((void *)v22 + 2);
  unint64_t v29 = *((void *)v22 + 3);
  if (v30 >= v29 >> 1) {
    uint64_t v22 = sub_1002A54A0((char *)(v29 > 1), v30 + 1, 1, v22);
  }
  *((void *)v22 + 2) = v30 + 1;
  uint64_t v31 = &v22[16 * v30];
  *((void *)v31 + 4) = v27;
  *((void *)v31 + 5) = v28;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
LABEL_6:
  uint64_t v23 = v50;
  uint64_t v24 = *(void **)&v1[v50];
  if (v24)
  {
    id v25 = v24;
    sub_1003F3154((uint64_t)v7);

    uint64_t v26 = _s10VideoAssetC9VideoDataVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v7, 1, v26) == 1)
    {
      sub_10001457C((uint64_t)v7, &qword_1007F9E10);
    }
    else
    {
      uint64_t v32 = &v7[*(int *)(v26 + 24)];
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *((void *)v32 + 1);
      swift_bridgeObjectRetain();
      sub_10031F168((uint64_t)v7, _s10VideoAssetC9VideoDataVMa);
      if (v33)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_1002A54A0(0, *((void *)v22 + 2) + 1, 1, v22);
        }
        unint64_t v36 = *((void *)v22 + 2);
        unint64_t v35 = *((void *)v22 + 3);
        if (v36 >= v35 >> 1) {
          uint64_t v22 = sub_1002A54A0((char *)(v35 > 1), v36 + 1, 1, v22);
        }
        *((void *)v22 + 2) = v36 + 1;
        char v37 = &v22[16 * v36];
        *((void *)v37 + 4) = v34;
        *((void *)v37 + 5) = v33;
      }
    }
  }
  uint64_t v38 = *(void **)&v1[qword_100808050];
  id v51 = v22;
  sub_100010218(&qword_100800A70);
  sub_100014488((unint64_t *)&qword_1007F9100, &qword_100800A70);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 setText:v39];

  uint64_t v40 = *(void **)&v1[v23];
  if (v40)
  {
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v1;
    uint64_t v42 = qword_1007F6A58;
    id v43 = v40;
    uint64_t v44 = v1;
    if (v42 != -1) {
      swift_once();
    }
    id v45 = (void *)qword_10083CF60;
    uint64_t v46 = self;
    id v47 = v45;
    id v48 = [v46 currentTraitCollection];
    sub_10017D574(5, 0, 1, v47, v48, (uint64_t)sub_10031F160, v41);

    swift_release();
  }
}

void sub_10031BCC4(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v18 = v8;
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    id v11 = a1;
    uint64_t v17 = static OS_dispatch_queue.main.getter();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = v11;
    aBlock[4] = sub_10031F208;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    uint64_t aBlock[3] = &unk_1007A5780;
    uint64_t v14 = _Block_copy(aBlock);
    id v16 = v11;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    id v19 = _swiftEmptyArrayStorage;
    sub_10031EF58((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v15 = (void *)v17;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v18);
    swift_release();
    swift_release();
  }
}

void sub_10031BFF8(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    id v5 = [a2 size];
    uint64_t v6 = &v4[qword_1007FB130];
    *(void *)uint64_t v6 = v7;
    *((void *)v6 + 1) = v8;
    v6[16] = 0;
    sub_100501C44(v5);
  }
}

void sub_10031C078(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10031EBE0();
}

void sub_10031C0D8(void *a1)
{
  [a1 value];
  __C::CMTime v22 = CMTime.init(seconds:preferredTimescale:)(v2, 600);
  uint64_t v3 = *(void **)(*(void *)(v1 + qword_1007FB128) + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v3)
  {
    Swift::Int64 value = v22.value;
    uint64_t v5 = *(void *)&v22.timescale;
    Swift::Int64 epoch = v22.epoch;
    id v7 = v3;
    id v8 = [v7 layer];
    self;
    uint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {

    }
    id v10 = [v9 player];
    if (v10)
    {
      CMTimeScale timescale = kCMTimeZero.timescale;
      CMTimeFlags flags = kCMTimeZero.flags;
      CMTimeEpoch v20 = kCMTimeZero.epoch;
      v21[0] = value;
      v21[1] = v5;
      v21[2] = epoch;
      CMTimeEpoch v16 = v20;
      CMTimeValue v17 = kCMTimeZero.value;
      CMTimeScale v18 = timescale;
      CMTimeFlags v19 = flags;
      CMTimeValue v13 = kCMTimeZero.value;
      CMTimeScale v14 = timescale;
      CMTimeFlags v15 = flags;
      [v10 seekToTime:v21 toleranceBefore:&v17 toleranceAfter:&v13];
    }
  }
}

void sub_10031C218(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10031C0D8(v4);
}

uint64_t sub_10031C280()
{
  return sub_10031C2B0(sub_10051997C);
}

uint64_t sub_10031C298()
{
  return sub_10031C2B0(sub_100519A74);
}

uint64_t sub_10031C2B0(void (*a1)(void))
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      a1();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10031C344()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self isMainThread])
  {
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    id v31 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v0;
    aBlock[4] = sub_10031F13C;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    uint64_t aBlock[3] = &unk_1007A5708;
    uint64_t v21 = _Block_copy(aBlock);
    __C::CMTime v22 = v0;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10031EF58((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v23 = v31;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return;
  }
  id v10 = *(void **)(*(void *)&v0[qword_1007FB128] + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (!v10) {
    goto LABEL_10;
  }
  id v11 = v10;
  id v12 = [v11 layer];
  self;
  CMTimeValue v13 = (void *)swift_dynamicCastObjCClass();
  if (!v13) {

  }
  id v14 = [v13 player];
  if (!v14 || (id v15 = [v14 timeControlStatus], v14, v15 != (id)2))
  {
LABEL_10:
    uint64_t v24 = *(void **)&v1[qword_100808048];
    uint64_t v25 = qword_1007F7AC0;
    id v31 = *(id *)&v1[qword_100808020];
    id v26 = v31;
    id v19 = v24;
    if (v25 == -1) {
      goto LABEL_11;
    }
    goto LABEL_16;
  }
  CMTimeEpoch v16 = *(void **)&v1[qword_100808048];
  uint64_t v17 = qword_1007F7AA8;
  id v31 = *(id *)&v1[qword_100808028];
  id v18 = v31;
  id v19 = v16;
  if (v17 != -1) {
LABEL_16:
  }
    swift_once();
LABEL_11:
  NSString v27 = String._bridgeToObjectiveC()();
  [v19 setAccessibilityLabel:v27];

  if (v31)
  {
    id v28 = *(id *)&v1[qword_100808048];
    [v28 setImage:v31 forState:0];

    id v29 = v31;
  }
}

void sub_10031C850()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)type metadata accessor for DispatchQoS();
  uint64_t v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self isMainThread])
  {
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    id v63 = v6;
    id v26 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v1;
    double v66 = sub_10031EFD8;
    uint64_t v67 = v27;
    aBlock.CMTimeValue value = (CMTimeValue)_NSConcreteStackBlock;
    *(void *)&aBlock.CMTimeScale timescale = 1107296256;
    aBlock.CMTimeEpoch epoch = (CMTimeEpoch)sub_10017D530;
    id v65 = &unk_1007A5668;
    id v28 = _Block_copy(&aBlock);
    id v29 = v1;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock.CMTimeValue value = (CMTimeValue)_swiftEmptyArrayStorage;
    sub_10031EF58((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, id))(v7 + 8))(v9, v63);
    return;
  }
  uint64_t v13 = *(void *)&v1[qword_1007FB128];
  uint64_t v14 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  id v15 = *(void **)(v13 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v15)
  {
    id v16 = v15;
    id v17 = [v16 layer];
    self;
    id v18 = (void *)swift_dynamicCastObjCClass();
    if (!v18) {

    }
    id v19 = [v18 player];
    id v63 = [v19 currentItem];

    if (v63)
    {
      id v20 = [v63 status];
      if (v20 != (id)1)
      {
        if (v20 == (id)2)
        {
          [*(id *)&v1[qword_100808048] setEnabled:0];
          [*(id *)&v1[qword_100808030] setEnabled:0];
          [*(id *)&v1[qword_100808038] setEnabled:0];
          [*(id *)&v1[qword_100808040] setEnabled:0];
          id v21 = [v63 error];
          if (v21)
          {
            __C::CMTime v22 = v21;
            swift_getErrorValue();
            uint64_t v23 = Error.localizedDescription.getter();
            unint64_t v25 = v24;
          }
          else
          {
            uint64_t v23 = 0;
            unint64_t v25 = 0xE000000000000000;
          }
          id v55 = [v63 error];
          sub_10031D6C8(v23, v25, (uint64_t)v55);
          swift_bridgeObjectRelease();
        }
        else
        {
          [*(id *)&v1[qword_100808048] setEnabled:0];
          [*(id *)&v1[qword_100808030] setEnabled:0];
          [*(id *)&v1[qword_100808038] setEnabled:0];
          id v39 = *(id *)&v1[qword_100808040];
          [v39 setEnabled:0];

          id v40 = v63;
        }
        return;
      }
      [*(id *)&v1[qword_100808048] setEnabled:1];
      uint64_t v30 = *(void **)(v13 + v14);
      if (!v30) {
        goto LABEL_20;
      }
      id v31 = v30;
      id v32 = [v31 layer];
      self;
      uint64_t v33 = (void *)swift_dynamicCastObjCClass();
      if (!v33) {

      }
      id v34 = [v33 player];
      if (v34)
      {
        [v34 currentTime];
        CMTimeValue value = aBlock.value;
        CMTimeScale timescale = aBlock.timescale;
        CMTimeFlags flags = aBlock.flags;
        CMTimeEpoch epoch = aBlock.epoch;
      }
      else
      {
LABEL_20:
        CMTimeValue value = kCMTimeZero.value;
        CMTimeScale timescale = kCMTimeZero.timescale;
        CMTimeFlags flags = kCMTimeZero.flags;
        CMTimeEpoch epoch = kCMTimeZero.epoch;
      }
      uint64_t v41 = qword_100808030;
      [*(id *)&v1[qword_100808030] setMinimumValue:0.0];
      id v42 = *(id *)&v1[v41];
      [v63 duration];
      CMTime.seconds.getter();
      *(float *)&double v43 = v43;
      [v42 setMaximumValue:v43];

      id v44 = *(id *)&v1[v41];
      aBlock.CMTimeValue value = value;
      aBlock.CMTimeScale timescale = timescale;
      aBlock.CMTimeFlags flags = flags;
      aBlock.CMTimeEpoch epoch = epoch;
      Float64 Seconds = CMTimeGetSeconds(&aBlock);
      *(float *)&Float64 Seconds = Seconds;
      [v44 setValue:Seconds];

      [*(id *)&v1[v41] addTarget:v1 action:"sliderBeganSliding" forControlEvents:1];
      [*(id *)&v1[v41] addTarget:v1 action:"sliderEndedSliding" forControlEvents:64];
      [*(id *)&v1[v41] setEnabled:1];
      uint64_t v46 = qword_100808038;
      [*(id *)&v1[qword_100808038] setEnabled:1];
      id v47 = *(id *)&v1[v46];
      aBlock.CMTimeValue value = value;
      aBlock.CMTimeScale timescale = timescale;
      aBlock.CMTimeFlags flags = flags;
      aBlock.CMTimeEpoch epoch = epoch;
      double v48 = CMTimeGetSeconds(&aBlock);
      id v49 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
      uint64_t v50 = v49;
      if (v48 >= 60.0)
      {
        if (v48 <= 3600.0)
        {
LABEL_26:
          id v53 = [v50 stringFromTimeInterval:v48];
          if (v53)
          {
            uint64_t v54 = v53;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
          }
          NSString v56 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v47 setText:v56];

          [*(id *)&v1[qword_100808040] setEnabled:1];
          uint64_t v57 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v12, 1, 1, v57);
          uint64_t v58 = swift_allocObject();
          swift_unknownObjectWeakInit();
          type metadata accessor for MainActor();
          id v59 = v63;
          swift_retain();
          uint64_t v60 = static MainActor.shared.getter();
          id v61 = (void *)swift_allocObject();
          v61[2] = v60;
          v61[3] = &protocol witness table for MainActor;
          v61[4] = v59;
          v61[5] = v58;
          swift_release();
          sub_1005D74B4((uint64_t)v12, (uint64_t)&unk_1008083B8, (uint64_t)v61);
          swift_release();

          return;
        }
        id v51 = &selRef_setAllowedUnits_;
        uint64_t v52 = 224;
      }
      else
      {
        [v49 setAllowedUnits:192];
        id v51 = &selRef_setZeroFormattingBehavior_;
        uint64_t v52 = 0x10000;
      }
      [v50 *v51 v52];
      goto LABEL_26;
    }
  }
}

uint64_t sub_10031D1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  type metadata accessor for MainActor();
  v5[13] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[14] = v7;
  v5[15] = v6;
  return _swift_task_switch(sub_10031D278, v7, v6);
}

uint64_t sub_10031D278()
{
  *(void *)(v0 + 128) = [*(id *)(v0 + 88) asset];
  sub_100010218(&qword_1008071B8);
  uint64_t v1 = static AVPartialAsyncProperty<A>.duration.getter();
  *(void *)(v0 + 136) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10031D360;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 16, v1);
}

uint64_t sub_10031D360()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[14];
    uint64_t v4 = v2[15];
    id v5 = sub_10031D654;
  }
  else
  {
    uint64_t v6 = (void *)v2[16];
    swift_release();

    uint64_t v3 = v2[14];
    uint64_t v4 = v2[15];
    id v5 = sub_10031D480;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10031D480()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_10;
  }
  id v5 = (void *)Strong;
  id v6 = *(id *)(Strong + qword_100808040);

  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v3;
  double Seconds = CMTimeGetSeconds((CMTime *)(v0 + 64));
  id v8 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v9 = v8;
  if (Seconds < 60.0)
  {
    [v8 setAllowedUnits:192];
    uint64_t v10 = &selRef_setZeroFormattingBehavior_;
    uint64_t v11 = 0x10000;
LABEL_6:
    [v9 *v10 v11];
    goto LABEL_7;
  }
  if (Seconds > 3600.0)
  {
    uint64_t v10 = &selRef_setAllowedUnits_;
    uint64_t v11 = 224;
    goto LABEL_6;
  }
LABEL_7:
  id v12 = [v9 stringFromTimeInterval:Seconds];
  if (v12)
  {
    uint64_t v13 = v12;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setText:v14];

LABEL_10:
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10031D654()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_10031D6C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_errorRetain();
    swift_errorRetain();
    id v6 = v3;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v7 = v6;
    swift_bridgeObjectRetain();
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      id v21 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315650;
      type metadata accessor for UUID();
      sub_10031EF58((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v11, v12, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_10011EA98(a1, a2, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 22) = 2112;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v21 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s Error occurred with message: %s, error: %@.", (uint8_t *)v10, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  id v13 = [self sharedApplication];
  sub_10031F2EC();
  if (!v14)
  {
LABEL_17:

    id v18 = sub_100320270();
    goto LABEL_18;
  }
  id v15 = v14;
  while (1)
  {
    id v17 = [v15 presentedViewController];
    if (v17)
    {
      id v18 = v15;
      do
      {
        id v19 = v18;
        id v18 = v17;

        id v17 = [v18 presentedViewController];
      }
      while (v17);
      id v15 = v18;
    }
    else
    {
      id v18 = v15;
    }
    self;
    id v20 = (void *)swift_dynamicCastObjCClass();
    if (!v20) {
      break;
    }
    id v16 = &selRef_topViewController;
LABEL_8:
    id v15 = [v20 *v16];

    if (!v15) {
      goto LABEL_17;
    }
  }
  self;
  id v20 = (void *)swift_dynamicCastObjCClass();
  if (v20)
  {
    id v16 = &selRef_selectedViewController;
    goto LABEL_8;
  }

  self;
  if (!swift_dynamicCastObjCClass())
  {
    id v18 = sub_100320270();
    [v15 presentViewController:v18 animated:0 completion:0];
  }
LABEL_18:
}

void sub_10031DB14()
{
  uint64_t v1 = *(void *)(v0 + qword_1007FB128);
  uint64_t v2 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v3)
  {
    id v4 = v3;
    id v5 = [v4 layer];
    self;
    id v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6) {

    }
    id v7 = [v6 player];
    if (v7)
    {
      [v7 rate];
      float v9 = v8;

      LOBYTE(v3) = v9 > 0.0;
    }
    else
    {
      LOBYTE(v3) = 0;
    }
  }
  *(unsigned char *)(v0 + qword_100808060) = (_BYTE)v3;
  uint64_t v10 = *(void **)(v1 + v2);
  if (v10)
  {
    id v11 = v10;
    id v12 = [v11 layer];
    self;
    id v13 = (void *)swift_dynamicCastObjCClass();
    if (!v13) {

    }
    id v14 = [v13 player];
    [v14 pause];
  }
}

void sub_10031DCCC(void *a1)
{
  id v1 = a1;
  sub_10031DB14();
}

void sub_10031DD14(void *a1)
{
  if (*((unsigned char *)a1 + qword_100808060) == 1)
  {
    id v1 = a1;
    sub_1005E064C();
  }
}

uint64_t type metadata accessor for FullScreenVideoView()
{
  uint64_t result = qword_100808090;
  if (!qword_100808090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10031DDD8()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_10031DEDC()
{
  return type metadata accessor for FullScreenVideoView();
}

id sub_10031DEE4(char a1)
{
  uint64_t v3 = *(void **)(*v1 + qword_1007FB108);
  id result = [v3 zoomScale];
  if (v5 > 1.0)
  {
    return [v3 setZoomScale:a1 & 1 animated:1.0];
  }
  return result;
}

uint64_t sub_10031DF70()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = *(void **)(*(void *)(v0 + qword_1007FB128) + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    id v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    [v8 setMuted:1];
  }
  sub_1005E064C();
  uint64_t v9 = type metadata accessor for AudioManager(0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  type metadata accessor for MainActor();
  uint64_t v11 = static MainActor.shared.getter();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v9;
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_10080B380, (uint64_t)v12);
  return swift_release();
}

void sub_10031E134()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + qword_1007FB128) + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 layer];
    self;
    id v4 = (void *)swift_dynamicCastObjCClass();
    if (!v4) {

    }
    id v5 = [v4 player];
    [v5 pause];
  }
}

void sub_10031E22C(CMTimeValue a1, unint64_t a2, CMTimeEpoch a3)
{
  id v4 = v3;
  CMTimeScale v6 = a2;
  unint64_t v35 = HIDWORD(a2);
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self isMainThread])
  {
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v34 = v12;
    uint64_t v33 = static OS_dispatch_queue.main.getter();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v4;
    *(void *)(v24 + 24) = a1;
    int v25 = v35;
    *(_DWORD *)(v24 + 32) = v6;
    *(_DWORD *)(v24 + 36) = v25;
    *(void *)(v24 + 40) = a3;
    uint64_t v38 = sub_10031E72C;
    uint64_t v39 = v24;
    time.CMTimeValue value = (CMTimeValue)_NSConcreteStackBlock;
    *(void *)&time.CMTimeScale timescale = 1107296256;
    time.CMTimeEpoch epoch = (CMTimeEpoch)sub_10017D530;
    char v37 = &unk_1007A55F0;
    id v26 = _Block_copy(&time);
    uint64_t v27 = v4;
    swift_release();
    static DispatchQoS.unspecified.getter();
    time.CMTimeValue value = (CMTimeValue)_swiftEmptyArrayStorage;
    sub_10031EF58((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v28 = (void *)v33;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v34);
    return;
  }
  id v16 = *(id *)&v4[qword_100808030];
  CMTime.seconds.getter();
  *(float *)&double v17 = v17;
  [v16 setValue:v17];

  id v18 = *(id *)&v4[qword_100808038];
  time.CMTimeValue value = a1;
  time.CMTimeScale timescale = v6;
  time.CMTimeFlags flags = v35;
  time.CMTimeEpoch epoch = a3;
  double Seconds = CMTimeGetSeconds(&time);
  id v20 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  id v21 = v20;
  if (Seconds < 60.0)
  {
    [v20 setAllowedUnits:192];
    uint64_t v22 = &selRef_setZeroFormattingBehavior_;
    uint64_t v23 = 0x10000;
LABEL_7:
    [v21 *v22 v23];
    goto LABEL_8;
  }
  if (Seconds > 3600.0)
  {
    uint64_t v22 = &selRef_setAllowedUnits_;
    uint64_t v23 = 224;
    goto LABEL_7;
  }
LABEL_8:
  id v29 = [v21 stringFromTimeInterval:Seconds];
  if (v29)
  {
    uint64_t v30 = v29;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
  }
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setText:v31];
}

uint64_t sub_10031E6BC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10031E6F4()
{
  return swift_deallocObject();
}

uint64_t sub_10031E72C()
{
  return sub_10031E22C(v0[3], v0[4], v0[5]);
}

uint64_t sub_10031E758(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10031E768()
{
  return swift_release();
}

uint64_t sub_10031E770()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10002C194;
  return sub_1003AC238();
}

void sub_10031E824()
{
  uint64_t v1 = &v0[qword_100808010];
  if (qword_1007F7D60 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = sub_100026A54(v2, (uint64_t)qword_10083EC20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1, v3, v2);
  UUID.init()();
  *(void *)&v0[qword_10083D368 + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[qword_10083D370] = 0;
  *(void *)&v0[qword_10083D378] = 0;
  if (qword_1007F7BF0 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_10083E8D8;
  if (qword_10083E8D8)
  {
    id v5 = [self systemIndigoColor];
    id v6 = [v4 imageWithTintColor:v5];

    if (qword_1007F7450 != -1) {
      swift_once();
    }
    id v7 = [v6 imageWithConfiguration:qword_10083DA60];
  }
  else
  {
    id v7 = 0;
  }
  *(void *)&v0[qword_100808020] = v7;
  if (qword_1007F7C00 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_10083E8E8;
  if (qword_10083E8E8)
  {
    id v9 = [self systemIndigoColor];
    id v10 = [v8 imageWithTintColor:v9];

    if (qword_1007F7450 != -1) {
      swift_once();
    }
    id v11 = [v10 imageWithConfiguration:qword_10083DA60];
  }
  else
  {
    id v11 = 0;
  }
  *(void *)&v0[qword_100808028] = v11;
  uint64_t v12 = qword_100808030;
  type metadata accessor for NoThumbUISlider();
  *(void *)&v0[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v13 = qword_100808038;
  *(void *)&v0[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = qword_100808040;
  *(void *)&v0[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = qword_100808048;
  *(void *)&v0[v15] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v16 = qword_100808050;
  *(void *)&v0[v16] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = qword_100808058;
  *(void *)&v0[v17] = [objc_allocWithZone((Class)UIStackView) init];
  v0[qword_100808060] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10031EBE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + qword_1007FB128);
  uint64_t v6 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  id v7 = *(void **)(v5 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (!v7) {
    goto LABEL_15;
  }
  id v8 = v7;
  id v9 = [v8 layer];
  self;
  id v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10) {

  }
  id v11 = [v10 player];
  if (v11 && (id v12 = [v11 timeControlStatus], v11, v12 == (id)2))
  {
    uint64_t v13 = *(void **)(v5 + v6);
    if (v13)
    {
      id v14 = v13;
      id v15 = [v14 layer];
      self;
      uint64_t v16 = (void *)swift_dynamicCastObjCClass();
      if (!v16) {

      }
      id v17 = [v16 player];
      [v17 pause];
    }
    uint64_t v18 = qword_1007F7AC0;
    id v19 = *(id *)(v1 + qword_100808048);
    if (v18 != -1) {
      swift_once();
    }
    NSString v29 = String._bridgeToObjectiveC()();
    [v19 setAccessibilityLabel:v29];

    id v20 = v29;
  }
  else
  {
LABEL_15:
    sub_1005E064C();
    uint64_t v21 = qword_1007F7AA8;
    id v22 = *(id *)(v1 + qword_100808048);
    if (v21 != -1) {
      swift_once();
    }
    NSString v23 = String._bridgeToObjectiveC()();
    [v22 setAccessibilityLabel:v23];

    uint64_t v24 = type metadata accessor for AudioManager(0);
    uint64_t v25 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
    type metadata accessor for MainActor();
    uint64_t v26 = static MainActor.shared.getter();
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = v26;
    v27[3] = &protocol witness table for MainActor;
    v27[4] = v24;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_1008083C0, (uint64_t)v27);
    swift_release();
  }
}

uint64_t sub_10031EF58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10031EFA0()
{
  return swift_deallocObject();
}

uint64_t sub_10031EFD8()
{
  return sub_10031C850();
}

uint64_t sub_10031EFFC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10031F034()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10031F07C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_10002C194;
  return sub_10031D1E0(a1, v4, v5, v7, v6);
}

uint64_t sub_10031F13C()
{
  return sub_10031C344();
}

void sub_10031F160(void *a1)
{
}

uint64_t sub_10031F168(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10031F1C8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10031F208()
{
  sub_10031BFF8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10031F210()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052588;
  return sub_1003AC238();
}

void sub_10031F2EC()
{
  id v1 = [v0 connectedScenes];
  uint64_t v2 = sub_10001B284(0, (unint64_t *)&qword_10080CF00);
  sub_1000872E4();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v3 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v33;
    uint64_t v4 = v34;
    uint64_t v5 = v35;
    uint64_t v6 = v36;
    unint64_t v7 = v37;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
    uint64_t v4 = v3 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v3 + 56);
  }
  id v30 = 0;
  int64_t v31 = (unint64_t)(v5 + 64) >> 6;
  while (1)
  {
    uint64_t v11 = v6;
    if (v3 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_44;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v32;
      swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_44;
      }
      goto LABEL_30;
    }
    if (!v7) {
      break;
    }
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_29:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_44;
    }
LABEL_30:
    self;
    uint64_t v18 = swift_dynamicCastObjCClass();
    if (!v18 || (id v19 = (void *)v18, type metadata accessor for ActivityScene(), swift_dynamicCastClass()))
    {
    }
    else
    {
      id v28 = v14;
      id v20 = [v19 windows];
      sub_10001B284(0, &qword_1007FBAF0);
      unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v29 = v2;
        if (!v22) {
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v29 = v2;
        if (!v22) {
          goto LABEL_43;
        }
      }
      if (v22 < 1) {
        goto LABEL_46;
      }
      for (uint64_t i = 0; i != v22; ++i)
      {
        if ((v21 & 0xC000000000000001) != 0) {
          id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v24 = *(id *)(v21 + 8 * i + 32);
        }
        uint64_t v25 = v24;
        if ([v24 isKeyWindow])
        {
          uint64_t v26 = v4;
          id v27 = [v25 rootViewController];

          uint64_t v25 = v30;
          id v30 = v27;
          uint64_t v4 = v26;
        }
      }
LABEL_43:

      swift_bridgeObjectRelease();
      uint64_t v2 = v29;
    }
  }
  int64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 >= v31) {
      goto LABEL_44;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v6;
    if (!v16)
    {
      uint64_t v6 = v11 + 2;
      if (v11 + 2 >= v31) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v6);
      if (!v16)
      {
        uint64_t v6 = v11 + 3;
        if (v11 + 3 >= v31) {
          goto LABEL_44;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v6);
        if (!v16)
        {
          uint64_t v6 = v11 + 4;
          if (v11 + 4 >= v31) {
            goto LABEL_44;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v6);
          if (!v16)
          {
            uint64_t v17 = v11 + 5;
            while (v31 != v17)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v17++);
              if (v16)
              {
                uint64_t v6 = v17 - 1;
                goto LABEL_28;
              }
            }
LABEL_44:
            sub_100082D3C();
            return;
          }
        }
      }
    }
LABEL_28:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_29;
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

void sub_10031F6F0()
{
  if (qword_1007F7478 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [self actionWithTitle:v0 style:0 handler:0];

  qword_10083D380 = (uint64_t)v1;
}

void sub_10031F7A4()
{
  if (qword_1007F7870 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v3[4] = sub_10031F8DC;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10007453C;
  v3[3] = &unk_1007A5820;
  id v1 = _Block_copy(v3);
  swift_release();
  id v2 = [self actionWithTitle:v0 style:0 handler:v1];
  _Block_release(v1);

  qword_10083D388 = (uint64_t)v2;
}

uint64_t sub_10031F8DC()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_100052EAC((uint64_t)v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v9);
  uint64_t v11 = v10;
  sub_100397800((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100320218();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 openURL:v11 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_10031FAFC()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultWorkspace];
  if (v3)
  {
    uint64_t v4 = v3;
    URL.init(string:)();
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    id v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      id v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    [v4 openSensitiveURL:v8 withOptions:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for AlertManager()
{
  return self;
}

id sub_10031FC88()
{
  type metadata accessor for JurassicAlertController();
  if (qword_1007F7848 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1007F7850;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v1 message:v2 preferredStyle:1];

  if (qword_1007F7698 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void (*)())AudioRecordingActivityState.hash(into:);
  uint64_t v19 = 0;
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  unint64_t v16 = sub_10007453C;
  uint64_t v17 = &unk_1007A57D0;
  uint64_t v5 = _Block_copy(&v14);
  swift_release();
  uint64_t v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:1 handler:v5];
  _Block_release(v5);

  [v3 addAction:v7];
  if (qword_1007F7858 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_10031FAFC;
  uint64_t v19 = 0;
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  unint64_t v16 = sub_10007453C;
  uint64_t v17 = &unk_1007A57F8;
  uint64_t v9 = _Block_copy(&v14);
  swift_release();
  id v10 = [v6 actionWithTitle:v8 style:0 handler:v9];
  _Block_release(v9);

  [v3 addAction:v10];
  id result = [v3 view];
  if (result)
  {
    unint64_t v12 = result;
    id v13 = [self systemIndigoColor];
    [v12 setTintColor:v13];

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100320050(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100320060()
{
  return swift_release();
}

id sub_100320068()
{
  if (![self regionReferenceWiFiAsWLAN])
  {
    if (qword_1007F7838 == -1) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  if (qword_1007F7840 != -1) {
LABEL_10:
  }
    swift_once();
LABEL_5:
  swift_bridgeObjectRetain_n();
  type metadata accessor for JurassicAlertController();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v0 message:0 preferredStyle:1];

  if (qword_1007F6DE8 != -1) {
    swift_once();
  }
  [v1 addAction:qword_10083D388];
  if (qword_1007F6DE0 != -1) {
    swift_once();
  }
  [v1 addAction:qword_10083D380];
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_100320218()
{
  unint64_t result = qword_1007F8B80;
  if (!qword_1007F8B80)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F8B80);
  }
  return result;
}

id sub_100320270()
{
  if (qword_1007F7860 != -1) {
    swift_once();
  }
  if (qword_1007F7868 != -1) {
    swift_once();
  }
  type metadata accessor for JurassicAlertController();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v0 message:v1 preferredStyle:1];

  if (qword_1007F6DE0 != -1) {
    swift_once();
  }
  [v2 addAction:qword_10083D380];
  return v2;
}

uint64_t _s17MOLocationShifterCMa()
{
  return self;
}

id sub_10032049C()
{
  NSString v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007F9770);
  *(void *)&double v3 = __chkstk_darwin(v2 - 8).n128_u64[0];
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v1 setShowsMenuAsPrimaryAction:1 v3];
  [v1 setShowsLargeContentViewer:1];
  if (qword_1007F7A70 != -1) {
    swift_once();
  }
  NSString v6 = String._bridgeToObjectiveC()();
  [v1 setLargeContentTitle:v6];

  if (qword_1007F7BD8 != -1) {
    swift_once();
  }
  [v1 setLargeContentImage:qword_10083E8C0];
  NSString v7 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityLabel:v7];

  static UIButton.Configuration.bordered()();
  id v8 = [self labelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100625CAC(*((unsigned char *)v1 + OBJC_IVAR____TtC7Journal19JournalSearchButton_placement));
  id v9 = (id)qword_10083E8C0;
  UIButton.Configuration.image.setter();
  uint64_t v10 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  UIButton.configuration.setter();
  id v11 = [v1 heightAnchor];
  id v12 = [v1 widthAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  [v13 setActive:1];
  return [v1 addTarget:v1 action:"tapped" forControlEvents:0x2000];
}

id sub_10032081C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalSearchButton();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalSearchButton()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AssetSizeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100320950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSizeType()
{
  return &type metadata for AssetSizeType;
}

unint64_t sub_10032098C()
{
  unint64_t result = qword_100808550;
  if (!qword_100808550)
  {
    sub_100014440(&qword_100808558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808550);
  }
  return result;
}

uint64_t sub_1003209E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, char a7)
{
  unint64_t v10 = 0xE600000000000000;
  type metadata accessor for UUID();
  sub_100321288();
  v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 45;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 45;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t v15 = 0x656772614C78;
  switch(a7)
  {
    case 1:
      uint64_t v15 = 0x69576D756964656DLL;
      unint64_t v10 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v10 = 0xE500000000000000;
      uint64_t v15 = 0x656772616CLL;
      break;
    case 3:
      uint64_t v15 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v10 = 0xE500000000000000;
      uint64_t v15 = 0x6C6C616D73;
      break;
    case 5:
      unint64_t v10 = 0xEA00000000006E65;
      uint64_t v15 = 0x657263536C6C7566;
      break;
    default:
      break;
  }
  unint64_t v16 = v10;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  if ((a6 & 1) == 0)
  {
    v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._uint64_t countAndFlagsBits = 45;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
  }
  if ((a4 & 1) == 0)
  {
    v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._uint64_t countAndFlagsBits = 45;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
  }
  return 0x2D626D756874;
}

uint64_t sub_100320C64(char a1)
{
  char v2 = 1;
  switch(a1)
  {
    case 2:
      goto LABEL_10;
    default:
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v3)
      {
LABEL_7:
        char v2 = 1;
      }
      else
      {
        char v2 = 1;
        switch(a1)
        {
          case 0:
          case 2:
          case 3:
          case 4:
          case 5:
            char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v4) {
              goto LABEL_7;
            }
            char v2 = 1;
            switch(a1)
            {
              case 0:
                goto LABEL_10;
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v5) {
                  goto LABEL_7;
                }
                char v2 = 1;
                switch(a1)
                {
                  case 5:
                    goto LABEL_10;
                  default:
                    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    break;
                }
                break;
              default:
                goto LABEL_12;
            }
            break;
          case 1:
            break;
          default:
LABEL_12:
            JUMPOUT(0);
        }
LABEL_10:
        swift_bridgeObjectRelease();
      }
      return v2 & 1;
  }
}

uint64_t sub_10032100C(unsigned __int8 *a1, char *a2)
{
  return sub_10017CB6C(*a1, *a2);
}

Swift::Int sub_100321018()
{
  return sub_1002316D0();
}

uint64_t sub_100321020()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100321114()
{
  return sub_100231DB8();
}

unint64_t sub_10032111C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003212E0(*a1);
  *a2 = result;
  return result;
}

void sub_10032114C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x656772614C78;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x69576D756964656DLL;
      unint64_t v2 = 0xEA00000000006564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656772616CLL;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6C6C616D73;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x657263536C6C7566;
      a1[1] = 0xEA00000000006E65;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_100321220(void *a1@<X8>)
{
  *a1 = &off_100794668;
}

unint64_t sub_100321234()
{
  unint64_t result = qword_100808560;
  if (!qword_100808560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808560);
  }
  return result;
}

unint64_t sub_100321288()
{
  unint64_t result = qword_100801100;
  if (!qword_100801100)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801100);
  }
  return result;
}

unint64_t sub_1003212E0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007945B8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  char v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s32MOPOIAnnotationViewConfigurationVMa()
{
  return &_s32MOPOIAnnotationViewConfigurationVN;
}

double sub_100321538()
{
  double v1 = COERCE_DOUBLE(sub_100321788());
  double v2 = 0.0;
  double v3 = 0.0;
  if ((v4 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v5 = (v1 - v1 * 0.45) * 0.5;
      double v6 = v5;
    }
    else
    {
      double v5 = v1 * 0.55 * 0.5;
      double v6 = *(double *)(v0 + 32);
    }
    AudioRecordingActivityState.hash(into:)(v5, v6);
    double v3 = v7;
  }
  double v8 = COERCE_DOUBLE(sub_100321788());
  if ((v9 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v10 = (v8 - v8 * 0.45) * 0.5;
      double v11 = v10;
    }
    else
    {
      double v10 = v8 * 0.55 * 0.5;
      double v11 = *(double *)(v0 + 32);
    }
    double v2 = AudioRecordingActivityState.hash(into:)(v10, v11);
  }
  double v12 = COERCE_DOUBLE(sub_100321788());
  double v13 = 0.0;
  if ((v14 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v15 = (v12 - v12 * 0.45) * 0.5;
      double v16 = v15;
    }
    else
    {
      double v15 = v12 * 0.55 * 0.5;
      double v16 = *(double *)(v0 + 32);
    }
    AudioRecordingActivityState.hash(into:)(v15, v16);
  }
  double v17 = v3 * 0.15 * 0.5;
  double v18 = v13 - v17;

  return AudioRecordingActivityState.hash(into:)(v2 - v17, v18);
}

void *sub_100321738()
{
  unint64_t result = (void *)sub_1003969FC((uint64_t)&off_100791690);
  off_100808568 = result;
  return result;
}

void *sub_100321760()
{
  unint64_t result = (void *)sub_1003969FC((uint64_t)&off_100791610);
  off_100808570 = result;
  return result;
}

uint64_t sub_100321788()
{
  if (*(uint64_t *)(v0 + 16) > 1 || (*(unsigned char *)(v0 + 24) & 1) != 0)
  {
    if (qword_1007F6DF8 != -1) {
      swift_once();
    }
    double v1 = off_100808570;
    if (!*((void *)off_100808570 + 2)) {
      return 0;
    }
  }
  else
  {
    if (qword_1007F6DF0 != -1) {
      swift_once();
    }
    double v1 = off_100808568;
    if (!*((void *)off_100808568 + 2)) {
      return 0;
    }
  }
  unint64_t v2 = sub_10001B77C(*(unsigned char *)(v0 + 8));
  if (v3) {
    return *(void *)(v1[7] + 8 * v2);
  }
  return 0;
}

uint64_t sub_100321864(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  id v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  double v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView;
  char v9 = *(unsigned char **)(v1 + OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView);
  uint64_t v10 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v11 = v9[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v9[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
  uint64_t v12 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (v9[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
  {
    switch(v11)
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        double v16 = v9;
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          uint64_t v14 = v9[v10];
          goto LABEL_7;
        }

        break;
    }
  }
  else
  {
    double v13 = v9;
    uint64_t v14 = 5;
LABEL_7:
    double v17 = *(void **)&v9[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    double v18 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v17) + 0x58);
    Swift::String v19 = v17;
    v18(5, v14);

    v9[v12] = 1;
  }
  Swift::String v20 = *(unsigned char **)(v2 + v8);
  v20[OBJC_IVAR____TtC7Journal14AudioAssetView_enableScrubber] = 1;
  unint64_t v21 = *(void **)&v20[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset];
  *(void *)&v20[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset] = a1;
  id v22 = a1;
  NSString v23 = v20;

  sub_10026009C();
  id v24 = *(char **)(v2 + v8);
  *(void *)&v24[OBJC_IVAR____TtC7Journal14AudioAssetView_audioManagerDelegate + 8] = &off_1007A5998;
  swift_unknownObjectWeakAssign();
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
  uint64_t v26 = *(void **)&v24[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset];
  if (v26)
  {
    *((void *)&v45 + 1) = _s10AudioAssetCMa(0);
    uint64_t v46 = (void (*)())&off_1007B7DC8;
    *(void *)&long long aBlock = v26;
  }
  else
  {
    uint64_t v46 = 0;
    long long aBlock = 0u;
    long long v45 = 0u;
  }
  uint64_t ObjectType = swift_getObjectType();
  id v28 = v24;
  swift_unknownObjectRetain();
  id v29 = v26;
  sub_10021A2D0((uint64_t)&aBlock, ObjectType, v25);
  swift_unknownObjectRelease();
  sub_10001457C((uint64_t)&aBlock, &qword_1007F9470);

  sub_10001FB8C();
  id v30 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v22;
  uint64_t v46 = sub_100324F44;
  uint64_t v47 = v32;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v45 = sub_10017D530;
  *((void *)&v45 + 1) = &unk_1007A5B50;
  uint64_t v33 = _Block_copy(&aBlock);
  id v34 = v22;
  swift_release();
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  uint64_t v35 = v40;
  uint64_t v36 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v7, v41);
}

void sub_100321DF4(uint64_t a1, char *a2)
{
  id v100 = a2;
  uint64_t v2 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s10AudioAssetC9AudioDataVMa(0);
  double v99 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  double v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  double v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v96 = v17;
  uint64_t v97 = v4;
  uint64_t v19 = v14;
  uint64_t v98 = v2;
  Swift::String v20 = (char *)Strong;
  id v21 = [objc_allocWithZone((Class)UIStackView) init];
  [v21 setAxis:1];
  [v21 setAlignment:3];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  [v21 setSpacing:*(double *)&qword_10083D908];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v101 = [objc_allocWithZone((Class)UIStackView) init];
  id v102 = [objc_allocWithZone((Class)UILabel) init];
  id v22 = v20;
  if (!*(void *)&v100[OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata]) {
    goto LABEL_7;
  }
  swift_retain();
  sub_10003AC18((uint64_t)v10);
  swift_release();
  if (v99[6](v10, 1, v5))
  {
    sub_10001457C((uint64_t)v10, &qword_1007F9E38);
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v19);
    goto LABEL_8;
  }
  sub_10010F7A0((uint64_t)v10, (uint64_t)v7);
  sub_10001457C((uint64_t)v10, &qword_1007F9E38);
  sub_100045944((uint64_t)&v7[*(int *)(v5 + 24)], (uint64_t)v13);
  sub_100324F4C((uint64_t)v7, _s10AudioAssetC9AudioDataVMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v19) != 1)
  {
    id v92 = v96;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v96, v13, v19);
    uint64_t v93 = (uint64_t)v97;
    static Date.FormatStyle.TimeStyle.shortened.getter();
    static FormatStyleCapitalizationContext.standalone.getter();
    static Locale.autoupdatingCurrent.getter();
    static Calendar.autoupdatingCurrent.getter();
    static TimeZone.autoupdatingCurrent.getter();
    static Date.now.getter();
    sub_10001FF10((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
    Date.formatted<A>(_:)();
    sub_100324F4C(v93, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
    NSString v94 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v102 setText:v94];

    (*(void (**)(char *, uint64_t))(v15 + 8))(v92, v19);
    goto LABEL_9;
  }
LABEL_8:
  sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FC470);
LABEL_9:
  id v23 = v102;
  [v102 setAdjustsFontForContentSizeCategory:1];
  sub_100322F90();
  sub_100323404();
  id v24 = (char *)[objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v20 action:"toggleAudioButton"];
  [v24 setNumberOfTapsRequired:1];
  uint64_t v25 = *(void **)&v20[OBJC_IVAR____TtC7Journal19FullScreenAudioView_playButton];
  id v100 = v24;
  [v25 addGestureRecognizer:v24];
  uint64_t v26 = *(void **)&v20[OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel];
  id v27 = objc_allocWithZone((Class)UILabel);
  id v28 = v26;
  id v29 = v25;
  id v30 = [v27 init];
  sub_100540B38(v101, v23, v28, v30, 1, v29);

  uint64_t v31 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView;
  uint64_t v32 = *(void *)&v20[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView];
  double v99 = (unsigned int (**)(char *, uint64_t, uint64_t))v21;
  [v21 addArrangedSubview:v32];
  id v33 = [*(id *)&v20[v31] layer];
  if (qword_1007F7CA0 != -1) {
    swift_once();
  }
  v103[0] = xmmword_10083E9C0;
  v103[1] = *(_OWORD *)&qword_10083E9D0;
  v103[2] = xmmword_10083E9E0;
  v103[3] = *(_OWORD *)&qword_10083E9F0;
  [v33 setCornerRadii:v103];

  uint64_t v34 = v31;
  uint64_t v35 = *(void **)&v20[v31];
  uint64_t v36 = qword_1007F7300;
  id v37 = v35;
  if (v36 != -1) {
    swift_once();
  }
  double v38 = *(double *)&qword_10083D910;
  id v39 = [v37 superview];
  if (v39)
  {
    id v40 = v39;
    [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v37 leadingAnchor];
    id v42 = [v40 leadingAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    [v43 setConstant:v38];
    if (v43)
    {
      id v43 = v43;
      [v43 setActive:1];

      id v37 = v43;
    }
    uint64_t v44 = v34;
  }
  else
  {
    id v43 = 0;
    id v40 = v37;
    uint64_t v44 = v34;
  }
  long long v45 = v99;

  double v46 = *(double *)&qword_10083D910;
  id v47 = *(id *)&v22[v44];
  id v48 = [v47 superview];
  if (v48)
  {
    id v49 = v48;
    [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v50 = [v47 trailingAnchor];
    id v51 = [v49 trailingAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51];

    [v52 setConstant:-v46];
    if (v52)
    {
      id v52 = v52;
      [v52 setActive:1];

      id v47 = v52;
    }
    id v53 = v101;
    uint64_t v54 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v52 = 0;
    id v49 = v47;
    id v53 = v101;
    uint64_t v54 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v55 = *(id *)&v22[v44];
  [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v56 = [v55 heightAnchor];
  id v57 = [v55 widthAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57 multiplier:1.0];

  [v58 setActive:1];
  id v59 = *(id *)&v22[v44];
  sub_1005412A4(v59);

  [v45 v54[84] v53];
  if (qword_1007F7368 != -1) {
    swift_once();
  }
  double v60 = *(double *)&qword_10083D978;
  id v61 = [v53 superview];
  if (v61)
  {
    uint64_t v62 = v61;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v63 = [v53 leadingAnchor];
    id v64 = [v62 leadingAnchor];
    id v65 = [v63 constraintEqualToAnchor:v64];

    [v65 setConstant:v60];
    id v66 = v65;
    [v66 setActive:1];
  }
  double v67 = *(double *)&qword_10083D978;
  id v68 = [v53 superview];
  if (v68)
  {
    id v69 = v68;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v70 = [v53 trailingAnchor];
    id v71 = [v69 trailingAnchor];
    id v72 = [v70 constraintEqualToAnchor:v71];

    [v72 setConstant:-v67];
    id v73 = v72;
    [v73 setActive:1];
  }
  [v22 addSubview:v45];
  id v74 = [v45 superview];
  if (v74)
  {
    id v75 = v74;
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v76 = [v45 centerYAnchor];
    id v77 = [v75 centerYAnchor];
    id v78 = [v76 constraintEqualToAnchor:v77];

    [v78 setConstant:0.0];
    id v79 = v78;
    [v79 setActive:1];
  }
  id v80 = [v45 superview];
  if (v80)
  {
    uint64_t v81 = v80;
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v82 = [v45 leadingAnchor];
    id v83 = [v81 leadingAnchor];
    id v84 = [v82 constraintEqualToAnchor:v83];

    [v84 setConstant:0.0];
    id v85 = v84;
    [v85 setActive:1];
  }
  id v86 = [v45 superview];
  if (v86)
  {
    double v87 = v86;
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v88 = [v45 trailingAnchor];
    id v89 = [v87 trailingAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89];

    [v90 setConstant:0.0];
    id v91 = v90;
    [v91 setActive:1];
  }
  [v22 layoutIfNeeded];
  [v45 layoutIfNeeded];
  [*(id *)&v22[v44] layoutIfNeeded];
}

void sub_100322CB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView;
  uint64_t v6 = *(char **)(v0 + OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView);
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  uint64_t v10 = v6;
  swift_unknownObjectRetain();
  LOBYTE(v7) = v9(ObjectType, v7);

  swift_unknownObjectRelease();
  if (v7)
  {
    uint64_t v11 = *(char **)(v0 + v5);
    uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer];
    uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
    uint64_t v14 = swift_getObjectType();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
    uint64_t v16 = v11;
    swift_unknownObjectRetain();
    LOBYTE(v13) = v15(v14, v13);
    swift_unknownObjectRelease();
    if (v13)
    {
      uint64_t v17 = *((void *)v12 + 1);
      uint64_t v18 = swift_getObjectType();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 136);
      swift_unknownObjectRetain();
      v19(v18, v17);
      swift_unknownObjectRelease();
    }
    sub_100260B80();

    sub_100322F90();
    sub_100323404();
  }
  else
  {
    uint64_t v20 = type metadata accessor for AudioManager(0);
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
    type metadata accessor for MainActor();
    uint64_t v22 = static MainActor.shared.getter();
    id v23 = (void *)swift_allocObject();
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v20;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_1008085F8, (uint64_t)v23);
    swift_release();
    id v24 = *(id *)(v1 + v5);
    sub_100260A30();

    sub_100322F90();
    sub_100323404();
  }
}

uint64_t sub_100322F90()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100324EFC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A5AD8;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_100323240()
{
  uint64_t v0 = sub_100010218(&qword_1007F9770);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = *(char **)(Strong + OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView);
    uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
    uint64_t v9 = v5;
    swift_unknownObjectRetain();
    LOBYTE(v6) = v8(ObjectType, v6);

    swift_unknownObjectRelease();
    uint64_t v10 = type metadata accessor for UIButton.Configuration();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = &OBJC_IVAR____TtC7Journal19FullScreenAudioView_pauseConfig;
    if ((v6 & 1) == 0) {
      uint64_t v12 = &OBJC_IVAR____TtC7Journal19FullScreenAudioView_playConfig;
    }
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v2, &v4[*v12], v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v2, 0, 1, v10);
    UIButton.configuration.setter();
  }
}

void sub_100323404()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (double *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self isMainThread])
  {
    uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioAsset];
    if (v15)
    {
      uint64_t v16 = v0;
      if (*(void *)(v15 + OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata))
      {
        swift_retain();
        sub_10003AC18((uint64_t)v14);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
        {
          sub_10001457C((uint64_t)v14, &qword_1007F9E38);
        }
        else
        {
          sub_10010F7A0((uint64_t)v14, (uint64_t)v11);
          sub_10001457C((uint64_t)v14, &qword_1007F9E38);
          double v21 = *v11;
          char v22 = *((unsigned char *)v11 + 8);
          sub_100324F4C((uint64_t)v11, _s10AudioAssetC9AudioDataVMa);
          if ((v22 & 1) == 0)
          {
            if (qword_1007F7168 != -1) {
              swift_once();
            }
            double v23 = v21 + 0.5;
            id v24 = [(id)qword_100810AD0 stringFromTimeInterval:v23];
            if (v24)
            {
              uint64_t v25 = v24;
              uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v28 = v27;

              id v29 = v16;
              id v30 = *(char **)&v16[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView];
              uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
              uint64_t ObjectType = swift_getObjectType();
              id v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 24);
              uint64_t v34 = v30;
              swift_unknownObjectRetain();
              LOBYTE(v31) = v33(ObjectType, v31);

              swift_unknownObjectRelease();
              if (v31)
              {
                uint64_t v35 = self;
                uint64_t v36 = swift_allocObject();
                swift_unknownObjectWeakInit();
                id v37 = (void *)swift_allocObject();
                v37[2] = v36;
                v37[3] = v26;
                v37[4] = v28;
                id v56 = sub_100324DE4;
                id v57 = v37;
                long long aBlock = _NSConcreteStackBlock;
                uint64_t v53 = 1107296256;
                uint64_t v54 = sub_10007453C;
                id v55 = &unk_1007A5A88;
                double v38 = _Block_copy(&aBlock);
                swift_release();
                id v39 = [v35 scheduledTimerWithTimeInterval:1 repeats:v38 block:0.1];
                _Block_release(v38);
                id v40 = *(void **)&v29[OBJC_IVAR____TtC7Journal19FullScreenAudioView_currentPlaybackTimer];
                *(void *)&v29[OBJC_IVAR____TtC7Journal19FullScreenAudioView_currentPlaybackTimer] = v39;
              }
              else
              {
                [*(id *)&v29[OBJC_IVAR____TtC7Journal19FullScreenAudioView_currentPlaybackTimer] invalidate];
                uint64_t v41 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel;
                id v42 = *(id *)&v29[OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel];
                NSString v43 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v42 setText:v43];

                uint64_t v44 = qword_1007F7A28;
                id v45 = *(id *)&v29[v41];
                if (v44 != -1) {
                  swift_once();
                }
                NSString v46 = String._bridgeToObjectiveC()();
                [v45 setAccessibilityLabel:v46];

                uint64_t v47 = qword_1007F7170;
                id v48 = *(id *)&v29[v41];
                if (v47 != -1) {
                  swift_once();
                }
                NSString v49 = [(id)qword_100810AD8 stringFromTimeInterval:v23];
                if (v49)
                {
                  static String._unconditionallyBridgeFromObjectiveC(_:)();

                  NSString v49 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                }
                [v48 setAccessibilityValue:v49];
              }
            }
          }
        }
      }
    }
  }
  else
  {
    sub_10001FB8C();
    uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v0;
    id v56 = sub_100324D30;
    id v57 = (void *)v18;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = sub_10017D530;
    id v55 = &unk_1007A5A10;
    uint64_t v19 = _Block_copy(&aBlock);
    uint64_t v20 = v0;
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100323BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    id v12 = *(id *)(result + OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView);

    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v12;
    v14[5] = a3;
    v14[6] = a4;
    v14[7] = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100328A60((uint64_t)v9, (uint64_t)&unk_1008085F0, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_100323D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  return _swift_task_switch(sub_100323D38, 0, 0);
}

uint64_t sub_100323D38()
{
  *(void *)(v0 + 96) = type metadata accessor for MainActor();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100323DD0, v2, v1);
}

uint64_t sub_100323DD0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(double (**)(uint64_t, uint64_t))(v2 + 40);
  swift_unknownObjectRetain();
  *(double *)(v0 + 112) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_100323E9C, 0, 0);
}

uint64_t sub_100323E9C()
{
  if (qword_1007F7168 != -1) {
    swift_once();
  }
  id v1 = [(id)qword_100810AD0 stringFromTimeInterval:*(double *)(v0 + 112) + 0.5];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v3 = *(void **)(v0 + 80);
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    *(void *)(v0 + 40) = v5;
    *(void *)(v0 + 48) = v7;
    v8._uint64_t countAndFlagsBits = v4;
    v8._object = v3;
    String.append(_:)(v8);
    v9._uint64_t countAndFlagsBits = 2109216;
    v9._object = (void *)0xE300000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    id v10 = objc_allocWithZone((Class)NSMutableAttributedString);
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v10 initWithString:v11];
    *(void *)(v0 + 120) = v12;

    id v13 = [self secondaryLabelColor];
    swift_bridgeObjectRetain();
    id v14 = [v12 mutableString];
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v14 rangeOfString:v15 options:1];
    uint64_t v18 = v17;

    [v12 addAttribute:NSForegroundColorAttributeName value:v13 range:v16];
    swift_bridgeObjectRelease();

    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    *(void *)(v0 + 128) = static MainActor.shared.getter();
    uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100324184, v21, v20);
  }
  else
  {
    char v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_100324184()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  sub_100324280(v0 + 56, v1);
  swift_unknownObjectWeakDestroy();
  return _swift_task_switch(sub_100324218, 0, 0);
}

uint64_t sub_100324218()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100324280(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel) setAttributedText:a2];
    uint64_t v6 = qword_1007F7A28;
    id v7 = *(id *)&v4[v5];
    if (v6 != -1) {
      swift_once();
    }
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setAccessibilityLabel:v8];

    id v9 = *(id *)&v4[v5];
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setAccessibilityValue:v10];
  }
}

id sub_1003243C0(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioAsset] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_playButton;
  id v10 = objc_allocWithZone((Class)UIButton);
  NSString v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  id v12 = &v11[OBJC_IVAR____TtC7Journal19FullScreenAudioView_playConfig];
  if (qword_1007F6D98 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for UIButton.Configuration();
  uint64_t v14 = sub_100026A54(v13, (uint64_t)qword_10083D330);
  NSString v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  v15(v12, v14, v13);
  uint64_t v16 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_pauseConfig;
  if (qword_1007F6DA0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100026A54(v13, (uint64_t)qword_10083D348);
  v15(&v11[v16], v17, v13);
  uint64_t v18 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView;
  type metadata accessor for AudioAssetGalleryView();
  *(void *)&v11[v18] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v19 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel;
  *(void *)&v11[v19] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v20 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_currentPlaybackTimer;
  *(void *)&v11[v20] = [objc_allocWithZone((Class)NSTimer) init];

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for FullScreenAudioView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1003245F8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioAsset] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_playButton;
  id v4 = objc_allocWithZone((Class)UIButton);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = &v5[OBJC_IVAR____TtC7Journal19FullScreenAudioView_playConfig];
  if (qword_1007F6D98 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = sub_100026A54(v7, (uint64_t)qword_10083D330);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  v9(v6, v8, v7);
  uint64_t v10 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_pauseConfig;
  if (qword_1007F6DA0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100026A54(v7, (uint64_t)qword_10083D348);
  v9(&v5[v10], v11, v7);
  uint64_t v12 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView;
  type metadata accessor for AudioAssetGalleryView();
  *(void *)&v5[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_durationLabel;
  *(void *)&v5[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_currentPlaybackTimer;
  *(void *)&v5[v14] = [objc_allocWithZone((Class)NSTimer) init];

  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for FullScreenAudioView();
  [super initWithCoder:a1];

  return v15;
}

id sub_100324820()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenAudioView();
  [super dealloc];
}

uint64_t sub_100324948()
{
  return type metadata accessor for FullScreenAudioView();
}

uint64_t type metadata accessor for FullScreenAudioView()
{
  uint64_t result = qword_1008085D8;
  if (!qword_1008085D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10032499C()
{
  uint64_t result = type metadata accessor for UIButton.Configuration();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_100324A4C()
{
  sub_100322F90();

  sub_100323404();
}

void sub_100324A74()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AudioManager(0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v8[2] = v7;
  void v8[3] = &protocol witness table for MainActor;
  v8[4] = v5;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B380, (uint64_t)v8);
  swift_release();
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView);
  sub_100260A30();

  sub_100322F90();
  sub_100323404();
}

void sub_100324BB8()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView);
  uint64_t v2 = &v1[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24);
  uint64_t v6 = v1;
  swift_unknownObjectRetain();
  LOBYTE(v3) = v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if (v3)
  {
    uint64_t v7 = *((void *)v2 + 1);
    uint64_t v8 = swift_getObjectType();
    id v9 = *(void (**)(uint64_t, uint64_t))(v7 + 136);
    swift_unknownObjectRetain();
    v9(v8, v7);
    swift_unknownObjectRelease();
  }
  sub_100260B80();

  sub_100322F90();

  sub_100323404();
}

uint64_t sub_100324CC0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100324CF8()
{
  return swift_deallocObject();
}

uint64_t sub_100324D30()
{
  return sub_100323404();
}

uint64_t sub_100324D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100324D64()
{
  return swift_release();
}

uint64_t sub_100324D6C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100324DA4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100324DE4(uint64_t a1)
{
  return sub_100323BB4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100324DF0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100324E40()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_100052588;
  *(_OWORD *)(v4 + 80) = v5;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 72) = v3;
  return _swift_task_switch(sub_100323D38, 0, 0);
}

void sub_100324EFC()
{
}

uint64_t sub_100324F04()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100324F44()
{
  sub_100321DF4(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100324F4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100324FC8()
{
  uint64_t v0 = sub_100010218(qword_100802748);
  sub_100035380(v0, qword_10083D390);
  sub_100026A54(v0, (uint64_t)qword_10083D390);
  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100325108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100808610);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v13[v12], v7, v4);
  swift_bridgeObjectRetain();
  sub_100328A60((uint64_t)v10, (uint64_t)&unk_100808620, (uint64_t)v13);
  return AsyncStream.Continuation.onTermination.setter();
}

uint64_t sub_1003252FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  return _swift_task_switch(sub_100325320, 0, 0);
}

uint64_t sub_100325320()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100325400;
  uint64_t v3 = *(void *)(v0 + 16);
  return withDiscardingTaskGroup<A>(returning:isolation:body:)(v3, (char *)&type metadata for () + 8, 0, 0, &unk_100808630, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100325400()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100325510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  uint64_t v5 = sub_100010218(&qword_100808610);
  v4[5] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[6] = v6;
  v4[7] = *(void *)(v6 + 64);
  v4[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v4[9] = v7;
  v4[10] = *(void *)(v7 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_100808638);
  v4[12] = v8;
  v4[13] = *(void *)(v8 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v9 = sub_100010218(&qword_100808640);
  v4[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[16] = v10;
  v4[17] = *(void *)(v10 + 64);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v11 = sub_100010218(&qword_100808648);
  v4[20] = v11;
  v4[21] = *(void *)(v11 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v12 = sub_100010218(&qword_100808650);
  v4[23] = v12;
  v4[24] = *(void *)(v12 - 8);
  v4[25] = swift_task_alloc();
  return _swift_task_switch(sub_1003257D4, 0, 0);
}

uint64_t sub_1003257D4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[13];
  uint64_t v4 = (void *)v0[14];
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[12];
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  sub_100010218(&qword_100808658);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v2, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v3);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_task_dealloc();
  sub_100010218(&qword_100808660);
  *uint64_t v4 = 1;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v4, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v13);
  uint64_t v9 = (void *)swift_task_alloc();
  void v9[2] = v7;
  v9[3] = v6;
  v9[4] = v12;
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_task_dealloc();
  ContinuousClock.init()();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100812A68 + dword_100812A68);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[26] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1003259E0;
  return v14(500000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1003259E0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  uint64_t v5 = v2[9];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100328A5C;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100325B78;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100325B78()
{
  uint64_t v18 = v0[24];
  uint64_t v19 = v0[23];
  uint64_t v20 = v0[25];
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[8];
  uint64_t v16 = v4;
  uint64_t v17 = v0[19];
  uint64_t v15 = v0[18];
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  (*(void (**)(void))(v1 + 16))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + v10 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32))(v12 + v9, v15, v3);
  *(void *)(v12 + v10) = v7;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v16, v6);
  swift_bridgeObjectRetain();
  sub_100144394((uint64_t)&unk_100808670, v12);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v17, v3);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100325DA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v47 = a3;
  uint64_t v46 = a1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v45 = (char *)&v35 - v8;
  uint64_t v44 = sub_100010218(&qword_1008086B0);
  __chkstk_darwin(v44);
  id v42 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2 + 32;
  unint64_t v10 = *(void *)(a2 + 16);
  NSString v49 = &v56;
  uint64_t v48 = (uint64_t)v57 + 8;
  unint64_t v11 = (long long *)&v59;
  uint64_t v41 = v12 + 16;
  uint64_t v40 = v9 + 7;
  uint64_t v43 = v12;
  uint64_t v39 = v12 + 32;
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  long long v51 = xmmword_1006E3350;
  double v38 = (char *)&type metadata for () + 8;
  unint64_t v37 = v10;
  uint64_t v36 = (long long *)&v59;
  BOOL v15 = v10 == 0;
  if (v10) {
    goto LABEL_4;
  }
LABEL_6:
  memset(v57, 0, 32);
  unint64_t v14 = v10;
  v57[2] = v51;
  while (1)
  {
    sub_10002C4EC((uint64_t)v57, (uint64_t)&v58, &qword_1008086B8);
    if (v60)
    {
      if (v60 == 1) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v17 = v58;
      sub_10001B3BC(v11, (uint64_t)v57);
      uint64_t v18 = v43;
      uint64_t v19 = (uint64_t)v6;
      uint64_t v20 = v42;
      uint64_t v21 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v46, v44);
      unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      unint64_t v23 = (v40 + v22) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = 0;
      *(void *)(v24 + 24) = 0;
      sub_10001B3BC(v57, v24 + 32);
      uint64_t v25 = v20;
      uint64_t v6 = (char *)v19;
      (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v24 + v22, v25, v21);
      *(void *)(v24 + v23) = v17;
      uint64_t v26 = type metadata accessor for TaskPriority();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v45, 1, 1, v26);
      sub_10002C4EC(v28, v19, &qword_1007FA1D0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26) == 1)
      {
        sub_10001457C(v19, &qword_1007FA1D0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v19, v26);
      }
      unint64_t v10 = v37;
      unint64_t v11 = v36;
      if (*(void *)(v24 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v29 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v31 = v30;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v29 = 0;
        uint64_t v31 = 0;
      }
      uint64_t v32 = *v47;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = &unk_1008086C8;
      *(void *)(v33 + 24) = v24;
      uint64_t v34 = (void *)(v31 | v29);
      if (v31 | v29)
      {
        v55[1] = 0;
        v55[0] = 0;
        uint64_t v34 = v55;
        v55[2] = v29;
        v55[3] = v31;
      }
      uint64_t v52 = 1;
      uint64_t v53 = v34;
      uint64_t v54 = v32;
      swift_task_create();
      uint64_t result = swift_release();
      BOOL v15 = v14 >= v10;
      if (v14 == v10) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t result = sub_10001457C((uint64_t)v11, &qword_100805490);
      BOOL v15 = v14 >= v10;
      if (v14 == v10) {
        goto LABEL_6;
      }
    }
LABEL_4:
    if (v15) {
      break;
    }
    uint64_t v16 = (uint64_t)v49;
    sub_1003284E4(v50 + 40 * v14, (uint64_t)v49);
    *(void *)&v57[0] = v14;
    sub_10002C4EC(v16, v48, &qword_100805490);
    ++v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100326320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a3;
  uint64_t v6 = sub_100010218(&qword_1008086D0);
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_10080CFA0);
  v5[14] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Tips.Status();
  v5[15] = v7;
  v5[16] = *(void *)(v7 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = sub_100010218(&qword_1007FCDE0);
  v5[19] = swift_task_alloc();
  v5[20] = sub_100010218((uint64_t *)&unk_10080CFB0);
  v5[21] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_1008086D8);
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v9 = sub_100010218((uint64_t *)&unk_10080CFC0);
  v5[25] = v9;
  v5[26] = *(void *)(v9 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  return _swift_task_switch(sub_1003265AC, 0, 0);
}

uint64_t sub_1003265AC()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  sub_10002E0BC(*(void **)(v0 + 64), *(void *)(*(void *)(v0 + 64) + 24));
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100014488((unint64_t *)&unk_10080CFD0, &qword_1007FCDE0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  return _swift_task_switch(sub_100326704, 0, 0);
}

uint64_t sub_100326704()
{
  v0[29] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100014488(&qword_1008086E0, (uint64_t *)&unk_10080CFB0);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[30] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003267F0;
  uint64_t v2 = v0[14];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v2, 0, 0);
}

uint64_t sub_1003267F0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100326B0C;
  }
  else
  {
    (*(void (**)(void))(v2 + 232))();
    uint64_t v3 = sub_100326918;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100326918()
{
  uint64_t v1 = *((void *)v0 + 15);
  uint64_t v2 = *((void *)v0 + 16);
  uint64_t v3 = *((void *)v0 + 14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(v3, (uint64_t *)&unk_10080CFA0);
    return _swift_task_switch(sub_100326D84, 0, 0);
  }
  else
  {
    uint64_t v5 = *((void *)v0 + 27);
    uint64_t v4 = *((void *)v0 + 28);
    uint64_t v6 = *((void *)v0 + 25);
    uint64_t v7 = *((void *)v0 + 26);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*((void *)v0 + 17), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    uint64_t v8 = (int *)AsyncMapSequence.Iterator.transform.getter();
    *((void *)v0 + 31) = v9;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    uint64_t v13 = (uint64_t (*)(char *, uint64_t))((char *)v8 + *v8);
    unint64_t v10 = (void *)swift_task_alloc();
    *((void *)v0 + 32) = v10;
    *unint64_t v10 = v0;
    v10[1] = sub_100326B24;
    uint64_t v11 = *((void *)v0 + 17);
    return v13(v0 + 57, v11);
  }
}

uint64_t sub_100326B0C()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_100326B24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 136);
  uint64_t v3 = *(void *)(*v0 + 128);
  uint64_t v4 = *(void *)(*v0 + 120);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 58) = *(unsigned char *)(v1 + 57);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100326CA8, 0, 0);
}

uint64_t sub_100326CA8()
{
  return _swift_task_switch(sub_100326CC4, 0, 0);
}

uint64_t sub_100326CC4()
{
  char v1 = *(unsigned char *)(v0 + 58);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  *(void *)(v0 + 48) = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 56) = v1;
  sub_100010218(&qword_1008086B0);
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100326704, 0, 0);
}

uint64_t sub_100326D84()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[28], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100326E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[0] = a3;
  v18[1] = a2;
  uint64_t v6 = sub_100010218(&qword_100808688);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100808650);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __n128 v13 = __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = v18[0];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v14], (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v6);
  swift_bridgeObjectRetain();
  return sub_100144394((uint64_t)&unk_100808698, (uint64_t)v16);
}

uint64_t sub_100327090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a3;
  uint64_t v6 = sub_100010218(&qword_1008086A0);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_1008086A8);
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return _swift_task_switch(sub_1003271B8, 0, 0);
}

uint64_t sub_1003271B8()
{
  char v1 = sub_1002D855C(0, *(void *)(v0[5] + 16));
  sub_100010218(&qword_100808650);
  AsyncStream.makeAsyncIterator()();
  v0[14] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10032729C;
  uint64_t v3 = v0[11];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v3);
}

uint64_t sub_10032729C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100327398, 0, 0);
}

uint64_t sub_100327398()
{
  unint64_t v3 = *(void *)(v1 + 16);
  int v4 = *(unsigned __int8 *)(v1 + 24);
  if (v4 != 2)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = *(void *)(v1 + 112);
      if (v3 < *(void *)(v7 + 16))
      {
        char v2 = v4 & 1;
        if ((v4) == *(unsigned char *)(v7 + v3 + 32)) {
          goto LABEL_11;
        }
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v0 = *(void **)(v1 + 112);
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_9:
          if (v3 >= v0[2])
          {
            __break(1u);
            return AsyncStream.Iterator.next(isolation:)(isUniquelyReferenced_nonNull_native, v9, v10, v11);
          }
          uint64_t v13 = *(void *)(v1 + 72);
          uint64_t v12 = *(void *)(v1 + 80);
          uint64_t v14 = *(void *)(v1 + 64);
          *((unsigned char *)v0 + v3 + 32) = v2;
          *(void *)(v1 + 32) = v0;
          swift_bridgeObjectRetain();
          sub_100010218(&qword_100808688);
          AsyncStream.Continuation.yield(_:)();
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
          *(void *)(v1 + 112) = v0;
LABEL_11:
          unint64_t v15 = (void *)swift_task_alloc();
          *(void *)(v1 + 120) = v15;
          *unint64_t v15 = v1;
          v15[1] = sub_10032729C;
          uint64_t v11 = *(void *)(v1 + 88);
          uint64_t isUniquelyReferenced_nonNull_native = v1 + 16;
          uint64_t v9 = 0;
          uint64_t v10 = 0;
          return AsyncStream.Iterator.next(isolation:)(isUniquelyReferenced_nonNull_native, v9, v10, v11);
        }
LABEL_16:
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000F00CC(v0);
        uint64_t v0 = (void *)isUniquelyReferenced_nonNull_native;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  (*(void (**)(void, void))(*(void *)(v1 + 96) + 8))(*(void *)(v1 + 104), *(void *)(v1 + 88));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v1 + 8);
  return v5();
}

uint64_t sub_1003275A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[13] = a3;
  uint64_t v6 = sub_100010218(&qword_100808678);
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_100808680);
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  return _swift_task_switch(sub_1003276CC, 0, 0);
}

uint64_t sub_1003276CC()
{
  sub_100010218(&qword_100808640);
  AsyncStream.makeAsyncIterator()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10032779C;
  uint64_t v2 = *(void *)(v0 + 152);
  return AsyncStream.Iterator.next(isolation:)(v0 + 96, 0, 0, v2);
}

uint64_t sub_10032779C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100327898, 0, 0);
}

uint64_t sub_100327898()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      if (*(unsigned char *)(v1 + 32))
      {
        unint64_t v3 = 0;
LABEL_16:
        uint64_t v9 = *(void *)(v0 + 112);
        uint64_t v10 = swift_bridgeObjectRelease();
        if (v3 >= *(void *)(v9 + 16))
        {
          __break(1u);
          return AsyncStream.Iterator.next(isolation:)(v10, v11, v12, v13);
        }
        sub_1003284E4(*(void *)(v0 + 112) + 40 * v3 + 32, v0 + 16);
LABEL_18:
        uint64_t v15 = *(void *)(v0 + 136);
        uint64_t v14 = *(void *)(v0 + 144);
        uint64_t v16 = *(void *)(v0 + 128);
        sub_1003284E4(v0 + 16, v0 + 56);
        sub_100010218(&qword_100808610);
        AsyncStream.Continuation.yield(_:)();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
        sub_10001457C(v0 + 16, &qword_100805490);
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 176) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_10032779C;
        uint64_t v13 = *(void *)(v0 + 152);
        uint64_t v10 = v0 + 96;
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        return AsyncStream.Iterator.next(isolation:)(v10, v11, v12, v13);
      }
      if (v2 != 1)
      {
        if (*(unsigned char *)(v1 + 33))
        {
          unint64_t v3 = 1;
          goto LABEL_16;
        }
        uint64_t v6 = 0;
        uint64_t v7 = v2 - 2;
        while (v7 != v6)
        {
          int v8 = *(unsigned __int8 *)(v1 + 34 + v6++);
          if (v8 == 1)
          {
            unint64_t v3 = v6 + 1;
            goto LABEL_16;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    goto LABEL_18;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100327AC8()
{
  uint64_t v0 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  unsigned int v6 = [v4 BOOLForKey:v5];

  if (v6)
  {
    static Tips.resetDatastore()();
    NSString v7 = String._bridgeToObjectiveC()();
    [v4 removeObjectForKey:v7];
  }
  NSString v8 = String._bridgeToObjectiveC()();
  unsigned int v9 = [v4 BOOLForKey:v8];

  if (v9)
  {
    static Tips.hideAllTipsForTesting()();
    NSString v10 = String._bridgeToObjectiveC()();
    unsigned int v11 = [v4 BOOLForKey:v10];

    if (v11)
    {
      sub_100010218(&qword_100808608);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1006D6280;
      unint64_t v13 = sub_1001E0F50();
      *(void *)(v12 + 32) = &type metadata for InsightsTip;
      *(void *)(v12 + 40) = v13;
      static Tips.showTipsForTesting(_:)();
      swift_bridgeObjectRelease();
    }
    NSString v14 = String._bridgeToObjectiveC()();
    unsigned int v15 = [v4 BOOLForKey:v14];

    if (v15)
    {
      sub_100010218(&qword_100808608);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1006D6280;
      unint64_t v17 = sub_1001D591C();
      *(void *)(v16 + 32) = &type metadata for MindfulMinutesTip;
      *(void *)(v16 + 40) = v17;
      static Tips.showTipsForTesting(_:)();
      swift_bridgeObjectRelease();
    }
    NSString v18 = String._bridgeToObjectiveC()();
    unsigned int v19 = [v4 BOOLForKey:v18];

    if (v19)
    {
      sub_100010218(&qword_100808608);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1006D6280;
      unint64_t v21 = sub_1001A3414();
      *(void *)(v20 + 32) = &type metadata for MindfulMinutesCanvasTip;
      *(void *)(v20 + 40) = v21;
      static Tips.showTipsForTesting(_:)();
      swift_bridgeObjectRelease();
    }
    NSString v22 = String._bridgeToObjectiveC()();
    unsigned int v23 = [v4 BOOLForKey:v22];

    if (v23)
    {
      sub_100010218(&qword_100808608);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1006D6280;
      unint64_t v25 = sub_1001FB118();
      *(void *)(v24 + 32) = &type metadata for SuggestionsTip;
      *(void *)(v24 + 40) = v25;
      static Tips.showTipsForTesting(_:)();
      swift_bridgeObjectRelease();
    }
  }
  sub_100010218(&qword_100808600);
  type metadata accessor for Tips.ConfigurationOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  NSString v26 = String._bridgeToObjectiveC()();
  unsigned int v27 = [v4 BOOLForKey:v26];

  if (v27) {
    static Tips.ConfigurationOption.DisplayFrequency.immediate.getter();
  }
  else {
    static Tips.ConfigurationOption.DisplayFrequency.daily.getter();
  }
  static Tips.ConfigurationOption.displayFrequency(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  static Tips.configure(_:)();
  swift_bridgeObjectRelease();
}

uint64_t sub_100327F74()
{
  uint64_t v1 = sub_100010218(&qword_100808610);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10032804C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100010218(&qword_100808610) - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *NSString v7 = v2;
  v7[3] = v5;
  v7[4] = v6;
  v7[1] = sub_10002C194;
  _OWORD v7[2] = a1;
  return _swift_task_switch(sub_100325320, 0, 0);
}

uint64_t sub_100328144(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  NSString v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *NSString v8 = v3;
  v8[1] = sub_100052588;
  return sub_100325510(a1, a2, v7, v6);
}

uint64_t sub_1003281F8(uint64_t a1)
{
  return sub_100325DA0(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_100328200(uint64_t a1)
{
  return sub_100326E64(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10032820C()
{
  uint64_t v1 = sub_100010218(&qword_100808640);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_100010218(&qword_100808610);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_100328380()
{
  uint64_t v2 = *(void *)(sub_100010218(&qword_100808640) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_100010218(&qword_100808610) - 8) + 80);
  uint64_t v6 = v4 + v5 + 8;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = *(void *)(v0 + v4);
  uint64_t v11 = v0 + (v6 & ~v5);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  void *v12 = v1;
  v12[1] = sub_100052588;
  return sub_1003275A4(v7, v8, v9, v10, v11);
}

uint64_t sub_1003284E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100805490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032854C()
{
  uint64_t v1 = sub_100010218(&qword_100808650);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_100010218(&qword_100808688);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1003286B4()
{
  uint64_t v2 = *(void *)(sub_100010218(&qword_100808650) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_100010218(&qword_100808688) - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0[2];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  uint64_t v10 = (uint64_t)v0 + v3;
  uint64_t v11 = (uint64_t)v0 + (v6 & ~v5);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  void *v12 = v1;
  v12[1] = sub_100052588;
  return sub_100327090(v7, v8, v9, v10, v11);
}

uint64_t sub_10032880C()
{
  uint64_t v1 = sub_100010218(&qword_1008086B0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 32);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003288F0()
{
  uint64_t v2 = *(void *)(sub_100010218(&qword_1008086B0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = v0 + 32;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  void *v9 = v1;
  v9[1] = sub_100052588;
  return sub_100326320(v4, v5, v6, v7, v8);
}

uint64_t sub_100328A14()
{
  swift_release();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for JournalTipsManager()
{
  return &type metadata for JournalTipsManager;
}

uint64_t sub_100328A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100328AB4(a1, a2, a3);
}

uint64_t sub_100328A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100328AB4(a1, a2, a3);
}

uint64_t sub_100328AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000D9A48(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100328C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100328CC8(a1, a2, a3, (uint64_t)&unk_1007A5EB8, &qword_1007F9F98);
}

uint64_t sub_100328C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100328CC8(a1, a2, a3, (uint64_t)&unk_1007A5E90, (uint64_t *)&unk_1007FC460);
}

uint64_t sub_100328CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100328CC8(a1, a2, a3, (uint64_t)&unk_1007A5EE0, qword_1008088D0);
}

uint64_t sub_100328CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000D9A48(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_100010218(a5);
  return swift_task_create();
}

BOOL OperationBase.hasCompletions.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1008086E8);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1003299DC(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return (v5 & 1) == 0;
}

uint64_t sub_100328FA0()
{
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for Result();
  swift_getFunctionTypeMetadata1();
  type metadata accessor for Array();

  return swift_getWitnessTable();
}

void OperationBase.onResult(_:)()
{
  uint64_t v1 = *(void *)(v0 + qword_1008086E8);
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_100329C0C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t OperationBase.onSuccess(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  _OWORD v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  OperationBase.onResult(_:)();

  return swift_release();
}

uint64_t sub_1003291C4()
{
  uint64_t v1 = *(void *)(v0 + qword_1008086E8);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10032BC78(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return v5;
}

uint64_t sub_1003292EC(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  [v1 willChangeValueForKey:v4];

  uint64_t v5 = *(void *)&v1[qword_1008086E8];
  type metadata accessor for OperationBase.Locked();
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for Result();
  swift_getFunctionTypeMetadata1();
  type metadata accessor for Array();
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_10032BC14(v6, &v17);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = v17;
  NSString v9 = String._bridgeToObjectiveC()();
  [v2 didChangeValueForKey:v9];

  if (!Array.endIndex.getter()) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = 0;
  for (uint64_t i = v8 + 40; ; i += 16)
  {
    Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)();
    if (!IsNativeType) {
      break;
    }
    unint64_t v13 = *(void (**)(uint64_t))(i - 8);
    uint64_t v14 = v10 + 1;
    BOOL v15 = __OFADD__(v10, 1);
    uint64_t result = swift_retain();
    if (v15) {
      goto LABEL_11;
    }
    v13(a1);
    swift_release();
    ++v10;
    if (v14 == Array.endIndex.getter()) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = _ArrayBuffer._getElementSlowPath(_:)();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t OperationBase.State.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100794690, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t OperationBase.State.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7964616572;
  }
  if (a1 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

uint64_t sub_1003295F4()
{
  swift_getWitnessTable();

  return == infix<A>(_:_:)();
}

uint64_t sub_100329668(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_1003296D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100329744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

unint64_t sub_1003297B4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = OperationBase.State.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003297E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OperationBase.State.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100329810()
{
  return 0;
}

uint64_t sub_100329880@<X0>(unsigned char *a1@<X8>)
{
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for Result();
  swift_getFunctionTypeMetadata1();
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t result = Collection.isEmpty.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100329948()
{
  return 8;
}

void *sub_100329954(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100329960()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1003299D4()
{
  return sub_100329960();
}

uint64_t sub_1003299DC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for OperationBase.Locked()
{
  return sub_100073C20();
}

uint64_t OperationBase.main@Sendable ()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = swift_isaMask & *v1;
  return _swift_task_switch(sub_100329A98, 0, 0);
}

uint64_t sub_100329A98()
{
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0[3] + 80) - 8) + 56))(v0[2], 1, 1);
  unsigned __int8 v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100329B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  swift_retain();
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for Result();
  swift_getFunctionTypeMetadata1();
  type metadata accessor for Array();
  return Array.append(_:)();
}

uint64_t sub_100329C0C(uint64_t a1)
{
  return sub_100329B2C(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_100329C2C(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  uint64_t v7 = type metadata accessor for Result();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = type metadata accessor for Optional();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  BOOL v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a1, v7, v13);
  sub_100329E74(v7, (uint64_t)&v18, (uint64_t)v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v15, 0, 1, a4);
  a2(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_100329E30()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100329E68(uint64_t a1)
{
  return sub_100329C2C(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_100329E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

Class sub_100329F44(uint64_t a1, uint64_t a2)
{
  return sub_10032A01C(a1, a2, (void (*)(void))sub_100329F5C);
}

Swift::Int sub_100329F5C()
{
  Swift::Int v0 = sub_1000F910C((uint64_t)&off_1007946F8);
  swift_arrayDestroy();
  return v0;
}

Class sub_100329FA4(uint64_t a1, uint64_t a2)
{
  return sub_10032A01C(a1, a2, (void (*)(void))sub_100329FBC);
}

Swift::Int sub_100329FBC()
{
  Swift::Int v0 = sub_1000F910C((uint64_t)&off_100794728);
  swift_arrayDestroy();
  return v0;
}

Class sub_10032A004(uint64_t a1, uint64_t a2)
{
  return sub_10032A01C(a1, a2, (void (*)(void))sub_10032A088);
}

Class sub_10032A01C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjCClassMetadata();
  a3();
  v4.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v4.super.isa;
}

Swift::Int sub_10032A088()
{
  Swift::Int v0 = sub_1000F910C((uint64_t)&off_100794758);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_10032A0D0(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isFinished.getter();

  return v2 & 1;
}

uint64_t OperationBase.isFinished.getter()
{
  return sub_10032A160();
}

uint64_t type metadata accessor for OperationBase.State()
{
  return sub_100073C20();
}

uint64_t sub_10032A124(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isExecuting.getter();

  return v2 & 1;
}

uint64_t OperationBase.isExecuting.getter()
{
  return sub_10032A160();
}

uint64_t sub_10032A160()
{
  return == infix<A>(_:_:)() & 1;
}

uint64_t sub_10032A20C()
{
  return 1;
}

uint64_t sub_10032A214(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isReady.getter();

  return v2 & 1;
}

uint64_t OperationBase.isReady.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for OperationBase();
  unsigned int v1 = [super isReady];
  if (v1)
  {
    sub_1003291C4();
    type metadata accessor for OperationBase.State();
    swift_getWitnessTable();
    LOBYTE(v1) = == infix<A>(_:_:)();
  }
  return v1 & 1;
}

uint64_t type metadata accessor for OperationBase()
{
  return sub_100073C20();
}

Swift::Void __swiftcall OperationBase.start()()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x50);
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  uint64_t v2 = type metadata accessor for Result();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v21[-v4];
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (objc_msgSend(v0, "isCancelled", v7))
  {
    type metadata accessor for CancellationError();
    sub_10032AE6C();
    uint64_t v10 = swift_allocError();
    CancellationError.init()();
    *uint64_t v5 = v10;
    swift_storeEnumTagMultiPayload();
    sub_1003292EC((uint64_t)v5);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v0;
    __n128 v13 = v0;
    uint64_t v14 = sub_100328AB4((uint64_t)v9, (uint64_t)&unk_100808700, (uint64_t)v12);
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 willChangeValueForKey:v15];

    uint64_t v16 = *(void *)((char *)v13 + qword_1008086E8);
    __chkstk_darwin(v17);
    *(void *)&v21[-16] = v1;
    *(void *)&v21[-8] = v14;
    type metadata accessor for OperationBase.Locked();
    uint64_t v18 = v16 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v16 + 16);
    unsigned int v19 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(void *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v19);
    sub_10032AE18(v18);
    os_unfair_lock_unlock(v19);
    NSString v20 = String._bridgeToObjectiveC()();
    [v13 didChangeValueForKey:v20];

    swift_release();
  }
}

uint64_t sub_10032A6A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a4;
  uint64_t v12 = swift_isaMask & *a4;
  uint64_t v5 = *(void *)(v12 + 0x50);
  v4[3] = v5;
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  uint64_t v6 = type metadata accessor for Result();
  v4[4] = v6;
  v4[5] = *(void *)(v6 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Optional();
  v4[7] = v7;
  v4[8] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[9] = v8;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))(*(void *)(v12 + 104) + **(int **)(v12 + 104));
  uint64_t v9 = (void *)swift_task_alloc();
  v4[12] = v9;
  void *v9 = v4;
  v9[1] = sub_10032A91C;
  return v11(v8);
}

uint64_t sub_10032A91C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10032AC48;
  }
  else {
    uint64_t v2 = sub_10032AA30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032AA30()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[8] + 8))(v1, v0[7]);
    type metadata accessor for OperationBase.Failure();
    swift_getWitnessTable();
    uint64_t v4 = swift_allocError();
    swift_willThrow();
    uint64_t v6 = v0[5];
    uint64_t v5 = (uint64_t *)v0[6];
    uint64_t v7 = v0[4];
    *uint64_t v5 = v4;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_1003292EC((uint64_t)v5);
    swift_errorRelease();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {
    uint64_t v8 = v0[11];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
    swift_storeEnumTagMultiPayload();
    sub_1003292EC(v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10032AC48()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  *uint64_t v1 = v0[13];
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_1003292EC((uint64_t)v1);
  swift_errorRelease();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10032AD24()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10032AD64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10032A6A8(a1, v4, v5, v6);
}

uint64_t sub_10032AE18(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(unsigned char *)a1 = 1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a1 + 16) = v3;
  return result;
}

unint64_t sub_10032AE6C()
{
  unint64_t result = qword_100808708[0];
  if (!qword_100808708[0])
  {
    type metadata accessor for CancellationError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100808708);
  }
  return result;
}

void sub_10032AEC4(void *a1)
{
  id v1 = a1;
  OperationBase.start()();
}

Swift::Void __swiftcall OperationBase.cancel()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for OperationBase();
  [super cancel];
  uint64_t v1 = *(void *)&v0[qword_1008086E8];
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10032B108(v2, &v4);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  if (v4)
  {
    Task.cancel()();
    swift_release();
  }
}

uint64_t sub_10032B08C()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10032B100()
{
  return sub_10032B08C();
}

uint64_t sub_10032B108@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

void sub_10032B150(void *a1)
{
  id v1 = a1;
  OperationBase.cancel()();
}

id sub_10032B198(void *a1)
{
  id v1 = a1;
  sub_10032B200();

  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_10032B200()
{
  int v0 = sub_1003291C4();
  if (!v0) {
    return 0x7964616572;
  }
  if (v0 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

void sub_10032B270()
{
}

id OperationBase.init()()
{
  uint64_t v1 = qword_1008086E8;
  NSString v2 = v0;
  char v8 = sub_100329810();
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  type metadata accessor for OperationBase.Locked();
  uint64_t v5 = sub_100010214();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)&v0[v1] = v5;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for OperationBase();
  return [super init];
}

id sub_10032B3C8()
{
  return OperationBase.init()();
}

id OperationBase.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationBase();
  [super dealloc];
}

uint64_t sub_10032B448()
{
  return swift_release();
}

uint64_t sub_10032B458(uint64_t a1, int *a2)
{
  *(void *)(v2 + 40) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10032B538;
  return v5(v2 + 16);
}

uint64_t sub_10032B538()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 32);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_10032B66C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10032B688()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10032B6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_10032B6D8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10032B7A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10032B7D0()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10032B80C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10032B84C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10032B8B4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_10032B8FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10032B934(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100052588;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100808890 + dword_100808890);
  return v6(a1, v4);
}

uint64_t sub_10032B9EC(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100052588;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1008088A0 + dword_1008088A0);
  return v6(a1, v4);
}

uint64_t sub_10032BAA4(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002C194;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1008088B0 + dword_1008088B0);
  return v6(a1, v4);
}

uint64_t sub_10032BB5C(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100052588;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1008088C0 + dword_1008088C0);
  return v6(a1, v4);
}

void sub_10032BC14(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)a1 = 2;
  *a2 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_10032B270();
}

uint64_t type metadata accessor for OperationBase.Failure()
{
  return sub_100073C20();
}

uint64_t sub_10032BC78@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

uint64_t sub_10032BCC0()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

unsigned char *sub_10032BCE8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10032BD84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10032BDAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10032BDDC()
{
  uint64_t v1 = type metadata accessor for MusicAuthorization.Status();
  v0[6] = v1;
  v0[7] = *(void *)(v1 - 8);
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  v0[10] = swift_task_alloc();
  v0[11] = swift_task_alloc();
  return _swift_task_switch(sub_10032BEC0, 0, 0);
}

uint64_t sub_10032BEC0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  static MusicAuthorization.currentStatus.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  if (v5 == enum case for MusicAuthorization.Status.notDetermined(_:))
  {
    unsigned int v6 = (void *)swift_task_alloc();
    v0[12] = v6;
    void *v6 = v0;
    v6[1] = sub_10032C094;
    uint64_t v7 = v0[9];
    return static MusicAuthorization.request()(v7);
  }
  else
  {
    int v8 = v5;
    uint64_t v9 = v0[11];
    uint64_t v10 = v0[6];
    uint64_t v11 = v0[7];
    if (v8 == enum case for MusicAuthorization.Status.denied(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      uint64_t v12 = 1;
    }
    else
    {
      int v13 = enum case for MusicAuthorization.Status.authorized(_:);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v14(v9, v10);
      if (v8 == v13)
      {
        uint64_t v12 = 0;
      }
      else
      {
        v14(v0[10], v0[6]);
        uint64_t v12 = 2;
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    NSString v15 = (uint64_t (*)(uint64_t))v0[1];
    return v15(v12);
  }
}

uint64_t sub_10032C094()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10032C190, 0, 0);
}

uint64_t sub_10032C190()
{
  (*(void (**)(void, void, void))(v0[7] + 104))(v0[8], enum case for MusicAuthorization.Status.authorized(_:), v0[6]);
  sub_10032C324();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v0[2] == v0[4] && v0[3] == v0[5])
  {
    swift_bridgeObjectRelease_n();
    uint64_t v1 = 0;
  }
  else
  {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2) {
      uint64_t v1 = 0;
    }
    else {
      uint64_t v1 = 2;
    }
  }
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
  v6(v0[8], v5);
  v6(v4, v5);
  v6(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v1);
}

unint64_t sub_10032C324()
{
  unint64_t result = qword_100803D68;
  if (!qword_100803D68)
  {
    type metadata accessor for MusicAuthorization.Status();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803D68);
  }
  return result;
}

uint64_t sub_10032C37C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100808960);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100808960);
  if (qword_1007F7D98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ECC8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

Swift::Int sub_10032C444()
{
  return Hasher._finalize()();
}

uint64_t sub_10032C4D8()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10032C558()
{
  return Hasher._finalize()();
}

uint64_t sub_10032C5E8()
{
  return static UUID.== infix(_:_:)();
}

id sub_10032C5F8(uint64_t a1, double a2)
{
  uint64_t v5 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = (int *)v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&v2[OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_skipRows] = &_swiftEmptySetSingleton;
  *(void *)&v2[OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_skipColumns] = &_swiftEmptySetSingleton;
  p_vtable = &OBJC_METACLASS____TtC7Journal17SuggestedDateCell.vtable;
  uint64_t v9 = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_inputClusters] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_results] = &_swiftEmptySetSingleton;
  *(double *)&v2[OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold] = a2;
  uint64_t v10 = (objc_class *)_s30MOSuggestionAssetMapsClustererCMa();
  v51.receiver = v2;
  v51.super_class = v10;
  id v11 = [super init];
  id v12 = v11;
  int64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v50 = _swiftEmptyArrayStorage;
    id v39 = v11;
    id v38 = v11;
    sub_100095D9C(0, v13, 0);
    uint64_t v14 = 0;
    uint64_t v9 = v50;
    uint64_t v40 = a1;
    int64_t v41 = v13;
    uint64_t v15 = a1 + 56;
    do
    {
      uint64_t v16 = *(void *)(v15 - 24);
      uint64_t v17 = *(void *)(v15 - 16);
      unsigned int v19 = *(void **)(v15 - 8);
      uint64_t v18 = *(void *)v15;
      int v20 = *(unsigned __int8 *)(v15 + 8);
      uint64_t v21 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v15 + 24);
      int v46 = *(unsigned __int8 *)(v15 + 32);
      uint64_t v23 = *(void *)(v15 + 56);
      if (v20) {
        uint64_t v18 = 1;
      }
      uint64_t v44 = v18;
      uint64_t v45 = v21;
      uint64_t v47 = v14;
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v49 = v24;
      v25._uint64_t countAndFlagsBits = 95;
      v25._object = (void *)0xE100000000000000;
      String.append(_:)(v25);
      uint64_t v27 = v48;
      uint64_t v26 = v49;
      uint64_t v28 = v9;
      uint64_t v29 = v43;
      id v30 = v19;
      swift_bridgeObjectRetain();
      UUID.init()();
      *uint64_t v7 = v16;
      v7[1] = v17;
      uint64_t v31 = v44;
      uint64_t v32 = v45;
      _OWORD v7[2] = 0;
      v7[3] = v31;
      v7[4] = v27;
      v7[5] = v26;
      *(void *)((char *)v7 + v29[9]) = v19;
      *(void *)((char *)v7 + v29[10]) = 0;
      uint64_t v33 = (void *)((char *)v7 + v29[11]);
      void *v33 = v32;
      v33[1] = v22;
      *((unsigned char *)v7 + v29[12]) = v46;
      uint64_t v34 = v29[13];
      uint64_t v9 = v28;
      *(void *)((char *)v7 + v34) = v23;
      uint64_t v50 = v28;
      unint64_t v36 = v28[2];
      unint64_t v35 = v28[3];
      if (v36 >= v35 >> 1)
      {
        sub_100095D9C(v35 > 1, v36 + 1, 1);
        uint64_t v9 = v50;
      }
      ++v14;
      void v9[2] = v36 + 1;
      sub_1003306B0((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v36);
      v15 += 104;
    }
    while (v41 != v14);
    swift_bridgeObjectRelease();

    p_vtable = (void **)(&OBJC_METACLASS____TtC7Journal17SuggestedDateCell + 24);
    id v12 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)((char *)p_vtable[305] + (void)v12) = v9;
  swift_bridgeObjectRelease();
  return v12;
}

void sub_10032C8DC()
{
  uint64_t v1 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v132 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v124 = (uint64_t)v112 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v123 = (uint64_t)v112 - v4;
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v116 = (char *)v112 - v8;
  __chkstk_darwin(v9);
  uint64_t v120 = (uint64_t)v112 - v10;
  __chkstk_darwin(v11);
  uint64_t v119 = (uint64_t)v112 - v12;
  __chkstk_darwin(v13);
  uint64_t v118 = (uint64_t)v112 - v14;
  __chkstk_darwin(v15);
  uint64_t v117 = (uint64_t)v112 - v16;
  __chkstk_darwin(v17);
  id v115 = (char *)v112 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v112 - v20;
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  uint64_t v125 = (uint64_t)v112 - v27;
  unint64_t v28 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_inputClusters);
  unint64_t v140 = v28;
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29) {
    goto LABEL_90;
  }
  uint64_t v30 = v29 - 1;
  if (v29 == 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_76;
  }
  uint64_t v130 = v26;
  uint64_t v127 = v25;
  uint64_t v128 = v24;
  uint64_t v113 = OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold;
  v112[1] = v0 + OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_results;
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v122 = v0;
  uint64_t v129 = v1;
  double v114 = v21;
  uint64_t v121 = v30;
  while (1)
  {
    if (v31 == v30)
    {
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      return;
    }
    uint64_t v33 = *(void *)(v28 + 16);
    if (v33
      && (uint64_t v34 = static Array._allocateBufferUninitialized(minimumCapacity:)(),
          *(void *)(v34 + 16) = v33,
          memset_pattern16((void *)(v34 + 32), &unk_1006E36D0, 8 * v33),
          (uint64_t v35 = *(void *)(v28 + 16)) != 0))
    {
      sub_100010218(&qword_1007FD810);
      unint64_t v36 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v36[2] = v35;
      v36[4] = v34;
      if (v35 == 1) {
        goto LABEL_14;
      }
      uint64_t v32 = v36;
      v36[5] = v34;
      uint64_t v37 = v35 - 2;
      if (v35 != 2)
      {
        id v38 = v36 + 6;
        do
        {
          *v38++ = v34;
          swift_bridgeObjectRetain();
          --v37;
        }
        while (v37);
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v36 = v32;
LABEL_14:
    uint64_t v39 = *(void *)(v28 + 16);
    if (!v39) {
      goto LABEL_89;
    }
    uint64_t v126 = v31;
    uint64_t v40 = v39 - 1;
    unint64_t v136 = v28;
    int64_t v41 = v36;
    if (v39 != 1) {
      break;
    }
LABEL_35:
    id v139 = v36;
    uint64_t v62 = v122;
    unint64_t v63 = sub_10032D460((uint64_t)&v139, 1);
    if (v66)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = v121;
      uint64_t v85 = v126;
      uint64_t v32 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v67 = (uint64_t)v114;
      if ((v63 & 0x8000000000000000) != 0) {
        goto LABEL_92;
      }
      unint64_t v68 = v28;
      unint64_t v69 = *(void *)(v28 + 16);
      if (v63 >= v69) {
        goto LABEL_93;
      }
      unint64_t v70 = v64;
      double v71 = v65;
      unint64_t v135 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
      uint64_t v72 = v68 + v135;
      uint64_t v73 = *(void *)(v132 + 72);
      sub_10031326C(v68 + v135 + v73 * v63, v125);
      if (v70 >= v69) {
        goto LABEL_94;
      }
      double v74 = v71;
      uint64_t v75 = v130;
      sub_10031326C(v72 + v73 * v70, v130);
      if (*(double *)(v62 + v113) * *(double *)(v62 + v113) <= v74)
      {
        swift_bridgeObjectRelease();
        uint64_t v86 = v125;
        uint64_t v87 = v120;
        sub_10031326C(v125, v120);
        swift_beginAccess();
        uint64_t v88 = v119;
        sub_10054CAC8(v119, v87);
        sub_1003132D0(v88);
        sub_10031326C(v75, v87);
        sub_10054CAC8(v88, v87);
        sub_1003132D0(v88);
        swift_endAccess();
        sub_1003132D0(v75);
        sub_1003132D0(v86);
        uint64_t v30 = v121;
        uint64_t v85 = v126;
        uint64_t v32 = _swiftEmptyArrayStorage;
        unint64_t v28 = v136;
      }
      else
      {
        unint64_t v137 = v125 + *(int *)(v129 + 32);
        swift_bridgeObjectRetain();
        unint64_t v76 = 0;
        uint64_t v138 = v73;
        uint64_t v77 = v73 + v135;
        unint64_t v78 = 1;
        uint64_t v79 = (uint64_t)v116;
        uint64_t v80 = (uint64_t)v115;
        while (1)
        {
          char v81 = static UUID.== infix(_:_:)();
          sub_10031326C(v72, v67);
          sub_10031326C(v130, v80);
          if (v81) {
            break;
          }
          char v82 = static UUID.== infix(_:_:)();
          sub_1003132D0(v80);
          sub_1003132D0(v67);
          if (v82) {
            goto LABEL_48;
          }
          ++v76;
          v72 += v138;
          ++v78;
          v77 += v138;
          if (v69 == v76)
          {
            unint64_t v83 = v136;
            swift_bridgeObjectRelease();
            unint64_t v76 = *(void *)(v83 + 16);
            unint64_t v84 = v140;
            goto LABEL_50;
          }
        }
        sub_1003132D0(v80);
        sub_1003132D0(v67);
LABEL_48:
        unint64_t v89 = v136;
        swift_bridgeObjectRelease();
        if (__OFADD__(v76, 1)) {
          goto LABEL_101;
        }
        uint64_t v90 = *(void *)(v89 + 16);
        unint64_t v84 = v140;
        if (v76 + 1 != v90)
        {
          while (v78 < *(void *)(v84 + 16))
          {
            sub_10031326C(v84 + v77, v79);
            char v102 = static UUID.== infix(_:_:)();
            uint64_t v103 = v79;
            uint64_t v104 = v79;
            uint64_t v105 = v127;
            sub_10031326C(v103, v127);
            uint64_t v106 = v128;
            sub_10031326C(v130, v128);
            if (v102)
            {
              sub_1003132D0(v105);
              sub_1003132D0(v106);
              sub_1003132D0(v104);
              uint64_t v79 = v104;
            }
            else
            {
              char v107 = static UUID.== infix(_:_:)();
              sub_1003132D0(v105);
              sub_1003132D0(v106);
              sub_1003132D0(v104);
              uint64_t v79 = v104;
              if ((v107 & 1) == 0)
              {
                if (v78 != v76)
                {
                  if ((v76 & 0x8000000000000000) != 0) {
                    goto LABEL_95;
                  }
                  unint64_t v108 = *(void *)(v84 + 16);
                  if (v76 >= v108) {
                    goto LABEL_96;
                  }
                  unint64_t v109 = v76 * v138;
                  sub_10031326C(v84 + v135 + v76 * v138, v123);
                  if (v78 >= v108) {
                    goto LABEL_97;
                  }
                  sub_10031326C(v84 + v77, v124);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    unint64_t v84 = sub_1000F0068(v84);
                    unint64_t v140 = v84;
                  }
                  if (v76 >= *(void *)(v84 + 16)) {
                    goto LABEL_98;
                  }
                  sub_100330714(v124, v84 + v135 + v109);
                  if (v78 >= *(void *)(v140 + 16)) {
                    goto LABEL_99;
                  }
                  sub_100330714(v123, v140 + v77);
                }
                if (__OFADD__(v76++, 1)) {
                  goto LABEL_91;
                }
              }
            }
            unint64_t v111 = v78 + 1;
            if (__OFADD__(v78, 1)) {
              goto LABEL_87;
            }
            unint64_t v84 = v140;
            ++v78;
            v77 += v138;
            if (v111 == *(void *)(v140 + 16)) {
              goto LABEL_50;
            }
          }
          goto LABEL_86;
        }
LABEL_50:
        int64_t v91 = *(void *)(v84 + 16);
        if (v91 < (uint64_t)v76) {
          goto LABEL_100;
        }
        sub_1000F7F28(v76, v91);
        swift_bridgeObjectRelease();
        uint64_t v92 = v117;
        sub_10032D6C8(v125, v130, v117, v74);
        sub_10031326C(v92, v118);
        unint64_t v93 = v140;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = v121;
        uint64_t v85 = v126;
        uint64_t v32 = _swiftEmptyArrayStorage;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v93 = sub_1002A62F4(0, *(void *)(v93 + 16) + 1, 1, v93);
        }
        unint64_t v96 = *(void *)(v93 + 16);
        unint64_t v95 = *(void *)(v93 + 24);
        if (v96 >= v95 >> 1) {
          unint64_t v93 = sub_1002A62F4(v95 > 1, v96 + 1, 1, v93);
        }
        *(void *)(v93 + 16) = v96 + 1;
        sub_1003306B0(v118, v93 + v135 + v96 * v138);
        unint64_t v140 = v93;
        unint64_t v97 = v93;
        uint64_t v98 = v117;
        uint64_t v99 = v120;
        sub_10031326C(v117, v120);
        swift_beginAccess();
        uint64_t v100 = v119;
        sub_10054CAC8(v119, v99);
        sub_1003132D0(v100);
        swift_endAccess();
        uint64_t v101 = v98;
        unint64_t v28 = v97;
        sub_1003132D0(v101);
        sub_1003132D0(v130);
        sub_1003132D0(v125);
      }
    }
    uint64_t v31 = v85 + 1;
    if (v31 == v30) {
      goto LABEL_76;
    }
  }
  unint64_t v42 = 0;
  uint64_t v43 = v36 + 4;
  uint64_t v44 = v36 + 5;
  unint64_t v131 = v28 + 8;
  unint64_t v135 = 1;
  uint64_t v133 = v39 - 1;
  while (1)
  {
    if (v42 == v40)
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    unint64_t v45 = *(void *)(v28 + 16);
    if (v45 <= v42) {
      goto LABEL_84;
    }
    unint64_t v134 = v42 + 1;
    if (v42 + 1 != v45) {
      break;
    }
LABEL_17:
    ++v135;
    uint64_t v40 = v133;
    unint64_t v42 = v134;
    if (v134 == v133) {
      goto LABEL_35;
    }
  }
  if (v42 + 1 >= v45) {
    goto LABEL_85;
  }
  unint64_t v46 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
  uint64_t v47 = *(void *)(v132 + 72);
  uint64_t v48 = (double *)(v28 + v46 + v47 * v42);
  unint64_t v137 = v45 - 1;
  uint64_t v138 = v47;
  uint64_t v49 = (double *)(v131 + v46 + v47 * v135);
  unint64_t v50 = v42;
  while (1)
  {
    unint64_t v51 = *(void *)(v28 + 16);
    if (v42 >= v51) {
      break;
    }
    unint64_t v52 = v50 + 1;
    if (v50 + 1 >= v51) {
      goto LABEL_78;
    }
    if (v42 >= v36[2]) {
      goto LABEL_79;
    }
    double v53 = *(v49 - 1);
    double v54 = *v49;
    double v56 = *v48;
    double v55 = v48[1];
    id v57 = (void *)v43[v42];
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    v43[v42] = v57;
    if ((v58 & 1) == 0)
    {
      id v57 = sub_1000F0054(v57);
      v43[v42] = v57;
    }
    if (v52 >= v57[2]) {
      goto LABEL_80;
    }
    double v59 = (v56 - v53) * (v56 - v53) + (v55 - v54) * (v55 - v54);
    *(double *)&v57[v50 + 5] = v59;
    if (v52 >= v41[2]) {
      goto LABEL_81;
    }
    uint64_t v60 = (void *)v44[v50];
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    v44[v50] = v60;
    if ((v61 & 1) == 0)
    {
      uint64_t v60 = sub_1000F0054(v60);
      v44[v50] = v60;
    }
    unint64_t v28 = v136;
    if (v42 >= v60[2]) {
      goto LABEL_82;
    }
    unint64_t v36 = v41;
    *(double *)&v60[v42 + 4] = v59;
    ++v50;
    uint64_t v49 = (double *)((char *)v49 + v138);
    if (v137 == v50) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_76:
  swift_bridgeObjectRelease();
}

uint64_t sub_10032D460(uint64_t result, char a2)
{
  if (!*(void *)(*(void *)result + 16)) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_skipRows;
  uint64_t v5 = OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_skipColumns;
  uint64_t v25 = *(void *)result + 32;
  double v6 = 1.79769313e308;
  uint64_t v7 = -1;
  uint64_t v8 = -1;
  uint64_t v27 = *(void *)(*(void *)result + 16);
  unint64_t v28 = v27;
  do
  {
    if (v3 >= v27)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v25 + 8 * v3);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v12 = v9 + 32;
      unint64_t v13 = v28;
      if (v3 < v28) {
        unint64_t v13 = v3;
      }
      unint64_t v26 = v13;
      do
      {
        double v14 = *(double *)(v12 + 8 * v11);
        uint64_t v15 = *(void *)(v2 + v4);
        if (*(void *)(v15 + 16))
        {
          unint64_t result = static Hasher._hash(seed:_:)();
          uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
          unint64_t v17 = result & ~v16;
          if ((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
          {
            uint64_t v18 = *(void *)(v15 + 48);
            if (*(void *)(v18 + 8 * v17) == v3) {
              goto LABEL_11;
            }
            uint64_t v19 = ~v16;
            while (1)
            {
              unint64_t v17 = (v17 + 1) & v19;
              if (((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                break;
              }
              if (*(void *)(v18 + 8 * v17) == v3) {
                goto LABEL_11;
              }
            }
          }
        }
        uint64_t v20 = *(void *)(v2 + v5);
        if (*(void *)(v20 + 16))
        {
          unint64_t result = static Hasher._hash(seed:_:)();
          uint64_t v21 = -1 << *(unsigned char *)(v20 + 32);
          unint64_t v22 = result & ~v21;
          if ((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
          {
            uint64_t v23 = *(void *)(v20 + 48);
            if (*(void *)(v23 + 8 * v22) == v11) {
              goto LABEL_11;
            }
            uint64_t v24 = ~v21;
            while (1)
            {
              unint64_t v22 = (v22 + 1) & v24;
              if (((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                break;
              }
              if (*(void *)(v23 + 8 * v22) == v11) {
                goto LABEL_11;
              }
            }
          }
        }
        if ((a2 & 1) == 0) {
          goto LABEL_9;
        }
        if (v28 == 1)
        {
          uint64_t v27 = 1;
        }
        else
        {
          uint64_t v27 = v28;
          if (v11 < v26)
          {
LABEL_9:
            if (v14 < v6)
            {
              uint64_t v7 = v11;
              uint64_t v8 = v3;
              double v6 = v14;
            }
            goto LABEL_11;
          }
          uint64_t v27 = v28;
        }
LABEL_11:
        ++v11;
      }
      while (v11 != v10);
    }
    ++v3;
  }
  while (v3 != v28);
  if (v8 == -1 && v7 == -1) {
    return 0;
  }
  return v8;
}

int *sub_10032D6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  unint64_t result = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = result;
  uint64_t v10 = result[9];
  unint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = v11;
  if (!v11)
  {
    uint64_t v12 = *(void **)(a2 + v10);
    unint64_t result = v12;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    double v16 = (*(double *)(a1 + 8) + *(double *)(a2 + 8)) * 0.5;
    double v17 = (*(double *)a1 + *(double *)a2) * 0.5;
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void **)(a2 + 40);
    uint64_t v25 = v19;
    uint64_t v26 = v18;
    swift_bridgeObjectRetain();
    v22._uint64_t countAndFlagsBits = v20;
    v22._object = v21;
    String.append(_:)(v22);
    id v23 = v11;
    unint64_t result = (int *)UUID.init()();
    *(double *)a3 = v17;
    *(double *)(a3 + 8) = v16;
    *(double *)(a3 + 16) = a4;
    *(void *)(a3 + 24) = v15;
    *(void *)(a3 + 32) = v25;
    *(void *)(a3 + 40) = v26;
    *(void *)(a3 + v9[9]) = v12;
    *(void *)(a3 + v9[10]) = 0;
    uint64_t v24 = (void *)(a3 + v9[11]);
    *uint64_t v24 = 0;
    v24[1] = 0xE000000000000000;
    *(unsigned char *)(a3 + v9[12]) = 0;
    *(void *)(a3 + v9[13]) = 0;
  }
  return result;
}

uint64_t *sub_10032D7F0()
{
  double v146 = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v148 = *((void *)v146 - 1);
  __chkstk_darwin(v146);
  uint64_t v145 = (uint64_t)v127 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t)v127 - v2;
  __chkstk_darwin(v4);
  uint64_t v134 = (uint64_t)v127 - v5;
  __chkstk_darwin(v6);
  uint64_t v131 = (uint64_t)v127 - v7;
  __chkstk_darwin(v8);
  int64_t v10 = (int64_t)v127 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (double *)((char *)v127 - v12);
  __chkstk_darwin(v14);
  double v16 = (double *)((char *)v127 - v15);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v127 - v18;
  id v154 = 0;
  unint64_t v155 = 0xE000000000000000;
  if (qword_1007F6E08 != -1) {
    goto LABEL_114;
  }
  while (1)
  {
    uint64_t v20 = type metadata accessor for Logger();
    sub_100026A54(v20, (uint64_t)qword_100808960);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    int64_t v138 = v10;
    if (v23)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134217984;
      uint64_t v153 = 0x3FE0000000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionAssetMapsClusterer] using POI penalty: %f", v24, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v25 = (uint64_t *)((char *)v139 + OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_results);
    swift_beginAccess();
    uint64_t v26 = *v25;
    p_vtable = (void **)(&OBJC_METACLASS____TtC7Journal17SuggestedDateCell + 24);
    if (!*(void *)(*v25 + 16))
    {
      id v147 = _swiftEmptyArrayStorage;
      double v16 = v139;
      goto LABEL_97;
    }
    id v147 = v25;
    uint64_t v28 = v26 + 56;
    uint64_t v29 = 1 << *(unsigned char *)(v26 + 32);
    uint64_t v30 = -1;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    unint64_t v31 = v30 & *(void *)(v26 + 56);
    int64_t v10 = (unint64_t)(v29 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v32 = 0;
    for (double i = 0.0; ; double i = i + v37 * v38)
    {
      if (v31)
      {
        unint64_t v34 = __clz(__rbit64(v31));
        v31 &= v31 - 1;
        unint64_t v35 = v34 | (v32 << 6);
        goto LABEL_9;
      }
      int64_t v39 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      if (v39 >= v10) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v39);
      ++v32;
      if (!v40)
      {
        int64_t v32 = v39 + 1;
        if (v39 + 1 >= v10) {
          goto LABEL_28;
        }
        unint64_t v40 = *(void *)(v28 + 8 * v32);
        if (!v40)
        {
          int64_t v32 = v39 + 2;
          if (v39 + 2 >= v10) {
            goto LABEL_28;
          }
          unint64_t v40 = *(void *)(v28 + 8 * v32);
          if (!v40) {
            break;
          }
        }
      }
LABEL_27:
      unint64_t v31 = (v40 - 1) & v40;
      unint64_t v35 = __clz(__rbit64(v40)) + (v32 << 6);
LABEL_9:
      sub_10031326C(*(void *)(v26 + 48) + *(void *)(v148 + 72) * v35, (uint64_t)v19);
      sub_1003306B0((uint64_t)v19, (uint64_t)v16);
      uint64_t v36 = *(void *)((char *)v16 + v146[9]);
      double v37 = v16[2];
      sub_1003132D0((uint64_t)v16);
      if (v36) {
        double v38 = 0.5;
      }
      else {
        double v38 = 1.5;
      }
    }
    int64_t v41 = v39 + 3;
    if (v41 >= v10) {
      break;
    }
    unint64_t v40 = *(void *)(v28 + 8 * v41);
    if (v40)
    {
      int64_t v32 = v41;
      goto LABEL_27;
    }
    while (1)
    {
      int64_t v32 = v41 + 1;
      if (__OFADD__(v41, 1)) {
        break;
      }
      if (v32 >= v10) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v32);
      ++v41;
      if (v40) {
        goto LABEL_27;
      }
    }
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    swift_once();
  }
LABEL_28:
  swift_release();
  uint64_t v42 = *v147;
  uint64_t v43 = *(void *)(*v147 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v44 = sub_1000CD218(v42);
  swift_bridgeObjectRelease();
  id v151 = v44;
  sub_10032EFBC(&v151);
  swift_bridgeObjectRelease();
  unint64_t v45 = v151;
  uint64_t v46 = v151[2];
  int64_t v10 = v138;
  if (v46)
  {
    unint64_t v47 = 0;
    uint64_t v141 = OBJC_IVAR____TtCC7Journal10MapManager30MOSuggestionAssetMapsClusterer_inputClusters;
    unint64_t v140 = (*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
    uint64_t v48 = (char *)v151 + v140;
    id v147 = _swiftEmptyArrayStorage;
    uint64_t v129 = MKPointOfInterestCategoryReligiousSite;
    uint64_t v19 = (char *)&type metadata for String;
    double v49 = i / (double)v43;
    double v16 = v139;
    unint64_t v136 = v13;
    uint64_t v135 = v3;
    uint64_t v132 = v151;
    uint64_t v137 = v46;
    id v142 = (char *)v151 + v140;
    while (1)
    {
      if (v47 >= v45[2])
      {
        __break(1u);
        goto LABEL_109;
      }
      uint64_t v50 = *(void *)(v148 + 72);
      sub_10031326C((uint64_t)&v48[v50 * v47], (uint64_t)v13);
      double v51 = v13[2];
      sub_10031326C((uint64_t)v13, v10);
      if (v51 >= v49)
      {
        sub_1003132D0(v10);
        goto LABEL_31;
      }
      uint64_t v143 = v50;
      id v151 = v154;
      unint64_t v152 = v155;
      unint64_t v52 = *(void *)(v10 + 40);
      uint64_t v149 = *(void *)(v10 + 32);
      unint64_t v150 = v52;
      sub_100014344();
      char v53 = StringProtocol.contains<A>(_:)();
      sub_1003132D0(v10);
      if (v53)
      {
        uint64_t v48 = v142;
        goto LABEL_31;
      }
      unint64_t v54 = *((void *)v13 + 5);
      id v151 = (void *)*((void *)v13 + 4);
      unint64_t v152 = v54;
      uint64_t v149 = 95;
      unint64_t v150 = 0xE100000000000000;
      uint64_t v55 = StringProtocol.components<A>(separatedBy:)();
      if (!*(void *)(v55 + 16)) {
        goto LABEL_112;
      }
      double v56 = (char *)v55;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v57 = *((void *)v56 + 2);
        if (!v57) {
          goto LABEL_113;
        }
      }
      else
      {
        double v56 = sub_1000EFF88((uint64_t)v56);
        uint64_t v57 = *((void *)v56 + 2);
        if (!v57) {
          goto LABEL_113;
        }
      }
      *((void *)v56 + 2) = v57 - 1;
      swift_bridgeObjectRelease();
      uint64_t v58 = *((void *)v56 + 2);
      if (!v58)
      {
        uint64_t v62 = v16;
        swift_bridgeObjectRelease();
        id v63 = 0;
        uint64_t v46 = v137;
        goto LABEL_90;
      }
      uint64_t v3 = 0;
      id v144 = 0;
      int64_t v10 = 0;
      double v59 = (unint64_t *)(v56 + 40);
      double v60 = 0.0;
      double v61 = 0.0;
      do
      {
        uint64_t v65 = *(v59 - 1);
        unint64_t v66 = *v59;
        if (v65) {
          BOOL v67 = 0;
        }
        else {
          BOOL v67 = v66 == 0xE000000000000000;
        }
        if (!v67 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_1004B0E08(v65, v66);
          if ((v69 & 1) == 0 && (v68 & 0x8000000000000000) == 0)
          {
            uint64_t v70 = *(void *)((char *)v16 + v141);
            if (v68 < *(void *)(v70 + 16))
            {
              double v71 = (double *)(v70 + v140 + v68 * v143);
              double v73 = *v71;
              double v72 = v71[1];
              uint64_t v19 = *(char **)((char *)v71 + v146[9]);
              if (v19) {
                BOOL v74 = v3 < 1;
              }
              else {
                BOOL v74 = 0;
              }
              if (!v74)
              {
LABEL_57:

                if (__OFADD__(v10++, 1)) {
                  goto LABEL_110;
                }
                if (v60 == 0.0) {
                  double v60 = v72;
                }
                else {
                  double v60 = (v60 + v72) * 0.5;
                }
                if (v61 == 0.0) {
                  double v61 = v73;
                }
                else {
                  double v61 = (v61 + v73) * 0.5;
                }
                unint64_t v76 = v19;
                goto LABEL_43;
              }
              uint64_t v133 = v3;
              uint64_t v77 = v19;
              id v78 = [v77 pointOfInterestCategory];
              if (v78)
              {
                uint64_t v79 = v78;
                uint64_t v130 = v77;
                uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v82 = v81;
                if (v80 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v82 == v83)
                {

                  swift_bridgeObjectRelease_n();
                  uint64_t v77 = v130;
                  double v16 = v139;
                }
                else
                {
                  LODWORD(v128) = _stringCompareWithSmolCheck(_:_:expecting:)();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v77 = v130;
                  double v16 = v139;
                  if ((v128 & 1) == 0) {
                    goto LABEL_71;
                  }
                }
              }
              else
              {
LABEL_71:
                id v85 = [v77 _styleAttributes];

                if (v85)
                {
                  uint64_t v86 = *((void *)v13 + 2);
                  uint64_t v128 = *((void *)v13 + 4);
                  *(double *)uint64_t v127 = v13[5];
                  uint64_t v87 = (char *)v13 + v146[11];
                  unint64_t v89 = *(char **)v87;
                  uint64_t v88 = *((void *)v87 + 1);
                  uint64_t v130 = v89;
                  uint64_t v133 = v88;
                  uint64_t v90 = v131;
                  v127[1] = v131 + v146[8];
                  unint64_t v76 = v77;
                  uint64_t v91 = v127[0];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  UUID.init()();
                  *(double *)uint64_t v90 = v73;
                  *(double *)(v90 + 8) = v72;
                  *(void *)(v90 + 16) = v86;
                  *(void *)(v90 + 24) = 1;
                  *(void *)(v90 + 32) = v128;
                  *(void *)(v90 + 40) = v91;
                  uint64_t v92 = v146;
                  *(void *)(v90 + v146[9]) = v19;
                  *(void *)(v90 + v92[10]) = 0;
                  unint64_t v93 = (char **)(v90 + v92[11]);
                  uint64_t v94 = v133;
                  *unint64_t v93 = v130;
                  v93[1] = (char *)v94;
                  *(unsigned char *)(v90 + v92[12]) = 0;
                  *(void *)(v90 + v92[13]) = 0;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    id v147 = (uint64_t *)sub_1002A62F4(0, v147[2] + 1, 1, (unint64_t)v147);
                  }
                  unint64_t v96 = v147[2];
                  unint64_t v95 = v147[3];
                  if (v96 >= v95 >> 1) {
                    id v147 = (uint64_t *)sub_1002A62F4(v95 > 1, v96 + 1, 1, (unint64_t)v147);
                  }
                  unint64_t v97 = v147;
                  v147[2] = v96 + 1;
                  sub_1003306B0(v131, (uint64_t)v97 + v140 + v96 * v143);

                  if (v61 != 0.0) {
                    double v61 = v61 + (v61 - v73) / 7.0;
                  }
                  double v16 = v139;
                  if (v60 != 0.0) {
                    double v60 = v60 + (v60 - v72) / 7.0;
                  }
                  uint64_t v3 = 1;
LABEL_43:
                  unint64_t v64 = v76;
                  id v144 = v19;
                  goto LABEL_44;
                }
              }

              uint64_t v3 = v133;
              goto LABEL_57;
            }
          }
        }
LABEL_44:
        v59 += 2;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      if (v10 < 1)
      {
        uint64_t v62 = v16;
        int64_t v10 = v138;
        unint64_t v45 = v132;
        uint64_t v46 = v137;
      }
      else
      {
        uint64_t v98 = *((void *)v13 + 2);
        uint64_t v99 = *((void *)v13 + 5);
        uint64_t v133 = *((void *)v13 + 4);
        uint64_t v100 = v146;
        uint64_t v101 = (char *)v13 + v146[11];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        uint64_t v104 = v134;
        id v105 = v144;
        id v106 = v144;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        UUID.init()();
        *(double *)uint64_t v104 = v61;
        *(double *)(v104 + 8) = v60;
        *(void *)(v104 + 16) = v98;
        uint64_t v107 = v133;
        *(void *)(v104 + 24) = v10;
        *(void *)(v104 + 32) = v107;
        *(void *)(v104 + 40) = v99;
        *(void *)(v104 + v100[9]) = v105;
        *(void *)(v104 + v100[10]) = 0;
        unint64_t v108 = (void *)(v104 + v100[11]);
        void *v108 = v103;
        v108[1] = v102;
        *(unsigned char *)(v104 + v100[12]) = 0;
        *(void *)(v104 + v100[13]) = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v147 = (uint64_t *)sub_1002A62F4(0, v147[2] + 1, 1, (unint64_t)v147);
        }
        unint64_t v110 = v147[2];
        unint64_t v109 = v147[3];
        uint64_t v62 = v139;
        int64_t v10 = v138;
        unint64_t v45 = v132;
        uint64_t v46 = v137;
        if (v110 >= v109 >> 1) {
          id v147 = (uint64_t *)sub_1002A62F4(v109 > 1, v110 + 1, 1, (unint64_t)v147);
        }
        unint64_t v111 = v147;
        v147[2] = v110 + 1;
        sub_1003306B0(v134, (uint64_t)v111 + v140 + v110 * v143);
      }
      id v63 = v144;
LABEL_90:
      uint64_t v13 = v136;
      uint64_t v112 = *((void *)v136 + 4);
      uint64_t v113 = (void *)*((void *)v136 + 5);
      swift_bridgeObjectRetain();
      v114._uint64_t countAndFlagsBits = v112;
      v114._object = v113;
      String.append(_:)(v114);
      swift_bridgeObjectRelease();

      uint64_t v48 = v142;
      uint64_t v19 = (char *)&type metadata for String;
      double v16 = v62;
      uint64_t v3 = v135;
LABEL_31:
      ++v47;
      sub_1003132D0((uint64_t)v13);
      if (v47 == v46)
      {
        swift_release();
        goto LABEL_96;
      }
    }
  }
  swift_release();
  id v147 = _swiftEmptyArrayStorage;
  double v16 = v139;
LABEL_96:
  p_vtable = &OBJC_METACLASS____TtC7Journal17SuggestedDateCell.vtable;
LABEL_97:
  uint64_t v115 = *(void *)((char *)p_vtable[305] + (void)v16);
  uint64_t v116 = *(void *)(v115 + 16);
  if (v116)
  {
    unint64_t v117 = (*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
    uint64_t v118 = v115 + v117;
    uint64_t v119 = *(void *)(v148 + 72);
    uint64_t v148 = v115;
    swift_bridgeObjectRetain();
    do
    {
      sub_10031326C(v118, v3);
      id v151 = v154;
      unint64_t v152 = v155;
      uint64_t v123 = *(void *)(v3 + 32);
      uint64_t v122 = *(void **)(v3 + 40);
      uint64_t v149 = v123;
      unint64_t v150 = (unint64_t)v122;
      sub_100014344();
      if ((StringProtocol.contains<A>(_:)() & 1) == 0)
      {
        sub_10031326C(v3, v145);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v147 = (uint64_t *)sub_1002A62F4(0, v147[2] + 1, 1, (unint64_t)v147);
        }
        unint64_t v125 = v147[2];
        unint64_t v124 = v147[3];
        if (v125 >= v124 >> 1) {
          id v147 = (uint64_t *)sub_1002A62F4(v124 > 1, v125 + 1, 1, (unint64_t)v147);
        }
        uint64_t v120 = v147;
        v147[2] = v125 + 1;
        sub_1003306B0(v145, (uint64_t)v120 + v117 + v125 * v119);
        swift_bridgeObjectRetain();
        v121._uint64_t countAndFlagsBits = v123;
        v121._object = v122;
        String.append(_:)(v121);
        swift_bridgeObjectRelease();
      }
      sub_1003132D0(v3);
      v118 += v119;
      --v116;
    }
    while (v116);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v147;
}

id sub_10032E604()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s30MOSuggestionAssetMapsClustererCMa();
  [super dealloc];
}

uint64_t _s30MOSuggestionAssetMapsClustererCMa()
{
  return self;
}

void *sub_10032E6C8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a3[8];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    double v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v16;
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v4 + v18) = *((unsigned char *)a2 + v18);
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    id v22 = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10032E810(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10032E8AC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  id v21 = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10032E9A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  uint64_t v12 = *(void **)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = v12;
  id v13 = v12;

  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_10032EAD0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_10032EB98(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *id v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t sub_10032EC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032ECA4);
}

uint64_t sub_10032ECA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10032ED54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032ED68);
}

uint64_t sub_10032ED68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s30MOSuggestionAssetMapsClustererC7ClusterVMa()
{
  uint64_t result = qword_100808A20;
  if (!qword_100808A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10032EE5C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10032EF2C()
{
  return sub_10032EF74(&qword_100808A78, (void (*)(uint64_t))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_10032EF74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10032EFBC(void **a1)
{
  uint64_t v2 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000F3FBC(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10032F064(v5);
  *a1 = v3;
}

void sub_10032F064(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  __chkstk_darwin(v4);
  uint64_t v126 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v135 = (uint64_t)&v120 - v7;
  __chkstk_darwin(v8);
  uint64_t v133 = (uint64_t)&v120 - v9;
  __chkstk_darwin(v10);
  uint64_t v132 = (uint64_t)&v120 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      sub_10032FA2C(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  Swift::Int v123 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v128 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      uint64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_107:
      uint64_t v122 = v18;
      if (v21 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v114) {
            goto LABEL_149;
          }
          uint64_t v116 = *(void *)&v20[16 * v115 + 32];
          uint64_t v117 = *(void *)&v20[16 * v21 + 24];
          sub_10032FC80(v114 + *(void *)(v129 + 72) * v116, v114 + *(void *)(v129 + 72) * *(void *)&v20[16 * v21 + 16], v114 + *(void *)(v129 + 72) * v117, v128);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_1000F1E40((uint64_t)v20);
          }
          if (v115 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          uint64_t v118 = &v20[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v20 + 2);
          if (v21 > v119) {
            goto LABEL_140;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v119 - v21));
          *((void *)v20 + 2) = v119 - 1;
          unint64_t v21 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v122[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v122 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v129 + 80);
    uint64_t v122 = (void *)v16;
    unint64_t v128 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  uint64_t v134 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      Swift::Int v32 = v19 + 1;
    }
    else
    {
      uint64_t v24 = *a1;
      uint64_t v25 = v19;
      uint64_t v127 = v19;
      uint64_t v26 = *(void *)(v129 + 72);
      uint64_t v27 = v132;
      sub_10031326C(v24 + v26 * v23, v132);
      uint64_t v28 = v24 + v26 * v25;
      uint64_t v29 = v133;
      sub_10031326C(v28, v133);
      double v30 = *(double *)(v27 + 16);
      double v31 = *(double *)(v29 + 16);
      sub_1003132D0(v29);
      sub_1003132D0(v27);
      Swift::Int v32 = v127 + 2;
      uint64_t v124 = v24;
      uint64_t v136 = v26;
      if (v127 + 2 >= v12)
      {
        uint64_t v40 = v26;
        uint64_t v22 = v127;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v125 = v2;
        Swift::Int v131 = v26 * v23;
        uint64_t v33 = v24;
        Swift::Int v34 = v127 + 2;
        uint64_t v35 = v26 * (v127 + 2);
        while (1)
        {
          Swift::Int v36 = v12;
          uint64_t v37 = v132;
          sub_10031326C(v33 + v35, v132);
          uint64_t v38 = v133;
          sub_10031326C(v33 + v131, v133);
          BOOL v39 = *(double *)(v38 + 16) >= *(double *)(v37 + 16);
          sub_1003132D0(v38);
          sub_1003132D0(v37);
          if (v31 < v30 == v39) {
            break;
          }
          uint64_t v40 = v136;
          v33 += v136;
          ++v34;
          Swift::Int v12 = v36;
          if (v36 == v34)
          {
            Swift::Int v32 = v36;
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v22 = v127;
            if (v31 < v30) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v134;
        Swift::Int v32 = v34;
        uint64_t v2 = v125;
        uint64_t v22 = v127;
        Swift::Int v12 = v36;
        uint64_t v40 = v136;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v32 < v22) {
        goto LABEL_143;
      }
      if (v22 < v32)
      {
        Swift::Int v131 = v12;
        Swift::String v121 = v20;
        uint64_t v41 = 0;
        uint64_t v42 = v40 * (v32 - 1);
        Swift::Int v43 = v32 * v40;
        uint64_t v44 = v22 * v40;
        do
        {
          if (v22 != v32 + v41 - 1)
          {
            uint64_t v125 = v2;
            uint64_t v45 = v124;
            if (!v124) {
              goto LABEL_148;
            }
            unint64_t v46 = v124 + v44;
            sub_1003306B0(v124 + v44, v126);
            if (v44 < v42 || v46 >= v45 + v43)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v44 != v42)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_1003306B0(v126, v45 + v42);
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v40 = v136;
          }
          ++v22;
          --v41;
          v42 -= v40;
          v43 -= v40;
          v44 += v40;
        }
        while (v22 < v32 + v41);
        uint64_t v20 = v121;
        uint64_t v22 = v127;
        Swift::Int v12 = v131;
      }
    }
LABEL_40:
    if (v32 < v12)
    {
      if (__OFSUB__(v32, v22)) {
        goto LABEL_141;
      }
      if (v32 - v22 < v123) {
        break;
      }
    }
LABEL_58:
    if (v32 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v136 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1000F1750(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v63 = *((void *)v20 + 2);
    unint64_t v62 = *((void *)v20 + 3);
    unint64_t v21 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v20 = sub_1000F1750((char *)(v62 > 1), v63 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    unint64_t v64 = v20 + 32;
    uint64_t v65 = &v20[16 * v63 + 32];
    uint64_t v66 = v136;
    *(void *)uint64_t v65 = v22;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v21 - 1;
        if (v21 >= 4)
        {
          double v72 = &v64[16 * v21];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_125;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_126;
          }
          unint64_t v79 = v21 - 2;
          uint64_t v80 = &v64[16 * v21 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_128;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_131;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_135;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v96 = *((void *)v20 + 4);
            uint64_t v97 = *((void *)v20 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_89;
          }
          uint64_t v69 = *((void *)v20 + 4);
          uint64_t v68 = *((void *)v20 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_127;
        }
        unint64_t v79 = v21 - 2;
        id v85 = &v64[16 * v21 - 32];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_130;
        }
        uint64_t v91 = &v64[16 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_133;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_134;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_95:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v90) {
          goto LABEL_129;
        }
        uint64_t v98 = &v64[16 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_132;
        }
        if (v101 < v89) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        unint64_t v108 = v20;
        unint64_t v109 = &v64[16 * v106];
        uint64_t v110 = *(void *)v109;
        unint64_t v111 = &v64[16 * v67];
        uint64_t v112 = *((void *)v111 + 1);
        sub_10032FC80(v107 + *(void *)(v129 + 72) * *(void *)v109, v107 + *(void *)(v129 + 72) * *(void *)v111, v107 + *(void *)(v129 + 72) * v112, v128);
        if (v2) {
          goto LABEL_118;
        }
        if (v112 < v110) {
          goto LABEL_122;
        }
        if (v67 > *((void *)v108 + 2)) {
          goto LABEL_123;
        }
        *(void *)unint64_t v109 = v110;
        *(void *)&v64[16 * v106 + 8] = v112;
        unint64_t v113 = *((void *)v108 + 2);
        if (v67 >= v113) {
          goto LABEL_124;
        }
        uint64_t v20 = v108;
        unint64_t v21 = v113 - 1;
        memmove(&v64[16 * v67], v111 + 16, 16 * (v113 - 1 - v67));
        *((void *)v108 + 2) = v113 - 1;
        a1 = v134;
        if (v113 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v136;
    if (v136 >= v12)
    {
      uint64_t v18 = v122;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v123)) {
    goto LABEL_144;
  }
  if (v22 + v123 >= v12) {
    Swift::Int v47 = v12;
  }
  else {
    Swift::Int v47 = v22 + v123;
  }
  if (v47 >= v22)
  {
    if (v32 != v47)
    {
      uint64_t v127 = v22;
      Swift::String v121 = v20;
      uint64_t v124 = v47;
      uint64_t v125 = v2;
      Swift::Int v48 = *(void *)(v129 + 72);
      uint64_t v136 = v48 * (v32 - 1);
      Swift::Int v131 = v48;
      Swift::Int v49 = v32 * v48;
      do
      {
        uint64_t v50 = 0;
        uint64_t v51 = v127;
        while (1)
        {
          Swift::Int v52 = v32;
          uint64_t v53 = *a1;
          uint64_t v54 = v132;
          sub_10031326C(v49 + v50 + *a1, v132);
          uint64_t v55 = v136 + v50 + v53;
          uint64_t v56 = v133;
          sub_10031326C(v55, v133);
          double v57 = *(double *)(v54 + 16);
          double v58 = *(double *)(v56 + 16);
          sub_1003132D0(v56);
          sub_1003132D0(v54);
          if (v58 >= v57) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v60 = v59 + v136 + v50;
          sub_1003306B0(v59 + v49 + v50, v135);
          swift_arrayInitWithTakeFrontToBack();
          sub_1003306B0(v135, v60);
          v50 -= v131;
          ++v51;
          Swift::Int v32 = v52;
          a1 = v134;
          if (v52 == v51) {
            goto LABEL_51;
          }
        }
        Swift::Int v32 = v52;
LABEL_51:
        ++v32;
        v136 += v131;
        v49 += v131;
      }
      while (v32 != v124);
      Swift::Int v32 = v124;
      uint64_t v2 = v125;
      uint64_t v20 = v121;
      uint64_t v22 = v127;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10032FA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (double *)((char *)&v23 - v9);
  __chkstk_darwin(v11);
  uint64_t v14 = (double *)((char *)&v23 - v13);
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_10031326C(v30 + v16 + *a4, (uint64_t)v14);
      sub_10031326C(v31 + v16 + v18, (uint64_t)v10);
      double v19 = v14[2];
      double v20 = v10[2];
      sub_1003132D0((uint64_t)v10);
      sub_1003132D0((uint64_t)v14);
      if (v20 >= v19)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v16;
      sub_1003306B0(v21 + v30 + v16, v29);
      swift_arrayInitWithTakeFrontToBack();
      sub_1003306B0(v29, v22);
      v16 -= v27;
      if (v28 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10032FC80(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  __chkstk_darwin(v40);
  uint64_t v9 = (double *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v12 = (double *)((char *)&v39 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v14;
        do
        {
          unint64_t v32 = a3 + v31;
          sub_10031326C(v29 + v31, (uint64_t)v12);
          unint64_t v33 = a2 + v31;
          sub_10031326C(a2 + v31, (uint64_t)v9);
          double v34 = v12[2];
          double v35 = v9[2];
          sub_1003132D0((uint64_t)v9);
          sub_1003132D0((uint64_t)v12);
          if (v35 >= v34)
          {
            unint64_t v36 = v41;
            v41 += v31;
            if (a3 < v36 || v32 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v36)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v31;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v33;
          a3 += v31;
        }
        while (v33 > a1);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_10031326C(a2, (uint64_t)v12);
        sub_10031326C(a4, (uint64_t)v9);
        double v22 = v12[2];
        double v23 = v9[2];
        sub_1003132D0((uint64_t)v9);
        sub_1003132D0((uint64_t)v12);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_1000F1AAC(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double sub_1003300DC(uint64_t a1, char a2, char a3, char a4, char a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v10 = (long long *)(a1 + 32);
    double v11 = *(double *)(a1 + 32);
    uint64_t v12 = *(void **)(a1 + 48);
    if (v5 == 1)
    {
      double v13 = *(double *)(a1 + 40);
      double v14 = *(double *)(a1 + 112);
      if ((*(unsigned char *)(a1 + 64) & 1) != 0 || *(uint64_t *)(a1 + 56) < 2)
      {
        if (v14 <= 0.0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v42 = v12;
          swift_bridgeObjectRetain();
          double v16 = 0.04;
          double v17 = 0.04;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
        else
        {
          BOOL v40 = v14 < 150.0;
          double v41 = v14 / 111000.0;
          if (v40)
          {
            double v16 = v41 + v41 + 0.003;
          }
          else
          {
            double v43 = v41 * 3.0 + 0.003;
            if (v43 <= 0.1) {
              double v16 = v43;
            }
            else {
              double v16 = 0.1;
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v44 = v12;
          swift_bridgeObjectRetain();
          double v17 = v16;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v15 = v12;
        swift_bridgeObjectRetain();
        double v16 = 0.01;
        double v17 = 0.01;
        if ((a5 & 1) == 0)
        {
LABEL_6:
          double v18 = 1.1;
LABEL_29:
          double v45 = v17 * v18;
          double v46 = v16 * v18;
          if (a2)
          {
            double v45 = v45 * 1.4;
            double v46 = v46 * 0.9;
            double v11 = v11 + v45 / -12.0;
          }
          if (a4) {
            double v45 = v45 * 1.3;
          }
          if (a3) {
            double v46 = v46 * 1.3;
          }
          if (!sub_1001EA5E4(v11, v13, fmin(v45, 180.0), fmin(v46, 180.0)))
          {
            if (qword_1007F6E08 != -1) {
              swift_once();
            }
            uint64_t v47 = type metadata accessor for Logger();
            sub_100026A54(v47, (uint64_t)qword_100808960);
            Swift::Int v48 = Logger.logObject.getter();
            os_log_type_t v49 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 134218752;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v50 + 12) = 2048;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v50 + 22) = 2048;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v50 + 32) = 2048;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "[MapSnapshot] makeRegion failed with invalid region: centerLatitude = %f, centerLongitude = %f, targetLatitudeDelta = %f, targetLongitudeDelta = %f", (uint8_t *)v50, 0x2Au);
              swift_slowDealloc();
            }

            v56.origin.CGFloat x = MKMapRectWorld.origin.x;
            v56.origin.CGFloat y = MKMapRectWorld.origin.y;
            v56.size.CGFloat width = MKMapRectWorld.size.width;
            v56.size.CGFloat height = MKMapRectWorld.size.height;
            *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v56);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          return v11;
        }
      }
    }
    else
    {
      uint64_t v53 = *(void **)(a1 + 48);
      id v23 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100095DF8(0, v5, 0);
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      int64_t v25 = v5;
      do
      {
        long long v26 = *v10;
        unint64_t v27 = _swiftEmptyArrayStorage[3];
        if (v24 >= v27 >> 1)
        {
          long long v52 = *v10;
          sub_100095DF8(v27 > 1, v24 + 1, 1);
          long long v26 = v52;
        }
        _swiftEmptyArrayStorage[2] = v24 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v24 + 4] = v26;
        uint64_t v10 = (long long *)((char *)v10 + 104);
        ++v24;
        --v25;
      }
      while (v25);
      id v28 = [self polygonWithCoordinates:&_swiftEmptyArrayStorage[4] count:v5];
      swift_release();
      [v28 boundingMapRect];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;

      v55.origin.CGFloat x = v30;
      v55.origin.CGFloat y = v32;
      v55.size.CGFloat width = v34;
      v55.size.CGFloat height = v36;
      *(MKCoordinateRegion *)(&v17 - 2) = MKCoordinateRegionForMapRect(v55);
      double v11 = v37;
      double v13 = v38;
      double v16 = v39;
      uint64_t v12 = v53;
      if ((a5 & 1) == 0) {
        goto LABEL_6;
      }
    }
    double v18 = 1.4;
    goto LABEL_29;
  }
  if (qword_1007F6E08 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100026A54(v19, (uint64_t)qword_100808960);
  unint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    double v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[MapSnapshot] makeRegion failed with 0 locations", v22, 2u);
    swift_slowDealloc();
  }

  v54.origin.CGFloat x = MKMapRectNull.origin.x;
  v54.origin.CGFloat y = MKMapRectNull.origin.y;
  v54.size.CGFloat width = MKMapRectNull.size.width;
  v54.size.CGFloat height = MKMapRectNull.size.height;
  *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v54);
  return v11;
}

uint64_t sub_1003306B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100330714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100330778()
{
  sub_100010218(&qword_100808A98);
  type metadata accessor for _AssistantIntent();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1006DC540;
  sub_10034D5F4(v2);
  sub_1001F4FE0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  sub_10034D5F4(v2);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  sub_10034D5F4(v2);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  sub_100089FB4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  v2[0] = sub_100511840();
  sub_1003349C4();
  uint64_t result = _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  qword_10083D3A8 = v0;
  return result;
}

uint64_t sub_1003309F4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v91 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_100808B10);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100010218(&qword_100808B08);
  uint64_t v84 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F4FE0();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  uint64_t v86 = v8;
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v81 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v7, v4);
  uint64_t v9 = v5 + 8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._uint64_t countAndFlagsBits = 0x2061206574697257;
  v10._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  unsigned int v88 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v11 = v91;
  uint64_t v89 = *(void (**)(char *))(v91 + 104);
  uint64_t v87 = v91 + 104;
  uint64_t v83 = v0;
  v89(v2);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  char v90 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v91 = v11 + 8;
  v90(v2, v0);
  v12._uint64_t countAndFlagsBits = 0x7972746E6520;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v80 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v84;
  double v14 = v86;
  v86(v7, v84);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x6120657461657243;
  v15._object = (void *)0xEF206B6E616C6220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v68 = v2;
  uint64_t v16 = v83;
  ((void (*)(char *, void, uint64_t))v89)(v2, v88, v83);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v2, v16);
  v17._uint64_t countAndFlagsBits = 0x7972746E6520;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v79 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v85 = v9;
  v14(v7, v13);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v78 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v7, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._uint64_t countAndFlagsBits = 0x2061207472617453;
  v18._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  uint64_t v19 = v68;
  unint64_t v20 = v89;
  ((void (*)(char *, void, uint64_t))v89)(v68, v88, v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v19, v16);
  v21._uint64_t countAndFlagsBits = 0x7972746E6520;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v7, v13);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  double v22 = v14;
  v14(v7, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._uint64_t countAndFlagsBits = 0x2061206E69676542;
  v23._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  uint64_t v24 = v88;
  uint64_t v25 = v83;
  ((void (*)(char *, void, uint64_t))v20)(v19, v88, v83);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v19, v25);
  v26._uint64_t countAndFlagsBits = 0x7972746E6520;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v27 = v84;
  v22(v7, v84);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._uint64_t countAndFlagsBits = 0x6E69206574697257;
  v28._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v29 = v24;
  uint64_t v30 = v83;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v19, v29, v83);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v31 = v30;
  uint64_t v32 = v30;
  double v33 = v90;
  v90(v19, v31);
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v86(v7, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._uint64_t countAndFlagsBits = 0x6E69206574697257;
  v35._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  ((void (*)(char *, void, uint64_t))v89)(v19, v88, v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v33(v19, v32);
  v36._uint64_t countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v37 = v84;
  v86(v7, v84);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v38._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v38._object = (void *)0x80000001006900E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v39 = v88;
  BOOL v40 = (void (*)(char *, uint64_t, uint64_t))v89;
  ((void (*)(char *, void, uint64_t))v89)(v19, v88, v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v19, v32);
  v41._uint64_t countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v42 = v37;
  double v43 = v86;
  v86(v7, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v44._uint64_t countAndFlagsBits = 0xD000000000000018;
  uint64_t v69 = 0xD000000000000018;
  v44._object = (void *)0x8000000100690100;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  uint64_t v45 = v83;
  v40(v19, v39, v83);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v19, v45);
  v46._uint64_t countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v43(v7, v84);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v47._uint64_t countAndFlagsBits = 0xD000000000000015;
  v47._object = (void *)0x8000000100690120;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  uint64_t v48 = v83;
  ((void (*)(char *, void, uint64_t))v89)(v19, v88, v83);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v19, v48);
  v49._uint64_t countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v50 = v84;
  v86(v7, v84);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v51._object = (void *)0x8000000100690140;
  v51._uint64_t countAndFlagsBits = v69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  ((void (*)(char *, void, uint64_t))v89)(v19, v88, v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v90(v19, v48);
  v52._uint64_t countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v54 = v50;
  uint64_t v55 = v50;
  MKMapRect v56 = v86;
  v86(v7, v55);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v56(v7, v54);
  sub_100010218(&qword_100808B18);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1006DEE60;
  uint64_t v59 = v81;
  *(void *)(v58 + 32) = v82;
  *(void *)(v58 + 40) = v59;
  uint64_t v60 = v79;
  *(void *)(v58 + 48) = v80;
  *(void *)(v58 + 56) = v60;
  uint64_t v61 = v77;
  *(void *)(v58 + 64) = v78;
  *(void *)(v58 + 72) = v61;
  uint64_t v62 = v75;
  *(void *)(v58 + 80) = v76;
  *(void *)(v58 + 88) = v62;
  uint64_t v63 = v73;
  *(void *)(v58 + 96) = v74;
  *(void *)(v58 + 104) = v63;
  uint64_t v64 = v71;
  *(void *)(v58 + 112) = v72;
  *(void *)(v58 + 120) = v64;
  *(void *)(v58 + 128) = v70;
  *(void *)(v58 + 136) = v53;
  *(void *)(v58 + 144) = v57;
  uint64_t v65 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_1003316C0(uint64_t a1)
{
  uint64_t v87 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v91 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v79 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100010218(&qword_100808B08);
  uint64_t v92 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100808B10);
  __chkstk_darwin(v5);
  unint64_t v6 = sub_1001F4FE0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0xD000000000000020;
  v7._object = (void *)0x80000001006992F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v84 = sub_100334BA8(&qword_100808AE0, &qword_100803920, (void (*)(void))sub_100334AB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v8._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v86 = sub_100334FB8(&qword_100808AF0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._object = (void *)0x8000000100699320;
  v9._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))sub_100334C9C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  char v90 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v89 = v6;
  uint64_t v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v92 + 8);
  v92 += 8;
  uint64_t v80 = v11;
  uint64_t v12 = v85;
  v11(v4, v85);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v13._object = (void *)0x8000000100699340;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v14._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._object = (void *)0x8000000100699360;
  v15._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  Swift::String v17 = v90;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v12;
  uint64_t v19 = v80;
  v80(v17, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v20._object = (void *)0x8000000100699380;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v21._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  uint64_t v88 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._uint64_t countAndFlagsBits = 0x687420646E61202CLL;
  v22._object = (void *)0xEF20646461206E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  sub_100334DB8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  uint64_t v24 = v90;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v85;
  v19(v24, v85);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._uint64_t countAndFlagsBits = 0xD000000000000014;
  v26._object = (void *)0x80000001006993A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v27._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v29 = v90;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v29, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._uint64_t countAndFlagsBits = 0x2061207472617453;
  v30._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  unsigned int v78 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v31 = v91;
  uint64_t v32 = *(void (**)(void))(v91 + 104);
  uint64_t v82 = v91 + 104;
  uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v32;
  double v33 = v79;
  uint64_t v34 = v87;
  v32(v79);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v35 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v91 = v31 + 8;
  uint64_t v81 = v35;
  v35(v33, v34);
  v36._object = (void *)0x80000001006993C0;
  uint64_t v72 = (void *)0x80000001006993C0;
  v36._uint64_t countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v37._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v37._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v38._uint64_t countAndFlagsBits = 0x687420646E61202CLL;
  v38._object = (void *)0xEF20646461206E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  swift_getKeyPath();
  sub_100334F14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v39._uint64_t countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  BOOL v40 = v90;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v41 = v85;
  v80(v40, v85);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v42._uint64_t countAndFlagsBits = 0x6120657461657243;
  v42._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  double v43 = v79;
  uint64_t v44 = v78;
  uint64_t v45 = v87;
  v83(v79, v78, v87);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v81(v43, v45);
  v46._uint64_t countAndFlagsBits = 0x77207972746E6520;
  v46._object = (void *)0xEC00000020687469;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v47._uint64_t countAndFlagsBits = 0xD000000000000012;
  v47._object = (void *)0x80000001006993E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v48._uint64_t countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  Swift::String v49 = v90;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v50 = v41;
  Swift::String v51 = v80;
  v80(v49, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v52._uint64_t countAndFlagsBits = 0x2061206574697257;
  v52._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  uint64_t v53 = v87;
  v83(v43, v44, v87);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v81(v43, v53);
  v54._uint64_t countAndFlagsBits = 0xD000000000000016;
  v54._object = v72;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v55._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v55._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v55);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v56._uint64_t countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  uint64_t v57 = v49;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v84 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v58 = v85;
  v51(v49, v85);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v59._uint64_t countAndFlagsBits = 0x6120657461657243;
  v59._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v59);
  uint64_t v60 = v87;
  v83(v43, v78, v87);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v81(v43, v60);
  v61._uint64_t countAndFlagsBits = 0x207972746E6520;
  v61._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v62._uint64_t countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v51(v57, v58);
  sub_100010218(&qword_100808B18);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1006E36E0;
  uint64_t v65 = v76;
  *(void *)(v64 + 32) = v77;
  *(void *)(v64 + 40) = v65;
  uint64_t v66 = v74;
  *(void *)(v64 + 48) = v75;
  *(void *)(v64 + 56) = v66;
  uint64_t v67 = v71;
  *(void *)(v64 + 64) = v73;
  *(void *)(v64 + 72) = v67;
  *(void *)(v64 + 80) = v84;
  *(void *)(v64 + 88) = v63;
  uint64_t v68 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t sub_1003326C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v12 - v8;
  Swift::String v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1003327F8(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  __n128 v7 = (char *)&v9 - v6;
  sub_100045944(a1, (uint64_t)&v9 - v6);
  sub_100045944((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter();
  return sub_1000AC7D4((uint64_t)v7);
}

uint64_t sub_1003328BC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100334BA8(&qword_100808AE0, &qword_100803920, (void (*)(void))sub_100334AB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001F4FE0();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  swift_getKeyPath();
  sub_100334FB8(&qword_100808AF0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v4(v3, v0);
  swift_getKeyPath();
  sub_100334C9C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v4(v3, v0);
  swift_getKeyPath();
  sub_100334DB8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v4(v3, v0);
  swift_getKeyPath();
  sub_100334F14();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_100010218(&qword_100808AA8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006DC540;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100332C6C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100010218(&qword_100808A90);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D70D0;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100332D48()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100010218(&qword_100808A90);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D70D0;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100332E40()
{
  return sub_100332EC8();
}

uint64_t sub_100332E74()
{
  return sub_1003348B4();
}

uint64_t sub_100332E90()
{
  return sub_100332EC8();
}

uint64_t sub_100332EC8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100010218(&qword_100808A90);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D6270;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100332F4C()
{
  uint64_t v17 = sub_100010218(&qword_100808B08);
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100808B10);
  __chkstk_darwin(v7);
  sub_1001F4FE0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0x6E69206574697257;
  v8._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v9._object = (void *)0x8000000100699210;
  v9._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  sub_100334BA8(&qword_100808AE0, &qword_100803920, (void (*)(void))sub_100334AB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x65687420646E6120;
  v10._object = (void *)0xEE00207478657420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_100334FB8(&qword_100808AF0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v11._object = (void *)0x8000000100699230;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v17);
  sub_100010218(&qword_100808B18);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D6280;
  *(void *)(v13 + 32) = v12;
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100333350()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100334BA8(&qword_100808AE0, &qword_100803920, (void (*)(void))sub_100334AB8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001F4FE0();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100334FB8(&qword_100808AF0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  swift_getKeyPath();
  sub_100334BA8(&qword_100808AF8, &qword_1007F9F98, (void (*)(void))sub_100334C20);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_100010218(&qword_100808AA8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D7C30;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100333630()
{
  return sub_1003348B4();
}

uint64_t sub_100333648()
{
  return sub_1003348B4();
}

uint64_t sub_100333664()
{
  return sub_1003348B4();
}

uint64_t sub_10033367C()
{
  uint64_t v0 = sub_100010218(&qword_100808AC8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v45 = v0;
  uint64_t v46 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100808AD0);
  __chkstk_darwin(v8);
  sub_100089FB4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x2061206574697257;
  v9._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  unsigned int v40 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::String v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  uint64_t v43 = v4;
  uint64_t v44 = v10;
  ((void (*)(char *))v10)(v7);
  uint64_t v42 = v5 + 104;
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v39 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v41 = v5 + 8;
  v39(v7, v4);
  v11._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v11._object = (void *)0x8000000100699160;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v45;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v46 + 8);
  uint64_t v37 = v12;
  Swift::String v38 = v14;
  v46 += 8;
  v14(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x612064726F636552;
  v15._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v16 = v40;
  uint64_t v17 = v43;
  v44(v7, v40, v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v18 = v39;
  v39(v7, v17);
  v19._uint64_t countAndFlagsBits = 0x7972746E6520;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v38(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._uint64_t countAndFlagsBits = 0x6120657461657243;
  v20._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = v43;
  v44(v7, v16, v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v18(v7, v21);
  v22._object = (void *)0x8000000100699180;
  v22._uint64_t countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v24 = v45;
  uint64_t v25 = v38;
  v38(v3, v45);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v3, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._uint64_t countAndFlagsBits = 0x2061207472617453;
  v26._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  uint64_t v27 = v43;
  v44(v7, v40, v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v39(v7, v27);
  v28._uint64_t countAndFlagsBits = 0xD000000000000019;
  v28._object = (void *)0x80000001006991D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v3, v45);
  sub_100010218(&qword_100808AD8);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1006DC540;
  uint64_t v31 = v36;
  *(void *)(v30 + 32) = v37;
  *(void *)(v30 + 40) = v31;
  uint64_t v32 = v35;
  *(void *)(v30 + 48) = v23;
  *(void *)(v30 + 56) = v32;
  *(void *)(v30 + 64) = v29;
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_100333C7C(uint64_t a1)
{
  uint64_t v42 = a1;
  uint64_t v43 = sub_100010218(&qword_100808AB0);
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100808AB8);
  __chkstk_darwin(v7);
  sub_1003349C4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0x6620686372616553;
  v8._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v41 = sub_100334FB8(&qword_100808AA0, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._uint64_t countAndFlagsBits = 0x206E696874697720;
  v9._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  unsigned int v38 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::String v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v39 = v4 + 104;
  unsigned int v40 = v10;
  ((void (*)(char *))v10)(v6);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v44 = v4 + 8;
  v37(v6, v3);
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v36 = v2;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v46 + 8);
  v46 += 8;
  uint64_t v12 = v43;
  v45(v2, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._uint64_t countAndFlagsBits = 0x20646E6946;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._uint64_t countAndFlagsBits = 0x206E696874697720;
  v14._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v40(v6, v38, v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v15 = v3;
  uint64_t v16 = v3;
  uint64_t v17 = v37;
  v37(v6, v15);
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  Swift::String v19 = v36;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v45(v19, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._uint64_t countAndFlagsBits = 0xD000000000000018;
  v20._object = (void *)0x8000000100699120;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._uint64_t countAndFlagsBits = 0x206E696874697720;
  v21._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  uint64_t v22 = v38;
  uint64_t v23 = v40;
  v40(v6, v38, v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v17(v6, v16);
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  uint64_t v25 = v36;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v45(v25, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._uint64_t countAndFlagsBits = 0x20646E6946;
  v26._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v23(v6, v22, v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v37(v6, v16);
  v27._object = (void *)0x8000000100699140;
  v27._uint64_t countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v45(v25, v43);
  sub_100010218(&qword_100808AC0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1006D70D0;
  uint64_t v30 = v34;
  *(void *)(v29 + 32) = v35;
  *(void *)(v29 + 40) = v30;
  *(void *)(v29 + 48) = v42;
  *(void *)(v29 + 56) = v28;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_100334358(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v12 - v8;
  Swift::String v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_10033448C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100334FB8(&qword_100808AA0, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1003349C4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100010218(&qword_100808AA8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100334624()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100010218(&qword_100808A90);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D70D0;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1003346F8()
{
  sub_100010218(&qword_100808A80);
  type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1006D7C30;
  sub_1001F4FE0();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  sub_100089FB4();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  sub_1003349C4();
  uint64_t result = _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  qword_10083D3B0 = v0;
  return result;
}

uint64_t sub_100334858()
{
  return sub_1003348B4();
}

uint64_t sub_100334874()
{
  return sub_1003348B4();
}

uint64_t sub_100334890()
{
  return sub_1003348B4();
}

uint64_t sub_1003348B4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100010218(&qword_100808A90);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1006D6280;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100334918(uint64_t a1, uint64_t a2)
{
  return sub_100334964(a1, a2, &qword_1007F6E10);
}

uint64_t sub_100334940(uint64_t a1, uint64_t a2)
{
  return sub_100334964(a1, a2, &qword_1007F6E18);
}

uint64_t sub_100334964(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for JournalAssistantIntentsProvider()
{
  return &type metadata for JournalAssistantIntentsProvider;
}

unint64_t sub_1003349C4()
{
  unint64_t result = qword_100808A88;
  if (!qword_100808A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808A88);
  }
  return result;
}

uint64_t sub_100334A18()
{
  return IntentParameter.wrappedValue.getter();
}

double sub_100334A40@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100334A7C()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_100334AB8()
{
  unint64_t result = qword_100808AE8;
  if (!qword_100808AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808AE8);
  }
  return result;
}

uint64_t sub_100334B0C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100334B34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100334B70()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_100334BA8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100334C20()
{
  unint64_t result = qword_100808B00;
  if (!qword_100808B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808B00);
  }
  return result;
}

uint64_t sub_100334C74()
{
  return IntentParameter.wrappedValue.getter();
}

unint64_t sub_100334C9C()
{
  unint64_t result = qword_100808B20;
  if (!qword_100808B20)
  {
    sub_100014440((uint64_t *)&unk_1007FC470);
    sub_100334FB8(&qword_100808B28, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808B20);
  }
  return result;
}

uint64_t sub_100334D40@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100334D7C(id *a1)
{
  id v1 = *a1;
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_100334DB8()
{
  unint64_t result = qword_100808B30;
  if (!qword_100808B30)
  {
    sub_100014440(&qword_100808B38);
    sub_100334FB8(&qword_100808B40, (void (*)(uint64_t))sub_100334E5C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808B30);
  }
  return result;
}

unint64_t sub_100334E5C()
{
  unint64_t result = qword_10080F300;
  if (!qword_10080F300)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080F300);
  }
  return result;
}

uint64_t sub_100334E9C@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100334ED8()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_100334F14()
{
  unint64_t result = qword_100808B48;
  if (!qword_100808B48)
  {
    sub_100014440(&qword_100808B50);
    sub_100334FB8(qword_100808B58, (void (*)(uint64_t))&type metadata accessor for IntentFile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808B48);
  }
  return result;
}

uint64_t sub_100334FB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100335004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  unsigned int v40 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  uint64_t v34 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  v31[1] = a1;
  uint64_t v32 = v8;
  uint64_t v10 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)v31 - v12;
  uint64_t v14 = type metadata accessor for AsyncPointOfInterestIcon.Inner();
  uint64_t v38 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - v15;
  sub_100014440(&qword_100808C60);
  uint64_t v17 = type metadata accessor for ModifiedContent();
  uint64_t v39 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v33 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v37 = (char *)v31 - v20;
  type metadata accessor for State();
  State.wrappedValue.getter();
  uint64_t v21 = (uint64_t)v34;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v34, v13, v36);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = v32;
  sub_1003354E8(v21, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)v16);
  swift_retain();
  sub_100335584(&v47);
  uint64_t v46 = v47;
  sub_100335644(v2, v22, v9);
  sub_100010218(&qword_100808C68);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1003373C8();
  Swift::String v24 = v40;
  static TaskPriority.userInitiated.getter();
  uint64_t v25 = v33;
  View.task<A>(id:priority:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v42);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v14);
  unint64_t v26 = sub_100337434();
  uint64_t v44 = WitnessTable;
  unint64_t v45 = v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = v37;
  sub_1000B29EC(v25, v17, v27);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v39 + 8);
  v29(v25, v17);
  sub_1000B29EC(v28, v17, v27);
  return ((uint64_t (*)(char *, uint64_t))v29)(v28, v17);
}

uint64_t sub_1003354E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for AsyncPointOfInterestIcon.Inner();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 36));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t sub_100335584@<X0>(uint64_t *a1@<X8>)
{
  sub_100010218(&qword_100808C98);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6270;
  id v4 = *v1;
  sub_100010218(&qword_100808CA0);
  sub_100337F3C();
  AnyHashable.init<A>(_:)();
  uint64_t result = AnyHashable.init<A>(_:)();
  *a1 = v3;
  return result;
}

void *sub_100335644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncPointOfInterestIcon();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return &unk_100808C88;
}

uint64_t sub_10033577C()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for AsyncPointOfInterestIcon();
  *id v1 = v0;
  v1[1] = sub_100052588;
  return sub_100335834(v2);
}

uint64_t sub_100335834(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218((uint64_t *)&unk_1007FC470);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[6] = v4;
  v2[7] = *(void *)(v4 - 8);
  uint64_t v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AsyncImagePhase();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = *(void *)(a1 + 16);
  v2[18] = *(void *)(a1 + 24);
  uint64_t v6 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[26] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[27] = v8;
  v2[28] = v7;
  return _swift_task_switch(sub_100335AAC, v8, v7);
}

uint64_t sub_100335AAC()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  type metadata accessor for State();
  State.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v1, v5);
  uint64_t v7 = v1;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v7, v3);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5);
  int v10 = enum case for AsyncImagePhase.success(_:);
  *(_DWORD *)(v0 + 264) = enum case for AsyncImagePhase.success(_:);
  if (v9 == v10)
  {
    uint64_t v41 = v8;
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 152);
    Swift::String v13 = *(void ***)(v0 + 24);
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 96))(*(void *)(v0 + 128), *(void *)(v0 + 88));
    swift_release();
    State.wrappedValue.getter();
    uint64_t v14 = *(void **)(v11 + *(int *)(v12 + 36));
    id v15 = v14;
    uint64_t v16 = v11;
    uint64_t v8 = v41;
    v41(v16, v12);
    uint64_t v17 = *v13;
    if (!v14)
    {
      if (v17)
      {
        uint64_t v21 = *(void *)(v0 + 24);
        goto LABEL_8;
      }
      goto LABEL_17;
    }
    if (v17)
    {
      sub_100337EFC();
      id v18 = v15;
      id v19 = v17;
      uint64_t v8 = v41;
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
LABEL_17:
        uint64_t v34 = *(void *)(v0 + 184);
        uint64_t v35 = *(void *)(v0 + 152);
        State.wrappedValue.getter();
        uint64_t v36 = (uint64_t *)(v34 + *(int *)(v35 + 40));
        uint64_t v37 = *v36;
        char v38 = *((unsigned char *)v36 + 8);
        uint64_t v39 = v34;
        uint64_t v8 = v41;
        v41(v39, v35);
        if ((v38 & 1) == 0 && v37 == *(void *)(*(void *)(v0 + 24) + 8))
        {
          swift_release();
          goto LABEL_12;
        }
      }
    }
    else
    {
    }
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 88));
  }
  uint64_t v21 = *(void *)(v0 + 24);
  uint64_t v17 = *(void **)v21;
  if (!*(void *)v21)
  {
    uint64_t v42 = v8;
    uint64_t v26 = *(void *)(v0 + 168);
    uint64_t v27 = *(void *)(v0 + 176);
    uint64_t v28 = *(void *)(v0 + 152);
    uint64_t v29 = *(void *)(v0 + 160);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v31 = *(void *)(v0 + 104);
    uint64_t v32 = *(void *)(v0 + 88);
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v31, enum case for AsyncImagePhase.empty(_:), v32);
    sub_1003376D4(v31, 0, *(void *)(v21 + 8), 0, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v26, v27, v28);
    State.wrappedValue.setter();
    v42(v27, v28);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
LABEL_8:
  *(void *)(v0 + 232) = v17;
  uint64_t v22 = *(void *)(v0 + 16);
  id v23 = v17;
  static Date.now.getter();
  *(void *)(v0 + 240) = *(void *)(v21 + 8);
  uint64_t v24 = v21 + *(int *)(v22 + 48);
  uint64_t v25 = *(void *)v24;
  LOBYTE(v22) = *(unsigned char *)(v24 + 8);
  sub_100026CCC(*(void *)v24, v22);
  *(double *)(v0 + 248) = sub_10066734C(v25, v22);
  sub_100026DF8(v25, v22);
  return _swift_task_switch(sub_100335F04, 0, 0);
}

uint64_t sub_100335F04()
{
  *(void *)(v0 + 256) = [self imageForStyle:*(void *)(v0 + 232) size:*(void *)(v0 + 240) forScale:0 format:1 transparent:*(double *)(v0 + 248)];
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  return _swift_task_switch(sub_100335FA8, v1, v2);
}

uint64_t sub_100335FA8()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 96);
  swift_release();
  uint64_t v37 = (void (**)(uint64_t, void, uint64_t))(v2 + 104);
  if (v1)
  {
    uint64_t v3 = *(uint64_t **)(v0 + 112);
    id v4 = *(id *)(v0 + 256);
    id v5 = [v4 imageWithRenderingMode:2];
    uint64_t v6 = Image.init(uiImage:)();

    *uint64_t v3 = v6;
    uint64_t v7 = (unsigned int *)(v0 + 264);
  }
  else
  {
    uint64_t v8 = *(uint64_t **)(v0 + 112);
    type metadata accessor for AsyncPointOfInterestIcon.LoadingError();
    swift_getWitnessTable();
    *uint64_t v8 = swift_allocError();
    uint64_t v7 = (unsigned int *)&enum case for AsyncImagePhase.failure(_:);
  }
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v14 = *(void *)(v0 + 48);
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 32);
  uint64_t v16 = *(void *)(v0 + 40);
  (*v37)(v9, *v7, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v9, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
  sub_100045944(v16, v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v14) == 1)
  {
    sub_1000AC7D4(*(void *)(v0 + 32));
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v18 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 48);
    uint64_t v21 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, void, uint64_t))(v21 + 32))(v18, *(void *)(v0 + 32), v20);
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v23 = v22;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v24(v19, v20);
    v24(v18, v20);
    if (v23 < 0.1) {
      goto LABEL_8;
    }
  }
  static Animation.easeIn(duration:)();
LABEL_8:
  uint64_t v25 = *(void **)(v0 + 256);
  uint64_t v26 = *(void **)(v0 + 232);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v28 = *(void *)(v0 + 96);
  uint64_t v36 = *(void *)(v0 + 80);
  uint64_t v38 = *(void *)(v0 + 88);
  uint64_t v30 = *(void *)(v0 + 48);
  uint64_t v29 = *(void *)(v0 + 56);
  uint64_t v31 = *(void *)(v0 + 24);
  long long v35 = *(_OWORD *)(v0 + 136);
  sub_1000AC7D4(*(void *)(v0 + 40));
  uint64_t v32 = swift_task_alloc();
  *(_OWORD *)(v32 + 16) = v35;
  *(void *)(v32 + 32) = v31;
  *(void *)(v32 + 40) = v27;
  *(void *)(v32 + 48) = v26;
  withAnimation<A>(_:_:)();

  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v30);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_100336390@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_100336398()
{
  uint64_t result = type metadata accessor for AsyncImagePhase();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100336438(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AsyncImagePhase();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    id v13 = v10;
  }
  return a1;
}

void sub_100336520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 36));
}

uint64_t sub_100336594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  id v12 = v9;
  return a1;
}

uint64_t sub_10033662C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(void **)(a1 + v7);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  id v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  *(unsigned char *)(v12 + 8) = *((unsigned char *)v13 + 8);
  *(void *)uint64_t v12 = v14;
  return a1;
}

uint64_t sub_1003366D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 40);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_100336764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  return a1;
}

uint64_t sub_100336804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100336818);
}

uint64_t sub_100336818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1003368E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003368F8);
}

uint64_t sub_1003368F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AsyncImagePhase();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for AsyncPointOfInterestIcon.LoadingState()
{
  return sub_100073C20();
}

uint64_t sub_1003369CC()
{
  type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  uint64_t result = type metadata accessor for State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100336A98(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = v9;
    uint64_t v10 = *(int *)(a3 + 44);
    int v11 = &a1[v10];
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = type metadata accessor for AsyncImagePhase();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v4;
    swift_retain();
    v14(v11, v12, v13);
    uint64_t v16 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
    uint64_t v17 = *(int *)(v16 + 36);
    uint64_t v18 = *(void **)(v12 + v17);
    *(void *)&v11[v17] = v18;
    uint64_t v19 = *(int *)(v16 + 40);
    uint64_t v20 = &v11[v19];
    uint64_t v21 = v12 + v19;
    v20[8] = *(unsigned char *)(v21 + 8);
    *(void *)uint64_t v20 = *(void *)v21;
    uint64_t v22 = type metadata accessor for State();
    *(void *)&v11[*(int *)(v22 + 28)] = *(void *)(v12 + *(int *)(v22 + 28));
    uint64_t v23 = *(int *)(v5 + 48);
    uint64_t v24 = &v7[v23];
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = *(void *)v25;
    LOBYTE(v5) = *(unsigned char *)(v25 + 8);
    id v27 = v18;
    swift_retain();
    sub_100026CCC(v26, v5);
    *(void *)uint64_t v24 = v26;
    v24[8] = v5;
  }
  return v7;
}

uint64_t sub_100336C20(id *a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  type metadata accessor for State();
  swift_release();
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 48);
  uint64_t v7 = *(void *)v6;
  char v8 = v6[8];

  return sub_100026DF8(v7, v8);
}

void *sub_100336CF0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for AsyncImagePhase();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v7;
  swift_retain();
  v13(v10, v11, v12);
  uint64_t v15 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  uint64_t v16 = *(int *)(v15 + 36);
  uint64_t v17 = *(void **)(v11 + v16);
  *(void *)&v10[v16] = v17;
  uint64_t v18 = *(int *)(v15 + 40);
  uint64_t v19 = &v10[v18];
  uint64_t v20 = v11 + v18;
  v19[8] = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  uint64_t v21 = type metadata accessor for State();
  *(void *)&v10[*(int *)(v21 + 28)] = *(void *)(v11 + *(int *)(v21 + 28));
  uint64_t v22 = *(int *)(v3 + 48);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  LOBYTE(v3) = *(unsigned char *)(v24 + 8);
  id v26 = v17;
  swift_retain();
  sub_100026CCC(v25, v3);
  *(void *)uint64_t v23 = v25;
  v23[8] = v3;
  return a1;
}

uint64_t sub_100336E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  uint64_t v15 = *(int *)(v14 + 36);
  uint64_t v16 = *(void **)(v11 + v15);
  uint64_t v17 = *(void **)(v12 + v15);
  *(void *)(v11 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = *(int *)(v14 + 40);
  uint64_t v20 = v11 + v19;
  uint64_t v21 = (uint64_t *)(v12 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = type metadata accessor for State();
  *(void *)(v11 + *(int *)(v23 + 28)) = *(void *)(v12 + *(int *)(v23 + 28));
  swift_retain();
  swift_release();
  uint64_t v24 = *(int *)(a3 + 48);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  LOBYTE(a3) = *(unsigned char *)(v26 + 8);
  sub_100026CCC(*(void *)v26, a3);
  uint64_t v28 = *(void *)v25;
  char v29 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = a3;
  sub_100026DF8(v28, v29);
  return a1;
}

uint64_t sub_100336F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  *(void *)(v8 + *(int *)(v11 + 36)) = *(void *)(v9 + *(int *)(v11 + 36));
  uint64_t v12 = *(int *)(v11 + 40);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = type metadata accessor for State();
  *(void *)(v8 + *(int *)(v15 + 28)) = *(void *)(v9 + *(int *)(v15 + 28));
  uint64_t v16 = *(int *)(a3 + 48);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  return a1;
}

uint64_t sub_100337080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  uint64_t v12 = *(int *)(v11 + 36);
  uint64_t v13 = *(void **)(v8 + v12);
  *(void *)(v8 + v12) = *(void *)(v9 + v12);

  uint64_t v14 = *(int *)(v11 + 40);
  uint64_t v15 = v8 + v14;
  uint64_t v16 = v9 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = type metadata accessor for State();
  *(void *)(v8 + *(int *)(v17 + 28)) = *(void *)(v9 + *(int *)(v17 + 28));
  swift_release();
  uint64_t v18 = *(int *)(a3 + 48);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  uint64_t v22 = *(void *)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_100026DF8(v22, v23);
  return a1;
}

uint64_t sub_1003371B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003371C8);
}

uint64_t sub_1003371C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
    uint64_t v8 = type metadata accessor for State();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100337288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10033729C);
}

uint64_t sub_10033729C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
    uint64_t v7 = type metadata accessor for State();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AsyncPointOfInterestIcon()
{
  return sub_100073C20();
}

uint64_t sub_10033736C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for AsyncPointOfInterestIcon.Inner()
{
  return sub_100073C20();
}

unint64_t sub_1003373C8()
{
  unint64_t result = qword_100808C70;
  if (!qword_100808C70)
  {
    sub_100014440(&qword_100808C68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808C70);
  }
  return result;
}

unint64_t sub_100337434()
{
  unint64_t result = qword_100808C78;
  if (!qword_100808C78)
  {
    sub_100014440(&qword_100808C60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100808C78);
  }
  return result;
}

uint64_t sub_100337490()
{
  unint64_t v1 = (int *)(type metadata accessor for AsyncPointOfInterestIcon() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  uint64_t v3 = (char *)v2 + v1[13];
  uint64_t v4 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  type metadata accessor for State();
  swift_release();
  sub_100026DF8(*(uint64_t *)((char *)v2 + v1[14]), *((unsigned char *)v2 + v1[14] + 8));

  return swift_deallocObject();
}

uint64_t sub_1003375EC()
{
  type metadata accessor for AsyncPointOfInterestIcon();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10002C194;
  return sub_10033577C();
}

uint64_t sub_1003376D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t result = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  *(void *)(a5 + *(int *)(result + 36)) = a2;
  uint64_t v12 = a5 + *(int *)(result + 40);
  *(void *)uint64_t v12 = a3;
  *(unsigned char *)(v12 + 8) = a4 & 1;
  return result;
}

uint64_t sub_10033778C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  type metadata accessor for _ConditionalContent();
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v4 = v19;
  uint64_t v20 = &protocol witness table for Text;
  swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for VStack();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v15[-v10];
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  uint64_t v18 = v1;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000B29EC(v8, v5, WitnessTable);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  sub_1000B29EC(v11, v5, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_100337978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v29[0] = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v29 - v11;
  uint64_t v13 = type metadata accessor for _ConditionalContent();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t v17 = AsyncImagePhase.image.getter();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = type metadata accessor for AsyncPointOfInterestIcon.Inner();
    (*(void (**)(uint64_t))(a1 + *(int *)(v19 + 36)))(v18);
    sub_1000B29EC(v9, a2, a3);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v9, a2);
    sub_1000B29EC(v12, a2, a3);
    sub_10028F594((uint64_t)v9, a2);
    swift_release();
    v20(v9, a2);
    v20(v12, a2);
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v21 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v23 = v22;
    v30[0] = v21;
    v30[1] = v22;
    char v25 = v24 & 1;
    char v31 = v24 & 1;
    uint64_t v32 = v26;
    sub_10028F68C((uint64_t)v30, a2, (uint64_t)&type metadata for Text);
    sub_10002B8D0(v21, v23, v25);
    swift_bridgeObjectRelease();
  }
  v29[1] = a3;
  v29[2] = &protocol witness table for Text;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000B29EC(v16, v13, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100337C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v21 = (void *)a3;
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for AsyncImagePhase();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AsyncPointOfInterestIcon.LoadingState();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v19, v3, v12);
  uint64_t v15 = v21;
  sub_1003376D4((uint64_t)v6, (uint64_t)v21, *(void *)(v20 + 8), 0, (uint64_t)v14);
  type metadata accessor for AsyncPointOfInterestIcon();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  type metadata accessor for State();
  id v16 = v15;
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

uint64_t type metadata accessor for AsyncPointOfInterestIcon.LoadingError()
{
  return sub_100073C20();
}

uint64_t sub_100337ED8()
{
  return sub_100337C9C(v0[4], v0[5], v0[6]);
}

unint64_t sub_100337EFC()
{
  unint64_t result = qword_10080F260;
  if (!qword_10080F260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080F260);
  }
  return result;
}

unint64_t sub_100337F3C()
{
  unint64_t result = qword_100808CA8;
  if (!qword_100808CA8)
  {
    sub_100014440(&qword_100808CA0);
    sub_100337FB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808CA8);
  }
  return result;
}

unint64_t sub_100337FB0()
{
  unint64_t result = qword_100808CB0[0];
  if (!qword_100808CB0[0])
  {
    sub_100337EFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100808CB0);
  }
  return result;
}

uint64_t sub_100338008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100338010()
{
  uint64_t result = type metadata accessor for AsyncImagePhase();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1003380A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for AsyncImagePhase();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10033817C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_1003381F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_10033827C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100338310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_10033838C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  return a1;
}

uint64_t sub_100338414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100338428);
}

uint64_t sub_100338428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AsyncImagePhase();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003384E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003384FC);
}

uint64_t sub_1003384FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AsyncImagePhase();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1003385B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100338654()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100338698@<X0>(uint64_t a1@<X8>)
{
  return sub_100337978(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1003386A4()
{
  return swift_getWitnessTable();
}

void sub_100338738(unsigned __int8 a1)
{
  uint64_t v2 = 0x656772614C78;
  uint64_t v3 = OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x656772614C78;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x69576D756964656DLL;
      unint64_t v4 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x656772616CLL;
      break;
    case 3:
      uint64_t v6 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v6 = 0x657263536C6C7566;
      unint64_t v4 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType))
  {
    case 1:
      unint64_t v7 = 0xEA00000000006564;
      if (v6 == 0x69576D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      if (v6 != 0x656772616CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v6 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v2 = 0x6C6C616D73;
      goto LABEL_15;
    case 5:
      unint64_t v7 = 0xEA00000000006E65;
      if (v6 != 0x657263536C6C7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v6 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v4 == v7)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_19:
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          uint64_t v9 = *(unsigned char **)(v1 + OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView);
          if (v9)
          {
            unsigned __int8 v10 = *(unsigned char *)(v1 + v3);
            char v11 = v9[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
            v9[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = v10;
            uint64_t v12 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
            int v13 = v9[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated];
            uint64_t v14 = v9;
            id v16 = v14;
            if (v13 == 1 && (char v15 = sub_10017CB6C(v10, v11), v14 = v16, (v15 & 1) != 0))
            {
              _objc_release_x1();
            }
            else
            {
              (*(void (**)(void))((swift_isaMask & *v14) + 0x110))();
              v9[v12] = 1;
            }
          }
          else
          {
            sub_100338DC4();
          }
        }
      }
      return;
  }
}

void sub_100338A74(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAsset];
  if (a1)
  {
    if (v3)
    {
      unint64_t v4 = a1;
      _s5AssetCMa();
      id v5 = v3;
      id v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)();

      if (v4) {
        return;
      }
    }
  }
  else if (!v3)
  {
    return;
  }
  unint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView];
  *(void *)&v2[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView] = 0;

  [v2 frame];
  char v12 = sub_100038D04(v8, v9, v10, v11);
  uint64_t v13 = OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType;
  if (sub_10017CB6C(v2[OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType], v12))
  {
    sub_100338DC4();
  }
  else
  {
    unsigned __int8 v14 = v2[v13];
    v2[v13] = v12;
    sub_100338738(v14);
  }
}

void sub_100338CEC()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CanvasAssetView();
  [super layoutSubviews];
  if (*(void *)&v0[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAsset])
  {
    [v0 frame];
    char v5 = sub_100038D04(v1, v2, v3, v4);
    uint64_t v6 = OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType;
    if ((sub_10017CB6C(v0[OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType], v5) & 1) == 0)
    {
      unsigned __int8 v7 = v0[v6];
      v0[v6] = v5;
      sub_100338738(v7);
    }
  }
}

void sub_100338DC4()
{
  CGFloat v2 = v0;
  uint64_t v3 = type metadata accessor for ColorResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView;
  objc_super v8 = *(void **)&v0[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView];
  *(void *)&v0[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView] = 0;

  id v9 = [v0 subviews];
  sub_10001B284(0, (unint64_t *)&qword_100802730);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v33 = v4;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v11) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      goto LABEL_10;
    }
  }
  if (v11 >= 1)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v10 + 8 * i + 32);
      }
      unsigned __int8 v14 = v13;
      [v13 removeFromSuperview];
    }
LABEL_10:
    swift_bridgeObjectRelease();
    char v15 = *(void **)&v2[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAsset];
    if (!v15) {
      return;
    }
    uint64_t v16 = v2[OBJC_IVAR____TtC7Journal15CanvasAssetView_currentSizeType];
    uint64_t v34 = v15;
    uint64_t v17 = sub_1003CDE44(v34, v16);
    CGFloat v1 = &stru_1007D7000;
    if (v17)
    {
      uint64_t v18 = v17;
      [v2 addSubview:v17];
      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void **)&v2[v7];
      *(void *)&v2[v7] = v18;
    }
    else
    {
      _s16PlaceholderAssetCMa();
      if (swift_dynamicCastClass())
      {
        type metadata accessor for PlaceholderAssetView();
        id v20 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
        [v2 addSubview:v20];
        sub_1001DCF60(0.0);

        swift_bridgeObjectRelease();
      }
    }
    uint64_t v21 = v34;
    uint64_t v22 = *(void **)&v34[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
    if (!v22) {
      goto LABEL_18;
    }
    unint64_t v10 = v22;
    LODWORD(v11) = [(id)v10 minimumSupportedAppVersion];
    if (qword_1007F6AA8 == -1) {
      goto LABEL_17;
    }
    goto LABEL_28;
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_17:
  int v23 = static Journaling.EntryViewModel.currentAppVersion;

  uint64_t v21 = v34;
  if (v23 < (int)v11)
  {
LABEL_18:
    uint64_t v24 = qword_1007F71E8;
    id v25 = v21;
    if (v24 != -1) {
      swift_once();
    }
    uint64_t v26 = (void *)qword_10083D7B0;
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    uint64_t v27 = qword_1007F7FF0;
    id v28 = v26;
    if (v27 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_100026A54(v3, (uint64_t)qword_10083F0F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v6, v29, v3);
    uint64_t v30 = (void *)UIColor.init(resource:)();
    id v31 = objc_allocWithZone((Class)type metadata accessor for UnsupportedAssetView());
    uint64_t v32 = sub_1002BCDB8(v25, v28, v30, 40.0);
    [v2 v1[63].imp:v32];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    return;
  }
}

id sub_10033921C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasAssetView()
{
  return self;
}

uint64_t sub_1003392C0()
{
  sub_100339418(v0);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      swift_unknownObjectRetain();
      v6(ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100339368()
{
  sub_100339418(v0);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 24);
      swift_unknownObjectRetain();
      v6(ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
  }

  return swift_bridgeObjectRelease();
}

void sub_100339418(void *a1)
{
  id v1 = [a1 subviews];
  sub_10001B284(0, (unint64_t *)&qword_100802730);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_22;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v4 + 32);
      }
      objc_super v8 = v7;
      swift_getObjectType();
      uint64_t v9 = swift_conformsToProtocol2();
      if (v9) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v9) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v11)
      {
        id v12 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1002A6734(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v14 = *((void *)v5 + 2);
        unint64_t v13 = *((void *)v5 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v5 = sub_1002A6734((char *)(v13 > 1), v14 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v14 + 1;
        uint64_t v6 = &v5[16 * v14];
        *((void *)v6 + 4) = v11;
        *((void *)v6 + 5) = v10;
      }
      ++v4;
    }
    while (v3 != v4);
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t _s10ReflectionV14ReflectionTypeOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s10ReflectionV14ReflectionTypeOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100339628(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100339644(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *_s10ReflectionV14ReflectionTypeOMa()
{
  return &_s10ReflectionV14ReflectionTypeON;
}

uint64_t sub_100339674()
{
  id v1 = (unint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain_n();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  _s15ReflectionAssetCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v2 + 8 * v5);
    }
    id v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if ([v6 isKindOfClass:ObjCClassFromMetadata]) {
      break;
    }

    ++v5;
    if (v8 == v3) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

uint64_t sub_1003397D4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 120) = a3;
  *(void *)(v5 + 128) = v4;
  *(unsigned char *)(v5 + 193) = a4;
  *(unsigned char *)(v5 + 192) = a2;
  *(void *)(v5 + 112) = a1;
  sub_100010218((uint64_t *)&unk_1007FC470);
  *(void *)(v5 + 136) = swift_task_alloc();
  sub_100010218(&qword_100800950);
  *(void *)(v5 + 144) = swift_task_alloc();
  return _swift_task_switch(sub_1003398A4, 0, 0);
}

uint64_t sub_1003398A4()
{
  uint64_t v2 = *(void *)(v0 + 112);
  id v1 = *(void **)(v0 + 120);
  if (v1)
  {
    id v3 = v1;
  }
  else
  {
    id v4 = objc_allocWithZone((Class)NSAttributedString);
    NSString v5 = String._bridgeToObjectiveC()();
    id v3 = [v4 initWithString:v5];
  }
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = sub_100239148(*(unsigned char *)(v0 + 193), v2, v3);
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleId;
  swift_beginAccess();
  sub_10001B220(v10, v7, &qword_100800950);
  uint64_t v11 = (uint64_t)&v9[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionId];
  swift_beginAccess();
  sub_100041190(v7, v11, &qword_100800950);
  swift_endAccess();
  uint64_t v12 = v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleDate;
  swift_beginAccess();
  sub_10001B220(v12, v6, (uint64_t *)&unk_1007FC470);
  uint64_t v13 = (uint64_t)&v9[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate];
  swift_beginAccess();
  unint64_t v14 = v9;
  sub_100041190(v6, v13, (uint64_t *)&unk_1007FC470);
  swift_endAccess();

  uint64_t v15 = sub_100339674();
  *(void *)(v0 + 160) = v15;
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100339B64;
    return sub_1000E99A4(v16);
  }
  else
  {
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100339D00;
    uint64_t v20 = *(void *)(v0 + 152);
    return sub_1000E7908(v20);
  }
}

uint64_t sub_100339B64()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100339C60, 0, 0);
}

uint64_t sub_100339C60()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100339D00;
  uint64_t v2 = *(void *)(v0 + 152);
  return sub_1000E7908(v2);
}

uint64_t sub_100339D00()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100339DFC, 0, 0);
}

uint64_t sub_100339DFC()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 184) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100339E90, v2, v1);
}

uint64_t sub_100339E90()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100794788);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_100339F70, 0, 0);
}

uint64_t sub_100339F70()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100339FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v5[16] = v9;
  void *v9 = v5;
  v9[1] = sub_10033A138;
  return sub_1000E99A4(a5);
}

uint64_t sub_10033A138()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10033A234, 0, 0);
}

uint64_t sub_10033A234()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v11 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[9];
  sub_10001FB8C();
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  v0[6] = sub_10033AB94;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_1007A61D0;
  uint64_t v7 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10033A400()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E56EC();
  sub_10001FB8C();
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_10033ABB0;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A61F8;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10033A66C(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v5 = sub_1000F678C((uint64_t)&off_1007947B0);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 8))(a1, v5, ObjectType, v3);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10033A71C(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t countAndFlagsBits = a1;
    switch(a1)
    {
      case 1:
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v12 = 0x8000000100699630;
        uint64_t v3 = 0x6D6F64736977;
        unint64_t v4 = 0xE600000000000000;
        goto LABEL_3;
      case 2:
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v8 = 0xD00000000000003DLL;
        unint64_t v12 = 0x80000001006995F0;
        uint64_t v3 = 0x6475746974617267;
        unint64_t v4 = 0xE900000000000065;
        goto LABEL_12;
      case 3:
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v8 = 0xD00000000000003CLL;
        unint64_t v12 = 0x80000001006995B0;
        uint64_t v3 = 0x7373656E646E696BLL;
        unint64_t v4 = 0xE800000000000000;
        goto LABEL_12;
      case 4:
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v8 = 0xD00000000000003BLL;
        unint64_t v12 = 0x8000000100699570;
        uint64_t v3 = 0x65736F70727570;
        unint64_t v4 = 0xE700000000000000;
        goto LABEL_12;
      case 5:
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v8 = 0xD00000000000003ELL;
        unint64_t v12 = 0x8000000100699530;
        uint64_t v3 = 0x6E65696C69736572;
        uint64_t v10 = 25955;
        goto LABEL_11;
      case 6:
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v8 = 0xD00000000000003ELL;
        unint64_t v12 = 0x80000001006994F0;
        uint64_t v3 = 0x6976697461657263;
        uint64_t v10 = 31092;
LABEL_11:
        unint64_t v4 = v10 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
LABEL_12:
        v5.super.Class isa = v2;
        uint64_t v6 = 0;
        unint64_t v7 = 0xE000000000000000;
        goto LABEL_13;
      default:
        return countAndFlagsBits;
    }
  }
  uint64_t v2 = (objc_class *)[self mainBundle];
  unint64_t v12 = 0x80000001006994B0;
  uint64_t v3 = 0x726568746FLL;
  unint64_t v4 = 0xE500000000000000;
LABEL_3:
  v5.super.Class isa = v2;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  unint64_t v8 = 0xD00000000000003ALL;
LABEL_13:
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)(&v12 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10033AA44()
{
  return sub_10033A71C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_10033AA5C(void *a1)
{
  sub_1003F2ABC(&v10);
  unint64_t v2 = v13;
  if (v13 >> 60 == 11)
  {
    id v3 = objc_allocWithZone((Class)NSAttributedString);
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 initWithString:v4];

    return 0;
  }
  else
  {
    uint64_t v6 = v10;
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    if (v11) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = v10;
    }
    if (v13 >> 60 == 15)
    {
    }
    else
    {
      sub_100040F10(v12, v13);
      sub_100041F24(v8, v2);

      sub_100040F54(v6, v7, v8, v2);
    }
    sub_100040F54(v6, v7, v8, v2);
  }
  return v5;
}

uint64_t sub_10033AB98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10033ABA8()
{
  return swift_release();
}

uint64_t sub_10033ABB0()
{
  return sub_10033A66C(v0);
}

uint64_t _s10ReflectionVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void _s10ReflectionVwxx(uint64_t a1)
{
}

uint64_t _s10ReflectionVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  id v4 = *(void **)(a1 + 16);
  uint64_t v5 = (void *)a2[2];
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  return a1;
}

uint64_t _s10ReflectionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t _s10ReflectionVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s10ReflectionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s10ReflectionVMa()
{
  return &_s10ReflectionVN;
}

uint64_t sub_10033AD58(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v4 + OBJC_IVAR____TtC7Journal13CloudKitStack_fetchRecordQueue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v15;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a1;
  aBlock[4] = sub_10033B4D8;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A62F0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v18 = a1;
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_10033D9A0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_10033B04C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10033B084()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100808E10);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100808E10);
  if (qword_1007F7D28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB78);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10033B14C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    if (qword_1007F6E20 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100808E10);
    uint64_t v10 = a4;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v24 = a2;
      unint64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412546;
      uint64_t v15 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v10;

      *(_WORD *)(v13 + 12) = 2112;
      uint64_t v16 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v14[1] = v10;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "(resolveConflictWith)  recordId: %@ recordId:%@", (uint8_t *)v13, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      a2 = v24;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v11 = v10;
    }

    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a2;
    v22[3] = a3;
    v22[4] = v10;
    int v23 = v10;
    swift_retain();
    sub_1002CEE04(v23, (uint64_t)sub_10033D918, (uint64_t)v22);

    return swift_release();
  }
  else
  {
    if (qword_1007F6E20 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100026A54(v17, (uint64_t)qword_100808E10);
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "(recolveConflictWith) no self", v20, 2u);
      swift_slowDealloc();
    }

    return a2(0);
  }
}

uint64_t sub_10033B490()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10033B4D8()
{
  return sub_10033B14C(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10033B4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10033B4F4()
{
  return swift_release();
}

uint64_t sub_10033B4FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v8 = qword_1007F6D38;
  id v9 = a1;
  if (v8 != -1) {
    swift_once();
  }
  id v10 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  uint64_t v11 = (objc_class *)type metadata accessor for JurassicMergePolicy();
  os_log_type_t v12 = objc_allocWithZone(v11);
  UUID.init()();
  v12[OBJC_IVAR____TtC7Journal19JurassicMergePolicy_mode] = 0;

  v34.receiver = v12;
  v34.super_class = v11;
  id v13 = [super initWithMergeType:2];
  [v10 setMergePolicy:v13];

  id v14 = [v9 recordID];
  id v15 = [v14 recordName];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  os_log_type_t v19 = (void *)swift_allocObject();
  v19[2] = v9;
  v19[3] = v16;
  v19[4] = v18;
  v19[5] = v10;
  v19[6] = a5;
  v19[7] = a3;
  v19[8] = a4;
  a3 = swift_allocObject();
  *(void *)(a3 + 16) = sub_10033D97C;
  *(void *)(a3 + 24) = v19;
  aBlock[4] = (uint64_t)sub_10001AC84;
  void aBlock[5] = a3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1003F44E4;
  uint64_t aBlock[3] = (uint64_t)&unk_1007A6390;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v9;
  id v22 = v10;
  id v23 = a5;
  swift_retain();
  swift_retain();
  swift_release();
  [v22 performBlockAndWait:v20];

  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    uint64_t v26 = a2;
    if (qword_1007F6E20 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100026A54(v27, (uint64_t)qword_100808E10);
    swift_errorRetain();
    swift_errorRetain();
    id v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v35 = v26;
      swift_errorRetain();
      sub_100010218((uint64_t *)&unk_100804490);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v35 = sub_10011EA98(v31, v32, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "(recolveConflictWith) unable to resolve conflict error: %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return ((uint64_t (*)(void))a3)(0);
  }
  return result;
}

void sub_10033B960(void *a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v251 = a7;
  v252 = a4;
  id v248 = a5;
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  id v13 = &v232[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v232[-v15];
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v249 = v17;
  uint64_t v250 = v18;
  __chkstk_darwin(v17);
  v242 = &v232[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v240 = &v232[-v21];
  __chkstk_darwin(v22);
  v239 = &v232[-v23];
  __chkstk_darwin(v24);
  v241 = &v232[-v25];
  __chkstk_darwin(v26);
  v238 = &v232[-v27];
  __chkstk_darwin(v28);
  v237 = &v232[-v29];
  __chkstk_darwin(v30);
  v245 = &v232[-v31];
  __chkstk_darwin(v32);
  objc_super v34 = &v232[-v33];
  __chkstk_darwin(v35);
  v246 = &v232[-v36];
  v247 = a1;
  uint64_t v38 = CKRecord.recordType.getter();
  uint64_t v39 = v37;
  if ((v38 != 0x456C616E72756F4ALL || v37 != 0xEC0000007972746ELL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v38 == 0xD000000000000011 && v39 == 0x800000010068A500
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v70 = v252;
      if (qword_1007F6E20 != -1) {
        swift_once();
      }
      uint64_t v71 = type metadata accessor for Logger();
      sub_100026A54(v71, (uint64_t)qword_100808E10);
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v73 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v74 = 0;
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "(resolveConflictWith) - RECORD_TYPE_JOURNAL_ENTRY_ASSET", v74, 2u);
        swift_slowDealloc();
      }

      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      id v75 = *(id *)(qword_10083D2F8 + 16);
      sub_1004EC844(v247, v70);
    }
    else
    {
      if (v38 == 0xD00000000000001FLL && v39 == 0x800000010068A520)
      {
        swift_bridgeObjectRelease();
        uint64_t v70 = v252;
      }
      else
      {
        char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v70 = v252;
        if ((v93 & 1) == 0)
        {
          if (qword_1007F6E20 != -1) {
            swift_once();
          }
          uint64_t v218 = type metadata accessor for Logger();
          sub_100026A54(v218, (uint64_t)qword_100808E10);
          id v219 = v248;
          v220 = v247;
          id v221 = v219;
          id v222 = v220;
          uint64_t v65 = Logger.logObject.getter();
          os_log_type_t v223 = static os_log_type_t.error.getter();
          if (!os_log_type_enabled(v65, v223))
          {

            goto LABEL_36;
          }
          uint64_t v224 = swift_slowAlloc();
          uint64_t v225 = swift_slowAlloc();
          v243 = a6;
          id v226 = (void *)v225;
          id v254 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v224 = 136315394;
          uint64_t v227 = CKRecord.recordType.getter();
          uint64_t v253 = sub_10011EA98(v227, v228, (uint64_t *)&v254);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v224 + 12) = 2112;
          uint64_t v253 = (uint64_t)v221;
          id v229 = v221;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *id v226 = v221;

          _os_log_impl((void *)&_mh_execute_header, v65, v223, "(resolveConflictWith) to be implemented recordType:%s recordId:%@", (uint8_t *)v224, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          a6 = v243;
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_19;
        }
      }
      if (qword_1007F6E20 != -1) {
        swift_once();
      }
      uint64_t v94 = type metadata accessor for Logger();
      sub_100026A54(v94, (uint64_t)qword_100808E10);
      BOOL v95 = Logger.logObject.getter();
      os_log_type_t v96 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v97 = 0;
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "(resolveConflictWith) - RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT", v97, 2u);
        swift_slowDealloc();
      }

      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      id v75 = *(id *)(qword_10083D2F8 + 16);
      sub_10052BE20(v247, v70);
    }

    id v254 = 0;
    if (![v70 save:&v254])
    {
      id v99 = v254;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v100 = v70;
      swift_errorRetain();
      uint64_t v101 = v100;
      swift_errorRetain();
      uint64_t v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v104 = swift_slowAlloc();
        uint64_t v105 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v104 = 138412546;
        v243 = a6;
        id v254 = v101;
        unint64_t v106 = v101;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v105 = v101;

        *(_WORD *)(v104 + 12) = 2112;
        swift_errorRetain();
        uint64_t v107 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v254 = v107;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v105[1] = v107;
        a6 = v243;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "(resolveConflictWith) Unable to save background context:%@ error:%@", (uint8_t *)v104, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }

      a6(0);
      swift_errorRelease();
      return;
    }
    id v98 = v254;
    uint64_t v84 = 1;
LABEL_55:
    a6(v84);
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_1007F6E20 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  uint64_t v41 = sub_100026A54(v40, (uint64_t)qword_100808E10);
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "(resolveConflictWith) - RECORD_TYPE_JOURNAL_ENTRY", v44, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v45 = *(id *)(qword_10083D2F8 + 16);
  uint64_t v46 = sub_10056A2E0(a2, a3, v252);

  if (!v46)
  {
    id v64 = v248;
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v65, v66))
    {

      goto LABEL_36;
    }
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    uint64_t v68 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 138412290;
    id v254 = v64;
    id v69 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v68 = v64;

    _os_log_impl((void *)&_mh_execute_header, v65, v66, "(resolveConflictWith) unable to get local entry with recordId:%@", v67, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_19:
    swift_slowDealloc();

LABEL_36:
    uint64_t v84 = 0;
    goto LABEL_55;
  }
  v243 = a6;
  uint64_t v244 = v41;
  v236 = v46;
  id v47 = [v46 updatedDate];
  if (!v47)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v250 + 56))(v16, 1, 1, v249);
    goto LABEL_31;
  }
  Swift::String v48 = v47;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v50 = v249;
  uint64_t v49 = v250;
  Swift::String v51 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v250 + 32);
  v51(v16, v34, v249);
  Swift::String v52 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
  v52(v16, 0, 1, v50);
  uint64_t v53 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v49 + 48);
  if (v53(v16, 1, v50) == 1)
  {
LABEL_31:
    sub_1000AC7D4((uint64_t)v16);
    uint64_t v76 = v248;
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = 138412290;
      id v254 = v76;
      uint64_t v81 = v76;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v80 = v76;

      _os_log_impl((void *)&_mh_execute_header, v77, v78, "(resolveConflictWith) unable to get dateLocal recordId:%@", v79, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v77 = v76;
    }
    uint64_t v82 = v243;
    uint64_t v83 = v236;

    v82(0);
    return;
  }
  v235 = v51;
  v51(v246, v16, v50);
  id v54 = [v247 encryptedValues];
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v54 objectForKeyedSubscript:v55];
  swift_unknownObjectRelease();

  if (!v56)
  {
    v52(v13, 1, 1, v50);
    goto LABEL_41;
  }
  id v254 = v56;
  uint64_t v57 = sub_100010218((uint64_t *)&unk_1008060F0);
  int v58 = swift_dynamicCast();
  v52(v13, v58 ^ 1u, 1, v50);
  if (v53(v13, 1, v50) == 1)
  {
LABEL_41:
    sub_1000AC7D4((uint64_t)v13);
    uint64_t v85 = v248;
    uint64_t v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      unint64_t v89 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v88 = 138412290;
      id v254 = v85;
      char v90 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v89 = v85;

      _os_log_impl((void *)&_mh_execute_header, v86, v87, "(resolveConflictWith) unable to get dateRemote recordId:%@", v88, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v86 = v85;
    }
    uint64_t v91 = v243;
    uint64_t v92 = v236;

    v91(0);
    (*(void (**)(unsigned char *, uint64_t))(v250 + 8))(v246, v249);
    return;
  }
  v235(v245, v13, v50);
  Swift::String v59 = v236;
  uint64_t v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.default.getter();
  BOOL v62 = os_log_type_enabled(v60, v61);
  uint64_t v234 = v57;
  if (v62)
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v63 = 33554688;
    LOWORD(v254) = (unsigned __int16)[v59 textLength];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v60, v61, "(resolveConflictWith) (localEntry.textLength) == %hd", v63, 6u);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v60 = v59;
  }
  unint64_t v108 = v237;
  unint64_t v109 = v238;

  uint64_t v110 = v249;
  uint64_t v111 = v250;
  uint64_t v112 = (unsigned char *)(v250 + 16);
  unint64_t v113 = *(unsigned char **)(v250 + 16);
  uint64_t v114 = v246;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v113)(v108, v246, v249);
  v237 = v113;
  v238 = v112;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v113)(v109, v114, v110);
  unint64_t v115 = Logger.logObject.getter();
  os_log_type_t v116 = static os_log_type_t.default.getter();
  int v117 = v116;
  BOOL v118 = os_log_type_enabled(v115, v116);
  v236 = v59;
  if (v118)
  {
    uint64_t v119 = swift_slowAlloc();
    v235 = (void (*)(unsigned char *, unsigned char *, uint64_t))swift_slowAlloc();
    id v254 = v235;
    *(_DWORD *)uint64_t v119 = 136315394;
    id v248 = (id)(v119 + 4);
    id v120 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v121 = String._bridgeToObjectiveC()();
    int v233 = v117;
    uint64_t v122 = v121;
    [v120 setDateFormat:v121];

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v124 = [v120 stringFromDate:isa];

    uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v126 = v108;
    uint64_t v127 = v109;
    unint64_t v129 = v128;

    uint64_t v253 = sub_10011EA98(v125, v129, (uint64_t *)&v254);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v130 = *(void (**)(unsigned char *, uint64_t))(v111 + 8);
    v130(v126, v110);
    *(_WORD *)(v119 + 12) = 2080;
    sub_10033D9A0((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v131 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v253 = sub_10011EA98(v131, v132, (uint64_t *)&v254);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v248 = v130;
    v130(v127, v110);
    _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v233, "(resolveConflictWith) (localEntry.updatedDate) == %s  %s", (uint8_t *)v119, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v133 = *(void (**)(unsigned char *, uint64_t))(v111 + 8);
    v133(v108, v110);
    id v248 = v133;
    v133(v109, v110);
  }

  uint64_t v134 = v239;
  id v135 = [v247 encryptedValues];
  NSString v136 = String._bridgeToObjectiveC()();
  id v137 = [v135 objectForKeyedSubscript:v136];
  swift_unknownObjectRelease();

  uint64_t v138 = v249;
  id v139 = v241;
  if (v137)
  {
    id v254 = v137;
    if (swift_dynamicCast())
    {
      __int16 v140 = v253;
      uint64_t v141 = Logger.logObject.getter();
      os_log_type_t v142 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v141, v142))
      {
        uint64_t v143 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v143 = 33554688;
        LOWORD(v254) = v140;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v141, v142, "(resolveConflictWith) (record.textLength) == %hd", v143, 6u);
        swift_slowDealloc();
      }

      uint64_t v138 = v249;
    }
  }
  id v144 = v245;
  uint64_t v145 = (void (*)(unsigned char *, unsigned char *, uint64_t))v237;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v237)(v139, v245, v138);
  v145(v134, v144, v138);
  double v146 = Logger.logObject.getter();
  os_log_type_t v147 = static os_log_type_t.default.getter();
  int v148 = v147;
  if (os_log_type_enabled(v146, v147))
  {
    uint64_t v149 = swift_slowAlloc();
    v239 = (unsigned char *)swift_slowAlloc();
    id v254 = v239;
    *(_DWORD *)uint64_t v149 = 136315394;
    id v150 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v151 = String._bridgeToObjectiveC()();
    LODWORD(v235) = v148;
    unint64_t v152 = v151;
    [v150 setDateFormat:v151];

    Class v153 = Date._bridgeToObjectiveC()().super.isa;
    id v154 = v139;
    id v155 = [v150 stringFromDate:v153];

    uint64_t v156 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v157 = v134;
    unint64_t v159 = v158;

    uint64_t v253 = sub_10011EA98(v156, v159, (uint64_t *)&v254);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v160 = v245;
    swift_bridgeObjectRelease();
    id v161 = (void (*)(unsigned char *, uint64_t))v248;
    ((void (*)(unsigned char *, uint64_t))v248)(v154, v138);
    *(_WORD *)(v149 + 12) = 2080;
    sub_10033D9A0((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v162 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v253 = sub_10011EA98(v162, v163, (uint64_t *)&v254);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v161(v157, v138);
    _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v235, "(resolveConflictWith) (record.updatedDate) == %s  %s", (uint8_t *)v149, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v164 = v138;
    uint64_t v165 = v242;
    v166 = v240;
  }
  else
  {
    uint64_t v167 = (void (*)(unsigned char *, uint64_t))v248;
    ((void (*)(unsigned char *, uint64_t))v248)(v139, v138);
    v167(v134, v138);

    uint64_t v164 = v138;
    uint64_t v165 = v242;
    v166 = v240;
    uint64_t v160 = v245;
  }
  uint64_t v168 = (void (*)(unsigned char *, unsigned char *, uint64_t))v237;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v237)(v166, v246, v164);
  v168(v165, v160, v164);
  v169 = Logger.logObject.getter();
  os_log_type_t v170 = static os_log_type_t.default.getter();
  int v171 = v170;
  if (os_log_type_enabled(v169, v170))
  {
    uint64_t v172 = swift_slowAlloc();
    v241 = (unsigned char *)swift_slowAlloc();
    id v254 = v241;
    *(_DWORD *)uint64_t v172 = 136315394;
    id v173 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v174 = String._bridgeToObjectiveC()();
    LODWORD(v240) = v171;
    unint64_t v175 = v174;
    [v173 setDateFormat:v174];

    Class v176 = Date._bridgeToObjectiveC()().super.isa;
    id v177 = [v173 stringFromDate:v176];

    uint64_t v178 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v180 = v179;

    uint64_t v253 = sub_10011EA98(v178, v180, (uint64_t *)&v254);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v181 = (void (*)(unsigned char *, uint64_t))v248;
    ((void (*)(unsigned char *, uint64_t))v248)(v166, v164);
    *(_WORD *)(v172 + 12) = 2080;
    v239 = (unsigned char *)(v172 + 14);
    id v182 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v183 = String._bridgeToObjectiveC()();
    [v182 setDateFormat:v183];

    v184 = v242;
    Class v185 = Date._bridgeToObjectiveC()().super.isa;
    id v186 = [v182 stringFromDate:v185];

    uint64_t v187 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v189 = v188;

    id v190 = v245;
    uint64_t v253 = sub_10011EA98(v187, v189, (uint64_t *)&v254);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v181(v184, v249);
    _os_log_impl((void *)&_mh_execute_header, v169, (os_log_type_t)v240, "(resolveConflictWith) Comparing local and remote dates local:%s remote:%s", (uint8_t *)v172, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v190 = v160;
    id v191 = (void (*)(unsigned char *, uint64_t))v248;
    ((void (*)(unsigned char *, uint64_t))v248)(v166, v164);
    v191(v165, v164);
  }

  id v192 = v243;
  uint64_t v193 = v252;
  uint64_t v194 = v236;
  char v195 = static Date.> infix(_:_:)();
  v196 = Logger.logObject.getter();
  os_log_type_t v197 = static os_log_type_t.default.getter();
  BOOL v198 = os_log_type_enabled(v196, v197);
  if (v195)
  {
    if (v198)
    {
      v199 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v199 = 0;
      _os_log_impl((void *)&_mh_execute_header, v196, v197, "(resolveConflictWith) Local change is newer than remote", v199, 2u);
      swift_slowDealloc();
    }

    id v200 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [v247 encodeSystemFieldsWithCoder:v200];
    id v201 = [v200 encodedData];
    uint64_t v202 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v204 = v203;

    v205.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100040DD0(v202, v204);
    [v194 setRecordSystemFields:v205.super.isa];
  }
  else
  {
    if (v198)
    {
      v206 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v206 = 0;
      _os_log_impl((void *)&_mh_execute_header, v196, v197, "(resolveConflictWith) Remote change is newer than local", v206, 2u);
      swift_slowDealloc();
    }

    v205.super.Class isa = (Class)*(id *)(qword_10083D2F8 + 16);
    sub_10056989C(v247, v193, 0);
  }

  [v194 setIsUploadedToCloud:(v195 & 1) == 0];
  id v254 = 0;
  if ([v193 save:&v254])
  {
    id v207 = v254;
    v192(1);
  }
  else
  {
    id v208 = v254;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v209 = v193;
    swift_errorRetain();
    v210 = v209;
    swift_errorRetain();
    v211 = Logger.logObject.getter();
    os_log_type_t v212 = static os_log_type_t.default.getter();
    v252 = v211;
    if (os_log_type_enabled(v211, v212))
    {
      uint64_t v213 = swift_slowAlloc();
      v214 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v213 = 138412546;
      id v254 = v210;
      v215 = v194;
      v216 = v210;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v214 = v210;

      uint64_t v194 = v215;
      *(_WORD *)(v213 + 12) = 2112;
      swift_errorRetain();
      uint64_t v217 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v254 = v217;
      id v190 = v245;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v214[1] = v217;
      id v192 = v243;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v252, v212, "(resolveConflictWith) Unable to save background context:%@ error:%@", (uint8_t *)v213, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    v192(0);
    swift_errorRelease();
  }

  uint64_t v230 = v249;
  v231 = (void (*)(unsigned char *, uint64_t))v248;
  ((void (*)(unsigned char *, uint64_t))v248)(v190, v249);
  v231(v246, v230);
}

uint64_t sub_10033D8D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10033D918(void *a1, uint64_t a2)
{
  return sub_10033B4FC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_10033D924()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_10033D97C()
{
  sub_10033B960(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(NSObject **)(v0 + 40), *(void **)(v0 + 48), *(void (**)(void))(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_10033D990()
{
  return swift_deallocObject();
}

uint64_t sub_10033D9A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10033D9F0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for WidgetFamily();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100010218(&qword_1007FAA00);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    id v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)a1 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_10033DC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetFamily();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *sub_10033DDD4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218(&qword_1007FAA00);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_10033DFFC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100010218(&qword_1007FAA00);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_10033E2F0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218(&qword_1007FAA00);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_10033E500(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100010218(&qword_1007FAA00);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_10033E7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10033E7F8);
}

uint64_t sub_10033E7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_1007FAA00);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_10033E93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10033E950);
}

uint64_t sub_10033E950(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218(&qword_1007FAA00);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for CanvasStartingState()
{
  uint64_t result = qword_100808E80;
  if (!qword_100808E80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10033EAD4()
{
  sub_10033EBE4(319, (unint64_t *)&unk_100808E90, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_10033EBE4(319, (unint64_t *)&qword_1007FAAE0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10033EBE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10033EC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v62);
  os_log_type_t v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v68 = (uint64_t)&v60 - v10;
  __chkstk_darwin(v11);
  uint64_t v67 = (uint64_t)&v60 - v12;
  uint64_t v13 = type metadata accessor for WidgetFamily();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100808EC8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1007FAA00);
  __chkstk_darwin(v21 - 8);
  int v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v60 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v60 - v28;
  uint64_t v65 = a1;
  sub_10001B220(a1, (uint64_t)&v60 - v28, &qword_1007FAA00);
  sub_10001B220(v69, (uint64_t)v26, &qword_1007FAA00);
  uint64_t v30 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_10001B220((uint64_t)v29, (uint64_t)v20, &qword_1007FAA00);
  sub_10001B220((uint64_t)v26, v30, &qword_1007FAA00);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v31((uint64_t)v20, 1, v13) == 1)
  {
    sub_10001457C((uint64_t)v26, &qword_1007FAA00);
    sub_10001457C((uint64_t)v29, &qword_1007FAA00);
    if (v31(v30, 1, v13) == 1)
    {
      sub_10001457C((uint64_t)v20, &qword_1007FAA00);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v32 = &qword_100808EC8;
    uint64_t v33 = (uint64_t)v20;
    goto LABEL_7;
  }
  sub_10001B220((uint64_t)v20, (uint64_t)v23, &qword_1007FAA00);
  if (v31(v30, 1, v13) == 1)
  {
    sub_10001457C((uint64_t)v26, &qword_1007FAA00);
    sub_10001457C((uint64_t)v29, &qword_1007FAA00);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v30, v13);
  sub_10033F430(&qword_100808ED0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v13);
  sub_10001457C((uint64_t)v26, &qword_1007FAA00);
  sub_10001457C((uint64_t)v29, &qword_1007FAA00);
  v36(v23, v13);
  sub_10001457C((uint64_t)v20, &qword_1007FAA00);
  if ((v35 & 1) == 0) {
    return 0;
  }
LABEL_11:
  uint64_t v37 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v38 = v37[5];
  uint64_t v39 = v65;
  uint64_t v40 = (void *)(v65 + v38);
  uint64_t v41 = *(void *)(v65 + v38 + 8);
  uint64_t v42 = v69;
  os_log_type_t v43 = (void *)(v69 + v38);
  uint64_t v44 = v43[1];
  if (!v41)
  {
    uint64_t v45 = (uint64_t)v66;
    uint64_t v46 = v67;
    uint64_t v47 = v68;
    if (v44) {
      return 0;
    }
LABEL_18:
    sub_10001B220(v39 + v37[6], v46, (uint64_t *)&unk_1007FC470);
    sub_10001B220(v42 + v37[6], v47, (uint64_t *)&unk_1007FC470);
    uint64_t v49 = v45 + *(int *)(v62 + 48);
    sub_10001B220(v46, v45, (uint64_t *)&unk_1007FC470);
    sub_10001B220(v47, v49, (uint64_t *)&unk_1007FC470);
    uint64_t v50 = v63;
    Swift::String v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v51(v45, 1, v63) == 1)
    {
      sub_10001457C(v47, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v46, (uint64_t *)&unk_1007FC470);
      if (v51(v49, 1, v50) == 1)
      {
        sub_10001457C(v45, (uint64_t *)&unk_1007FC470);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v52 = v61;
      sub_10001B220(v45, v61, (uint64_t *)&unk_1007FC470);
      if (v51(v49, 1, v50) != 1)
      {
        uint64_t v53 = v52;
        uint64_t v54 = v64;
        NSString v55 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v60, v49, v50);
        sub_10033F430((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
        LODWORD(v66) = dispatch thunk of static Equatable.== infix(_:_:)();
        id v56 = *(void (**)(char *, uint64_t))(v54 + 8);
        v56(v55, v50);
        sub_10001457C(v68, (uint64_t *)&unk_1007FC470);
        sub_10001457C(v67, (uint64_t *)&unk_1007FC470);
        v56((char *)v53, v50);
        sub_10001457C(v45, (uint64_t *)&unk_1007FC470);
        if (v66)
        {
LABEL_25:
          uint64_t v57 = v37[7];
          unsigned int v58 = *(unsigned __int8 *)(v39 + v57);
          unsigned int v59 = *(unsigned __int8 *)(v42 + v57);
          if (v58 <= 0xFD)
          {
            if (v59 <= 0xFD && (sub_1000DE668(v58, v59) & 1) != 0) {
              return 1;
            }
          }
          else if (v59 > 0xFD)
          {
            return 1;
          }
        }
        return 0;
      }
      sub_10001457C(v68, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v46, (uint64_t *)&unk_1007FC470);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v50);
    }
    uint64_t v32 = &qword_1007FB8B0;
    uint64_t v33 = v45;
LABEL_7:
    sub_10001457C(v33, v32);
    return 0;
  }
  uint64_t v45 = (uint64_t)v66;
  uint64_t v46 = v67;
  uint64_t v47 = v68;
  if (!v44) {
    return 0;
  }
  if (*v40 == *v43 && v41 == v44) {
    goto LABEL_18;
  }
  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v48) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_10033F430(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10033F478(uint64_t a1)
{
  uint64_t v2[8] = a1;
  v2[9] = v1;
  type metadata accessor for MainActor();
  v2[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10033F510, v4, v3);
}

uint64_t sub_10033F510()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = (void *)v0[8];
  swift_release();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_10034030C;
  *(void *)(v5 + 24) = v4;
  v0[6] = sub_10001AC84;
  v0[7] = v5;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1003F44E4;
  v0[5] = &unk_1007A6408;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_retain();
  id v7 = v2;
  swift_retain();
  swift_release();
  [v3 performBlockAndWait:v6];
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  return result;
}

void sub_10033F6C0(unint64_t a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)type metadata accessor for URL();
  os_log_type_t v73 = (void (**)(char *, uint64_t, uint64_t, void))*(v6 - 1);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v59 - v10;
  id v12 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 initWithEntityName:v13];

  [v14 setIncludesPropertyValues:0];
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  type metadata accessor for JournalEntryMO();
  unint64_t v78 = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v74 = v1;
  if (v1)
  {

    uint64_t v16 = v74;
LABEL_17:
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1006D6280;
    uint64_t aBlock = 0;
    unint64_t v81 = 0xE000000000000000;
    v33._uint64_t countAndFlagsBits = 0x7265206863746546;
    v33._object = (void *)0xEC00000020726F72;
    String.append(_:)(v33);
    v82[4] = v16;
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v34 = aBlock;
    unint64_t v35 = v81;
    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 32) = v34;
    *(void *)(v32 + 40) = v35;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  uint64_t v17 = &MPMediaItemPropertyTitle_ptr;
  id v79 = v15;
  id v65 = v14;
  id v75 = v11;
  uint64_t v76 = v6;
  if (v78 >> 62) {
    goto LABEL_40;
  }
  uint64_t v18 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v19 = v73;
    uint64_t v20 = (uint64_t)v17;
    uint64_t v21 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v71 = v8;
    if (!v18) {
      break;
    }
    uint64_t v72 = v5;
    if (v18 < 1)
    {
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v36) {
        goto LABEL_43;
      }
LABEL_20:
      sub_100010218((uint64_t *)&unk_1007FC0F0);
      uint64_t v37 = swift_allocObject();
      uint64_t v64 = (const void *)v36;
      uint64_t v38 = (void *)v37;
      *(_OWORD *)(v37 + 16) = xmmword_1006D6280;
      uint64_t aBlock = 0;
      unint64_t v81 = 0xE000000000000000;
      _StringGuts.grow(_:)(56);
      v39._uint64_t countAndFlagsBits = 0x3A474E494E524157;
      v39._object = (void *)0xE900000000000020;
      String.append(_:)(v39);
      v40._uint64_t countAndFlagsBits = Array.description.getter();
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      v41._uint64_t countAndFlagsBits = (uint64_t)v6 + 26;
      v41._object = (void *)0x8000000100699670;
      String.append(_:)(v41);
      uint64_t v42 = aBlock;
      unint64_t v43 = v81;
      v38[7] = &type metadata for String;
      v38[4] = v42;
      v38[5] = v43;
      print(_:separator:terminator:)();
      uint64_t v17 = v64;
      swift_bridgeObjectRelease();
      a1 = 0;
      uint64_t v77 = (unsigned int (**)(char *, uint64_t, void *))(v19 + 6);
      unint64_t v78 = v8 & 0xC000000000000001;
      uint64_t v68 = (void (**)(uint64_t, uint64_t, void *))(v19 + 2);
      uint64_t v69 = (void (**)(char *, char *, void *))(v19 + 4);
      os_log_type_t v73 = v19 + 7;
      uint64_t v74 = v8 & 0xFFFFFFFFFFFFFF8;
      *(void *)&long long v44 = 136315138;
      long long v63 = v44;
      uint64_t v67 = (void (**)(uint64_t, void *))(v19 + 1);
      uint64_t v66 = (unint64_t)(v19 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v62 = (char *)&type metadata for Any + 8;
      uint64_t v72 = v5;
      uint64_t v70 = v8;
      while (2)
      {
        if (v78)
        {
          uint64_t v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (a1 >= *(void *)(v74 + 16)) {
            goto LABEL_39;
          }
          uint64_t v45 = *(id *)(v8 + 8 * a1 + 32);
        }
        uint64_t v6 = v45;
        uint64_t v46 = (const void *)(a1 + 1);
        if (__OFADD__(a1, 1)) {
          goto LABEL_38;
        }
        sub_1005E63B4();
        if (v47)
        {
          type metadata accessor for Journaling();
          sub_1005E6B0C((uint64_t)v5);
          swift_bridgeObjectRelease();
          char v48 = v76;
          if ((*v77)(v5, 1, v76) != 1)
          {
            uint64_t v49 = (uint64_t)v75;
            (*v69)(v75, v5, v48);
            if (qword_1007F7EA8 != -1) {
              swift_once();
            }
            uint64_t v50 = type metadata accessor for Logger();
            sub_100026A54(v50, (uint64_t)qword_100813200);
            uint64_t v51 = v71;
            (*v68)(v71, v49, v48);
            uint64_t v52 = Logger.logObject.getter();
            os_log_type_t v53 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v52, v53))
            {
              uint64_t v54 = swift_slowAlloc();
              uint64_t aBlock = swift_slowAlloc();
              *(_DWORD *)uint64_t v54 = v63;
              sub_1000FBCDC();
              uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v54 + 4) = sub_10011EA98(v55, v56, &aBlock);
              swift_bridgeObjectRelease();
              uint64_t v57 = *v67;
              (*v67)(v51, v76);
              _os_log_impl((void *)&_mh_execute_header, v52, v53, "Deleting asset attachments directory: %s", (uint8_t *)v54, 0xCu);
              swift_arrayDestroy();
              char v48 = v76;
              swift_slowDealloc();
              uint64_t v17 = v64;
              swift_slowDealloc();
            }
            else
            {
              uint64_t v57 = *v67;
              (*v67)(v51, v48);
            }

            uint64_t v58 = (uint64_t)v75;
            sub_1005E7890((uint64_t)v75);
            v57(v58, v48);
            uint64_t v5 = v72;
            uint64_t v8 = v70;
LABEL_23:
            [v79 deleteObject:v6];

            ++a1;
            if (v46 == v17) {
              goto LABEL_43;
            }
            continue;
          }
        }
        else
        {
          (*v73)(v5, 1, 1, v76);
        }
        break;
      }
      sub_100052EAC((uint64_t)v5);
      goto LABEL_23;
    }
    uint64_t v22 = 0;
    uint64_t v77 = (unsigned int (**)(char *, uint64_t, void *))(v78 & 0xC000000000000001);
    uint64_t v6 = v82;
    while (1)
    {
      id v23 = v77 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v78 + 8 * v22 + 32);
      uint64_t v24 = v23;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a1;
      *(void *)(v25 + 24) = v24;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_10034034C;
      *(void *)(v8 + 24) = v25;
      v82[2] = sub_10001B3DC;
      v82[3] = v8;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v81 = 1107296256;
      v82[0] = sub_1003F44E4;
      v82[1] = &unk_1007A6480;
      uint64_t v17 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v5 = v24;
      swift_retain();
      swift_release();
      [v79 performBlockAndWait:v17];
      _Block_release(v17);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        break;
      }
      if (v18 == ++v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v72;
        uint64_t v19 = v73;
        uint64_t v21 = &selRef_drawMapRect_zoomScale_inContext_;
        uint64_t v20 = 0x10078B000;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v6 = (void *)0xD000000000000013;
  id v27 = objc_allocWithZone(*(Class *)(v20 + 1576));
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v27 v21[239] v28];

  [v29 setIncludesPropertyValues:0];
  type metadata accessor for JournalEntryAssetMO();
  uint64_t v30 = v74;
  unint64_t v31 = NSManagedObjectContext.fetch<A>(_:)();
  if (v30)
  {

    uint64_t v16 = v30;
    goto LABEL_17;
  }
  uint64_t v8 = v31;
  uint64_t v61 = 0;
  id v60 = v29;
  if (v31 >> 62) {
    goto LABEL_42;
  }
  uint64_t v36 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v36) {
    goto LABEL_20;
  }
LABEL_43:

  swift_bridgeObjectRelease();
}

unint64_t sub_1003400B0()
{
  id v1 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 initWithEntityName:v2];

  [v3 setIncludesPropertyValues:0];
  type metadata accessor for JournalEntryMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  if (v0)
  {

    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
    v6._uint64_t countAndFlagsBits = 0x7265206863746546;
    v6._object = (void *)0xEC00000020726F72;
    String.append(_:)(v6);
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    _print_unlocked<A, B>(_:_:)();
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0xE000000000000000;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  unint64_t v7 = result;
  if (!(result >> 62))
  {
    uint64_t v8 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_5;
    }
LABEL_12:

    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_12;
  }
LABEL_5:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v7 + 8 * i + 32);
      }
      uint64_t v11 = v10;
      [v10 setIsRemovedFromCloud:1];
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id sub_10034030C()
{
  return [*(id *)(v0 + 24) setIsRemovedFromCloud:1];
}

uint64_t sub_100340320()
{
  return swift_deallocObject();
}

uint64_t sub_100340330(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100340340()
{
  return swift_release();
}

id sub_10034034C()
{
  return sub_100036FD8(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_100340354()
{
  return swift_deallocObject();
}

uint64_t sub_10034036C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v3 - 8);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for UUID();
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  Swift::String v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100809028);
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptViewModelSegment(0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1003418EC();
  uint64_t v13 = (uint64_t)v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  Swift::String v40 = a1;
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  uint64_t v14 = v36;
  uint64_t v15 = v39;
  char v44 = 0;
  sub_1002719CC((unint64_t *)&unk_100811820);
  uint64_t v17 = v37;
  uint64_t v16 = (uint64_t)v38;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v19 = v15;
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v17);
  uint64_t v21 = v9;
  if (v20 == 1)
  {
    UUID.init()();
    sub_1000ADA74(v16);
    uint64_t v22 = v6;
    id v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  }
  else
  {
    id v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v23(v6, v16, v17);
    uint64_t v22 = v6;
  }
  uint64_t v24 = (uint64_t)v34;
  v23(v34, (uint64_t)v22, v17);
  char v43 = 1;
  uint64_t v25 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v26 = v33;
  id v27 = (uint64_t *)(v24 + *(int *)(v33 + 20));
  *id v27 = v25;
  v27[1] = v28;
  char v42 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  *(void *)(v24 + *(int *)(v26 + 24)) = v29;
  char v41 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v7);
  *(void *)(v24 + *(int *)(v26 + 28)) = v31;
  sub_100140F00(v24, v14);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v40);
  return sub_100341940(v24, type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_100340810(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100809038);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_1003418EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  sub_1002719CC(&qword_1007FDC58);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for TranscriptViewModelSegment(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100340A10()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100340A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100341DAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100340AB8(uint64_t a1)
{
  unint64_t v2 = sub_1003418EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100340AF4(uint64_t a1)
{
  unint64_t v2 = sub_1003418EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100340B30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10034036C(a1, a2);
}

uint64_t sub_100340B48(void *a1)
{
  return sub_100340810(a1);
}

BOOL static TranscriptionState.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TranscriptionState.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TranscriptionState.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

unint64_t sub_100340BE8()
{
  unint64_t result = qword_100808EE0;
  if (!qword_100808EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100808EE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100340D08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionState()
{
  return &type metadata for TranscriptionState;
}

uint64_t *sub_100340D40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Transcriber.MultisegmentResult();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100340E3C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for Transcriber.MultisegmentResult();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100340EB8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Transcriber.MultisegmentResult();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100340F70(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100341940((uint64_t)a1, type metadata accessor for TranscriptionUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Transcriber.MultisegmentResult();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for TranscriptionUpdate(uint64_t a1)
{
  return sub_10003352C(a1, qword_100808F58);
}

void *sub_10034106C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Transcriber.MultisegmentResult();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100341124(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100341940((uint64_t)a1, type metadata accessor for TranscriptionUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Transcriber.MultisegmentResult();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100341204()
{
  uint64_t result = type metadata accessor for Transcriber.MultisegmentResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100341298(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100341384(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003413FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100341498(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10034154C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003415DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10034167C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100341690);
}

uint64_t sub_100341690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100341754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100341768);
}

uint64_t sub_100341768(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptViewModelSegment(uint64_t a1)
{
  return sub_10003352C(a1, qword_100808FE8);
}

uint64_t sub_100341848()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1003418EC()
{
  unint64_t result = qword_100809030;
  if (!qword_100809030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809030);
  }
  return result;
}

uint64_t sub_100341940(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_1003419A0(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  unsigned int v4 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v10 & 1) != 0))
  {
    if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])) {
      return *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7]);
    }
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *BOOL result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100341B10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionError()
{
  return &type metadata for TranscriptionError;
}

unsigned char *storeEnumTagSinglePayload for TranscriptViewModelSegment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *BOOL result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100341C14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewModelSegment.CodingKeys()
{
  return &type metadata for TranscriptViewModelSegment.CodingKeys;
}

unint64_t sub_100341C50()
{
  unint64_t result = qword_100809040;
  if (!qword_100809040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809040);
  }
  return result;
}

unint64_t sub_100341CA8()
{
  unint64_t result = qword_100809048;
  if (!qword_100809048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809048);
  }
  return result;
}

unint64_t sub_100341D00()
{
  unint64_t result = qword_100809050;
  if (!qword_100809050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809050);
  }
  return result;
}

unint64_t sub_100341D58()
{
  unint64_t result = qword_100809058;
  if (!qword_100809058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809058);
  }
  return result;
}

uint64_t sub_100341DAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_100341F50()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_10034558C();
  }
}

void sub_100341FA4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (char *)Strong;
    id v2 = [self sharedApplication];
    sub_10031F2EC();
    id v4 = v3;
    while (v4)
    {
      id v6 = [v4 presentedViewController];
      if (v6)
      {
        uint64_t v7 = v4;
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = v6;

          id v6 = [v7 presentedViewController];
        }
        while (v6);
        id v4 = v7;
      }
      else
      {
        uint64_t v7 = v4;
      }
      self;
      BOOL v9 = (void *)swift_dynamicCastObjCClass();
      if (v9)
      {
        uint64_t v5 = &selRef_topViewController;
      }
      else
      {
        self;
        BOOL v9 = (void *)swift_dynamicCastObjCClass();
        if (!v9) {
          break;
        }
        uint64_t v5 = &selRef_selectedViewController;
      }
      id v4 = [v9 *v5];
    }
    type metadata accessor for LocationPickerCollectionViewController(0);
    char v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    v10[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_currentLocOption] = 1;
    id v11 = *(id *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation];
    if (v11) {
      id v11 = [v11 location];
    }
    uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_locationToChange];
    *(void *)&v10[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_locationToChange] = v11;

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v4;
    uint64_t v14 = (id (**)())&v10[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_newLocationIsCanceled];
    char *v14 = sub_100349350;
    v14[1] = (id (*)())v13;
    id v15 = v4;
    swift_release();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v4;
    uint64_t v18 = (void (**)(void *))&v10[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_newLocationIsSelected];
    uint64_t v19 = *(void *)&v10[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_newLocationIsSelected];
    *uint64_t v18 = sub_100349374;
    v18[1] = (void (*)(void *))v17;
    id v20 = v15;
    sub_10001ABB8(v19);
    if (v4)
    {
      [v20 presentViewController:v10 animated:1 completion:0];
    }
  }
}

void sub_100342270(void *a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = Strong;
    if (a3)
    {
      uint64_t v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = a1;
      aBlock[4] = sub_100349380;
      void aBlock[5] = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      uint64_t aBlock[3] = &unk_1007A6918;
      BOOL v9 = _Block_copy(aBlock);
      id v10 = a1;
      swift_release();
      [a3 dismissViewControllerAnimated:1 completion:v9];

      _Block_release(v9);
    }
    else
    {
    }
  }
}

void sub_1003423B4(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v140 - v7;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v140 - v13;
  __chkstk_darwin(v15);
  uint64_t v151 = (uint64_t)&v140 - v16;
  __chkstk_darwin(v17);
  uint64_t v150 = (uint64_t)&v140 - v18;
  uint64_t v19 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v19 - 8);
  uint64_t v154 = (uint64_t)&v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  Class v153 = (void (**)(uint64_t, uint64_t, uint64_t, int *))*((void *)v21 - 1);
  __chkstk_darwin(v21);
  uint64_t v148 = (uint64_t)&v140 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v149 = (uint64_t)&v140 - v24;
  __chkstk_darwin(v25);
  id v27 = (uint64_t *)((char *)&v140 - v26);
  uint64_t v28 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v140 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v32 = (char *)Strong;
  uint64_t v145 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation;
  double v146 = v8;
  uint64_t v33 = *(void **)(Strong + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation);
  unint64_t v152 = v32;
  if (v33)
  {
    [v33 coordinate];
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v38 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v30, 1, 1, v38);
    uint64_t v39 = swift_allocObject();
    os_log_type_t v147 = v27;
    uint64_t v40 = v39;
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    char v41 = a2;
    uint64_t v42 = static MainActor.shared.getter();
    char v43 = a2;
    char v44 = v21;
    uint64_t v45 = v14;
    uint64_t v46 = v11;
    uint64_t v47 = v5;
    char v48 = (void *)swift_allocObject();
    v48[2] = v42;
    v48[3] = &protocol witness table for MainActor;
    v48[4] = v40;
    v48[5] = v35;
    v48[6] = v37;
    v48[7] = v41;
    uint64_t v32 = v152;
    uint64_t v49 = (uint64_t)v147;
    swift_release();
    uint64_t v50 = (uint64_t)v48;
    uint64_t v5 = v47;
    id v11 = v46;
    uint64_t v14 = v45;
    uint64_t v21 = v44;
    a2 = v43;
    id v27 = (uint64_t *)v49;
    sub_100328A60((uint64_t)v30, (uint64_t)&unk_100809148, v50);
    swift_release();
  }
  if (!*(void *)&a2[OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata])
  {
    uint64_t v51 = v154;
    v153[7](v154, 1, 1, v21);
    goto LABEL_10;
  }
  swift_retain();
  uint64_t v51 = v154;
  sub_10003C3B8(v154);
  swift_release();
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v153[6])(v51, 1, v21) == 1)
  {
LABEL_10:

    sub_10001457C(v51, &qword_1007F9F50);
    return;
  }
  id v144 = v11;
  Class v153 = (void (**)(uint64_t, uint64_t, uint64_t, int *))v5;
  sub_10009C54C(v51, (uint64_t)v27);
  uint64_t v52 = *v27;
  uint64_t v53 = v27[1];
  uint64_t v54 = v27[2];
  uint64_t v55 = (void *)v27[3];
  unint64_t v56 = v27;
  uint64_t v57 = v27[4];
  uint64_t v58 = v56[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = v52;
  id v60 = v152;
  uint64_t v154 = v57;
  sub_100345428(v59, v53, v54, v55, v57, v58, v58 != 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v61 = (double *)((char *)v56 + v21[10]);
  if (((_BYTE)v61[1] & 1) != 0
    || (uint64_t v62 = (double *)((char *)v56 + v21[11]), v63 = (uint64_t)v146, ((_BYTE)v62[1] & 1) != 0))
  {
    sub_10003F884((uint64_t)v56);

    return;
  }
  double v64 = *v61;
  double v65 = *v62;
  id v142 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:*v61 longitude:*v62];
  sub_10001B220((uint64_t)v56 + v21[9], v150, (uint64_t *)&unk_1007FC470);
  uint64_t v66 = v149;
  sub_10003F820((uint64_t)v56, v149);
  uint64_t v143 = v14;
  if (!v58)
  {
    uint64_t v67 = v66 + v21[13];
    unint64_t v68 = *(void *)(v67 + 8);
    if (v68 >> 60 != 15
      && (uint64_t v69 = *(void *)v67,
          sub_100040D64(*(void *)v67, *(void *)(v67 + 8)),
          uint64_t v70 = (void *)sub_10003F8E0(v69, v68),
          sub_100040DBC(v69, v68),
          v70)
      && (id v71 = [v70 _firstLocalizedCategoryName],
          v70,
          v71))
    {
      uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v73;

      uint64_t v74 = v148;
      sub_10003F820(v66, v148);
      if (v58)
      {
        uint64_t v154 = v72;
LABEL_25:
        sub_10003F884(v74);
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v74 = v148;
      sub_10003F820(v66, v148);
    }
    uint64_t v75 = v74 + v21[13];
    unint64_t v76 = *(void *)(v75 + 8);
    if (v76 >> 60 != 15
      && (uint64_t v77 = *(void *)v75,
          sub_100040D64(*(void *)v75, *(void *)(v75 + 8)),
          unint64_t v78 = (void *)sub_10003F8E0(v77, v76),
          sub_100040DBC(v77, v76),
          v78)
      && (id v79 = [v78 pointOfInterestCategory], v78, v79))
    {
      uint64_t v154 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v80;
    }
    else
    {
      uint64_t v154 = 0;
      uint64_t v58 = 0;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
LABEL_26:
  uint64_t v81 = v63;
  sub_10003F884(v66);
  uint64_t v82 = *v56;
  uint64_t v83 = v56[1];
  uint64_t v84 = v56[3];
  uint64_t v148 = v56[2];
  uint64_t v149 = v82;
  uint64_t v85 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v151, 1, 1, v85);
  uint64_t v86 = v21[12];
  os_log_type_t v147 = v56;
  os_log_type_t v87 = (uint64_t *)((char *)v56 + v86);
  unint64_t v88 = v87[1];
  uint64_t v140 = v84;
  if (v88 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = v83;
    swift_bridgeObjectRetain();
    id v141 = 0;
  }
  else
  {
    uint64_t v90 = *v87;
    swift_bridgeObjectRetain();
    uint64_t v89 = v83;
    swift_bridgeObjectRetain();
    sub_100040F10(v90, v88);
    id v141 = (id)sub_10003F8F4(v90, v88);
    sub_100040DBC(v90, v88);
  }
  v91._uint64_t countAndFlagsBits = Double.description.getter();
  unint64_t v155 = 0xD00000000000001FLL;
  unint64_t v156 = 0x800000010068BD20;
  String.append(_:)(v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v92._uint64_t countAndFlagsBits = 44;
  v92._object = (void *)0xE100000000000000;
  String.append(_:)(v92);
  swift_bridgeObjectRelease();
  unint64_t v93 = v155;
  unint64_t v94 = v156;
  uint64_t v95 = Double.description.getter();
  uint64_t v97 = v96;
  unint64_t v155 = v93;
  unint64_t v156 = v94;
  swift_bridgeObjectRetain();
  v98._uint64_t countAndFlagsBits = v95;
  v98._object = v97;
  String.append(_:)(v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v99 = v63;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v100 = (uint64_t)v143;
  sub_10001B220(v151, (uint64_t)v143, (uint64_t *)&unk_1007FC470);
  uint64_t v101 = (uint64_t)v144;
  sub_10001B220(v150, (uint64_t)v144, (uint64_t *)&unk_1007FC470);
  uint64_t v102 = v81;
  uint64_t v103 = (uint64_t)v153;
  sub_10001B220(v102, (uint64_t)v153, (uint64_t *)&unk_100800A60);
  id v104 = objc_allocWithZone((Class)type metadata accessor for StyledMKPointAnnotation());
  id v105 = v141;
  id v106 = v141;
  swift_bridgeObjectRetain();
  uint64_t v107 = v140;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v108 = sub_100192088(v149, v89, v148, v107, v154, v58, v100, v101, v105, v103);

  [v108 setCoordinate:v64, v65];
  unint64_t v109 = v142;
  [v108 setLocation:v142];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001457C(v99, (uint64_t *)&unk_100800A60);
  sub_10001457C(v151, (uint64_t *)&unk_1007FC470);
  uint64_t v110 = v152;
  uint64_t v111 = v145;
  uint64_t v112 = *(void **)&v152[v145];
  if (v112)
  {
    id v113 = [v112 location];
    if (v113)
    {
      uint64_t v114 = v113;
      [v113 coordinate];
      double v116 = v115;
      double v118 = v117;

      sub_1001186A0(v116, v118);
    }
  }
  uint64_t v119 = v110;
  uint64_t v120 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView;
  NSString v121 = *(char **)&v119[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView];
  uint64_t v122 = &v121[OBJC_IVAR____TtC7Journal12MapAssetView_locations];
  swift_beginAccess();
  Swift::Int v123 = *(void **)v122;
  id v124 = v121;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v122 = v123;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    Swift::Int v123 = sub_1002A5A10(0, v123[2] + 1, 1, v123);
    *(void *)uint64_t v122 = v123;
  }
  unint64_t v127 = v123[2];
  unint64_t v126 = v123[3];
  if (v127 >= v126 >> 1)
  {
    Swift::Int v123 = sub_1002A5A10((void *)(v126 > 1), v127 + 1, 1, v123);
    *(void *)uint64_t v122 = v123;
  }
  v123[2] = v127 + 1;
  unint64_t v128 = (double *)&v123[2 * v127];
  v128[4] = v64;
  v128[5] = v65;
  swift_endAccess();
  sub_1001184E0();

  unint64_t v129 = v152;
  id v130 = *(id *)&v152[v120];
  id v131 = v108;
  sub_10034830C(v131, (uint64_t)v130);

  unint64_t v132 = *(void **)&v129[v111];
  if (v132)
  {
    uint64_t v133 = *(void **)&v129[v120];
    id v134 = v132;
    id v135 = v133;
    [v134 coordinate];
    double v137 = v136;
    double v139 = v138;
    swift_beginAccess();
    sub_1000F21BC(v137, v139);
    swift_endAccess();
    swift_unknownObjectRelease();
    [*(id *)&v135[OBJC_IVAR____TtC7Journal12MapAssetView_mapView] removeAnnotation:v134];
  }
  *(void *)(*(void *)&v129[v120] + OBJC_IVAR____TtC7Journal12MapAssetView_newReplacementAnnotation) = v131;

  swift_unknownObjectRelease();
  sub_10001457C(v150, (uint64_t *)&unk_1007FC470);
  sub_10003F884((uint64_t)v147);
}

uint64_t sub_100342FD4(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(*(void *)(v1 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView)
            + OBJC_IVAR____TtC7Journal12MapAssetView_delegate
            + 8) = &off_1007A6658;
  swift_unknownObjectWeakAssign();
  sub_10011428C(a1, 1);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100349338;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A6878;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1003432A4()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_cardView;
    uint64_t v3 = *(void **)&Strong[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_cardView];
    [Strong addSubview:v3];
    uint64_t v4 = qword_1007F7300;
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    double v6 = *(double *)&qword_10083D910;
    id v7 = [v5 superview];
    uint64_t v8 = &stru_1007D7000;
    if (v7)
    {
      uint64_t v9 = v7;
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v10 = [v5 leadingAnchor];
      id v11 = [v9 leadingAnchor];
      id v12 = [v10 constraintEqualToAnchor:v11];

      [v12 setConstant:v6];
      if (v12)
      {
        id v12 = v12;
        [v12 setActive:1];

        uint64_t v9 = v12;
      }

      uint64_t v8 = &stru_1007D7000;
    }
    else
    {
      id v12 = 0;
    }

    double v13 = *(double *)&qword_10083D910;
    id v14 = *(id *)&v1[v2];
    id v15 = [v14 superview];
    if (v15)
    {
      uint64_t v16 = v15;
      [v14 v8[96].name];
      id v17 = [v14 trailingAnchor];
      id v18 = [v16 trailingAnchor];
      id v19 = [v17 constraintEqualToAnchor:v18];

      [v19 setConstant:-v13];
      if (v19)
      {
        id v19 = v19;
        [v19 setActive:1];

        uint64_t v16 = v19;
      }

      uint64_t v8 = &stru_1007D7000;
    }
    else
    {
      id v19 = 0;
    }

    uint64_t v20 = *(void **)&v1[v2];
    uint64_t v21 = self;
    id v22 = v20;
    id v23 = [v21 mainScreen];
    [v23 bounds];
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    CGFloat v31 = v30;

    v277.origin.CGFloat x = v25;
    v277.origin.CGFloat y = v27;
    v277.size.CGFloat width = v29;
    v277.size.CGFloat height = v31;
    CGFloat v32 = CGRectGetHeight(v277) * 0.66;
    [v22 v8[96].name];
    id v33 = [v22 heightAnchor];
    id v34 = [v33 constraintEqualToConstant:v32];

    [v34 setActive:1];
    id v35 = *(id *)&v1[v2];
    id v36 = [v35 superview];
    if (v36)
    {
      uint64_t v37 = v36;
      [v35 v8[96].name];
      id v38 = [v35 centerYAnchor];
      id v39 = [v37 centerYAnchor];
      id v40 = [v38 constraintEqualToAnchor:v39];

      [v40 setConstant:0.0];
      if (v40)
      {
        id v40 = v40;
        [v40 setActive:1];

        uint64_t v37 = v40;
      }
      char v41 = &stru_1007D7000;
    }
    else
    {
      id v40 = 0;
      char v41 = &stru_1007D7000;
    }

    uint64_t v42 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView;
    id v43 = [*(id *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView] layer];
    if (qword_1007F7CA0 != -1) {
      swift_once();
    }
    long long v270 = xmmword_10083E9C0;
    long long v271 = *(_OWORD *)&qword_10083E9D0;
    long long v272 = xmmword_10083E9E0;
    long long v273 = *(_OWORD *)&qword_10083E9F0;
    [v43 setCornerRadii:&v270];

    id v44 = [objc_allocWithZone((Class)UIStackView) init];
    [v44 setUserInteractionEnabled:1];
    [v44 setAxis:1];
    [v44 setAlignment:3];
    if (qword_1007F72F8 != -1) {
      swift_once();
    }
    id v258 = v44;
    [v44 setSpacing:*(double *)&qword_10083D908];
    uint64_t v45 = *(void **)&v1[v42];
    [v1[v2] v41[63].imp:v45];
    id v46 = [v45 layer];
    long long v270 = xmmword_10083E9C0;
    long long v271 = *(_OWORD *)&qword_10083E9D0;
    long long v272 = xmmword_10083E9E0;
    long long v273 = *(_OWORD *)&qword_10083E9F0;
    [v46 setCornerRadii:&v270];

    id v47 = *(id *)&v1[v42];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    uint64_t v48 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView;
    uint64_t v49 = *(void **)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView];
    [v1[v2] v41[63].imp:v49];
    id v50 = [v49 layer];
    long long v270 = xmmword_10083E9C0;
    long long v271 = *(_OWORD *)&qword_10083E9D0;
    long long v272 = xmmword_10083E9E0;
    long long v273 = *(_OWORD *)&qword_10083E9F0;
    [v50 setCornerRadii:&v270];

    id v51 = [*(id *)&v1[v48] layer];
    [v51 setMasksToBounds:1];

    uint64_t v262 = v48;
    id v52 = *(id *)&v1[v48];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    uint64_t v53 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_blurEffectView;
    uint64_t v54 = *(void **)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_blurEffectView];
    uint64_t v55 = self;
    id v56 = v54;
    id v263 = v55;
    id v57 = [v55 clearColor];
    [v56 setBackgroundColor:v57];

    uint64_t v58 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView;
    uint64_t v59 = *(void **)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView];
    id v60 = *(id *)&v1[v53];
    [v59 bounds];
    [v60 setFrame:];

    uint64_t v61 = *(void **)&v1[v53];
    [v61 setAutoresizingMask:18];
    uint64_t v62 = qword_1007F73C8;
    id v63 = v61;
    if (v62 != -1) {
      swift_once();
    }
    [v63 _setCornerRadius:*(double *)&qword_10083D9D8];

    [*(id *)&v1[v58] insertSubview:*(void *)&v1[v53] atIndex:0];
    uint64_t v64 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel;
    [*(id *)&v1[v58] setPlaceNameLabel:*(void *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel]];
    double v65 = *(void **)&v1[v58];
    uint64_t v66 = v58;
    uint64_t v67 = v1;
    uint64_t v68 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeAddressLabel;
    [v65 setPlaceAddressLabel:v67[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeAddressLabel]];
    uint64_t v266 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeInfoLabel;
    [*(id *)&v67[v66] v41[63].imp:*(void *)&v67[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeInfoLabel]];
    uint64_t v265 = v66;
    id v69 = [*(id *)&v67[v66] layer];
    [v69 setCornerRadius:*(double *)&qword_10083D9D8];

    uint64_t v269 = v64;
    uint64_t v70 = qword_1007F7268;
    id v71 = *(id *)&v67[v64];
    if (v70 != -1) {
      swift_once();
    }
    [v71 setFont:qword_10083D830];

    uint64_t v72 = qword_1007F7270;
    id v73 = *(id *)&v67[v68];
    if (v72 != -1) {
      swift_once();
    }
    uint64_t v268 = v68;
    uint64_t v257 = v53;
    [v73 setFont:qword_10083D838];

    uint64_t v74 = qword_1007F7290;
    id v75 = *(id *)&v67[v266];
    unint64_t v76 = v67;
    if (v74 != -1) {
      swift_once();
    }
    [v75 setFont:qword_10083D858];

    id v77 = *(id *)&v67[v64];
    id v78 = [v263 labelColor];
    [v77 setTextColor:v78];

    [v77 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    [v77 setAdjustsFontForContentSizeCategory:1];
    [v77 setNumberOfLines:0];
    [v77 setLineBreakMode:4];
    [v77 setTextAlignment:1];

    id v79 = *(id *)&v67[v268];
    id v80 = [v263 labelColor];
    [v79 setTextColor:v80];

    [v79 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    [v79 setAdjustsFontForContentSizeCategory:1];
    [v79 setNumberOfLines:1];
    [v79 setLineBreakMode:4];
    [v79 setTextAlignment:1];

    id v81 = *(id *)&v67[v266];
    id v82 = [v263 secondaryLabelColor];
    [v81 setTextColor:v82];

    [v81 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    [v81 setAdjustsFontForContentSizeCategory:1];
    [v81 setNumberOfLines:1];
    [v81 setLineBreakMode:4];
    [v81 setTextAlignment:1];

    double v83 = *(double *)&qword_10083D908;
    id v84 = *(id *)&v67[v64];
    id v85 = [v84 superview];
    if (v85)
    {
      uint64_t v86 = v85;
      [v84 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v87 = [v84 topAnchor];
      id v88 = [v86 topAnchor];
      id v89 = [v87 constraintEqualToAnchor:v88];

      [v89 setConstant:v83];
      if (v89)
      {
        id v89 = v89;
        [v89 setActive:1];

        uint64_t v86 = v89;
      }
    }
    else
    {
      id v89 = 0;
    }

    uint64_t v90 = *(void **)((char *)v76 + v268);
    id v91 = *(id *)((char *)v76 + v269);
    id v92 = v90;
    [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v93 = [v91 bottomAnchor];
    id v94 = [v92 topAnchor];
    id v95 = [v93 constraintEqualToAnchor:v94];

    [v95 setConstant:0.0];
    [v95 setActive:1];

    os_log_type_t v96 = *(void **)((char *)v76 + v268);
    uint64_t v97 = qword_1007F7310;
    id v98 = *(id *)((char *)v76 + v266);
    id v99 = v96;
    if (v97 != -1) {
      swift_once();
    }
    double v100 = *(double *)&qword_10083D920;
    [v98 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v101 = [v98 topAnchor];
    id v102 = [v99 bottomAnchor];
    id v103 = [v101 constraintEqualToAnchor:v102];

    [v103 setConstant:v100];
    [v103 setActive:1];

    double v104 = *(double *)&qword_10083D908;
    id v105 = *(id *)((char *)v76 + v266);
    id v106 = sub_1001DD438(0, 1, v104);

    double v107 = *(double *)&qword_10083D908;
    id v108 = *(id *)((char *)v76 + v269);
    id v109 = [v108 superview];
    if (v109)
    {
      uint64_t v110 = v109;
      [v108 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v111 = [v108 leadingAnchor];
      id v112 = [v110 leadingAnchor];
      id v113 = [v111 constraintGreaterThanOrEqualToAnchor:v112];

      [v113 setConstant:v107];
      if (v113)
      {
        id v113 = v113;
        [v113 setActive:1];

        uint64_t v110 = v113;
      }
      uint64_t v114 = v266;
    }
    else
    {
      id v113 = 0;
      uint64_t v114 = v266;
    }

    double v115 = *(double *)&qword_10083D908;
    id v116 = *(id *)((char *)v76 + v268);
    id v117 = [v116 superview];
    if (v117)
    {
      double v118 = v117;
      [v116 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v119 = [v116 leadingAnchor];
      id v120 = [v118 leadingAnchor];
      id v121 = [v119 constraintEqualToAnchor:v120];

      [v121 setConstant:v115];
      if (v121)
      {
        id v121 = v121;
        [v121 setActive:1];

        double v118 = v121;
      }
    }
    else
    {
      id v121 = 0;
    }

    double v122 = *(double *)&qword_10083D908;
    id v123 = *(id *)((char *)v76 + v268);
    id v124 = [v123 superview];
    if (v124)
    {
      uint64_t v125 = v124;
      [v123 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v126 = [v123 trailingAnchor];
      id v127 = [v125 trailingAnchor];
      id v128 = [v126 constraintEqualToAnchor:v127];

      [v128 setConstant:-v122];
      if (v128)
      {
        id v128 = v128;
        [v128 setActive:1];

        uint64_t v125 = v128;
      }
    }
    else
    {
      id v128 = 0;
    }

    double v129 = *(double *)&qword_10083D908;
    id v130 = *(id *)((char *)v76 + v114);
    id v131 = [v130 superview];
    if (v131)
    {
      unint64_t v132 = v131;
      [v130 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v133 = [v130 leadingAnchor];
      id v134 = [v132 leadingAnchor];
      id v135 = [v133 constraintEqualToAnchor:v134];

      [v135 setConstant:v129];
      if (v135)
      {
        id v135 = v135;
        double v136 = &stru_1007D7000;
        [v135 setActive:1];

        unint64_t v132 = v135;
      }
      else
      {
        double v136 = &stru_1007D7000;
      }
    }
    else
    {
      id v135 = 0;
      double v136 = &stru_1007D7000;
    }

    double v137 = *(double *)&qword_10083D908;
    id v138 = *(id *)((char *)v76 + v114);
    id v139 = [v138 superview];
    if (v139)
    {
      uint64_t v140 = v139;
      [v138 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v141 = [v138 trailingAnchor];
      id v142 = [v140 trailingAnchor];
      id v143 = [v141 constraintEqualToAnchor:v142];

      [v143 setConstant:-v137];
      if (v143)
      {
        id v143 = v143;
        [v143 v136[90].name:1];

        uint64_t v140 = v143;
      }
    }
    else
    {
      id v143 = 0;
    }

    id v144 = [v76 effectiveUserInterfaceLayoutDirection];
    id v145 = *(id *)((char *)v76 + v269);
    id v146 = [v145 superview];
    os_log_type_t v147 = v146;
    if (v144)
    {
      if (!v146) {
        goto LABEL_70;
      }
      [v145 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v148 = [v145 centerXAnchor];
      id v149 = [v147 centerXAnchor];
      id v150 = [v148 constraintGreaterThanOrEqualToAnchor:v149];
    }
    else
    {
      if (!v146) {
        goto LABEL_70;
      }
      [v145 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v148 = [v145 centerXAnchor];
      id v149 = [v147 centerXAnchor];
      id v150 = [v148 constraintLessThanOrEqualToAnchor:v149];
    }
    id v151 = v150;

    [v151 setConstant:0.0];
    id v152 = v151;
    [v152 v136[90].name:1];

LABEL_70:
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v260 = swift_allocObject();
    *(_OWORD *)(v260 + 16) = xmmword_1006D6D10;
    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    Class v153 = self;
    id v154 = [v153 mainBundle];
    v275._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v275._object = (void *)0x8000000100699850;
    v155._object = (void *)0x8000000100699830;
    v155._uint64_t countAndFlagsBits = 0xD000000000000011;
    v156._uint64_t countAndFlagsBits = 0x7469542074696445;
    v156._object = (void *)0xEA0000000000656CLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v155, (Swift::String_optional)0, (NSBundle)v154, v156, v275);

    NSString v157 = String._bridgeToObjectiveC()();
    unint64_t v158 = self;
    id v159 = [v158 systemImageNamed:v157];

    uint64_t v160 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v260 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v161 = [v153 mainBundle];
    v276._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v276._object = (void *)0x8000000100699890;
    v162._uint64_t countAndFlagsBits = 0x636F4C2074696445;
    v162._object = (void *)0xED00006E6F697461;
    v163._uint64_t countAndFlagsBits = 0;
    v163._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v162, (Swift::String_optional)0, (NSBundle)v161, v163, v276);

    NSString v164 = String._bridgeToObjectiveC()();
    id v165 = [v158 systemImageNamed:v164];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v260 + 40) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    *(void *)&long long v270 = v260;
    specialized Array._endMutation()();
    UIMenuElementSize v166 = (uint64_t)v270;
    if ((unint64_t)v270 >> 62)
    {
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      swift_bridgeObjectRetain();
      UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      UIMenuElementSize preferredElementSize = v166;
    }
    swift_bridgeObjectRelease();
    sub_10001B284(0, (unint64_t *)&unk_100809EE0);
    v168._uint64_t countAndFlagsBits = 0;
    v168._object = (void *)0xE000000000000000;
    v274.value.super.Class isa = 0;
    v274.is_nil = 0;
    v261.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v168, (Swift::String_optional)0, v274, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
    NSString v169 = String._bridgeToObjectiveC()();
    id v170 = [v158 systemImageNamed:v169];

    if (v170)
    {
      id v171 = [v263 systemIndigoColor];
      id v172 = [v170 imageWithTintColor:v171];

      id v173 = [self configurationWithFont:qword_10083D830];
      id v174 = [v172 imageWithSymbolConfiguration:v173];
    }
    else
    {
      id v174 = 0;
    }
    uint64_t v175 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_editButton;
    Class v176 = *(void **)((char *)v76 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_editButton);
    [v176 setImage:v174 forState:0];
    [v176 setMenu:v261.super.super.isa];
    [v176 setShowsMenuAsPrimaryAction:1];
    uint64_t v177 = qword_1007F7A30;
    id v178 = v176;
    if (v177 != -1) {
      swift_once();
    }
    NSString v179 = String._bridgeToObjectiveC()();
    [v178 setAccessibilityLabel:v179];

    unint64_t v180 = *(void **)((char *)v76 + v175);
    [v180 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    [*(id *)((char *)v76 + v265) addSubview:v180];
    double v181 = *(double *)&qword_10083D908;
    id v182 = v180;
    id v183 = [v182 superview];
    v264 = (char *)v175;
    if (v183)
    {
      v184 = v183;
      [v182 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v185 = [v182 trailingAnchor];
      id v186 = [v184 trailingAnchor];
      id v187 = [v185 constraintEqualToAnchor:v186];

      [v187 setConstant:-v181];
      if (v187)
      {
        id v187 = v187;
        [v187 setActive:1];

        v184 = v187;
      }

      uint64_t v175 = (uint64_t)v264;
    }
    else
    {
      id v187 = 0;
    }

    double v188 = *(double *)&qword_10083D908;
    id v189 = *(id *)((char *)v76 + v175);
    id v190 = [v189 superview];
    if (v190)
    {
      id v191 = v190;
      [v189 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v192 = [v189 topAnchor];
      id v193 = [v191 topAnchor];
      id v194 = [v192 constraintEqualToAnchor:v193];

      [v194 setConstant:v188];
      if (v194)
      {
        id v194 = v194;
        [v194 setActive:1];

        id v191 = v194;
      }

      uint64_t v175 = (uint64_t)v264;
    }
    else
    {
      id v194 = 0;
    }
    id v259 = v174;

    id v195 = *(id *)((char *)v76 + v175);
    [v195 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v196 = [v195 heightAnchor];
    id v197 = [v195 widthAnchor];
    id v198 = [v196 constraintEqualToAnchor:v197 multiplier:1.0];

    [v198 setActive:1];
    v199 = *(void **)((char *)v76 + v175);
    uint64_t v200 = qword_1007F7348;
    id v201 = *(id *)((char *)v76 + v269);
    id v202 = v199;
    if (v200 != -1) {
      swift_once();
    }
    double v203 = *(double *)&qword_10083D958;
    [v201 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v204 = [v201 trailingAnchor];
    id v205 = [v202 leadingAnchor];
    id v206 = [v204 constraintLessThanOrEqualToAnchor:v205];

    [v206 setConstant:-v203];
    [v206 setActive:1];

    [*(id *)((char *)v76 + v262) addSubview:*(void *)((char *)v76 + v265)];
    double v207 = *(double *)&qword_10083D908;
    id v208 = *(id *)((char *)v76 + v265);
    id v209 = [v208 superview];
    if (v209)
    {
      v210 = v209;
      [v208 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v211 = [v208 leadingAnchor];
      id v212 = [v210 leadingAnchor];
      id v213 = [v211 constraintEqualToAnchor:v212];

      [v213 setConstant:v207];
      if (v213)
      {
        id v213 = v213;
        [v213 setActive:1];

        v210 = v213;
      }
      uint64_t v214 = v265;
    }
    else
    {
      id v213 = 0;
      uint64_t v214 = v265;
    }

    double v215 = *(double *)&qword_10083D908;
    id v216 = *(id *)((char *)v76 + v214);
    id v217 = [v216 superview];
    if (v217)
    {
      uint64_t v218 = v217;
      [v216 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v219 = [v216 trailingAnchor];
      id v220 = [v218 trailingAnchor];
      id v221 = [v219 constraintEqualToAnchor:v220];

      [v221 setConstant:-v215];
      if (v221)
      {
        id v221 = v221;
        [v221 setActive:1];

        uint64_t v218 = v221;
      }
      uint64_t v222 = v266;
    }
    else
    {
      id v221 = 0;
      uint64_t v222 = v266;
    }

    double v223 = *(double *)&qword_10083D908;
    id v224 = *(id *)((char *)v76 + v214);
    id v225 = sub_1001DD438(0, 1, v223);

    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v226 = swift_allocObject();
    *(_OWORD *)(v226 + 16) = xmmword_1006D6270;
    uint64_t v227 = *(void **)((char *)v76 + v214);
    *(void *)(v226 + 56) = sub_10001B284(0, (unint64_t *)&qword_100802730);
    *(void *)(v226 + 32) = v227;
    unint64_t v228 = *(void **)((char *)v76 + v262);
    *(void *)(v226 + 88) = type metadata accessor for MapAssetView();
    *(void *)(v226 + 64) = v228;
    id v229 = v76;
    id v230 = v227;
    id v231 = v228;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v229 setAccessibilityElements:isa];

    Class v267 = (Class)v229;
    int v233 = *(void **)((char *)v76 + v214);
    uint64_t v234 = swift_allocObject();
    *(_OWORD *)(v234 + 16) = xmmword_1006D70D0;
    v235 = *(void **)((char *)v76 + v269);
    uint64_t v236 = sub_10001B284(0, &qword_100809128);
    *(void *)(v234 + 56) = v236;
    *(void *)(v234 + 32) = v235;
    v237 = *(void **)((char *)v76 + v268);
    *(void *)(v234 + 88) = v236;
    *(void *)(v234 + 64) = v237;
    uint64_t v238 = v222;
    v239 = *(void **)((char *)v76 + v222);
    *(void *)(v234 + 120) = v236;
    *(void *)(v234 + 96) = v239;
    v240 = *(void **)&v264[(void)v76];
    *(void *)(v234 + 152) = sub_10001B284(0, (unint64_t *)&unk_100809130);
    *(void *)(v234 + 128) = v240;
    id v241 = v233;
    id v242 = v235;
    id v243 = v237;
    id v244 = v239;
    id v245 = v240;
    Class v246 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v241 setAccessibilityElements:v246];

    UIAccessibilityTraits v247 = UIAccessibilityTraitHeader;
    id v248 = *(id *)((char *)v76 + v238);
    unint64_t v249 = (unint64_t)[v248 accessibilityTraits];
    if ((v247 & ~v249) != 0) {
      UIAccessibilityTraits v250 = v247;
    }
    else {
      UIAccessibilityTraits v250 = 0;
    }
    [v248 setAccessibilityTraits:v250 | v249];

    id v251 = [*(id *)((char *)v76 + v269) text];
    if (v251)
    {
      v252 = v251;
      Class v253 = v267;
      id v254 = v258;
      v255 = v259;
    }
    else
    {
      id v256 = [*(id *)((char *)v76 + v268) text];
      v255 = v259;
      if (!v256)
      {
        [*(id *)((char *)v76 + v257) setHidden:1];
        id v254 = *(id *)&v264[(void)v76];
        [v254 setHidden:1];
        Class v253 = v261.super.super.isa;
        v252 = v259;
        v255 = v258;
        goto LABEL_107;
      }
      v252 = v256;
      Class v253 = v267;
      id v254 = v258;
    }
    Class v267 = v261.super.super.isa;
LABEL_107:
  }
}

void sub_100345428(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    id v10 = *(void **)(v7 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel);
    if (a2) {
      NSString v11 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v11 = 0;
    }
  }
  else
  {
    if (a2)
    {
      id v12 = *(void **)(v7 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel);
      NSString v13 = String._bridgeToObjectiveC()();
      [v12 setText:v13];

      [*(id *)(v7 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeAddressLabel) setText:0];
      goto LABEL_11;
    }
    NSString v11 = 0;
    id v10 = *(void **)(v7 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel);
  }
  [v10 setText:v11];

  id v14 = *(void **)(v7 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeAddressLabel);
  if (a4) {
    a4 = String._bridgeToObjectiveC()();
  }
  [v14 setText:a4];

LABEL_11:
  id v15 = *(void **)(v7 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeInfoLabel);
  if (a6) {
    NSString v16 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v16 = 0;
  }
  id v17 = v16;
  [v15 setText:];
}

void sub_10034558C()
{
  type metadata accessor for JurassicAlertController();
  id v1 = [self mainBundle];
  v33._uint64_t countAndFlagsBits = 0xD000000000000022;
  v33._object = (void *)0x80000001006997E0;
  v2._object = (void *)0x80000001006997C0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000014;
  v3._uint64_t countAndFlagsBits = 0x7469542074696445;
  v3._object = (void *)0xEA0000000000656CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v33);

  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v4 message:0 preferredStyle:1];

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  CGFloat v31 = sub_10034912C;
  uint64_t v32 = v6;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  CGFloat v29 = sub_10007453C;
  double v30 = &unk_1007A6788;
  uint64_t v7 = _Block_copy(&aBlock);
  uint64_t v8 = v0;
  swift_release();
  [v5 addTextFieldWithConfigurationHandler:v7];
  _Block_release(v7);
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = self;
  id v11 = [v10 actionWithTitle:v9 style:1 handler:0];

  if (qword_1007F7490 != -1) {
    swift_once();
  }
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  id v14 = v5;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  CGFloat v31 = sub_100349138;
  uint64_t v32 = v13;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  CGFloat v29 = sub_10007453C;
  double v30 = &unk_1007A67D8;
  NSString v16 = _Block_copy(&aBlock);
  swift_release();
  id v17 = [v10 actionWithTitle:v15 style:0 handler:v16];
  _Block_release(v16);

  swift_release();
  uint64_t v18 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_saveAction;
  id v19 = *(void **)&v8[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_saveAction];
  *(void *)&v8[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_saveAction] = v17;

  [v14 addAction:v11];
  [v14 addAction:*(void *)&v8[v18]];
  id v20 = [self sharedApplication];
  sub_10031F2EC();
  if (v21)
  {
    id v22 = v21;
    do
    {
      id v24 = [v22 presentedViewController];
      if (v24)
      {
        do
        {
          CGFloat v25 = v24;

          id v24 = [v25 presentedViewController];
          id v22 = v25;
        }
        while (v24);
      }
      else
      {
        CGFloat v25 = v22;
      }
      self;
      double v26 = (void *)swift_dynamicCastObjCClass();
      if (v26)
      {
        id v23 = &selRef_topViewController;
      }
      else
      {
        self;
        double v26 = (void *)swift_dynamicCastObjCClass();
        if (!v26)
        {

          [v25 presentViewController:v14 animated:1 completion:0];
          goto LABEL_17;
        }
        id v23 = &selRef_selectedViewController;
      }
      id v22 = [v26 *v23];
    }
    while (v22);
  }
  CGFloat v25 = v14;
  id v14 = v11;
  id v11 = v20;
LABEL_17:
}

id sub_100345AA4(void *a1, uint64_t a2)
{
  if (qword_1007F7898 != -1) {
    swift_once();
  }
  NSString v4 = String._bridgeToObjectiveC()();
  [a1 setPlaceholder:v4];

  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel), "text"));
  [a1 setText:v5];

  return [a1 addTarget:a2 action:"textFieldDidChange:" forControlEvents:0x20000];
}

void sub_100345B94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    id v9 = [a3 textFields];
    if (v9)
    {
      id v10 = v9;
      sub_10001B284(0, &qword_100809100);
      unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v34) {
          goto LABEL_5;
        }
      }
      else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v11 & 0xC000000000000001) != 0)
        {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v12 = *(id *)(v11 + 32);
        }
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        id v14 = [v13 text];

        if (v14)
        {
          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v17 = v16;

          id v18 = *(id *)&v8[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel];
          NSString v19 = String._bridgeToObjectiveC()();
          [v18 setText:v19];

          uint64_t v20 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation;
          uint64_t v21 = *(void **)&v8[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation];
          if (v21)
          {
            [v21 coordinate];
            uint64_t v23 = v22;
            uint64_t v25 = v24;
            uint64_t v26 = type metadata accessor for TaskPriority();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
            uint64_t v27 = swift_allocObject();
            swift_unknownObjectWeakInit();
            type metadata accessor for MainActor();
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v28 = static MainActor.shared.getter();
            CGFloat v29 = (void *)swift_allocObject();
            v29[2] = v28;
            void v29[3] = &protocol witness table for MainActor;
            v29[4] = v27;
            v29[5] = v23;
            v29[6] = v25;
            v29[7] = v15;
            v29[8] = v17;
            swift_release();
            sub_100328A60((uint64_t)v6, (uint64_t)&unk_100809110, (uint64_t)v29);
            swift_release();
            uint64_t v30 = *(void *)&v8[v20];
            if (v30)
            {
              CGFloat v31 = (uint64_t *)(v30 + OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_placeName);
              *CGFloat v31 = v15;
              v31[1] = v17;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v32 = *(void **)&v8[v20];
          *(void *)(*(void *)&v8[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView]
                    + OBJC_IVAR____TtC7Journal12MapAssetView_newReplacementAnnotation) = v32;
          id v33 = v32;
          swift_unknownObjectRelease();
        }
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
LABEL_15:
  }
}

uint64_t sub_100345F04(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 120) = a7;
  *(void *)(v8 + 128) = a8;
  *(double *)(v8 + 104) = a1;
  *(double *)(v8 + 112) = a2;
  *(void *)(v8 + 96) = a6;
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 144) = v9;
  *(void *)(v8 + 152) = *(void *)(v9 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 168) = v10;
  *(void *)(v8 + 176) = *(void *)(v10 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = type metadata accessor for MainActor();
  *(void *)(v8 + 200) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 208) = v12;
  *(void *)(v8 + 216) = v11;
  return _swift_task_switch(sub_100346090, v12, v11);
}

uint64_t sub_100346090()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *((void *)v0 + 28) = Strong;
  if (Strong)
  {
    uint64_t v2 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset;
    *((void *)v0 + 29) = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset;
    Swift::String v3 = *(void **)(Strong + v2);
    *((void *)v0 + 30) = v3;
    if (v3)
    {
      v3;
      uint64_t v4 = (void *)swift_task_alloc();
      *((void *)v0 + 31) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1003464D8;
      uint64_t v6 = *((void *)v0 + 15);
      uint64_t v5 = *((void *)v0 + 16);
      double v7 = v0[13];
      double v8 = v0[14];
      return sub_100099E0C(v6, v5, v7, v8);
    }
    swift_release();
    uint64_t v31 = *((void *)v0 + 28);
    uint64_t v10 = *((void *)v0 + 22);
    uint64_t v11 = *((void *)v0 + 23);
    uint64_t v12 = *((void *)v0 + 20);
    uint64_t v32 = *((void *)v0 + 21);
    uint64_t v33 = *((void *)v0 + 29);
    uint64_t v13 = *((void *)v0 + 18);
    uint64_t v14 = *((void *)v0 + 19);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *((void *)v0 + 6) = sub_100349264;
    *((void *)v0 + 7) = v15;
    *((void *)v0 + 2) = _NSConcreteStackBlock;
    *((void *)v0 + 3) = 1107296256;
    *((void *)v0 + 4) = sub_10017D530;
    *((void *)v0 + 5) = &unk_1007A6828;
    uint64_t v16 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *((void *)v0 + 11) = _swiftEmptyArrayStorage;
    sub_10004F6A0();
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v32);
    swift_release();
    swift_release();
    uint64_t v17 = *(void **)(v31 + v33);
    if (v17)
    {
      id v18 = v17;
      char v19 = sub_10003D0C8((uint64_t)v18);

      uint64_t v20 = (void *)*((void *)v0 + 28);
      if ((v19 & 1) == 0)
      {
LABEL_13:

        goto LABEL_14;
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v21 = swift_unknownObjectWeakLoadStrong();
        uint64_t v22 = (void *)*((void *)v0 + 28);
        if (v21)
        {
          uint64_t v23 = (void *)v21;
          uint64_t v24 = *((void *)v0 + 17);
          uint64_t v25 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
          id v26 = v23;
          uint64_t v27 = static MainActor.shared.getter();
          uint64_t v28 = (void *)swift_allocObject();
          v28[2] = v27;
          void v28[3] = &protocol witness table for MainActor;
          v28[4] = v26;
          sub_100328C78(v24, (uint64_t)&unk_100809118, (uint64_t)v28);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        goto LABEL_14;
      }
    }
    uint64_t v20 = (void *)*((void *)v0 + 28);
    goto LABEL_13;
  }
  swift_release();
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  CGFloat v29 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v29();
}

uint64_t sub_1003464D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 240);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = *(void *)(v1 + 208);
  return _swift_task_switch(sub_100346618, v4, v3);
}

uint64_t sub_100346618()
{
  swift_release();
  uint64_t v1 = v0[23];
  uint64_t v21 = v0[28];
  uint64_t v22 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v23 = v0[21];
  uint64_t v24 = v0[29];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[6] = sub_100349264;
  v0[7] = v5;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_1007A6828;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[11] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v6);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v23);
  swift_release();
  swift_release();
  double v7 = *(void **)(v21 + v24);
  if (!v7) {
    goto LABEL_6;
  }
  id v8 = v7;
  char v9 = sub_10003D0C8((uint64_t)v8);

  uint64_t v10 = (void *)v0[28];
  if ((v9 & 1) == 0) {
    goto LABEL_7;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v10 = (void *)v0[28];
    if (Strong)
    {
      uint64_t v12 = (void *)Strong;
      uint64_t v13 = v0[17];
      uint64_t v14 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
      id v15 = v12;
      uint64_t v16 = static MainActor.shared.getter();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      sub_100328C78(v13, (uint64_t)&unk_100809118, (uint64_t)v17);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
LABEL_6:
    uint64_t v10 = (void *)v0[28];
  }
LABEL_7:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

id sub_100346974(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  id v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 text:v6];
  if (!v9) {
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v20[0] = v11;
  v20[1] = v13;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_100014344();
  uint64_t v14 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v17) {
    uint64_t v18 = 1;
  }
  else {
LABEL_6:
  }
    uint64_t v18 = 0;
  return [*(id *)(v2 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_saveAction) setEnabled:v18];
}

uint64_t sub_100346B58(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 120) = a7;
  *(double *)(v7 + 104) = a1;
  *(double *)(v7 + 112) = a2;
  *(void *)(v7 + 96) = a6;
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v7 + 128) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v7 + 136) = v8;
  *(void *)(v7 + 144) = *(void *)(v8 - 8);
  *(void *)(v7 + 152) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  *(void *)(v7 + 160) = v9;
  *(void *)(v7 + 168) = *(void *)(v9 - 8);
  *(void *)(v7 + 176) = swift_task_alloc();
  *(void *)(v7 + 184) = type metadata accessor for MainActor();
  *(void *)(v7 + 192) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 200) = v11;
  *(void *)(v7 + 208) = v10;
  return _swift_task_switch(sub_100346CE4, v11, v10);
}

uint64_t sub_100346CE4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *((void *)v0 + 27) = Strong;
  if (Strong)
  {
    uint64_t v2 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset;
    *((void *)v0 + 28) = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset;
    uint64_t v3 = *(void **)(Strong + v2);
    *((void *)v0 + 29) = v3;
    if (v3)
    {
      v3;
      uint64_t v4 = (void *)swift_task_alloc();
      *((void *)v0 + 30) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_10034712C;
      uint64_t v5 = *((void *)v0 + 15);
      double v6 = v0[13];
      double v7 = v0[14];
      return sub_10009937C(v5, v6, v7);
    }
    swift_release();
    uint64_t v30 = *((void *)v0 + 27);
    uint64_t v9 = *((void *)v0 + 21);
    uint64_t v10 = *((void *)v0 + 22);
    uint64_t v11 = *((void *)v0 + 19);
    uint64_t v31 = *((void *)v0 + 20);
    uint64_t v32 = *((void *)v0 + 28);
    uint64_t v12 = *((void *)v0 + 17);
    uint64_t v13 = *((void *)v0 + 18);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    CGFloat v29 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *((void *)v0 + 6) = sub_100349264;
    *((void *)v0 + 7) = v14;
    *((void *)v0 + 2) = _NSConcreteStackBlock;
    *((void *)v0 + 3) = 1107296256;
    *((void *)v0 + 4) = sub_10017D530;
    *((void *)v0 + 5) = &unk_1007A6968;
    unint64_t v15 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *((void *)v0 + 11) = _swiftEmptyArrayStorage;
    sub_10004F6A0();
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v31);
    swift_release();
    swift_release();
    unint64_t v16 = *(void **)(v30 + v32);
    if (v16)
    {
      id v17 = v16;
      char v18 = sub_10003D0C8((uint64_t)v17);

      char v19 = (void *)*((void *)v0 + 27);
      if ((v18 & 1) == 0)
      {
LABEL_13:

        goto LABEL_14;
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v20 = swift_unknownObjectWeakLoadStrong();
        uint64_t v21 = (void *)*((void *)v0 + 27);
        if (v20)
        {
          uint64_t v22 = (void *)v20;
          uint64_t v23 = *((void *)v0 + 16);
          uint64_t v24 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
          id v25 = v22;
          uint64_t v26 = static MainActor.shared.getter();
          uint64_t v27 = (void *)swift_allocObject();
          v27[2] = v26;
          v27[3] = &protocol witness table for MainActor;
          v27[4] = v25;
          sub_100328C78(v23, (uint64_t)&unk_100809150, (uint64_t)v27);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        goto LABEL_14;
      }
    }
    char v19 = (void *)*((void *)v0 + 27);
    goto LABEL_13;
  }
  swift_release();
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v28();
}

uint64_t sub_10034712C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 232);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 200);
  return _swift_task_switch(sub_10034726C, v4, v3);
}

uint64_t sub_10034726C()
{
  swift_release();
  uint64_t v1 = v0[22];
  uint64_t v21 = v0[27];
  uint64_t v22 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v23 = v0[20];
  uint64_t v24 = v0[28];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[6] = sub_100349264;
  v0[7] = v5;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_1007A6968;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[11] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v6);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v23);
  swift_release();
  swift_release();
  double v7 = *(void **)(v21 + v24);
  if (!v7) {
    goto LABEL_6;
  }
  id v8 = v7;
  char v9 = sub_10003D0C8((uint64_t)v8);

  uint64_t v10 = (void *)v0[27];
  if ((v9 & 1) == 0) {
    goto LABEL_7;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v10 = (void *)v0[27];
    if (Strong)
    {
      uint64_t v12 = (void *)Strong;
      uint64_t v13 = v0[16];
      uint64_t v14 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
      id v15 = v12;
      uint64_t v16 = static MainActor.shared.getter();
      id v17 = (void *)swift_allocObject();
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      sub_100328C78(v13, (uint64_t)&unk_100809150, (uint64_t)v17);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
LABEL_6:
    uint64_t v10 = (void *)v0[27];
  }
LABEL_7:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

void sub_1003475C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_100519B4C();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10034763C(char a1, char a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = v12;
  *(unsigned char *)(v13 + 32) = a1;
  aBlock[4] = sub_100349088;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A66E8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

void sub_1003478F4(char a1, uint64_t a2, char a3)
{
  if (a1) {
    double v4 = 0.2;
  }
  else {
    double v4 = 0.0;
  }
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(unsigned char *)(v8 + 24) = a3;
  aBlock[4] = sub_1003490E8;
  void aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A6738;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  [v5 animateWithDuration:0 delay:v9 options:0 animations:v4 completion:0.0];
  _Block_release(v9);
}

void sub_100347A5C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView);

    double v6 = 0.0;
    if (a2) {
      double v6 = 1.0;
    }
    [v5 setAlpha:v6];
  }
}

id sub_100347AF0(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_fullScreenAssetViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_cardView;
  id v10 = objc_allocWithZone((Class)UIView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView;
  type metadata accessor for MapAssetView();
  *(void *)&v11[v13] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeAddressLabel;
  *(void *)&v11[v15] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v16 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeInfoLabel;
  *(void *)&v11[v16] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel;
  *(void *)&v11[v17] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v18 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_editButton;
  *(void *)&v11[v18] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v19 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_blurEffectView;
  id v20 = [self effectWithStyle:8];
  id v21 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v20];

  *(void *)&v11[v19] = v21;
  *(void *)&v11[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation] = 0;
  uint64_t v22 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_saveAction;
  *(void *)&v11[v22] = [objc_allocWithZone((Class)UIAlertAction) init];

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for FullScreenMultiPinMapView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100347D5C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_fullScreenAssetViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_cardView;
  id v4 = objc_allocWithZone((Class)UIView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView;
  type metadata accessor for MapAssetView();
  *(void *)&v5[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeAddressLabel;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeInfoLabel;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeNameLabel;
  *(void *)&v5[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_editButton;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_blurEffectView;
  id v14 = [self effectWithStyle:8];
  id v15 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v14];

  *(void *)&v5[v13] = v15;
  *(void *)&v5[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation] = 0;
  uint64_t v16 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_saveAction;
  *(void *)&v5[v16] = [objc_allocWithZone((Class)UIAlertAction) init];

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for FullScreenMultiPinMapView();
  id v17 = [super initWithCoder:a1];

  return v17;
}

id sub_100347FB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenMultiPinMapView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenMultiPinMapView()
{
  return self;
}

id sub_10034811C(id result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset);
  if (v2)
  {
    if (*(void *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
    {
      uint64_t v3 = v1;
      id v4 = result;
      swift_retain();
      uint64_t v5 = sub_100039114();
      unint64_t result = (id)swift_release();
      if (v5 != 1)
      {
        uint64_t v6 = swift_bridgeObjectRetain();
        unint64_t result = (id)sub_10003F810(v6);
        if (v5)
        {
          if (*(void *)(v5 + 16))
          {
            sub_1001EA664(v4, v5);
            double v8 = v7;
            double v10 = v9;
            double v12 = v11;
            double v14 = v13;
            swift_bridgeObjectRelease();
            unint64_t result = *(id *)(*(void *)(v3 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView)
                           + OBJC_IVAR____TtC7Journal12MapAssetView_mapView);
            if (result)
            {
              return [result setRegion:1 v8, v10, v12, v14];
            }
          }
          else
          {
            return (id)swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

id sub_1003482A4(uint64_t a1, double a2)
{
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView) setAlpha:];
  id v4 = *(void **)(a1 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView);

  return [v4 setAlpha:a2];
}

id sub_10034830C(void *a1, uint64_t a2)
{
  [a1 coordinate];
  double v5 = v4;
  double v7 = v6;
  double v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC7Journal12MapAssetView_annotationsDict);
  swift_beginAccess();
  if (!*(void *)(*v8 + 16) || (id result = (id)sub_10001BAD0(v5, v7), (v10 & 1) == 0))
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v8;
    *double v8 = 0x8000000000000000;
    sub_10011A23C((uint64_t)a1, isUniquelyReferenced_nonNull_native, &v12, v5, v7);
    *double v8 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return [*(id *)(a2 + OBJC_IVAR____TtC7Journal12MapAssetView_mapView) addAnnotation:a1];
  }
  return result;
}

id sub_10034841C(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLQueryItem();
  uint64_t v84 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v83 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v12 - 8);
  double v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v87 = v15;
  uint64_t v88 = v16;
  __chkstk_darwin(v15);
  uint64_t v86 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v19 = __chkstk_darwin(v18).n128_u64[0];
  id v85 = (char *)&v76 - v20;
  id v21 = [a1 annotation:v19];
  if (v21)
  {
    id v22 = v21;
    id v82 = v5;
    type metadata accessor for StyledMKPointAnnotation();
    uint64_t v23 = swift_dynamicCastClass();
    if (v23)
    {
      objc_super v24 = (char *)v23;
      uint64_t v25 = *(void **)(v1 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation);
      *(void *)(v1 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_currentSelectedAnnotation) = v23;
      swift_unknownObjectRetain();

      uint64_t v26 = (uint64_t *)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_typeOfPlace];
      uint64_t v27 = *(void *)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_typeOfPlace + 8];
      uint64_t v80 = v6;
      uint64_t v79 = v7;
      id v78 = v9;
      id v76 = v22;
      uint64_t v77 = v10;
      uint64_t v81 = v1;
      if (v27)
      {
        swift_bridgeObjectRetain();
        NSString v28 = String._bridgeToObjectiveC()();
        uint64_t v29 = sub_10065C35C(v28);
        uint64_t v31 = v30;
        swift_bridgeObjectRelease();

        if (v31)
        {
          uint64_t v32 = v29;
          goto LABEL_16;
        }
        uint64_t v31 = v26[1];
      }
      else
      {
        uint64_t v31 = 0;
      }
      uint64_t v32 = *v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t v36 = *(void *)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_placeName];
      uint64_t v37 = *(void *)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_placeName + 8];
      uint64_t v38 = *(void *)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_city];
      id v39 = *(void **)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_city + 8];
      char v40 = v26[1] != 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = v38;
      uint64_t v42 = v81;
      sub_100345428(v36, v37, v41, v39, v32, v31, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)&v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_mapURL];
      swift_beginAccess();
      sub_10001B220(v43, (uint64_t)v14, (uint64_t *)&unk_100800A60);
      uint64_t v45 = v87;
      uint64_t v44 = v88;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v14, 1, v87) == 1)
      {
        sub_10001457C((uint64_t)v14, (uint64_t *)&unk_100800A60);
        uint64_t v46 = v80;
        uint64_t v47 = v79;
        uint64_t v48 = v78;
      }
      else
      {
        uint64_t v49 = v85;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v85, v14, v45);
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v86, v49, v45);
        swift_bridgeObjectRetain();
        id v50 = v83;
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        sub_100010218(&qword_1008061C0);
        uint64_t v51 = v84;
        unint64_t v52 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        uint64_t v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_1006D6280;
        (*(void (**)(unint64_t, char *, uint64_t))(v51 + 16))(v53 + v52, v50, v77);
        URL.append(queryItems:)((Swift::OpaquePointer)v53);
        swift_bridgeObjectRelease();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v46 = v80;
        uint64_t v47 = v79;
        uint64_t v48 = v78;
        if (Strong)
        {
          [v24 coordinate:v76];
          uint64_t v56 = v55;
          uint64_t v58 = v57;
          uint64_t v59 = swift_unknownObjectWeakLoadStrong();
          if (v59)
          {
            uint64_t v60 = v59 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin;
            *(void *)uint64_t v60 = v56;
            *(void *)(v60 + 8) = v58;
            *(unsigned char *)(v60 + 16) = 0;
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v77);
        uint64_t v61 = *(void (**)(char *, uint64_t))(v88 + 8);
        v61(v86, v45);
        v61(v85, v45);
      }
      uint64_t v62 = &v24[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_visitStartTime];
      swift_beginAccess();
      uint64_t v63 = (uint64_t)v62;
      uint64_t v64 = (uint64_t)v82;
      sub_10001B220(v63, (uint64_t)v82, (uint64_t *)&unk_1007FC470);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v64, 1, v46) == 1)
      {
        sub_10001457C(v64, (uint64_t *)&unk_1007FC470);
LABEL_32:
        [*(id *)(v42 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_blurEffectView) setHidden:0 v76];
        [*(id *)(v42 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_editButton) setHidden:0];
        sub_10034763C(1, 1);
        [*(id *)(v42 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView) bringSubviewToFront:*(void *)(v42 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView)];
        return (id)swift_unknownObjectRelease();
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v48, v64, v46);
      sub_1003494AC();
      Date.formatted<A>(_:)();
      uint64_t v66 = v90;
      double v65 = v91;
      uint64_t v67 = *(void **)(v42 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_placeInfoLabel);
      id v68 = [v67 text];
      if (!v68) {
        goto LABEL_28;
      }

      id v69 = [v67 text];
      if (!v69)
      {
        swift_bridgeObjectRelease();
        uint64_t v90 = 0;
        id v91 = 0;
        [v67 setText:0];
        (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      uint64_t v70 = v69;
      uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v73 = v72;

      uint64_t v90 = v71;
      id v91 = v73;
      v89._uint64_t countAndFlagsBits = 548913696;
      v89._object = (void *)0xA400000000000000;
      v74._uint64_t countAndFlagsBits = v66;
      v74._object = v65;
      String.append(_:)(v74);
      swift_bridgeObjectRelease();
      String.append(_:)(v89);
      swift_bridgeObjectRelease();
      if (!v91)
      {
        NSString v75 = 0;
      }
      else
      {
LABEL_28:
        NSString v75 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v67 setText:v75, v76];

      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
      goto LABEL_32;
    }
    swift_unknownObjectRelease();
  }
  id result = [a1 annotation];
  if (result)
  {
    self;
    uint64_t v34 = swift_dynamicCastObjCClass();
    if (v34)
    {
      uint64_t v35 = (void *)v34;
      sub_10034763C(0, 1);
      sub_10034811C(v35);
    }
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100348D68(void *a1)
{
  id v1 = [a1 selectedAnnotations];
  sub_100010218((uint64_t *)&unk_1007FEAC0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_10034763C(0, 1);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v6 = Strong + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_currentMapPin;
        *(void *)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        *(unsigned char *)(v6 + 16) = 1;
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100348E94(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset];
  *(void *)&v1[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapAsset] = a1;
  id v4 = a1;

  double v5 = *(void **)&v1[v2];
  if (!v5) {
    return;
  }
  id v12 = v5;
  id v6 = [v1 subviews];
  sub_10001B284(0, (unint64_t *)&qword_100802730);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_4:
      if (v8 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v7 + 8 * i + 32);
        }
        uint64_t v11 = v10;
        [v10 removeFromSuperview];
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_100342FD4(v12);
}

uint64_t sub_100349018()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100349050()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100349088()
{
  sub_1003478F4(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100349098(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003490A8()
{
  return swift_release();
}

uint64_t sub_1003490B0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003490E8()
{
  sub_100347A5C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1003490F4()
{
  return swift_deallocObject();
}

id sub_10034912C(void *a1)
{
  return sub_100345AA4(a1, *(void *)(v1 + 16));
}

void sub_100349138(uint64_t a1)
{
  sub_100345B94(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100349140()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100349188(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  double v8 = v1[6];
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v9 = *((void *)v1 + 8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10002C194;
  return sub_100345F04(v7, v8, a1, v4, v5, v6, v10, v9);
}

void sub_100349264()
{
}

uint64_t sub_100349284(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002F1DBC(a1, v4, v5, v6);
}

void sub_100349338()
{
}

void sub_100349340()
{
}

void sub_100349348()
{
}

id sub_100349350()
{
  id result = *(id *)(v0 + 16);
  if (result) {
    return [result dismissViewControllerAnimated:1 completion:0];
  }
  return result;
}

void sub_100349374(void *a1)
{
  sub_100342270(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100349380()
{
  sub_1003423B4(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100349388()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003493D0(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  double v8 = v1[6];
  uint64_t v9 = *((void *)v1 + 7);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100052588;
  return sub_100346B58(v7, v8, a1, v4, v5, v6, v9);
}

unint64_t sub_1003494AC()
{
  unint64_t result = qword_100809160;
  if (!qword_100809160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809160);
  }
  return result;
}

uint64_t sub_10034953C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100809168);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100809168);
  if (qword_1007F7D28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB78);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100349604()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v8 = (char *)&v25 - v7;
  char v9 = sub_100349D10((char *)&v25 - v7);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v8, v2);
  sub_100349D10(v5);
  id v11 = [v0 recordSystemFields];
  if (v11)
  {
    uint64_t v12 = v11;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    NSString v28 = v10;
    uint64_t v13 = UUID.uuidString.getter();
    uint64_t v15 = v14;
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    id v16 = [*(id *)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
    sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
    swift_bridgeObjectRetain();
    v27.super.Class isa = (Class)v16;
    v17._uint64_t countAndFlagsBits = v13;
    v17._object = v15;
    Class isa = CKRecordID.init(recordName:zoneID:)(v17, v27).super.isa;
    sub_10001B284(0, (unint64_t *)&qword_1007FECF8);
    v26.super.Class isa = isa;
    v19._uint64_t countAndFlagsBits = 0x456C616E72756F4ALL;
    v19._object = (void *)0xEC0000007972746ELL;
    Class v20 = CKRecord.init(recordType:recordID:)(v19, v26).super.isa;
    Class v25 = v20;
    char v9 = 1;
    id v21 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [(objc_class *)v20 encodeSystemFieldsWithCoder:v21];
    id v22 = [v21 encodedData];
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    Class v23 = Data._bridgeToObjectiveC()().super.isa;
    [v1 setRecordSystemFields:v23];

    uint64_t v10 = v28;
  }
  v10(v5, v2);
  return v9 & 1;
}

uint64_t sub_100349928()
{
  return sub_100349604() & 1;
}

uint64_t sub_100349950()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v30 - v10;
  char v12 = sub_100349D10((char *)&v30 - v10);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v11, v5);
  sub_100349D10(v8);
  char v14 = sub_100349F18(v4, (SEL *)&selRef_entry, "Orphan asset:%@ - probably waiting for the parent entry to download");
  sub_1000ADA74((uint64_t)v4);
  id v15 = [v0 recordSystemFields];
  if (v15)
  {
    id v16 = v15;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();

    v13(v8, v5);
    char v17 = v12 | v14;
  }
  else
  {
    uint64_t v32 = v13;
    uint64_t v33 = v5;
    uint64_t v18 = UUID.uuidString.getter();
    Class v20 = v19;
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    id v21 = [*(id *)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
    sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
    swift_bridgeObjectRetain();
    v31.super.Class isa = (Class)v21;
    v22._uint64_t countAndFlagsBits = v18;
    v22._object = v20;
    Class isa = CKRecordID.init(recordName:zoneID:)(v22, v31).super.isa;
    sub_10001B284(0, (unint64_t *)&qword_1007FECF8);
    v30.super.Class isa = isa;
    v24._object = (void *)0x800000010068A500;
    v24._uint64_t countAndFlagsBits = 0xD000000000000011;
    Class v25 = CKRecord.init(recordType:recordID:)(v24, v30).super.isa;
    char v17 = 1;
    id v26 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [(objc_class *)v25 encodeSystemFieldsWithCoder:v26];
    id v27 = [v26 encodedData];
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    Class v28 = Data._bridgeToObjectiveC()().super.isa;
    [v1 setRecordSystemFields:v28];

    v32(v8, v33);
  }
  return v17 & 1;
}

uint64_t sub_100349CE8()
{
  return sub_100349950() & 1;
}

uint64_t sub_100349D10(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800950);
  *(void *)&double v9 = __chkstk_darwin(v8 - 8).n128_u64[0];
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [v2 id:v9];
  if (v12)
  {
    uint64_t v13 = v12;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    char v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v14(v11, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
    {
      v14(a1, v11, v4);
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
  }
  sub_1000ADA74((uint64_t)v11);
  UUID.init()();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v2 setId:isa];

  return 1;
}

uint64_t sub_100349F18(char *a1, SEL *a2, const char *a3)
{
  id v50 = a3;
  uint64_t v5 = v3;
  unint64_t v52 = a1;
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v46 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(char **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v46 - v16;
  *(void *)&double v19 = __chkstk_darwin(v18).n128_u64[0];
  id v21 = (char *)&v46 - v20;
  id v22 = [v5 parentID:v19];
  if (v22)
  {
    Class v23 = v22;
    uint64_t v46 = a2;
    uint64_t v47 = v8;
    uint64_t v48 = v5;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v24 = (void (*)(char *, char *, uint64_t))*((void *)v13 + 4);
    v24(v11, v17, v12);
    Class v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v13 + 7);
    v25(v11, 0, 1, v12);
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v13 + 6))(v11, 1, v12) != 1)
    {
      v24(v21, v11, v12);
      uint64_t v36 = v52;
      v24(v52, v21, v12);
      v25(v36, 0, 1, v12);
      return 0;
    }
    uint64_t v51 = v25;
    uint64_t v8 = v47;
    uint64_t v5 = v48;
    a2 = v46;
  }
  else
  {
    uint64_t v51 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v13 + 7);
    v51(v11, 1, 1, v12);
  }
  sub_1000ADA74((uint64_t)v11);
  id v26 = [v5 *a2];
  if (!v26)
  {
LABEL_12:
    uint64_t v49 = v13;
    if (qword_1007F6E28 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_100026A54(v37, (uint64_t)qword_100809168);
    uint64_t v38 = v5;
    id v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      uint64_t v53 = v38;
      uint64_t v43 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v42 = v38;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, v50, v41, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v39 = v38;
    }
    uint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v51;

    v44((uint64_t)v52, 1, 1, v12);
    return 0;
  }
  id v27 = v26;
  id v28 = [v26 id];
  if (!v28)
  {
    v51(v8, 1, 1, v12);
    goto LABEL_11;
  }
  uint64_t v29 = v28;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  CKRecordID v30 = (void (*)(char *, char *, uint64_t))*((void *)v13 + 4);
  v30(v8, v17, v12);
  CKRecordZoneID v31 = v51;
  v51(v8, 0, 1, v12);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v13 + 6))(v8, 1, v12) == 1)
  {
LABEL_11:

    sub_1000ADA74((uint64_t)v8);
    goto LABEL_12;
  }
  uint64_t v32 = v49;
  v30(v49, v8, v12);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v5 setParentID:isa];

  uint64_t v34 = v52;
  v30(v52, v32, v12);
  uint64_t v35 = 1;
  v31(v34, 0, 1, v12);
  return v35;
}

uint64_t sub_10034A4B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v30 - v10;
  char v12 = sub_100349D10((char *)&v30 - v10);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v11, v5);
  sub_100349D10(v8);
  char v14 = sub_100349F18(v4, (SEL *)&selRef_asset, "Orphan file attachment:%@ - probably waiting for the parent asset to download");
  sub_1000ADA74((uint64_t)v4);
  id v15 = [v0 recordSystemFields];
  if (v15)
  {
    uint64_t v16 = v15;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();

    v13(v8, v5);
    char v17 = v12 | v14;
  }
  else
  {
    uint64_t v32 = v13;
    uint64_t v33 = v5;
    uint64_t v18 = UUID.uuidString.getter();
    uint64_t v20 = v19;
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    id v21 = [*(id *)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
    sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
    swift_bridgeObjectRetain();
    v31.super.Class isa = (Class)v21;
    v22._uint64_t countAndFlagsBits = v18;
    v22._object = v20;
    Class isa = CKRecordID.init(recordName:zoneID:)(v22, v31).super.isa;
    sub_10001B284(0, (unint64_t *)&qword_1007FECF8);
    v30.super.Class isa = isa;
    v24._object = (void *)0x800000010068A520;
    v24._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    Class v25 = CKRecord.init(recordType:recordID:)(v24, v30).super.isa;
    char v17 = 1;
    id v26 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [(objc_class *)v25 encodeSystemFieldsWithCoder:v26];
    id v27 = [v26 encodedData];
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    Class v28 = Data._bridgeToObjectiveC()().super.isa;
    [v1 setRecordSystemFields:v28];

    v32(v8, v33);
  }
  return v17 & 1;
}

uint64_t sub_10034A848()
{
  return sub_10034A4B0() & 1;
}

unint64_t sub_10034A874()
{
  unint64_t result = qword_100809198;
  if (!qword_100809198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809198);
  }
  return result;
}

uint64_t sub_10034A8C8()
{
  return sub_10034E684(&qword_1007FF3F8, (void (*)(uint64_t))type metadata accessor for JournalEntity);
}

unint64_t sub_10034A918()
{
  unint64_t result = qword_1008091A0;
  if (!qword_1008091A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008091A0);
  }
  return result;
}

unint64_t sub_10034A970()
{
  unint64_t result = qword_1008091A8;
  if (!qword_1008091A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008091A8);
  }
  return result;
}

uint64_t sub_10034A9C4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10034A9F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10034AA14()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10034AA48()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10034AA6C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10034AA90()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10034AAC4()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10034AAF8()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10034AB2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100809180);
  sub_100026A54(v0, (uint64_t)qword_100809180);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10034AC28()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034AC4C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034AC70()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034AC94()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034ACB8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034ACDC()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034AD00()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10034AD24@<X0>(uint64_t a1@<X8>)
{
  return sub_10034AF14((uint64_t)sub_10034AD3C, a1);
}

uint64_t sub_10034AD3C()
{
  swift_getKeyPath();
  sub_1001F4FE0();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v4 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006E0570;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10034AEFC@<X0>(uint64_t a1@<X8>)
{
  return sub_10034AF14((uint64_t)sub_10034B224, a1);
}

uint64_t sub_10034AF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v2 = sub_100010218(&qword_100809298);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100010218(&qword_1008092A0);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100010218(&qword_100809280);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v16 - v9;
  sub_1001F4FE0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._uint64_t countAndFlagsBits = 0x20657461657243;
  v11._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  sub_100010218(&qword_1008092A8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v12._uint64_t countAndFlagsBits = 0x206874697720;
  v12._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  sub_100010218(&qword_1008092B0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:_:)();
  sub_100014488(&qword_100809288, &qword_100809280);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
}

uint64_t sub_10034B224()
{
  swift_getKeyPath();
  sub_1001F4FE0();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6D30;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v5 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10034B3A0(uint64_t a1)
{
  v2[25] = a1;
  v2[26] = v1;
  v2[27] = type metadata accessor for JournalEntity();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v2[32] = swift_task_alloc();
  sub_100010218(&qword_1007FE5B8);
  v2[33] = swift_task_alloc();
  sub_100010218(&qword_100809200);
  v2[34] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for IntentSystemContext.Kind();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = sub_100010218(&qword_100809258);
  v2[39] = swift_task_alloc();
  sub_100010218(&qword_100809260);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentSystemContext();
  v2[43] = v4;
  v2[44] = *(void *)(v4 - 8);
  v2[45] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AttributedString.Index();
  v2[46] = v5;
  v2[47] = *(void *)(v5 - 8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AttributedString.CharacterView();
  v2[50] = v6;
  v2[51] = *(void *)(v6 - 8);
  v2[52] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AttributedString();
  v2[53] = v7;
  v2[54] = *(void *)(v7 - 8);
  v2[55] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[56] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[57] = v9;
  v2[58] = v8;
  return _swift_task_switch(sub_10034B77C, v9, v8);
}

uint64_t sub_10034B77C()
{
  IntentParameter.wrappedValue.getter();
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 80);
    swift_bridgeObjectRelease();
    uint64_t v3 = HIBYTE(v1) & 0xF;
    if ((v1 & 0x2000000000000000) == 0) {
      uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v3) {
      goto LABEL_9;
    }
  }
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v5 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 424);
  uint64_t v8 = *(void *)(v0 + 392);
  uint64_t v69 = *(void *)(v0 + 400);
  uint64_t v71 = *(void *)(v0 + 408);
  uint64_t v9 = *(void *)(v0 + 376);
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = *(void *)(v0 + 368);
  IntentParameter.wrappedValue.getter();
  AttributedString.characters.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  sub_10034E684(&qword_1007F8EA8, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  sub_10034E684(&qword_100804968, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
  Swift::String v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v13(v10, v11);
  v13(v8, v11);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v6, v69);
  if ((v12 & 1) == 0) {
    goto LABEL_9;
  }
  IntentParameter.wrappedValue.getter();
  uint64_t v14 = *(void *)(*(void *)(v0 + 192) + 16);
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_9;
  }
  IntentParameter.wrappedValue.getter();
  id v15 = *(void **)(v0 + 160);
  if (v15)
  {

LABEL_9:
    int v16 = 0;
    goto LABEL_10;
  }
  int v16 = 1;
LABEL_10:
  if (qword_1007F6E30 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  *(void *)(v0 + 472) = sub_100026A54(v17, (uint64_t)qword_100809180);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 67109120;
    *(_DWORD *)(v0 + 568) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "entry.isBlankEntry(): %{BOOL}d", v20, 8u);
    swift_slowDealloc();
  }
  int v72 = v16;
  uint64_t v22 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 360);
  uint64_t v23 = *(void *)(v0 + 328);
  uint64_t v65 = *(void *)(v0 + 336);
  uint64_t v66 = *(void *)(v0 + 344);
  uint64_t v24 = *(void *)(v0 + 312);
  uint64_t v67 = *(void *)(v0 + 304);
  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v25 = *(void *)(v0 + 288);
  id v27 = *(long long **)(v0 + 208);

  long long v28 = *v27;
  long long v29 = v27[1];
  long long v30 = v27[3];
  *(_OWORD *)(v0 + 48) = v27[2];
  *(_OWORD *)(v0 + 64) = v30;
  *(_OWORD *)(v0 + 16) = v28;
  *(_OWORD *)(v0 + 32) = v29;
  sub_1001F4FE0();
  AppIntent.systemContext.getter();
  IntentSystemContext.kind.getter();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v66);
  (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v23, enum case for IntentSystemContext.Kind.userShortcut(_:), v26);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v26);
  uint64_t v31 = v24 + *(int *)(v67 + 48);
  sub_10034E508(v65, v24);
  sub_10034E508(v23, v31);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v32(v24, 1, v26) != 1)
  {
    uint64_t v36 = *(void *)(v0 + 280);
    sub_10034E508(*(void *)(v0 + 312), *(void *)(v0 + 320));
    int v37 = v32(v31, 1, v36);
    uint64_t v39 = *(void *)(v0 + 328);
    uint64_t v38 = *(void *)(v0 + 336);
    uint64_t v40 = *(void *)(v0 + 320);
    if (v37 != 1)
    {
      uint64_t v68 = *(void *)(v0 + 312);
      uint64_t v44 = *(void *)(v0 + 288);
      uint64_t v43 = *(void *)(v0 + 296);
      uint64_t v45 = *(void *)(v0 + 280);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v43, v31, v45);
      sub_10034E684(&qword_100809278, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Kind);
      char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v46(v43, v45);
      sub_10001457C(v39, &qword_100809260);
      sub_10001457C(v38, &qword_100809260);
      v46(v40, v45);
      sub_10001457C(v68, &qword_100809260);
      goto LABEL_21;
    }
    uint64_t v41 = *(void *)(v0 + 280);
    uint64_t v42 = *(void *)(v0 + 288);
    sub_10001457C(*(void *)(v0 + 328), &qword_100809260);
    sub_10001457C(v38, &qword_100809260);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    goto LABEL_19;
  }
  uint64_t v33 = *(void *)(v0 + 336);
  uint64_t v34 = *(void *)(v0 + 280);
  sub_10001457C(*(void *)(v0 + 328), &qword_100809260);
  sub_10001457C(v33, &qword_100809260);
  if (v32(v31, 1, v34) != 1)
  {
LABEL_19:
    sub_10001457C(*(void *)(v0 + 312), &qword_100809258);
    char v35 = 0;
    goto LABEL_21;
  }
  sub_10001457C(*(void *)(v0 + 312), &qword_100809260);
  char v35 = 1;
LABEL_21:
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 67109120;
    *(_DWORD *)(v0 + 572) = v35 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "shouldPromptForContents: %{BOOL}d", v49, 8u);
    swift_slowDealloc();
  }

  if (!v72) {
    goto LABEL_34;
  }
  if (v35)
  {
    uint64_t v50 = *(void *)(v0 + 272);
    swift_release();
    IntentParameter.projectedValue.getter();
    uint64_t v51 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);
    type metadata accessor for AppIntentError();
    sub_10034E684(&qword_100809270, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10001457C(v50, &qword_100809200);
    goto LABEL_31;
  }
  if (qword_1007F6DC8 != -1) {
    swift_once();
  }
  uint64_t v52 = qword_10083D360;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v54 = Strong,
        uint64_t v55 = *(void *)(v52 + 24),
        uint64_t ObjectType = swift_getObjectType(),
        *(void *)(v0 + 184) = v54,
        char v57 = (*(uint64_t (**)(uint64_t))(*(void *)(v55 + 8) + 8))(ObjectType),
        swift_unknownObjectRelease(),
        (v57 & 1) == 0))
  {
LABEL_34:
    uint64_t v62 = *(void *)(v0 + 424);
    uint64_t v61 = *(void *)(v0 + 432);
    uint64_t v63 = *(void *)(v0 + 264);
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 480) = *(void *)(v0 + 104);
    IntentParameter.wrappedValue.getter();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v63, 0, 1, v62);
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 488) = *(void *)(v0 + 144);
    IntentParameter.wrappedValue.getter();
    IntentParameter.wrappedValue.getter();
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 496) = *(void *)(v0 + 136);
    IntentParameter.wrappedValue.getter();
    *(void *)(v0 + 504) = *(void *)(v0 + 120);
    AppDependency.wrappedValue.getter();
    *(void *)(v0 + 512) = *(void *)(v0 + 152);
    uint64_t v70 = (char *)&dword_10080D238 + dword_10080D238;
    uint64_t v64 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v64;
    *uint64_t v64 = v0;
    v64[1] = sub_10034C208;
    __asm { BR              X8 }
  }
  swift_release();
  sub_10008A900();
  swift_allocError();
  *uint64_t v58 = 4;
LABEL_31:
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
  return v59();
}

uint64_t sub_10034C208(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[66] = a1;
  v4[67] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)v3[62];
  uint64_t v6 = v3[33];
  uint64_t v7 = v3[32];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10001457C(v7, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v6, &qword_1007FE5B8);
  uint64_t v8 = v3[58];
  uint64_t v9 = v3[57];
  if (v1) {
    uint64_t v10 = sub_10034C628;
  }
  else {
    uint64_t v10 = sub_10034C434;
  }
  return _swift_task_switch(v10, v9, v8);
}

uint64_t sub_10034C434()
{
  uint64_t v11 = v0;
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[21] = v3;
    type metadata accessor for Journaling.EntryViewModel();
    swift_retain();
    uint64_t v6 = String.init<A>(reflecting:)();
    v0[22] = sub_10011EA98(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "entry: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[68] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10034C780;
  return sub_100580C88();
}

uint64_t sub_10034C628()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10034C780()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 552) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10034C8D8;
  uint64_t v4 = *(void *)(v1 + 248);
  return sub_1004567B4(v4);
}

uint64_t sub_10034C8D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 560) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 464);
  uint64_t v4 = *(void *)(v2 + 456);
  if (v0) {
    uint64_t v5 = sub_10034CC40;
  }
  else {
    uint64_t v5 = sub_10034CA14;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10034CA14()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[28];
  swift_release();
  sub_10034E570(v1, v3);
  uint64_t v5 = sub_10059B858();
  sub_10034E570(v3, v2);
  sub_10034E570(v2, v4);
  IntentParameter.wrappedValue.setter();
  sub_10034E5D4(v2);
  sub_10034E5D4(v3);
  v0[16] = v5;
  sub_10034E684(&qword_1007FF438, (void (*)(uint64_t))type metadata accessor for JournalEntity);
  sub_10034E630();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  swift_release();
  sub_10034E5D4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10034CC40()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10034CDA4(uint64_t a1)
{
  unint64_t v2 = sub_10034E800();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_10034CDF4()
{
  uint64_t HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator();
  uint64_t v1 = *(void *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  sub_100010218(&qword_100809280);
  sub_100014488(&qword_100809288, &qword_100809280);
  sub_100014488(&qword_100809290, &qword_100809240);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)();
}

uint64_t sub_10034CF98(uint64_t a1)
{
  long long v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  long long v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v6;
  void *v6 = v2;
  v6[1] = sub_10034D050;
  return sub_10034B3A0(a1);
}

uint64_t sub_10034D050()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_10034D144@<D0>(_OWORD *a1@<X8>)
{
  sub_10034D5F4((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_10034D184(uint64_t a1)
{
  unint64_t v2 = sub_1001F4FE0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10034D1C4()
{
  unint64_t result = qword_1008091B8;
  if (!qword_1008091B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008091B8);
  }
  return result;
}

uint64_t destroy for CreateEntryIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for CreateEntryIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CreateEntryIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CreateEntryIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateEntryIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateEntryIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateEntryIntent()
{
  return &type metadata for CreateEntryIntent;
}

uint64_t sub_10034D540()
{
  return sub_100014488(&qword_1008091C0, &qword_1008091C8);
}

uint64_t sub_10034D57C()
{
  return sub_100014488(&qword_1008091D0, &qword_1008091D8);
}

uint64_t sub_10034D5B8()
{
  return sub_100014488(&qword_1008091E0, &qword_1008091D8);
}

uint64_t sub_10034D5F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v1 = sub_100010218(&qword_1008091E8);
  __chkstk_darwin(v1 - 8);
  uint64_t v86 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for LocalizedStringResource.BundleDescription();
  id v85 = *(void (**)(char *, uint64_t, uint64_t))(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v84 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  double v83 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v80 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100010218(&qword_1008091F0);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  int v72 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100010218(&qword_1008091F8);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v13 - 8);
  uint64_t v66 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1007FE5B8);
  __chkstk_darwin(v15 - 8);
  uint64_t v70 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for InputConnectionBehavior();
  uint64_t v17 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v90 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100809200);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100809208);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100010218(&qword_1007FF580);
  __chkstk_darwin(v25 - 8);
  id v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218(&qword_100809210);
  type metadata accessor for AppDependencyManager();
  long long v100 = 0u;
  long long v101 = 0u;
  uint64_t v102 = 0;
  static AppDependencyManager.shared.getter();
  uint64_t v82 = AppDependency.__allocating_init(key:manager:)();
  uint64_t v75 = sub_100010218(&qword_100809218);
  id v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v99 = v9 + 56;
  v98(v27, 1, 1, v8);
  uint64_t v78 = type metadata accessor for String.IntentInputOptions();
  long long v100 = 0uLL;
  uint64_t v28 = *(void *)(v78 - 8);
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v79 = v28 + 56;
  uint64_t v71 = v24;
  v77(v24, 1, 1, v78);
  uint64_t v29 = type metadata accessor for IntentDialog();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  uint64_t v92 = v29;
  uint64_t v93 = v30 + 56;
  v31(v21, 1, 1, v29);
  id v94 = v31;
  unsigned int v95 = enum case for InputConnectionBehavior.default(_:);
  os_log_type_t v96 = *(void (**)(char *))(v17 + 104);
  uint64_t v32 = v90;
  v96(v90);
  uint64_t v91 = v17 + 104;
  uint64_t v33 = v21;
  uint64_t v76 = IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v63 = sub_100010218(&qword_100809220);
  uint64_t v34 = v27;
  v98(v27, 1, 1, v8);
  char v35 = v70;
  AttributedString.init(stringLiteral:)();
  uint64_t v36 = type metadata accessor for AttributedString();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  IntentDialog.init(stringLiteral:)();
  v31(v21, 0, 1, v29);
  uint64_t v37 = v95;
  uint64_t v38 = v97;
  ((void (*)(char *, void, uint64_t))v96)(v32, v95, v97);
  uint64_t v70 = (char *)IntentParameter<>.init(description:default:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v63 = sub_100010218(&qword_100809228);
  uint64_t v89 = v8;
  uint64_t v39 = v98;
  v98(v34, 1, 1, v8);
  uint64_t v40 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v66, 1, 1, v40);
  v94(v21, 1, 1, v92);
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, enum case for IntentParameter.DateKind.dateTime<A>(_:), v69);
  uint64_t v41 = v90;
  ((void (*)(char *, uint64_t, uint64_t))v96)(v90, v37, v38);
  uint64_t v64 = v34;
  uint64_t v69 = IntentParameter<>.init(description:default:kind:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v68 = sub_100010218(&qword_100809230);
  v39(v34, 1, 1, v8);
  *(void *)&long long v100 = _swiftEmptyArrayStorage;
  sub_100010218(&qword_100809238);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6270;
  static UTType.image.getter();
  static UTType.movie.getter();
  uint64_t v42 = v92;
  uint64_t v43 = v94;
  v94(v21, 1, 1, v92);
  uint64_t v45 = v96;
  uint64_t v44 = v97;
  ((void (*)(char *, void, uint64_t))v96)(v41, enum case for InputConnectionBehavior.connectToPreviousIntentResult(_:), v97);
  uint64_t v46 = v64;
  uint64_t v68 = IntentParameter<>.init(description:default:supportedContentTypes:requestValueDialog:inputConnectionBehavior:)();
  sub_100010218(&qword_100809240);
  v98(v46, 1, 1, v89);
  *(void *)&long long v100 = 0;
  v43(v33, 1, 1, v42);
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, enum case for IntentParameter.PlacemarkDisplayStyle.name<A>(_:), v74);
  ((void (*)(char *, void, uint64_t))v45)(v41, v95, v44);
  uint64_t v47 = v46;
  uint64_t v74 = IntentParameter<>.init(description:default:displayStyle:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v73 = sub_100010218(&qword_100809248);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v48 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v49 = (void *)*((void *)v85 + 13);
  uint64_t v50 = v84;
  uint64_t v51 = v88;
  ((void (*)(char *, void, uint64_t))v49)(v84, enum case for LocalizedStringResource.BundleDescription.main(_:), v88);
  id v85 = (void (*)(char *, uint64_t, uint64_t))v49;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, uint64_t, uint64_t))v49)(v50, v48, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v98(v47, 0, 1, v89);
  LOBYTE(v100) = 2;
  uint64_t v52 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v86, 1, 1, v52);
  uint64_t v65 = v33;
  v94(v33, 1, 1, v92);
  ((void (*)(char *, void, uint64_t))v96)(v90, v95, v97);
  uint64_t v53 = IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v54 = v50;
  uint64_t v55 = v50;
  uint64_t v56 = v88;
  char v57 = v85;
  v85(v55, v48, v88);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v57(v54, v48, v56);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v98(v47, 0, 1, v89);
  long long v100 = 0uLL;
  v77(v71, 1, 1, v78);
  v94(v65, 1, 1, v92);
  ((void (*)(char *, void, uint64_t))v96)(v90, v95, v97);
  uint64_t result = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v59 = v87;
  uint64_t v60 = v76;
  *uint64_t v87 = v82;
  v59[1] = v60;
  uint64_t v61 = v69;
  v59[2] = (uint64_t)v70;
  v59[3] = v61;
  uint64_t v62 = v74;
  v59[4] = v68;
  v59[5] = v62;
  v59[6] = v53;
  v59[7] = result;
  return result;
}

uint64_t sub_10034E508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100809260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034E570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JournalEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034E5D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JournalEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10034E630()
{
  unint64_t result = qword_100809268;
  if (!qword_100809268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809268);
  }
  return result;
}

uint64_t sub_10034E684(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10034E6CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10034E6F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10034E724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10034E750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10034E77C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10034E7A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10034E7D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10034E800()
{
  unint64_t result = qword_1008092B8;
  if (!qword_1008092B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008092B8);
  }
  return result;
}

void *sub_10034E854(void *a1)
{
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v177 = (char *)&v167 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  id v174 = (char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorResource();
  uint64_t v172 = *(void *)(v7 - 8);
  uint64_t v173 = v7;
  __chkstk_darwin(v7);
  id v171 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v170 = (unsigned __int8 *)&v167 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v12 - 8);
  uint64_t v168 = (uint64_t)&v167 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v167 = (char *)&v167 - v15;
  __chkstk_darwin(v16);
  uint64_t v169 = (uint64_t)&v167 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v167 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v167 - v22;
  uint64_t v24 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView;
  type metadata accessor for ThirdPartyMediaColorEffectView();
  id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v26 = v1;
  *(void *)&v1[v24] = [v25 init];
  uint64_t v27 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView;
  type metadata accessor for ThirdPartyMediaShadowEffectView();
  *(void *)&v26[v27] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v28 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetImageView;
  *(void *)&v26[v28] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v29 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack;
  *(void *)&v26[v29] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v30 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack;
  *(void *)&v26[v30] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v31 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel;
  *(void *)&v26[v31] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v32 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel;
  *(void *)&v26[v32] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v33 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_categoryLabel;
  *(void *)&v26[v33] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v26[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_currentSizeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v26[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_mediaAsset] = a1;
  uint64_t v34 = a1;

  char v35 = (objc_class *)type metadata accessor for ThirdPartyMediaAssetView();
  v183.receiver = v26;
  v183.super_class = v35;
  id v36 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v37 = v36;
  unint64_t v180 = (char *)OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata;
  double v181 = v34;
  uint64_t v38 = *(void *)&v34[OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata];
  uint64_t v175 = v9;
  uint64_t v176 = v10;
  if (!v38)
  {
    id v40 = v36;
    goto LABEL_5;
  }
  id v39 = v36;
  swift_retain();
  sub_10003A8E4((uint64_t)v23);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9))
  {
    sub_10001457C((uint64_t)v23, &qword_1007F9DD8);
LABEL_5:
    int v178 = 5;
    goto LABEL_7;
  }
  uint64_t v41 = v170;
  sub_100353044((uint64_t)v23, (uint64_t)v170);
  sub_10001457C((uint64_t)v23, &qword_1007F9DD8);
  int v178 = *v41;
  sub_10021D0F0((uint64_t)v41);
LABEL_7:
  [*(id *)((char *)v181 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_delegates) addObject:v37];
  uint64_t v42 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView;
  uint64_t v43 = *(void **)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView);
  [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v43 setHidden:1];
  id v44 = [v43 layer];
  [v44 setCornerCurve:kCACornerCurveContinuous];

  uint64_t v179 = v42;
  uint64_t v45 = *(void **)((char *)v37 + v42);
  uint64_t v46 = (uint64_t)sub_10038629C();
  if (!v46)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (qword_1007F7F38 != -1) {
      swift_once();
    }
    uint64_t v47 = v173;
    uint64_t v48 = sub_100026A54(v173, (uint64_t)qword_10083EEC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v171, v48, v47);
    uint64_t v46 = UIColor.init(resource:)();
  }
  uint64_t v49 = v46;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v182 = v49;
  id v50 = v45;
  static UIView.Invalidating.subscript.setter();
  uint64_t v51 = *(void **)((char *)v37 + v179);
  if (!*(void *)&v180[(void)v181])
  {
    id v54 = v51;
    goto LABEL_15;
  }
  id v52 = v51;
  swift_retain();
  sub_10003A8E4((uint64_t)v20);
  swift_release();
  uint64_t v53 = v175;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v20, 1, v175))
  {
    sub_10001457C((uint64_t)v20, &qword_1007F9DD8);
LABEL_15:
    char v55 = 3;
    goto LABEL_17;
  }
  char v55 = v20[*(int *)(v53 + 48)];
  sub_10001457C((uint64_t)v20, &qword_1007F9DD8);
LABEL_17:
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v182) = v55;
  static UIView.Invalidating.subscript.setter();
  uint64_t v56 = v179;
  [v37 addSubview:*(void *)((char *)v37 + v179)];
  uint64_t v57 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
  [*(id *)((char *)v37 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v173 = v57;
  [v37 addSubview:*(void *)((char *)v37 + v57)];
  uint64_t v58 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView;
  uint64_t v59 = *(void **)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView);
  [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v59 setHidden:1];
  id v60 = [v59 layer];
  [v60 setCornerCurve:kCACornerCurveContinuous];

  id v61 = [*(id *)((char *)v37 + v58) layer];
  LODWORD(v62) = 1036831949;
  [v61 setShadowOpacity:v62];

  id v63 = [*(id *)((char *)v37 + v58) layer];
  [v63 shadowOffset];
  [v63 setShadowOffset:];

  id v64 = [*(id *)((char *)v37 + v58) layer];
  [v64 setShadowRadius:4.0];

  id v65 = [*(id *)((char *)v37 + v58) layer];
  [v65 setShadowPathIsBounds:1];

  [v37 addSubview:*(void *)((char *)v37 + v58)];
  uint64_t v66 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetImageView;
  uint64_t v67 = *(void **)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetImageView);
  [v67 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v67 setContentMode:2];
  [v67 setIsAccessibilityElement:1];
  UIAccessibilityTraits v68 = UIAccessibilityTraitImage;
  id v69 = v67;
  unint64_t v70 = (unint64_t)[v69 accessibilityTraits];
  if ((v68 & ~v70) != 0) {
    UIAccessibilityTraits v71 = v68;
  }
  else {
    UIAccessibilityTraits v71 = 0;
  }
  [v69 setAccessibilityTraits:v71 | v70];

  id v72 = *(id *)((char *)v37 + v66);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v72 setAccessibilityLabel:v73];

  id v174 = (char *)v66;
  uint64_t v74 = *(void **)((char *)v37 + v66);
  [v74 setAccessibilityIgnoresInvertColors:1];
  [*(id *)(*(void *)((char *)v37 + v58) + OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView) addSubview:v74];
  id v171 = (char *)OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack;
  uint64_t v75 = *(void **)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack);
  [v75 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v75 setAxis:1];
  [v75 setDistribution:3];
  [v75 setAlignment:1];
  [*(id *)(*(void *)((char *)v37 + v56) + OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView) addSubview:v75];
  uint64_t v177 = (char *)OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack;
  uint64_t v76 = *(void **)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack);
  [v76 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v76 setAxis:1];
  [v76 setAlignment:1];
  [v75 addArrangedSubview:v76];
  if (!*(void *)&v180[(void)v181])
  {
    uint64_t v80 = 0;
    uint64_t v169 = 0;
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    uint64_t v78 = v175;
    goto LABEL_30;
  }
  swift_retain();
  uint64_t v77 = v169;
  sub_10003A8E4(v169);
  swift_release();
  uint64_t v78 = v175;
  uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48);
  if (v79(v77, 1, v175))
  {
    sub_10001457C(v77, &qword_1007F9DD8);
    uint64_t v169 = 0;
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v83 = (uint64_t)v170;
    sub_100353044(v77, (uint64_t)v170);
    sub_10001457C(v77, &qword_1007F9DD8);
    uint64_t v80 = *(void *)(v83 + 32);
    uint64_t v169 = *(void *)(v83 + 24);
    swift_bridgeObjectRetain();
    sub_10021D0F0(v83);
  }
  uint64_t v84 = (uint64_t)v167;
  if (!*(void *)&v180[(void)v181]) {
    goto LABEL_28;
  }
  swift_retain();
  sub_10003A8E4(v84);
  swift_release();
  if (v79(v84, 1, v78))
  {
    sub_10001457C(v84, &qword_1007F9DD8);
LABEL_28:
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    goto LABEL_30;
  }
  uint64_t v85 = (uint64_t)v170;
  sub_100353044(v84, (uint64_t)v170);
  sub_10001457C(v84, &qword_1007F9DD8);
  uint64_t v81 = *(void *)(v85 + 8);
  uint64_t v82 = *(void *)(v85 + 16);
  swift_bridgeObjectRetain();
  sub_10021D0F0(v85);
LABEL_30:
  if (v178 == 6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v81 = v169;
    uint64_t v82 = v80;
  }
  uint64_t v86 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel;
  uint64_t v87 = *(void **)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel);
  [v87 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v88 = v87;
  if (v82)
  {
    swift_bridgeObjectRetain();
    NSString v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v89 = 0;
  }
  [v87 setText:v89];

  uint64_t v90 = *(void **)((char *)v37 + v86);
  uint64_t v91 = self;
  id v92 = v90;
  id v93 = [v91 secondaryLabelColor];
  [v92 setTextColor:v93];

  id v94 = *(void **)((char *)v37 + v86);
  [v94 setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v177[(void)v37] addArrangedSubview:v94];
  uint64_t v95 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel;
  [*(id *)((char *)v37 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel) setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v96 = *(void *)&v180[(void)v181];
  if (v96)
  {
    swift_retain();
    uint64_t v97 = v168;
    sub_10003A8E4(v168);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v97, 1, v78))
    {
      sub_10001457C(v97, &qword_1007F9DD8);
      uint64_t v98 = 0;
      unint64_t v96 = 0;
    }
    else
    {
      uint64_t v99 = (uint64_t)v170;
      sub_100353044(v97, (uint64_t)v170);
      sub_10001457C(v97, &qword_1007F9DD8);
      uint64_t v98 = *(void *)(v99 + 40);
      unint64_t v96 = *(void *)(v99 + 48);
      swift_bridgeObjectRetain();
      sub_10021D0F0(v99);
    }
  }
  else
  {
    uint64_t v98 = 0;
  }
  uint64_t v172 = v58;
  if (v178 == 5)
  {
    if (v96)
    {
      uint64_t v100 = HIBYTE(v96) & 0xF;
      if ((v96 & 0x2000000000000000) == 0) {
        uint64_t v100 = v98 & 0xFFFFFFFFFFFFLL;
      }
      if (v100)
      {
        swift_bridgeObjectRelease();
LABEL_47:
        if (v82)
        {
          if (v98 == v81 && v96 == v82)
          {
            swift_bridgeObjectRelease();
LABEL_54:
            swift_bridgeObjectRelease();
            long long v101 = &selRef_drawMapRect_zoomScale_inContext_;
            goto LABEL_55;
          }
          char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v104) {
            goto LABEL_54;
          }
        }
        id v102 = *(id *)((char *)v37 + v95);
        NSString v103 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        long long v101 = &selRef_drawMapRect_zoomScale_inContext_;
LABEL_57:
        [v102 v101[142] v103];

        goto LABEL_58;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    double v107 = *(void **)((char *)v37 + v95);
    id v108 = v107;
    if (v80)
    {
      NSString v109 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v109 = 0;
    }
    id v105 = &off_100809000;
    id v106 = v171;
    long long v101 = &selRef_drawMapRect_zoomScale_inContext_;
    [v107 setText:v109];

    goto LABEL_64;
  }
  swift_bridgeObjectRelease();
  if (v96) {
    goto LABEL_47;
  }
  long long v101 = &selRef_drawMapRect_zoomScale_inContext_;
  if (v82)
  {
    swift_bridgeObjectRelease();
    id v102 = *(id *)((char *)v37 + v95);
    NSString v103 = 0;
    goto LABEL_57;
  }
LABEL_55:
  [*(id *)((char *)v37 + v95) setHidden:1];
LABEL_58:
  id v105 = &off_100809000;
  id v106 = v171;
LABEL_64:
  uint64_t v110 = *(void **)((char *)v37 + v95);
  [v110 setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v177[(void)v37] addArrangedSubview:v110];
  id v111 = v105[96];
  id v112 = *(uint64_t (**)())((char *)v111 + (void)v37);
  [v112 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v113 = v112;
  sub_10035B6C4(v178);
  NSString v114 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v113 v101[142] v114];

  id v115 = *(id *)((char *)v111 + (void)v37);
  id v116 = [v91 tertiaryLabelColor];
  [v115 setTextColor:v116];

  id v117 = *(uint64_t (**)())((char *)v111 + (void)v37);
  [v117 setNumberOfLines:1];
  [v117 setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v106[(void)v37] addArrangedSubview:v117];
  unint64_t v180 = (char *)self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = xmmword_1006E41A0;
  uint64_t v119 = v173;
  id v120 = [*(id *)((char *)v37 + v173) topAnchor];
  id v121 = [v37 topAnchor];
  id v122 = [v120 constraintEqualToAnchor:v121];

  *(void *)(v118 + 32) = v122;
  id v123 = [*(id *)((char *)v37 + v119) leadingAnchor];
  id v124 = [v37 leadingAnchor];
  id v125 = [v123 constraintEqualToAnchor:v124];

  *(void *)(v118 + 40) = v125;
  id v126 = [*(id *)((char *)v37 + v119) bottomAnchor];
  id v127 = [v37 bottomAnchor];
  id v128 = [v126 constraintEqualToAnchor:v127];

  *(void *)(v118 + 48) = v128;
  id v129 = [*(id *)((char *)v37 + v119) trailingAnchor];
  id v130 = [v37 trailingAnchor];
  id v131 = [v129 constraintEqualToAnchor:v130];

  *(void *)(v118 + 56) = v131;
  uint64_t v132 = v179;
  id v133 = [*(id *)((char *)v37 + v179) topAnchor];
  id v134 = [v37 topAnchor];
  id v135 = [v133 constraintEqualToAnchor:v134];

  *(void *)(v118 + 64) = v135;
  id v136 = [*(id *)((char *)v37 + v132) leadingAnchor];
  id v137 = [v37 leadingAnchor];
  id v138 = [v136 constraintEqualToAnchor:v137];

  *(void *)(v118 + 72) = v138;
  id v139 = [*(id *)((char *)v37 + v132) bottomAnchor];
  id v140 = [v37 bottomAnchor];
  id v141 = [v139 constraintEqualToAnchor:v140];

  *(void *)(v118 + 80) = v141;
  id v142 = [*(id *)((char *)v37 + v132) trailingAnchor];
  id v143 = [v37 trailingAnchor];
  id v144 = [v142 constraintEqualToAnchor:v143];

  *(void *)(v118 + 88) = v144;
  uint64_t v145 = v172;
  id v146 = *(void **)((char *)v37 + v172);
  id v147 = [v146 heightAnchor];
  id v148 = [v146 widthAnchor];
  id v149 = [v147 constraintEqualToAnchor:v148];

  *(void *)(v118 + 96) = v149;
  id v150 = v174;
  id v151 = [*(id *)&v174[(void)v37] topAnchor];
  id v152 = [*(id *)(*(void *)((char *)v37 + v145)+ OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView) topAnchor];
  id v153 = [v151 constraintEqualToAnchor:v152];

  *(void *)(v118 + 104) = v153;
  id v154 = [*(id *)&v150[(void)v37] leadingAnchor];
  id v155 = [*(id *)(*(void *)((char *)v37 + v145)+ OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView) leadingAnchor];
  id v156 = [v154 constraintEqualToAnchor:v155];

  *(void *)(v118 + 112) = v156;
  id v157 = [*(id *)&v150[(void)v37] bottomAnchor];
  id v158 = [*(id *)(*(void *)((char *)v37 + v145)+ OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView) bottomAnchor];
  id v159 = [v157 constraintEqualToAnchor:v158];

  *(void *)(v118 + 120) = v159;
  id v160 = [*(id *)&v150[(void)v37] trailingAnchor];
  id v161 = [*(id *)(*(void *)((char *)v37 + v145)+ OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView) trailingAnchor];
  id v162 = [v160 constraintEqualToAnchor:v161];

  *(void *)(v118 + 128) = v162;
  uint64_t v182 = v118;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v180 activateConstraints:isa];

  sub_10034FE6C();
  int v164 = *((unsigned __int8 *)v37 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
  *((unsigned char *)v37 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
  if (v164 == 1 || !swift_unknownObjectWeakLoadStrong())
  {
  }
  else
  {
    id v165 = v37;
    sub_100491AF4();

    swift_unknownObjectRelease();
  }

  return v37;
}

uint64_t sub_10034FE6C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetImageView);
  sub_10064A610();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [v8 setAccessibilityValue:v10];

  Date.init()();
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    default:
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v11)
      {
LABEL_10:
        if (qword_1007F6A60 != -1) {
          swift_once();
        }
        uint64_t v12 = &qword_10083CF68;
      }
      else
      {
        if (qword_1007F6A58 != -1) {
          swift_once();
        }
        uint64_t v12 = &qword_10083CF60;
      }
      uint64_t v13 = (void *)*v12;
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
      unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v14;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v16 + v15, v4, v1);
      uint64_t v17 = self;
      id v18 = v13;
      swift_retain();
      id v19 = [v17 currentTraitCollection];
      sub_10017D574(4, 0, 1, v18, v19, (uint64_t)sub_1003528F4, v16);

      swift_release();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      return swift_release();
  }
}

uint64_t sub_100350230(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView;
  uint64_t v15 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView;
  type metadata accessor for ThirdPartyMediaColorEffectView();
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v4 = v1;
  *(void *)&v1[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView;
  uint64_t v14 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView;
  type metadata accessor for ThirdPartyMediaShadowEffectView();
  *(void *)&v4[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetImageView;
  *(void *)&v4[v6] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack;
  *(void *)&v4[v7] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack;
  *(void *)&v4[v8] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel;
  *(void *)&v4[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel;
  *(void *)&v4[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_categoryLabel;
  id v12 = [objc_allocWithZone((Class)UILabel) init];

  *(void *)&v4[v11] = v12;
  *(void *)&v4[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_currentSizeConstraints] = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
  type metadata accessor for ThirdPartyMediaAssetView();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_10035044C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v3 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v2) + 0x58);
  uint64_t v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v6 = v2;
  v4(12, v5);

  uint64_t v7 = self;
  uint64_t v8 = OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_currentSizeConstraints;
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 deactivateConstraints:isa];

  *(void *)(v1 + v8) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  switch(*(unsigned char *)(v1 + v3))
  {
    case 1:
      uint64_t v10 = 1;
      char v11 = 0;
      goto LABEL_5;
    case 3:
    case 4:
      sub_1003513A8();
      break;
    case 5:
      sub_100350D64();
      break;
    default:
      uint64_t v10 = 2;
      char v11 = 1;
LABEL_5:
      sub_100350630(v10, v11);
      break;
  }
  swift_bridgeObjectRetain();
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:v12];
}

uint64_t sub_100350630(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  [v2 setMaximumContentSizeCategory:UIContentSizeCategoryExtraLarge];
  [*(id *)&v2[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView] setBackgroundColor:0];
  id v51 = *(id *)&v2[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView];
  id v5 = [v51 layer];
  [v5 setCornerRadius:3.0];

  [*(id *)&v2[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack] setSpacing:0.0];
  id v50 = *(id *)&v2[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack];
  [v50 setSpacing:6.0];
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel];
  uint64_t v7 = self;
  id v8 = [v7 preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  id v55 = v8;
  long long v53 = xmmword_1007910E0;
  char v54 = 0;
  sub_10021B55C(&v55, (uint64_t *)&v53, &v52);
  uint64_t v9 = v52;
  id v55 = v52;
  long long v53 = unk_1007910F8;
  char v54 = 0;
  sub_10021B55C(&v55, (uint64_t *)&v53, &v52);

  uint64_t v10 = v52;
  char v11 = self;
  id v12 = [v11 fontWithDescriptor:v10 size:0.0];

  [v6 setFont:v12];
  [v6 setNumberOfLines:a1];
  uint64_t v13 = *(void **)&v3[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel];
  id v14 = [v7 preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  id v55 = v14;
  long long v53 = xmmword_100791130;
  char v54 = 0;
  sub_10021B55C(&v55, (uint64_t *)&v53, &v52);

  uint64_t v15 = v52;
  id v16 = [v11 fontWithDescriptor:v52 size:0.0];

  [v13 setFont:v16];
  id v17 = [self secondaryLabelColor];
  [v13 setTextColor:v17];

  [v13 setNumberOfLines:1];
  id v18 = *(void **)&v3[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_categoryLabel];
  if (a2) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = [v13 isHidden] ^ 1;
  }
  [v18 setHidden:v19];
  id v20 = [v7 preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  id v55 = v20;
  long long v53 = xmmword_100791168;
  char v54 = 0;
  sub_10021B55C(&v55, (uint64_t *)&v53, &v52);

  uint64_t v21 = v52;
  id v22 = [v11 fontWithDescriptor:v52 size:0.0];

  [v18 setFont:v22];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1006E41B0;
  id v24 = [v50 topAnchor];
  id v25 = [v3 topAnchor];
  id v26 = [v24 constraintGreaterThanOrEqualToAnchor:v25 constant:4.0];

  *(void *)(v23 + 32) = v26;
  id v27 = [v50 topAnchor];
  id v28 = [v3 topAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:12.0];

  LODWORD(v30) = 1132068864;
  [v29 setPriority:v30];
  *(void *)(v23 + 40) = v29;
  id v31 = [v50 leadingAnchor];
  id v32 = [v3 leadingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 constant:16.0];

  *(void *)(v23 + 48) = v33;
  id v34 = [v50 trailingAnchor];
  id v35 = [v3 trailingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 constant:-16.0];

  *(void *)(v23 + 56) = v36;
  id v37 = [v51 widthAnchor];
  id v38 = [v37 constraintEqualToConstant:16.0];

  *(void *)(v23 + 64) = v38;
  id v39 = [v51 topAnchor];
  id v40 = [v50 bottomAnchor];
  id v41 = [v39 constraintGreaterThanOrEqualToAnchor:v40 constant:6.0];

  *(void *)(v23 + 72) = v41;
  id v42 = [v51 leadingAnchor];
  id v43 = [v3 leadingAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:6.0];

  *(void *)(v23 + 80) = v44;
  id v45 = [v51 bottomAnchor];
  id v46 = [v3 bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:-6.0];

  *(void *)(v23 + 88) = v47;
  *(void *)&long long v53 = v23;
  specialized Array._endMutation()();
  *(void *)&v3[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_currentSizeConstraints] = v53;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100350D64()
{
  uint64_t v1 = v0;
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 secondarySystemGroupedBackgroundColor];
  [v4 setBackgroundColor:v5];

  id v43 = *(id *)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView];
  id v6 = [v43 layer];
  [v6 setCornerRadius:8.0];

  [*(id *)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack] setSpacing:4.0];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack];
  [v7 setSpacing:8.0];
  id v8 = *(void **)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel];
  uint64_t v9 = self;
  id v10 = [v9 preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v8 setFont:v10];

  [v8 setNumberOfLines:3];
  char v11 = *(void **)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel];
  id v12 = self;
  id v13 = [v12 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v47 = v13;
  long long v45 = xmmword_1007911A0;
  char v46 = 0;
  sub_10021B55C(&v47, (uint64_t *)&v45, &v44);

  id v14 = v44;
  id v15 = [v9 fontWithDescriptor:v44 size:0.0];

  [v11 setFont:v15];
  id v16 = [v3 secondaryLabelColor];
  [v11 setTextColor:v16];

  [v11 setNumberOfLines:2];
  id v17 = *(void **)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_categoryLabel];
  [v17 setHidden:0];
  id v18 = [v12 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v47 = v18;
  long long v45 = xmmword_1007911D8;
  char v46 = 0;
  sub_10021B55C(&v47, (uint64_t *)&v45, &v44);

  uint64_t v19 = v44;
  id v20 = [v9 fontWithDescriptor:v44 size:0.0];

  [v17 setFont:v20];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1006E0460;
  id v22 = [v7 topAnchor];
  id v23 = [v1 topAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:24.0];

  *(void *)(v21 + 32) = v24;
  id v25 = [v7 leadingAnchor];
  id v26 = [v1 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:20.0];

  *(void *)(v21 + 40) = v27;
  id v28 = [v7 trailingAnchor];
  id v29 = [v1 trailingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29 constant:-20.0];

  *(void *)(v21 + 48) = v30;
  id v31 = [v43 widthAnchor];
  id v32 = [v31 constraintEqualToConstant:60.0];

  *(void *)(v21 + 56) = v32;
  id v33 = [v43 topAnchor];
  id v34 = [v7 bottomAnchor];
  id v35 = [v33 constraintGreaterThanOrEqualToAnchor:v34 constant:16.0];

  *(void *)(v21 + 64) = v35;
  id v36 = [v43 leadingAnchor];
  id v37 = [v1 leadingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37 constant:16.0];

  *(void *)(v21 + 72) = v38;
  id v39 = [v43 bottomAnchor];
  id v40 = [v1 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40 constant:-16.0];

  *(void *)(v21 + 80) = v41;
  *(void *)&long long v45 = v21;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_currentSizeConstraints] = v45;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003513A8()
{
  uint64_t v1 = v0;
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryExtraLarge];
  [*(id *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView] setBackgroundColor:0];
  id v46 = *(id *)&v0[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView];
  id v2 = [v46 layer];
  [v2 setCornerRadius:3.0];

  [*(id *)&v0[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleArtistStack] setSpacing:0.0];
  id v45 = *(id *)&v0[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_labelsStack];
  [v45 setSpacing:0.0];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_titleLabel];
  id v4 = self;
  id v5 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleCaption2 compatibleWithTraitCollection:0];
  id v50 = v5;
  long long v48 = xmmword_100791020;
  char v49 = 0;
  sub_10021B55C(&v50, (uint64_t *)&v48, &v47);
  id v6 = v47;
  id v50 = v47;
  long long v48 = unk_100791038;
  char v49 = 0;
  sub_10021B55C(&v50, (uint64_t *)&v48, &v47);

  uint64_t v7 = v47;
  id v8 = self;
  id v9 = [v8 fontWithDescriptor:v7 size:0.0];

  [v3 setFont:v9];
  [v3 setNumberOfLines:2];
  id v10 = *(void **)&v0[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_artistLabel];
  id v11 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleCaption2 compatibleWithTraitCollection:0];
  id v50 = v11;
  long long v48 = xmmword_100791070;
  char v49 = 0;
  sub_10021B55C(&v50, (uint64_t *)&v48, &v47);

  id v12 = v47;
  id v13 = [v8 fontWithDescriptor:v47 size:0.0];

  [v10 setFont:v13];
  id v14 = [self tertiaryLabelColor];
  [v10 setTextColor:v14];

  [v10 setNumberOfLines:1];
  id v15 = *(void **)&v0[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_categoryLabel];
  [v15 setHidden:[v10 isHidden] ^ 1];
  id v16 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleCaption2 compatibleWithTraitCollection:0];
  id v50 = v16;
  long long v48 = xmmword_1007910A8;
  char v49 = 0;
  sub_10021B55C(&v50, (uint64_t *)&v48, &v47);

  id v17 = v47;
  id v18 = [v8 fontWithDescriptor:v47 size:0.0];

  [v15 setFont:v18];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1006E41B0;
  id v20 = [v45 topAnchor];
  id v21 = [v0 topAnchor];
  id v22 = [v20 constraintGreaterThanOrEqualToAnchor:v21 constant:2.0];

  *(void *)(v19 + 32) = v22;
  id v23 = [v45 topAnchor];
  id v24 = [v0 topAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:14.0];

  LODWORD(v26) = 1132068864;
  [v25 setPriority:v26];
  *(void *)(v19 + 40) = v25;
  id v27 = [v45 leadingAnchor];
  id v28 = [v0 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:6.0];

  *(void *)(v19 + 48) = v29;
  id v30 = [v45 trailingAnchor];
  id v31 = [v0 trailingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31 constant:-6.0];

  *(void *)(v19 + 56) = v32;
  id v33 = [v46 widthAnchor];
  id v34 = [v33 constraintEqualToConstant:16.0];

  *(void *)(v19 + 64) = v34;
  id v35 = [v46 topAnchor];
  id v36 = [v45 bottomAnchor];
  id v37 = [v35 constraintGreaterThanOrEqualToAnchor:v36 constant:6.0];

  *(void *)(v19 + 72) = v37;
  id v38 = [v46 leadingAnchor];
  id v39 = [v0 leadingAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39 constant:6.0];

  *(void *)(v19 + 80) = v40;
  id v41 = [v46 bottomAnchor];
  id v42 = [v1 bottomAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42 constant:-6.0];

  *(void *)(v19 + 88) = v43;
  *(void *)&long long v48 = v19;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_currentSizeConstraints] = v48;

  return swift_bridgeObjectRelease();
}

void *sub_100351AB0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_mediaAsset);
  id v2 = v1;
  return v1;
}

uint64_t sub_100351B10()
{
  return swift_bridgeObjectRelease();
}

id sub_100351BD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThirdPartyMediaAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for ThirdPartyMediaAssetView()
{
  return self;
}

uint64_t sub_100351CF4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  id v24 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  id v17 = v24;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
  aBlock[4] = sub_100352A3C;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A6B78;
  id v18 = _Block_copy(aBlock);
  id v19 = v17;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v28 = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  swift_release();
  return swift_release();
}

void sub_1003520B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&aBlock[-1] - v10;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)&aBlock[-1] - v16;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v19 = Strong;
    if (a2)
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = a2;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v17, a3, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
      sub_100045944((uint64_t)v17, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
      {
        id v21 = a2;
        id v22 = v19;
        id v23 = v21;
        id v24 = v22;
        sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
        id v27 = a2;
        id v28 = v19;
        id v41 = v27;
        id v29 = v28;
        static Date.now.getter();
        Date.timeIntervalSince(_:)();
        double v31 = v30;
        id v32 = *(void (**)(char *, uint64_t))(v6 + 8);
        v32(v8, v5);
        v32(v11, v5);
        if (v31 < 0.1)
        {
          id v33 = self;
          uint64_t v34 = swift_allocObject();
          id v35 = v41;
          *(void *)(v34 + 16) = v29;
          *(void *)(v34 + 24) = v35;
          aBlock[4] = sub_100352CE4;
          void aBlock[5] = v34;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10017D530;
          uint64_t aBlock[3] = &unk_1007A6BF0;
          id v36 = _Block_copy(aBlock);
          id v37 = v35;
          id v38 = v29;
          swift_release();
          [v33 transitionWithView:v38 duration:5242880 options:v36 animations:0 completion:0.0];
          _Block_release(v36);

          goto LABEL_13;
        }
      }
      static Animation.easeIn(duration:)();
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      static UIView.animate(_:changes:completion:)();

      swift_release();
LABEL_13:
      swift_release();
      sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
      char v39 = *((unsigned char *)v19 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
      *((unsigned char *)v19 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
      if ((v39 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
      {
        id v40 = v19;
        sub_100491AF4();

        goto LABEL_16;
      }

      goto LABEL_18;
    }
  }
  swift_beginAccess();
  uint64_t v25 = swift_unknownObjectWeakLoadStrong();
  if (!v25) {
    return;
  }
  a2 = (void *)v25;
  int v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
  *(unsigned char *)(v25 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
  if (v26 != 1 && swift_unknownObjectWeakLoadStrong())
  {
    sub_100491AF4();

LABEL_16:
    swift_unknownObjectRelease();
    return;
  }
LABEL_18:
}

void sub_1003525C8(void *a1, void *a2)
{
  uint64_t v4 = self;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v9[4] = sub_1003530A8;
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_10017D530;
  v9[3] = &unk_1007A6C40;
  uint64_t v6 = _Block_copy(v9);
  id v7 = a1;
  id v8 = a2;
  swift_release();
  [v4 transitionWithView:v7 duration:5242880 options:v6 animations:0 completion:0.0];
  _Block_release(v6);
}

id sub_1003526D4(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setHidden:1];
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView) setHidden:0];
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetShadowView) setHidden:0];
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_assetImageView);

  return [v4 setImage:a2];
}

BOOL sub_10035277C()
{
  return swift_dynamicCastClass() != 0;
}

id sub_1003527B4()
{
  return [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView)+ OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView) setHidden:1];
}

void sub_1003527E0(uint64_t a1, void *a2)
{
}

void sub_1003527E8(uint64_t a1, void *a2)
{
}

uint64_t sub_1003527F0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100352828()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003528F4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100351CF4(a1, v4, v5);
}

uint64_t sub_100352968()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100352A3C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1003520B0(v2, v3, v4);
}

uint64_t sub_100352AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100352AB0()
{
  return swift_release();
}

uint64_t sub_100352AB8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100352B38(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_100352BAC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100352C2C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_100352C9C()
{
  return swift_deallocObject();
}

void sub_100352CDC()
{
  sub_1003525C8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

id sub_100352CE4()
{
  return sub_1003526D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unsigned char *sub_100352CEC(void *a1, unsigned __int8 a2)
{
  unsigned __int8 v2 = a2;
  int v4 = a2;
  id v5 = objc_allocWithZone((Class)type metadata accessor for ThirdPartyMediaAssetView());
  id v6 = a1;
  id v7 = sub_10034E854(v6);
  id v8 = v7;
  if (v4 == 6) {
    unsigned __int8 v2 = 4;
  }
  char v9 = v7[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v7[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = v2;
  uint64_t v10 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  int v11 = v7[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated];
  uint64_t v12 = v7;
  if (v11 != 1 || (sub_10017CB6C(v2, v9) & 1) == 0)
  {
    sub_10035044C();
    v8[v10] = 1;
  }

  return v12;
}

void sub_100352DAC(void *a1)
{
  type metadata accessor for ThirdPartyMediaAssetView();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    unsigned __int8 v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = v4;
    uint64_t v6 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    int v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
    id v8 = a1;
    if (v7 != 1 || (sub_10017CB6C(v4, v5) & 1) == 0)
    {
      sub_10035044C();
      *(unsigned char *)(v1 + v6) = 1;
    }
  }
}

void sub_100352E74(void *a1)
{
  type metadata accessor for ThirdPartyMediaAssetView();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    unsigned __int8 v4 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView)
                  + OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView);
    id v5 = a1;
    [v4 setAlpha:0.0];
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v3;
    void v10[4] = sub_100353004;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10017D530;
    v10[3] = &unk_1007A6C90;
    id v8 = _Block_copy(v10);
    id v9 = v5;
    swift_release();
    [v6 animateWithDuration:65568 delay:v8 options:0 animations:0.1 completion:0.0];

    _Block_release(v8);
  }
}

uint64_t sub_100352FCC()
{
  return swift_deallocObject();
}

id sub_100353004()
{
  return [*(id *)(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal24ThirdPartyMediaAssetView_colorView)+ OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView) setAlpha:1.0];
}

uint64_t sub_100353044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003530CC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100809338);
  sub_100026A54(v0, (uint64_t)qword_100809338);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003531C8()
{
  v1[3] = v0;
  sub_100010218(&qword_1007F9DB8);
  v1[4] = swift_task_alloc();
  sub_100010218(&qword_1007F9F50);
  v1[5] = swift_task_alloc();
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100353314;
  return sub_100527E94();
}

uint64_t sub_100353314(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100353414, 0, 0);
}

uint64_t sub_100353414()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v1);
  }
  uint64_t v2 = v0[4];
  sub_10001B220(v0[3] + qword_10083D3B8, v2, &qword_1007F9DB8);
  uint64_t v3 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  if (v4 == 1)
  {
    sub_10001457C(v0[4], &qword_1007F9DB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
LABEL_5:
    sub_10001457C(v0[5], &qword_1007F9F50);
    if (qword_1007F6E38 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100809338);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "no visits data", v12, 2u);
      swift_slowDealloc();
    }

    goto LABEL_10;
  }
  sub_10001B220(v0[4], v0[5], &qword_1007F9F50);
  sub_1003547E8(v8, _s15GenericMapAssetC14GenericMapDataVMa);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1) {
    goto LABEL_5;
  }
  sub_10009C54C(v0[5], v0[8]);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[11] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1003536F8;
  uint64_t v16 = v0[3];
  unsigned char v15[16] = v0[8];
  v15[17] = v16;
  return _swift_task_switch(sub_100353F28, 0, 0);
}

uint64_t sub_1003536F8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003537F8, 0, 0);
}

uint64_t sub_1003537F8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(unsigned __int8 *)(*(void *)(v0 + 24) + qword_100810B20);
    *(unsigned char *)(v0 + 120) = v2;
    switch(v2)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          sub_1003547E8(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
          uint64_t v1 = *(void *)(v0 + 96);
          goto LABEL_10;
        }
        sub_100187574();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 104) = v9;
        void *v9 = v0;
        v9[1] = sub_100353A78;
        uint64_t result = sub_1003944C0(v5 * v8);
        break;
    }
  }
  else
  {
    sub_1003547E8(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v1);
  }
  return result;
}

uint64_t sub_100353A78(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100353B78, 0, 0);
}

uint64_t sub_100353B78()
{
  uint64_t v1 = (void *)v0[14];
  if (v1)
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v12)
    {
      sub_1003547E8(v0[8], _s10VisitAssetC9VisitDataVMa);

      goto LABEL_15;
    }
    if (qword_1007F6BA0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[8];
    sub_100529CC4(v1, *(void *)(v0[3] + qword_100810AF0), *(void *)(v0[3] + qword_100810AF0 + 8));

    uint64_t v11 = v13;
  }
  else
  {
    if (qword_1007F6E38 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_100809338);
    id v4 = v2;
    double v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    double v8 = v0[3];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v0[2] = v8;
      uint64_t v10 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v8;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%@ - error creating thumbnail from MKMap", v9, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      double v5 = v8;
    }

    uint64_t v11 = v0[8];
  }
  sub_1003547E8(v11, _s10VisitAssetC9VisitDataVMa);
LABEL_15:
  uint64_t v14 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_100353F08(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return _swift_task_switch(sub_100353F28, 0, 0);
}

uint64_t sub_100353F28()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  sub_100010218(&qword_10080F280);
  uint64_t v3 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
  sub_10003F820(v1, v5 + v4);
  *(void *)(v0 + 144) = sub_1001EA06C(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(unsigned char *)(v0 + 192) = *(unsigned char *)(v2 + qword_100810B20);
  *(void *)(v0 + 152) = *(void *)(v2 + qword_100810B30);
  type metadata accessor for MainActor();
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003540C8, v7, v6);
}

uint64_t sub_1003540C8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 192);
  swift_release();
  *(void *)(v0 + 168) = sub_100311520(v2, 0, v3, v1, 0);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100354164, 0, 0);
}

uint64_t sub_100354164()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100354288;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1001998C8;
  v0[13] = &unk_1007A6CB8;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100354288()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_10035442C;
  }
  else {
    uint64_t v2 = sub_100354398;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100354398()
{
  uint64_t v2 = (void *)v0[21];
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = (void *)v0[15];
  id v4 = [v3 image];

  uint64_t v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_10035442C()
{
  swift_willThrow();
  if (qword_1007F6E38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100809338);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    char v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    double v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *double v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_100354654()
{
  return sub_10001457C(v0 + qword_10083D3B8, &qword_1007F9DB8);
}

uint64_t sub_100354680(uint64_t a1)
{
  return sub_10001457C(a1 + qword_10083D3B8, &qword_1007F9DB8);
}

uint64_t type metadata accessor for GenericMapThumbnailCacheOperation()
{
  uint64_t result = qword_100809378;
  if (!qword_100809378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003546F8()
{
  sub_100354788();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_100354788()
{
  if (!qword_100809390)
  {
    _s15GenericMapAssetC14GenericMapDataVMa(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100809390);
    }
  }
}

uint64_t sub_1003547E0()
{
  return type metadata accessor for GenericMapThumbnailCacheOperation();
}

uint64_t sub_1003547E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100354848()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008094E0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008094E0);
  if (qword_1007F7D58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC08);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100354968()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal13SceneDelegate_window] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal13SceneDelegate_accessManager;
  type metadata accessor for AppSecureAccessManager();
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_100086C38();
  *(void *)&v2[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertWindow] = 0;
  uint64_t v3 = &v2[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertDialogLastDate];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  v2[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertDialogLastTypeShowed] = 4;
  *(void *)&v2[OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertSecondsBetweenDialogs] = 0x4014000000000000;
  BOOL v4 = &v2[OBJC_IVAR____TtC7Journal13SceneDelegate_deferredLaunchAction];
  uint64_t v5 = type metadata accessor for AppLaunchAction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for JournalNavigationCoordinator();
  swift_allocObject();
  *(void *)&v2[OBJC_IVAR____TtC7Journal13SceneDelegate_navigationCoordinator] = sub_10005DE10();

  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for SceneDelegate();
  [super init];
  uint64_t v7 = self;
  id v8 = v6;
  id v9 = [v7 defaultCenter];
  uint64_t v10 = qword_1007F6960;
  id v11 = v8;
  if (v10 != -1) {
    swift_once();
  }
  [v9 addObserver:v11 selector:"applicationDidUnlock" name:qword_10083CEC8 object:0];

  return v11;
}

void sub_100354B84(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:a1];
  uint64_t v3 = OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertWindow;
  BOOL v4 = *(void **)(v1 + OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertWindow);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal13SceneDelegate_systemAlertWindow) = v2;

  id v12 = [objc_allocWithZone((Class)UIViewController) init];
  id v5 = [v12 view];
  if (v5)
  {
    id v6 = v5;
    id v7 = [self clearColor];
    [v6 setBackgroundColor:v7];

    id v8 = *(void **)(v1 + v3);
    id v9 = v12;
    if (v8 && ([v8 setRootViewController:v12], v9 = v12, (uint64_t v10 = *(void **)(v1 + v3)) != 0))
    {
      type metadata accessor for Level(0);
      sub_10035A078();
      id v11 = v10;
      static _UIKitNumericRawRepresentable.+ infix(_:_:)();
      [v11 setWindowLevel:v13];
    }
    else
    {
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100354E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 176) = a5;
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 72) = a6;
  uint64_t v7 = type metadata accessor for AppLaunchAction();
  *(void *)(v6 + 80) = v7;
  *(void *)(v6 + 88) = *(void *)(v7 - 8);
  *(void *)(v6 + 96) = swift_task_alloc();
  sub_100010218(&qword_100809590);
  *(void *)(v6 + 104) = swift_task_alloc();
  *(void *)(v6 + 112) = swift_task_alloc();
  *(void *)(v6 + 120) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 128) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 136) = v9;
  *(void *)(v6 + 144) = v8;
  return _swift_task_switch(sub_100354F50, v9, v8);
}

uint64_t sub_100354F50()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 64) + OBJC_IVAR____TtC7Journal13SceneDelegate_deferredLaunchAction;
  swift_beginAccess();
  sub_10035B46C(v6, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v2, 1, 1, v4);
  swift_beginAccess();
  sub_100359BFC(v2, v6);
  swift_endAccess();
  sub_10035B46C(v1, v3);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  uint64_t v8 = *(void *)(v0 + 104);
  if (v7 == 1)
  {
    sub_10001457C(v8, &qword_100809590);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v9;
    void *v9 = v0;
    v9[1] = sub_1003553C0;
    char v10 = *(unsigned char *)(v0 + 176);
    uint64_t v11 = *(void *)(v0 + 72);
    return sub_100356A28(v10, v11);
  }
  else
  {
    sub_100359F18(v8, *(void *)(v0 + 96));
    double v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v13;
    *double v13 = v0;
    v13[1] = sub_100355160;
    uint64_t v14 = *(void *)(v0 + 96);
    return sub_100054994(v14);
  }
}

uint64_t sub_100355160(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 177) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  return _swift_task_switch(sub_100355288, v4, v3);
}

uint64_t sub_100355288()
{
  int v1 = *(unsigned __int8 *)(v0 + 177);
  sub_10035B4D4(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  if (v1 == 1)
  {
    sub_10001457C(*(void *)(v0 + 120), &qword_100809590);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1003553C0;
    char v5 = *(unsigned char *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 72);
    return sub_100356A28(v5, v6);
  }
}

uint64_t sub_1003553C0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 178) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  return _swift_task_switch(sub_1003554E8, v4, v3);
}

uint64_t sub_1003554E8()
{
  if (*(unsigned char *)(v0 + 178) == 1)
  {
    sub_10001457C(*(void *)(v0 + 120), &qword_100809590);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100355604;
    char v4 = *(unsigned char *)(v0 + 176);
    return sub_100357DDC(v4);
  }
}

uint64_t sub_100355604()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_100355724, v3, v2);
}

uint64_t sub_100355724()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  sub_10001457C(v1, &qword_100809590);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100355D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100355DA0, v6, v5);
}

uint64_t sub_100355DA0()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v2 = (const void *)v0[4];
  uint64_t v4 = (void *)v0[2];
  swift_release();
  v0[7] = _Block_copy(v2);
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_1008095F0 + dword_1008095F0);
  id v5 = v4;
  id v6 = v3;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100355E84;
  uint64_t v9 = v0[3];
  return v11(v9);
}

uint64_t sub_100355E84(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 56);
  uint64_t v4 = *(void **)(*v1 + 40);
  id v5 = *(void **)(*v1 + 24);
  id v6 = *(void **)(*v1 + 16);
  uint64_t v9 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  id v7 = *(uint64_t (**)(void))(v9 + 8);
  return v7();
}

uint64_t sub_100356004(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100809590);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *(void **)&v2[OBJC_IVAR____TtC7Journal13SceneDelegate_window];
  if (v13)
  {
    id v29 = v9;
    uint64_t v14 = a1;
    id v15 = v13;
    id v16 = [v15 windowScene];
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = [v16 activationState];

      a1 = v14;
      uint64_t v19 = (uint64_t)v29;
      if (!v18)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
        uint64_t v20 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal13SceneDelegate_deferredLaunchAction];
        swift_beginAccess();
        sub_100359BFC((uint64_t)v12, v20);
        swift_endAccess();
        uint64_t v21 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 1, 1, v21);
        sub_100359B98(v14, (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
        type metadata accessor for MainActor();
        id v22 = v2;
        uint64_t v23 = v19;
        uint64_t v24 = static MainActor.shared.getter();
        unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        int v26 = (void *)swift_allocObject();
        v26[2] = v24;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v22;
        sub_100359F18((uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v26 + v25);
        sub_100328A8C(v23, (uint64_t)&unk_1008095A0, (uint64_t)v26);
        return swift_release();
      }
    }
    else
    {

      a1 = v14;
    }
  }
  sub_100359B98(a1, (uint64_t)v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
  uint64_t v28 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal13SceneDelegate_deferredLaunchAction];
  swift_beginAccess();
  sub_100359BFC((uint64_t)v12, v28);
  return swift_endAccess();
}

uint64_t sub_100356354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  _OWORD v5[2] = a1;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_1003563F0, v7, v6);
}

uint64_t sub_1003563F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100356494;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_100054994(v2);
}

uint64_t sub_100356494(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 72) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_1003565BC, v4, v3);
}

uint64_t sub_1003565BC()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100356628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  _OWORD v5[2] = a1;
  v5[5] = type metadata accessor for CanvasStartingState();
  v5[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_1003566F4, v7, v6);
}

uint64_t sub_1003566F4()
{
  uint64_t v2 = (int *)v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = type metadata accessor for WidgetFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = (void *)(v1 + v2[5]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = v1 + v2[6];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(unsigned char *)(v1 + v2[7]) = 1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10035684C;
  uint64_t v9 = v0[6];
  return sub_100059E88(v3, v9);
}

uint64_t sub_10035684C(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  *(unsigned char *)(*v1 + 88) = a1;
  swift_task_dealloc();
  sub_10035B4D4(v3, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_1003569AC, v5, v4);
}

uint64_t sub_1003569AC()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100356A28(char a1, uint64_t a2)
{
  *(void *)(v3 + 232) = a2;
  *(void *)(v3 + 240) = v2;
  *(unsigned char *)(v3 + 369) = a1;
  type metadata accessor for MainActor();
  *(void *)(v3 + 248) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 256) = v5;
  *(void *)(v3 + 264) = v4;
  return _swift_task_switch(sub_100356AC4, v5, v4);
}

uint64_t sub_100356AC4()
{
  if (((*(unsigned char *)(v0 + 369) & 1) != 0 || *(void *)(v0 + 232) >= 0x3CuLL)
    && (*(void *)(v0 + 272) = *(void *)(*(void *)(v0 + 240)
                                          + OBJC_IVAR____TtC7Journal13SceneDelegate_navigationCoordinator),
        (sub_1000533E0() & 1) != 0))
  {
    if (sub_100189D40())
    {
      char v1 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v1;
      *char v1 = v0;
      v1[1] = sub_100356C94;
      char v2 = 0;
LABEL_11:
      return sub_10005C0CC(v2);
    }
    if (sub_10018A320())
    {
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_100356DB4;
      char v2 = 4;
      goto LABEL_11;
    }
    uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_10080F6B8 + dword_10080F6B8);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v6;
    void *v6 = v0;
    v6[1] = sub_100356ED4;
    return v7();
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3(0);
  }
}

uint64_t sub_100356C94()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_10035B6A8, v3, v2);
}

uint64_t sub_100356DB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_10035B6A8, v3, v2);
}

uint64_t sub_100356ED4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 370) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  return _swift_task_switch(sub_100356FFC, v4, v3);
}

uint64_t sub_100356FFC()
{
  if (*(unsigned char *)(v0 + 370) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100357220;
    char v2 = 2;
LABEL_5:
    return sub_10005C0CC(v2);
  }
  if (sub_1003E2500())
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100357340;
    char v2 = 3;
    goto LABEL_5;
  }
  id v5 = [self standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  uint64_t v7 = (uint64_t)[v5 integerForKey:v6];

  if (v7 >= 5)
  {
    if (qword_1007F6BF8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 320) = qword_10083D1E8;
    return _swift_task_switch(sub_1003574C4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(0);
  }
}

uint64_t sub_100357220()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_10035B6A8, v3, v2);
}

uint64_t sub_100357340()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100357460, v3, v2);
}

uint64_t sub_100357460()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_1003574C4()
{
  uint64_t v1 = *(void **)(v0[40] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_1003575CC;
  uint64_t v2 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100232BB4;
  v0[21] = &unk_1007A6CD0;
  v0[22] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003575CC()
{
  return _swift_task_switch(sub_1003576AC, 0, 0);
}

uint64_t sub_1003576AC()
{
  uint64_t v1 = (void *)v0[28];
  v0[41] = [v1 authorizationStatus];

  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  return _swift_task_switch(sub_100357724, v2, v3);
}

uint64_t sub_100357724()
{
  if (v0[41])
  {
    swift_release();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1(0);
  }
  else
  {
    v0[42] = qword_10083D1E8;
    return _swift_task_switch(sub_1003577D4, 0, 0);
  }
}

uint64_t sub_1003577D4()
{
  uint64_t v1 = *(void **)(v0[42] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[10] = v0;
  v0[15] = v0 + 46;
  v0[11] = sub_1003578E0;
  uint64_t v2 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_100232C08;
  v0[26] = &unk_1007A6CE8;
  v0[27] = v2;
  [v1 requestAuthorizationWithOptions:6 completionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_1003578E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 344) = v1;
  if (v1) {
    uint64_t v2 = sub_100357BC8;
  }
  else {
    uint64_t v2 = sub_1003579F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003579F0()
{
  int v1 = *(unsigned __int8 *)(v0 + 368);
  uint64_t v2 = *(void **)(*(void *)(v0 + 336) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
  [v2 setIsJournalingScheduleEnabled:0];
  [v2 setIsStreakReminderEnabled:0];
  if (v1 == 1)
  {
    if (qword_1007F6BF0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_1008043B0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      NSString v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "😊 notifications authorization granted 😊", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100357C48;
    return sub_100232CBC(0, 0, 0, 1);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 256);
    uint64_t v10 = *(void *)(v0 + 264);
    return _swift_task_switch(sub_10035B6A8, v9, v10);
  }
}

uint64_t sub_100357BC8()
{
  swift_willThrow();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  return _swift_task_switch(sub_10035B6A8, v1, v2);
}

uint64_t sub_100357C48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100357D64;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 256);
    uint64_t v5 = *(void *)(v2 + 264);
    uint64_t v3 = sub_10035B6A8;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100357D64()
{
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  return _swift_task_switch(sub_10035B6A8, v1, v2);
}

uint64_t sub_100357DDC(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  *(void *)(v2 + 24) = type metadata accessor for CanvasStartingState();
  *(void *)(v2 + 32) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 40) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v3;
  return _swift_task_switch(sub_100357EA8, v4, v3);
}

uint64_t sub_100357EA8()
{
  if (*(unsigned char *)(v0 + 104) == 1
    && (uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal13SceneDelegate_navigationCoordinator),
        *(void *)(v0 + 64) = v1,
        (sub_1000533E0() & 1) != 0))
  {
    *(void *)(v0 + 72) = *(void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_listViewModel);
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100357FC0;
    return sub_100037874();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4(0);
  }
}

uint64_t sub_100357FC0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_10035810C, v4, v3);
}

uint64_t sub_10035810C()
{
  if (v0[11])
  {
    uint64_t v2 = (int *)v0[3];
    uint64_t v1 = v0[4];
    uint64_t v3 = type metadata accessor for WidgetFamily();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
    uint64_t v4 = (void *)(v1 + v2[5]);
    *uint64_t v4 = 0;
    v4[1] = 0;
    uint64_t v5 = v1 + v2[6];
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    *(unsigned char *)(v1 + v2[7]) = 1;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[12] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1003582BC;
    uint64_t v8 = v0[11];
    uint64_t v9 = v0[4];
    return sub_100059E88(v8, v9);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11(0);
  }
}

uint64_t sub_1003582BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  swift_release();
  sub_10035B4D4(v2, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100358430, v4, v3);
}

uint64_t sub_100358430()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

id sub_1003584A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneDelegate();
  return [super dealloc];
}

uint64_t sub_100358558()
{
  return type metadata accessor for SceneDelegate();
}

uint64_t type metadata accessor for SceneDelegate()
{
  uint64_t result = qword_100809560;
  if (!qword_100809560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003585AC()
{
  sub_10035867C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10035867C()
{
  if (!qword_100809580)
  {
    type metadata accessor for AppLaunchAction();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100809580);
    }
  }
}

uint64_t sub_1003586D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100052588;
  return v6();
}

uint64_t sub_1003587A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100052588;
  return v7();
}

uint64_t sub_10035886C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10001457C(a1, &qword_1007FA1D0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_100358A18(void *a1, NSObject *a2)
{
  uint64_t v3 = v2;
  uint64_t v87 = a2;
  uint64_t v5 = type metadata accessor for AppLaunchAction();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_100809590);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v76 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v76 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v76 - v19);
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v78 = v5;
    id v23 = objc_allocWithZone((Class)UIWindow);
    id v83 = a1;
    id v24 = [v23 initWithWindowScene:v22];
    unint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC7Journal13SceneDelegate_window);
    *(void *)(v3 + OBJC_IVAR____TtC7Journal13SceneDelegate_window) = v24;
    id v26 = v24;

    id v27 = sub_100053278();
    [v26 setRootViewController:v27];

    id v82 = v26;
    [v26 makeKeyAndVisible];
    sub_10008342C(v22);
    sub_100354B84(v22);
    id v28 = [self defaultCenter];
    if (qword_1007F6E60 != -1) {
      swift_once();
    }
    uint64_t v81 = v14;
    uint64_t v77 = v6;
    uint64_t v85 = v11;
    uint64_t v86 = v17;
    uint64_t v84 = v20;
    [v28 addObserver:v3 selector:@selector(showSystemAlertWithNotification:) name:qword_10083D3E8 object:0];

    id v80 = [self sharedApplication];
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1006D6D30;
    if (qword_1007F7920 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    NSString v30 = String._bridgeToObjectiveC()();
    double v31 = self;
    id v32 = [v31 iconWithSystemImageName:v30];

    id v33 = objc_allocWithZone((Class)UIApplicationShortcutItem);
    NSString v34 = String._bridgeToObjectiveC()();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v33 initWithType:v34 localizedTitle:v35 localizedSubtitle:0 icon:v32 userInfo:0];

    *(void *)(v29 + 32) = v36;
    if (qword_1007F7928 != -1) {
      swift_once();
    }
    uint64_t v79 = v3;
    id v37 = objc_allocWithZone((Class)SBSApplicationShortcutSystemPrivateIcon);
    swift_bridgeObjectRetain();
    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v37 initWithSystemImageName:v38];

    id v40 = [objc_allocWithZone((Class)UIApplicationShortcutIcon) initWithSBSApplicationShortcutIcon:v39];
    if (v40)
    {
      id v41 = objc_allocWithZone((Class)UIApplicationShortcutItem);
      NSString v42 = String._bridgeToObjectiveC()();
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v44 = [v41 initWithType:v42 localizedTitle:v43 localizedSubtitle:0 icon:v40 userInfo:0];

      *(void *)(v29 + 40) = v44;
      if (qword_1007F7930 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      NSString v45 = String._bridgeToObjectiveC()();
      id v46 = [v31 iconWithSystemImageName:v45];

      id v47 = objc_allocWithZone((Class)UIApplicationShortcutItem);
      NSString v48 = String._bridgeToObjectiveC()();
      NSString v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v50 = [v47 initWithType:v48 localizedTitle:v49 localizedSubtitle:0 icon:v46 userInfo:0];

      *(void *)(v29 + 48) = v50;
      if (qword_1007F7938 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      NSString v51 = String._bridgeToObjectiveC()();
      id v52 = [v31 iconWithSystemImageName:v51];

      id v53 = objc_allocWithZone((Class)UIApplicationShortcutItem);
      NSString v54 = String._bridgeToObjectiveC()();
      NSString v55 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v56 = [v53 initWithType:v54 localizedTitle:v55 localizedSubtitle:0 icon:v52 userInfo:0];

      *(void *)(v29 + 56) = v56;
      v89[0] = v29;
      specialized Array._endMutation()();
      sub_10001B284(0, &qword_100809620);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v58 = v80;
      [v80 setShortcutItems:isa];

      uint64_t v59 = v84;
      uint64_t v60 = v79;
      if (qword_1007F6C18 != -1) {
        swift_once();
      }
      sub_100240B08();
      sub_1004B2778(v87, v59);
      uint64_t v61 = (uint64_t)v86;
      uint64_t v62 = (uint64_t)v81;
      if (qword_1007F6E40 != -1) {
        swift_once();
      }
      uint64_t v63 = type metadata accessor for Logger();
      sub_100026A54(v63, (uint64_t)qword_1008094E0);
      sub_10035B46C((uint64_t)v59, v61);
      id v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v66 = 136315138;
        sub_10035B46C(v61, v62);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v62, 1, v78) == 1)
        {
          sub_10001457C(v62, &qword_100809590);
          unint64_t v67 = 0xE300000000000000;
          uint64_t v68 = 7104878;
        }
        else
        {
          sub_100359B98(v62, v76);
          uint64_t v68 = String.init<A>(describing:)();
          unint64_t v67 = v73;
          sub_10035B4D4(v62, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
        }
        uint64_t v88 = sub_10011EA98(v68, v67, v89);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10001457C((uint64_t)v86, &qword_100809590);
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "scene(:willConnectTo:options:) w/ launchAction=%s", v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10001457C(v61, &qword_100809590);
      }

      uint64_t v74 = (uint64_t)v85;
      sub_10035B46C((uint64_t)v59, (uint64_t)v85);
      uint64_t v75 = v60 + OBJC_IVAR____TtC7Journal13SceneDelegate_deferredLaunchAction;
      swift_beginAccess();
      sub_100359BFC(v74, v75);
      swift_endAccess();

      sub_10001457C((uint64_t)v59, &qword_100809590);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1007F6E40 != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    sub_100026A54(v69, (uint64_t)qword_1008094E0);
    uint64_t v87 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v70))
    {
      UIAccessibilityTraits v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)UIAccessibilityTraits v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v87, v70, "UIScene != UIWindowScene!", v71, 2u);
      swift_slowDealloc();
    }
    id v72 = v87;
  }
}

void sub_100359580()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = 0;
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC7Journal13SceneDelegate_accessManager]
     + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp;
  if (*(unsigned char *)(v7 + 8)) {
    goto LABEL_6;
  }
  unint64_t v8 = *(void *)v7;
  __uint64_t v9 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  unint64_t v10 = v9 - v8;
  if (v9 < v8)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v6 = v10 / 0x3B9ACA00;
  if (v10 < 0xDF8475800) {
    goto LABEL_6;
  }
  uint64_t v11 = self;
  id v12 = [v11 standardUserDefaults];
  id v13 = [v11 standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t v15 = (char *)[v13 integerForKey:v14];

  if (__OFADD__(v15, 1))
  {
LABEL_18:
    __break(1u);
    return;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  [v12 setInteger:v15 + 1 forKey:v16];

LABEL_6:
  id v17 = sub_100053338();
  if (v6 >= 0x1E0 && (sub_1000533E0() & 1) != 0)
  {
    v26[3] = type metadata accessor for SceneDelegate();
    v26[0] = v1;
    id v18 = v1;
    sub_100256B7C(0);
    sub_10001457C((uint64_t)v26, &qword_1007FAD50);
    sub_10025CC1C(0);
  }
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  id v19 = sub_10004D528(1);
  if ((v20 & 1) == 0 && !v19) {
    goto LABEL_16;
  }
  uint64_t v21 = enum case for Tips.InvalidationReason.actionPerformed(_:);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v22(v5, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
  sub_1001D591C();
  Tip.invalidate(reason:)();
  id v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v5, v2);
  id v24 = sub_10004D528(1);
  if (v25) {
    goto LABEL_16;
  }
  if (v24 == (id)1)
  {
    v22(v5, v21, v2);
    sub_1001A3414();
    Tip.invalidate(reason:)();

    v23(v5, v2);
  }
  else
  {
LABEL_16:
  }
}

__uint64_t sub_1003598DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v5 = sub_100053278();
  sub_100210020(v5);

  type metadata accessor for AssetPostprocessingOperation();
  sub_10039D88C();
  sub_10049D428();
  unint64_t v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  uint64_t v7 = (objc_class *)type metadata accessor for AssetContentTypeOperation();
  unint64_t v8 = objc_allocWithZone(v7);
  *(void *)&v8[qword_1008062A0] = v6;
  v8[qword_100806298] = 0;
  v20.receiver = v8;
  v20.super_class = v7;
  id v9 = v6;
  id v10 = [super init];
  if (qword_1007F6EE0 != -1) {
    swift_once();
  }
  [(id)qword_10083D450 addOperation:v10];

  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC7Journal13SceneDelegate_accessManager];
  char v12 = *(unsigned char *)(v11 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_isNewAppLaunch);
  if (*(unsigned char *)(v11 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp + 8))
  {
    unint64_t v13 = 0;
LABEL_9:
    sub_100083C5C();
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
    type metadata accessor for MainActor();
    id v17 = v1;
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    *(void *)(v19 + 32) = v17;
    *(unsigned char *)(v19 + 40) = v12;
    *(void *)(v19 + 48) = v13;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_100809618, v19);
    return swift_release();
  }
  unint64_t v14 = *(void *)(v11 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp);
  __uint64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (result >= v14)
  {
    unint64_t v13 = (result - v14) / 0x3B9ACA00;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_100359B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100359BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100809590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100359C64()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppLaunchAction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();

  uint64_t v3 = v0 + v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = type metadata accessor for URL();
      goto LABEL_5;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      uint64_t v4 = type metadata accessor for UUID();
LABEL_5:
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)(v4 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v2, 1, v4)) {
        goto LABEL_6;
      }
      break;
    case 3u:
      uint64_t v8 = type metadata accessor for WidgetFamily();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v2, 1, v8)) {
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v2, v8);
      }
      uint64_t v10 = type metadata accessor for CanvasStartingState();
      swift_bridgeObjectRelease();
      v3 += *(int *)(v10 + 24);
      uint64_t v5 = type metadata accessor for Date();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5)) {
LABEL_6:
      }
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
      break;
    default:
      break;
  }

  return swift_deallocObject();
}

uint64_t sub_100359F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100359F7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AppLaunchAction() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_100356354(a1, v5, v6, v7, v8);
}

unint64_t sub_10035A078()
{
  unint64_t result = qword_1007FBB68;
  if (!qword_1007FBB68)
  {
    type metadata accessor for Level(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBB68);
  }
  return result;
}

uint64_t sub_10035A0D0()
{
  _Block_release(*(const void **)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_10035A120()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_10002C194;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1008095B0 + dword_1008095B0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_10035A1E8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10035A220(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002C194;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1008095E0 + dword_1008095E0);
  return v6(a1, v4);
}

uint64_t sub_10035A2D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AppLaunchAction();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v36 - v6;
  uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100809590);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (void *)((char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v36 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v36 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (void *)((char *)v36 - v21);
  uint64_t v23 = swift_bridgeObjectRetain();
  id v24 = (void *)sub_1003F22BC(v23);
  swift_bridgeObjectRelease();
  if (v24)
  {
    id v25 = [v24 URL];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
  }
  else
  {
    uint64_t v27 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
  }
  sub_1004B2C90((uint64_t)v10, v22);
  sub_10001457C((uint64_t)v10, (uint64_t *)&unk_100800A60);
  if (qword_1007F6E40 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_100026A54(v28, (uint64_t)qword_1008094E0);
  sub_10035B46C((uint64_t)v22, (uint64_t)v19);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v36[0] = v4;
    v36[1] = v1;
    double v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)double v31 = 136315138;
    sub_10035B46C((uint64_t)v19, (uint64_t)v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v16, 1, v38) == 1)
    {
      sub_10001457C((uint64_t)v16, &qword_100809590);
      unint64_t v32 = 0xE300000000000000;
      uint64_t v33 = 7104878;
    }
    else
    {
      sub_100359B98((uint64_t)v16, (uint64_t)v7);
      uint64_t v33 = String.init<A>(describing:)();
      unint64_t v32 = v34;
      sub_10035B4D4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    }
    uint64_t v39 = sub_10011EA98(v33, v32, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v19, &qword_100809590);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "scene(:openURLContexts:) w/ launchAction=%s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = (char *)v36[0];
  }
  else
  {
    sub_10001457C((uint64_t)v19, &qword_100809590);
  }
  sub_10035B46C((uint64_t)v22, (uint64_t)v13);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48))(v13, 1, v38) == 1)
  {
    sub_10001457C((uint64_t)v22, &qword_100809590);
    uint64_t v22 = v13;
  }
  else
  {
    sub_100359F18((uint64_t)v13, (uint64_t)v4);
    sub_100356004((uint64_t)v4);
    sub_10035B4D4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  }
  return sub_10001457C((uint64_t)v22, &qword_100809590);
}

uint64_t sub_10035A80C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = type metadata accessor for AppLaunchAction();
  uint64_t v4 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_100010218(&qword_100809590);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v30 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v30 - v20;
  sub_1004B47C0(a1, (char *)&v30 - v20);
  if (qword_1007F6E40 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100026A54(v22, (uint64_t)qword_1008094E0);
  sub_10035B46C((uint64_t)v21, (uint64_t)v18);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    double v31 = v6;
    uint64_t v32 = v2;
    id v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)id v25 = 136315138;
    sub_10035B46C((uint64_t)v18, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v33) == 1)
    {
      sub_10001457C((uint64_t)v15, &qword_100809590);
      unint64_t v26 = 0xE300000000000000;
      uint64_t v27 = 7104878;
    }
    else
    {
      sub_100359B98((uint64_t)v15, (uint64_t)v9);
      uint64_t v27 = String.init<A>(describing:)();
      unint64_t v26 = v28;
      sub_10035B4D4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    }
    uint64_t v34 = sub_10011EA98(v27, v26, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v18, &qword_100809590);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "scene(:continue:) w/ launchAction=%s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v31;
  }
  else
  {
    sub_10001457C((uint64_t)v18, &qword_100809590);
  }
  sub_10035B46C((uint64_t)v21, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v33) == 1)
  {
    sub_10001457C((uint64_t)v21, &qword_100809590);
    uint64_t v21 = v12;
  }
  else
  {
    sub_100359F18((uint64_t)v12, (uint64_t)v6);
    sub_100356004((uint64_t)v6);
    sub_10035B4D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  }
  return sub_10001457C((uint64_t)v21, &qword_100809590);
}

uint64_t sub_10035AC34(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for AppLaunchAction();
  uint64_t v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_100010218(&qword_100809590);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[17] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[18] = v5;
  v2[19] = v4;
  return _swift_task_switch(sub_10035AD9C, v5, v4);
}

uint64_t sub_10035AD9C()
{
  uint64_t v37 = v0;
  id v1 = *(id *)(v0 + 48);
  id v2 = [v1 type];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v39._uint64_t countAndFlagsBits = v3;
  v39._object = v5;
  char v6 = sub_10030FDD8(v39);

  if (v6 == 4) {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 72) + 56))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 64));
  }
  else {
    sub_10030FA68(v6, *(void *)(v0 + 128));
  }
  if (qword_1007F6E40 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v9 = type metadata accessor for Logger();
  sub_100026A54(v9, (uint64_t)qword_1008094E0);
  sub_10035B46C(v7, v8);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 120);
  if (v12)
  {
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    sub_10035B46C(v13, v14);
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, v16);
    uint64_t v19 = *(void *)(v0 + 112);
    if (v18 == 1)
    {
      sub_10001457C(*(void *)(v0 + 112), &qword_100809590);
      unint64_t v20 = 0xE300000000000000;
      uint64_t v21 = 7104878;
    }
    else
    {
      sub_100359B98(*(void *)(v0 + 112), *(void *)(v0 + 88));
      uint64_t v21 = String.init<A>(describing:)();
      unint64_t v20 = v22;
      sub_10035B4D4(v19, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    }
    uint64_t v23 = *(void *)(v0 + 120);
    *(void *)(v0 + 40) = sub_10011EA98(v21, v20, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001457C(v23, &qword_100809590);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "windowScene(:performActionFor:) w/ launchAction=%s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001457C(*(void *)(v0 + 120), &qword_100809590);
  }

  uint64_t v24 = *(void *)(v0 + 104);
  uint64_t v25 = *(void *)(v0 + 64);
  uint64_t v26 = *(void *)(v0 + 72);
  sub_10035B46C(*(void *)(v0 + 128), v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_10001457C(*(void *)(v0 + 128), &qword_100809590);
    swift_release();
    sub_10001457C(*(void *)(v0 + 104), &qword_100809590);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27(0);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v30 = *(void *)(v0 + 72);
    uint64_t v32 = *(void *)(v0 + 56);
    uint64_t v31 = *(void *)(v0 + 64);
    sub_100359F18(*(void *)(v0 + 104), *(void *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v29, 1, 1, v31);
    uint64_t v33 = v32 + OBJC_IVAR____TtC7Journal13SceneDelegate_deferredLaunchAction;
    swift_beginAccess();
    sub_100359BFC(v29, v33);
    swift_endAccess();
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_10035B24C;
    uint64_t v35 = *(void *)(v0 + 80);
    return sub_100054994(v35);
  }
}

uint64_t sub_10035B24C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 168) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  return _swift_task_switch(sub_10035B374, v4, v3);
}

uint64_t sub_10035B374()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  sub_10035B4D4(v1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 168);
  sub_10001457C(*(void *)(v0 + 128), &qword_100809590);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10035B46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100809590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035B4D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10035B534()
{
  unint64_t result = qword_100809600;
  if (!qword_100809600)
  {
    sub_10001B284(255, &qword_1008095F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809600);
  }
  return result;
}

uint64_t sub_10035B59C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10035B5DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_100354E0C(a1, v4, v5, v6, v7, v8);
}

ValueMetadata *type metadata accessor for MediaViewType()
{
  return &type metadata for MediaViewType;
}

uint64_t sub_10035B6C4(char a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  switch(a1)
  {
    case 5:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:defaultValue:table:bundle:locale:comment:)();
      break;
    default:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:table:bundle:locale:comment:)();
      break;
  }
  return result;
}

unint64_t sub_10035B968(char a1)
{
  unint64_t result = 1735290739;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75626C41676E6F73;
      break;
    case 2:
      unint64_t result = 0x74736163646F70;
      break;
    case 3:
      unint64_t result = 0x4174736163646F70;
      break;
    case 4:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 5:
      unint64_t result = 0x7261506472696874;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10035BA94(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_100010218(&qword_1008096D0);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  id v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1008096D8);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  id v44 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008096E0);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  id v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1008096E8);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1008096F0);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_1008096F8);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_100809700);
  uint64_t v32 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  int v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100809708);
  uint64_t v31 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100809710);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10035D3C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch((char)v50)
  {
    case 1:
      char v54 = 1;
      sub_10035D610();
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 2:
      char v55 = 2;
      sub_10035D5BC();
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 3:
      char v56 = 3;
      sub_10035D568();
      uint64_t v27 = v35;
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_10;
    case 4:
      char v57 = 4;
      sub_10035D514();
      uint64_t v27 = v38;
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_10;
    case 5:
      char v58 = 5;
      sub_10035D4C0();
      uint64_t v27 = v41;
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_10;
    case 6:
      char v59 = 6;
      sub_10035D46C();
      uint64_t v27 = v44;
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
      goto LABEL_10;
    case 7:
      char v60 = 7;
      sub_10035D418();
      uint64_t v27 = v47;
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v29 = v48;
      uint64_t v28 = v49;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v53 = 0;
      sub_10035D664();
      uint64_t v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
}

uint64_t sub_10035C208(uint64_t a1)
{
  unint64_t v2 = sub_10035D514();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C244(uint64_t a1)
{
  unint64_t v2 = sub_10035D514();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10035C280()
{
  return sub_10035B968(*v0);
}

uint64_t sub_10035C288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10035C710(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10035C2B0(uint64_t a1)
{
  unint64_t v2 = sub_10035D3C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C2EC(uint64_t a1)
{
  unint64_t v2 = sub_10035D3C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C328(uint64_t a1)
{
  unint64_t v2 = sub_10035D568();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C364(uint64_t a1)
{
  unint64_t v2 = sub_10035D568();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C3A0(uint64_t a1)
{
  unint64_t v2 = sub_10035D5BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C3DC(uint64_t a1)
{
  unint64_t v2 = sub_10035D5BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C418(uint64_t a1)
{
  unint64_t v2 = sub_10035D610();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C454(uint64_t a1)
{
  unint64_t v2 = sub_10035D610();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C490(uint64_t a1)
{
  unint64_t v2 = sub_10035D664();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C4CC(uint64_t a1)
{
  unint64_t v2 = sub_10035D664();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C508(uint64_t a1)
{
  unint64_t v2 = sub_10035D46C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C544(uint64_t a1)
{
  unint64_t v2 = sub_10035D46C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C580(uint64_t a1)
{
  unint64_t v2 = sub_10035D418();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C5BC(uint64_t a1)
{
  unint64_t v2 = sub_10035D418();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C5F8(uint64_t a1)
{
  unint64_t v2 = sub_10035D4C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10035C634(uint64_t a1)
{
  unint64_t v2 = sub_10035D4C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10035C670@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10035CA90(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10035C69C(void *a1)
{
  return sub_10035BA94(a1, *v1);
}

unint64_t sub_10035C6BC()
{
  unint64_t result = qword_100809630;
  if (!qword_100809630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809630);
  }
  return result;
}

uint64_t sub_10035C710(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75626C41676E6F73 && a2 == 0xE90000000000006DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736163646F70 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4174736163646F70 && a2 == 0xED00007473697472 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6F626F69647561 && a2 == 0xE90000000000006BLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7261506472696874 && a2 == 0xEF616964654D7974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100699D70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100699D90)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_10035CA90(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_100809638);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  char v59 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100010218(&qword_100809640);
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v62 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100809648);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100809650);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  __chkstk_darwin(v8);
  char v60 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100809658);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  __chkstk_darwin(v11);
  char v58 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100010218(&qword_100809660);
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  char v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100809668);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_100809670);
  uint64_t v44 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_100809678);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v63 = a1;
  sub_10002E0BC(a1, v25);
  sub_10035D3C4();
  uint64_t v26 = v64;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v26) {
    goto LABEL_16;
  }
  id v41 = v20;
  uint64_t v40 = v18;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v62;
  uint64_t v64 = v22;
  uint64_t v30 = v24;
  uint64_t v31 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v34 = v33;
    sub_100010218(&qword_100809688);
    *uint64_t v34 = &type metadata for MediaViewType;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
LABEL_16:
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v63);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v66 = 1;
      sub_10035D610();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v47);
      break;
    case 2:
      char v67 = 2;
      sub_10035D5BC();
      uint64_t v35 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v45);
      break;
    case 3:
      char v68 = 3;
      sub_10035D568();
      uint64_t v27 = v58;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      goto LABEL_11;
    case 4:
      char v69 = 4;
      sub_10035D514();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v51);
      break;
    case 5:
      char v70 = 5;
      sub_10035D4C0();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = v53;
      uint64_t v37 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
      break;
    case 6:
      char v71 = 6;
      sub_10035D46C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
      break;
    case 7:
      char v72 = 7;
      sub_10035D418();
      uint64_t v38 = v59;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      break;
    default:
      char v65 = 0;
      sub_10035D664();
      uint64_t v32 = v41;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v40);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v63);
  return v24;
}

unint64_t sub_10035D3C4()
{
  unint64_t result = qword_100809680;
  if (!qword_100809680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809680);
  }
  return result;
}

unint64_t sub_10035D418()
{
  unint64_t result = qword_100809690;
  if (!qword_100809690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809690);
  }
  return result;
}

unint64_t sub_10035D46C()
{
  unint64_t result = qword_100809698;
  if (!qword_100809698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809698);
  }
  return result;
}

unint64_t sub_10035D4C0()
{
  unint64_t result = qword_1008096A0;
  if (!qword_1008096A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008096A0);
  }
  return result;
}

unint64_t sub_10035D514()
{
  unint64_t result = qword_1008096A8;
  if (!qword_1008096A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008096A8);
  }
  return result;
}

unint64_t sub_10035D568()
{
  unint64_t result = qword_1008096B0;
  if (!qword_1008096B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008096B0);
  }
  return result;
}

unint64_t sub_10035D5BC()
{
  unint64_t result = qword_1008096B8;
  if (!qword_1008096B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008096B8);
  }
  return result;
}

unint64_t sub_10035D610()
{
  unint64_t result = qword_1008096C0;
  if (!qword_1008096C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008096C0);
  }
  return result;
}

unint64_t sub_10035D664()
{
  unint64_t result = qword_1008096C8;
  if (!qword_1008096C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008096C8);
  }
  return result;
}

unsigned char *_s7Journal13MediaViewTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035D784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType.CodingKeys()
{
  return &type metadata for MediaViewType.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongCodingKeys()
{
  return &type metadata for MediaViewType.SongCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongAlbumCodingKeys()
{
  return &type metadata for MediaViewType.SongAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastCodingKeys()
{
  return &type metadata for MediaViewType.PodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastArtistCodingKeys()
{
  return &type metadata for MediaViewType.PodcastArtistCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.AudiobookCodingKeys()
{
  return &type metadata for MediaViewType.AudiobookCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaAlbumCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaArtistCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaArtistCodingKeys;
}

unint64_t sub_10035D840()
{
  unint64_t result = qword_100809718;
  if (!qword_100809718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809718);
  }
  return result;
}

unint64_t sub_10035D898()
{
  unint64_t result = qword_100809720;
  if (!qword_100809720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809720);
  }
  return result;
}

unint64_t sub_10035D8F0()
{
  unint64_t result = qword_100809728;
  if (!qword_100809728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809728);
  }
  return result;
}

unint64_t sub_10035D948()
{
  unint64_t result = qword_100809730;
  if (!qword_100809730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809730);
  }
  return result;
}

unint64_t sub_10035D9A0()
{
  unint64_t result = qword_100809738;
  if (!qword_100809738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809738);
  }
  return result;
}

unint64_t sub_10035D9F8()
{
  unint64_t result = qword_100809740;
  if (!qword_100809740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809740);
  }
  return result;
}

unint64_t sub_10035DA50()
{
  unint64_t result = qword_100809748;
  if (!qword_100809748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809748);
  }
  return result;
}

unint64_t sub_10035DAA8()
{
  unint64_t result = qword_100809750;
  if (!qword_100809750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809750);
  }
  return result;
}

unint64_t sub_10035DB00()
{
  unint64_t result = qword_100809758;
  if (!qword_100809758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809758);
  }
  return result;
}

unint64_t sub_10035DB58()
{
  unint64_t result = qword_100809760;
  if (!qword_100809760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809760);
  }
  return result;
}

unint64_t sub_10035DBB0()
{
  unint64_t result = qword_100809768;
  if (!qword_100809768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809768);
  }
  return result;
}

unint64_t sub_10035DC08()
{
  unint64_t result = qword_100809770;
  if (!qword_100809770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809770);
  }
  return result;
}

unint64_t sub_10035DC60()
{
  unint64_t result = qword_100809778;
  if (!qword_100809778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809778);
  }
  return result;
}

unint64_t sub_10035DCB8()
{
  unint64_t result = qword_100809780;
  if (!qword_100809780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809780);
  }
  return result;
}

unint64_t sub_10035DD10()
{
  unint64_t result = qword_100809788;
  if (!qword_100809788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809788);
  }
  return result;
}

unint64_t sub_10035DD68()
{
  unint64_t result = qword_100809790;
  if (!qword_100809790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809790);
  }
  return result;
}

unint64_t sub_10035DDC0()
{
  unint64_t result = qword_100809798;
  if (!qword_100809798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809798);
  }
  return result;
}

unint64_t sub_10035DE18()
{
  unint64_t result = qword_1008097A0;
  if (!qword_1008097A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008097A0);
  }
  return result;
}

unint64_t sub_10035DE70()
{
  unint64_t result = qword_1008097A8;
  if (!qword_1008097A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008097A8);
  }
  return result;
}

uint64_t sub_10035DEC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_10002C4EC((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40), &qword_100809868);
    return swift_continuation_throwingResume();
  }
}

uint64_t type metadata accessor for SettingsManager()
{
  return self;
}

id sub_10035DFE4()
{
  id result = sub_10035E004();
  qword_10083D3C0 = (uint64_t)result;
  return result;
}

id sub_10035E004()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2) {
    id v2 = [self standardUserDefaults];
  }
  sub_100010218((uint64_t *)&unk_1008010F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = 21;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v5;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = 1;
  sub_100396C34(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 registerDefaults:isa];

  return v2;
}

id sub_10035E488(void *a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = a1;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 integerForKey:v3];

  return v4;
}

void sub_10035E510(void *a1, uint64_t a2, uint64_t a3)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = a1;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setInteger:a3 forKey:v6];
}

id sub_10035E5B0(void *a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = a1;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 BOOLForKey:v3];

  return v4;
}

void sub_10035E698(char a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setBool:a1 & 1 forKey:v3];

  if ((a1 & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 removeObjectForKey:v4];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 removeObjectForKey:v5];
  }
}

unsigned char *storeEnumTagSinglePayload for SettingsManager.LockJournalTimeout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035E9D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsManager.LockJournalTimeout()
{
  return &type metadata for SettingsManager.LockJournalTimeout;
}

unint64_t sub_10035EA0C()
{
  unint64_t result = qword_100809848;
  if (!qword_100809848)
  {
    sub_100014440(&qword_100809850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809848);
  }
  return result;
}

void sub_10035EA68(uint64_t a1, unint64_t a2)
{
  int v3 = v2;
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setObject:isa forKey:v7];
  swift_unknownObjectRelease();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 removeObjectForKey:v8];
  sub_100040DBC(a1, a2);
}

uint64_t sub_10035EB6C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10035ED54(*a1);
  *a2 = result;
  return result;
}

void sub_10035EB98(void *a1@<X8>)
{
  *a1 = qword_1006E4C50[*v1];
}

BOOL sub_10035EBB0(char *a1, char *a2)
{
  return qword_1006E4C78[*a1] == qword_1006E4C78[*a2];
}

Swift::Int sub_10035EBD4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1006E4C78[v1]);
  return Hasher._finalize()();
}

void sub_10035EC24()
{
  Hasher._combine(_:)(qword_1006E4C78[*v0]);
}

Swift::Int sub_10035EC5C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1006E4C78[v1]);
  return Hasher._finalize()();
}

uint64_t sub_10035ECA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10035EDB4();
  *a1 = result;
  return result;
}

void sub_10035ECD4(void *a1@<X8>)
{
  *a1 = qword_1006E4C78[*v1];
}

void sub_10035ECEC(void *a1@<X8>)
{
  *a1 = &off_100794AF8;
}

unint64_t sub_10035ED00()
{
  unint64_t result = qword_100809858;
  if (!qword_100809858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809858);
  }
  return result;
}

uint64_t sub_10035ED54(uint64_t result)
{
  if (result)
  {
    switch(result)
    {
      case 1:
        return 1;
      case 5:
        return 2;
      case 15:
        return 3;
      default:
        return 5;
    }
  }
  return result;
}

uint64_t sub_10035EDB4()
{
  return 1;
}

uint64_t sub_10035EE44()
{
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10083D3C0;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10001B418((uint64_t)&v13);
    NSString v3 = String._bridgeToObjectiveC()();
    unsigned __int8 v4 = [v0 BOOLForKey:v3];

    if (v4)
    {
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [v0 objectForKey:v5];

      if (v6)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v11 = 0u;
        long long v12 = 0u;
      }
      sub_10002C4EC((uint64_t)&v11, (uint64_t)&v13, &qword_1007FAD50);
      if (*((void *)&v14 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t result = sub_10035EDB4();
          if (result != 4) {
            return result;
          }
        }
      }
      else
      {
        sub_10001B418((uint64_t)&v13);
      }
      return 1;
    }
    return 4;
  }
  long long v13 = 0u;
  long long v14 = 0u;
  sub_10001B418((uint64_t)&v13);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v0 objectForKey:v7];

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_10002C4EC((uint64_t)&v11, (uint64_t)&v13, &qword_1007FAD50);
  if (!*((void *)&v14 + 1))
  {
    sub_10001B418((uint64_t)&v13);
    return 4;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 4;
  }
  uint64_t result = sub_10035ED54(v10);
  if (result == 5) {
    return 4;
  }
  return result;
}

uint64_t sub_10035F104(char a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a2;
  *(unsigned char *)(v2 + 200) = a1;
  sub_100010218((uint64_t *)&unk_100800A60);
  *(void *)(v2 + 136) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 144) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 152) = v4;
  *(void *)(v2 + 160) = v3;
  return _swift_task_switch(sub_10035F1D0, v4, v3);
}

uint64_t sub_10035F1D0()
{
  id v1 = *(id *)(v0 + 128);
  id v2 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  *(void *)(v0 + 168) = v2;
  [v2 setSensitive:1];
  if (v1) {
    id v1 = [*(id *)(v0 + 128) _currentOpenApplicationEndpoint];
  }
  [v2 setTargetConnectionEndpoint:v1];

  id v3 = [self defaultWorkspace];
  *(void *)(v0 + 176) = v3;
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x10035F4A8);
  }
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 136);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    uint64_t v10 = *(void *)(v0 + 136);
    URL._bridgeToObjectiveC()(v8);
    uint64_t v9 = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  *(void *)(v0 + 184) = v9;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_10035F4BC;
  uint64_t v12 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10035DEC8;
  *(void *)(v0 + 104) = &unk_1007A70A0;
  *(void *)(v0 + 112) = v12;
  [v4 openURL:v9 configuration:v2 completionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10035F4BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v2;
  uint64_t v3 = *(void *)(v1 + 160);
  uint64_t v4 = *(void *)(v1 + 152);
  if (v2) {
    uint64_t v5 = sub_10035F684;
  }
  else {
    uint64_t v5 = sub_10035F5EC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10035F5EC()
{
  uint64_t v2 = (void *)v0[22];
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = (void *)v0[21];

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10035F684()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = (void *)v0[21];
  uint64_t v2 = (void *)v0[22];
  swift_release();
  swift_willThrow();

  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t getEnumTagSinglePayload for SettingsManager.LockJournalState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10035F7D0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 4;
  unsigned int v9 = v7 - 4;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SettingsManager.LockJournalState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10035F8B8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_10035F8E0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_10035F8F4(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsManager.LockJournalState()
{
  return &type metadata for SettingsManager.LockJournalState;
}

uint64_t sub_10035F914(unint64_t a1)
{
  unsigned int v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v3 = sub_1000EFF88((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unsigned int v7 = &v3[16 * a1];
      uint64_t v8 = *((void *)v7 + 4);
      memmove(v7 + 32, v7 + 48, 16 * v6);
      *((void *)v3 + 2) = v5;
      *unsigned int v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035F9F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1000EFFB0(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_10009C54C(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *unsigned int v2 = v5;
  return result;
}

uint64_t sub_10035FB68(unint64_t a1)
{
  unsigned int v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v3 = sub_1000F0040(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *unsigned int v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035FC48(unint64_t a1)
{
  unsigned int v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v3 = sub_1000F007C(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v3[2 * a1 + 4], &v3[2 * a1 + 6], 16 * v6);
      v3[2] = v5;
      *unsigned int v1 = v3;
      return result;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035FD28(unint64_t a1)
{
  unsigned int v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v3 = sub_1000F00A4(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[4 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *unsigned int v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035FE20(unint64_t a1)
{
  unsigned int v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned int v3 = sub_1000F00B8(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 5, 8 * v6);
      v3[2] = v5;
      *unsigned int v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035FEF4(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unsigned int v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_1000EFF84(v3);
    *unsigned int v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10035FFD8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController____lazy_storage___indexingAlertView;
  unsigned int v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController____lazy_storage___indexingAlertView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController____lazy_storage___indexingAlertView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for IndexingAlertView()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unsigned int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10036004C(uint64_t a1)
{
}

id sub_100360178()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v1 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v5[4] = sub_1003662BC;
  v5[5] = v0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_1003657F0;
  v5[3] = &unk_1007A72B0;
  unsigned int v2 = _Block_copy(v5);
  swift_retain();
  id v3 = [v1 initWithSectionProvider:v2];
  _Block_release(v2);
  swift_release();
  swift_release();
  return v3;
}

id sub_10036027C(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = (void *)type metadata accessor for UICollectionLayoutListConfiguration();
  *(void *)&long long v44 = *(v45 - 1);
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_17;
  }
  long long v13 = (void *)Strong;
  uint64_t v14 = *(void **)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource);
  id v15 = v14;

  if (!v14) {
    goto LABEL_17;
  }
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

  unint64_t v16 = v47;
  if (v47 == 2)
  {
    unint64_t v39 = 2;
LABEL_16:
    sub_1001D5978(v46, v39);
    goto LABEL_17;
  }
  if (v47 == 3)
  {
    unint64_t v39 = 3;
    goto LABEL_16;
  }
  if (v47 != 4)
  {
    uint64_t v17 = v46;
    uint64_t v18 = self;
    id v19 = [v18 fractionalWidthDimension:1.0];
    if (qword_1007F73C0 != -1) {
      swift_once();
    }
    id v20 = [v18 estimatedDimension:*(double *)&qword_10083D9D0 v42 v43];
    uint64_t v21 = self;
    id v22 = [v21 sizeWithWidthDimension:v19 heightDimension:v20];

    id v23 = [self itemWithLayoutSize:v22];
    uint64_t v24 = self;
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v25 = swift_allocObject();
    long long v44 = xmmword_1006D6D00;
    *(_OWORD *)(v25 + 16) = xmmword_1006D6D00;
    *(void *)(v25 + 32) = v23;
    uint64_t v46 = v25;
    specialized Array._endMutation()();
    sub_10001B284(0, &qword_100807690);
    uint64_t v45 = v23;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v24 horizontalGroupWithLayoutSize:v22 subitems:isa];

    id v28 = [self sectionWithGroup:v27];
    if (qword_1007F72D8 != -1) {
      swift_once();
    }
    double v29 = *(double *)&qword_10083D8A0;
    [v28 setInterGroupSpacing:*(double *)&qword_10083D8A0];
    [v28 setContentInsets:v29 * 0.5, v29, v29 * 0.5, v29];
    sub_1001D5978(v17, v16);
    if (v16 >= 4 && v42 == 1)
    {
      id v30 = [v18 fractionalWidthDimension:1.0];
      id v31 = [v18 estimatedDimension:30.0];
      id v32 = [v21 sizeWithWidthDimension:v30 heightDimension:v31];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v33 = v32;
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v35 = [self boundarySupplementaryItemWithLayoutSize:v33 elementKind:v34 alignment:1];

      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v44;
      *(void *)(v36 + 32) = v35;
      uint64_t v46 = v36;
      specialized Array._endMutation()();
      sub_10001B284(0, (unint64_t *)&unk_100802720);
      id v37 = v35;
      Class v38 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v28 setBoundarySupplementaryItems:v38];

      [v28 contentInsets];
      [v28 setContentInsets:0.0];
    }
    return v28;
  }
LABEL_17:
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.sidebar(_:), v6);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v2);
  UICollectionLayoutListConfiguration.headerMode.setter();
  id v40 = [self clearColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  sub_10001B284(0, &qword_100806BD8);
  id v28 = (id)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  [v28 contentInsets:v42, v43];
  [v28 setContentInsets:];
  [v28 contentInsets];
  [v28 setContentInsets:];
  (*(void (**)(char *, void *))(v44 + 8))(v11, v45);
  return v28;
}

uint64_t sub_100360A08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIListSeparatorConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIListSeparatorConfiguration.Visibility.visible(_:), v4);
  UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
  return UIListSeparatorConfiguration.bottomSeparatorInsets.setter();
}

uint64_t sub_100360B34()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_100010218(&qword_100806B88);
  uint64_t v69 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v66 = v3;
  char v67 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v68 = (char *)&v56 - v5;
  uint64_t v79 = sub_100010218(&qword_1007FAA60);
  uint64_t v65 = *(void *)(v79 - 8);
  uint64_t v6 = *(void *)(v65 + 64);
  __chkstk_darwin(v79);
  __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v56 - v8;
  uint64_t v82 = sub_100010218(&qword_1008026B0);
  uint64_t v78 = *(void *)(v82 - 8);
  uint64_t v9 = *(void *)(v78 + 64);
  __chkstk_darwin(v82);
  uint64_t v75 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v56 - v11;
  uint64_t v12 = sub_100010218(&qword_1008098E0);
  uint64_t v80 = *(void *)(v12 - 8);
  uint64_t v81 = v12;
  uint64_t v13 = *(void *)(v80 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = sub_100010218(&qword_1008098E8);
  uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
  __chkstk_darwin(v17);
  __chkstk_darwin(v19);
  uint64_t v24 = v1;
  uint64_t v25 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v25) {
    return 0;
  }
  uint64_t v73 = v22;
  uint64_t v74 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (char *)&v56 - v21;
  uint64_t v70 = v23;
  uint64_t v72 = v20;
  uint64_t v27 = sub_10001B284(0, (unint64_t *)&unk_10080C060);
  char v71 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v27;
  id v59 = v25;
  uint64_t v63 = v26;
  UICollectionView.CellRegistration.init(handler:)();
  char v60 = v16;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  uint64_t v61 = v2;
  uint64_t v58 = v24;
  swift_unknownObjectWeakInit();
  type metadata accessor for JournalEntryCollectionViewCell();
  sub_10001B284(0, (unint64_t *)&qword_100800A40);
  id v28 = v76;
  UICollectionView.CellRegistration.init(handler:)();
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  double v29 = v77;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v30 = v73;
  id v31 = v26;
  uint64_t v32 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v70, v31, v72);
  uint64_t v57 = v6;
  uint64_t v33 = v80;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v71, v16, v81);
  uint64_t v34 = v78;
  uint64_t v56 = v9;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v28, v82);
  uint64_t v35 = v65;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v74, v29, v79);
  uint64_t v36 = v30;
  unint64_t v37 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v38 = (v18 + *(unsigned __int8 *)(v33 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v39 = (v13 + *(unsigned __int8 *)(v34 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v40 = (v56 + *(unsigned __int8 *)(v35 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v41 = (v57 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32))(v42 + v37, v70, v32);
  (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v42 + v38, v71, v81);
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v42 + v39, v75, v82);
  uint64_t v43 = v79;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v42 + v40, v74, v79);
  uint64_t v44 = ObjectType;
  *(void *)(v42 + v41) = ObjectType;
  objc_allocWithZone((Class)sub_100010218(&qword_1007FAA68));
  id v45 = v59;
  uint64_t v46 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v47;
  *(void *)(v48 + 24) = v44;
  uint64_t v49 = v68;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  uint64_t v50 = v69;
  uint64_t v51 = v67;
  uint64_t v52 = v61;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v49, v61);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v54 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v53, v51, v52);
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v52);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v77, v43);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v76, v82);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v60, v81);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v63, v72);
  return v46;
}

uint64_t sub_1003613C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  static UIListContentConfiguration.cell()();
  uint64_t v10 = type metadata accessor for UICellConfigurationState();
  void v29[3] = v10;
  v29[4] = (uint64_t)&protocol witness table for UICellConfigurationState;
  uint64_t v11 = sub_100062E54(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, a1, v10);
  UIListContentConfiguration.updated(for:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v29);
  id v12 = [self configurationWithTextStyle:UIFontTextStyleBody scale:-1];
  uint64_t v13 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter();
  v13(v29, 0);
  UIListContentConfiguration.textProperties.getter();
  UIListContentConfiguration.TextProperties.color.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v14 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.tintColor.setter();
  v14(v29, 0);
  id v15 = [self defaultMetrics];
  unint64_t v16 = (void *)UICellConfigurationState.traitCollection.getter();
  [v15 scaledValueForValue:v16 compatibleWithTraitCollection:25.0];
  uint64_t v18 = v17;

  uint64_t v19 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  uint64_t v20 = (void (*)(unsigned char *, void))UIListContentConfiguration.ImageProperties.reservedLayoutSize.modify();
  *uint64_t v21 = v18;
  v20(v28, 0);
  v19(v29, 0);
  UIListContentConfiguration.imageToTextPadding.setter();
  uint64_t v22 = (void (*)(uint64_t *, void))UIListContentConfiguration.directionalLayoutMargins.modify();
  *(void *)(v23 + 8) = 0;
  v22(v29, 0);
  uint64_t v25 = (uint64_t (*)(uint64_t *, void))UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.modify();
  if (*v24) {
    *v24 &= ~1uLL;
  }
  return v25(v29, 0);
}

id sub_100361764(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100010218(&qword_1008098F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v8;
  swift_bridgeObjectRetain();
  UICollectionViewCell.configurationUpdateHandler.setter();
  static UIBackgroundConfiguration.clear()();
  uint64_t v11 = type metadata accessor for UIBackgroundConfiguration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  UICollectionViewCell.backgroundConfiguration.setter();
  UIAccessibilityTraits v12 = UIAccessibilityTraitButton;
  unint64_t v13 = (unint64_t)[a1 accessibilityTraits];
  if ((v12 & ~v13) != 0) {
    UIAccessibilityTraits v14 = v12;
  }
  else {
    UIAccessibilityTraits v14 = 0;
  }
  return [a1 setAccessibilityTraits:v14 | v13];
}

uint64_t sub_1003618B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UIListContentConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003613C8(a2);
  if (qword_1007F7BD8 != -1) {
    swift_once();
  }
  id v7 = (id)qword_10083E8C0;
  UIListContentConfiguration.image.setter();
  swift_bridgeObjectRetain();
  UIListContentConfiguration.text.setter();
  v11[3] = v3;
  void v11[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v8 = sub_100062E54(v11);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_100361A30(void *a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = sub_100010218(&qword_1008098F0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a3) = *a3;
  *(unsigned char *)(swift_allocObject() + 16) = (_BYTE)a3;
  UICollectionViewCell.configurationUpdateHandler.setter();
  static UIBackgroundConfiguration.clear()();
  uint64_t v8 = type metadata accessor for UIBackgroundConfiguration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  UICollectionViewCell.backgroundConfiguration.setter();
  UIAccessibilityTraits v9 = UIAccessibilityTraitButton;
  unint64_t v10 = (unint64_t)[a1 accessibilityTraits];
  if ((v9 & ~v10) != 0) {
    UIAccessibilityTraits v11 = v9;
  }
  else {
    UIAccessibilityTraits v11 = 0;
  }
  return [a1 setAccessibilityTraits:v11 | v10];
}

uint64_t sub_100361B68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003613C8(a2);
  sub_1001EA8CC(a3);
  UIListContentConfiguration.image.setter();
  FilterOption.description.getter(a3);
  UIListContentConfiguration.text.setter();
  v12[3] = v5;
  v12[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  UIAccessibilityTraits v9 = sub_100062E54(v12);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v9, v8, v5);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100361C9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = [*(id *)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext) objectWithID:v4];
    type metadata accessor for JournalEntryMO();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      UIAccessibilityTraits v9 = (void *)v8;
      id v21 = v7;
      id v10 = [v9 managedObjectContext];
      if (!v10) {
        id v10 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      uint64_t v11 = sub_10057F170(v9, 0, 0, v10);
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate + 8) = &off_10079D138;
      swift_unknownObjectWeakAssign();
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate + 8) = &off_10079D168;
      swift_unknownObjectWeakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (*(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView))
      {
        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
      }
      swift_release();
      uint64_t v12 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry) = v11;
      swift_retain_n();
      swift_release();
      sub_1003ED2D4();
      sub_1003EDA5C();
      uint64_t v13 = *(void *)(a1 + v12);
      if (v13)
      {
        swift_retain();
        sub_10037A920();
        sub_1003E4374(*(unsigned char *)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked), 0);
        sub_1003E4104(v13);
        sub_1003EDCCC();
        sub_1003EDF48();
        swift_release();
      }
      swift_release();
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1006D6D00;
      sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
      if (qword_1007F7580 != -1) {
        swift_once();
      }
      uint64_t v15 = qword_1007F7C60;
      swift_bridgeObjectRetain();
      if (v15 != -1) {
        swift_once();
      }
      uint64_t v16 = (void *)qword_10083E948;
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = v11;
      id v19 = v16;
      swift_retain();
      *(void *)(v14 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._endMutation()();
      uint64_t v20 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions;
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions) = v14;
      swift_bridgeObjectRelease();
      *(void *)(*(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_chinView)
                + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_optionalActions) = *(void *)(a1 + v20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1003EA544();

      swift_release();
    }
    else
    {
    }
  }
}

void sub_100362134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = Strong + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate;
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    uint64_t v8 = *(void *)(v6 + 8);

    if (v7)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(a3, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1003621E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)a3;
  uint64_t v4 = *(void **)(a3 + 8);
  switch(*(unsigned char *)(a3 + 16))
  {
    case 2:
      type metadata accessor for JournalEntryCollectionViewCell();
      sub_10001B284(0, (unint64_t *)&qword_100800A40);
      id v9 = v3;
      uint64_t v10 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
      uint64_t v11 = v3;
      uint64_t v12 = v4;
      char v13 = 2;
      goto LABEL_11;
    case 3:
      sub_10001B284(0, (unint64_t *)&unk_10080C060);
      return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    case 4:
      sub_10001B284(0, (unint64_t *)&unk_10080C060);
      swift_bridgeObjectRetain();
      uint64_t v10 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
      uint64_t v11 = v3;
      uint64_t v12 = v4;
      char v13 = 4;
LABEL_11:
      sub_100062C10(v11, v12, v13);
      return v10;
    default:
      if (qword_1007F6AE8 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_100026A54(v5, (uint64_t)qword_10083D088);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Unhandled cell type", v8, 2u);
        swift_slowDealloc();
      }

      sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
      return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  }
}

void sub_100362464(void *a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FD5F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v11 = (char *)Strong;
  uint64_t v12 = *(void **)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v12 || (id v13 = [v12 dataSource]) == 0)
  {
LABEL_8:

    return;
  }
  id v14 = v13;
  sub_100010218(&qword_1007FAA68);
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  uint64_t v49 = v7;
  id v50 = v14;
  IndexPath.section.getter();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();
  unint64_t v15 = v52;
  if (v52 == 4)
  {

    swift_unknownObjectRelease();
    return;
  }
  uint64_t v47 = *(void *)&v51;
  [a1 setTag:0];
  static UIListContentConfiguration.prominentInsetGroupedHeader()();
  uint64_t v16 = (void (*)(UIFontWeight *, void))UIListContentConfiguration.directionalLayoutMargins.modify();
  *uint64_t v17 = 0x4039000000000000;
  v16(&v51, 0);
  uint64_t v18 = (void (*)(UIFontWeight *, void))UIListContentConfiguration.directionalLayoutMargins.modify();
  *(void *)(v19 + 16) = 0x4014000000000000;
  v18(&v51, 0);
  unint64_t v48 = v15;
  id v20 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3 compatibleWithTraitCollection:0];
  id v57 = v20;
  UIFontWeight v51 = UIFontWeightBold;
  unint64_t v52 = 0;
  char v53 = 3;
  sub_10021B55C(&v57, (uint64_t *)&v51, &v56);

  id v21 = v56;
  id v22 = [self fontWithDescriptor:v56 size:0.0];

  uint64_t v23 = (void (*)(UIFontWeight *, void))UIListContentConfiguration.textProperties.modify();
  unint64_t v24 = v48;
  UIListContentConfiguration.TextProperties.font.setter();
  v23(&v51, 0);
  if (v24 < 2)
  {
    uint64_t v25 = v49;
    if (qword_1007F6AE8 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100026A54(v29, (uint64_t)qword_10083D088);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Unhandled header type", v32, 2u);
      swift_slowDealloc();
    }

    goto LABEL_30;
  }
  uint64_t v25 = v49;
  if (v24 == 2)
  {
    if (qword_1007F78E8 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    UIListContentConfiguration.text.setter();
  }
  else
  {
    if (v24 != 3)
    {
      uint64_t v33 = *(void **)&v11[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource];
      if (v33)
      {
        id v34 = v33;
        dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

        uint64_t v35 = NSDiffableDataSourceSnapshot.numberOfItems.getter();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        if (qword_1007F75F8 != -1) {
          swift_once();
        }
        sub_100010218((uint64_t *)&unk_100806070);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1006D6280;
        *(void *)(v36 + 56) = &type metadata for Int;
        *(void *)(v36 + 64) = &protocol witness table for Int;
        *(void *)(v36 + 32) = v35;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        UIListContentConfiguration.text.setter();
        unint64_t v24 = v48;
      }
      UICollectionViewListCell.accessories.setter();
      sub_1001D5978(v47, v24);
      goto LABEL_30;
    }
    if (qword_1007F78F0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    UIListContentConfiguration.text.setter();
    sub_100010218(&qword_100806BB0);
    uint64_t v26 = *(void *)(type metadata accessor for UICellAccessory() - 8);
    unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1006D6280;
    sub_1003634B8(v28 + v27);
  }
  UICollectionViewListCell.accessories.setter();
LABEL_30:
  uint64_t v54 = v6;
  uint64_t v55 = &protocol witness table for UIListContentConfiguration;
  unint64_t v37 = sub_100062E54((uint64_t *)&v51);
  (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(v37, v9, v6);
  UICollectionViewCell.contentConfiguration.setter();
  [a1 directionalLayoutMargins];
  [a1 setDirectionalLayoutMargins];
  [a1 setIsAccessibilityElement:0];
  id v38 = [a1 contentView];
  [v38 setIsAccessibilityElement:1];

  id v39 = [a1 contentView];
  UIListContentConfiguration.text.getter();
  if (v40)
  {
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v41 = 0;
  }
  [v39 setAccessibilityLabel:v41];

  id v42 = [a1 contentView];
  UIAccessibilityTraits v43 = UIAccessibilityTraitHeader;
  unint64_t v44 = (unint64_t)[v42 accessibilityTraits];
  if ((v43 & ~v44) != 0) {
    UIAccessibilityTraits v45 = v43;
  }
  else {
    UIAccessibilityTraits v45 = 0;
  }
  [v42 setAccessibilityTraits:v45 | v44];

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
}

uint64_t sub_100362C70(uint64_t a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v63 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1008098B8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  uint64_t v66 = v9;
  __chkstk_darwin(v8);
  uint64_t v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v67 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_1007FD5E0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FD5F0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v68 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C7490(a1);
  id v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  uint64_t result = v20(a1, 1, v17);
  if (result != 1) {
    return result;
  }
  id v22 = *(void **)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource];
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_11;
  }
  uint64_t v23 = v1;
  id v24 = v22;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if (v20((uint64_t)v16, 1, v17) == 1)
  {
LABEL_11:
    uint64_t v30 = &qword_1007FD5E0;
    uint64_t v31 = (uint64_t)v16;
    return sub_10001457C(v31, v30);
  }
  uint64_t v25 = v68;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v68, v16, v17);
  uint64_t v26 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  uint64_t v28 = 0;
  uint64_t v29 = 40;
  while (*(void *)(v26 + v29) <= 3uLL)
  {
    ++v28;
    v29 += 16;
    if (v27 == v28) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  id v62 = v23;
  uint64_t v32 = *(void **)&v23[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
  if (!v32) {
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  sub_100010218(&qword_1007FC110);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1006D6270;
  *(void *)(v33 + 32) = v28;
  *(void *)(v33 + 40) = 0;
  id v34 = UICollectionElementKindSectionHeader;
  uint64_t v25 = v68;
  uint64_t v35 = v34;
  id v36 = v32;
  IndexPath.init(arrayLiteral:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v11);
  id v38 = [v36 supplementaryViewForElementKind:v35 atIndexPath:isa];

  if (!v38) {
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  self;
  uint64_t v39 = swift_dynamicCastObjCClass();
  if (!v39)
  {

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  uint64_t v40 = (void *)v39;
  id v41 = v38;
  UICollectionViewCell.contentConfiguration.getter();

  uint64_t v42 = v66;
  UIAccessibilityTraits v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  if (!v70)
  {
    sub_10001457C((uint64_t)v69, &qword_1008098C0);
    (*v43)(v7, 1, 1, v65);
    goto LABEL_24;
  }
  sub_100010218(&qword_1008098C8);
  uint64_t v44 = v65;
  int v45 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v7, v45 ^ 1u, 1, v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v7, 1, v44) == 1)
  {
LABEL_24:

    (*(void (**)(char *, uint64_t))(v18 + 8))(v68, v17);
    uint64_t v30 = &qword_1008098B8;
    uint64_t v31 = (uint64_t)v7;
    return sub_10001457C(v31, v30);
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v64, v7, v44);
  uint64_t v46 = NSDiffableDataSourceSnapshot.numberOfItems.getter();
  if (qword_1007F75F8 != -1) {
    swift_once();
  }
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1006D6280;
  *(void *)(v47 + 56) = &type metadata for Int;
  *(void *)(v47 + 64) = &protocol witness table for Int;
  *(void *)(v47 + 32) = v46;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v48 = v64;
  UIListContentConfiguration.text.setter();
  uint64_t v49 = v44;
  uint64_t v70 = v44;
  char v71 = &protocol witness table for UIListContentConfiguration;
  id v50 = sub_100062E54(v69);
  uint64_t v51 = v66;
  unint64_t v52 = v48;
  uint64_t v53 = v49;
  (*(void (**)(uint64_t *, char *, uint64_t))(v66 + 16))(v50, v52, v49);
  id v54 = v41;
  UICollectionViewCell.contentConfiguration.setter();

  id v55 = [v40 contentView];
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v55 setAccessibilityLabel:v56];

  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v40);
  uint64_t v57 = type metadata accessor for TaskPriority();
  uint64_t v58 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v63, 1, 1, v57);
  type metadata accessor for MainActor();
  id v59 = v62;
  uint64_t v60 = static MainActor.shared.getter();
  uint64_t v61 = (void *)swift_allocObject();
  v61[2] = v60;
  v61[3] = &protocol witness table for MainActor;
  v61[4] = v59;
  sub_100328A60(v58, (uint64_t)&unk_1008098D8, (uint64_t)v61);

  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v64, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v68, v17);
}

uint64_t sub_1003634B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_100010218((uint64_t *)&unk_10080C050);
  __chkstk_darwin(v1 - 8);
  int v45 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for UIButton.Configuration();
  uint64_t v13 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  static UIButton.Configuration.borderless()();
  if (qword_1007F78F8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  UIButton.Configuration.title.setter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.Size.medium(_:), v9);
  UIButton.Configuration.buttonSize.setter();
  uint64_t v19 = (void (*)(unsigned char *, void))UIButton.Configuration.contentInsets.modify();
  *id v20 = *v20 + 21.0;
  v19(v48, 0);
  id v21 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  id v22 = (void (*)(unsigned char *, void))UIBackgroundConfiguration.backgroundInsets.modify();
  *uint64_t v23 = 0x4035000000000000;
  v22(v47, 0);
  v21(v48, 0);
  UIButton.Configuration.contentInsets.getter();
  double v25 = v24;
  uint64_t v26 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  uint64_t v27 = (void (*)(unsigned char *, void))UIBackgroundConfiguration.backgroundInsets.modify();
  *(double *)(v28 + 24) = *(double *)(v28 + 24) - v25;
  v27(v47, 0);
  v26(v48, 0);
  uint64_t v29 = (void (*)(unsigned char *, void))UIButton.Configuration.contentInsets.modify();
  *(void *)(v30 + 24) = 0;
  v29(v48, 0);
  sub_10001B284(0, (unint64_t *)&unk_100809130);
  uint64_t v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v40);
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v32 = (void *)UIButton.init(configuration:primaryAction:)();
  uint64_t v33 = (uint64_t (**)())&v5[*(int *)(sub_100010218(&qword_100809900) + 48)];
  uint64_t v34 = enum case for UICellAccessory.DisplayedState.always(_:);
  uint64_t v35 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v5, v34, v35);
  void *v33 = variable initialization expression of LRUCache.size;
  v33[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v5, enum case for UICellAccessory.Placement.trailing(_:), v42);
  uint64_t v36 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v45, 1, 1, v36);
  id v37 = v32;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v31);
}

void sub_100363AF4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = [self standardUserDefaults];
    NSString v3 = String._bridgeToObjectiveC()();
    [v2 setValue:0 forKey:v3];
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1004B8B58();
  }
}

uint64_t sub_100363C9C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(v4 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_currentSearchText);
  *uint64_t v15 = a2;
  v15[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v16 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t result = sub_1004B83A4(*(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions), a1);
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
  if (!*(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds))
  {
    if (!v17) {
      return result;
    }
    goto LABEL_14;
  }
  if (!v17
    || (swift_bridgeObjectRetain(),
        unint64_t v19 = swift_bridgeObjectRetain(),
        unsigned __int8 v20 = sub_1004B8418(v19, v17),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v20 & 1) == 0))
  {
LABEL_14:
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    id v21 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v22;
    v23[3] = AudioRecordingActivityState.hash(into:);
    v23[4] = 0;
    v23[5] = v17;
    v23[6] = a1;
    v23[7] = ObjectType;
    aBlock[4] = sub_100366410;
    void aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    uint64_t aBlock[3] = &unk_1007A73F0;
    double v24 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10004F6A0();
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
    return swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100364080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(v4 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_currentSearchText);
  *uint64_t v15 = a2;
  v15[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions);
  if (!sub_1004B83A4(v16, v16)
    || !*(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds))
  {
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v17 = swift_bridgeObjectRetain();
  unsigned __int8 v18 = sub_1004B8418(v17, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
LABEL_8:
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    unsigned __int8 v20 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v21;
    v22[3] = AudioRecordingActivityState.hash(into:);
    v22[4] = 0;
    v22[5] = a1;
    v22[6] = v16;
    v22[7] = ObjectType;
    aBlock[4] = sub_100366410;
    void aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    uint64_t aBlock[3] = &unk_1007A73A0;
    uint64_t v23 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10004F6A0();
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
    return swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void sub_100364444()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_currentSearchText);
  *uint64_t v1 = 0;
  v1[1] = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions) = &off_100791E40;
  swift_bridgeObjectRelease();
  sub_1004B8B58();
  UIViewController.contentUnavailableConfiguration.setter();
  id v2 = sub_10035FFD8();
  [v2 removeFromSuperview];
}

uint64_t sub_1003644F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIBackgroundConfiguration();
  __chkstk_darwin(v5 - 8);
  type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v6 = swift_allocBox();
  static UIContentUnavailableConfiguration.empty()();
  if (qword_1007F7900 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  UIContentUnavailableConfiguration.text.setter();
  if (qword_1007F7908 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  UIContentUnavailableConfiguration.secondaryText.setter();
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10083D8A0;
  uint64_t v8 = (void (*)(void *, void))UIContentUnavailableConfiguration.directionalLayoutMargins.modify();
  *(void *)(v9 + 8) = v7;
  v8(aBlock, 0);
  uint64_t v10 = (void (*)(void *, void))UIContentUnavailableConfiguration.directionalLayoutMargins.modify();
  *(void *)(v11 + 24) = v7;
  v10(aBlock, 0);
  static UIBackgroundConfiguration.clear()();
  UIContentUnavailableConfiguration.background.setter();
  uint64_t v12 = self;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = v6;
  aBlock[4] = sub_100062E4C;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  uint64_t aBlock[3] = &unk_1007A7300;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v1;
  swift_retain();
  swift_release();
  [v12 animateWithDuration:0 delay:v14 options:0 animations:0.44 completion:0.0];
  _Block_release(v14);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  type metadata accessor for MainActor();
  id v17 = v15;
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (void *)swift_allocObject();
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v17;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_1008098F8, (uint64_t)v19);
  swift_release();
  return swift_release();
}

id sub_10036489C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_numResultsHeaderTag] = 1;
  uint64_t v6 = &v3[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_currentSearchText];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController____lazy_storage___indexingAlertView] = 0;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for JournalSearchResultsViewController();
  [super initWithNibName:v7 bundle:a3];

  return v8;
}

id sub_1003649D0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_numResultsHeaderTag] = 1;
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_currentSearchText];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController____lazy_storage___indexingAlertView] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for JournalSearchResultsViewController();
  id v4 = [super initWithCoder:a1];

  return v4;
}

void sub_100364A90()
{
  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController____lazy_storage___indexingAlertView);
}

id sub_100364AE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalSearchResultsViewController();
  return [super dealloc];
}

uint64_t sub_100364B7C()
{
  return type metadata accessor for JournalSearchResultsViewController();
}

uint64_t type metadata accessor for JournalSearchResultsViewController()
{
  uint64_t result = qword_1008098A8;
  if (!qword_1008098A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100364BD0()
{
  return swift_updateClassMetadata2();
}

void sub_100364D48(void *a1)
{
  if ([a1 dataSource])
  {
    sub_100010218(&qword_1007FAA68);
    if (!swift_dynamicCastClass())
    {
      goto LABEL_11;
    }
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
    switch(v13)
    {
      case 0xFFu:
LABEL_11:
        swift_unknownObjectRelease();
        return;
      case 4u:
        uint64_t v5 = v1 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v6 = *(void *)(v5 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(void *, void *, uint64_t, uint64_t))(v6 + 16))(v11, v12, ObjectType, v6);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        id v8 = v11;
        uint64_t v9 = v12;
        char v10 = 4;
        break;
      case 3u:
        uint64_t v2 = v1 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v3 = *(void *)(v2 + 8);
          uint64_t v4 = swift_getObjectType();
          (*(void (**)(void *, uint64_t, uint64_t))(v3 + 8))(v11, v4, v3);
          swift_unknownObjectRelease();
        }
        goto LABEL_11;
      default:
        swift_unknownObjectRelease();
        id v8 = v11;
        uint64_t v9 = v12;
        char v10 = v13;
        break;
    }
    sub_1000D7EA0(v8, v9, v10);
  }
}

uint64_t sub_100364FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_100365088, v6, v5);
}

uint64_t sub_100365088()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate);
  *(void *)(v0 + 48) = v1;
  if (v1)
  {
    id v2 = v1;
    return _swift_task_switch(sub_100365198, 0, 0);
  }
  else
  {
    swift_release();
    id v3 = sub_10035FFD8();
    [v3 removeFromSuperview];

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100365198()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC7Journal32JournalCoreDataSpotlightDelegate_indexTimeKeeper);
  *(void *)(v0 + 56) = v1;
  return _swift_task_switch(sub_1003651C4, v1, 0);
}

uint64_t sub_1003651C4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 64) = *(void *)(v1 + 112);
  *(unsigned char *)(v0 + 80) = *(unsigned char *)(v1 + 120);
  return _swift_task_switch(sub_1003651F4, 0, 0);
}

uint64_t sub_1003651F4()
{
  if (*(unsigned char *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v0 + 40);
    id v3 = sub_100365690;
  }
  else
  {
    *(CFAbsoluteTime *)(v0 + 72) = CFAbsoluteTimeGetCurrent();
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v0 + 40);
    id v3 = sub_100365274;
  }
  return _swift_task_switch(v3, v1, v2);
}

id sub_100365274()
{
  double v2 = *(double *)(v0 + 64);
  double v1 = *(double *)(v0 + 72);
  swift_release();
  if (v1 - v2 < 5.0)
  {
    id result = [*(id *)(v0 + 16) view:v1 - v2];
    if (result)
    {
      uint64_t v4 = result;
      id v5 = sub_10035FFD8();
      [v4 addSubview:v5];

      id v6 = sub_10035FFD8();
      id v7 = [v6 superview];
      if (v7)
      {
        uint64_t v8 = v7;
        [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v9 = [v6 leadingAnchor];
        id v10 = [v8 leadingAnchor];
        id v11 = [v9 constraintEqualToAnchor:v10];

        [v11 setConstant:0.0];
        if (v11)
        {
          id v11 = v11;
          [v11 setActive:1];

          uint64_t v8 = v11;
        }
      }
      else
      {
        id v11 = 0;
      }

      id v13 = sub_10035FFD8();
      id v14 = [v13 superview];
      if (v14)
      {
        id v15 = v14;
        [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v16 = [v13 trailingAnchor];
        id v17 = [v15 trailingAnchor];
        id v18 = [v16 constraintEqualToAnchor:v17];

        [v18 setConstant:0.0];
        if (v18)
        {
          id v18 = v18;
          [v18 setActive:1];

          id v15 = v18;
        }
        unint64_t v19 = &stru_1007D7000;
      }
      else
      {
        id v18 = 0;
        unint64_t v19 = &stru_1007D7000;
      }

      unsigned __int8 v20 = *(void **)(v0 + 16);
      id v21 = sub_10035FFD8();
      id v22 = sub_1001DD438(0, 1, 0.0);

      uint64_t v23 = (char *)sub_10035FFD8();
      id v24 = *(id *)&v23[OBJC_IVAR____TtC7Journal17IndexingAlertView_bodyLabel];

      id v25 = [v24 bottomAnchor];
      id result = [v20 (SEL)v19[102].imp];
      if (result)
      {
        uint64_t v26 = result;
        id v27 = [result keyboardLayoutGuide];

        id v28 = [v27 topAnchor];
        if (qword_1007F72F8 != -1) {
          swift_once();
        }
        uint64_t v29 = *(void **)(v0 + 48);
        id v12 = [v25 constraintLessThanOrEqualToAnchor:v28 constant:-*(double *)&qword_10083D908];

        [v12 setActive:1];
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }

  id v12 = sub_10035FFD8();
  [v12 removeFromSuperview];
LABEL_18:

  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v30();
}

uint64_t sub_100365690()
{
  double v1 = *(void **)(v0 + 48);
  swift_release();

  id v2 = sub_10035FFD8();
  [v2 removeFromSuperview];

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_1003657F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_10036586C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (void *)(a1 + 40); ; i += 2)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

void sub_100365900(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    uint64_t v5 = self;
    id v6 = [v5 standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 stringArrayForKey:v7];

    if (v8)
    {
      id v9 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v9 = _swiftEmptyArrayStorage;
    }
    if (*((void *)v9 + 2) >= 2uLL) {
      uint64_t v10 = 2;
    }
    else {
      uint64_t v10 = *((void *)v9 + 2);
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    id v11 = (double *)swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      id v11 = _swiftEmptyArrayStorage;
    }
    uint64_t v12 = *((void *)v11 + 2);
    swift_release();
    if (v12 == v10)
    {
      id v13 = (double *)swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        id v13 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      id v13 = sub_1000CCE38((uint64_t)v9, (uint64_t)(v9 + 4), 0, (2 * v10) | 1);
    }
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_10036586C((uint64_t)v13, a1, a2);
    if ((v15 & 1) == 0)
    {
      sub_10035F914(v14);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1000F32DC(0, 0, a1, a2);
    id v16 = [v5 standardUserDefaults];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v18 = String._bridgeToObjectiveC()();
    [v16 setValue:isa forKey:v18];
  }
}

uint64_t sub_100365B64(void *a1)
{
  uint64_t result = (uint64_t)[a1 dataSource];
  if (result)
  {
    sub_100010218(&qword_1007FAA68);
    if (swift_dynamicCastClass())
    {
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
      swift_unknownObjectRelease();
      if (v4 == 3) {
        return 1;
      }
      if (v4 != 255)
      {
        if (v4 == 4)
        {
          sub_1000D7EA0(v2, v3, 4);
          return 1;
        }
        sub_1000D7EA0(v2, v3, v4);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return result;
}

uint64_t sub_100365C28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *NSString v7 = v2;
  v7[1] = sub_100052588;
  return sub_100364FF0(a1, v4, v5, v6);
}

void sub_100365CDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100365CE4()
{
  uint64_t v16 = sub_100010218(&qword_1008098E8);
  uint64_t v1 = *(void *)(v16 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v15 = sub_100010218(&qword_1008098E0);
  uint64_t v3 = *(void *)(v15 - 8);
  unint64_t v11 = (v12 + v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v14 = sub_100010218(&qword_1008026B0);
  uint64_t v5 = *(void *)(v14 - 8);
  unint64_t v6 = (v11 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v13 = sub_100010218(&qword_1007FAA60);
  uint64_t v8 = *(void *)(v13 - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v12, v16);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v11, v15);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v14);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v13);

  return swift_deallocObject();
}

uint64_t sub_100365F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100010218(&qword_1008098E8);
  sub_100010218(&qword_1008098E0);
  sub_100010218(&qword_1008026B0);
  sub_100010218(&qword_1007FAA60);

  return sub_1003621E0(a1, a2, a3);
}

uint64_t sub_100366148()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100366180(void *a1)
{
}

uint64_t sub_100366188()
{
  uint64_t v1 = sub_100010218(&qword_100806B88);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10036621C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10036625C(uint64_t a1)
{
  sub_100362134(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100366264()
{
  return swift_deallocObject();
}

uint64_t sub_100366274(uint64_t a1, uint64_t a2)
{
  return sub_100361B68(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_10036627C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003662B4(uint64_t a1, uint64_t a2)
{
  return sub_1003618B0(a1, a2);
}

id sub_1003662BC(uint64_t a1, uint64_t a2)
{
  return sub_10036027C(a1, a2);
}

uint64_t sub_1003662C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003662D4()
{
  return swift_release();
}

uint64_t sub_1003662DC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100366320(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100364FF0(a1, v4, v5, v6);
}

uint64_t sub_1003663D4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100366418()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100366468()
{
}

uint64_t sub_10036648C(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  sub_100010218((uint64_t *)&unk_100800A60);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  v2[22] = v3;
  v2[23] = *(void *)(v3 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[25] = v4;
  v2[26] = *(void *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return _swift_task_switch(sub_1003665F8, 0, 0);
}

uint64_t sub_1003665F8()
{
  id v1 = sub_1000D05AC();
  v0[29] = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = v0[18];
    id v4 = [objc_allocWithZone((Class)LPLinkSnapshotGenerator) init];
    v0[30] = v4;
    id v5 = [self currentTraitCollection];
    uint64_t v6 = (double *)(v3 + *(int *)(type metadata accessor for ExportOptions() + 48));
    id v7 = [objc_allocWithZone((Class)LPLinkSnapshotConfiguration) initWithTraitCollection:v5 preferredSizeClass:5 size:*v6 size:v6[1] scale:1.0];
    v0[31] = v7;

    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1006D6D00;
    *(void *)(v8 + 32) = v7;
    specialized Array._endMutation()();
    sub_1003677B4();
    id v9 = v7;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    v0[32] = isa;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[7] = v0 + 17;
    v0[3] = sub_1003668C8;
    uint64_t v11 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100367058;
    v0[13] = &unk_1007A7440;
    v0[14] = v11;
    [v4 snapshotForMetadata:v2 configurations:isa completionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    sub_1002E00EC();
    swift_allocError();
    unsigned char *v12 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1003668C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 264) = v1;
  if (v1) {
    id v2 = sub_100366F9C;
  }
  else {
    id v2 = sub_1003669D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003669D8()
{
  uint64_t v1 = *(void **)(v0 + 136);

  if (v1[2])
  {
    uint64_t v3 = v1[4];
    unint64_t v2 = v1[5];
    sub_100040D64(v3, v2);
    swift_bridgeObjectRelease();
    id v4 = objc_allocWithZone((Class)UIImage);
    sub_100040D64(v3, v2);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v6 = (UIImage *)[v4 initWithData:isa];
    sub_100040DD0(v3, v2);

    if (v6)
    {
      id v7 = UIImageHEICRepresentation(v6);
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v51 = v6;
        uint64_t v9 = *(void *)(v0 + 216);
        uint64_t v54 = *(void *)(v0 + 208);
        uint64_t v10 = *(void *)(v0 + 192);
        uint64_t v50 = *(void *)(v0 + 200);
        uint64_t v11 = *(void *)(v0 + 184);
        uint64_t v48 = *(void *)(v0 + 176);
        uint64_t v52 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v53 = v12;

        uint64_t v55 = UUID.uuidString.getter();
        NSString v56 = v13;
        v14._uint64_t countAndFlagsBits = 0x636965682ELL;
        v14._object = (void *)0xE500000000000000;
        String.append(_:)(v14);
        sub_100478818(v9);
        *(void *)(v0 + 120) = v55;
        *(void *)(v0 + 128) = v56;
        (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for URL.DirectoryHint.inferFromPath(_:), v48);
        sub_100014344();
        URL.appending<A>(path:directoryHint:)();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v48);
        uint64_t v15 = v9;
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        v16(v15, v50);
        Data.write(to:options:)();
        id v23 = [*(id *)(v0 + 232) URL];
        uint64_t v49 = v16;
        if (v23)
        {
          id v24 = v23;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v25 = 0;
        }
        else
        {
          uint64_t v25 = 1;
        }
        uint64_t v26 = *(void *)(v0 + 200);
        uint64_t v27 = *(void *)(v0 + 208);
        uint64_t v29 = *(void *)(v0 + 160);
        uint64_t v28 = *(void *)(v0 + 168);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v25, 1, v26);
        sub_1003677F4(v29, v28);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26))
        {
          sub_100052EAC(*(void *)(v0 + 168));
          uint64_t v30 = 0;
          uint64_t v31 = (void *)0xE000000000000000;
        }
        else
        {
          uint64_t v32 = *(void *)(v0 + 216);
          uint64_t v33 = *(void *)(v0 + 200);
          uint64_t v34 = *(void *)(v0 + 168);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 208) + 16))(v32, v34, v33);
          sub_100052EAC(v34);
          uint64_t v30 = URL.absoluteString.getter();
          uint64_t v31 = v35;
          v49(v32, v33);
        }
        uint64_t v36 = *(void **)(v0 + 240);
        uint64_t v46 = *(void *)(v0 + 224);
        uint64_t v47 = *(void **)(v0 + 248);
        uint64_t v44 = *(void **)(v0 + 232);
        uint64_t v45 = *(void *)(v0 + 200);
        uint64_t v37 = *(void *)(v0 + 144);
        v38._uint64_t countAndFlagsBits = v30;
        v38._object = v31;
        String.append(_:)(v38);
        swift_bridgeObjectRelease();
        v39._uint64_t countAndFlagsBits = 15911;
        v39._object = (void *)0xE200000000000000;
        String.append(_:)(v39);
        uint64_t v40 = sub_100386E04(v55, v56, v37, 0, 0, 0, 0, 0x3D6665726820613CLL, (void *)0xE900000000000027, 1046556476, (void *)0xE400000000000000);
        uint64_t v42 = v41;

        swift_bridgeObjectRelease();
        sub_100040DD0(v52, v53);

        swift_bridgeObjectRelease();
        sub_100040DD0(v3, v2);

        v49(v46, v45);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v43(v40, v42);
      }
    }
    sub_100040DD0(v3, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  NSString v18 = *(void **)(v0 + 240);
  id v17 = *(void **)(v0 + 248);
  unint64_t v19 = *(void **)(v0 + 232);
  sub_1002E00EC();
  swift_allocError();
  *unsigned __int8 v20 = 6;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100366F9C()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v3 = (void *)v0[30];
  unint64_t v2 = (void *)v0[31];
  id v4 = (void *)v0[29];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100367058(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v4 = swift_allocError();
    *id v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    **(void **)(*(void *)(v2 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10036711C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_10036648C(a1);
}

id sub_1003671B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - v10;
  __chkstk_darwin(v12);
  Swift::String v14 = (char *)&v26 - v13;
  id result = sub_1000D05AC();
  if (!result)
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return result;
  }
  uint64_t v16 = result;
  id v17 = [result URL];
  if (!v17)
  {
    unsigned __int8 v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v20(v11, 1, 1, v2);
    goto LABEL_7;
  }
  NSString v18 = v17;
  uint64_t v27 = v14;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v19(v11, v5, v2);
  unsigned __int8 v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v20(v11, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    Swift::String v14 = v27;
LABEL_7:
    id v21 = [v16 originalURL];
    if (v21)
    {
      id v22 = v21;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = 0;
      uint64_t v16 = v22;
    }
    else
    {
      uint64_t v23 = 1;
    }

    v20(v8, v23, 1, v2);
    sub_1003677F4((uint64_t)v8, (uint64_t)v14);
    sub_100052EAC((uint64_t)v11);
    goto LABEL_12;
  }

  id v24 = v27;
  v19(v27, v11, v2);
  Swift::String v14 = v24;
  v20(v24, 0, 1, v2);
LABEL_12:
  *(void *)(a1 + 24) = _s6ResultVMa_3();
  *(void *)(a1 + 32) = sub_1003684D4(&qword_100809930, (void (*)(uint64_t))_s6ResultVMa_3);
  *(void *)(a1 + 40) = sub_1003684D4(&qword_100809938, (void (*)(uint64_t))_s6ResultVMa_3);
  uint64_t v25 = sub_100062E54((uint64_t *)a1);
  return (id)sub_1003677F4((uint64_t)v14, (uint64_t)v25);
}

uint64_t sub_100367514@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008099D0);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_3();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10036841C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    type metadata accessor for URL();
    sub_1003684D4(&qword_1007FC720, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_1003677F4((uint64_t)v6, (uint64_t)v12);
    sub_100368470((uint64_t)v12, v15);
  }
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
}

uint64_t sub_10036775C(uint64_t a1)
{
  uint64_t result = sub_1003684D4(&qword_100809910, (void (*)(uint64_t))_s9LinkAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003677B4()
{
  unint64_t result = qword_100809928;
  if (!qword_100809928)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100809928);
  }
  return result;
}

uint64_t sub_1003677F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s6ResultVMa_3()
{
  uint64_t result = qword_100809998;
  if (!qword_100809998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1003678A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100010218((uint64_t *)&unk_100800A60) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100367A00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_100367AD0(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_100367BE0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_100367D5C(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_100367E6C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_100367FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100367FFC);
}

uint64_t sub_100367FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10036806C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100368080);
}

uint64_t sub_100368080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1003680F4()
{
  sub_1000265E4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100368180()
{
  return 7107189;
}

uint64_t sub_100368190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100368218(uint64_t a1)
{
  unint64_t v2 = sub_10036841C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100368254(uint64_t a1)
{
  unint64_t v2 = sub_10036841C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100368290@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100367514(a1, a2);
}

uint64_t sub_1003682A8(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_1008099E0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10036841C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for URL();
  sub_1003684D4(&qword_1007FC738, (void (*)(uint64_t))&type metadata accessor for URL);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_10036841C()
{
  unint64_t result = qword_1008099D8;
  if (!qword_1008099D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008099D8);
  }
  return result;
}

uint64_t sub_100368470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ResultVMa_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003684D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_3(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003685B8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_3()
{
  return &_s6ResultV10CodingKeysON_3;
}

unint64_t sub_1003685F4()
{
  unint64_t result = qword_1008099E8;
  if (!qword_1008099E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008099E8);
  }
  return result;
}

unint64_t sub_10036864C()
{
  unint64_t result = qword_1008099F0;
  if (!qword_1008099F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008099F0);
  }
  return result;
}

unint64_t sub_1003686A4()
{
  unint64_t result = qword_1008099F8;
  if (!qword_1008099F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008099F8);
  }
  return result;
}

uint64_t sub_1003686F8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100809A00);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100809A00);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

double *sub_1003687C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_20:
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_17:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_20;
          }
          swift_retain();
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_17;
          }
        }
        Activity.attributes.getter();
        if (v12)
        {
          if (v11 == a2 && v12 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_14:
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_5;
          }
          char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_14;
          }
        }
        swift_release();
LABEL_5:
        if (v6 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100368960(uint64_t a1, uint64_t a2)
{
  uint64_t v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = type metadata accessor for ActivityUIDismissalPolicy();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  sub_100010218(&qword_100809A20);
  v2[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[15] = v5;
  v2[16] = v4;
  return _swift_task_switch(sub_100368A84, v5, v4);
}

uint64_t sub_100368A84()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[9];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
  uint64_t v3 = v0[5];
  if (v3)
  {
    uint64_t v4 = v0[6];
    sub_10002E0BC(v0 + 2, v0[5]);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    unint64_t v7 = v6;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 2));
    sub_100010218(&qword_100809A28);
    unint64_t v8 = static Activity.activities.getter();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1003687C0(v8, v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)v9 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_4:
        if (((unint64_t)v9 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)(((unint64_t)v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_26;
          }
          uint64_t v10 = *((void *)v9 + 4);
          swift_retain();
        }
        v0[17] = v10;
        swift_bridgeObjectRelease();
        if (qword_1007F6E50 == -1)
        {
LABEL_8:
          uint64_t v11 = type metadata accessor for Logger();
          sub_100026A54(v11, (uint64_t)qword_100809A00);
          swift_bridgeObjectRetain();
          uint64_t v12 = Logger.logObject.getter();
          os_log_type_t v13 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v12, v13))
          {
            uint64_t v14 = (uint8_t *)swift_slowAlloc();
            uint64_t v27 = swift_slowAlloc();
            *(_DWORD *)uint64_t v14 = 136315138;
            swift_bridgeObjectRetain();
            v0[7] = sub_10011EA98(v5, v7, &v27);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v12, v13, "Stopping live activity for attachment: %s", v14, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v15 = v0[13];
          uint64_t v16 = sub_100010218(&qword_100809A30);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
          static ActivityUIDismissalPolicy.immediate.getter();
          uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:)
                                                         + async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:));
          id v17 = (void *)swift_task_alloc();
          v0[18] = v17;
          *id v17 = v0;
          v17[1] = sub_100368F74;
          uint64_t v18 = v0[12];
          uint64_t v19 = v0[13];
          return v26(v19, v18);
        }
LABEL_26:
        swift_once();
        goto LABEL_8;
      }
    }
    else if (*(void *)(((unint64_t)v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    sub_10001457C((uint64_t)(v0 + 2), &qword_1007F9470);
  }
  if (qword_1007F6E50 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_100026A54(v21, (uint64_t)qword_100809A00);
  id v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Trying to stop activity but one hasn't started yet", v24, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100368F74()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 104);
  uint64_t v3 = *(void *)(*v0 + 96);
  uint64_t v4 = *(void *)(*v0 + 88);
  uint64_t v5 = *(void *)(*v0 + 80);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_10001457C(v2, &qword_100809A20);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_10036911C, v7, v6);
}

uint64_t sub_10036911C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100369198(uint64_t a1, uint64_t a2)
{
  v2[17] = a1;
  v2[18] = a2;
  uint64_t v3 = type metadata accessor for ActivityPresentationOptions();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v2[22] = swift_task_alloc();
  uint64_t v4 = sub_100010218(&qword_100809A30);
  v2[23] = v4;
  v2[24] = *(void *)(v4 - 8);
  v2[25] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[26] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10036931C, v6, v5);
}

uint64_t sub_10036931C()
{
  uint64_t v49 = v0;
  swift_release();
  type metadata accessor for ActivityAuthorizationInfo();
  swift_allocObject();
  ActivityAuthorizationInfo.init()();
  char v1 = ActivityAuthorizationInfo.areActivitiesEnabled.getter();
  swift_release();
  if (v1)
  {
    if (qword_1007F6E50 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100026A54(v2, (uint64_t)qword_100809A00);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      v48[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      v0[16] = sub_10011EA98(0xD000000000000020, 0x800000010069A090, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Requesting begin activity", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v6 = v0[18];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v6 + 32);
    v44(ObjectType, v6);
    uint64_t v7 = v0[5];
    if (v7)
    {
      uint64_t v8 = v0[6];
      sub_10002E0BC(v0 + 2, v7);
      uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      uint64_t v10 = v9;
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 2));
    }
    else
    {
      sub_10001457C((uint64_t)(v0 + 2), &qword_1007F9470);
      uint64_t v47 = 0;
      uint64_t v10 = 0;
    }
    uint64_t v17 = v0[22];
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    sub_1001963B4();
    sub_10019640C();
    sub_100196464();
    ActivityContent.init(state:staleDate:relevanceScore:)();
    SBSIsSystemApertureAvailable();
    sub_100010218(&qword_100809A40);
    uint64_t v19 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void *)(v20 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1006D6270;
    unint64_t v24 = v23 + v22;
    uint64_t v25 = *(void (**)(void))(v20 + 104);
    uint64_t v26 = v24 + v21;
    v25();
    ((void (*)(uint64_t, void, uint64_t))v25)(v26, enum case for ActivityPresentationOptions.ActivityPresentationDestination.lockscreen(_:), v19);
    ActivityPresentationOptions.init(destinations:)();
    ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.setter();
    sub_100010218(&qword_100809A28);
    v0[12] = v47;
    v0[13] = v10;
    static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v46 = v0[18];
      uint64_t v29 = swift_slowAlloc();
      v48[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      v0[14] = sub_10011EA98(0xD000000000000020, 0x800000010069A090, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2080;
      v44(ObjectType, v46);
      uint64_t v30 = v0[10];
      if (v30)
      {
        uint64_t v31 = v0[11];
        sub_10002E0BC(v0 + 7, v0[10]);
        uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
        unint64_t v34 = v33;
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 7));
      }
      else
      {
        sub_10001457C((uint64_t)(v0 + 7), &qword_1007F9470);
        unint64_t v34 = 0xE700000000000000;
        uint64_t v32 = 0x6E776F6E6B6E75;
      }
      v0[15] = sub_10011EA98(v32, v34, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s Requested an activity successfully for attachment: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    uint64_t v36 = v0[24];
    uint64_t v35 = v0[25];
    uint64_t v37 = v0[23];
    uint64_t v39 = v0[20];
    uint64_t v38 = v0[21];
    uint64_t v40 = v0[19];
    uint64_t v15 = Activity.id.getter();
    uint64_t v16 = v41;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  }
  else
  {
    if (qword_1007F6E50 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100026A54(v11, (uint64_t)qword_100809A00);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Live activities aren't enabeld.", v14, 2u);
      swift_slowDealloc();
    }

    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v42(v15, v16);
}

uint64_t sub_100369B80()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for JSONEncoder.OutputFormatting();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  uint64_t v2 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v4 = v3;
  static String.Encoding.utf8.getter();
  uint64_t v5 = String.init(data:encoding:)();
  sub_100040DD0(v2, v4);
  swift_release();
  return v5;
}

uint64_t sub_100369CE8()
{
  sub_100014344();
  uint64_t v0 = StringProtocol.components<A>(separatedBy:)();
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100369D7C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = String.index(before:)();
      uint64_t result = String.subscript.getter();
      if (!((v5 & 0x2000000000000000) != 0 ? HIBYTE(v5) & 0xF : result & 0xFFFFFFFFFFFFLL)) {
        break;
      }
      if ((v5 & 0x1000000000000000) != 0)
      {
        int v7 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
      }
      else
      {
        if ((v5 & 0x2000000000000000) == 0 && (result & 0x1000000000000000) == 0) {
          _StringObject.sharedUTF8.getter();
        }
        int v7 = _decodeScalar(_:startingAt:)();
      }
      int v8 = v7;
      swift_bridgeObjectRelease();
      if ((v8 - 14) <= 0xFFFFFFFB && (v8 - 8232) >= 2 && v8 != 133)
      {
        BOOL v9 = ((String.index(before:)() ^ v3) & 0xFFFFFFFFFFFFC000) == 0;
        return !v9;
      }
      if (v3 < 0x4000) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    BOOL v9 = v2 == 0;
    return !v9;
  }
  return result;
}

void sub_100369EF0(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL.DirectoryHint();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  BOOL v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v29 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  uint64_t v28 = v10;
  if (qword_10083D468)
  {
    sub_1004FD498(qword_10083D460, (void *)qword_10083D468, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  }
  else
  {
    static URL.temporaryDirectory.getter();
  }
  UUID.init()();
  os_log_type_t v13 = (void *)UUID.uuidString.getter();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v30[0] = v13;
  v30[1] = v15;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.notDirectory(_:), v6);
  sub_100014344();
  URL.append<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = URL.pathExtension.getter();
  URL.appendPathExtension(_:)(v16);
  swift_bridgeObjectRelease();
  id v17 = [self defaultManager];
  URL._bridgeToObjectiveC()(v18);
  uint64_t v20 = v19;
  URL._bridgeToObjectiveC()(v21);
  uint64_t v23 = v22;
  v30[0] = 0;
  unsigned __int8 v24 = [v17 copyItemAtURL:v20 toURL:v22 error:v30];

  if (v24)
  {
    id v25 = v30[0];
    sub_10036AF38();
  }
  else
  {
    id v26 = v30[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(a1, v28);
  }
}

id sub_10036A34C(double a1)
{
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  uint64_t v55 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v54 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v52 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v51 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for OSSignpostID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  Swift::String v16 = (char *)&v44 - v15;
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for OSSignposter();
  uint64_t v47 = *(void *)(v21 - 8);
  uint64_t v48 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6E58 != -1) {
    swift_once();
  }
  uint64_t v53 = v6;
  uint64_t v24 = sub_100026A54(v17, (uint64_t)qword_100809A48);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v24, v17);
  OSSignposter.init(logger:)();
  static OSSignpostID.exclusive.getter();
  uint64_t v45 = v23;
  id v25 = OSSignposter.logHandle.getter();
  os_signpost_type_t v26 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v44 = v11;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
    v27(v13, v16, v10);
    uint64_t v29 = v2;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v26, v31, "LoadThumbnail", "", v30, 2u);
    uint64_t v2 = v29;
    swift_slowDealloc();

    uint64_t v32 = v44;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v28);
  }
  else
  {

    uint64_t v32 = v11;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
  }
  v27(v13, v16, v28);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  OSSignpostIntervalState.init(id:isOpen:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v28);
  uint64_t v33 = v49;
  Swift::String v56 = URL.path(percentEncoded:)(1);
  sub_100014344();
  StringProtocol.removingPercentEncoding.getter();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = v50;
  uint64_t v37 = v46;
  uint64_t v38 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v46, v33, v53);
  if (!v35) {
    URL.path(percentEncoded:)(1);
  }
  uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
  v39(v37, v38);
  sub_10001B284(0, (unint64_t *)&qword_10080A1F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v52, 1, 1, v38);
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  uint64_t v40 = v51;
  URL.init(filePath:directoryHint:relativeTo:)();
  id v41 = sub_100394B08(a1);
  v39(v40, v38);
  uint64_t v42 = (uint64_t)v45;
  sub_10036B350((uint64_t)v45, "LoadThumbnail", 13, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v48);
  return v41;
}

uint64_t sub_10036A9D8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100809A48);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100809A48);
  if (qword_1007F7DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10036AAA0()
{
  uint64_t v0 = type metadata accessor for URL();
  void v8[3] = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for URLResourceValues();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218(&qword_1008038F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSURLCreationDateKey;
  uint64_t v6 = NSURLCreationDateKey;
  sub_1000F400C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  URLResourceValues.creationDate.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_10036AF38()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (NSURL *)((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (char *)((char *)&v20 - (char *)v4);
  URL._bridgeToObjectiveC()(v4);
  uint64_t v7 = v6;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = 0;
  unsigned int v9 = [v7 setResourceValue:v8 forKey:NSURLFileProtectionKey error:&v23];

  id v10 = v23;
  if (v9)
  {
    id v11 = v10;
  }
  else
  {
    id v21 = v23;
    id v12 = v23;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6E58 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100026A54(v13, (uint64_t)qword_100809A48);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v0, v1);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      id v21 = (id)swift_slowAlloc();
      id v23 = v21;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_1000FBCDC();
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v22 = sub_10011EA98(v17, v18, (uint64_t *)&v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      *(_WORD *)(v16 + 12) = 2112;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v22 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v20 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error setting file protection for %s %@", (uint8_t *)v16, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10036B350(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  os_signpost_type_t v26 = a2;
  uint64_t v5 = type metadata accessor for OSSignpostError();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for OSSignpostID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v23[-v13];
  os_log_type_t v15 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v24 = static os_signpost_type_t.end.getter();
  uint64_t result = OS_os_log.signpostsEnabled.getter();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v17 = v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v26 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = &v27;
LABEL_10:
  swift_retain();
  checkForErrorAndConsumeState(state:)();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  uint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v20 = 0;
  os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v17, v19, v20, 2u);
  swift_slowDealloc();

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v11, v8);
}

void sub_10036B660(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_100010218(&qword_100809A60);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  id v25 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  uint64_t v4 = self;
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  id v8 = [v4 readingIntentWithURL:v6 options:8];

  URL._bridgeToObjectiveC()(v9);
  id v11 = v10;
  id v12 = [v4 writingIntentWithURL:v10 options:8];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D6D10;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 40) = v12;
  aBlock[0] = v13;
  specialized Array._endMutation()();
  sub_10001B284(0, &qword_100809A68);
  id v14 = v8;
  id v15 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [objc_allocWithZone((Class)NSOperationQueue) init];
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v1);
  unint64_t v18 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v19 + v18, (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  aBlock[4] = sub_10036BCA0;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10023440C;
  uint64_t aBlock[3] = &unk_1007A7520;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v14;
  id v22 = v15;
  swift_release();
  id v23 = v25;
  [v25 coordinateAccessWithIntents:isa queue:v17 byAccessor:v20];
  _Block_release(v20);
}

uint64_t sub_10036B974(void *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
  }
  else
  {
    id v10 = [self defaultManager];
    id v11 = [a2 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL._bridgeToObjectiveC()(v12);
    id v14 = v13;
    id v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    id v16 = [a3 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL._bridgeToObjectiveC()(v17);
    uint64_t v19 = v18;
    v15(v9, v6);
    id v25 = 0;
    unsigned int v20 = [v10 moveItemAtURL:v14 toURL:v19 error:&v25];

    id v21 = v25;
    if (v20)
    {
      sub_100010218(&qword_100809A60);
      return CheckedContinuation.resume(returning:)();
    }
    id v23 = v21;
    a1 = (void *)_convertNSErrorToError(_:)();
  }
  swift_willThrow();
  id v25 = a1;
  sub_100010218(&qword_100809A60);
  return CheckedContinuation.resume(throwing:)();
}

char *sub_10036BBB8()
{
  return &v1;
}

uint64_t sub_10036BBC8()
{
  uint64_t v1 = sub_100010218(&qword_100809A60);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10036BCA0(void *a1)
{
  sub_100010218(&qword_100809A60);
  unint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);

  return sub_10036B974(a1, v3, v4);
}

uint64_t sub_10036BD18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10036BD28()
{
  return swift_release();
}

id sub_10036BD30()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7940 != -1) {
    swift_once();
  }
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v5 = (objc_class *)type metadata accessor for WhatsNewViewController();
  v14.receiver = v0;
  v14.super_class = v5;
  id v6 = [super initWithTitle:v4 detailText:0 icon:0 contentLayout:2];

  id v7 = v6;
  id result = [v7 view];
  if (result)
  {
    uint64_t v9 = result;
    [result setAccessibilityViewIsModal:1];

    sub_10036BF10();
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
    type metadata accessor for MainActor();
    id v11 = v7;
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    sub_100328A60((uint64_t)v3, (uint64_t)&unk_100809AA0, (uint64_t)v13);

    swift_release();
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036BF10()
{
  id v1 = [self boldButton];
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = [v2 systemIndigoColor];
  [v3 setTintColor:v4];

  [v3 addTarget:v0 action:"continueButtonTapped" forControlEvents:64];
  id v5 = [self mainBundle];
  v11._object = (void *)0x800000010069A100;
  v6._uint64_t countAndFlagsBits = 0x65756E69746E6F43;
  v6._object = (void *)0xE800000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v11);

  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setTitle:v8 forState:0];

  id v9 = [v0 buttonTray];
  [v9 addButton:v3];
}

uint64_t sub_10036C0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ImageResource();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_100010218(&qword_1007FEAE0);
  v4[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v7;
  v4[9] = v6;
  return _swift_task_switch(sub_10036C1EC, v7, v6);
}

uint64_t sub_10036C1EC()
{
  if (qword_1007F7E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *id v3 = v0;
  v3[1] = sub_10036C2FC;
  uint64_t v4 = *(void *)(v0 + 48);
  return sub_100590A80(v4);
}

uint64_t sub_10036C2FC(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  *(unsigned char *)(*v1 + 88) = a1;
  swift_task_dealloc();
  sub_10036CC14(v3);
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_10036C448, v5, v4);
}

uint64_t sub_10036C448()
{
  int v1 = *(unsigned __int8 *)(v0 + 88);
  swift_release();
  if (v1 == 1)
  {
    if (qword_1007F7948 != -1) {
      swift_once();
    }
    NSString v2 = String._bridgeToObjectiveC()();
    if (qword_1007F7950 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void **)(v0 + 16);
  }
  else
  {
    if (qword_1007F7948 != -1) {
      swift_once();
    }
    NSString v2 = String._bridgeToObjectiveC()();
    if (qword_1007F7958 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void **)(v0 + 16);
  }
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  [v3 addBulletedListItemWithTitle:v2 description:v4 symbolName:v5 tintColor:0];

  if (qword_1007F7960 != -1) {
    swift_once();
  }
  NSString v6 = String._bridgeToObjectiveC()();
  if (qword_1007F7968 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void **)(v0 + 16);
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  [v7 addBulletedListItemWithTitle:v6 description:v8 symbolName:v9 tintColor:0];

  if (qword_1007F7970 != -1) {
    swift_once();
  }
  NSString v10 = String._bridgeToObjectiveC()();
  if (qword_1007F7978 != -1) {
    swift_once();
  }
  NSString v11 = String._bridgeToObjectiveC()();
  sub_1001EB508();
  if (qword_1007F8018 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 40);
  id v15 = *(void **)(v0 + 16);
  uint64_t v14 = *(void *)(v0 + 24);
  uint64_t v16 = sub_100026A54(v14, (uint64_t)qword_10083F168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v16, v14);
  id v17 = (void *)UIImage.init(resource:)();
  [v15 addBulletedListItemWithTitle:v10 description:v11 image:v17];

  if (qword_1007F7980 != -1) {
    swift_once();
  }
  NSString v18 = String._bridgeToObjectiveC()();
  if (qword_1007F7988 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void **)(v0 + 16);
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  [v19 addBulletedListItemWithTitle:v18 description:v20 symbolName:v21 tintColor:0];

  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

void sub_10036C914()
{
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setObject:v2 forKey:v3];

  id v4 = [v0 presentingViewController];
  if (v4)
  {
    id v5 = v4;
    [v4 dismissViewControllerAnimated:1 completion:0];
  }
}

id sub_10036CAC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WhatsNewViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for WhatsNewViewController()
{
  return self;
}

uint64_t sub_10036CB20()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10036CB60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10036C0C8(a1, v4, v5, v6);
}

uint64_t sub_10036CC14(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FEAE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10036CC74(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal18TimelineFilterView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton;
  type metadata accessor for TimelineFilterButton();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal18TimelineFilterView_showingLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel] = 0;
  v11[OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled] = 1;

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for TimelineFilterView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_10036CF1C();

  return v14;
}

id sub_10036CDD4(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal18TimelineFilterView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton;
  type metadata accessor for TimelineFilterButton();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal18TimelineFilterView_showingLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel] = 0;
  v5[OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled] = 1;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for TimelineFilterView();
  [super initWithCoder:a1];
  id v9 = v8;
  if (v8)
  {
    id v10 = v8;
    sub_10036CF1C();
  }
  return v9;
}

void sub_10036CF1C()
{
  id v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal18TimelineFilterView_showingLabel];
  if (qword_1007F7290 != -1) {
    swift_once();
  }
  [v2 setFont:qword_10083D858];
  uint64_t v3 = self;
  id v4 = [v3 secondaryLabelColor];
  [v2 setTextColor:v4];

  [v2 setAdjustsFontSizeToFitWidth:1];
  [v2 setIsAccessibilityElement:0];
  [v2 setLineBreakMode:2];
  [v2 setNumberOfLines:1];
  [v2 setAdjustsFontForContentSizeCategory:1];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel];
  if (qword_1007F72A0 != -1) {
    swift_once();
  }
  [v5 setFont:qword_10083D868];
  id v6 = [v3 systemIndigoColor];
  [v5 setTextColor:v6];

  [v5 setAdjustsFontSizeToFitWidth:1];
  [v5 setIsAccessibilityElement:0];
  [v5 setLineBreakMode:2];
  [v5 setNumberOfLines:1];
  [v5 setAdjustsFontForContentSizeCategory:1];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton];
  uint64_t v70 = v1;
  [v1 addSubview:v7];
  id v8 = [v7 superview];
  if (v8)
  {
    id v9 = v8;
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v7 trailingAnchor];
    id v11 = [v9 trailingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:0.0];
    id v13 = v12;
    [v13 setActive:1];
  }
  id v14 = [v7 superview];
  if (v14)
  {
    id v15 = v14;
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v7 topAnchor];
    id v17 = [v15 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:0.0];
    id v19 = v18;
    [v19 setActive:1];
  }
  id v71 = [objc_allocWithZone((Class)UIView) init];
  [v71 addSubview:v2];
  [v71 addSubview:v5];
  id v20 = [v2 superview];
  if (v20)
  {
    NSString v21 = v20;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v2 topAnchor];
    id v23 = [v21 topAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:0.0];
    id v25 = v24;
    [v25 setActive:1];
  }
  id v26 = [v2 superview];
  if (v26)
  {
    char v27 = v26;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v2 trailingAnchor];
    id v29 = [v27 trailingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    [v30 setConstant:0.0];
    id v31 = v30;
    [v31 setActive:1];
  }
  id v32 = [v2 superview];
  if (v32)
  {
    uint64_t v33 = v32;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v34 = [v2 leadingAnchor];
    id v35 = [v33 leadingAnchor];
    id v36 = [v34 constraintGreaterThanOrEqualToAnchor:v35];

    [v36 setConstant:0.0];
    id v37 = v36;
    [v37 setActive:1];
  }
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v38 = [v5 topAnchor];
  id v39 = [v2 bottomAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  [v40 setConstant:0.0];
  [v40 setActive:1];

  id v41 = [v5 superview];
  if (v41)
  {
    uint64_t v42 = v41;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v43 = [v5 trailingAnchor];
    id v44 = [v42 trailingAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    [v45 setConstant:0.0];
    id v46 = v45;
    [v46 setActive:1];
  }
  id v47 = [v5 superview];
  if (v47)
  {
    uint64_t v48 = v47;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v49 = [v5 leadingAnchor];
    id v50 = [v48 leadingAnchor];
    id v51 = [v49 constraintGreaterThanOrEqualToAnchor:v50];

    [v51 setConstant:0.0];
    id v52 = v51;
    [v52 setActive:1];
  }
  [v70 addSubview:v71];
  id v53 = [v71 superview];
  if (v53)
  {
    uint64_t v54 = v53;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v55 = [v71 centerYAnchor];
    id v56 = [v54 centerYAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56];

    [v57 setConstant:0.0];
    id v58 = v57;
    [v58 setActive:1];
  }
  if (qword_1007F73A8 != -1) {
    swift_once();
  }
  double v59 = *(double *)&qword_10083D9B8;
  [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v60 = [v71 trailingAnchor];
  id v61 = [v7 leadingAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61];

  [v62 setConstant:-v59];
  [v62 setActive:1];

  id v63 = [v71 superview];
  if (v63)
  {
    uint64_t v64 = v63;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v65 = [v71 leadingAnchor];
    id v66 = [v64 leadingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    [v67 setConstant:0.0];
    id v68 = v67;
    [v68 setActive:1];

    uint64_t v69 = v64;
  }
  else
  {
    uint64_t v69 = v71;
  }
}

id sub_10036DA10(char a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18TimelineFilterView_showingLabel);
  if (a1)
  {
    id v4 = [self mainBundle];
    v17._object = (void *)0x800000010069A1E0;
    v5._uint64_t countAndFlagsBits = 0x64657265746C6946;
    v5._object = (void *)0xEC0000003A796220;
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v17._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v17);

    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setText:v7];

    id v8 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel);
    FilterOption.description.getter(a1);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setText:v9];

    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton) setSelected:1];
    [v2 setShowsLargeContentViewer:1];
    id v10 = v8;
    uint64_t v11 = 1;
  }
  else
  {
    NSString v12 = String._bridgeToObjectiveC()();
    [v2 setText:v12];

    id v13 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel);
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setText:v14];

    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton) setSelected:0];
    [v2 setShowsLargeContentViewer:0];
    id v10 = v13;
    uint64_t v11 = 0;
  }

  return [v10 setShowsLargeContentViewer:v11];
}

id sub_10036DC2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimelineFilterView();
  return [super dealloc];
}

uint64_t type metadata accessor for TimelineFilterView()
{
  return self;
}

id sub_10036DD00(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Journal18TimelineFilterView_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = *((void *)v3 + 1);
    uint64_t ObjectType = swift_getObjectType();
    v9[3] = type metadata accessor for TimelineFilterView();
    v9[0] = v1;
    Swift::String v6 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v4 + 8);
    NSString v7 = v1;
    v6(a1, v9, ObjectType, v4);
    swift_unknownObjectRelease();
    sub_10001B418((uint64_t)v9);
  }
  return sub_10036DA10(a1);
}

uint64_t sub_10036DDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  id v26 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  sub_10002C4EC(a7, (uint64_t)a9 + v26[7], (uint64_t *)&unk_1007FC470);
  sub_10002C4EC(a8, (uint64_t)a9 + v26[8], (uint64_t *)&unk_1007FC470);
  uint64_t result = sub_10002C4EC(a10, (uint64_t)a9 + v26[9], (uint64_t *)&unk_1007FC470);
  id v28 = (char *)a9 + v26[10];
  *(void *)id v28 = a11;
  v28[8] = a12 & 1;
  id v29 = (char *)a9 + v26[11];
  *(void *)id v29 = a13;
  v29[8] = a14 & 1;
  id v30 = (void *)((char *)a9 + v26[12]);
  *id v30 = a15;
  v30[1] = a16;
  id v31 = (void *)((char *)a9 + v26[13]);
  *id v31 = a17;
  v31[1] = a18;
  *((unsigned char *)a9 + v26[14]) = a19;
  id v32 = (char *)a9 + v26[15];
  *(void *)id v32 = a20;
  v32[8] = a21 & 1;
  uint64_t v33 = (char *)a9 + v26[16];
  *(void *)uint64_t v33 = a22;
  v33[8] = a23 & 1;
  return result;
}

unint64_t sub_10036DF58(char a1)
{
  unint64_t result = 0x6D614E6563616C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 2037672291;
      break;
    case 2:
      unint64_t result = 0x6C50664F65707974;
      break;
    case 3:
      unint64_t result = 0x6174537469736976;
      break;
    case 4:
      unint64_t result = 0x646E457469736976;
      break;
    case 5:
      unint64_t result = 0x4464657461657263;
      break;
    case 6:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 8:
      unint64_t result = 0x746144656C797473;
      break;
    case 9:
      unint64_t result = 0x446D65744970616DLL;
      break;
    case 10:
      unint64_t result = 0x6B726F577369;
      break;
    case 11:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10036E118(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_100809C40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100370A88();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v11) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v9 = _s10VisitAssetC9VisitDataVMa(0);
    LOBYTE(v11) = 3;
    type metadata accessor for Date();
    sub_100370A40(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11) = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 48));
    char v12 = 8;
    sub_100090E8C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 52));
    char v12 = 9;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11) = 10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10036E51C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - v8;
  __chkstk_darwin(v10);
  char v12 = (char *)&v39 - v11;
  uint64_t v43 = sub_100010218(&qword_100809C30);
  uint64_t v13 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  id v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v46 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  __chkstk_darwin(v46);
  id v44 = a1;
  id v45 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100370A88();
  uint64_t v42 = v15;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v44);
  }
  uint64_t v17 = (uint64_t)v12;
  uint64_t v40 = v13;
  LOBYTE(v47) = 0;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v19 = v46;
  id v20 = v45;
  uint64_t *v45 = v18;
  v20[1] = v21;
  LOBYTE(v47) = 1;
  void v20[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v20[3] = v22;
  LOBYTE(v47) = 2;
  v20[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v20[5] = v23;
  type metadata accessor for Date();
  LOBYTE(v47) = 3;
  uint64_t v39 = sub_100370A40(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC(v17, (uint64_t)v20 + v19[7], (uint64_t *)&unk_1007FC470);
  LOBYTE(v47) = 4;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC((uint64_t)v9, (uint64_t)v20 + v19[8], (uint64_t *)&unk_1007FC470);
  LOBYTE(v47) = 5;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC((uint64_t)v6, (uint64_t)v20 + v19[9], (uint64_t *)&unk_1007FC470);
  LOBYTE(v47) = 6;
  uint64_t v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v25 = (char *)v20 + v19[10];
  *(void *)id v25 = v24;
  v25[8] = v26 & 1;
  LOBYTE(v47) = 7;
  uint64_t v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v28 = (char *)v20 + v19[11];
  *(void *)id v28 = v27;
  v28[8] = v29 & 1;
  char v48 = 8;
  sub_100090D2C();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)((char *)v20 + v19[12]) = v47;
  char v48 = 9;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)((char *)v45 + v46[13]) = v47;
  LOBYTE(v47) = 10;
  *((unsigned char *)v45 + v46[14]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  LOBYTE(v47) = 11;
  uint64_t v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v31 = (char *)v45 + v46[15];
  *(void *)id v31 = v30;
  v31[8] = v32 & 1;
  LOBYTE(v47) = 12;
  uint64_t v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v35 = v34;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
  uint64_t v36 = (uint64_t)v45;
  id v37 = (char *)v45 + v46[16];
  *(void *)id v37 = v33;
  v37[8] = v35 & 1;
  sub_10003F820(v36, v41);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v44);
  return sub_10003F884(v36);
}

unint64_t sub_10036ECF8()
{
  return sub_10036DF58(*v0);
}

uint64_t sub_10036ED00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100372774(a1, a2);
  *a3 = result;
  return result;
}

void sub_10036ED28(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_10036ED34(uint64_t a1)
{
  unint64_t v2 = sub_100370A88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10036ED70(uint64_t a1)
{
  unint64_t v2 = sub_100370A88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10036EDAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10036E51C(a1, a2);
}

uint64_t sub_10036EDC4(void *a1)
{
  return sub_10036E118(a1);
}

uint64_t sub_10036EDE0()
{
  uint64_t v1 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_5;
  }
  swift_retain();
  sub_10003C3B8((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10001457C((uint64_t)v3, &qword_1007F9F50);
    return 0;
  }
  sub_10009C54C((uint64_t)v3, (uint64_t)v8);
  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = *(void *)v8;
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  uint64_t v10 = *((void *)v8 + 3);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v8 + 8);
  *(void *)(inited + 56) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10023DA38(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  sub_10003F884((uint64_t)v8);
  return v11;
}

uint64_t sub_10036F008()
{
  return swift_release();
}

id sub_10036F018()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VisitAssetCMa(0);
  [super dealloc];
}

uint64_t sub_10036F060()
{
  return _s10VisitAssetCMa(0);
}

uint64_t _s10VisitAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_100809B28);
}

uint64_t sub_10036F088()
{
  return swift_updateClassMetadata2();
}

void *sub_10036F0CC(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *((void *)a2 + 5);
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = &a2[v10];
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)v4 + v17;
    id v19 = &a2[v17];
    if (v14(&a2[v17], 1, v12))
    {
      uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = &a2[v21];
    if (v14(&a2[v21], 1, v12))
    {
      uint64_t v24 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v22, v23, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    }
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v4 + v25;
    id v28 = &a2[v25];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    char v29 = (char *)v4 + v26;
    uint64_t v30 = &a2[v26];
    *(void *)char v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[12];
    char v32 = (char *)v4 + v31;
    uint64_t v33 = &a2[v31];
    unint64_t v34 = *((void *)v33 + 1);
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)char v32 = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v35 = *(void *)v33;
      sub_100040D64(*(void *)v33, *((void *)v33 + 1));
      *(void *)char v32 = v35;
      *((void *)v32 + 1) = v34;
    }
    uint64_t v36 = a3[13];
    id v37 = (char *)v4 + v36;
    id v38 = &a2[v36];
    unint64_t v39 = *((void *)v38 + 1);
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)id v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = *(void *)v38;
      sub_100040D64(*(void *)v38, *((void *)v38 + 1));
      *(void *)id v37 = v40;
      *((void *)v37 + 1) = v39;
    }
    uint64_t v41 = a3[15];
    *((unsigned char *)v4 + a3[14]) = a2[a3[14]];
    uint64_t v42 = (char *)v4 + v41;
    uint64_t v43 = &a2[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = a3[16];
    id v45 = (char *)v4 + v44;
    id v46 = &a2[v44];
    *(void *)id v45 = *(void *)v46;
    v45[8] = v46[8];
  }
  return v4;
}

uint64_t sub_10036F4AC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[8];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[12]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    uint64_t result = sub_100040DD0(*v11, v12);
  }
  uint64_t v13 = (uint64_t *)(a1 + a2[13]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15)
  {
    uint64_t v15 = *v13;
    return sub_100040DD0(v15, v14);
  }
  return result;
}

void *sub_10036F660(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = &a2[v8];
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  id v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[12];
  char v29 = (char *)a1 + v28;
  uint64_t v30 = &a2[v28];
  unint64_t v31 = *((void *)v30 + 1);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)char v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_100040D64(*(void *)v30, *((void *)v30 + 1));
    *(void *)char v29 = v32;
    *((void *)v29 + 1) = v31;
  }
  uint64_t v33 = a3[13];
  unint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = &a2[v33];
  unint64_t v36 = *((void *)v35 + 1);
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    sub_100040D64(*(void *)v35, *((void *)v35 + 1));
    *(void *)unint64_t v34 = v37;
    *((void *)v34 + 1) = v36;
  }
  uint64_t v38 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  *(void *)unint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[16];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = &a2[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  return a1;
}

char *sub_10036F9E8(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[10];
  uint64_t v28 = &a1[v27];
  char v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[12];
  unint64_t v36 = (uint64_t *)&a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  unint64_t v38 = *(void *)((char *)a2 + v35 + 8);
  if (*(void *)&a1[v35 + 8] >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v39 = *v37;
      sub_100040D64(v39, v38);
      uint64_t *v36 = v39;
      v36[1] = v38;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v38 >> 60 == 15)
  {
    sub_1001F2560((uint64_t)v36);
LABEL_24:
    *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    goto LABEL_26;
  }
  uint64_t v40 = *v37;
  sub_100040D64(v40, v38);
  uint64_t v41 = *v36;
  unint64_t v42 = v36[1];
  uint64_t *v36 = v40;
  v36[1] = v38;
  sub_100040DD0(v41, v42);
LABEL_26:
  uint64_t v43 = a3[13];
  uint64_t v44 = (uint64_t *)&a1[v43];
  id v45 = (void *)((char *)a2 + v43);
  unint64_t v46 = *(void *)((char *)a2 + v43 + 8);
  if (*(void *)&a1[v43 + 8] >> 60 != 15)
  {
    if (v46 >> 60 != 15)
    {
      uint64_t v48 = *v45;
      sub_100040D64(v48, v46);
      uint64_t v49 = *v44;
      unint64_t v50 = v44[1];
      *uint64_t v44 = v48;
      v44[1] = v46;
      sub_100040DD0(v49, v50);
      goto LABEL_33;
    }
    sub_1001F2560((uint64_t)v44);
    goto LABEL_31;
  }
  if (v46 >> 60 == 15)
  {
LABEL_31:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_33;
  }
  uint64_t v47 = *v45;
  sub_100040D64(v47, v46);
  *uint64_t v44 = v47;
  v44[1] = v46;
LABEL_33:
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v51 = a3[15];
  id v52 = &a1[v51];
  id v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)id v52 = v54;
  uint64_t v55 = a3[16];
  id v56 = &a1[v55];
  id v57 = (char *)a2 + v55;
  uint64_t v58 = *(void *)v57;
  v56[8] = v57[8];
  *(void *)id v56 = v58;
  return a1;
}

_OWORD *sub_10036FF3C(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  a1[2] = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  int v24 = (char *)a1 + v22;
  int v25 = &a2[v22];
  *(void *)int v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)&a2[v28];
  uint64_t v29 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = a3[16];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  v33[8] = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  return a1;
}

char *sub_100370230(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  int v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[9];
  int v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v14(&a1[v24], 1, v12);
  int v28 = v14(v26, 1, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
LABEL_18:
    uint64_t v29 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v25, v26, v12);
LABEL_19:
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = (char *)a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = &a1[v31];
  uint64_t v35 = (char *)a2 + v31;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = a3[12];
  uint64_t v37 = (uint64_t)&a1[v36];
  unint64_t v38 = (char *)a2 + v36;
  unint64_t v39 = *(void *)&a1[v36 + 8];
  if (v39 >> 60 == 15)
  {
LABEL_22:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    goto LABEL_24;
  }
  unint64_t v40 = *((void *)v38 + 1);
  if (v40 >> 60 == 15)
  {
    sub_1001F2560(v37);
    goto LABEL_22;
  }
  uint64_t v41 = *(void *)v37;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v40;
  sub_100040DD0(v41, v39);
LABEL_24:
  uint64_t v42 = a3[13];
  uint64_t v43 = (uint64_t *)&a1[v42];
  uint64_t v44 = (void *)((char *)a2 + v42);
  unint64_t v45 = *(void *)&a1[v42 + 8];
  if (v45 >> 60 != 15)
  {
    unint64_t v46 = v44[1];
    if (v46 >> 60 != 15)
    {
      uint64_t v47 = *v43;
      *uint64_t v43 = *v44;
      v43[1] = v46;
      sub_100040DD0(v47, v45);
      goto LABEL_29;
    }
    sub_1001F2560((uint64_t)v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
LABEL_29:
  uint64_t v48 = a3[15];
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v49 = &a1[v48];
  unint64_t v50 = (char *)a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = a3[16];
  id v52 = &a1[v51];
  id v53 = (char *)a2 + v51;
  *(void *)id v52 = *(void *)v53;
  v52[8] = v53[8];
  return a1;
}

uint64_t sub_1003706EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100370700);
}

uint64_t sub_100370700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1003707C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003707D4);
}

uint64_t sub_1003707D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VisitAssetC9VisitDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100809B90);
}

void sub_1003708A0()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100370964()
{
  return swift_retain();
}

uint64_t sub_100370974(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10037098C()
{
  return sub_10036EDE0();
}

uint64_t sub_1003709B0()
{
  return sub_100370A40(&qword_1007F9F18, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_1003709F8()
{
  return sub_100370A40(&qword_1007F9F30, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_100370A40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100370A88()
{
  unint64_t result = qword_100809C38;
  if (!qword_100809C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809C38);
  }
  return result;
}

uint64_t sub_100370ADC@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100040D64(a2, a3);
      uint64_t v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x100370D40);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100040DD0(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_100370D50(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_100370ADC((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_100370E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_100370ADC(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_100370EE0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x100371148);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_100040D64(a3, a4);
                  sub_100040D64(a1, a2);
                  char v17 = sub_100370E28((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100040DD0(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_100040D64(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_100370E28(v21, v22, v20, a3, a4);
                  sub_100040DD0(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_100040D64(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_100040D64(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_100370D50(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100040DD0(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100371178(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v171);
  uint64_t v8 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v169 = (uint64_t)&v151 - v10;
  __chkstk_darwin(v11);
  uint64_t v170 = (uint64_t)&v151 - v12;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v13 - 8);
  uint64_t v167 = (uint64_t)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v17 = (char *)&v151 - v16;
  __chkstk_darwin(v18);
  uint64_t v168 = (uint64_t)&v151 - v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v151 - v21;
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  __int16 v26 = (char *)&v151 - v25;
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  uint64_t v35 = (char *)&v151 - v34;
  uint64_t v36 = v31[1];
  uint64_t v37 = a2[1];
  if (!v36)
  {
    if (v37) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v37) {
    return 0;
  }
  if (*v31 == *a2 && v36 == v37) {
    goto LABEL_8;
  }
  id v165 = v17;
  uint64_t v166 = v30;
  Swift::String v163 = v26;
  int v164 = v22;
  unint64_t v38 = v8;
  uint64_t v39 = v4;
  uint64_t v40 = v3;
  uint64_t v41 = v31;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v17 = v165;
  uint64_t v30 = v166;
  uint64_t v33 = v43;
  uint64_t v32 = v42;
  uint64_t v31 = v41;
  uint64_t v3 = v40;
  uint64_t v4 = v39;
  uint64_t v8 = v38;
  __int16 v26 = v163;
  uint64_t v22 = v164;
  char v45 = v44;
  uint64_t result = 0;
  if (v45)
  {
LABEL_8:
    uint64_t v47 = v31[3];
    uint64_t v48 = a2[3];
    if (v47)
    {
      if (!v48) {
        return 0;
      }
      if (v31[2] != a2[2] || v47 != v48)
      {
        id v165 = v17;
        uint64_t v166 = v30;
        Swift::String v163 = v26;
        int v164 = v22;
        uint64_t v49 = v8;
        uint64_t v50 = v4;
        uint64_t v51 = v3;
        id v52 = v31;
        uint64_t v53 = v32;
        uint64_t v54 = v33;
        char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v17 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v54;
        uint64_t v32 = v53;
        uint64_t v31 = v52;
        uint64_t v3 = v51;
        uint64_t v4 = v50;
        uint64_t v8 = v49;
        __int16 v26 = v163;
        uint64_t v22 = v164;
        char v56 = v55;
        uint64_t result = 0;
        if ((v56 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v48)
    {
      return 0;
    }
    uint64_t v57 = v31[5];
    uint64_t v58 = a2[5];
    if (v57)
    {
      if (!v58) {
        return 0;
      }
      if (v31[4] != a2[4] || v57 != v58)
      {
        id v165 = v17;
        uint64_t v166 = v30;
        Swift::String v163 = v26;
        int v164 = v22;
        double v59 = v8;
        uint64_t v60 = v4;
        uint64_t v61 = v3;
        id v62 = v31;
        uint64_t v63 = v32;
        uint64_t v64 = v33;
        char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v17 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v64;
        uint64_t v32 = v63;
        uint64_t v31 = v62;
        uint64_t v3 = v61;
        uint64_t v4 = v60;
        uint64_t v8 = v59;
        __int16 v26 = v163;
        uint64_t v22 = v164;
        char v66 = v65;
        uint64_t result = 0;
        if ((v66 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v58)
    {
      return 0;
    }
    id v154 = v6;
    uint64_t v155 = v33;
    uint64_t v158 = v32;
    id v153 = v8;
    uint64_t v67 = v4;
    uint64_t v68 = v3;
    uint64_t v69 = v31;
    uint64_t v70 = v30;
    uint64_t v71 = _s10VisitAssetC9VisitDataVMa(0);
    uint64_t v72 = *(int *)(v71 + 28);
    id v159 = v69;
    uint64_t v73 = (uint64_t)v69 + v72;
    uint64_t v74 = v68;
    sub_100045944(v73, (uint64_t)v35);
    id v157 = (int *)v71;
    uint64_t v75 = *(int *)(v71 + 28);
    id v160 = a2;
    sub_100045944((uint64_t)a2 + v75, v70);
    uint64_t v76 = v170;
    uint64_t v77 = v170 + *(int *)(v171 + 48);
    Swift::String v163 = v35;
    sub_100045944((uint64_t)v35, v170);
    int v164 = (char *)v77;
    sub_100045944(v70, v77);
    uint64_t v161 = v67;
    uint64_t v162 = v74;
    uint64_t v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    unsigned int v79 = v78(v76, 1, v74);
    uint64_t v156 = v67 + 48;
    id v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v78;
    if (v79 == 1)
    {
      id v165 = v17;
      sub_10001457C(v70, (uint64_t *)&unk_1007FC470);
      sub_10001457C((uint64_t)v163, (uint64_t *)&unk_1007FC470);
      if (v78((uint64_t)v164, 1, v162) == 1)
      {
        sub_10001457C(v76, (uint64_t *)&unk_1007FC470);
        char v17 = v165;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v166 = v70;
      uint64_t v80 = v155;
      sub_100045944(v76, v155);
      uint64_t v81 = v76;
      if (v78((uint64_t)v164, 1, v162) != 1)
      {
        uint64_t v84 = v161;
        uint64_t v83 = v162;
        uint64_t v85 = v154;
        (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v154, v164, v162);
        sub_100370A40((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v86 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v87 = *(void (**)(char *, uint64_t))(v84 + 8);
        v87(v85, v83);
        sub_10001457C(v166, (uint64_t *)&unk_1007FC470);
        sub_10001457C((uint64_t)v163, (uint64_t *)&unk_1007FC470);
        v87((char *)v80, v83);
        sub_10001457C(v81, (uint64_t *)&unk_1007FC470);
        if ((v86 & 1) == 0) {
          return 0;
        }
LABEL_29:
        int v164 = v22;
        uint64_t v88 = v157;
        sub_100045944((uint64_t)v159 + v157[8], (uint64_t)v26);
        uint64_t v89 = v158;
        sub_100045944((uint64_t)v160 + v88[8], v158);
        uint64_t v90 = v169;
        uint64_t v91 = v169 + *(int *)(v171 + 48);
        sub_100045944((uint64_t)v26, v169);
        sub_100045944(v89, v91);
        id v92 = v152;
        if (v152(v90, 1, v162) == 1)
        {
          sub_10001457C(v89, (uint64_t *)&unk_1007FC470);
          sub_10001457C((uint64_t)v26, (uint64_t *)&unk_1007FC470);
          int v93 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v93 == 1)
          {
            sub_10001457C(v90, (uint64_t *)&unk_1007FC470);
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v95 = (uint64_t)v164;
          sub_100045944(v90, (uint64_t)v164);
          int v96 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v96 != 1)
          {
            uint64_t v97 = v161;
            uint64_t v98 = v162;
            uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 32);
            Swift::String v163 = v26;
            uint64_t v100 = v154;
            v99(v154, v91, v162);
            sub_100370A40((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v101 = dispatch thunk of static Equatable.== infix(_:_:)();
            id v102 = v17;
            NSString v103 = *(void (**)(char *, uint64_t))(v97 + 8);
            v103(v100, v98);
            sub_10001457C(v158, (uint64_t *)&unk_1007FC470);
            sub_10001457C((uint64_t)v163, (uint64_t *)&unk_1007FC470);
            v103((char *)v95, v98);
            char v17 = v102;
            sub_10001457C(v169, (uint64_t *)&unk_1007FC470);
            if ((v101 & 1) == 0) {
              return 0;
            }
LABEL_36:
            char v104 = v157;
            uint64_t v105 = v168;
            sub_100045944((uint64_t)v159 + v157[9], v168);
            sub_100045944((uint64_t)v160 + v104[9], (uint64_t)v17);
            uint64_t v106 = v94 + *(int *)(v171 + 48);
            sub_100045944(v105, v94);
            sub_100045944((uint64_t)v17, v106);
            if (v92(v94, 1, v162) == 1)
            {
              sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
              sub_10001457C(v168, (uint64_t *)&unk_1007FC470);
              if (v92(v106, 1, v162) == 1)
              {
                sub_10001457C(v94, (uint64_t *)&unk_1007FC470);
LABEL_43:
                uint64_t v114 = v104[10];
                id v116 = v159;
                id v115 = v160;
                id v117 = (double *)((char *)v159 + v114);
                char v118 = *((unsigned char *)v159 + v114 + 8);
                uint64_t v119 = (double *)((char *)v160 + v114);
                int v120 = *((unsigned __int8 *)v160 + v114 + 8);
                if (v118)
                {
                  if (!v120) {
                    return 0;
                  }
                }
                else
                {
                  if (*v117 != *v119) {
                    LOBYTE(v120) = 1;
                  }
                  if (v120) {
                    return 0;
                  }
                }
                uint64_t v121 = v104[11];
                id v122 = (double *)((char *)v159 + v121);
                char v123 = *((unsigned char *)v159 + v121 + 8);
                id v124 = (double *)((char *)v160 + v121);
                int v125 = *((unsigned __int8 *)v160 + v121 + 8);
                if (v123)
                {
                  if (!v125) {
                    return 0;
                  }
                }
                else
                {
                  if (*v122 != *v124) {
                    LOBYTE(v125) = 1;
                  }
                  if (v125) {
                    return 0;
                  }
                }
                id v126 = v104;
                uint64_t v127 = v104[12];
                uint64_t v128 = *(void *)((char *)v159 + v127);
                unint64_t v129 = *(void *)((char *)v159 + v127 + 8);
                id v130 = (void *)((char *)v160 + v127);
                uint64_t v131 = *v130;
                unint64_t v132 = v130[1];
                if (v129 >> 60 == 15)
                {
                  if (v132 >> 60 != 15) {
                    goto LABEL_64;
                  }
                  goto LABEL_60;
                }
                if (v132 >> 60 == 15) {
                  goto LABEL_64;
                }
                sub_100040F10(v128, v129);
                sub_100040F10(v131, v132);
                char v133 = sub_100370EE0(v128, v129, v131, v132);
                sub_100040DBC(v131, v132);
                sub_100040DBC(v128, v129);
                id v116 = v159;
                id v115 = v160;
                if (v133)
                {
LABEL_60:
                  uint64_t v134 = v126[13];
                  uint64_t v128 = *(void *)((char *)v116 + v134);
                  unint64_t v129 = *(void *)((char *)v116 + v134 + 8);
                  id v135 = (void *)((char *)v115 + v134);
                  uint64_t v131 = *v135;
                  unint64_t v132 = v135[1];
                  if (v129 >> 60 == 15)
                  {
                    if (v132 >> 60 == 15) {
                      goto LABEL_68;
                    }
                  }
                  else if (v132 >> 60 != 15)
                  {
                    sub_100040F10(v128, v129);
                    sub_100040F10(v131, v132);
                    char v136 = sub_100370EE0(v128, v129, v131, v132);
                    sub_100040DBC(v131, v132);
                    sub_100040DBC(v128, v129);
                    id v116 = v159;
                    id v115 = v160;
                    if ((v136 & 1) == 0) {
                      return 0;
                    }
LABEL_68:
                    uint64_t v137 = v126[14];
                    int v138 = *((unsigned __int8 *)v116 + v137);
                    int v139 = *((unsigned __int8 *)v115 + v137);
                    if (v138 == 2)
                    {
                      if (v139 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      uint64_t result = 0;
                      BOOL v140 = (v138 & 1) == 0;
                      if (v139 == 2 || ((v140 ^ v139) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v141 = v126[15];
                    id v142 = (double *)((char *)v116 + v141);
                    char v143 = *((unsigned char *)v116 + v141 + 8);
                    id v144 = (double *)((char *)v115 + v141);
                    int v145 = *((unsigned __int8 *)v115 + v141 + 8);
                    if (v143)
                    {
                      if (!v145) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v142 != *v144) {
                        LOBYTE(v145) = 1;
                      }
                      if (v145) {
                        return 0;
                      }
                    }
                    uint64_t v146 = v157[16];
                    id v147 = (double *)((char *)v159 + v146);
                    char v148 = *((unsigned char *)v159 + v146 + 8);
                    id v149 = (double *)((char *)v160 + v146);
                    char v150 = *((unsigned char *)v160 + v146 + 8);
                    if (v148)
                    {
                      if ((v150 & 1) == 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v147 != *v149) {
                        char v150 = 1;
                      }
                      if (v150) {
                        return 0;
                      }
                    }
                    return 1;
                  }
LABEL_64:
                  sub_100040F10(v128, v129);
                  sub_100040F10(v131, v132);
                  sub_100040DBC(v128, v129);
                  sub_100040DBC(v131, v132);
                }
                return 0;
              }
            }
            else
            {
              sub_100045944(v94, v167);
              if (v92(v106, 1, v162) != 1)
              {
                uint64_t v107 = v161;
                uint64_t v108 = v162;
                NSString v109 = v154;
                (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v154, v106, v162);
                sub_100370A40((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v110 = v94;
                uint64_t v111 = v167;
                char v112 = dispatch thunk of static Equatable.== infix(_:_:)();
                id v113 = *(void (**)(char *, uint64_t))(v107 + 8);
                v113(v109, v108);
                sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
                sub_10001457C(v168, (uint64_t *)&unk_1007FC470);
                v113((char *)v111, v108);
                sub_10001457C(v110, (uint64_t *)&unk_1007FC470);
                if ((v112 & 1) == 0) {
                  return 0;
                }
                goto LABEL_43;
              }
              sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
              sub_10001457C(v168, (uint64_t *)&unk_1007FC470);
              (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v167, v162);
            }
            sub_10001457C(v94, &qword_1007FB8B0);
            return 0;
          }
          sub_10001457C(v158, (uint64_t *)&unk_1007FC470);
          sub_10001457C((uint64_t)v26, (uint64_t *)&unk_1007FC470);
          (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v95, v162);
        }
        sub_10001457C(v90, &qword_1007FB8B0);
        return 0;
      }
      uint64_t v82 = v161;
      sub_10001457C(v166, (uint64_t *)&unk_1007FC470);
      sub_10001457C((uint64_t)v163, (uint64_t *)&unk_1007FC470);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v162);
    }
    sub_10001457C(v76, &qword_1007FB8B0);
    return 0;
  }
  return result;
}

char *sub_100371EFC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13, void *a14, void *a15, unsigned __int8 a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, unsigned __int8 a20)
{
  uint64_t v85 = a6;
  uint64_t v86 = a7;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  id v77 = a15;
  id v78 = a14;
  uint64_t v89 = a9;
  uint64_t v90 = a8;
  uint64_t v87 = sub_100010218(&qword_1007F9F40);
  __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v22 - 8);
  uint64_t v70 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  __int16 v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v68 - v28;
  uint64_t v30 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = type metadata accessor for UUID();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v68 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v68 - v38;
  UUID.init()();
  *(void *)((char *)objc_allocWithZone((Class)_s10VisitAssetCMa(0))
            + OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata) = 0;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v36, v39, v33);
  id v40 = sub_1001817C4((uint64_t)v36, 7, a1);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v33);
  unsigned int v79 = v29;
  sub_100045944(v90, (uint64_t)v29);
  uint64_t v80 = v26;
  uint64_t v41 = (uint64_t)v26;
  uint64_t v42 = (uint64_t)v70;
  sub_100045944(v89, v41);
  uint64_t v43 = (char *)v40;
  Date.init()();
  uint64_t v44 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 0, 1, v44);
  if (v77)
  {
    id v45 = v77;
    id v46 = v77;
    uint64_t v47 = sub_10008C5D0();
    unint64_t v75 = v48;
    uint64_t v76 = v47;
  }
  else
  {
    id v45 = 0;
    unint64_t v75 = 0xF000000000000000;
    uint64_t v76 = 0;
  }
  LODWORD(v77) = a20;
  uint64_t v74 = a19;
  int v73 = a18;
  uint64_t v72 = a17;
  int v71 = a16;
  int v69 = a13;
  uint64_t v68 = a12;
  if (v78)
  {
    id v49 = v78;
    uint64_t v50 = sub_10008C5D0();
    unint64_t v52 = v51;
  }
  else
  {
    uint64_t v50 = 0;
    unint64_t v52 = 0xF000000000000000;
  }

  sub_10001457C(v89, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v90, (uint64_t *)&unk_1007FC470);
  uint64_t v53 = v82;
  *uint64_t v32 = v81;
  v32[1] = v53;
  uint64_t v54 = v84;
  v32[2] = v83;
  v32[3] = v54;
  uint64_t v55 = v86;
  v32[4] = v85;
  v32[5] = v55;
  sub_10002C4EC((uint64_t)v79, (uint64_t)v32 + v30[7], (uint64_t *)&unk_1007FC470);
  sub_10002C4EC((uint64_t)v80, (uint64_t)v32 + v30[8], (uint64_t *)&unk_1007FC470);
  sub_10002C4EC(v42, (uint64_t)v32 + v30[9], (uint64_t *)&unk_1007FC470);
  char v56 = (char *)v32 + v30[10];
  *(void *)char v56 = a10;
  v56[8] = a11 & 1;
  uint64_t v57 = (char *)v32 + v30[11];
  *(void *)uint64_t v57 = v68;
  v57[8] = v69 & 1;
  uint64_t v58 = (void *)((char *)v32 + v30[12]);
  unint64_t v59 = v75;
  *uint64_t v58 = v76;
  v58[1] = v59;
  uint64_t v60 = (void *)((char *)v32 + v30[13]);
  *uint64_t v60 = v50;
  v60[1] = v52;
  *((unsigned char *)v32 + v30[14]) = v71;
  uint64_t v61 = (char *)v32 + v30[15];
  *(void *)uint64_t v61 = v72;
  v61[8] = v73 & 1;
  id v62 = (char *)v32 + v30[16];
  *(void *)id v62 = v74;
  v62[8] = v77 & 1;
  uint64_t v63 = v88;
  sub_10009C54C((uint64_t)v32, v88);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_100809C48);
  uint64_t v64 = swift_allocObject();
  uint64_t v65 = v64 + *(void *)(*(void *)v64 + 104);
  uint64_t v66 = sub_100010218(&qword_1007F9F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
  *(_OWORD *)(v64 + *(void *)(*(void *)v64 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v63, v64 + *(void *)(*(void *)v64 + 120), &qword_1007F9F40);
  *(void *)&v43[OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata] = v64;

  swift_release();
  return v43;
}

uint64_t _s10VisitAssetC9VisitDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10VisitAssetC9VisitDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100372634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VisitAssetC9VisitDataV10CodingKeysOMa()
{
  return &_s10VisitAssetC9VisitDataV10CodingKeysON;
}

unint64_t sub_100372670()
{
  unint64_t result = qword_100809C50;
  if (!qword_100809C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809C50);
  }
  return result;
}

unint64_t sub_1003726C8()
{
  unint64_t result = qword_100809C58;
  if (!qword_100809C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809C58);
  }
  return result;
}

unint64_t sub_100372720()
{
  unint64_t result = qword_100809C60;
  if (!qword_100809C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100809C60);
  }
  return result;
}

uint64_t sub_100372774(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C50664F65707974 && a2 == 0xEB00000000656361 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174537469736976 && a2 == 0xEE00656D69547472 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E457469736976 && a2 == 0xEC000000656D6954 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144656C797473 && a2 == 0xE900000000000061 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446D65744970616DLL && a2 == 0xEB00000000617461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B726F577369 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEF6C6576654C6563 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010069A240)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_100372D54@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003764A4(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100372E14()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100372EF4()
{
  uint64_t v1 = v0;
  if (qword_1007F6DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10083D360;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No current audio recording.", v15, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v4 = Strong;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 32))(v26, ObjectType, v5);
  uint64_t v7 = v27;
  if (v27)
  {
    uint64_t v8 = v28;
    sub_10002E0BC(v26, v27);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    uint64_t v11 = v10;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v26);
    uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
    if (!v12)
    {
      if (!v11) {
        return v4;
      }
      goto LABEL_23;
    }
  }
  else
  {
    sub_10001457C((uint64_t)v26, &qword_1007F9470);
    uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
    if (!v12) {
      return v4;
    }
    uint64_t v11 = 0;
    uint64_t v9 = 0;
  }
  id v16 = v12;
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v19 = v18;

  if (v11)
  {
    if (v19)
    {
      if (v9 == v17 && v11 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v4;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        return v4;
      }
      goto LABEL_24;
    }
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Currently recording manager is associated with a different asset.", v24, 2u);
      swift_slowDealloc();
    }
    swift_unknownObjectRelease();

    return 0;
  }
  if (v19) {
    goto LABEL_23;
  }
  return v4;
}

uint64_t sub_1003731D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate);

  return swift_deallocClassInstance();
}

uint64_t sub_1003732A0()
{
  return type metadata accessor for AudioAssetPersistenceStrategy();
}

uint64_t type metadata accessor for AudioAssetPersistenceStrategy()
{
  uint64_t result = qword_100809CA8;
  if (!qword_100809CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003732F4()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1003733B0(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_10080B430);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - v17;
  __chkstk_darwin(v19);
  char v21 = (char *)&v48 - v20;
  uint64_t v22 = *(Class *)((char *)&v2->isa + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
  if (v22)
  {
    id v49 = v6;
    os_log_t v53 = v2;
    id v52 = v22;
    sub_1003B2D58(v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v18, a1, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    uint64_t v23 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_10001B220((uint64_t)v21, (uint64_t)v12, (uint64_t *)&unk_100800A60);
    sub_10001B220((uint64_t)v18, v23, (uint64_t *)&unk_100800A60);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v24((uint64_t)v12, 1, v7) == 1)
    {
      sub_10001457C((uint64_t)v18, (uint64_t *)&unk_100800A60);
      sub_10001457C((uint64_t)v21, (uint64_t *)&unk_100800A60);
      int v25 = v24(v23, 1, v7);
      os_log_t v26 = v53;
      if (v25 == 1)
      {
        sub_10001457C((uint64_t)v12, (uint64_t *)&unk_100800A60);
        uint64_t v27 = v52;
        goto LABEL_14;
      }
    }
    else
    {
      sub_10001B220((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_100800A60);
      if (v24(v23, 1, v7) != 1)
      {
        uint64_t v31 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v50, v23, v7);
        sub_1003764A4(&qword_100802670, (void (*)(uint64_t))&type metadata accessor for URL);
        char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v8 + 8);
        v33(v31, v7);
        sub_10001457C((uint64_t)v18, (uint64_t *)&unk_100800A60);
        sub_10001457C((uint64_t)v21, (uint64_t *)&unk_100800A60);
        v33(v15, v7);
        sub_10001457C((uint64_t)v12, (uint64_t *)&unk_100800A60);
        uint64_t v27 = v52;
        os_log_t v26 = v53;
        if (v32)
        {
LABEL_14:
          sub_10010DE90(0, 1, 0, v51);
          uint64_t v34 = (char *)v26 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate;
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v35 = *((void *)v34 + 1);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(void *, uint64_t, uint64_t))(v35 + 24))(v27, ObjectType, v35);
            swift_unknownObjectRelease();
          }
          else
          {
            id v40 = Logger.logObject.getter();
            os_log_type_t v41 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v40, v41))
            {
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              uint64_t v55 = swift_slowAlloc();
              *(_DWORD *)uint64_t v42 = 136315138;
              uint64_t v54 = sub_10011EA98(0xD000000000000031, 0x800000010069A2C0, &v55);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s - pickerDelegate is nil, falling back to default update mechanism", v42, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            uint64_t v43 = type metadata accessor for TaskPriority();
            uint64_t v44 = (uint64_t)v49;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v49, 1, 1, v43);
            type metadata accessor for MainActor();
            id v45 = v27;
            swift_retain();
            uint64_t v46 = static MainActor.shared.getter();
            uint64_t v47 = (void *)swift_allocObject();
            v47[2] = v46;
            v47[3] = &protocol witness table for MainActor;
            v47[4] = v45;
            v47[5] = v26;
            sub_100328A60(v44, (uint64_t)&unk_100809DB8, (uint64_t)v47);

            swift_release();
          }
          return;
        }
        goto LABEL_16;
      }
      sub_10001457C((uint64_t)v18, (uint64_t *)&unk_100800A60);
      sub_10001457C((uint64_t)v21, (uint64_t *)&unk_100800A60);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    }
    sub_10001457C((uint64_t)v12, (uint64_t *)&unk_10080B430);
    uint64_t v27 = v52;
LABEL_16:
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v54 = sub_10011EA98(0xD000000000000031, 0x800000010069A2C0, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s called for a url that's not the current attachment", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return;
  }
  os_log_t v53 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v53, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v53, v28, "Finished transcribing an attachment but there's no audio asset", v29, 2u);
    swift_slowDealloc();
  }
  os_log_t v30 = v53;
}

uint64_t sub_100373BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v5[5] = v6;
  void v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v5[8] = type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  return _swift_task_switch(sub_100373CC8, 0, 0);
}

uint64_t sub_100373CC8()
{
  unint64_t v1 = (void *)v0[3];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100373E3C;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[11] = v9;
    void *v9 = v0;
    v9[1] = sub_100373FE4;
    return v10();
  }
}

uint64_t sub_100373E3C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100373F38, 0, 0);
}

uint64_t sub_100373F38()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100373FE4;
  return v3();
}

uint64_t sub_100373FE4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 96) = v3;
  *(void *)(v1 + 104) = v2;
  return _swift_task_switch(sub_100374128, v3, v2);
}

uint64_t sub_100374128()
{
  uint64_t v1 = (char *)v0[3];
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  v0[14] = v2;
  if (v2)
  {
    uint64_t v4 = v0[6];
    uint64_t v3 = v0[7];
    uint64_t v5 = v0[5];
    uint64_t v6 = swift_allocObject();
    v0[15] = v6;
    *(void *)(v6 + 16) = v1;
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
    uint64_t v7 = v1;
    v2;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[16] = v8;
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC460);
    *uint64_t v8 = v0;
    v8[1] = sub_1003742D0;
    uint64_t v10 = v0[7];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 18, v10, sub_1003764EC, v6, v9);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1003742D0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 48);
  uint64_t v6 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();

  uint64_t v7 = *(void *)(v2 + 104);
  uint64_t v8 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v9 = sub_10037450C;
  }
  else {
    uint64_t v9 = sub_1003744A4;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_1003744A4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037450C()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed saving transcript to asset: %@", v3, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

id sub_1003746DC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context);
  if (result)
  {
    id v7 = 0;
    unsigned __int8 v4 = [result save:&v7];
    id v5 = v7;
    if (v4)
    {
      *a2 = 0;
      return v5;
    }
    else
    {
      id v6 = v7;
      _convertNSErrorToError(_:)();

      return (id)swift_willThrow();
    }
  }
  else
  {
    *a2 = 1;
  }
  return result;
}

uint64_t sub_1003747A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v4[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[15] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[16] = v8;
  v4[17] = v7;
  return _swift_task_switch(sub_10037492C, v8, v7);
}

uint64_t sub_10037492C()
{
  os_log_t v26 = v0;
  uint64_t v1 = v0[7] + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[18] = Strong;
  if (Strong)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v0[19] = v7;
    v0[20] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v7(v4, 1, 1, v5);
    uint64_t v8 = sub_10010F95C(4, v4, 0, 1, (uint64_t)_swiftEmptyArrayStorage, 0);
    v0[21] = v8;
    v8[OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden] = 1;
    uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
    if (v9)
    {
      *(void *)(swift_task_alloc() + 16) = v8;
      id v10 = v9;
      sub_100010218((uint64_t *)&unk_1007FC460);
      NSManagedObjectContext.performAndWait<A>(_:)();

      swift_task_dealloc();
    }
    uint64_t v12 = v0[6];
    uint64_t v11 = v0[7];
    uint64_t v13 = v0[5];
    uint64_t v14 = *(void **)(v11 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
    *(void *)(v11 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset) = v8;
    uint64_t v15 = v8;

    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = swift_getObjectType();
    v0[3] = v13;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[22] = v18;
    uint64_t v19 = *(void *)(v12 + 8);
    *uint64_t v18 = v0;
    v18[1] = sub_100374CD4;
    return sub_10019CA98((uint64_t)(v0 + 3), (uint64_t)v15, ObjectType, v17, v3, v19);
  }
  else
  {
    swift_release();
    char v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      v0[2] = sub_10011EA98(0xD000000000000025, 0x800000010069A290, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s - pickerDelegate is nil", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[4], 1, 1, v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
}

uint64_t sub_100374CD4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_100374DF4, v3, v2);
}

uint64_t sub_100374DF4()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  UUID.init()();
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  v0[23] = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_100809DA8
                                                                                           + dword_100809DA8);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[24] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100374F04;
  uint64_t v8 = v0[13];
  return v10(v8, 0, v4, v6, 1, 6709603, 0xE300000000000000);
}

uint64_t sub_100374F04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v5 = sub_10037511C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v5 = sub_100375020;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100375020()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 32);

  swift_release();
  swift_unknownObjectRelease();
  *(unsigned char *)(v4 + 16) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v1, v3);
  (*(void (**)(void, void, uint64_t, void))(v0 + 152))(*(void *)(v0 + 32), 0, 1, *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10037511C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003751D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 144) = a7;
  *(void *)(v8 + 152) = v7;
  *(void *)(v8 + 128) = a4;
  *(void *)(v8 + 136) = a6;
  *(unsigned char *)(v8 + 280) = a5;
  *(void *)(v8 + 112) = a2;
  *(void *)(v8 + 120) = a3;
  *(void *)(v8 + 104) = a1;
  uint64_t v9 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v8 + 160) = v9;
  *(void *)(v8 + 168) = *(void *)(v9 - 8);
  *(void *)(v8 + 176) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  *(void *)(v8 + 184) = v10;
  *(void *)(v8 + 192) = *(void *)(v10 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  *(void *)(v8 + 208) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  *(void *)(v8 + 216) = v11;
  *(void *)(v8 + 224) = *(void *)(v11 - 8);
  *(void *)(v8 + 232) = swift_task_alloc();
  return _swift_task_switch(sub_1003753B8, 0, 0);
}

uint64_t sub_1003753B8()
{
  uint64_t v57 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath + 8)
    || (uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context), (*(void *)(v0 + 240) = v2) == 0))
  {
    sub_1000352C4();
    swift_allocError();
    unsigned char *v22 = 1;
    swift_willThrow();
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
    return v50();
  }
  uint64_t v51 = (id *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v7 = *(void *)(v0 + 192);
  Swift::String v53 = *(Swift::String *)(v0 + 136);
  uint64_t v54 = *(void *)(v0 + 184);
  swift_bridgeObjectRetain();
  id v52 = v2;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  id v8 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithString:v9];

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 stringByAppendingPathComponent:v11];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(v53);
  v56[0] = v13;
  v56[1] = v15;
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v15;
  *(void *)(v0 + 248) = v15;
  type metadata accessor for Journaling();
  sub_1005E6B0C(v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v54) == 1)
  {
    sub_10001457C(*(void *)(v0 + 208), (uint64_t *)&unk_100800A60);
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100026A54(v18, (uint64_t)qword_100812D90);
    swift_bridgeObjectRetain();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)char v21 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 88) = sub_10011EA98(v13, v15, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Error in addAttachment. Failed to create targetURL. relativePath: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1000352C4();
    swift_allocError();
    unsigned char *v46 = 2;
    swift_willThrow();

    goto LABEL_18;
  }
  uint64_t v55 = v13;
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v25 = *(void *)(v0 + 184);
  (*(void (**)(void, void, uint64_t))(v24 + 32))(*(void *)(v0 + 104), *(void *)(v0 + 208), v25);
  id v26 = [self defaultManager];
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v27);
  uint64_t v29 = v28;
  os_log_t v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v30(v23, v25);
  sub_100010218(&qword_10080F9C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSFileProtectionKey;
  uint64_t v32 = qword_1007F6EF8;
  uint64_t v33 = NSFileProtectionKey;
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_10083D470;
  type metadata accessor for URLFileProtection(0);
  *(void *)(inited + 64) = v35;
  *(void *)(inited + 40) = v34;
  id v36 = (id)v34;
  sub_10039687C(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1003764A4(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *uint64_t v51 = 0;
  LOBYTE(v34) = [v26 createDirectoryAtURL:v29 withIntermediateDirectories:1 attributes:isa error:v51];

  id v38 = *v51;
  if ((v34 & 1) == 0)
  {
    uint64_t v47 = v38;
    uint64_t v48 = *(void *)(v0 + 184);
    uint64_t v49 = *(void *)(v0 + 104);
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v30(v49, v48);
    goto LABEL_18;
  }
  uint64_t v39 = dword_10080CB20;
  id v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v40;
  *id v40 = v0;
  v40[1] = sub_100375AF4;
  char v41 = *(unsigned char *)(v0 + 280);
  uint64_t v42 = *(void *)(v0 + 120);
  uint64_t v43 = *(void *)(v0 + 128);
  uint64_t v44 = *(void *)(v0 + 112);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CB20 + v39))(v44, v42, v43, v55, v17, v41);
}

uint64_t sub_100375AF4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100375C38, 0, 0);
}

uint64_t sub_100375C38()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v4 = (void *)v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = swift_allocObject();
  v0[33] = v5;
  *(void *)(v5 + 16) = v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[34] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100375D8C;
  uint64_t v8 = v0[22];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_100376368, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_100375D8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  uint64_t v3 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100375F34, 0, 0);
}

uint64_t sub_100375F34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100375FFC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
    if (v5)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void *)(a2 + 16);
      uint64_t v10 = *(double (**)(uint64_t, uint64_t))(v9 + 24);
      swift_unknownObjectRetain();
      id v11 = v5;
      uint64_t v12 = v10(ObjectType, v9);
      if (a3)
      {
        uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_transcriptionCoordinator);
        swift_getKeyPath();
        sub_1003764A4(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        swift_beginAccess();
        uint64_t v14 = *(void *)(v13 + 72);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
      int64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        sub_100095C00(0, v18, 0);
        uint64_t v19 = 0;
        unint64_t v20 = _swiftEmptyArrayStorage[2];
        do
        {
          uint64_t v21 = v17 + 8 * v19;
          if (*(double *)(v21 + 32) + 50.0 < 0.0) {
            double v22 = 0.0;
          }
          else {
            double v22 = *(double *)(v21 + 32) + 50.0;
          }
          unint64_t v23 = _swiftEmptyArrayStorage[3];
          if (v20 >= v23 >> 1) {
            sub_100095C00(v23 > 1, v20 + 1, 1);
          }
          ++v19;
          _swiftEmptyArrayStorage[2] = v20 + 1;
          *(double *)&_swiftEmptyArrayStorage[v20++ + 4] = v22;
        }
        while (v18 != v19);
      }
      swift_bridgeObjectRelease();
      sub_10010DE90(v12, 0, (uint64_t)_swiftEmptyArrayStorage, v14);
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    oschar log = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v15))
    {
      Swift::String v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, "No recording manager", v16, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100376330()
{
  return swift_deallocObject();
}

void sub_100376368()
{
}

uint64_t sub_10037639C()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003763E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10002C194;
  return sub_100373BF0(a1, v4, v5, v7, v6);
}

uint64_t sub_1003764A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1003764EC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003746DC(*(void *)(v1 + 16), a1);
}

uint64_t sub_100376508(uint64_t a1, uint64_t a2)
{
  sub_10001B220(a1, (uint64_t)v13, &qword_1007F9470);
  if (v14)
  {
    sub_100010218(&qword_100801A60);
    _s10AudioAssetCMa(0);
    if (swift_dynamicCast()) {
      uint64_t v4 = v12;
    }
    else {
      uint64_t v4 = 0;
    }
  }
  else
  {
    sub_10001457C((uint64_t)v13, &qword_1007F9470);
    uint64_t v4 = 0;
  }
  type metadata accessor for AudioAssetPersistenceStrategy();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 0;
  uint64_t v6 = OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_logger;
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = sub_100026A54(v7, (uint64_t)qword_10083EDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5 + v6, v8, v7);
  uint64_t v9 = OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset;
  *(void *)(v5 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = *(void **)(v5 + v9);
  *(void *)(v5 + v9) = v4;

  *(void *)(v5 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_transcriptionCoordinator) = a2;
  sub_10001457C(a1, &qword_1007F9470);
  return v5;
}

NSString sub_1003766A8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D3E8 = (uint64_t)result;
  return result;
}

NSString sub_1003766E4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D3F0 = (uint64_t)result;
  return result;
}

NSString sub_10037671C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D3F8 = (uint64_t)result;
  return result;
}

NSString sub_100376754()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D400 = (uint64_t)result;
  return result;
}

NSString sub_100376790()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D408 = (uint64_t)result;
  return result;
}

NSString sub_1003767C8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D410 = (uint64_t)result;
  return result;
}

NSString sub_100376804()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D418 = (uint64_t)result;
  return result;
}

NSString sub_10037683C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D420 = (uint64_t)result;
  return result;
}

NSString sub_100376874()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D428 = (uint64_t)result;
  return result;
}

NSString sub_1003768AC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D430 = (uint64_t)result;
  return result;
}

uint64_t _s4KeysCMa()
{
  return self;
}

void sub_100376908(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption;
  if (v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption] == (a1 & 1)) {
    return;
  }
  id v3 = [v1 subviews];
  unint64_t v4 = sub_1000108BC();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_16;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    id v6 = *(id *)(v5 + 32);
  }
  id v20 = v6;
  swift_bridgeObjectRelease();
  type metadata accessor for FullScreenPhotoView();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    int v8 = v1[v2];
    int v9 = *(unsigned __int8 *)(v7 + qword_10080FB60);
    *(unsigned char *)(v7 + qword_10080FB60) = v8;
    if (v8 != v9)
    {
      uint64_t v10 = qword_10080FB70;
LABEL_34:
      [*(id *)(v7 + v10) setHidden:];
    }
LABEL_35:

    return;
  }

LABEL_14:
  id v12 = [v1 subviews];
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62) {
    goto LABEL_24;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_25;
  }
LABEL_16:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_28;
      }
      goto LABEL_41;
    }
    id v13 = *(id *)(v5 + 32);
  }
  id v20 = v13;
  swift_bridgeObjectRelease();
  type metadata accessor for FullScreenLivePhotoView();
  if (swift_dynamicCastClass())
  {
    sub_1004AD318(v1[v2]);
    goto LABEL_35;
  }

LABEL_26:
  id v15 = [v1 subviews];
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62) {
    goto LABEL_40;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    if ((v4 & 0xC000000000000001) != 0)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v16 = *(id *)(v4 + 32);
    }
    id v20 = v16;
    swift_bridgeObjectRelease();
    type metadata accessor for FullScreenVideoView();
    uint64_t v7 = swift_dynamicCastClass();
    if (!v7) {
      goto LABEL_35;
    }
    int v17 = v1[v2];
    int v18 = *(unsigned __int8 *)(v7 + qword_10083D370);
    *(unsigned char *)(v7 + qword_10083D370) = v17;
    if (v17 == v18) {
      goto LABEL_35;
    }
    uint64_t v10 = qword_100808058;
    goto LABEL_34;
  }
LABEL_41:

  swift_bridgeObjectRelease();
}

void sub_100376C94(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAsset);
  *(void *)(v2 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAsset) = a1;
  id v8 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      id v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_100377068();
    goto LABEL_7;
  }
  if (!v4) {
    goto LABEL_6;
  }
  _s5AssetCMa();
  id v5 = v4;
  id v6 = v8;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
}

id sub_100376E20()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = qword_1007F6E98;
  id v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  [v1 removeObserver:v3 name:qword_10083D420 object:0];

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for FullScreenAssetView();
  return [super dealloc];
}

void sub_100377068()
{
  uint64_t v2 = v0;
  id v3 = *(char **)&v0[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAsset];
  if (!v3) {
    return;
  }
  unint64_t v4 = *(void **)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (!v4)
  {
    uint64_t v24 = v3;
    goto LABEL_18;
  }
  v314 = v3;
  id v5 = v4;
  signed int v6 = [v5 minimumSupportedAppVersion];
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  signed int v7 = static Journaling.EntryViewModel.currentAppVersion;

  if (v7 < v6)
  {
LABEL_18:
    id v25 = [v2 subviews];
    sub_1000108BC();
    unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v27 = swift_bridgeObjectRelease();
      if (!v28) {
        goto LABEL_91;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v28) {
        goto LABEL_91;
      }
    }
    if (v28 < 1)
    {
      __break(1u);
      goto LABEL_106;
    }
    for (uint64_t i = 0; i != v28; ++i)
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v30 = *(id *)(v26 + 8 * i + 32);
      }
      uint64_t v31 = v30;
      [v30 removeFromSuperview];
    }
LABEL_91:
    swift_bridgeObjectRelease();
    int v93 = self;
    id v94 = [v93 mainBundle];
    v95._uint64_t countAndFlagsBits = 0xD000000000000016;
    v319._object = (void *)0x800000010069A4C0;
    v95._object = (void *)0x800000010069A4A0;
    v96._uint64_t countAndFlagsBits = 0;
    v96._object = (void *)0xE000000000000000;
    v319._uint64_t countAndFlagsBits = 0xD000000000000019;
    Swift::String v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v95, (Swift::String_optional)0, (NSBundle)v94, v96, v319);

    id v98 = [v93 mainBundle];
    v99._uint64_t countAndFlagsBits = 0xD00000000000005BLL;
    v320._object = (void *)0x800000010069A4C0;
    v99._object = (void *)0x800000010069A4E0;
    v100._uint64_t countAndFlagsBits = 0;
    v100._object = (void *)0xE000000000000000;
    v320._uint64_t countAndFlagsBits = 0xD000000000000019;
    Swift::String v101 = NSLocalizedString(_:tableName:bundle:value:comment:)(v99, (Swift::String_optional)0, (NSBundle)v98, v100, v320);

    objc_allocWithZone((Class)type metadata accessor for FullScreenUnsupportedItemView());
    id v102 = v3;
    NSString v103 = sub_100161E20(v97._countAndFlagsBits, (uint64_t)v97._object, v101._countAndFlagsBits, (uint64_t)v101._object, v3, 0);
    [v2 addSubview:v103];
    sub_1001DCF60(0.0);
    swift_bridgeObjectRelease();
    char v104 = *(void **)&v103[OBJC_IVAR____TtC7Journal29FullScreenUnsupportedItemView_assetView];
    v314 = *(char **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
    *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v104;
    id v105 = v104;

LABEL_92:
    uint64_t v106 = v314;
LABEL_93:

    return;
  }
  _s10PhotoAssetCMa(0);
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    int v9 = (void *)v8;
    uint64_t v10 = v314;
    id v11 = [v2 subviews];
    unint64_t v1 = sub_1000108BC();
    unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v14 = &qword_1007FB108;
    id v15 = &selRef_drawMapRect_zoomScale_inContext_;
    if (v13)
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_118;
        }
        id v16 = *(id *)(v12 + 32);
      }
      int v17 = v16;
      swift_bridgeObjectRelease();
      int v18 = (objc_class *)type metadata accessor for FullScreenPhotoView();
      uint64_t v19 = swift_dynamicCastClass();
      if (v19)
      {
        id v20 = (char *)v19;
        uint64_t v21 = *(void **)(v19 + qword_1007FB108);
        id v22 = v17;
        [v21 zoomScale];
        if (v23 > 1.0) {
          [v21 setZoomScale:1 animated:1.0];
        }

        goto LABEL_120;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v39 = [v2 subviews];
    unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = (uint64_t *)&selRef_drawMapRect_zoomScale_inContext_;
    if (!(v12 >> 62))
    {
      uint64_t v40 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v40)
      {
LABEL_39:
        if (v40 >= 1)
        {
          for (uint64_t j = 0; j != v40; ++j)
          {
            if ((v12 & 0xC000000000000001) != 0) {
              id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v42 = *(id *)(v12 + 8 * j + 32);
            }
            uint64_t v43 = v42;
            [v42 removeFromSuperview];
          }
          goto LABEL_119;
        }
        __break(1u);
        goto LABEL_135;
      }
LABEL_119:
      swift_bridgeObjectRelease();
      [v2 frame];
      double v122 = v121;
      double v124 = v123;
      double v126 = v125;
      double v128 = v127;
      int v18 = (objc_class *)type metadata accessor for FullScreenPhotoView();
      id v129 = objc_allocWithZone(v18);
      id v130 = sub_10050217C(v122, v124, v126, v128);
      *(void *)&v130[qword_10080FB58 + 8] = &off_1007A76E8;
      swift_unknownObjectWeakAssign();
      id v20 = v130;
      [v2 addSubview:v20];
      sub_1001DCF60(0.0);

      swift_bridgeObjectRelease();
      id v15 = (char **)v14;
LABEL_120:
      uint64_t v131 = *(void **)&v20[qword_1007FB128];
      unint64_t v132 = *(void **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
      *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v131;
      id v133 = v131;

      type metadata accessor for FullScreenPhotoView();
      v316 = (ValueMetadata *)v18;
      v317 = (char **)&off_1007B0A28;
      v315[0] = v20;
      uint64_t v134 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
      swift_beginAccess();
      id v135 = v20;
      sub_1003798AC((uint64_t)v315, v134);
      swift_endAccess();
      int v136 = v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption];
      int v137 = v135[qword_10080FB60];
      v135[qword_10080FB60] = v136;
      if (v136 != v137) {
        [*(id *)&v135[qword_10080FB70] setHidden:];
      }
      int v138 = v10;
      sub_100502078(v9);
      int v139 = *(void **)&v135[qword_1007FB108];
      [v139 v15[416]];
      if (v140 > 1.0) {
        [v139 setZoomScale:1 animated:1.0];
      }

      return;
    }
LABEL_118:
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_39;
    }
    goto LABEL_119;
  }
  _s14LivePhotoAssetCMa(0);
  uint64_t v32 = swift_dynamicCastClass();
  if (v32)
  {
    int v9 = (void *)v32;
    uint64_t v10 = v314;
    id v33 = [v2 subviews];
    sub_1000108BC();
    unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v12 >> 62))
    {
      uint64_t v35 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v35)
      {
LABEL_136:
        swift_bridgeObjectRelease();
        [v2 frame];
        double v147 = v146;
        double v149 = v148;
        double v151 = v150;
        double v153 = v152;
        id v154 = (objc_class *)type metadata accessor for FullScreenLivePhotoView();
        id v155 = objc_allocWithZone(v154);
        uint64_t v156 = sub_1004AD5D0(v147, v149, v151, v153);
        *(void *)&v156[qword_10083D568 + 8] = &off_1007A76E8;
        swift_unknownObjectWeakAssign();
        id v157 = v156;
        [v2 addSubview:v157];
        uint64_t v158 = v157;
        sub_1001DCF60(0.0);

        swift_bridgeObjectRelease();
        id v159 = *(void **)&v158[qword_1007FB128];
        id v160 = *(void **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
        *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v159;
        id v161 = v159;

        v316 = (ValueMetadata *)v154;
        v317 = (char **)&off_1007AE388;
        v315[0] = v158;
        uint64_t v162 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
        swift_beginAccess();
        Swift::String v163 = v158;
        sub_1003798AC((uint64_t)v315, v162);
        swift_endAccess();
        sub_1004AD318(v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption]);
        int v164 = *(void **)&v163[qword_1007FB108];
        [v164 zoomScale];
        if (v165 > 1.0) {
          [v164 setZoomScale:1 animated:1.0];
        }
        uint64_t v166 = *(void **)&v163[qword_10083D578];
        *(void *)&v163[qword_10083D578] = v9;
        uint64_t v167 = v10;

        sub_1004AD3C4();
        uint64_t v168 = &v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
        uint64_t v169 = &off_1007AE360;
LABEL_155:
        *((void *)v168 + 1) = v169;
        swift_unknownObjectWeakAssign();

LABEL_156:
        return;
      }
      goto LABEL_29;
    }
LABEL_135:
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v34 = swift_bridgeObjectRelease();
    if (!v35) {
      goto LABEL_136;
    }
LABEL_29:
    if (v35 >= 1)
    {
      for (uint64_t k = 0; k != v35; ++k)
      {
        if ((v12 & 0xC000000000000001) != 0) {
          id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v37 = *(id *)(v12 + 8 * k + 32);
        }
        id v38 = v37;
        [v37 removeFromSuperview];
      }
      goto LABEL_136;
    }
    __break(1u);
LABEL_140:
    _s17WorkoutRouteAssetCMa(v34);
    uint64_t v49 = swift_dynamicCastClass();
    if (v49)
    {
      uint64_t v117 = v49;
      uint64_t v108 = v314;
      id v170 = [v2 subviews];
      sub_1000108BC();
      unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v107 >> 62))
      {
        uint64_t v171 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v171)
        {
LABEL_143:
          if (v171 >= 1)
          {
            for (uint64_t m = 0; m != v171; ++m)
            {
              if ((v107 & 0xC000000000000001) != 0) {
                id v173 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v173 = *(id *)(v107 + 8 * m + 32);
              }
              id v174 = v173;
              [v173 removeFromSuperview];
            }
            goto LABEL_261;
          }
          __break(1u);
          goto LABEL_265;
        }
LABEL_261:
        swift_bridgeObjectRelease();
        type metadata accessor for FullScreenRouteView();
        id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
        uint64_t v292 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeAsset;
        v293 = *(void **)&v202[OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeAsset];
        *(void *)&v202[OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeAsset] = v117;
        double v203 = v108;

        v294 = *(void **)&v202[v292];
        v295 = v203;
        if (v294)
        {
          v295 = v294;
          sub_100410DCC(v295);
        }
        [v2 addSubview:v202];
        sub_1001DCF60(0.0);
        swift_bridgeObjectRelease();
        uint64_t v230 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeView;
        goto LABEL_186;
      }
LABEL_260:
      swift_bridgeObjectRetain();
      uint64_t v171 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v171) {
        goto LABEL_143;
      }
      goto LABEL_261;
    }
    goto LABEL_159;
  }
  _s10VideoAssetCMa(0);
  uint64_t v44 = swift_dynamicCastClass();
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v46 = v314;
    id v47 = [v2 subviews];
    sub_1000108BC();
    unint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v48 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v49 = swift_bridgeObjectRelease();
      if (!v50) {
        goto LABEL_150;
      }
    }
    else
    {
      uint64_t v50 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v50) {
        goto LABEL_150;
      }
    }
    if (v50 < 1)
    {
      __break(1u);
LABEL_159:
      _s19MotionActivityAssetCMa(v49);
      uint64_t v59 = swift_dynamicCastClass();
      if (v59)
      {
        uint64_t v117 = v59;
        uint64_t v108 = v314;
        id v197 = [v2 subviews];
        sub_1000108BC();
        unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v107 >> 62))
        {
          uint64_t v198 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v198)
          {
LABEL_266:
            swift_bridgeObjectRelease();
            type metadata accessor for FullScreenMotionActivityView();
            id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
            uint64_t v296 = OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityAsset;
            v297 = *(void **)&v202[OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityAsset];
            *(void *)&v202[OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityAsset] = v117;
            double v203 = v108;

            v298 = *(void **)&v202[v296];
            v299 = v203;
            if (v298)
            {
              v299 = v298;
              sub_100511E0C(v299);
            }
            [v2 addSubview:v202];
            sub_1001DCF60(0.0);
            swift_bridgeObjectRelease();
            uint64_t v230 = OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityView;
            goto LABEL_186;
          }
          goto LABEL_162;
        }
LABEL_265:
        swift_bridgeObjectRetain();
        uint64_t v198 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v198) {
          goto LABEL_266;
        }
LABEL_162:
        if (v198 >= 1)
        {
          for (uint64_t n = 0; n != v198; ++n)
          {
            if ((v107 & 0xC000000000000001) != 0) {
              id v200 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v200 = *(id *)(v107 + 8 * n + 32);
            }
            id v201 = v200;
            [v200 removeFromSuperview];
          }
          goto LABEL_266;
        }
        __break(1u);
        goto LABEL_270;
      }
      goto LABEL_188;
    }
    for (iuint64_t i = 0; ii != v50; ++ii)
    {
      if ((v48 & 0xC000000000000001) != 0) {
        id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v52 = *(id *)(v48 + 8 * ii + 32);
      }
      Swift::String v53 = v52;
      [v52 removeFromSuperview];
    }
LABEL_150:
    swift_bridgeObjectRelease();
    [v2 frame];
    double v176 = v175;
    double v178 = v177;
    double v180 = v179;
    double v182 = v181;
    objc_super v183 = (objc_class *)type metadata accessor for FullScreenVideoView();
    id v184 = objc_allocWithZone(v183);
    id v185 = sub_1003195B4(v176, v178, v180, v182);
    *(void *)&v185[qword_10083D368 + 8] = &off_1007A76E8;
    swift_unknownObjectWeakAssign();
    id v186 = v185;
    [v2 addSubview:v186];
    id v187 = v186;
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    double v188 = *(void **)&v187[qword_1007FB128];
    id v189 = *(void **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
    *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v188;
    id v190 = v188;

    v316 = (ValueMetadata *)v183;
    v317 = (char **)&off_1007A5588;
    v315[0] = v187;
    uint64_t v191 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
    swift_beginAccess();
    Swift::String v163 = v187;
    sub_1003798AC((uint64_t)v315, v191);
    swift_endAccess();
    int v192 = v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption];
    int v193 = v163[qword_10083D370];
    v163[qword_10083D370] = v192;
    if (v192 != v193) {
      [v163[qword_100808058] setHidden:];
    }
    id v194 = *(void **)&v163[qword_10083D378];
    *(void *)&v163[qword_10083D378] = v45;
    uint64_t v167 = v46;

    sub_1003193BC();
    id v195 = *(void **)&v163[qword_1007FB108];
    [v195 zoomScale];
    if (v196 > 1.0) {
      [v195 setZoomScale:1 animated:1.0];
    }
    uint64_t v168 = &v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia];
    uint64_t v169 = &off_1007A5560;
    goto LABEL_155;
  }
  _s16MultiPinMapAssetCMa();
  uint64_t v54 = swift_dynamicCastClass();
  if (v54)
  {
    uint64_t v55 = (void *)v54;
    char v56 = v314;
    id v57 = [v2 subviews];
    sub_1000108BC();
    unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v59 = swift_bridgeObjectRelease();
      if (!v60) {
        goto LABEL_169;
      }
    }
    else
    {
      uint64_t v60 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v60) {
        goto LABEL_169;
      }
    }
    if (v60 < 1)
    {
      __break(1u);
LABEL_188:
      _s15GenericMapAssetCMa(v59);
      uint64_t v69 = swift_dynamicCastClass();
      if (v69)
      {
        unint64_t v1 = v69;
        uint64_t v108 = v314;
        unint64_t v233 = (unint64_t)[v2 subviews];
        sub_1000108BC();
        unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v107 >> 62))
        {
          uint64_t v234 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v234)
          {
LABEL_274:
            swift_bridgeObjectRelease();
            type metadata accessor for FullScreenGenericMapView();
            id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
            v300 = *(void **)&v202[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapAsset];
            *(void *)&v202[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapAsset] = v1;
            double v203 = v108;

            sub_10004EB70();
            [v2 addSubview:v202];
            sub_1001DCF60(0.0);
            swift_bridgeObjectRelease();
            uint64_t v230 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapView;
            goto LABEL_186;
          }
          goto LABEL_191;
        }
LABEL_270:
        if ((v107 & 0x8000000000000000) != 0) {
          unint64_t v233 = v107;
        }
        else {
          unint64_t v233 = v107 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v234 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v234) {
          goto LABEL_274;
        }
LABEL_191:
        if (v234 >= 1)
        {
          for (juint64_t j = 0; jj != v234; ++jj)
          {
            if ((v107 & 0xC000000000000001) != 0) {
              id v236 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v236 = *(id *)(v107 + 8 * jj + 32);
            }
            v237 = v236;
            [v236 removeFromSuperview];
          }
          goto LABEL_274;
        }
        __break(1u);
        goto LABEL_276;
      }
      goto LABEL_208;
    }
    for (kuint64_t k = 0; kk != v60; ++kk)
    {
      if ((v58 & 0xC000000000000001) != 0) {
        id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v62 = *(id *)(v58 + 8 * kk + 32);
      }
      uint64_t v63 = v62;
      [v62 removeFromSuperview];
    }
LABEL_169:
    swift_bridgeObjectRelease();
    type metadata accessor for FullScreenMultiPinMapView();
    id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    double v203 = v56;
    sub_100348E94(v55);

    id v204 = &v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_multiPinMapDelegate];
    swift_unknownObjectWeakLoadStrong();
    *(void *)&v202[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_multiPinMapDelegate + 8] = *((void *)v204 + 1);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    id v205 = &v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegate];
    swift_unknownObjectWeakLoadStrong();
    *(void *)&v202[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_fullScreenAssetViewDelegate + 8] = *((void *)v205 + 1);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    [v2 addSubview:v202];
    id v206 = [v202 superview];
    if (v206)
    {
      double v207 = v206;
      [v202 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v208 = [v202 topAnchor];
      id v209 = [v207 topAnchor];
      id v210 = [v208 constraintGreaterThanOrEqualToAnchor:v209];

      [v210 setConstant:0.0];
      if (v210)
      {
        id v211 = v210;
        [v211 setActive:1];
      }
    }
    id v212 = [v202 superview];
    if (v212)
    {
      id v213 = v212;
      [v202 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v214 = [v202 leadingAnchor];
      id v215 = [v213 leadingAnchor];
      id v216 = [v214 constraintEqualToAnchor:v215];

      [v216 setConstant:0.0];
      if (v216)
      {
        id v217 = v216;
        [v217 setActive:1];
      }
    }
    id v218 = [v202 superview];
    if (v218)
    {
      id v219 = v218;
      [v202 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v220 = [v202 trailingAnchor];
      id v221 = [v219 trailingAnchor];
      id v222 = [v220 constraintEqualToAnchor:v221];

      [v222 setConstant:0.0];
      if (v222)
      {
        id v223 = v222;
        [v223 setActive:1];
      }
    }
    if (qword_1007F7370 != -1) {
      swift_once();
    }

    id v224 = [v202 superview];
    if (v224)
    {
      id v225 = v224;
      [v202 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v226 = [v202 centerYAnchor];
      id v227 = [v225 centerYAnchor];
      id v228 = [v226 constraintEqualToAnchor:v227];

      [v228 setConstant:0.0];
      id v229 = v228;
      [v229 setActive:1];
    }
    uint64_t v230 = OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_mapView;
    goto LABEL_186;
  }
  _s10AudioAssetCMa(0);
  uint64_t v64 = swift_dynamicCastClass();
  if (!v64)
  {
    _s12PodcastAssetCMa(0);
    uint64_t v74 = swift_dynamicCastClass();
    if (v74)
    {
      uint64_t v75 = v74;
      uint64_t v76 = v314;
      id v77 = [v2 subviews];
      sub_1000108BC();
      unint64_t v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v78 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v79 = swift_bridgeObjectRelease();
        if (!v80) {
          goto LABEL_218;
        }
      }
      else
      {
        uint64_t v80 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v80) {
          goto LABEL_218;
        }
      }
      if (v80 < 1)
      {
        __break(1u);
LABEL_222:
        _s20ThirdPartyMediaAssetCMa(v79);
        uint64_t v267 = swift_dynamicCastClass();
        if (v267)
        {
          unint64_t v233 = v267;
          uint64_t v108 = v314;
          id v268 = [v2 subviews];
          sub_1000108BC();
          unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (!(v107 >> 62))
          {
            uint64_t v269 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v269)
            {
LABEL_282:
              swift_bridgeObjectRelease();
              objc_allocWithZone((Class)type metadata accessor for FullScreenThirdPartyMediaView());
              double v203 = v108;
              id v202 = sub_1004A79C0((void *)v233);
              [v2 addSubview:v202];
              sub_1001DCF60(0.0);
              swift_bridgeObjectRelease();
              uint64_t v230 = OBJC_IVAR____TtC7Journal29FullScreenThirdPartyMediaView_assetView;
              goto LABEL_186;
            }
            goto LABEL_225;
          }
LABEL_281:
          swift_bridgeObjectRetain();
          uint64_t v269 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v269) {
            goto LABEL_282;
          }
LABEL_225:
          if (v269 >= 1)
          {
            for (muint64_t m = 0; mm != v269; ++mm)
            {
              if ((v107 & 0xC000000000000001) != 0) {
                id v271 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v271 = *(id *)(v107 + 8 * mm + 32);
              }
              long long v272 = v271;
              [v271 removeFromSuperview];
            }
            goto LABEL_282;
          }
          __break(1u);
          goto LABEL_284;
        }
LABEL_236:
        _s12UnknownAssetCMa();
        if (!swift_dynamicCastClass()) {
          goto LABEL_92;
        }
        id v277 = [v2 subviews];
        sub_1000108BC();
        unint64_t v233 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (!(v233 >> 62))
        {
          uint64_t v278 = *(void *)((v233 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v278)
          {
LABEL_285:
            swift_bridgeObjectRelease();
            type metadata accessor for FullScreenUnknownAssetView();
            id v312 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
            [v2 addSubview:v312];
            sub_1001DCF60(0.0);
            swift_bridgeObjectRelease();
            v313 = *(char **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
            *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = 0;

            uint64_t v106 = v313;
            goto LABEL_93;
          }
LABEL_239:
          if (v278 < 1)
          {
            __break(1u);
            return;
          }
          for (nuint64_t n = 0; nn != v278; ++nn)
          {
            if ((v233 & 0xC000000000000001) != 0) {
              id v280 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v280 = *(id *)(v233 + 8 * nn + 32);
            }
            v281 = v280;
            [v280 removeFromSuperview];
          }
          goto LABEL_285;
        }
LABEL_284:
        swift_bridgeObjectRetain();
        uint64_t v278 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v278) {
          goto LABEL_285;
        }
        goto LABEL_239;
      }
      for (uint64_t i1 = 0; i1 != v80; ++i1)
      {
        if ((v78 & 0xC000000000000001) != 0) {
          id v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v82 = *(id *)(v78 + 8 * i1 + 32);
        }
        uint64_t v83 = v82;
        [v82 removeFromSuperview];
      }
LABEL_218:
      swift_bridgeObjectRelease();
      type metadata accessor for FullScreenPodcastView();
      id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      uint64_t v263 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastAsset;
      v264 = *(void **)&v202[OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastAsset];
      *(void *)&v202[OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastAsset] = v75;
      double v203 = v76;

      uint64_t v265 = *(void **)&v202[v263];
      uint64_t v266 = v203;
      if (v265)
      {
        uint64_t v266 = v265;
        sub_10001DFC8((uint64_t)v266);
      }
      [v2 addSubview:v202];
      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      uint64_t v230 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView;
      goto LABEL_186;
    }
    _s10MusicAssetCMa(0);
    uint64_t v84 = swift_dynamicCastClass();
    if (v84)
    {
      uint64_t v85 = v84;
      uint64_t v86 = v314;
      id v87 = [v2 subviews];
      sub_1000108BC();
      unint64_t v88 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v88 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v89) {
          goto LABEL_232;
        }
      }
      else
      {
        uint64_t v89 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v89) {
          goto LABEL_232;
        }
      }
      if (v89 < 1)
      {
        __break(1u);
        goto LABEL_236;
      }
      for (uint64_t i2 = 0; i2 != v89; ++i2)
      {
        if ((v88 & 0xC000000000000001) != 0) {
          id v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v91 = *(id *)(v88 + 8 * i2 + 32);
        }
        id v92 = v91;
        [v91 removeFromSuperview];
      }
LABEL_232:
      swift_bridgeObjectRelease();
      type metadata accessor for FullScreenMusicView();
      id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      uint64_t v273 = OBJC_IVAR____TtC7Journal19FullScreenMusicView_musicAsset;
      UIImage_optional v274 = *(void **)&v202[OBJC_IVAR____TtC7Journal19FullScreenMusicView_musicAsset];
      *(void *)&v202[OBJC_IVAR____TtC7Journal19FullScreenMusicView_musicAsset] = v85;
      double v203 = v86;

      Swift::String v275 = *(void **)&v202[v273];
      Swift::String v276 = v203;
      if (v275)
      {
        Swift::String v276 = v275;
        sub_1004D8E9C((uint64_t)v276);
      }
      [v2 addSubview:v202];
      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      uint64_t v230 = OBJC_IVAR____TtC7Journal19FullScreenMusicView_musicView;
      goto LABEL_186;
    }
    _s12ContactAssetCMa(0);
    uint64_t v27 = swift_dynamicCastClass();
    if (v27)
    {
      unint64_t v107 = v27;
      uint64_t v108 = v314;
      id v109 = [v2 subviews];
      sub_1000108BC();
      unint64_t v110 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v110 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v111 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v111) {
          goto LABEL_99;
        }
      }
      else
      {
        uint64_t v111 = *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v111)
        {
LABEL_99:
          if (v111 >= 1)
          {
            for (uint64_t i3 = 0; i3 != v111; ++i3)
            {
              if ((v110 & 0xC000000000000001) != 0) {
                id v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v113 = *(id *)(v110 + 8 * i3 + 32);
              }
              uint64_t v114 = v113;
              [v113 removeFromSuperview];
            }
            goto LABEL_246;
          }
          __break(1u);
          goto LABEL_252;
        }
      }
LABEL_246:
      swift_bridgeObjectRelease();
      type metadata accessor for FullScreenContactView();
      id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      uint64_t v282 = OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAsset;
      v283 = *(void **)&v202[OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAsset];
      *(void *)&v202[OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAsset] = v107;
      double v203 = v108;

      v284 = *(void **)&v202[v282];
      v285 = v203;
      if (v284)
      {
        v285 = v284;
        sub_100247484(v285);
      }
      [v2 addSubview:v202];
      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      v286 = *(void **)&v202[v282];
      if (v286)
      {
        id v287 = v286;
        sub_100247484(v287);
      }
      uint64_t v230 = OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAssetView;
      goto LABEL_186;
    }
LABEL_106:
    _s9LinkAssetCMa(v27);
    uint64_t v115 = swift_dynamicCastClass();
    if (!v115)
    {
      _s16WorkoutIconAssetCMa(0);
      uint64_t v34 = swift_dynamicCastClass();
      if (!v34) {
        goto LABEL_140;
      }
      uint64_t v117 = v34;
      uint64_t v108 = v314;
      id v141 = [v2 subviews];
      sub_1000108BC();
      unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v107 >> 62))
      {
        uint64_t v142 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v142) {
          goto LABEL_256;
        }
        goto LABEL_128;
      }
LABEL_255:
      swift_bridgeObjectRetain();
      uint64_t v142 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v142) {
        goto LABEL_256;
      }
LABEL_128:
      if (v142 < 1)
      {
        __break(1u);
        goto LABEL_260;
      }
      for (uint64_t i4 = 0; i4 != v142; ++i4)
      {
        if ((v107 & 0xC000000000000001) != 0) {
          id v144 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v144 = *(id *)(v107 + 8 * i4 + 32);
        }
        int v145 = v144;
        [v144 removeFromSuperview];
      }
LABEL_256:
      swift_bridgeObjectRelease();
      type metadata accessor for FullScreenWorkoutView();
      id v202 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      uint64_t v288 = OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutAsset;
      v289 = *(void **)&v202[OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutAsset];
      *(void *)&v202[OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutAsset] = v117;
      double v203 = v108;

      v290 = *(void **)&v202[v288];
      v291 = v203;
      if (v290)
      {
        v291 = v290;
        sub_100308ADC(v291);
      }
      [v2 addSubview:v202];
      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      uint64_t v230 = OBJC_IVAR____TtC7Journal21FullScreenWorkoutView_workoutActivityView;
      goto LABEL_186;
    }
    unint64_t v110 = v115;
    uint64_t v108 = v314;
    id v116 = [v2 subviews];
    sub_1000108BC();
    unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v107 >> 62))
    {
      uint64_t v117 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v117)
      {
LABEL_253:
        swift_bridgeObjectRelease();
        objc_allocWithZone((Class)type metadata accessor for FullScreenLinkView());
        double v203 = v108;
        id v202 = sub_100066444((void *)v110);
        [v2 addSubview:v202];
        sub_1001DCF60(0.0);
        swift_bridgeObjectRelease();
        uint64_t v230 = OBJC_IVAR____TtC7Journal18FullScreenLinkView_linkView;
LABEL_186:
        id v231 = *(void **)&v202[v230];
        v314 = *(char **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
        *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v231;
        id v232 = v231;

        goto LABEL_92;
      }
      goto LABEL_109;
    }
LABEL_252:
    swift_bridgeObjectRetain();
    uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v117) {
      goto LABEL_253;
    }
LABEL_109:
    if (v117 >= 1)
    {
      for (uint64_t i5 = 0; i5 != v117; ++i5)
      {
        if ((v107 & 0xC000000000000001) != 0) {
          id v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v119 = *(id *)(v107 + 8 * i5 + 32);
        }
        int v120 = v119;
        [v119 removeFromSuperview];
      }
      goto LABEL_253;
    }
    __break(1u);
    goto LABEL_255;
  }
  uint64_t v65 = (void *)v64;
  uint64_t v66 = v314;
  id v67 = [v2 subviews];
  sub_1000108BC();
  unint64_t v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v68 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v69 = swift_bridgeObjectRelease();
    if (!v70) {
      goto LABEL_198;
    }
  }
  else
  {
    uint64_t v70 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v70) {
      goto LABEL_198;
    }
  }
  if (v70 < 1)
  {
    __break(1u);
LABEL_208:
    _s16StateOfMindAssetCMa(v69);
    uint64_t v79 = swift_dynamicCastClass();
    if (v79)
    {
      unint64_t v233 = v79;
      uint64_t v108 = v314;
      id v258 = [v2 subviews];
      sub_1000108BC();
      unint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v107 >> 62))
      {
        uint64_t v259 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v259)
        {
LABEL_277:
          swift_bridgeObjectRelease();
          uint64_t v301 = type metadata accessor for FullScreenStateOfMindView();
          v302 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
          uint64_t v303 = OBJC_IVAR____TtC7Journal25FullScreenStateOfMindView_stateOfMindAsset;
          v304 = *(void **)&v302[OBJC_IVAR____TtC7Journal25FullScreenStateOfMindView_stateOfMindAsset];
          *(void *)&v302[OBJC_IVAR____TtC7Journal25FullScreenStateOfMindView_stateOfMindAsset] = v233;
          v305 = v108;

          v306 = *(void **)&v302[v303];
          v307 = v305;
          if (v306)
          {
            v307 = v306;
            sub_1004BBAF8(v307);
          }
          v316 = (ValueMetadata *)v301;
          v317 = &off_1007AE688;
          v315[0] = v302;
          uint64_t v308 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
          swift_beginAccess();
          v309 = v302;
          sub_1003798AC((uint64_t)v315, v308);
          swift_endAccess();
          [v2 addSubview:v309];
          sub_1001DCF60(0.0);
          swift_bridgeObjectRelease();
          v310 = *(void **)&v309[OBJC_IVAR____TtC7Journal25FullScreenStateOfMindView_stateOfMindView];
          Swift::String v163 = *(char **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
          *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v310;
          id v311 = v310;

          goto LABEL_156;
        }
        goto LABEL_211;
      }
LABEL_276:
      swift_bridgeObjectRetain();
      uint64_t v259 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v259) {
        goto LABEL_277;
      }
LABEL_211:
      if (v259 >= 1)
      {
        for (uint64_t i6 = 0; i6 != v259; ++i6)
        {
          if ((v107 & 0xC000000000000001) != 0) {
            id v261 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v261 = *(id *)(v107 + 8 * i6 + 32);
          }
          uint64_t v262 = v261;
          [v261 removeFromSuperview];
        }
        goto LABEL_277;
      }
      __break(1u);
      goto LABEL_281;
    }
    goto LABEL_222;
  }
  for (uint64_t i7 = 0; i7 != v70; ++i7)
  {
    if ((v68 & 0xC000000000000001) != 0) {
      id v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v72 = *(id *)(v68 + 8 * i7 + 32);
    }
    int v73 = v72;
    [v72 removeFromSuperview];
  }
LABEL_198:
  swift_bridgeObjectRelease();
  v316 = &type metadata for JournalFeatureFlags;
  v317 = (char **)sub_10005F364();
  LOBYTE(v315[0]) = 10;
  char v238 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v315);
  if (v238)
  {
    v239 = (objc_class *)type metadata accessor for FullScreenAudioTranscriptionView();
    v240 = (char *)objc_allocWithZone(v239);
    id v241 = v66;
    id v242 = sub_100379BFC(v65, v240);
    id v243 = *(char **)&v242[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcribingAudioAssetView];
    if (v243)
    {
      id v244 = *(void **)&v243[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_hostingController];
      id v245 = v244;
    }
    else
    {
      id v244 = 0;
    }
    Class v253 = *(void **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController];
    *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController] = v244;
    id v254 = v242;
    v255 = v243;

    *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia + 8] = &off_1007A2DB0;
    swift_unknownObjectWeakAssign();
    v316 = (ValueMetadata *)v239;
    v317 = (char **)&off_1007A2DD8;
    v315[0] = v254;
    uint64_t v256 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
    swift_beginAccess();
    Class v246 = v254;
    sub_1003798AC((uint64_t)v315, v256);
    swift_endAccess();
  }
  else
  {
    type metadata accessor for FullScreenAudioView();
    Class v246 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v247 = OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioAsset;
    id v248 = *(void **)&v246[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioAsset];
    *(void *)&v246[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioAsset] = v65;
    unint64_t v249 = v66;

    UIAccessibilityTraits v250 = *(void **)&v246[v247];
    if (v250)
    {
      id v251 = v250;
      sub_100321864(v251);

      unint64_t v249 = (char *)v251;
    }

    id v243 = *(char **)&v246[OBJC_IVAR____TtC7Journal19FullScreenAudioView_audioView];
    v252 = v243;
  }
  [v2 addSubview:v246];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  uint64_t v257 = *(void **)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView];
  *(void *)&v2[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = v243;
}

id sub_100379668(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_multiPinMapDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = 0;
  int v9 = &v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
  *(_OWORD *)int v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController] = 0;
  v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAsset] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for FullScreenAssetView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100379780(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegateStoppableMedia + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_multiPinMapDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAssetView] = 0;
  id v3 = &v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_fullScreenView];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_childViewController] = 0;
  v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenAssetView_journalAsset] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FullScreenAssetView();
  id v4 = [super initWithCoder:a1];

  return v4;
}

uint64_t type metadata accessor for FullScreenAssetView()
{
  return self;
}

uint64_t sub_1003798AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_100379914(void *a1)
{
  void (*v5)(void *__return_ptr, uint64_t, uint64_t);
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  void *v16;
  NSString v17;
  void *v18;
  NSString v19;
  void v21[3];
  uint64_t v22;
  uint64_t v23;
  void v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  id v25 = _s10AudioAssetCMa(0);
  unint64_t v26 = &off_1007B7DC8;
  v24[0] = a1;
  id v2 = (id)qword_10083D488;
  if (!qword_10083D488)
  {
    objc_super v11 = a1;
LABEL_14:
    if (qword_1007F6D70 != -1) {
      swift_once();
    }
    id v16 = (void *)qword_100806EC8;
    sub_10002E0BC(v24, v25);
    UUID.uuidString.getter();
    int v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v2 = [v16 objectForKey:v17];

    if (!v2)
    {
      type metadata accessor for AudioPlayer();
      swift_allocObject();
      id v2 = (id)sub_1002D7DAC();
      int v18 = (void *)qword_100806EC8;
      swift_retain();
      UUID.uuidString.getter();
      uint64_t v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v18 setObject:v2 forKey:v19];
      swift_release();
    }
    sub_10037A274(&qword_100805568, (void (*)(uint64_t))type metadata accessor for AudioPlayer);
    goto LABEL_20;
  }
  uint64_t v3 = qword_10083D490;
  uint64_t ObjectType = swift_getObjectType();
  id v5 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 88);
  objc_super v6 = a1;
  swift_unknownObjectRetain();
  v5(v21, ObjectType, v3);
  signed int v7 = v22;
  if (v22)
  {
    uint64_t v8 = v23;
    sub_10002E0BC(v21, v22);
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    signed int v7 = v10;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v21);
  }
  else
  {
    sub_10001457C((uint64_t)v21, &qword_1007F9470);
    int v9 = 0;
  }
  unint64_t v12 = UUID.uuidString.getter();
  if (!v7)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v9 == v12 && v7 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  id v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
LABEL_20:
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v24);
  return v2;
}

char *sub_100379BFC(void *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for RecordingView(0);
  id v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v49 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v9 = (char *)&v48 - v8;
  v56[3] = _s10AudioAssetCMa(0);
  v56[4] = &off_1007B7DC8;
  v56[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcribingAudioAssetView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_recordingViewModel] = 0;
  sub_100141410((uint64_t)v56, (uint64_t)v54);
  type metadata accessor for TranscriptionCoordinator(0);
  swift_allocObject();
  uint64_t v10 = a2;
  *(void *)&v10[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcriptionCoordinator] = sub_10013C4E4((uint64_t)v54);

  objc_super v11 = (objc_class *)type metadata accessor for FullScreenAudioTranscriptionView();
  v53.receiver = v10;
  v53.super_class = v11;
  unint64_t v12 = [(char *)[v53 initWithFrame:0.0, 0.0, 0.0, 0.0]];
  id v13 = sub_100379914(a1);
  uint64_t v15 = v14;
  uint64_t ObjectType = swift_getObjectType();
  sub_100141410((uint64_t)v56, (uint64_t)v54);
  sub_10021A2D0((uint64_t)v54, ObjectType, v15);
  sub_10001457C((uint64_t)v54, &qword_1007F9470);
  sub_100141410((uint64_t)v56, (uint64_t)v54);
  uint64_t v17 = OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcriptionCoordinator;
  uint64_t v18 = *(void *)&v12[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcriptionCoordinator];
  swift_retain();
  uint64_t v19 = sub_100376508((uint64_t)v54, v18);
  type metadata accessor for RecordingViewModel();
  uint64_t v20 = *(void *)&v12[v17];
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v50 = v19;
  uint64_t v21 = v19;
  uint64_t v22 = (uint64_t)v9;
  uint64_t v23 = sub_1003DB97C((uint64_t)v13, v21, v20, 1, ObjectType, v15);
  swift_unknownObjectRelease();
  swift_release();
  sub_10037A274((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  swift_retain();
  Bindable<A>.init(wrappedValue:)();
  uint64_t v24 = &v9[v5[7]];
  char v52 = 0;
  State.init(wrappedValue:)();
  uint64_t v25 = v55;
  *uint64_t v24 = v54[0];
  *((void *)v24 + 1) = v25;
  unint64_t v26 = &v9[v5[8]];
  char v52 = 0;
  State.init(wrappedValue:)();
  uint64_t v27 = v55;
  char *v26 = v54[0];
  *((void *)v26 + 1) = v27;
  uint64_t v28 = &v9[v5[9]];
  char v52 = 0;
  State.init(wrappedValue:)();
  uint64_t v29 = v55;
  *uint64_t v28 = v54[0];
  *((void *)v28 + 1) = v29;
  sub_100316C00((uint64_t)v9, v49);
  id v30 = objc_allocWithZone((Class)sub_100010218(&qword_100807F78));
  uint64_t v31 = (void *)UIHostingController.init(rootView:)();
  uint64_t v32 = (objc_class *)type metadata accessor for TranscribingAudioAssetView();
  id v33 = (char *)objc_allocWithZone(v32);
  *(void *)&v33[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView] = 0;
  *(void *)&v33[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView] = 0;
  *(void *)&v33[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView] = 0;
  *(void *)&v33[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView] = 0;
  *(void *)&v33[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_hostingController] = v31;
  v51.receiver = v33;
  v51.super_class = v32;
  id v34 = v31;
  uint64_t v35 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001B1978();

  uint64_t v36 = *((unsigned __int8 *)v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  *((unsigned char *)v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = 5;
  uint64_t v37 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (*((unsigned char *)v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated) == 1)
  {
    switch(v36)
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v40 = v35;
        id v38 = (void *)swift_bridgeObjectRelease();
        if ((v39 & 1) == 0) {
          goto LABEL_6;
        }

        break;
    }
  }
  else
  {
    id v38 = v35;
LABEL_6:
    (*(void (**)(void *))((swift_isaMask & *v35) + 0x110))(v38);
    *((unsigned char *)v35 + v37) = 1;
  }
  [v12 addSubview:v35];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  *(void *)&v12[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_recordingViewModel] = v23;
  swift_retain();
  swift_release();
  char v41 = *(void **)&v12[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcribingAudioAssetView];
  *(void *)&v12[OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_transcribingAudioAssetView] = v35;
  id v42 = v35;

  id v43 = [self defaultCenter];
  uint64_t v44 = qword_1007F6BB8;
  uint64_t v45 = v12;
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v46 = qword_10083D1A0;
  swift_unknownObjectRetain();
  [v43 addObserver:v45 selector:"audioPlaybackDidFinish" name:v46 object:v13];
  swift_release();
  swift_release();

  swift_unknownObjectRelease_n();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v56);
  sub_1001B42E4(v22);
  return v45;
}

uint64_t sub_10037A274(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_10037A2BC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (v1) {
    char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked);
  }
  else {
    char v2 = 0;
  }
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = qword_1007F71B0;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_10083D778;
  id v6 = objc_allocWithZone((Class)type metadata accessor for EntrySwipeMenuButton());
  id v7 = v5;
  swift_retain();
  uint64_t v8 = sub_1003EA91C(0, v7, (uint64_t)sub_10037C6A8, v3);
  [v8 setAccessibilityLabel:0];
  sub_1003EA764(v2);
  swift_release_n();
  return v8;
}

void sub_10037A3E0()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void *)&Strong[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry];
    if (v2)
    {
      uint64_t v3 = *(void **)&Strong[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView];
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v2;
      *(void *)(v4 + 24) = v1;
      id v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v3;
      id v16 = sub_1001D5E40;
      uint64_t v17 = v6;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v13 = 1107296256;
      uint64_t v14 = sub_10017D530;
      uint64_t v15 = &unk_1007A7930;
      id v7 = _Block_copy(&aBlock);
      swift_retain_n();
      id v8 = v3;
      id v9 = v1;
      swift_release();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_10037C6B4;
      *(void *)(v10 + 24) = v4;
      id v16 = sub_10037CADC;
      uint64_t v17 = v10;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v13 = 1107296256;
      uint64_t v14 = sub_1001C7318;
      uint64_t v15 = &unk_1007A7980;
      objc_super v11 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v5 animateWithDuration:4 delay:v7 options:v11 animations:0.3 completion:0.0];
      _Block_release(v11);
      _Block_release(v7);

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_10037A638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  return _swift_task_switch(sub_10037A6B4, 0, 0);
}

uint64_t sub_10037A6B4()
{
  sub_100584CA4((*(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) & 1) == 0);
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10037A77C;
  return v3();
}

uint64_t sub_10037A77C()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10037A8B8, v1, v0);
}

uint64_t sub_10037A8B8()
{
  swift_release();
  sub_10037A920();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10037A920()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (!v2)
  {
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
    if ([v10 effectiveUserInterfaceLayoutDirection] == (id)1)
    {
      unint64_t v11 = sub_1001A39D4((unint64_t)_swiftEmptyArrayStorage);
      sub_1000098F4(v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100009614((unint64_t)_swiftEmptyArrayStorage);
    }
    if ([v10 effectiveUserInterfaceLayoutDirection] != (id)1)
    {
      sub_1000098F4((unint64_t)_swiftEmptyArrayStorage);
      return;
    }
    unint64_t v16 = sub_1001A39D4((unint64_t)_swiftEmptyArrayStorage);
    sub_100009614(v16);
    goto LABEL_28;
  }
  swift_retain();
  id v3 = sub_1003EB9B0();
  sub_1003EA764(*(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked));

  signed int v4 = [*(id *)(v2 + 32) minimumSupportedAppVersion];
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  if (static Journaling.EntryViewModel.currentAppVersion >= v4)
  {
    unint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    unint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1006D6D00;
    *(void *)(v13 + 32) = sub_1003EB9B0();
    specialized Array._endMutation()();
    if ([v12 effectiveUserInterfaceLayoutDirection] == (id)1)
    {
      unint64_t v14 = swift_bridgeObjectRetain();
      unint64_t v15 = sub_1001A39D4(v14);
      sub_1000098F4(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100009614(v13);
    }
    swift_bridgeObjectRelease();
    unint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1006D6D10;
    *(void *)(v18 + 32) = sub_1003EB9D0();
    *(void *)(v18 + 40) = sub_1003EB9F0();
    specialized Array._endMutation()();
    if ([v12 effectiveUserInterfaceLayoutDirection] == (id)1)
    {
      unint64_t v19 = swift_bridgeObjectRetain();
      unint64_t v20 = sub_1001A39D4(v19);
      sub_100009614(v20);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_28:
      swift_bridgeObjectRelease();
      return;
    }
    sub_1000098F4(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int16 v5 = (unsigned __int16)[*(id *)(v2 + 32) minimumSupportedAppVersionMode];
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
    if ((unsigned __int16)(v5 - 1) >= 2u)
    {
      if ([*(id *)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView) effectiveUserInterfaceLayoutDirection] == (id)1)
      {
        unint64_t v17 = sub_1001A39D4((unint64_t)_swiftEmptyArrayStorage);
        sub_1000098F4(v17);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100009614((unint64_t)_swiftEmptyArrayStorage);
      }
      id v21 = [v6 effectiveUserInterfaceLayoutDirection];
    }
    else
    {
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      unint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1006D6D00;
      *(void *)(v7 + 32) = sub_1003EB9B0();
      specialized Array._endMutation()();
      if ([v6 effectiveUserInterfaceLayoutDirection] == (id)1)
      {
        unint64_t v8 = swift_bridgeObjectRetain();
        unint64_t v9 = sub_1001A39D4(v8);
        sub_1000098F4(v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100009614(v7);
      }
      swift_bridgeObjectRelease();
      id v21 = [v6 effectiveUserInterfaceLayoutDirection];
    }
    if (v21 == (id)1)
    {
      unint64_t v22 = sub_1001A39D4((unint64_t)_swiftEmptyArrayStorage);
      sub_100009614(v22);
      swift_release();
      goto LABEL_28;
    }
    sub_1000098F4((unint64_t)_swiftEmptyArrayStorage);
  }

  swift_release();
}

char *sub_10037AD94()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = qword_1007F7BB8;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10083E8A0;
  id v3 = [self systemIndigoColor];
  if (qword_1007F7A30 != -1) {
    swift_once();
  }
  id v4 = objc_allocWithZone((Class)type metadata accessor for EntrySwipeMenuButton());
  id v5 = v2;
  id v6 = v3;
  swift_retain();
  unint64_t v7 = sub_1003EA91C(v2, v6, (uint64_t)sub_10037C624, v0);
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setAccessibilityLabel:v8];
  swift_release_n();

  return v7;
}

void sub_10037AF18()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void *)&Strong[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry];
    if (v2)
    {
      id v3 = *(void **)&Strong[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView];
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v1;
      *(void *)(v4 + 24) = v2;
      id v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v3;
      unint64_t v16 = sub_1001D5E40;
      uint64_t v17 = v6;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v13 = 1107296256;
      unint64_t v14 = sub_10017D530;
      unint64_t v15 = &unk_1007A7868;
      unint64_t v7 = _Block_copy(&aBlock);
      swift_retain_n();
      id v8 = v3;
      id v9 = v1;
      swift_release();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_10037C630;
      *(void *)(v10 + 24) = v4;
      unint64_t v16 = sub_10037CADC;
      uint64_t v17 = v10;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v13 = 1107296256;
      unint64_t v14 = sub_1001C7318;
      unint64_t v15 = &unk_1007A78B8;
      unint64_t v11 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v5 animateWithDuration:4 delay:v7 options:v11 animations:0.3 completion:0.0];
      _Block_release(v11);
      _Block_release(v7);

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_10037B170(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v6 = swift_retain();
    v5(v6, 1, ObjectType, v3);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

char *sub_10037B234()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = qword_1007F7BC0;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10083E8A8;
  if (qword_1007F7188 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10083D750;
  if (qword_1007F7A20 != -1) {
    swift_once();
  }
  id v4 = objc_allocWithZone((Class)type metadata accessor for EntrySwipeMenuButton());
  id v5 = v2;
  id v6 = v3;
  swift_retain();
  unint64_t v7 = sub_1003EA91C(v2, v6, (uint64_t)sub_10037C5F0, v0);
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setAccessibilityLabel:v8];
  swift_release_n();

  return v7;
}

void sub_10037B3C8()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void *)&Strong[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry];
    if (v2)
    {
      uint64_t v3 = *(void **)&Strong[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView];
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v1;
      *(void *)(v4 + 24) = v2;
      id v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v3;
      unint64_t v16 = sub_1001D4CE4;
      uint64_t v17 = v6;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v13 = 1107296256;
      unint64_t v14 = sub_10017D530;
      unint64_t v15 = &unk_1007A77A0;
      unint64_t v7 = _Block_copy(&aBlock);
      swift_retain_n();
      id v8 = v3;
      id v9 = v1;
      swift_release();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_10037C5FC;
      *(void *)(v10 + 24) = v4;
      unint64_t v16 = sub_10037C61C;
      uint64_t v17 = v10;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v13 = 1107296256;
      unint64_t v14 = sub_1001C7318;
      unint64_t v15 = &unk_1007A77F0;
      unint64_t v11 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v5 animateWithDuration:4 delay:v7 options:v11 animations:0.3 completion:0.0];
      _Block_release(v11);
      _Block_release(v7);

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_10037B620(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a2, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

double *sub_10037B6B4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  uint64_t v2 = qword_1007F7560;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1007F7BB8;
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10083E8A0;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v1;
  id v7 = v4;
  swift_retain();
  id v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v9 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) == 1)
  {
    if (qword_1007F7B50 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_10083E838;
  }
  else
  {
    if (qword_1007F7B40 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_10083E828;
  }
  unint64_t v11 = (void *)*v10;
  if (*(unsigned char *)(v1 + v9) != 1)
  {
    uint64_t v14 = qword_1007F7508;
    id v15 = v11;
    if (v14 == -1) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
  uint64_t v12 = qword_1007F7510;
  id v13 = v11;
  if (v12 != -1) {
LABEL_30:
  }
    swift_once();
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v1;
  swift_retain();
  id v38 = v11;
  unint64_t v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1006D6D10;
  *(void *)(v19 + 32) = v8;
  *(void *)(v19 + 40) = v18;
  UIMenuElementSize preferredElementSize = v19;
  specialized Array._endMutation()();
  id v37 = v8;
  id v20 = v18;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v42.value.super.Class isa = 0;
  v42.is_nil = 0;
  v36.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v21, (Swift::String_optional)0, v42, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  if (qword_1007F7520 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1007F7BC0;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_10083E8A8;
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v1;
  id v26 = v23;
  swift_retain();
  uint64_t v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  signed int v28 = [*(id *)(v1 + 32) minimumSupportedAppVersion];
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  if (static Journaling.EntryViewModel.currentAppVersion >= v28)
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1006D6D10;
    *(UIMenu *)(v34 + 32) = v36;
    *(void *)(v34 + 40) = v27;
    uint64_t v41 = v34;
    specialized Array._endMutation()();
    uint64_t v33 = v41;
    swift_release();

    return (double *)v33;
  }
  if ((unsigned __int16)((unsigned __int16)[*(id *)(v1 + 32) minimumSupportedAppVersionMode] - 1) >= 2u)
  {
    swift_release();

    return _swiftEmptyArrayStorage;
  }
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1006D6D00;
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1006D6D00;
  *(void *)(v30 + 32) = v20;
  UIMenuElementSize v40 = v30;
  specialized Array._endMutation()();
  id v31 = v20;
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v43.value.super.Class isa = 0;
  v43.is_nil = 0;
  *(UIMenu *)(v29 + 32) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v43, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v40, (Swift::OpaquePointer)2);
  specialized Array._endMutation()();
  uint64_t v33 = v29;

  swift_release();
  return (double *)v33;
}

void sub_10037BD70()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 16);
      uint64_t v6 = swift_retain();
      v5(v6, 1, ObjectType, v3);

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10037BE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = *(void **)(result + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a3;
    *(void *)(v7 + 24) = v5;
    id v8 = self;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v6;
    uint64_t v19 = sub_1001D5E40;
    uint64_t v20 = v9;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_10017D530;
    unint64_t v18 = &unk_1007A7AE8;
    uint64_t v10 = _Block_copy(&aBlock);
    id v11 = v6;
    swift_retain();
    id v12 = v5;
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10037C938;
    *(void *)(v13 + 24) = v7;
    uint64_t v19 = sub_10037CADC;
    uint64_t v20 = v13;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_1001C7318;
    unint64_t v18 = &unk_1007A7B38;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v8 animateWithDuration:4 delay:v10 options:v14 animations:0.3 completion:0.0];
    _Block_release(v14);
    _Block_release(v10);

    return swift_release();
  }
  return result;
}

uint64_t sub_10037C088(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor();
  swift_retain();
  id v11 = a2;
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = a1;
  v13[5] = v11;
  sub_100328A60((uint64_t)v9, a4, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_10037C1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  return _swift_task_switch(sub_10037C230, 0, 0);
}

uint64_t sub_10037C230()
{
  sub_100584CA4((*(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) & 1) == 0);
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10037C2F8;
  return v3();
}

uint64_t sub_10037C2F8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10037CA7C, v1, v0);
}

void sub_10037C434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a3, ObjectType, v7);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

UIMenu sub_10037C4E8()
{
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  UIMenuElementSize preferredElementSize = sub_10037B6B4();
  v0._uint64_t countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  v4.value.super.Class isa = 0;
  v4.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v0, (Swift::String_optional)0, v4, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v3);
}

uint64_t sub_10037C5B8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10037C5F0()
{
}

uint64_t sub_10037C5FC()
{
  return sub_10037B620(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10037C604(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10037C614()
{
  return swift_release();
}

uint64_t sub_10037C61C(uint64_t a1)
{
  return sub_10000A204(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_10037C624()
{
}

uint64_t sub_10037C630()
{
  return sub_10037B170(*(void *)(v0 + 16));
}

uint64_t sub_10037C638()
{
  return swift_deallocObject();
}

uint64_t sub_10037C670()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10037C6A8()
{
}

uint64_t sub_10037C6B4()
{
  return sub_10037C088(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1007A79B8, (uint64_t)&unk_100809ED0);
}

uint64_t sub_10037C6F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10002C194;
  return sub_10037A638(a1, v4, v5, v7, v6);
}

id sub_10037C7B0()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = self;
  v7[4] = sub_10037C8C8;
  v7[5] = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_1005D2ABC;
  v7[3] = &unk_1007A79F8;
  Swift::OpaquePointer v3 = _Block_copy(v7);
  id v4 = v0;
  swift_retain();
  swift_release();
  id v5 = [v2 configurationWithIdentifier:0 previewProvider:0 actionProvider:v3];
  swift_release();
  _Block_release(v3);
  return v5;
}

UIMenu sub_10037C8C8()
{
  return sub_10037C4E8();
}

void sub_10037C8D4()
{
}

uint64_t sub_10037C8E0(uint64_t a1)
{
  return sub_10037BE54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10037C8EC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10037C92C(uint64_t a1)
{
  sub_10037C434(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10037C938()
{
  return sub_10037C088(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1007A7B70, (uint64_t)&unk_100809EF8);
}

uint64_t sub_10037C974()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10037C9BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_10037C1B4(a1, v4, v5, v7, v6);
}

id sub_10037CC08()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15MOMapAnnotationCMa();
  return [super dealloc];
}

uint64_t _s15MOMapAnnotationCMa()
{
  return self;
}

void *sub_10037CC74(int a1)
{
  objc_super v2 = _swiftEmptyArrayStorage;
  unint64_t v32 = (unint64_t)_swiftEmptyArrayStorage;
  Swift::OpaquePointer v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (v3)
  {
    uint64_t v5 = v3;
    id v6 = [v5 visibleCells];
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v8 = (unint64_t)sub_1000E5138(v7);
    swift_bridgeObjectRelease();
    if (!v8) {
      unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    if ((v8 & 0x8000000000000000) != 0 || (v8 & 0x4000000000000000) != 0) {
      goto LABEL_42;
    }
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v31 = v9;
      sub_1003842F0(&v31);
      swift_bridgeObjectRelease();
      uint64_t v10 = v31;
      if (v31 < 0 || (v31 & 0x4000000000000000) != 0)
      {
        swift_retain();
        unint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (!v11)
        {
LABEL_44:

          swift_release();
          return _swiftEmptyArrayStorage;
        }
      }
      else
      {
        unint64_t v11 = *(void *)(v31 + 16);
        if (!v11) {
          goto LABEL_44;
        }
      }
      uint64_t v29 = v5;
      int v30 = a1;
      while (!__OFSUB__(v11--, 1))
      {
        if ((v10 & 0xC000000000000001) != 0)
        {
          uint64_t v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_40;
          }
          if (v11 >= *(void *)(v10 + 16)) {
            goto LABEL_41;
          }
          uint64_t v17 = (char *)*(id *)(v10 + 32 + 8 * v11);
        }
        uint64_t v15 = v17;
        if (v17[OBJC_IVAR____TtC7Journal10MosaicCell_index + 8])
        {

LABEL_37:
          swift_release();
          return (void *)v32;
        }
        if (*(uint64_t *)&v17[OBJC_IVAR____TtC7Journal10MosaicCell_index] < 5 || (a1 & 1) != 0)
        {
          uint64_t v5 = *(char **)&v17[OBJC_IVAR____TtC7Journal10MosaicCell_canvasAssetView];
          unint64_t v18 = *(void **)&v5[OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView];
          if (v18)
          {
            type metadata accessor for VideoAssetGridView();
            uint64_t v19 = swift_dynamicCastClass();
            if (v19)
            {
              uint64_t v20 = v19;
              uint64_t v21 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
              switch(*(unsigned char *)(v19 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
              {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  uint64_t v23 = v5;
                  id v24 = v18;
                  swift_bridgeObjectRelease();
                  if (v22) {
                    goto LABEL_13;
                  }
                  switch(*(unsigned char *)(v20 + v21))
                  {
                    case 2:
                      goto LABEL_12;
                    default:
                      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v25) {
                        goto LABEL_13;
                      }
                      switch(*(unsigned char *)(v20 + v21))
                      {
                        case 5:
                          goto LABEL_12;
                        default:
                          char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          if (v26) {
                            goto LABEL_13;
                          }
                          break;
                      }
                      break;
                  }
                  break;
                default:
                  uint64_t v12 = v5;
                  id v13 = v18;
LABEL_12:
                  swift_bridgeObjectRelease();
LABEL_13:
                  id v14 = v18;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  }
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                  break;
              }

              uint64_t v15 = v18;
              a1 = v30;
            }
          }
        }

        if (!v11) {
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      unint64_t v28 = swift_bridgeObjectRetain();
      uint64_t v9 = (uint64_t)sub_1000CCCBC(v28);
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t sub_10037D1F0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100010218(&qword_10080A220);
    objc_super v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  id v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    sub_10001B284(0, (unint64_t *)&unk_10080A670);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_10002102C((_OWORD *)((char *)v33 + 8), v31);
    sub_10002102C(v31, v33);
    sub_10002102C(v33, v32);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << v2[32];
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)&v6[8 * v23];
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_10002102C(v32, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_100082D3C();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10037D5A4(unint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaDictionary.count.getter()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v5 = ~v8;
    unint64_t v35 = a1 + 64;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 64);
    unint64_t v7 = a1;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_100010218((uint64_t *)&unk_10080A150);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v4 = __CocoaDictionary.makeIterator()();
  unint64_t v35 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = v4 | 0x8000000000000000;
LABEL_11:
  int64_t v34 = (unint64_t)(v5 + 64) >> 6;
  int64_t v11 = v3 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v36 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    uint64_t v17 = __CocoaDictionary.Iterator.next()();
    if (!v17) {
      goto LABEL_45;
    }
    uint64_t v19 = v18;
    *(void *)&long long v41 = v17;
    sub_10001B284(0, (unint64_t *)&qword_1007FF330);
    swift_dynamicCast();
    uint64_t v47 = v19;
    Swift::Int v20 = v46;
LABEL_36:
    *(void *)&v45[0] = v20;
    sub_10001B284(0, (unint64_t *)&qword_1007FF330);
    swift_dynamicCast();
    swift_dynamicCast();
    long long v41 = v37;
    long long v42 = v38;
    uint64_t v43 = v39;
    sub_10002102C(&v40, v44);
    long long v37 = v41;
    long long v38 = v42;
    uint64_t v39 = v43;
    sub_10002102C(v44, v45);
    sub_10002102C(v45, &v41);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v27 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~v11[v28 >> 6]) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v28) & ~v11[v28 >> 6])) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = v11[v29];
      }
      while (v33 == -1);
      unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)((char *)v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = v3[6] + 40 * v13;
    *(_OWORD *)uint64_t v14 = v37;
    *(_OWORD *)(v14 + 16) = v38;
    *(void *)(v14 + 32) = v39;
    uint64_t result = (uint64_t)sub_10002102C(&v41, (_OWORD *)(v3[7] + 32 * v13));
    ++v3[2];
  }
  if (v6)
  {
    unint64_t v15 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v16 = v15 | (v36 << 6);
LABEL_35:
    Swift::Int v20 = *(void **)(*(void *)(v7 + 48) + 8 * v16);
    uint64_t v25 = *(void *)(*(void *)(v7 + 56) + 8 * v16);
    uint64_t v46 = v20;
    uint64_t v47 = v25;
    id v26 = v20;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
  int64_t v21 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v21 >= v34) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v21);
  int64_t v23 = v36 + 1;
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v36 + 2;
  if (v36 + 2 >= v34) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v36 + 3;
  if (v36 + 3 >= v34) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v36 + 4;
  if (v36 + 4 >= v34) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_34:
    unint64_t v6 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v23 << 6);
    int64_t v36 = v23;
    goto LABEL_35;
  }
  int64_t v24 = v36 + 5;
  if (v36 + 5 >= v34)
  {
LABEL_45:
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    swift_release();
    sub_100082D3C();
    return (uint64_t)v3;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v36 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v34) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_34;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_10037DA3C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100010218((uint64_t *)&unk_10080A150);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10001B648(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10002102C(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_10002102C(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_10002102C(v36, v37);
    sub_10002102C(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~v6[v21 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~v6[v21 >> 6])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = v6[v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_10002102C(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_100082D3C();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}