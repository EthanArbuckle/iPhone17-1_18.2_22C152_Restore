id OSLogForCategory(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  os_log_t v5;
  const char *v6;
  uint8_t *v7;
  id v8;
  __int16 v10;
  uint8_t buf[2];
  uint64_t vars8;

  v1 = a1;
  v2 = &_os_log_default;
  if (qword_100815DC8 == -1)
  {
    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    dispatch_once(&qword_100815DC8, &stru_100790C60);
    if (v1)
    {
LABEL_3:
      v3 = [(id)qword_100815DC0 objectForKey:v1];

      if (v3) {
        goto LABEL_15;
      }
      if ((unint64_t)[(id)qword_100815DC0 count] > 0xA)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
        {
LABEL_12:
          v3 = &_os_log_default;
          v8 = &_os_log_default;
          goto LABEL_15;
        }
        v10 = 0;
        v6 = "ERROR | Too many categories defined, use default";
        v7 = (uint8_t *)&v10;
      }
      else
      {
        v4 = v1;
        v5 = os_log_create("com.apple.VoiceMemos", (const char *)[v4 UTF8String]);
        if (v5)
        {
          v3 = v5;
          [(id)qword_100815DC0 setObject:v5 forKey:v4];
          goto LABEL_15;
        }
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_12;
        }
        *(_WORD *)buf = 0;
        v6 = "ERROR | Failed os_log_create, use default";
        v7 = buf;
      }
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, v6, v7, 2u);
      goto LABEL_12;
    }
  }
  v3 = &_os_log_default;
LABEL_15:

  return v3;
}

void sub_100004690(id a1)
{
  qword_100815DC0 = (uint64_t)[objc_alloc((Class)NSMutableDictionary) initWithCapacity:10];

  _objc_release_x1();
}

void sub_10000485C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)RCActivityWaveformProcessor;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10000488C(void *a1)
{
}

void sub_100004B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100004BBC(uint64_t a1, int a2, int a3, void *a4)
{
  sub_100004D80(a1);
  vm_size_t v8 = (vm_page_size + 4 * a2 - 1) & -(uint64_t)vm_page_size;
  *(_DWORD *)(a1 + 32) = v8 >> 2;
  v9 = (char *)malloc_type_calloc(3 * a3, 8uLL, 0x80040B8603338uLL);
  *(void *)a1 = &v9[8 * a3];
  *(void *)(a1 + 8) = &v9[16 * a3];
  *(void *)(a1 + 16) = v9;
  if (a3 < 1) {
    return 1;
  }
  **(void **)(a1 + 16) = sub_1000062A0(v8, 10, a4);
  uint64_t v10 = **(void **)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = 0;
    uint64_t v12 = a3;
    uint64_t v13 = a3 - 1;
    while (1)
    {
      *(void *)(*(void *)a1 + 8 * v11) = v10;
      *(void *)(*(void *)(a1 + 8) + 8 * v11) = *(void *)(*(void *)(a1 + 16) + 8 * v11);
      *(_DWORD *)(a1 + 36) = v11 + 1;
      if (v13 == v11) {
        return v11 + 1 >= v12;
      }
      *(void *)(*(void *)(a1 + 16) + 8 * v11 + 8) = sub_1000062A0(v8, 10, a4);
      uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 8 * v11++ + 8);
      if (!v10)
      {
        BOOL v14 = v11 >= v12;
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v14 = 0;
LABEL_9:
    sub_100004D80(a1);
  }
  return v14;
}

id sub_100004D14(uint64_t a1)
{
  return [*(id *)(a1 + 32) activityWaveformProcessor:* (double *)(*(void *)(a1 + 40) + 112)];
}

double sub_100004D80(uint64_t a1)
{
  v2 = *(void **)(a1 + 16);
  if (v2)
  {
    if (*(int *)(a1 + 36) >= 1)
    {
      uint64_t v3 = 0;
      do
        sub_100006284(*(void *)(*(void *)(a1 + 16) + 8 * v3++), 4 * *(int *)(a1 + 32));
      while (v3 < *(int *)(a1 + 36));
      v2 = *(void **)(a1 + 16);
    }
    free(v2);
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  atomic_store(0, (unsigned int *)(a1 + 40));
  return result;
}

void sub_100004F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100004F74(uint64_t result, unsigned int a2)
{
  uint64_t v2 = *(unsigned int *)(result + 36);
  int v3 = (int)(*(_DWORD *)(result + 24) + a2) % *(_DWORD *)(result + 32);
  *(_DWORD *)(result + 24) = v3;
  if ((int)v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 8 * v2;
    do
    {
      *(void *)(*(void *)(result + 8) + v4) = *(void *)(*(void *)(result + 16) + v4) + 4 * v3;
      v4 += 8;
    }
    while (v5 != v4);
  }
  atomic_fetch_add((atomic_uint *volatile)(result + 40), a2);
  signed int v6 = atomic_load((unsigned int *)(result + 40));
  if (v6 > *(_DWORD *)(result + 32)) {
    sub_100675270();
  }
  return result;
}

id sub_100004FEC(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  if (*(float *)&a2 != -1.0) {
    a2 = sub_10000503C(*(uint64_t **)(*(void *)(a1 + 32) + 72), *(float *)&a2);
  }
  int v3 = *(void **)(a1 + 32);

  return [v3 consumeRingBufferIfNecessary:a2];
}

double sub_10000503C(uint64_t *a1, float a2)
{
  int v2 = *((_DWORD *)a1 + 7);
  unint64_t v3 = *((int *)a1 + 6);
  if (v2 >= (int)v3)
  {
    uint64_t v4 = a1[4];
    uint64_t v5 = *a1;
    double v6 = *((double *)a1 + 5) - *(float *)(*a1 + 4 * v4);
  }
  else
  {
    *((_DWORD *)a1 + 7) = v2 + 1;
    uint64_t v4 = a1[4];
    uint64_t v5 = *a1;
    double v6 = *((double *)a1 + 5);
  }
  *(float *)(v5 + 4 * v4) = a2;
  double result = v6 + a2;
  *((double *)a1 + 5) = result;
  a1[4] = (v4 + 1) % v3;
  return result;
}

uint64_t sub_1000052E8(uint64_t result, int a2)
{
  int v2 = (*(_DWORD *)(result + 28) + a2) % *(_DWORD *)(result + 32);
  *(_DWORD *)(result + 28) = v2;
  uint64_t v3 = *(unsigned int *)(result + 36);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 8 * v3;
    do
    {
      *(void *)(*(void *)result + v4) = *(void *)(*(void *)(result + 16) + v4) + 4 * v2;
      v4 += 8;
    }
    while (v5 != v4);
  }
  atomic_fetch_add((atomic_uint *volatile)(result + 40), -a2);
  unsigned int v6 = atomic_load((unsigned int *)(result + 40));
  if ((v6 & 0x80000000) != 0) {
    sub_10067529C();
  }
  return result;
}

void *sub_100005470(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1000054E8(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1000054CC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1000054E8(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_10000552C();
  }
  double result = (char *)sub_100005544((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void sub_10000552C()
{
}

void *sub_100005544(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_10000560C();
  }
  return operator new(4 * a2);
}

void sub_10000557C(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1000055D8(exception, a1);
}

void sub_1000055C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1000055D8(std::logic_error *a1, const char *a2)
{
  double result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_10000560C()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_100005A64(id a1)
{
  qword_100815DD0 = objc_opt_new();

  _objc_release_x1();
}

void sub_100005F30(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7 = qword_100815DE0;
  BOOL v8 = os_log_type_enabled((os_log_t)qword_100815DE0, OS_LOG_TYPE_INFO);
  if (v6)
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "(checkForProvisionedAppleAccount) Log and handle error. Device or account state does not permit refresh. Proceed as if offline", buf, 2u);
    }
    (*(void (**)(void, uint64_t, void, id))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 1, 0, [v5 isEnabledForDataclass:ACAccountDataclassMoments]);
  }
  else
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "(checkForProvisionedAppleAccount) Finished discovering account successfully and checking if it's provisioned with _handleDiscoveredAccount", buf, 2u);
    }
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100006094;
    v9[3] = &unk_100790D60;
    id v10 = *(id *)(a1 + 32);
    +[AppleAccountUtility _handleDiscoveredAccount:v5 completion:v9];
  }
}

uint64_t sub_100006094(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100006284(vm_address_t address, uint64_t a2)
{
  return vm_deallocate(mach_task_self_, address, 2 * a2);
}

vm_address_t sub_1000062A0(vm_size_t a1, int a2, void *a3)
{
  kern_return_t v9;
  mach_error_t v10;
  __CFString *v11;
  kern_return_t v12;
  mach_error_t v13;
  kern_return_t v14;
  vm_address_t v15;
  mach_error_t v16;
  id v17;
  id v18;
  BOOL v19;
  void *v21;
  vm_prot_t cur_protection[2];
  vm_address_t target_address;
  vm_address_t address;
  NSErrorUserInfoKey v27;
  CFStringRef v28;

  if (a2 >= 1)
  {
    id v5 = 0;
    vm_size_t v6 = a1 - 1;
    vm_size_t v7 = 2 * a1;
    int v8 = 1;
    while (1)
    {
      if (((v6 + vm_page_size) & -(uint64_t)vm_page_size) != a1) {
        sub_1006752C8();
      }
      address = 0;
      v9 = vm_allocate(mach_task_self_, &address, v7, 1);
      if (v9) {
        break;
      }
      uint64_t v12 = vm_deallocate(mach_task_self_, address + a1, a1);
      if (v12)
      {
        uint64_t v13 = v12;
        vm_deallocate(mach_task_self_, address, a1);
        uint64_t v11 = @"VMVMRingBuffer vm_deallocate failed";
        id v10 = v13;
        goto LABEL_10;
      }
      *(void *)cur_protection = 0;
      target_address = address + a1;
      BOOL v14 = vm_remap(mach_task_self_, &target_address, a1, 0, 0, mach_task_self_, address, 0, &cur_protection[1], cur_protection, 1u);
      v15 = address;
      if (v14)
      {
        v16 = v14;
        vm_deallocate(mach_task_self_, address, a1);
        uint64_t v11 = @"VMVMRingBuffer vm_remap failed";
        id v10 = v16;
        goto LABEL_10;
      }
      if (target_address != address + a1)
      {
        vm_deallocate(mach_task_self_, target_address, a1);
        vm_deallocate(mach_task_self_, address, a1);
        v27 = NSLocalizedDescriptionKey;
        v28 = @"VMVMRingBuffer vm_remap failed to map to correct offset";
        v21 = +[NSDictionary dictionaryWithObjects:&v28 forKeys:&v27 count:1];
        v17 = +[NSError errorWithDomain:@"com.apple.VoiceMemos.ErrorDomain" code:0 userInfo:v21];

        goto LABEL_11;
      }
      v17 = 0;
LABEL_12:
      v18 = v17;

      v19 = v15 == 0;
      if (!v15)
      {
        id v5 = v18;
        if (v8++ < a2) {
          continue;
        }
      }
      goto LABEL_19;
    }
    id v10 = v9;
    uint64_t v11 = @"VMVMRingBuffer vm_allocate failed";
LABEL_10:
    sub_10000654C(v11, v10);
    v17 = (id)objc_claimAutoreleasedReturnValue();
LABEL_11:
    v15 = 0;
    goto LABEL_12;
  }
  v15 = 0;
  v18 = 0;
  v19 = 1;
LABEL_19:
  if (a3 && v19) {
    *a3 = v18;
  }

  return v15;
}

id sub_10000654C(void *a1, mach_error_t a2)
{
  id v3 = a1;
  uint64_t v4 = +[NSString stringWithFormat:@"%@ - %s", v3, mach_error_string(a2)];

  NSErrorUserInfoKey v8 = NSDebugDescriptionErrorKey;
  v9 = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
  vm_size_t v6 = +[NSError errorWithDomain:NSMachErrorDomain code:a2 userInfo:v5];

  return v6;
}

id sub_100006CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _[*(id *)(a1 + 32) updateFrameForSlice:a3 sliceType:a4 atIndex:a2];
}

id sub_1000084C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _[*(id *)(a1 + 32) updateFrameForSlice:a3 sliceType:a4 atIndex:a2];
}

void sub_100008648(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100008720(double a1, double a2, double a3, double a4)
{
  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for EntrySwipeMenuView();
  [super setBounds:a1, a2, a3, a4];
  [v4 bounds];
  double v10 = v9 + v9;
  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
  [v4 bounds];
  [v11 setContentSize:v10, v12];
  uint64_t v13 = *(void **)&v4[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint];
  if (v13)
  {
    BOOL v14 = *(void **)&v4[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
    id v15 = v13;
    [v14 frame];
    double v17 = v16;
    if (qword_1007F72D8 != -1) {
      swift_once();
    }
    [v15 setConstant:v17 + *(double *)&qword_10083D8A0];
  }
}

id sub_100008860(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView;
  id v10 = objc_allocWithZone((Class)UIScrollView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint] = 0;
  uint64_t v13 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_firstLeftButtonX] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastRightButtonX] = 0;
  id v15 = &v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_desiredOffsetTargetX];
  *(void *)id v15 = 0;
  v15[8] = 1;
  *(void *)&v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_animDuration] = 0x3FC3333333333333;
  double v16 = &v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastTargetOffset];
  *(void *)double v16 = 0;
  v16[8] = 1;
  v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft] = 0;
  v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight] = 0;
  v11[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging] = 0;
  uint64_t v17 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_hapticGenerator;
  *(void *)&v11[v17] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:3];

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for EntrySwipeMenuView();
  id v18 = [super initWithFrame:a1, a2, a3, a4];
  sub_100008C68();

  return v18;
}

id sub_100008A70(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView;
  id v4 = objc_allocWithZone((Class)UIScrollView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint] = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_firstLeftButtonX] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastRightButtonX] = 0;
  uint64_t v9 = &v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_desiredOffsetTargetX];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  *(void *)&v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_animDuration] = 0x3FC3333333333333;
  id v10 = &v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastTargetOffset];
  *(void *)id v10 = 0;
  v10[8] = 1;
  v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft] = 0;
  v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight] = 0;
  v5[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging] = 0;
  uint64_t v11 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_hapticGenerator;
  *(void *)&v5[v11] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:3];

  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for EntrySwipeMenuView();
  [super initWithCoder:a1];
  id v13 = v12;
  if (v12)
  {
    id v14 = v12;
    sub_100008C68();
  }
  return v13;
}

id sub_100008C68()
{
  uint64_t v1 = v0;
  int v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
  [v0 addSubview:v2];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  id v3 = [v2 frameLayoutGuide];
  id v4 = [v3 heightAnchor];

  id v5 = [v2 contentLayoutGuide];
  id v6 = [v5 heightAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6];
  [v7 setActive:1];

  uint64_t v8 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView;
  [v2 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView]];
  id v9 = *(id *)&v1[v8];
  id v10 = [v9 superview];
  uint64_t v11 = &stru_1007D7000;
  if (v10)
  {
    id v12 = v10;
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v9 topAnchor];
    id v14 = [v12 topAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:0.0];
    if (v15)
    {
      id v15 = v15;
      [v15 setActive:1];

      id v9 = v15;
    }

    uint64_t v11 = &stru_1007D7000;
  }
  else
  {
    id v15 = 0;
    id v12 = v9;
  }

  id v16 = *(id *)&v1[v8];
  id v17 = sub_1001DD438(0, 1, 0.0);

  id v18 = *(id *)&v1[v8];
  id v19 = [v18 superview];
  if (v19)
  {
    objc_super v20 = v19;
    [v18 v11[96].name];
    id v21 = [v18 trailingAnchor];
    id v22 = [v20 trailingAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:0.0];
    if (v23)
    {
      id v23 = v23;
      [v23 setActive:1];

      id v18 = v23;
    }

    uint64_t v11 = &stru_1007D7000;
  }
  else
  {
    id v23 = 0;
    objc_super v20 = v18;
  }

  id v24 = *(id *)&v1[v8];
  id v25 = [v24 superview];
  if (v25)
  {
    v26 = v25;
    [v24 v11[96].name];
    id v27 = [v24 leadingAnchor];
    id v28 = [v26 leadingAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    if (v29)
    {
      id v30 = v29;
      [v30 setActive:1];

      id v24 = v30;
    }
  }
  else
  {
    id v29 = 0;
    v26 = v24;
  }

  v31 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint] = v29;

  sub_100009368();
  sub_100009354();
  [v1 bringSubviewToFront:v2];
  [v2 setDelegate:v1];
  [v2 setDecelerationRate:UIScrollViewDecelerationRateFast];
  [v2 setShowsHorizontalScrollIndicator:0];
  [v2 setShowsVerticalScrollIndicator:0];
  id v32 = [v2 layer];
  [v32 setMasksToBounds:0];

  v33 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
  [v33 setAlpha:0.0];
  v34 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView];
  [v34 setAlpha:0.0];
  [v33 setUserInteractionEnabled:0];
  [v34 setUserInteractionEnabled:0];
  [v1 setSemanticContentAttribute:3];
  [v2 setSemanticContentAttribute:3];
  [v33 setSemanticContentAttribute:3];

  return [v34 setSemanticContentAttribute:3];
}

void sub_1000091E8(uint64_t a1)
{
  int v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView;
  id v5 = *(id *)&v2[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView];
  id v6 = [v5 subviews];
  sub_1000108BC();
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    [v10 removeFromSuperview];
  }
LABEL_10:

  swift_bridgeObjectRelease();
  [*(id *)&v2[v4] addSubview:a1];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();

  [v2 layoutIfNeeded];
}

void sub_100009354()
{
}

void sub_100009368()
{
}

void sub_10000937C(void *a1, SEL *a2)
{
  uint64_t v4 = *(void **)&v2[*a1];
  id v5 = [v4 superview];

  if (!v5)
  {
    [v4 setAxis:0];
    [v2 addSubview:v4];
    id v6 = [v4 superview];
    if (v6)
    {
      unint64_t v7 = v6;
      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v8 = [v4 centerYAnchor];
      id v9 = [v7 centerYAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];

      [v10 setConstant:0.0];
      if (v10)
      {
        id v11 = v10;
        [v11 setActive:1];
      }
    }
    id v12 = [v4 superview];
    if (v12)
    {
      id v13 = v12;
      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v14 = [v4 *a2];
      id v15 = [v13 *a2];
      id v16 = [v14 constraintEqualToAnchor:v15];

      [v16 setConstant:0.0];
      if (v16)
      {
        id v17 = v16;
        [v17 setActive:1];
      }
    }
    if (qword_1007F72D8 != -1) {
      swift_once();
    }
    [v4 setSpacing:*(double *)&qword_10083D8A0];
    [v4 setAccessibilityElementsHidden:1];
  }
}

void sub_100009614(unint64_t a1)
{
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
  id v5 = [v4 arrangedSubviews];
  sub_1000108BC();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    id v10 = v9;
    [v9 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_19;
    }
  }
  if (v11 < 1)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_21;
  }
  uint64_t v12 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(a1 + 8 * v12 + 32);
    }
    id v14 = v13;
    ++v12;
    [v4 addArrangedSubview:v13];
    [v14 layoutIfNeeded];
  }
  while (v11 != v12);
LABEL_19:
  swift_bridgeObjectRelease();
  [v1 bounds];
  double v16 = v15 + v15;
  id v17 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
  [v1 bounds];
  [v17 setContentSize:v16, v18];
  id v19 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint];
  if (!v19) {
    return;
  }
  id v21 = v19;
  [v4 frame];
  double v2 = v20;
  if (qword_1007F72D8 != -1) {
    goto LABEL_27;
  }
LABEL_21:
  [v21 setConstant:v2 + *(double *)&qword_10083D8A0];
}

void sub_1000098F4(unint64_t a1)
{
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView];
  id v5 = [v4 arrangedSubviews];
  sub_1000108BC();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    id v10 = v9;
    [v9 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_19;
    }
  }
  if (v11 < 1)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_21;
  }
  for (uint64_t j = 0; j != v11; ++j)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(a1 + 8 * j + 32);
    }
    id v14 = v13;
    [v4 addArrangedSubview:v13];
  }
LABEL_19:
  swift_bridgeObjectRelease();
  [v1 bounds];
  double v16 = v15 + v15;
  id v17 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
  [v1 bounds];
  [v17 setContentSize:v16, v18];
  id v19 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint];
  if (!v19) {
    return;
  }
  double v20 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
  id v22 = v19;
  [v20 frame];
  double v2 = v21;
  if (qword_1007F72D8 != -1) {
    goto LABEL_27;
  }
LABEL_21:
  [v22 setConstant:v2 + *(double *)&qword_10083D8A0];
}

double *sub_100009BD0()
{
  unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView) arrangedSubviews];
  sub_1000108BC();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView) arrangedSubviews];
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  aBlock[0] = v2;
  double result = (double *)sub_1000C89E4(v4);
  unint64_t v6 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v7 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  double result = (double *)swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_17;
  }
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = v6 & 0xC000000000000001;
    unint64_t v25 = v6;
    do
    {
      if (v9) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      type metadata accessor for EntrySwipeMenuButton();
      uint64_t v12 = swift_dynamicCastClass();
      if (v12)
      {
        id v13 = (char *)v12;
        id v14 = v11;
        id v15 = [v13 accessibilityLabel];
        if (v15)
        {
          double v16 = v15;
          uint64_t v17 = v7;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v18 = [*(id *)&v13[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageView] image];
          uint64_t v19 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v20 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          swift_retain();
          NSString v21 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          aBlock[4] = sub_1000109B4;
          aBlock[5] = v19;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1005D2A64;
          aBlock[3] = &unk_1007959D0;
          id v22 = _Block_copy(aBlock);
          id v23 = [v20 initWithName:v21 image:v18 actionHandler:v22];

          _Block_release(v22);
          swift_release();
          swift_release();
          id v24 = v23;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          uint64_t v7 = v17;
          unint64_t v6 = v25;
        }
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    return (double *)v27;
  }
  return result;
}

void *variable initialization expression of Journaling.EntryViewModel.assetsAll()
{
  return &_swiftEmptyArrayStorage;
}

BOOL sub_100009F58()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v1 = Strong;
  if (Strong)
  {
    [Strong accessibilityActivate];
  }
  return v1 != 0;
}

void sub_100009FC0()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for EntrySwipeMenuView();
  [super layoutSubviews];
  [v0 bounds];
  double v2 = v1 + v1;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
  [v0 bounds];
  [v3 setContentSize:v2, v4];
  id v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentViewLeadingConstraint];
  if (v5)
  {
    unint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
    id v7 = v5;
    [v6 frame];
    double v9 = v8;
    if (qword_1007F72D8 != -1) {
      swift_once();
    }
    [v7 setConstant:v9 + *(double *)&qword_10083D8A0];
  }
}

id sub_10000A120(char *a1)
{
  double v2 = *(void **)&a1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
  [a1 sendSubviewToBack:v2];
  [a1 sendSubviewToBack:*(void *)&a1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView]];
  id v3 = *(void **)&a1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
  [v2 frame];
  double v5 = v4;
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  double v6 = v5 + *(double *)&qword_10083D8A0;

  return [v3 setContentOffset:v6];
}

uint64_t sub_10000A204(uint64_t result, uint64_t (*a2)(void))
{
  if (result) {
    return a2();
  }
  return result;
}

double sub_10000A234()
{
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView) frame];
  double v2 = v1;
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_10083D8A0;
  double v4 = (void *)sub_10000A9D0();
  if (v4)
  {
    double v5 = v4;
    [v4 frame];
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;

    v16.origin.x = v7;
    v16.origin.y = v9;
    v16.size.width = v11;
    v16.size.height = v13;
    double Width = CGRectGetWidth(v16);
  }
  else
  {
    if (qword_1007F72D0 != -1) {
      swift_once();
    }
    double Width = *(double *)&qword_10083D898;
  }
  return v2 + v3 + Width + *(double *)&qword_10083D8A0 * -0.5;
}

void sub_10000A354()
{
  double v1 = &selRef_drawMapRect_zoomScale_inContext_;
  id v23 = *(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView);
  id v2 = [v23 arrangedSubviews];
  sub_1000108BC();
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    sub_10000A8CC();
    if (v19)
    {
      id v20 = v19;
      NSString v21 = *(void (**)(uint64_t))&v19[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_tapClosure];
      uint64_t v22 = swift_retain();
      v21(v22);

      swift_release();
    }
    return;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_23;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v5 = 0;
    double v6 = &selRef_drawMapRect_zoomScale_inContext_;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v5 + 32);
      }
      CGFloat v9 = v8;
      id v10 = [v23 v1[68]];
      unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v18)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          char v7 = 0;
          goto LABEL_6;
        }
      }
      else if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      if ((v11 & 0xC000000000000001) != 0)
      {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_22;
        }
        id v12 = *(id *)(v11 + 32);
      }
      CGFloat v13 = v12;
      swift_bridgeObjectRelease();
      type metadata accessor for EntrySwipeMenuButton();
      uint64_t v14 = swift_dynamicCastClass();
      char v7 = v14;
      if (v14)
      {
        uint64_t v15 = v4;
        CGRect v16 = v1;
        id v17 = v9;
        char v7 = static NSObject.== infix(_:_:)();

        double v1 = v16;
        uint64_t v4 = v15;
        double v6 = &selRef_drawMapRect_zoomScale_inContext_;
      }

LABEL_6:
      ++v5;
      [v9 v6[70]:(v7 & 1) == 0];

      if (v4 == v5) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
}

void sub_10000A604()
{
  double v1 = &selRef_drawMapRect_zoomScale_inContext_;
  id v24 = *(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView);
  id v2 = [v24 arrangedSubviews];
  sub_1000108BC();
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62) {
    goto LABEL_26;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v5 = 0;
    double v6 = &selRef_drawMapRect_zoomScale_inContext_;
    while (1)
    {
      id v8 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v5 + 32);
      CGFloat v9 = v8;
      id v10 = [v24 v1[68]];
      unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v12)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          char v7 = 0;
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v12) {
          goto LABEL_5;
        }
      }
      unint64_t v13 = v12 - 1;
      if (__OFSUB__(v12, 1)) {
        break;
      }
      if ((v11 & 0xC000000000000001) != 0)
      {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v13 & 0x8000000000000000) != 0) {
          goto LABEL_24;
        }
        if (v13 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_25;
        }
        id v14 = *(id *)(v11 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      type metadata accessor for EntrySwipeMenuButton();
      uint64_t v16 = swift_dynamicCastClass();
      char v7 = v16;
      if (v16)
      {
        uint64_t v17 = v4;
        uint64_t v18 = v1;
        id v19 = v9;
        char v7 = static NSObject.== infix(_:_:)();

        double v1 = v18;
        uint64_t v4 = v17;
        double v6 = &selRef_drawMapRect_zoomScale_inContext_;
      }

LABEL_6:
      ++v5;
      [v9 v6[70]:(v7 & 1) == 0];

      if (v4 == v5) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_27:
  swift_bridgeObjectRelease();
  unint64_t v20 = sub_10000A9D0();
  if (v20)
  {
    NSString v21 = (void *)v20;
    uint64_t v22 = *(void (**)(uint64_t))(v20 + OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_tapClosure);
    uint64_t v23 = swift_retain();
    v22(v23);

    swift_release();
  }
}

void sub_10000A8CC()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView) arrangedSubviews];
  sub_1000108BC();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  type metadata accessor for EntrySwipeMenuButton();
  if (!swift_dynamicCastClass()) {
}
  }

unint64_t sub_10000A9D0()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView) arrangedSubviews];
  sub_1000108BC();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (result >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v5 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
  double v6 = v5;
  swift_bridgeObjectRelease();
  type metadata accessor for EntrySwipeMenuButton();
  unint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

void sub_10000AAEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v32 = (char *)Strong;
    id v1 = [*(id *)(Strong + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView) arrangedSubviews];
    unint64_t v31 = sub_1000108BC();
    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v3)
    {
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v4 = 0;
      CGFloat m12 = CATransform3DIdentity.m12;
      CGFloat m14 = CATransform3DIdentity.m14;
      CGFloat m13 = CATransform3DIdentity.m13;
      CGFloat m22 = CATransform3DIdentity.m22;
      CGFloat m21 = CATransform3DIdentity.m21;
      CGFloat m31 = CATransform3DIdentity.m31;
      CGFloat m24 = CATransform3DIdentity.m24;
      CGFloat m23 = CATransform3DIdentity.m23;
      CGFloat m32 = CATransform3DIdentity.m32;
      CGFloat m33 = CATransform3DIdentity.m33;
      CGFloat m34 = CATransform3DIdentity.m34;
      CGFloat m41 = CATransform3DIdentity.m41;
      CGFloat m42 = CATransform3DIdentity.m42;
      CGFloat m43 = CATransform3DIdentity.m43;
      CGFloat m44 = CATransform3DIdentity.m44;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(v2 + 8 * v4 + 32);
        }
        id v14 = v13;
        ++v4;
        id v15 = [v13 layer];
        CGFloat m11 = CATransform3DIdentity.m11;
        CGFloat v48 = m12;
        CGFloat v49 = m13;
        CGFloat v50 = m14;
        CGFloat v51 = m21;
        CGFloat v52 = m22;
        CGFloat v53 = m23;
        CGFloat v54 = m24;
        CGFloat v55 = m31;
        CGFloat v56 = m32;
        CGFloat v57 = m33;
        CGFloat v58 = m34;
        CGFloat v59 = m41;
        CGFloat v60 = m42;
        CGFloat v61 = m43;
        CGFloat v62 = m44;
        [v15 setTransform:&m11];

        [v14 setAlpha:1.0];
      }
      while (v3 != v4);
    }
    swift_bridgeObjectRelease();
    id v16 = [*(id *)&v32[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView] arrangedSubviews];
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_13:
        if (v18 >= 1)
        {
          uint64_t v19 = 0;
          CGFloat v46 = CATransform3DIdentity.m12;
          CGFloat v42 = CATransform3DIdentity.m14;
          CGFloat v44 = CATransform3DIdentity.m13;
          CGFloat v38 = CATransform3DIdentity.m22;
          CGFloat v40 = CATransform3DIdentity.m21;
          CGFloat v20 = CATransform3DIdentity.m31;
          CGFloat v34 = CATransform3DIdentity.m24;
          CGFloat v36 = CATransform3DIdentity.m23;
          CGFloat v21 = CATransform3DIdentity.m32;
          CGFloat v22 = CATransform3DIdentity.m33;
          CGFloat v23 = CATransform3DIdentity.m34;
          CGFloat v24 = CATransform3DIdentity.m41;
          CGFloat v25 = CATransform3DIdentity.m42;
          CGFloat v26 = CATransform3DIdentity.m43;
          CGFloat v27 = CATransform3DIdentity.m44;
          do
          {
            if ((v17 & 0xC000000000000001) != 0) {
              id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v28 = *(id *)(v17 + 8 * v19 + 32);
            }
            id v29 = v28;
            ++v19;
            id v30 = [v28 layer];
            CGFloat m11 = CATransform3DIdentity.m11;
            CGFloat v48 = v46;
            CGFloat v49 = v44;
            CGFloat v50 = v42;
            CGFloat v51 = v40;
            CGFloat v52 = v38;
            CGFloat v53 = v36;
            CGFloat v54 = v34;
            CGFloat v55 = v20;
            CGFloat v56 = v21;
            CGFloat v57 = v22;
            CGFloat v58 = v23;
            CGFloat v59 = v24;
            CGFloat v60 = v25;
            CGFloat v61 = v26;
            CGFloat v62 = v27;
            [v30 setTransform:&m11];

            [v29 setAlpha:1.0];
          }
          while (v18 != v19);
          goto LABEL_21;
        }
LABEL_24:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18) {
        goto LABEL_13;
      }
    }
LABEL_21:

    swift_bridgeObjectRelease();
  }
}

id sub_10000AEA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntrySwipeMenuView();
  return [super dealloc];
}

void sub_10000AF70(void *a1)
{
  [a1 contentOffset];
  double v3 = v2;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView);
  unint64_t v5 = (unint64_t)&stru_1007D7000;
  [(id)v4 frame];
  double v7 = v6;
  if (qword_1007F72D8 != -1) {
    goto LABEL_44;
  }
  while (1)
  {
    double v8 = v3 - (v7 + *(double *)&qword_10083D8A0);
    if (v8 >= -3.0) {
      double v9 = 0.0;
    }
    else {
      double v9 = 1.0;
    }
    [(id)v4 setAlpha:v9];
    unint64_t v10 = v8 > 3.0;
    unint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView);
    if (v8 <= 3.0) {
      double v12 = 0.0;
    }
    else {
      double v12 = 1.0;
    }
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView) setAlpha:v12];
    unint64_t v13 = (unint64_t)&selRef_drawMapRect_zoomScale_inContext_;
    [(id)v4 setUserInteractionEnabled:v8 < -3.0];
    [v11 setUserInteractionEnabled:v8 > 3.0];
    unint64_t v159 = v1;
    if (v8 < 0.0)
    {
      id v14 = [(id)v4 arrangedSubviews];
      sub_1000108BC();
      unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v15)
        {
LABEL_11:
          if (v15 < 1) {
            goto LABEL_113;
          }
          uint64_t v155 = v4;
          v161 = v11;
          uint64_t v16 = 0;
          double v17 = fabs(v8);
          do
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v18 = *(id *)(v10 + 8 * v16 + 32);
            }
            uint64_t v19 = v18;
            type metadata accessor for EntrySwipeMenuButton();
            CGFloat v20 = (char *)swift_dynamicCastClass();
            if (v20)
            {
              CGFloat v21 = v20;
              [v20 frame];
              double v23 = v22 * 0.5;
              [v21 frame];
              double v25 = fmin((v17 - (v23 + v24 + *(double *)&qword_10083D8A0)) / v23, 1.0);
              if (v25 < 0.0) {
                double v25 = 0.0;
              }
              CGFloat v26 = v25 * 0.1 + 0.9;
              double v27 = v25 + 0.0;
              id v28 = *(void **)&v21[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView];
              id v29 = [v28 layer];
              CATransform3DMakeScale(&aBlock, v26, v26, 1.0);
              [v29 setTransform:&aBlock];

              id v30 = [v28 layer];
              *(float *)&double v31 = v27;
              [v30 setOpacity:v31];

              uint64_t v19 = v30;
            }
            ++v16;
          }
          while (v15 != v16);
          swift_bridgeObjectRelease();
          unint64_t v5 = 0x1007D7000;
          unint64_t v11 = v161;
          uint64_t v4 = v155;
          goto LABEL_50;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    uint64_t v156 = v4;
    id v32 = [v11 arrangedSubviews];
    sub_1000108BC();
    unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v33 >> 62))
    {
      uint64_t v4 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v4) {
        break;
      }
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      break;
    }
LABEL_23:
    if (v4 < 1) {
      goto LABEL_114;
    }
    unint64_t v10 = (unint64_t)v11;
    uint64_t v34 = 0;
    unint64_t v1 = v33 & 0xC000000000000001;
    while (1)
    {
      if (v1) {
        id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v42 = *(id *)(v33 + 8 * v34 + 32);
      }
      v41 = v42;
      type metadata accessor for EntrySwipeMenuButton();
      v43 = (char *)swift_dynamicCastClass();
      if (!v43) {
        goto LABEL_28;
      }
      CGFloat v44 = v43;
      [v43 *(SEL *)(v5 + 1760)];
      double v3 = v45;
      id v46 = [(id)v10 arrangedSubviews];
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v47 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v48 = v47 - 1;
      if (__OFSUB__(v47, 1)) {
        break;
      }
      BOOL v49 = __OFSUB__(v48, v34);
      uint64_t v50 = v48 - v34;
      if (v49) {
        goto LABEL_43;
      }
      double v35 = fmin((v8 - (v3 * 0.5 + *(double *)&qword_10083D8A0 + (v3 + *(double *)&qword_10083D8A0) * (double)v50))/ (v3* 0.5), 1.0);
      if (v35 < 0.0) {
        double v35 = 0.0;
      }
      CGFloat v36 = v35 * 0.1 + 0.9;
      double v7 = v35 + 0.0;
      v37 = *(void **)&v44[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView];
      id v38 = [v37 layer];
      CATransform3DMakeScale(&aBlock, v36, v36, 1.0);
      [v38 setTransform:&aBlock];

      id v39 = [v37 layer];
      *(float *)&double v40 = v7;
      [v39 setOpacity:v40];

      v41 = v39;
      unint64_t v5 = (unint64_t)&stru_1007D7000;
LABEL_28:
      ++v34;

      if (v4 == v34)
      {
        swift_bridgeObjectRelease();
        unint64_t v1 = v159;
        unint64_t v11 = (void *)v10;
        goto LABEL_49;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_49:
  uint64_t v4 = v156;
LABEL_50:
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging) != 1) {
    return;
  }
  [(id)v4 *(SEL *)(v5 + 1760)];
  double v52 = v51;
  [(id)v4 *(SEL *)(v5 + 1760)];
  double v54 = v52 + v53;
  double v55 = *(double *)&qword_10083D8A0 * 3.0;
  if (v54 + *(double *)&qword_10083D8A0 * 3.0 <= -v8)
  {
    [(id)v4 *(SEL *)(v5 + 1760)];
    int v59 = v58 > 0.0;
    CGFloat v56 = (unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft);
    int v60 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft) = v59;
    if (v59 == v60) {
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  CGFloat v56 = (unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft);
  char v57 = *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft) = 0;
  if (v57) {
LABEL_55:
  }
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_hapticGenerator) impactOccurred];
LABEL_56:
  [v11 *(SEL *)(v5 + 1760)];
  double v62 = v55 + v61;
  if (v55 + v61 <= v8)
  {
    [v11 *(SEL *)(v5 + 1760):v62];
    int v66 = v65 > 0.0;
    v63 = (unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight);
    int v67 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight) = v66;
    if (v66 == v67) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  v63 = (unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight);
  char v64 = *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight) = 0;
  if (v64) {
LABEL_60:
  }
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_hapticGenerator) impactOccurred:v62];
LABEL_61:
  if (*v56 == 1)
  {
    id v68 = [v4 arrangedSubviews];
    sub_1000108BC();
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62) {
      goto LABEL_115;
    }
    uint64_t v69 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v69)
    {
      while (v69 < 1)
      {
        __break(1u);
LABEL_118:
        swift_bridgeObjectRetain();
        uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v72) {
          goto LABEL_119;
        }
LABEL_70:
        if (v72 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v73 = 0;
        unint64_t v13 = v10 & 0xC000000000000001;
        while (1)
        {
          id v74 = v13 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v10 + 8 * v73 + 32);
          v75 = v74;
          id v76 = [v11 arrangedSubviews];
          unint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v77 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v78 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (__OFSUB__(v78, 1)) {
            break;
          }
          if (v73 == v78 - 1 || ([v75 alpha], v79 == 0.0))
          {
          }
          else
          {
            v80 = self;
            uint64_t v81 = swift_allocObject();
            *(void *)(v81 + 16) = v75;
            *(void *)&aBlock.CGFloat m21 = sub_100010950;
            *(void *)&aBlock.CGFloat m22 = v81;
            *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
            *(void *)&aBlock.CGFloat m12 = 1107296256;
            *(void *)&aBlock.CGFloat m13 = sub_10017D530;
            *(void *)&aBlock.CGFloat m14 = &unk_100795890;
            v82 = _Block_copy(&aBlock);
            id v83 = v75;
            unint64_t v5 = 0x1007D7000;
            swift_release();
            [v80 animateWithDuration:4 delay:v82 options:0 animations:0.15 completion:0.0];

            _Block_release(v82);
          }
          if (v72 == ++v73) {
            goto LABEL_119;
          }
        }
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        swift_bridgeObjectRetain();
        uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v69) {
          goto LABEL_89;
        }
      }
      if ((v13 & 0xC000000000000001) != 0) {
        id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v70 = *(id *)(v13 + 32);
      }

      if (v69 != 1)
      {
        uint64_t v98 = 0;
        do
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v103 = *(id *)(v13 + 8 * v98 + 40);
          }
          v104 = v103;
          [v103 alpha];
          if (v105 == 0.0)
          {
          }
          else
          {
            v99 = self;
            uint64_t v100 = swift_allocObject();
            *(void *)(v100 + 16) = v104;
            *(void *)&aBlock.CGFloat m21 = sub_100013288;
            *(void *)&aBlock.CGFloat m22 = v100;
            *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
            *(void *)&aBlock.CGFloat m12 = 1107296256;
            *(void *)&aBlock.CGFloat m13 = sub_10017D530;
            *(void *)&aBlock.CGFloat m14 = &unk_100795930;
            v101 = _Block_copy(&aBlock);
            id v102 = v104;
            swift_release();
            [v99 animateWithDuration:4 delay:v101 options:0 animations:0.15 completion:0.0];

            _Block_release(v101);
          }
          ++v98;
        }
        while (v69 - 1 != v98);
      }
    }
LABEL_89:
    swift_bridgeObjectRelease();
    sub_10000A8CC();
    if (v91)
    {
      v92 = v91;
      uint64_t v93 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_firstLeftButtonX;
      if (*(double *)(v159 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_firstLeftButtonX) == 0.0)
      {
        id v94 = [v91 superview];
        if (v94)
        {
          v95 = v94;
          [v92 frame];
          [v95 convertPoint:0 toView:];
          uint64_t v97 = v96;
        }
        else
        {
          uint64_t v97 = 0;
        }
        *(void *)(v159 + v93) = v97;
      }
      uint64_t v119 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView;
      id v120 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v159
                                                                   + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView), "superview"));
      if (v120)
      {
        v121 = v120;
        [*(id *)(v159 + v119) frame];
        [v121 convertPoint:0 toView:];
        double v123 = v122;
      }
      else
      {
        double v123 = 0.0;
      }
      double v124 = v123 - *(double *)(v159 + v93);
      [v92 frame];
      double v126 = v124 - v125 - *(double *)&qword_10083D8A0;
      v116 = self;
      uint64_t v127 = swift_allocObject();
      *(void *)(v127 + 16) = v92;
      *(double *)(v127 + 24) = v126;
      *(void *)&aBlock.CGFloat m21 = sub_1000109A8;
      *(void *)&aBlock.CGFloat m22 = v127;
      *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat m12 = 1107296256;
      v118 = &unk_100795980;
      goto LABEL_129;
    }
  }
  else if (*v63 == 1)
  {
    id v71 = [v11 arrangedSubviews:v62];
    sub_1000108BC();
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62) {
      goto LABEL_118;
    }
    uint64_t v72 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v72) {
      goto LABEL_70;
    }
LABEL_119:
    swift_bridgeObjectRelease();
    v128 = (void *)sub_10000A9D0();
    if (v128)
    {
      v92 = v128;
      uint64_t v129 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastRightButtonX;
      if (*(double *)(v159 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastRightButtonX) == 0.0)
      {
        id v130 = [v128 superview];
        if (v130)
        {
          v131 = v130;
          [v92 *(SEL *)(v5 + 1760)];
          [v131 convertPoint:0 toView:];
          uint64_t v133 = v132;
        }
        else
        {
          uint64_t v133 = 0;
        }
        *(void *)(v159 + v129) = v133;
      }
      uint64_t v134 = OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView;
      id v135 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v159
                                                                   + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_menuContentView), "superview"));
      if (v135)
      {
        v136 = v135;
        [*(id *)(v159 + v134) *(SEL *)(v5 + 1760)];
        [v136 convertPoint:0 toView:];
        double v138 = v137;
      }
      else
      {
        double v138 = 0.0;
      }
      [*(id *)(v159 + v134) *(SEL *)(v5 + 1760)];
      double v140 = *(double *)(v159 + v129) - (v138 + v139) - *(double *)&qword_10083D8A0;
      v116 = self;
      uint64_t v141 = swift_allocObject();
      *(void *)(v141 + 16) = v92;
      *(double *)(v141 + 24) = v140;
      *(void *)&aBlock.CGFloat m21 = sub_10001099C;
      *(void *)&aBlock.CGFloat m22 = v141;
      *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat m12 = 1107296256;
      v118 = &unk_1007958E0;
LABEL_129:
      *(void *)&aBlock.CGFloat m13 = sub_10017D530;
      *(void *)&aBlock.CGFloat m14 = v118;
      v142 = _Block_copy(&aBlock);
      id v143 = v92;
      swift_release();
      [v116 animateWithDuration:4 delay:v142 options:0 animations:0.15 completion:0.0];

      _Block_release(v142);
    }
  }
  else
  {
    sub_10000A8CC();
    if (v84)
    {
      v85 = v84;
      id v86 = [v84 layer];
      [v86 transform];
      long long v162 = *(_OWORD *)&aBlock.m11;
      long long v153 = *(_OWORD *)&aBlock.m21;
      *(_OWORD *)v157 = *(_OWORD *)&aBlock.m13;
      long long v149 = *(_OWORD *)&aBlock.m31;
      long long v151 = *(_OWORD *)&aBlock.m23;
      long long v145 = *(_OWORD *)&aBlock.m41;
      long long v147 = *(_OWORD *)&aBlock.m33;
      long long v144 = *(_OWORD *)&aBlock.m43;

      *(_OWORD *)&aBlock.CGFloat m11 = v162;
      *(_OWORD *)&aBlock.CGFloat m13 = *(_OWORD *)v157;
      *(_OWORD *)&aBlock.CGFloat m21 = v153;
      *(_OWORD *)&aBlock.CGFloat m23 = v151;
      *(_OWORD *)&aBlock.CGFloat m31 = v149;
      *(_OWORD *)&aBlock.CGFloat m33 = v147;
      *(_OWORD *)&aBlock.CGFloat m41 = v145;
      *(_OWORD *)&aBlock.CGFloat m43 = v144;
      long long v87 = *(_OWORD *)&CATransform3DIdentity.m13;
      *(_OWORD *)&b.CGFloat m11 = *(_OWORD *)&CATransform3DIdentity.m11;
      *(_OWORD *)&b.CGFloat m13 = v87;
      long long v88 = *(_OWORD *)&CATransform3DIdentity.m23;
      *(_OWORD *)&b.CGFloat m21 = *(_OWORD *)&CATransform3DIdentity.m21;
      *(_OWORD *)&b.CGFloat m23 = v88;
      long long v89 = *(_OWORD *)&CATransform3DIdentity.m33;
      *(_OWORD *)&b.CGFloat m31 = *(_OWORD *)&CATransform3DIdentity.m31;
      *(_OWORD *)&b.CGFloat m33 = v89;
      long long v90 = *(_OWORD *)&CATransform3DIdentity.m43;
      *(_OWORD *)&b.CGFloat m41 = *(_OWORD *)&CATransform3DIdentity.m41;
      *(_OWORD *)&b.CGFloat m43 = v90;
      if (CATransform3DEqualToTransform(&aBlock, &b))
      {
      }
      else
      {
        v106 = self;
        uint64_t v107 = swift_allocObject();
        *(void *)(v107 + 16) = v85;
        *(void *)&aBlock.CGFloat m21 = sub_100010934;
        *(void *)&aBlock.CGFloat m22 = v107;
        *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat m12 = 1107296256;
        *(void *)&aBlock.CGFloat m13 = sub_10017D530;
        *(void *)&aBlock.CGFloat m14 = &unk_100795840;
        v108 = _Block_copy(&aBlock);
        id v109 = v85;
        swift_release();
        [v106 animateWithDuration:4 delay:v108 options:0 animations:0.15 completion:0.0];

        _Block_release(v108);
      }
    }
    v110 = (void *)sub_10000A9D0();
    if (v110)
    {
      v92 = v110;
      id v111 = [v110 layer];
      [v111 transform];
      long long v160 = *(_OWORD *)&aBlock.m13;
      long long v163 = *(_OWORD *)&aBlock.m11;
      long long v154 = *(_OWORD *)&aBlock.m23;
      *(_OWORD *)v158 = *(_OWORD *)&aBlock.m21;
      long long v150 = *(_OWORD *)&aBlock.m33;
      long long v152 = *(_OWORD *)&aBlock.m31;
      long long v146 = *(_OWORD *)&aBlock.m43;
      long long v148 = *(_OWORD *)&aBlock.m41;

      *(_OWORD *)&aBlock.CGFloat m11 = v163;
      *(_OWORD *)&aBlock.CGFloat m13 = v160;
      *(_OWORD *)&aBlock.CGFloat m21 = *(_OWORD *)v158;
      *(_OWORD *)&aBlock.CGFloat m23 = v154;
      *(_OWORD *)&aBlock.CGFloat m31 = v152;
      *(_OWORD *)&aBlock.CGFloat m33 = v150;
      *(_OWORD *)&aBlock.CGFloat m41 = v148;
      *(_OWORD *)&aBlock.CGFloat m43 = v146;
      long long v112 = *(_OWORD *)&CATransform3DIdentity.m13;
      *(_OWORD *)&b.CGFloat m11 = *(_OWORD *)&CATransform3DIdentity.m11;
      *(_OWORD *)&b.CGFloat m13 = v112;
      long long v113 = *(_OWORD *)&CATransform3DIdentity.m23;
      *(_OWORD *)&b.CGFloat m21 = *(_OWORD *)&CATransform3DIdentity.m21;
      *(_OWORD *)&b.CGFloat m23 = v113;
      long long v114 = *(_OWORD *)&CATransform3DIdentity.m33;
      *(_OWORD *)&b.CGFloat m31 = *(_OWORD *)&CATransform3DIdentity.m31;
      *(_OWORD *)&b.CGFloat m33 = v114;
      long long v115 = *(_OWORD *)&CATransform3DIdentity.m43;
      *(_OWORD *)&b.CGFloat m41 = *(_OWORD *)&CATransform3DIdentity.m41;
      *(_OWORD *)&b.CGFloat m43 = v115;
      if (!CATransform3DEqualToTransform(&aBlock, &b))
      {
        v116 = self;
        uint64_t v117 = swift_allocObject();
        *(void *)(v117 + 16) = v92;
        *(void *)&aBlock.CGFloat m21 = sub_100013298;
        *(void *)&aBlock.CGFloat m22 = v117;
        *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat m12 = 1107296256;
        v118 = &unk_1007957F0;
        goto LABEL_129;
      }
    }
  }
}

void sub_10000C16C(void *a1, CGFloat a2)
{
  id v3 = [a1 layer];
  CATransform3DMakeTranslation(&v4, a2, 0.0, 0.0);
  [v3 setTransform:&v4];
}

void sub_10000C200(void *a1, double a2)
{
  id v3 = [a1 layer];
  CATransform3DMakeTranslation(&v4, -a2, 0.0, 0.0);
  [v3 setTransform:&v4];
}

void sub_10000C294(void *a1)
{
  id v1 = [a1 layer];
  long long v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  v6[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v6[1] = v2;
  long long v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  v6[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v6[3] = v3;
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v6[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v6[5] = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v6[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v6[7] = v5;
  [v1 setTransform:v6];
}

void sub_10000C440()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (char *)Strong;
    id v2 = [*(id *)(Strong + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView) arrangedSubviews];
    sub_1000108BC();
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v4) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v4) {
        goto LABEL_11;
      }
    }
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      double v7 = v6;
      [v6 setHidden:0];
    }
LABEL_11:
    swift_bridgeObjectRelease();
    id v8 = [*(id *)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView] arrangedSubviews];
    unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_13:
        if (v10 >= 1)
        {
          for (uint64_t j = 0; j != v10; ++j)
          {
            if ((v9 & 0xC000000000000001) != 0) {
              id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v12 = *(id *)(v9 + 8 * j + 32);
            }
            unint64_t v13 = v12;
            [v12 setHidden:0];
          }
          goto LABEL_20;
        }
LABEL_23:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10) {
        goto LABEL_13;
      }
    }
LABEL_20:

    swift_bridgeObjectRelease();
  }
}

void sub_10000C6CC()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
  id v3 = [v2 layer];
  CGFloat m12 = CATransform3DIdentity.m12;
  CGFloat m13 = CATransform3DIdentity.m13;
  CGFloat m14 = CATransform3DIdentity.m14;
  CGFloat m21 = CATransform3DIdentity.m21;
  CGFloat m22 = CATransform3DIdentity.m22;
  CGFloat m23 = CATransform3DIdentity.m23;
  CGFloat m24 = CATransform3DIdentity.m24;
  CGFloat m32 = CATransform3DIdentity.m32;
  CGFloat m31 = CATransform3DIdentity.m31;
  CGFloat m34 = CATransform3DIdentity.m34;
  CGFloat m33 = CATransform3DIdentity.m33;
  CGFloat m42 = CATransform3DIdentity.m42;
  CGFloat m41 = CATransform3DIdentity.m41;
  CGFloat m44 = CATransform3DIdentity.m44;
  CGFloat m43 = CATransform3DIdentity.m43;
  v39.CGFloat m11 = CATransform3DIdentity.m11;
  v39.CGFloat m12 = m12;
  v39.CGFloat m13 = m13;
  v39.CGFloat m14 = m14;
  v39.CGFloat m21 = m21;
  v39.CGFloat m22 = m22;
  v39.CGFloat m23 = m23;
  v39.CGFloat m24 = m24;
  v39.CGFloat m31 = m31;
  v39.CGFloat m32 = m32;
  v39.CGFloat m33 = m33;
  v39.CGFloat m34 = m34;
  v39.CGFloat m41 = m41;
  v39.CGFloat m42 = m42;
  v39.CGFloat m43 = m43;
  v39.CGFloat m44 = m44;
  [v3 setTransform:&v39];

  unint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView];
  id v12 = [v11 layer];
  v39.CGFloat m11 = CATransform3DIdentity.m11;
  v39.CGFloat m12 = m12;
  v39.CGFloat m13 = m13;
  v39.CGFloat m14 = m14;
  v39.CGFloat m21 = m21;
  v39.CGFloat m22 = m22;
  v39.CGFloat m23 = m23;
  v39.CGFloat m24 = m24;
  v39.CGFloat m31 = m31;
  v39.CGFloat m32 = m32;
  v39.CGFloat m33 = m33;
  v39.CGFloat m34 = m34;
  v39.CGFloat m41 = m41;
  v39.CGFloat m42 = m42;
  v39.CGFloat m43 = m43;
  v39.CGFloat m44 = m44;
  [v12 setTransform:&v39];

  id v13 = [v1 window];
  if (v13)
  {
    id v14 = v13;
    [v13 bounds];
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    CGFloat v22 = v21;

    v40.origin.x = v16;
    v40.origin.y = v18;
    v40.size.width = v20;
    v40.size.height = v22;
    double Height = CGRectGetHeight(v40);
    [v1 bounds];
    [v1 convertRect:0 toView:];
    double v26 = v25 + v24;
    if (v25 < 0.0)
    {
      if (Height >= v26)
      {
        double v28 = v24 * 0.5 - v26 * 0.5;
        if (v28 == 0.0) {
          return;
        }
      }
      else
      {
        [v2 bounds];
        [v2 convertRect:0 toView:];
        double v28 = Height * 0.5 - v27;
        if (v28 == 0.0) {
          return;
        }
      }
      goto LABEL_10;
    }
    if (Height < v26)
    {
      double v28 = -(v24 * 0.5 - (v24 - (v26 - Height)) * 0.5);
      if (v28 != 0.0)
      {
LABEL_10:
        id v29 = [v2 layer];
        CATransform3DMakeTranslation(&v39, 0.0, v28, 0.0);
        [v29 setTransform:&v39];

        id v30 = [v11 layer];
        CATransform3DMakeTranslation(&v39, 0.0, v28, 0.0);
        [v30 setTransform:&v39];
      }
    }
  }
}

uint64_t variable initialization expression of LRUCache.size()
{
  return 0;
}

uint64_t variable initialization expression of AudioRecordingActivityAttributes.recordableAudioAttachmentIdentifier()
{
  return 0;
}

uint64_t variable initialization expression of LRUCache.lru()
{
  return DoublyLinkedList.__allocating_init()();
}

uint64_t variable initialization expression of OperationBase.lock()
{
  sub_100329810();
  type metadata accessor for OperationBase.Locked();
  uint64_t v0 = sub_100010198();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t variable initialization expression of CanvasGridCollectionView._isExpanded()
{
  return 0;
}

double variable initialization expression of RecordingViewModel.updateInterval()
{
  return 0.01;
}

uint64_t variable initialization expression of RecordingViewModel.siriAssetManager()
{
  if (qword_1007F7E00 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t variable initialization expression of RecordingViewModel._numberOfDetents()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.bundleId@<X0>(uint64_t a1@<X8>)
{
  return sub_10000CC28((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t variable initialization expression of Journaling.EntryViewModel.changeEventPublisher()
{
  return PassthroughSubject.init()();
}

uint64_t variable initialization expression of Journaling.EntryViewModel.dateSource()
{
  return 5;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.originalUpdatedDate@<X0>(uint64_t a1@<X8>)
{
  return sub_10000CC28((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

uint64_t sub_10000CC28@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

id variable initialization expression of OperationsManager.mapTableAssetMetadataQueue()
{
  id v0 = [self strongToWeakObjectsMapTable];

  return v0;
}

uint64_t sub_10000CCDC(uint64_t a1, uint64_t a2)
{
  return sub_10000F7DC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_10000CD00()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_10000CD08(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Float._forceBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_10000CD5C(uint64_t a1, uint64_t a2)
{
  char v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_10000CDB4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = static Float._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

uint64_t sub_10000CDF0(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89A8, type metadata accessor for LAError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000CE5C(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89A8, type metadata accessor for LAError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000CECC(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000CF38@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id sub_10000CF40()
{
  return *v0;
}

uint64_t sub_10000CF48(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F8A48, type metadata accessor for CKError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000CFB4(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F8A48, type metadata accessor for CKError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000D020(uint64_t a1)
{
  uint64_t v2 = sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000D08C()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10000D0D8()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_10000D130()
{
  return Hasher._finalize()();
}

NSNumber sub_10000D198()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10000D1A0(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10000D1F4(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10000D24C@<X0>(void *a1@<X8>)
{
  uint64_t result = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

BOOL sub_10000D274(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void *sub_10000D288@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10000D298(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_10000D2A4(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10000D2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_10000D2C4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_10000D2D8(void *result)
{
  *v1 ^= *result;
  return result;
}

BOOL sub_10000D2EC()
{
  return *v0 == 0;
}

void *sub_10000D2FC(void *result)
{
  *v1 &= ~*result;
  return result;
}

NSNumber sub_10000D314()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10000D31C(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Int._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10000D370(uint64_t a1, uint64_t a2)
{
  char v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10000D3C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

void *sub_10000D3F0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_10000D404(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10000D434(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10000D448(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_10000D45C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_10000D468@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10000D47C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000D4A8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10000D4CC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000D4E0(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000D4F4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10000D508(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_10000D51C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000D548(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10000D5C0(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10000D640@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10000D684()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10000D694(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000D700(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000D76C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10000D7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10000D87C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10000D88C(uint64_t a1)
{
  uint64_t v2 = sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000D8F8(uint64_t a1)
{
  uint64_t v2 = sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000D964(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10000D9F4()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_10000DA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10000DAA8()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10000DB14()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10000DB24(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_100801110, type metadata accessor for CLError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000DB90(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_100801110, type metadata accessor for CLError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000DBFC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100010588(&qword_100801110, type metadata accessor for CLError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10000DC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010588(&qword_100801110, type metadata accessor for CLError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10000DD08()
{
  return Hasher._finalize()();
}

uint64_t sub_10000DD68()
{
  sub_100010588(&qword_1007F84B8, type metadata accessor for FileProtectionType);
  sub_100010588((unint64_t *)&unk_1007F84C0, type metadata accessor for FileProtectionType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000DE24()
{
  sub_100010588(&qword_1007F8C40, type metadata accessor for URLFileProtection);
  sub_100010588(&qword_1007F8C48, type metadata accessor for URLFileProtection);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void *sub_10000DEE0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10000DEEC()
{
  sub_100010588(&qword_1007F8BB0, type metadata accessor for URLResourceKey);
  sub_100010588(&qword_1007F8BB8, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000DFA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10000F9DC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10000DFE8()
{
  sub_100010588(&qword_1007F8AD8, type metadata accessor for MarkerFormat);
  sub_100010588(&qword_1007F8AE0, type metadata accessor for MarkerFormat);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

_DWORD *sub_10000E0A4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_10000E0B4@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_10000E0C0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E17C()
{
  sub_100010588((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  sub_100010588(&qword_1007F84D0, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E238()
{
  sub_100010588(&qword_1007F8C80, type metadata accessor for DocumentAttributeKey);
  sub_100010588(&qword_1007F8C88, type metadata accessor for DocumentAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E2F4()
{
  sub_100010588(&qword_1007F8C70, type metadata accessor for DocumentType);
  sub_100010588(&qword_1007F8C78, type metadata accessor for DocumentType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E3B0()
{
  sub_100010588(&qword_1007F8C20, type metadata accessor for DocumentReadingOptionKey);
  sub_100010588(&qword_1007F8C28, type metadata accessor for DocumentReadingOptionKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E46C()
{
  sub_100010588(&qword_1007F8AE8, type metadata accessor for Identifier);
  sub_100010588((unint64_t *)&unk_1007F8AF0, type metadata accessor for Identifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E528()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000E674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_10000E6F8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10000E70C()
{
  sub_100010588(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
  sub_100010588(&qword_1007F8C58, type metadata accessor for FileAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E7C8()
{
  sub_100010588(&qword_1007F8C60, type metadata accessor for MOAppEngagementEntryInfo);
  sub_100010588(&qword_1007F8C68, type metadata accessor for MOAppEngagementEntryInfo);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E884()
{
  sub_100010588(&qword_1007F8B90, type metadata accessor for MKPointOfInterestCategory);
  sub_100010588(&qword_1007F8B98, type metadata accessor for MKPointOfInterestCategory);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000E940()
{
  sub_100010588(&qword_1007F8B28, type metadata accessor for GEOPOICategory);
  sub_100010588((unint64_t *)&unk_1007F8B30, type metadata accessor for GEOPOICategory);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

double sub_10000E9FC@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10000EA08()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000EAD0(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89E8, type metadata accessor for CLError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000EB3C(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_1007F89E8, type metadata accessor for CLError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000EBA8(uint64_t a1)
{
  uint64_t v2 = sub_100010588(&qword_100801110, type metadata accessor for CLError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000EC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010588(&qword_100801110, type metadata accessor for CLError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000EC98()
{
  sub_100010588((unint64_t *)&qword_1007F8C00, type metadata accessor for AttributeName);
  sub_100010588(&qword_1007F8C08, type metadata accessor for AttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000ED54()
{
  sub_100010588(&qword_1007F8BD0, type metadata accessor for FeatureKey);
  sub_100010588(&qword_1007F8BD8, type metadata accessor for FeatureKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000EE10()
{
  sub_100010588(&qword_1007F8BE0, type metadata accessor for TraitKey);
  sub_100010588(&qword_1007F8BE8, type metadata accessor for TraitKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000EECC()
{
  sub_100010588((unint64_t *)&qword_1008040A0, type metadata accessor for InfoKey);
  sub_100010588(&qword_1007F8B00, type metadata accessor for InfoKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000EF88()
{
  sub_100010588(&qword_1007F8B18, type metadata accessor for NLTagScheme);
  sub_100010588(&qword_1007F8B20, type metadata accessor for NLTagScheme);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F044()
{
  sub_100010588(&qword_1007F8B08, type metadata accessor for NLTag);
  sub_100010588(&qword_1007F8B10, type metadata accessor for NLTag);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F100()
{
  sub_100010588(&qword_100806910, type metadata accessor for LaunchOptionsKey);
  sub_100010588(&qword_1007F8B40, type metadata accessor for LaunchOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F1BC()
{
  sub_100010588(&qword_1007F8B48, type metadata accessor for NSKeyValueChangeKey);
  sub_100010588(&qword_1007F8B50, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F278()
{
  sub_100010588((unint64_t *)&qword_1007F8B80, type metadata accessor for OpenExternalURLOptionsKey);
  sub_100010588(&qword_1007F8B88, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F334()
{
  sub_100010588(&qword_1007F8BA0, type metadata accessor for CALayerCornerCurve);
  sub_100010588(&qword_1007F8BA8, type metadata accessor for CALayerCornerCurve);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F3F0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F4AC()
{
  sub_100010588(&qword_1007F8C30, type metadata accessor for MOSuggestionAssetMetadataKey);
  sub_100010588(&qword_1007F8C38, type metadata accessor for MOSuggestionAssetMetadataKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F568()
{
  sub_100010588((unint64_t *)&qword_1007F8BC0, type metadata accessor for OptionKey);
  sub_100010588(&qword_1007F8BC8, type metadata accessor for OptionKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F624@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10000F66C()
{
  sub_100010588(&qword_1007F8C10, type metadata accessor for OptionsKey);
  sub_100010588(&qword_1007F8C18, type metadata accessor for OptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F728()
{
  return Float.hashValue.getter(*v0);
}

void sub_10000F730()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10000F764(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_10000F778()
{
  return Double.hashValue.getter(*v0);
}

void sub_10000F780()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10000F7B4()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10000F7C4(uint64_t a1, uint64_t a2)
{
  return sub_10000F7DC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10000F7DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10000F820()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000F874()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10000F8E8()
{
  return Int.hashValue.getter(*v0);
}

void sub_10000F8F0()
{
  Hasher._combine(_:)(*v0);
}

uint64_t sub_10000F91C()
{
  return static Hasher._hash(seed:_:)();
}

BOOL sub_10000F924(float *a1, float *a2)
{
  return *a1 == *a2;
}

BOOL sub_10000F938(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10000F94C()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10000F9DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void sub_10000FA14(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastTargetOffset;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_lastTargetOffset + 8) == 1)
  {
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView) frame];
    double v5 = v4;
    if (qword_1007F72D8 != -1) {
      swift_once();
    }
    *(double *)uint64_t v3 = v5 + *(double *)&qword_10083D8A0;
    *(unsigned char *)(v3 + 8) = 0;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingLeft) == 1)
  {
    sub_10000A354();
LABEL_9:
    int v6 = 1;
    goto LABEL_11;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isOverScrollingRight) == 1)
  {
    sub_10000A604();
    goto LABEL_9;
  }
  int v6 = 0;
LABEL_11:
  double v7 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView);
  [v7 frame];
  double v9 = v8;
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_desiredOffsetTargetX;
  *(double *)uint64_t v10 = v9 + *(double *)&qword_10083D8A0;
  *(unsigned char *)(v10 + 8) = 0;
  double v11 = *(double *)a1;
  sub_10000A8CC();
  if (v12)
  {
    id v13 = v12;
    [v12 frame];
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;

    v32.origin.x = v15;
    v32.origin.y = v17;
    v32.size.width = v19;
    v32.size.height = v21;
    double Width = CGRectGetWidth(v32);
  }
  else
  {
    if (qword_1007F72D0 != -1) {
      swift_once();
    }
    double Width = *(double *)&qword_10083D898;
  }
  double v23 = *(double *)&qword_10083D8A0;
  BOOL v24 = v11 <= Width + *(double *)&qword_10083D8A0 * -0.5;
  double v25 = 0.0;
  if (v24 & ~v6) {
    goto LABEL_26;
  }
  double v26 = *(double *)a1;
  if (sub_10000A234() > v26) {
    char v27 = 1;
  }
  else {
    char v27 = v6;
  }
  if ((v27 & 1) == 0)
  {
    [v7 frame];
    double v30 = v23 + v29;
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView) frame];
    double v25 = v23 + v30 + v31;
LABEL_26:
    *(double *)uint64_t v10 = v25;
    *(unsigned char *)(v10 + 8) = 0;
    goto LABEL_27;
  }
  double v25 = *(double *)v10;
  if ((*(unsigned char *)(v10 + 8) & 1) == 0)
  {
LABEL_27:
    char v28 = 0;
    *(double *)a1 = v25;
    *(void *)(a1 + 8) = 0;
    goto LABEL_28;
  }
  char v28 = 1;
LABEL_28:
  *(double *)uint64_t v3 = v25;
  *(unsigned char *)(v3 + 8) = v28;
}

id sub_10000FC94()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_desiredOffsetTargetX];
  double v2 = *(double *)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_desiredOffsetTargetX];
  char v3 = v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_desiredOffsetTargetX + 8];
  double v4 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView];
  if ((v3 & 1) != 0 || (*(void *)&v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    [*(id *)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView] frame];
    double v7 = v6;
    if (qword_1007F72D8 != -1) {
      swift_once();
    }
    double v8 = *(double *)&qword_10083D8A0;
    double v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView];
    [v5 frame];
    if ((v3 & 1) != 0 || v8 + v7 + v8 + v9 != v2)
    {
      [v0 sendSubviewToBack:v4];
    }
    else
    {
      [v0 bringSubviewToFront:v5];
      double v5 = v4;
    }
  }
  else
  {
    [v0 bringSubviewToFront:*(void *)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView]];
    double v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView];
  }
  id result = [v0 sendSubviewToBack:v5];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  return result;
}

uint64_t sub_10000FDEC()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging) = 0;
  if (v1 == 1)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = Strong;
      uint64_t v4 = Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v5 = *(void *)(v4 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, ObjectType, v5);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100010808;
  *(void *)(v10 + 24) = v8;
  CGFloat v19 = sub_100010848;
  uint64_t v20 = v10;
  CGFloat v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  CGFloat v17 = sub_10017D530;
  double v18 = &unk_100795750;
  double v11 = _Block_copy(&v15);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100010800;
  *(void *)(v12 + 24) = v7;
  CGFloat v19 = sub_100010888;
  uint64_t v20 = v12;
  CGFloat v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  CGFloat v17 = sub_1001C7318;
  double v18 = &unk_1007957A0;
  id v13 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  [v9 animateWithDuration:4 delay:v11 options:v13 animations:0.15 completion:0.0];
  swift_release();
  _Block_release(v13);
  _Block_release(v11);
  return swift_release_n();
}

id sub_1000100A0()
{
  sub_10000C6CC();
  char v1 = v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging];
  v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_isCurrentlyDragging] = 1;
  if ((v1 & 1) == 0)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = Strong;
      uint64_t v4 = Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v5 = *(void *)(v4 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, ObjectType, v5);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
  [v0 sendSubviewToBack:*(void *)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView]];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_rightButtonsStackView];

  return [v0 sendSubviewToBack:v7];
}

uint64_t sub_100010198()
{
  return static ManagedBuffer.create(minimumCapacity:makingHeaderWith:)();
}

uint64_t sub_100010218(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for EntrySwipeMenuView()
{
  return self;
}

void type metadata accessor for SBUISystemApertureLayoutMode(uint64_t a1)
{
}

__n128 initializeWithTake for InsightsDataManager.WordCountGroup(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

uint64_t sub_1000102CC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000102EC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for MOSuggestionSheetTask(uint64_t a1)
{
}

void type metadata accessor for MOSuggestionSheetViewState(uint64_t a1)
{
}

__n128 _s6ResultVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10001037C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10001039C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for CACornerRadii(uint64_t a1)
{
}

__n128 initializeWithTake for JournalEntryCollectionViewController.Section(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

__n128 initializeWithTake for Journaling.EntriesFilter(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100010484(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000104A4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for OperatingSystemVersion(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_1000104F8()
{
  return sub_100010588(&qword_1007F8460, type metadata accessor for Key);
}

uint64_t sub_100010540()
{
  return sub_100010588(&qword_1007F8468, type metadata accessor for Key);
}

uint64_t sub_100010588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000105D0()
{
  return sub_100010588(&qword_1007F8470, type metadata accessor for FileProtectionType);
}

uint64_t sub_100010618()
{
  return sub_100010588(&qword_1007F8478, type metadata accessor for FileProtectionType);
}

uint64_t sub_100010660()
{
  return sub_100010588(&qword_1007F8480, type metadata accessor for FileProtectionType);
}

uint64_t sub_1000106A8()
{
  return sub_100010588(&qword_1007F8488, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_1000106F0()
{
  return sub_100010588(&qword_1007F8490, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100010738()
{
  return sub_100010588(&qword_1007F8498, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_100010780()
{
  return sub_100010588(&qword_1007F84A0, type metadata accessor for Key);
}

uint64_t sub_1000107C8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100010800()
{
}

void sub_100010808()
{
}

uint64_t sub_100010810()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100010848()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100010870(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100010880()
{
  return swift_release();
}

uint64_t sub_100010888(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(v1 + 16))();
  }
  return result;
}

unint64_t sub_1000108BC()
{
  unint64_t result = qword_100802730;
  if (!qword_100802730)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100802730);
  }
  return result;
}

uint64_t sub_1000108FC()
{
  return swift_deallocObject();
}

void sub_100010934()
{
  sub_10000C294(*(void **)(v0 + 16));
}

id sub_100010950()
{
  return [*(id *)(v0 + 16) setAlpha:0.0];
}

uint64_t sub_100010964()
{
  return swift_deallocObject();
}

void sub_10001099C()
{
  sub_10000C200(*(void **)(v0 + 16), *(double *)(v0 + 24));
}

void sub_1000109A8()
{
  sub_10000C16C(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

BOOL sub_1000109B4()
{
  return sub_100009F58();
}

uint64_t sub_1000109BC(uint64_t a1)
{
  return a1;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1000109F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4
                                                                             + class metadata base offset for ManagedBuffer)
                                                                 - 8)
                                                     + 16))(a2, v3);
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for LAError(uint64_t a1)
{
}

void type metadata accessor for MarkerFormat(uint64_t a1)
{
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_100010B00(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RecordingButton.ForegroundShape(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RecordingButton.ForegroundShape(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
}

void type metadata accessor for CLError(uint64_t a1)
{
}

uint64_t sub_100010B94(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100010BB4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for Identifier(uint64_t a1)
{
}

void type metadata accessor for InfoKey(uint64_t a1)
{
}

void type metadata accessor for CGRectEdge(uint64_t a1)
{
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
}

void type metadata accessor for NSFetchedResultsChangeType(uint64_t a1)
{
}

void type metadata accessor for NLTag(uint64_t a1)
{
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
}

void type metadata accessor for GEOPOICategory(uint64_t a1)
{
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for QueuePriority(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for Level(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for MKPointOfInterestCategory(uint64_t a1)
{
}

void type metadata accessor for CALayerCornerCurve(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
}

void type metadata accessor for Status(uint64_t a1)
{
}

void type metadata accessor for OptionKey(uint64_t a1)
{
}

void type metadata accessor for NSUnderlineStyle(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
}

__n128 sub_100010E34(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for MOSuggestionAssetMetadataKey(uint64_t a1)
{
}

void type metadata accessor for URLFileProtection(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for MOAppEntryUpdateEvent(uint64_t a1)
{
}

void type metadata accessor for MOAppEngagementEntryInfo(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for DocumentType(uint64_t a1)
{
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_100010F38()
{
  return sub_100010588(&qword_1007F8720, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100010F80()
{
  return sub_100010588(&qword_1007F8728, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100010FC8()
{
  return sub_100010588(&qword_1007F8730, type metadata accessor for DocumentType);
}

uint64_t sub_100011010()
{
  return sub_100010588(&qword_1007F8738, type metadata accessor for DocumentType);
}

uint64_t sub_100011058()
{
  return sub_100010588(&qword_1007F8740, type metadata accessor for DocumentType);
}

uint64_t sub_1000110A0()
{
  return sub_100010588(&qword_1007F8748, type metadata accessor for MOAppEngagementEntryInfo);
}

uint64_t sub_1000110E8()
{
  return sub_100010588(&qword_1007F8750, type metadata accessor for MOAppEngagementEntryInfo);
}

uint64_t sub_100011130()
{
  return sub_100010588(&qword_1007F8758, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100011178()
{
  return sub_100010588(&qword_1007F8760, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000111C0()
{
  return sub_100010588(&qword_1007F8768, type metadata accessor for URLFileProtection);
}

uint64_t sub_100011208()
{
  return sub_100010588(&qword_1007F8770, type metadata accessor for URLFileProtection);
}

uint64_t sub_100011250()
{
  return sub_100010588(&qword_1007F8778, type metadata accessor for URLFileProtection);
}

uint64_t sub_100011298()
{
  return sub_100010588(&qword_1007F8780, type metadata accessor for MOSuggestionAssetMetadataKey);
}

uint64_t sub_1000112E0()
{
  return sub_100010588(&qword_1007F8788, type metadata accessor for MOSuggestionAssetMetadataKey);
}

uint64_t sub_100011328()
{
  return sub_100010588(&qword_1007F8790, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100011370()
{
  return sub_100010588(&qword_1007F8798, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_1000113B8()
{
  return sub_100010588(&qword_1007F87A0, type metadata accessor for OptionsKey);
}

uint64_t sub_100011400()
{
  return sub_100010588(&qword_1007F87A8, type metadata accessor for OptionsKey);
}

uint64_t sub_100011448()
{
  return sub_100010588(&qword_1007F87B0, type metadata accessor for AttributeName);
}

uint64_t sub_100011490()
{
  return sub_100010588(&qword_1007F87B8, type metadata accessor for AttributeName);
}

uint64_t sub_1000114D8()
{
  return sub_100010588(&qword_1007F87C0, type metadata accessor for Weight);
}

uint64_t sub_100011520()
{
  return sub_100010588(&qword_1007F87C8, type metadata accessor for Weight);
}

uint64_t sub_100011568()
{
  return sub_100010588(&qword_1007F87D0, type metadata accessor for Weight);
}

uint64_t sub_1000115B0()
{
  return sub_100010588(&qword_1007F87D8, type metadata accessor for TraitKey);
}

uint64_t sub_1000115F8()
{
  return sub_100010588(&qword_1007F87E0, type metadata accessor for TraitKey);
}

uint64_t sub_100011640()
{
  return sub_100010588(&qword_1007F87E8, type metadata accessor for TraitKey);
}

uint64_t sub_100011688()
{
  return sub_100010588(&qword_1007F87F0, type metadata accessor for FeatureKey);
}

uint64_t sub_1000116D0()
{
  return sub_100010588(&qword_1007F87F8, type metadata accessor for FeatureKey);
}

uint64_t sub_100011718()
{
  return sub_100010588(&qword_1007F8800, type metadata accessor for FeatureKey);
}

uint64_t sub_100011760()
{
  return sub_100010588(&qword_1007F8808, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_1000117A8()
{
  return sub_100010588(&qword_1007F8810, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_1000117F0()
{
  return sub_100010588(&qword_1007F8818, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_100011838()
{
  return sub_100010588(&qword_1007F8820, type metadata accessor for NSUnderlineStyle);
}

uint64_t sub_100011880()
{
  return sub_100010588(&qword_1007F8828, type metadata accessor for OptionKey);
}

uint64_t sub_1000118C8()
{
  return sub_100010588(&qword_1007F8830, type metadata accessor for OptionKey);
}

uint64_t sub_100011910()
{
  return sub_100010588(&qword_1007F8838, type metadata accessor for URLResourceKey);
}

uint64_t sub_100011958()
{
  return sub_100010588(&qword_1007F8840, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000119A0()
{
  return sub_100010588(&qword_1007F8848, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000119E8()
{
  return sub_100010588(&qword_1007F8850, type metadata accessor for CALayerCornerCurve);
}

uint64_t sub_100011A30()
{
  return sub_100010588(&qword_1007F8858, type metadata accessor for CALayerCornerCurve);
}

uint64_t sub_100011A78()
{
  return sub_100010588(&qword_1007F8860, type metadata accessor for CALayerCornerCurve);
}

uint64_t sub_100011AC0()
{
  return sub_100010588(&qword_1007F8868, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100011B08()
{
  return sub_100010588(&qword_1007F8870, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100011B50()
{
  return sub_100010588(&qword_1007F8878, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100011B98()
{
  return sub_100010588(&qword_1007F8880, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100011BE0()
{
  return sub_100010588(&qword_1007F8888, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100011C28()
{
  return sub_100010588(&qword_1007F8890, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100011C70()
{
  return sub_100010588(&qword_1007F8898, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100011CB8()
{
  return sub_100010588(&qword_1007F88A0, type metadata accessor for Level);
}

uint64_t sub_100011D00()
{
  return sub_100010588(&qword_1007F88A8, type metadata accessor for Level);
}

uint64_t sub_100011D48()
{
  return sub_100010588(&qword_1007F88B0, type metadata accessor for Level);
}

uint64_t sub_100011D90()
{
  return sub_100010588(&qword_1007F88B8, type metadata accessor for CKError);
}

uint64_t sub_100011DD8()
{
  return sub_100010588(&qword_1007F88C0, type metadata accessor for CKError);
}

uint64_t sub_100011E20()
{
  return sub_100010588(&qword_1007F88C8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100011E68()
{
  return sub_100010588(&qword_1007F88D0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100011EB0()
{
  return sub_100010588(&qword_1007F88D8, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100011EF8()
{
  return sub_100010588(&qword_1007F88E0, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100011F40()
{
  return sub_100010588(&qword_1007F88E8, type metadata accessor for GEOPOICategory);
}

uint64_t sub_100011F88()
{
  return sub_100010588(&qword_1007F88F0, type metadata accessor for GEOPOICategory);
}

uint64_t sub_100011FD0()
{
  return sub_100010588(&qword_1007F88F8, type metadata accessor for GEOPOICategory);
}

uint64_t sub_100012018()
{
  return sub_100010588(&qword_1007F8900, type metadata accessor for NLTagScheme);
}

uint64_t sub_100012060()
{
  return sub_100010588(&qword_1007F8908, type metadata accessor for NLTagScheme);
}

uint64_t sub_1000120A8()
{
  return sub_100010588(&qword_1007F8910, type metadata accessor for NLTagScheme);
}

uint64_t sub_1000120F0()
{
  return sub_100010588(&qword_1007F8918, type metadata accessor for NLTag);
}

uint64_t sub_100012138()
{
  return sub_100010588(&qword_1007F8920, type metadata accessor for NLTag);
}

uint64_t sub_100012180()
{
  return sub_100010588(&qword_1007F8928, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_1000121C8()
{
  return sub_100010588(&qword_1007F8930, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_100012210()
{
  return sub_100010588(&qword_1007F8938, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_100012258()
{
  return sub_100010588(&qword_1007F8940, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_1000122A0()
{
  return sub_100010588(&qword_1007F8948, type metadata accessor for InfoKey);
}

uint64_t sub_1000122E8()
{
  return sub_100010588(&qword_1007F8950, type metadata accessor for InfoKey);
}

uint64_t sub_100012330()
{
  return sub_100010588(&qword_1007F8958, type metadata accessor for Identifier);
}

uint64_t sub_100012378()
{
  return sub_100010588(&qword_1007F8960, type metadata accessor for Identifier);
}

uint64_t sub_1000123C0()
{
  return sub_100010588(&qword_1007F8968, type metadata accessor for Identifier);
}

uint64_t sub_100012408()
{
  return sub_100010588(&qword_1007F8970, type metadata accessor for CLError);
}

uint64_t sub_100012450()
{
  return sub_100010588(&qword_1007F8978, type metadata accessor for CLError);
}

uint64_t sub_100012498()
{
  return sub_100010588(&qword_1007F8980, type metadata accessor for MarkerFormat);
}

uint64_t sub_1000124E0()
{
  return sub_100010588(&qword_1007F8988, type metadata accessor for MarkerFormat);
}

uint64_t sub_100012528()
{
  return sub_100010588(&qword_1007F8990, type metadata accessor for MarkerFormat);
}

uint64_t sub_100012570()
{
  return sub_100010588(&qword_1007F8998, type metadata accessor for LAError);
}

uint64_t sub_1000125B8()
{
  return sub_100010588(&qword_1007F89A0, type metadata accessor for LAError);
}

uint64_t sub_100012600()
{
  return sub_100010588(&qword_1007F89A8, type metadata accessor for LAError);
}

uint64_t sub_100012648()
{
  return sub_100010588(&qword_1007F89B0, type metadata accessor for LAError);
}

uint64_t sub_100012690()
{
  return sub_100010588(&qword_1007F89B8, type metadata accessor for LAError);
}

uint64_t sub_1000126D8()
{
  return sub_100010588(&qword_1007F89C0, _s3__C4CodeOMa_1);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
}

uint64_t sub_100012734()
{
  return sub_100010588(&qword_1007F89C8, _s3__C4CodeOMa_1);
}

unint64_t sub_100012780()
{
  unint64_t result = qword_1007F89D0;
  if (!qword_1007F89D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F89D0);
  }
  return result;
}

uint64_t sub_1000127D4()
{
  return sub_100010588(&qword_1007F89D8, _s3__C4CodeOMa_1);
}

uint64_t sub_10001281C()
{
  return sub_100010588(&qword_1007F89E0, type metadata accessor for LAError);
}

uint64_t sub_100012864()
{
  return sub_100010588(&qword_1007F89E8, type metadata accessor for CLError);
}

uint64_t sub_1000128AC()
{
  return sub_100010588(&qword_1007F89F0, type metadata accessor for CLError);
}

uint64_t sub_1000128F4()
{
  return sub_100010588(&qword_1007F89F8, type metadata accessor for CLError);
}

uint64_t sub_10001293C()
{
  return sub_100010588(&qword_1007F8A00, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_100012998()
{
  return sub_100010588(&qword_1007F8A08, _s3__C4CodeOMa_0);
}

uint64_t sub_1000129E0()
{
  return sub_100010588((unint64_t *)&unk_1007F8A10, _s3__C4CodeOMa_0);
}

uint64_t sub_100012A28()
{
  return sub_100010588(&qword_100801110, type metadata accessor for CLError);
}

uint64_t sub_100012A70()
{
  return sub_100010588(&qword_1007F8A20, type metadata accessor for InfoKey);
}

uint64_t sub_100012AB8()
{
  return sub_100010588(&qword_1007F8A28, type metadata accessor for NLTag);
}

uint64_t sub_100012B00()
{
  return sub_100010588(&qword_1007F8A30, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100012B48()
{
  return sub_100010588(&qword_1007F8A38, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100012B90()
{
  return sub_100010588(&qword_1007F8A40, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100012BD8()
{
  return sub_100010588(&qword_1007F8A48, type metadata accessor for CKError);
}

uint64_t sub_100012C20()
{
  return sub_100010588(&qword_1007F8A50, type metadata accessor for CKError);
}

uint64_t sub_100012C68()
{
  return sub_100010588(&qword_1007F8A58, type metadata accessor for CKError);
}

uint64_t sub_100012CB0()
{
  return sub_100010588(&qword_1007F8A60, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_100012D0C()
{
  return sub_100010588(&qword_1007F8A68, type metadata accessor for Code);
}

uint64_t sub_100012D54()
{
  return sub_100010588((unint64_t *)&unk_1007F8A70, type metadata accessor for Code);
}

uint64_t sub_100012D9C()
{
  return sub_100010588((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);
}

uint64_t sub_100012DE4()
{
  return sub_100010588(&qword_1007F8A80, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100012E2C()
{
  return sub_100010588(&qword_1007F8A88, type metadata accessor for OptionKey);
}

uint64_t sub_100012E74()
{
  return sub_100010588(&qword_1007F8A90, type metadata accessor for AttributeName);
}

uint64_t sub_100012EBC()
{
  return sub_100010588(&qword_1007F8A98, type metadata accessor for OptionsKey);
}

uint64_t sub_100012F04()
{
  return sub_100010588(&qword_1007F8AA0, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100012F4C()
{
  return sub_100010588(&qword_1007F8AA8, type metadata accessor for MOSuggestionAssetMetadataKey);
}

uint64_t sub_100012F94()
{
  return sub_100010588(&qword_1007F8AB0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100012FDC()
{
  return sub_100010588((unint64_t *)&qword_1007F8AB8, type metadata accessor for CFString);
}

uint64_t sub_100013024()
{
  return sub_100010588(&qword_1007F8AC0, type metadata accessor for CFString);
}

uint64_t sub_10001306C()
{
  return sub_100010588(&qword_1007F8AC8, type metadata accessor for MOAppEngagementEntryInfo);
}

uint64_t sub_1000130B4()
{
  return sub_100010588(&qword_1007F8AD0, type metadata accessor for DocumentAttributeKey);
}

unint64_t sub_1000130FC()
{
  unint64_t result = qword_1007F8B68;
  if (!qword_1007F8B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F8B68);
  }
  return result;
}

void type metadata accessor for NavigationDirection(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

void type metadata accessor for InlinePresentationIntent(uint64_t a1)
{
}

void type metadata accessor for MKIconManagerSize(uint64_t a1)
{
}

void sub_1000131B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

NSUInteger sub_1000132FC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX = CGRectGetMidX(*(CGRect *)&a1);
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = a3;
  v34.size.height = a4;
  double MinY = CGRectGetMinY(v34);
  double v11 = AudioRecordingActivityState.hash(into:)(MidX, MinY);
  double v13 = v12;
  v35.origin.x = a1;
  v35.origin.y = a2;
  v35.size.width = a3;
  v35.size.height = a4;
  double v14 = CGRectGetMidX(v35);
  v36.origin.x = a1;
  v36.origin.y = a2;
  v36.size.width = a3;
  v36.size.height = a4;
  double MaxY = CGRectGetMaxY(v36);
  [v4 characterRangeAtPoint:v11, v13];
  if (!v16) {
    return 0;
  }
  CGFloat v17 = v16;
  id v18 = [v4 characterRangeAtPoint:AudioRecordingActivityState.hash(into:)(v14, MaxY)];
  if (!v18)
  {

    return 0;
  }
  CGFloat v19 = v18;
  id v20 = [v4 beginningOfDocument];
  id v21 = [v17 start];
  id v22 = [v17 end];
  id v23 = [v4 offsetFromPosition:v20 toPosition:v21];
  id v24 = [v4 offsetFromPosition:v21 toPosition:v22];

  id v25 = [v4 beginningOfDocument];
  id v26 = [v19 start];
  id v27 = [v19 end];
  id v28 = [v4 offsetFromPosition:v25 toPosition:v26];
  id v29 = [v4 offsetFromPosition:v26 toPosition:v27];

  v32.NSUInteger location = (NSUInteger)v23;
  v32.length = (NSUInteger)v24;
  v33.NSUInteger location = (NSUInteger)v28;
  v33.length = (NSUInteger)v29;
  NSUInteger location = NSUnionRange(v32, v33).location;

  return location;
}

id sub_10001357C(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 documentRange];
  id v6 = [v5 location];

  id v7 = [v2 locationFromLocation:v6 withOffset:a1];
  swift_unknownObjectRelease();
  if (!v7) {
    return 0;
  }
  id v8 = [v2 locationFromLocation:v7 withOffset:a2];
  if (!v8)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v9 = [objc_allocWithZone((Class)NSTextRange) initWithLocation:v7 endLocation:v8];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_100013684(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, CGRect *a7)
{
  v8.size.height = a4;
  v8.size.width = a3;
  v8.origin.y = a2;
  v8.origin.x = a1;
  *a7 = CGRectUnion(*a7, v8);
  return 1;
}

uint64_t sub_1000136CC()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  qword_10083CD80 = (uint64_t)v1;
  return result;
}

void *sub_100013734()
{
  sub_100010218(&qword_1007F8E90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = 42;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 48) = NSTextListMarkerDisc;
  *(void *)(inited + 56) = 45;
  *(void *)(inited + 64) = 0xE100000000000000;
  *(void *)(inited + 72) = NSTextListMarkerHyphen;
  NSString v1 = NSTextListMarkerDisc;
  uint64_t v2 = NSTextListMarkerHyphen;
  uint64_t result = (void *)sub_1003965F4(inited);
  off_1007F8E50 = result;
  return result;
}

uint64_t sub_1000137C4(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return String.remove(at:)(a1);
  }
LABEL_5:
  a1 = String.index(before:)();

  return String.remove(at:)(a1);
}

unint64_t sub_10001382C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

uint64_t sub_100013878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_100010218(&qword_1007F8E98);
  __chkstk_darwin(v4);
  CGRect v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  CGRect v8 = (char *)&v30 - v7;
  uint64_t v9 = type metadata accessor for AttributedString.Index();
  uint64_t v10 = *(void **)(v9 - 8);
  __chkstk_darwin(v9);
  double v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100010218(&qword_1007F8EA0);
  __chkstk_darwin(v36);
  v37 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v30 - v15;
  uint64_t v17 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v18 = sub_1000144CC(&qword_1007F8EA8, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  uint64_t v19 = v2;
  uint64_t v35 = v17;
  uint64_t v33 = v18;
  dispatch thunk of Collection.startIndex.getter();
  sub_1000144CC(&qword_1007F8EB0, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t v38 = a1;
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    id v21 = &v8[*(int *)(v4 + 48)];
    uint64_t v32 = v19;
    id v22 = (void (*)(char *, char *, uint64_t))v10[4];
    v22(v8, v12, v9);
    id v23 = v34;
    uint64_t v30 = v4;
    double v31 = v16;
    id v24 = (void (*)(char *, uint64_t, uint64_t))v10[2];
    v24(v21, v38, v9);
    id v25 = &v23[*(int *)(v4 + 48)];
    v24(v23, (uint64_t)v8, v9);
    v24(v25, (uint64_t)v21, v9);
    uint64_t v26 = (uint64_t)v37;
    v22(v37, v23, v9);
    id v27 = (void (*)(char *, uint64_t))v10[1];
    v27(v25, v9);
    id v28 = &v23[*(int *)(v30 + 48)];
    v22(v23, v8, v9);
    v22(v28, v21, v9);
    v22((char *)(v26 + *(int *)(v36 + 36)), v28, v9);
    v27(v23, v9);
    uint64_t v29 = (uint64_t)v31;
    sub_100014514(v26, (uint64_t)v31);
    dispatch thunk of Collection.subscript.getter();
    return sub_10001457C(v29, &qword_1007F8EA0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100013C40(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
  }
}

id sub_100013CAC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100010218(&qword_1007F8E58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  CGRect v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1007F8E60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007F8E68);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return 0;
  }
  uint64_t v48 = v6;
  uint64_t v16 = qword_1007F68A8;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = off_1007F8E50;
  if (*((void *)off_1007F8E50 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_10001B5D0(a1, a2);
    if (v19)
    {
      id v20 = *(id *)(v17[7] + 8 * v18);
      swift_bridgeObjectRelease_n();
      id v21 = [objc_allocWithZone((Class)NSTextList) initWithMarkerFormat:v20 options:0 startingItemNumber:0];

      return v21;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = v13;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1005A86F4(a1, a2);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    if (v22 == 46 && v24 == 0xE100000000000000)
    {
      uint64_t v25 = swift_bridgeObjectRelease();
LABEL_13:
      uint64_t v51 = a1;
      unint64_t v52 = a2;
      sub_1000137C4(v25);
      swift_bridgeObjectRelease();
      uint64_t v28 = v51;
      unint64_t v27 = v52;
      goto LABEL_17;
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v25 = swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_13;
    }
  }
  uint64_t v51 = a1;
  unint64_t v52 = a2;
  uint64_t v49 = 46;
  unint64_t v50 = 0xE100000000000000;
  sub_100014344();
  if ((StringProtocol.contains<A>(_:)() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v51 = a1;
  unint64_t v52 = a2;
  uint64_t v29 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  if (!*(void *)(v29 + 16)) {
    goto LABEL_26;
  }
  v46[1] = *(void *)(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = static String._fromSubstring(_:)();
  unint64_t v27 = v30;
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v51 = v28;
  unint64_t v52 = v27;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  sub_1000143EC();
  sub_100014488((unint64_t *)&qword_1007F8E78, &qword_1007F8E58);
  BidirectionalCollection<>.firstMatch<A, B>(of:)();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v5);
  uint64_t v31 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v11, 1, v12) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v11, &qword_1007F8E60);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v15, v11, v12);
  unint64_t v32 = Regex.Match.range.getter();
  swift_bridgeObjectRetain();
  unint64_t v33 = sub_10001382C(v32, v28, v27);
  unint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  LOBYTE(v33) = sub_100013C40(v28, v27, v33, v35, v37, v39);
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0) {
    goto LABEL_25;
  }
  if (qword_1007F68A0 != -1) {
    swift_once();
  }
  id v40 = (id)qword_10083CD80;
  Regex.Match.output.getter();
  id v21 = [objc_allocWithZone((Class)NSTextList) initWithMarkerFormat:v40 options:0 startingItemNumber:v51];

  uint64_t v51 = Regex.Match.range.getter();
  unint64_t v52 = v41;
  uint64_t v49 = v28;
  unint64_t v50 = v27;
  sub_100010218(&qword_1007F8E80);
  sub_100014488(&qword_1007F8E88, &qword_1007F8E80);
  sub_100014344();
  _NSRange.init<A, B>(_:in:)();
  uint64_t v43 = v42;
  CGFloat v44 = *(void (**)(char *, uint64_t))(v31 + 8);
  v31 += 8;
  v44(v15, v12);
  if (__OFADD__(v43, 1))
  {
    __break(1u);
LABEL_25:
    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v12);
LABEL_26:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v21;
}

unint64_t sub_100014344()
{
  unint64_t result = qword_100800930;
  if (!qword_100800930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800930);
  }
  return result;
}

unint64_t sub_100014398()
{
  unint64_t result = qword_1007F8E70;
  if (!qword_1007F8E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F8E70);
  }
  return result;
}

unint64_t sub_1000143EC()
{
  unint64_t result = qword_1007FF310;
  if (!qword_1007FF310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FF310);
  }
  return result;
}

uint64_t sub_100014440(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100014488(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000144CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100014514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F8EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001457C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100010218(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1000145D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    sub_100016B38();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_beginAccess();
    uint64_t v4 = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = v4[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
    }
    else
    {
      uint64_t v5 = 4;
    }
    sub_1000157E4(v5);
  }
}

id sub_1000147B4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  *(void *)&v11[v15] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v16 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer;
  *(void *)&v11[v16] = [objc_allocWithZone((Class)CAGradientLayer) init];
  v11[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_previousSizeType] = 6;
  *(void *)&v11[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset] = 0;
  uint64_t v17 = &v11[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_latestImageRequestID];
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  char v19 = &v11[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame];
  *(_OWORD *)char v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[32] = 1;
  *(void *)&v11[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView] = 0;

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for StateOfMindAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_100014BCC();

  return v20;
}

id sub_1000149C8(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  id v4 = objc_allocWithZone((Class)UILabel);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)CAGradientLayer) init];
  v5[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_previousSizeType] = 6;
  *(void *)&v5[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset] = 0;
  uint64_t v11 = &v5[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_latestImageRequestID];
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = &v5[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  *(void *)&v5[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView] = 0;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for StateOfMindAssetView();
  [super initWithCoder:a1];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_100014BCC();
  }
  return v15;
}

uint64_t sub_100014BCC()
{
  NSString v1 = v0;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset);
  if (v2 && (id v3 = v2, sub_10008D150(), v5 = v4, v3, v5))
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  [v1 setAccessibilityValue:v6];

  [v1 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  id v7 = sub_10001501C();
  uint64_t v8 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  uint64_t v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel);
  *(void *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel) = v7;

  id v10 = sub_10001520C((SEL *)&selRef_setLineBreakMode_, 4, 4);
  uint64_t v11 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  uint64_t v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel);
  *(void *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel) = v10;

  id v13 = sub_10001520C((SEL *)&selRef_setLineBreakMode_, 4, 4);
  uint64_t v14 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  id v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel);
  *(void *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) = v13;

  id v16 = sub_10001520C((SEL *)&selRef_setNumberOfLines_, 0, 1);
  uint64_t v17 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  objc_super v18 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel);
  *(void *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel) = v16;

  uint64_t v19 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  [v1 addSubview:*(void *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView)];
  uint64_t v20 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
  [v1 addSubview:*(void *)((char *)v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView)];
  [v1 addSubview:*(void *)((char *)v1 + v8)];
  [v1 addSubview:*(void *)((char *)v1 + v11)];
  [v1 addSubview:*(void *)((char *)v1 + v14)];
  [v1 addSubview:*(void *)((char *)v1 + v17)];
  sub_100010218(&qword_1007FBD30);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1006D6280;
  *(void *)(v21 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v21 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  id v22 = *(id *)((char *)v1 + v8);

  id v23 = *(id *)((char *)v1 + v19);
  id v24 = *(id *)((char *)v1 + v19);

  id v25 = *(id *)((char *)v1 + v11);
  id v26 = *(id *)((char *)v1 + v14);

  id v27 = *(id *)((char *)v1 + v17);
  id v28 = [v1 layer];
  uint64_t v29 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer;
  [v28 insertSublayer:*(void *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer) atIndex:0];

  id v30 = *(id *)((char *)v1 + v29);
  [v1 bounds];
  [v30 setFrame:];

  [*(id *)((char *)v1 + v29) setOpacity:0.0];
  id v31 = *(id *)((char *)v1 + v20);
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  [*(id *)((char *)v1 + v8) setAlpha:0.0];
  [*(id *)((char *)v1 + v11) setAlpha:0.0];
  [*(id *)((char *)v1 + v14) setAlpha:0.0];
  [*(id *)((char *)v1 + v17) setAlpha:0.0];
  [*(id *)((char *)v1 + v19) setAlpha:0.0];
  unint64_t v32 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110);

  return v32();
}

id sub_10001501C()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  if (qword_1007F72A0 != -1) {
    swift_once();
  }
  NSString v1 = (void *)qword_10083D868;
  id v2 = [(id)qword_10083D868 fontDescriptor];
  id v3 = [v1 fontDescriptor];
  unsigned int v4 = [v3 symbolicTraits];

  id v5 = [v2 fontDescriptorWithSymbolicTraits:v4 | 0x8000];
  if (v5)
  {
    id v6 = [self fontWithDescriptor:v5 size:0.0];
  }
  else
  {
    id v6 = 0;
  }
  [v0 setFont:v6];

  id v7 = [self labelColor];
  id v8 = [v7 colorWithAlphaComponent:0.6];

  [v0 setTextColor:v8];
  [v0 setPreferredVibrancy:1];
  [v0 setTextAlignment:4];
  [v0 setLineBreakMode:4];
  [v0 setAdjustsFontForContentSizeCategory:1];
  return v0;
}

id sub_10001520C(SEL *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)UILabel) init];
  if (qword_1007F7290 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_10083D858;
  id v8 = [(id)qword_10083D858 fontDescriptor];
  id v9 = [v7 fontDescriptor];
  unsigned int v10 = [v9 symbolicTraits];

  id v11 = [v8 fontDescriptorWithSymbolicTraits:v10 | 0x8000];
  if (v11)
  {
    id v12 = [self fontWithDescriptor:v11 size:0.0];
  }
  else
  {
    id v12 = 0;
  }
  [v6 setFont:v12];

  id v13 = [self tertiaryLabelColor];
  [v6 setTextColor:v13];

  [v6 setPreferredVibrancy:1];
  [v6 *a1:a2];
  [v6 setTextAlignment:a3];
  [v6 setAdjustsFontForContentSizeCategory:1];
  return v6;
}

id sub_1000153EC()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for StateOfMindAssetView();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer];
  [v0 bounds];
  [v1 setFrame:];

  switch(v0[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
  {
    case 5:
      id result = (id)swift_bridgeObjectRelease();
      break;
    default:
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id result = (id)swift_bridgeObjectRelease();
      if ((v2 & 1) == 0)
      {
        id v4 = [v0 traitCollection];
        id v5 = [v4 preferredContentSizeCategory];

        LOBYTE(v4) = static UIContentSizeCategory.>= infix(_:_:)();
        if (v4) {
          uint64_t v6 = 1;
        }
        else {
          uint64_t v6 = 2;
        }
        [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel] setNumberOfLines:v6];
        [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel] setNumberOfLines:v6];
        id result = [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel] setNumberOfLines:v6];
      }
      break;
  }
  return result;
}

uint64_t sub_100015650()
{
  id v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  v8[4] = sub_10001B3D4;
  v8[5] = v2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10017D530;
  v8[3] = &unk_100796698;
  id v3 = _Block_copy(v8);
  id v4 = v0;
  swift_release();
  [v1 animateWithDuration:0 delay:v3 options:0 animations:0.11 completion:0.0];
  _Block_release(v3);
  uint64_t v5 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer;
  id v6 = *(id *)&v4[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer];
  [v4 bounds];
  [v6 setFrame:];

  [*(id *)&v4[v5] setMasksToBounds:1];
  return sub_100016B38();
}

void sub_1000157E4(uint64_t a1)
{
  uint64_t v117 = a1;
  uint64_t v2 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v2);
  long long v114 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v112 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v111 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v10 - 8);
  long long v113 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  *(void *)&long long v115 = (char *)&v101 - v13;
  __chkstk_darwin(v14);
  id v16 = (char *)&v101 - v15;
  uint64_t v17 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v24 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = *(void **)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset);
  if (!v25) {
    return;
  }
  double v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v7;
  uint64_t v26 = v4;
  uint64_t v27 = v1;
  uint64_t v107 = v2;
  uint64_t v28 = v22;
  id v29 = v25;
  sub_1003F266C((uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v28) == 1)
  {

    sub_10001457C((uint64_t)v19, (uint64_t *)&unk_100807640);
    return;
  }
  id v108 = v29;
  sub_10001ABC8((uint64_t)v19, (uint64_t)v24);
  uint64_t v110 = v28;
  id v30 = &v24[*(int *)(v28 + 24)];
  uint64_t v106 = *(void *)v30;
  id v103 = v30;
  LODWORD(v109) = v30[8];
  uint64_t v31 = sub_10008AA70();
  v116 = v24;
  if (v31 || v32 != 0xE000000000000000)
  {
    uint64_t v33 = v27;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      id v35 = *(id *)(v27 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel);
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v35 setText:v40];
      uint64_t v34 = v26;
      uint64_t v36 = v5;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = v27;
  }
  uint64_t v34 = v26;
  id v35 = *(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel);
  uint64_t v36 = v5;
  if ((v24[*(int *)(v110 + 36) + 8] | v109))
  {
    id v37 = v35;
  }
  else
  {
    id v38 = v35;
    HKStateOfMindReflectiveIntervalFromKind();
    id v39 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v24 = v116;
  }
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v35 setText:v40];
LABEL_14:

  uint64_t v104 = v33;
  switch((char)v117)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    default:
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v41)
      {
LABEL_17:
        uint64_t v42 = &selRef_drawMapRect_zoomScale_inContext_;
      }
      else
      {
        if (qword_1007F7590 != -1) {
          swift_once();
        }
        uint64_t v102 = *((void *)&xmmword_10083DCC8 + 1);
        sub_100010218((uint64_t *)&unk_100806070);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1006D6280;
        sub_10001B220((uint64_t)&v24[*(int *)(v110 + 20)], (uint64_t)v16, (uint64_t *)&unk_1007FC470);
        uint64_t v44 = type metadata accessor for Date();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v16, 1, v44) == 1)
        {
          sub_10001457C((uint64_t)v16, (uint64_t *)&unk_1007FC470);
          uint64_t v46 = 0;
          unint64_t v47 = 0;
        }
        else
        {
          static Date.FormatStyle.DateStyle.omitted.getter();
          uint64_t v101 = v34;
          uint64_t v48 = v112;
          static Date.FormatStyle.TimeStyle.shortened.getter();
          uint64_t v46 = Date.formatted(date:time:)();
          unint64_t v47 = v49;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v48, v101);
          (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v111 + 8))(v9, v105);
          (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v44);
        }
        uint64_t v33 = v104;
        uint64_t v42 = &selRef_drawMapRect_zoomScale_inContext_;
        *(void *)(v43 + 56) = &type metadata for String;
        *(void *)(v43 + 64) = sub_10001B2C0();
        if (v47) {
          uint64_t v50 = v46;
        }
        else {
          uint64_t v50 = 0;
        }
        unint64_t v51 = 0xE000000000000000;
        if (v47) {
          unint64_t v51 = v47;
        }
        *(void *)(v43 + 32) = v50;
        *(void *)(v43 + 40) = v51;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
      }
      if (v106 == 2) {
        int v52 = v109;
      }
      else {
        int v52 = 1;
      }
      LODWORD(v112) = v52;
      if ((v52 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1007F7588 != -1) {
          swift_once();
        }
        swift_bridgeObjectRetain();
      }
      uint64_t v53 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
      id v54 = *(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel);
      NSString v55 = String._bridgeToObjectiveC()();
      [v54 v42[142] v55];

      if (!sub_10008ACF8() && v56 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        switch((char)v117)
        {
          case 5:
            swift_bridgeObjectRelease();
            goto LABEL_41;
          default:
            char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v57) {
              goto LABEL_41;
            }
            swift_bridgeObjectRelease();
            id v58 = *(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel);
            int v60 = &selRef_drawMapRect_zoomScale_inContext_;
            switch((char)v117)
            {
              case 1:
                id v61 = v58;
                swift_bridgeObjectRelease();
                goto LABEL_46;
              default:
                char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
                id v63 = v58;
                swift_bridgeObjectRelease();
                if (v62) {
LABEL_46:
                }
                  swift_bridgeObjectRelease();
                NSString v59 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                break;
            }
            break;
        }
      }
      else
      {
LABEL_41:
        swift_bridgeObjectRelease();
        id v58 = *(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel);
        NSString v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        int v60 = &selRef_drawMapRect_zoomScale_inContext_;
      }
      [v58 v60[142]:v59];
      char v64 = v108;

      switch((char)v117)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
          char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0) {
            goto LABEL_78;
          }
          goto LABEL_52;
        case 5:
          swift_bridgeObjectRelease();
LABEL_52:
          uint64_t v66 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
          [*(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel) setHidden:0];
          uint64_t v67 = sub_10008AF84();
          uint64_t v111 = v66;
          if (!v67 && v68 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v69 = *(void **)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel);
            if (v116[*(int *)(v110 + 36) + 8] & 1) != 0 || (v103[8])
            {
              id v70 = v69;
            }
            else
            {
              id v76 = v69;
              HKStateOfMindReflectiveIntervalFromKind();
              id v77 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
              static String._unconditionallyBridgeFromObjectiveC(_:)();
            }
            NSString v78 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v69 v60[142] v78];

            [*(id *)(v33 + v53) v60[142]];
            uint64_t v74 = (uint64_t)v116;
            uint64_t v79 = v115;
          }
          else
          {
            id v71 = *(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel);
            NSString v72 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v71 v60[142] v72];

            uint64_t v73 = *(void **)(v33 + v53);
            uint64_t v74 = (uint64_t)v116;
            if (v116[*(int *)(v110 + 36) + 8] & 1) != 0 || (v103[8])
            {
              id v75 = v73;
            }
            else
            {
              id v80 = v73;
              HKStateOfMindReflectiveIntervalFromKind();
              id v81 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
              static String._unconditionallyBridgeFromObjectiveC(_:)();
            }
            uint64_t v79 = v115;
            NSString v82 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v73 v60[142]:v82];
          }
          id v83 = *(id *)(v33 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel);
          sub_10008B130();
          NSString v84 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v83 v60[142] v84];

          if (qword_1007F75B8 != -1) {
            swift_once();
          }
          uint64_t v106 = *((void *)&xmmword_10083DD18 + 1);
          uint64_t v109 = xmmword_10083DD18;
          sub_100010218((uint64_t *)&unk_100806070);
          uint64_t v85 = swift_allocObject();
          long long v115 = xmmword_1006D6270;
          *(_OWORD *)(v85 + 16) = xmmword_1006D6270;
          if (qword_1007F7588 != -1) {
            swift_once();
          }
          long long v86 = xmmword_10083DCB8;
          *(void *)(v85 + 56) = &type metadata for String;
          unint64_t v87 = sub_10001B2C0();
          *(void *)(v85 + 64) = v87;
          *(_OWORD *)(v85 + 32) = v86;
          uint64_t v110 = v74 + *(int *)(v110 + 20);
          sub_10001B220(v110, v79, (uint64_t *)&unk_1007FC470);
          uint64_t v88 = type metadata accessor for Date();
          uint64_t v89 = *(void *)(v88 - 8);
          double v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
          int v90 = v105(v79, 1, v88);
          swift_bridgeObjectRetain();
          id v103 = (char *)v89;
          if (v90 == 1)
          {
            sub_10001457C(v79, (uint64_t *)&unk_1007FC470);
            *(void *)(v85 + 96) = &type metadata for String;
            *(void *)(v85 + 104) = v87;
            *(void *)(v85 + 72) = 0;
            *(void *)(v85 + 80) = 0xE000000000000000;
          }
          else
          {
            uint64_t v102 = v85 + 72;
            uint64_t v91 = v79;
            uint64_t v92 = (uint64_t)v114;
            static Date.FormatStyle.TimeStyle.omitted.getter();
            static FormatStyleCapitalizationContext.standalone.getter();
            static Locale.autoupdatingCurrent.getter();
            static Calendar.autoupdatingCurrent.getter();
            static TimeZone.autoupdatingCurrent.getter();
            static Date.now.getter();
            uint64_t v119 = &type metadata for String;
            unint64_t v120 = v87;
            sub_10001B314((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
            Date.formatted<A>(_:)();
            sub_10001B35C(v92, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
            (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v91, v88);
            sub_10001B3BC(&v118, v102);
          }
          uint64_t v93 = (uint64_t)v113;
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          long long v113 = (char *)xmmword_10083DD18;
          uint64_t v94 = swift_allocObject();
          *(_OWORD *)(v94 + 16) = v115;
          if (qword_1007F75B0 != -1) {
            swift_once();
          }
          long long v95 = xmmword_10083DD08;
          *(void *)(v94 + 56) = &type metadata for String;
          *(void *)(v94 + 64) = v87;
          *(_OWORD *)(v94 + 32) = v95;
          sub_10001B220(v110, v93, (uint64_t *)&unk_1007FC470);
          uint64_t v96 = v93;
          int v97 = v105(v93, 1, v88);
          swift_bridgeObjectRetain();
          if (v97 == 1)
          {
            sub_10001457C(v96, (uint64_t *)&unk_1007FC470);
            *(void *)(v94 + 96) = &type metadata for String;
            *(void *)(v94 + 104) = v87;
            *(void *)(v94 + 72) = 0;
            *(void *)(v94 + 80) = 0xE000000000000000;
          }
          else
          {
            *(void *)&long long v115 = v94 + 72;
            uint64_t v98 = (uint64_t)v114;
            static Date.FormatStyle.TimeStyle.shortened.getter();
            static FormatStyleCapitalizationContext.standalone.getter();
            static Locale.autoupdatingCurrent.getter();
            static Calendar.autoupdatingCurrent.getter();
            static TimeZone.autoupdatingCurrent.getter();
            static Date.now.getter();
            uint64_t v119 = &type metadata for String;
            unint64_t v120 = v87;
            sub_10001B314((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
            Date.formatted<A>(_:)();
            sub_10001B35C(v98, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
            (*((void (**)(uint64_t, uint64_t))v103 + 1))(v96, v88);
            sub_10001B3BC(&v118, v115);
          }
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          id v99 = *(id *)(v104 + v111);
          swift_bridgeObjectRelease();
          NSString v100 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v99 setText:v100];

          char v64 = v108;
LABEL_78:
          sub_10001920C(v117);

          sub_10001B35C((uint64_t)v116, _s16StateOfMindAssetC15StateOfMindDataVMa);
          break;
        default:
          JUMPOUT(0);
      }
      return;
  }
}

uint64_t sub_100016B38()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v2 - 8);
  int v60 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v63 = v5;
  char v64 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v54 - v7;
  uint64_t v67 = type metadata accessor for Date();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v61 = v9;
  char v62 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v54 - v11;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset;
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset);
  if (!v22 || !*(void *)(v22 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v15, 1, 1, v16, v18);
LABEL_8:
    uint64_t result = sub_10001457C((uint64_t)v15, (uint64_t *)&unk_100807640);
    uint64_t v28 = *(void **)(v0 + v21);
    if (!v28) {
      return result;
    }
    goto LABEL_9;
  }
  swift_retain();
  sub_100039278((uint64_t)v15);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_8;
  }
  sub_10001ABC8((uint64_t)v15, (uint64_t)v20);
  id v23 = [self mainScreen];
  id v24 = [v23 traitCollection];

  id v25 = [v24 userInterfaceStyle];
  if (v25 != (id)1)
  {
    uint64_t v26 = sub_10008B6D4();
    if (!v26) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  uint64_t v26 = sub_10008B2E4();
  if (v26)
  {
LABEL_21:
    id v52 = *(id *)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer);
    sub_100091570((unint64_t)v26);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v52 setColors:isa];
  }
LABEL_22:
  uint64_t result = sub_10001B35C((uint64_t)v20, _s16StateOfMindAssetC15StateOfMindDataVMa);
  uint64_t v28 = *(void **)(v1 + v21);
  if (!v28) {
    return result;
  }
LABEL_9:
  id v59 = v28;
  Date.init()();
  uint64_t v29 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v30 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v68 = v12;
  switch(v30)
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    default:
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_15:
        if (qword_1007F6A60 != -1) {
          swift_once();
        }
        uint64_t v32 = &qword_10083CF68;
      }
      else
      {
        if (qword_1007F6A58 != -1) {
          swift_once();
        }
        uint64_t v32 = &qword_10083CF60;
      }
      uint64_t v33 = (void *)*v32;
      uint64_t v34 = self;
      id v57 = v34;
      id v58 = v33;
      id v35 = [v34 currentTraitCollection];
      id v36 = [v35 userInterfaceStyle];

      BOOL v56 = v36 != (id)1;
      UUID.init()();
      id v37 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      uint64_t v38 = (uint64_t)v60;
      NSString v55 = v8;
      uint64_t v39 = v66;
      v37(v60, v8, v66);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v38, 0, 1, v39);
      uint64_t v40 = v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_latestImageRequestID;
      swift_beginAccess();
      sub_10001ACF4(v38, v40);
      swift_endAccess();
      LODWORD(v60) = *(unsigned __int8 *)(v1 + v29);
      uint64_t v41 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v42 = v64;
      v37(v64, v8, v39);
      uint64_t v43 = v65;
      uint64_t v44 = v62;
      uint64_t v45 = v67;
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v68, v67);
      unint64_t v46 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      unint64_t v47 = (v63 + *(unsigned __int8 *)(v43 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v41;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v48 + v46, v42, v39);
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v48 + v47, v44, v45);
      swift_retain();
      id v49 = [v57 currentTraitCollection];
      unint64_t v51 = v58;
      uint64_t v50 = v59;
      sub_10017D574(v60, v56, 0, v58, v49, (uint64_t)sub_10001AEB4, v48);

      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v55, v39);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v68, v45);
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_100017370(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  id v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  aBlock[4] = sub_10001B0EC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100796648;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  uint64_t v22 = v34;
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = &_swiftEmptyArrayStorage;
  sub_10001B314((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  id v24 = v35;
  uint64_t v23 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v25 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_100017844(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v63 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  NSString v55 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v54 - v8;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v56 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v62 = (char *)&v54 - v12;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v57 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v24 = (char *)&v54 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v54 - v26;
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  uint64_t v29 = Strong;
  id v58 = a2;
  if (!a2)
  {

LABEL_7:
    swift_beginAccess();
    uint64_t v35 = swift_unknownObjectWeakLoadStrong();
    if (!v35) {
      return;
    }
    uint64_t v36 = (unsigned char *)v35;
    int v37 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v37 == 1 || !swift_unknownObjectWeakLoadStrong())
    {

      return;
    }
    sub_100491AF4();
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v27, v63, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  uint64_t v30 = (uint64_t)&v29[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_latestImageRequestID];
  swift_beginAccess();
  sub_10001B220(v30, (uint64_t)v24, &qword_100800950);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_10001B220((uint64_t)v27, (uint64_t)v18, &qword_100800950);
  sub_10001B220((uint64_t)v24, v31, &qword_100800950);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v32((uint64_t)v18, 1, v13) == 1)
  {
    id v33 = v58;
    id v34 = v58;
    sub_10001457C((uint64_t)v24, &qword_100800950);
    sub_10001457C((uint64_t)v27, &qword_100800950);
    if (v32(v31, 1, v13) == 1)
    {
      sub_10001457C((uint64_t)v18, &qword_100800950);
      goto LABEL_16;
    }
LABEL_14:
    sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FEB40);
    goto LABEL_28;
  }
  sub_10001B220((uint64_t)v18, (uint64_t)v21, &qword_100800950);
  if (v32(v31, 1, v13) == 1)
  {
    id v38 = v58;
    id v39 = v58;
    sub_10001457C((uint64_t)v24, &qword_100800950);
    sub_10001457C((uint64_t)v27, &qword_100800950);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    id v33 = v38;
    goto LABEL_14;
  }
  uint64_t v40 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v57, v31, v13);
  sub_10001B314((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  id v41 = v58;
  LODWORD(v63) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v14 + 8);
  v42(v40, v13);
  sub_10001457C((uint64_t)v24, &qword_100800950);
  sub_10001457C((uint64_t)v27, &qword_100800950);
  v42(v21, v13);
  id v33 = v58;
  sub_10001457C((uint64_t)v18, &qword_100800950);
  if ((v63 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_16:
  [*(id *)&v29[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView] setImage:v33];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  char v43 = 1;
  uint64_t v45 = v61;
  uint64_t v44 = (uint64_t)v62;
  uint64_t v46 = v60;
  switch(v29[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
  {
    case 5:
      break;
    default:
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      break;
  }
  swift_retain_n();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v44, v59, v45);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v45);
  if ((v43 & 1) == 0)
  {
    uint64_t v47 = v56;
    sub_10001B220(v44, v56, (uint64_t *)&unk_1007FC470);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v45) == 1)
    {
      sub_10001457C(v47, (uint64_t *)&unk_1007FC470);
LABEL_23:
      static Animation.easeIn(duration:)();
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      static UIView.animate(_:changes:completion:)();
      swift_release();
      goto LABEL_24;
    }
    uint64_t v48 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v54, v47, v45);
    id v49 = v55;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v51 = v50;
    id v52 = *(void (**)(char *, uint64_t))(v46 + 8);
    v52(v49, v45);
    v52(v48, v45);
    if (v51 >= 0.1) {
      goto LABEL_23;
    }
  }
  sub_10001817C();
LABEL_24:
  swift_release();
  swift_release();
  sub_10001457C(v44, (uint64_t *)&unk_1007FC470);
  swift_release();
  char v53 = v29[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
  v29[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
  if ((v53 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v36 = v29;
    sub_100491AF4();

LABEL_27:
    swift_unknownObjectRelease();
    return;
  }
LABEL_28:
}

void sub_10001817C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (unsigned char *)Strong;
    LODWORD(v1) = 1.0;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer) setOpacity:v1];
    uint64_t v3 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
    [*(id *)&v2[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView] setContentMode:1];
    char v4 = v2[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
    v2[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
    if ((v4 & 1) == 0)
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v5 = v2;
        sub_100491AF4();

        swift_unknownObjectRelease();
      }
    }
    [*(id *)&v2[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView] setHidden:1];
    [*(id *)&v2[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel] setAlpha:1.0];
    [*(id *)&v2[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel] setAlpha:1.0];
    [*(id *)&v2[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel] setAlpha:1.0];
    [*(id *)&v2[v3] setAlpha:1.0];
  }
}

uint64_t sub_1000182D8(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset);
  if (!v10 || !*(void *)(v10 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v4, 1, 1, v5, v7);
    return sub_10001457C((uint64_t)v4, (uint64_t *)&unk_100807640);
  }
  swift_retain();
  sub_100039278((uint64_t)v4);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10001457C((uint64_t)v4, (uint64_t *)&unk_100807640);
  }
  sub_10001ABC8((uint64_t)v4, (uint64_t)v9);
  id v11 = [self mainScreen];
  id v12 = [v11 traitCollection];

  id v13 = [v12 userInterfaceStyle];
  if (v13 == (id)1)
  {
    unint64_t v14 = (unint64_t)sub_10008B2E4();
    if (!v14) {
      return sub_10001B35C((uint64_t)v9, _s16StateOfMindAssetC15StateOfMindDataVMa);
    }
  }
  else
  {
    unint64_t v14 = (unint64_t)sub_10008B6D4();
    if (!v14) {
      return sub_10001B35C((uint64_t)v9, _s16StateOfMindAssetC15StateOfMindDataVMa);
    }
  }
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_12;
    }
  }
  else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    id v16 = *(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer);
    sub_100091570(v14);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v16 setColors:isa];

    return sub_10001B35C((uint64_t)v9, _s16StateOfMindAssetC15StateOfMindDataVMa);
  }
  sub_10001B35C((uint64_t)v9, _s16StateOfMindAssetC15StateOfMindDataVMa);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000185D4(uint64_t a1, double a2)
{
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel) setAlpha:];
  *(float *)&double v4 = a2;
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer) setOpacity:v4];
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView) setAlpha:a2];
  uint64_t v5 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  if (sub_1000186F0(*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType), (uint64_t)&off_100790F10)) {
    [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) setAlpha:a2];
  }
  uint64_t result = sub_1000186F0(*(unsigned char *)(a1 + v5), (uint64_t)&off_100790F38);
  if (result)
  {
    [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel) setAlpha:a2];
    __n128 v7 = *(void **)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel);
    return (uint64_t)[v7 setAlpha:a2];
  }
  return result;
}

uint64_t sub_1000186F0(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (2)
    {
      uint64_t v6 = a2 + v5++;
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 0x656772614C78;
      switch(*(unsigned char *)(v6 + 32))
      {
        case 1:
          uint64_t v8 = 0x69576D756964656DLL;
          unint64_t v7 = 0xEA00000000006564;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656772616CLL;
          break;
        case 3:
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6C6C616D73;
          break;
        case 5:
          unint64_t v7 = 0xEA00000000006E65;
          uint64_t v8 = 0x657263536C6C7566;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656772614C78;
      switch(a1)
      {
        case 1:
          unint64_t v9 = 0xEA00000000006564;
          if (v8 == 0x69576D756964656DLL) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x656772616CLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          if (v8 != 0x6D756964656DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6C6C616D73;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000006E65;
          if (v8 != 0x657263536C6C7566) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 1;
          }
LABEL_19:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
          if (v2 != v5) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  return 0;
}

uint64_t sub_100018958(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  unint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_100018A20(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100018A80(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100018AE4(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xE500000000000000;
    uint64_t v8 = 0x6F746F6870;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        uint64_t v8 = 0x746F68506576696CLL;
        unint64_t v7 = 0xE90000000000006FLL;
        break;
      case 2:
        uint64_t v8 = 0x6F65646976;
        break;
      case 3:
        uint64_t v8 = 0x636973756DLL;
        break;
      case 4:
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x74736163646F70;
        break;
      case 5:
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1802465122;
        break;
      case 6:
        uint64_t v8 = 0x6F69647561;
        break;
      case 7:
        uint64_t v8 = 0x7469736976;
        break;
      case 8:
        uint64_t v8 = 0x6E695069746C756DLL;
        unint64_t v7 = 0xEB0000000070614DLL;
        break;
      case 9:
        unint64_t v7 = 0xEA00000000007061;
        uint64_t v8 = 0x4D636972656E6567;
        break;
      case 0xA:
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1802398060;
        break;
      case 0xB:
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x746361746E6F63;
        break;
      case 0xC:
        uint64_t v8 = 0x4974756F6B726F77;
        unint64_t v7 = 0xEB000000006E6F63;
        break;
      case 0xD:
        uint64_t v8 = 0x5274756F6B726F77;
        unint64_t v7 = 0xEC0000006574756FLL;
        break;
      case 0xE:
        uint64_t v8 = 0x697463656C666572;
        unint64_t v7 = 0xEA00000000006E6FLL;
        break;
      case 0xF:
        uint64_t v8 = 0x4D664F6574617473;
        unint64_t v7 = 0xEB00000000646E69;
        break;
      case 0x10:
        uint64_t v8 = 0x63416E6F69746F6DLL;
        unint64_t v7 = 0xEE00797469766974;
        break;
      case 0x11:
        uint64_t v8 = 0x7261506472696874;
        unint64_t v7 = 0xEF616964654D7974;
        break;
      case 0x12:
        uint64_t v8 = 0x6C6F686563616C70;
        unint64_t v7 = 0xEB00000000726564;
        break;
      case 0x13:
        uint64_t v8 = 0x76456B6165727473;
        unint64_t v7 = 0xEB00000000746E65;
        break;
      case 0x14:
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    unint64_t v9 = 0xE500000000000000;
    uint64_t v10 = 0x6F746F6870;
    switch(a1)
    {
      case 1:
        unint64_t v9 = 0xE90000000000006FLL;
        if (v8 == 0x746F68506576696CLL) {
          goto LABEL_61;
        }
        goto LABEL_62;
      case 2:
        uint64_t v11 = 1701079414;
        goto LABEL_34;
      case 3:
        if (v8 != 0x636973756DLL) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 4:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v12 = 0x736163646F70;
        goto LABEL_44;
      case 5:
        unint64_t v9 = 0xE400000000000000;
        if (v8 != 1802465122) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 6:
        uint64_t v11 = 1768191329;
LABEL_34:
        if (v8 != (v11 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 7:
        if (v8 != 0x7469736976) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 8:
        uint64_t v13 = 0x6E695069746C756DLL;
        uint64_t v14 = 7364941;
        goto LABEL_57;
      case 9:
        unint64_t v9 = 0xEA00000000007061;
        if (v8 != 0x4D636972656E6567) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 10:
        unint64_t v9 = 0xE400000000000000;
        if (v8 != 1802398060) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 11:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v12 = 0x6361746E6F63;
LABEL_44:
        if (v8 != (v12 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 12:
        uint64_t v13 = 0x4974756F6B726F77;
        uint64_t v14 = 7237475;
        goto LABEL_57;
      case 13:
        unint64_t v9 = 0xEC0000006574756FLL;
        if (v8 != 0x5274756F6B726F77) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 14:
        unint64_t v9 = 0xEA00000000006E6FLL;
        if (v8 != 0x697463656C666572) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 15:
        uint64_t v13 = 0x4D664F6574617473;
        uint64_t v14 = 6581865;
        goto LABEL_57;
      case 16:
        unint64_t v9 = 0xEE00797469766974;
        if (v8 != 0x63416E6F69746F6DLL) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 17:
        unint64_t v9 = 0xEF616964654D7974;
        if (v8 != 0x7261506472696874) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 18:
        uint64_t v13 = 0x6C6F686563616C70;
        uint64_t v14 = 7497060;
LABEL_57:
        unint64_t v9 = v14 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        if (v8 != v13) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 19:
        uint64_t v10 = 0x76456B6165727473;
        unint64_t v9 = 0xEB00000000746E65;
        goto LABEL_60;
      case 20:
        unint64_t v9 = 0xE700000000000000;
        if (v8 != 0x6E776F6E6B6E75) {
          goto LABEL_62;
        }
        goto LABEL_61;
      default:
LABEL_60:
        if (v8 != v10) {
          goto LABEL_62;
        }
LABEL_61:
        if (v7 == v9)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_62:
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (v2 == v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

uint64_t sub_100019124(uint64_t a1, double a2)
{
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel) setAlpha:];
  uint64_t v4 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  if (sub_1000186F0(*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType), (uint64_t)&off_100790F60)) {
    [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) setAlpha:a2];
  }
  uint64_t result = sub_1000186F0(*(unsigned char *)(a1 + v4), (uint64_t)&off_100790F88);
  if (result)
  {
    [*(id *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel) setAlpha:a2];
    uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel);
    return (uint64_t)[v6 setAlpha:a2];
  }
  return result;
}

void sub_10001920C(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  uint64_t v3 = qword_1007F72A0;
  id v4 = *(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel);
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10083D868;
  id v6 = [(id)qword_10083D868 fontDescriptor];
  id v7 = [v5 fontDescriptor];
  unsigned int v8 = [v7 symbolicTraits];

  id v9 = [v6 fontDescriptorWithSymbolicTraits:v8 | 0x8000];
  if (v9)
  {
    id v10 = [self fontWithDescriptor:v9 size:0.0];
  }
  else
  {
    id v10 = 0;
  }
  [v4 setFont:v10];

  uint64_t v11 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  uint64_t v12 = qword_1007F7290;
  id v13 = *(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel);
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_10083D858;
  id v15 = [(id)qword_10083D858 fontDescriptor];
  id v16 = [v14 fontDescriptor];
  unsigned int v17 = [v16 symbolicTraits];

  id v18 = [v15 fontDescriptorWithSymbolicTraits:v17 | 0x8000];
  if (v18)
  {
    id v19 = [self fontWithDescriptor:v18 size:0.0];
  }
  else
  {
    id v19 = 0;
  }
  [v13 setFont:v19];

  uint64_t v20 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  id v21 = (void *)qword_10083D858;
  id v22 = *(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel);
  id v23 = [v21 fontDescriptor];
  id v24 = [v21 fontDescriptor];
  unsigned int v25 = [v24 symbolicTraits];

  id v26 = [v23 fontDescriptorWithSymbolicTraits:v25 | 0x8000];
  if (v26)
  {
    id v27 = [self fontWithDescriptor:v26 size:0.0];
  }
  else
  {
    id v27 = 0;
  }
  [v22 setFont:v27];

  id v28 = [v1 traitCollection];
  id v29 = [v28 preferredContentSizeCategory];

  LOBYTE(v28) = static UIContentSizeCategory.>= infix(_:_:)();
  if (v28) {
    uint64_t v30 = 1;
  }
  else {
    uint64_t v30 = 2;
  }
  [*(id *)((char *)v1 + v2) setNumberOfLines:v30 UIContentSizeCategoryAccessibilityMedium];
  [*(id *)((char *)v1 + v11) setNumberOfLines:v30];
  NSString v78 = (char *)v20;
  [*(id *)((char *)v1 + v20) setNumberOfLines:v30];
  uint64_t v77 = v2;
  uint64_t v31 = *(void **)((char *)v1 + v2);
  uint64_t v32 = self;
  id v33 = v31;
  id v34 = [v32 labelColor];
  id v35 = [v34 colorWithAlphaComponent:0.6];

  [v33 setTextColor:v35];
  id v36 = *(id *)((char *)v1 + v11);
  id v37 = [v32 tertiaryLabelColor];
  [v36 setTextColor:v37];

  uint64_t v38 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  id v39 = (void *)qword_10083D858;
  id v40 = *(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel);
  id v41 = [v39 fontDescriptor];
  id v42 = [v39 fontDescriptor];
  unsigned int v43 = [v42 symbolicTraits];

  id v44 = [v41 fontDescriptorWithSymbolicTraits:v43 | 0x8000];
  if (v44)
  {
    id v45 = [self fontWithDescriptor:v44 size:0.0];
  }
  else
  {
    id v45 = 0;
  }
  [v40 setFont:v45];

  id v46 = *(id *)((char *)v1 + v38);
  id v47 = [v32 tertiaryLabelColor];
  [v46 setTextColor:v47];

  switch(a1)
  {
    case 2:
      id v51 = *(id *)((char *)v1 + v11);
      id v52 = [v32 secondaryLabelColor];
      [v51 setTextColor:v52];

      goto LABEL_23;
    case 4:
    case 6:
LABEL_23:
      [*(id *)((char *)v1 + v2) setTextAlignment:1];
      [*(id *)((char *)v1 + v11) setTextAlignment:1];
      char v53 = *(void **)&v78[(void)v1];
      [v53 setTextAlignment:1];
      return;
    case 5:
      [*(id *)((char *)v1 + v2) setTextAlignment:1];
      [*(id *)((char *)v1 + v11) setTextAlignment:1];
      [*(id *)&v78[(void)v1] setTextAlignment:1];
      uint64_t v54 = *(void **)((char *)v1 + v2);
      NSString v55 = self;
      id v56 = v54;
      id v57 = [v55 preferredFontForTextStyle:UIFontTextStyleTitle3];
      id v58 = [v57 fontDescriptor];
      id v59 = [v57 fontDescriptor];
      unsigned int v60 = [v59 symbolicTraits];

      id v61 = [v58 fontDescriptorWithSymbolicTraits:v60 | 2];
      if (v61)
      {
        id v62 = [v55 fontWithDescriptor:v61 size:0.0];

        uint64_t v63 = v55;
        if (v62)
        {

          id v57 = v62;
        }
      }
      else
      {
        uint64_t v63 = v55;
      }
      [v56 setFont:v57];

      id v64 = *(id *)((char *)v1 + v11);
      id v65 = [v63 preferredFontForTextStyle:UIFontTextStyleBody];
      [v64 setFont:v65];

      id v66 = *(id *)&v78[(void)v1];
      id v67 = [v63 preferredFontForTextStyle:UIFontTextStyleBody];
      [v66 setFont:v67];

      id v68 = *(id *)((char *)v1 + v77);
      id v69 = [v32 labelColor];
      [v68 setTextColor:v69];

      [v68 setMaximumContentSizeCategory:v75];
      [v68 setAdjustsFontForContentSizeCategory:1];
      [v68 setNumberOfLines:0];
      [v68 setLineBreakMode:4];
      [v68 setTextAlignment:1];

      id v70 = *(id *)((char *)v1 + v11);
      id v71 = [v32 labelColor];
      [v70 setTextColor:v71];

      [v70 setMaximumContentSizeCategory:v75];
      [v70 setAdjustsFontForContentSizeCategory:1];
      [v70 setNumberOfLines:0];
      [v70 setLineBreakMode:4];
      [v70 setTextAlignment:1];

      id v72 = *(id *)&v78[(void)v1];
      id v73 = [v32 secondaryLabelColor];
      [v72 setTextColor:v73];

      [v72 setMaximumContentSizeCategory:v75];
      [v72 setAdjustsFontForContentSizeCategory:1];
      [v72 setNumberOfLines:0];
      [v72 setLineBreakMode:4];
      [v72 setTextAlignment:1];

      id v79 = *(id *)((char *)v1 + v38);
      id v74 = [v32 secondaryLabelColor];
      [v79 setTextColor:v74];

      [v79 setMaximumContentSizeCategory:v75];
      [v79 setAdjustsFontForContentSizeCategory:1];
      [v79 setNumberOfLines:0];
      [v79 setLineBreakMode:4];
      [v79 setTextAlignment:1];
      goto LABEL_31;
    default:
      [*(id *)((char *)v1 + v2) setTextAlignment:4];
      [*(id *)((char *)v1 + v11) setTextAlignment:4];
      [*(id *)&v78[(void)v1] setTextAlignment:4];
      id v48 = *(id *)&v78[(void)v1];
      id v49 = [v32 tertiaryLabelColor];
      [v48 setTextColor:v49];

      id v50 = *(id *)((char *)v1 + v11);
      id v79 = [v32 secondaryLabelColor];
      [v50 setTextColor:v79];

LABEL_31:

      return;
  }
}

uint64_t sub_100019DC8(char a1)
{
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel) setHidden:a1 & 1];
  uint64_t v3 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  if (sub_1000186F0(*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType), (uint64_t)&off_100790FB0))
  {
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel) setHidden:a1 & 1];
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel) setHidden:a1 & 1];
  }
  uint64_t result = sub_1000186F0(*(unsigned char *)(v1 + v3), (uint64_t)&off_100790FD8);
  if (result)
  {
    uint64_t v5 = a1 & 1;
    [*(id *)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) setHidden:v5];
    id v6 = *(void **)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel);
    return (uint64_t)[v6 setHidden:v5];
  }
  return result;
}

uint64_t sub_100019ECC(void *a1)
{
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_10001AC6C;
  *(void *)(v5 + 24) = v4;
  id v35 = sub_10001AC84;
  uint64_t v36 = v5;
  uint64_t v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  id v33 = sub_1003F44E4;
  id v34 = &unk_100796558;
  id v6 = _Block_copy(&v31);
  id v7 = a1;
  unsigned int v8 = v1;
  swift_retain();
  swift_release();
  [v3 performWithoutAnimation:v6];
  _Block_release(v6);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    id v10 = &unk_10083C000;
    if (!a1)
    {
      id v18 = *(id *)&v8[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView];
      uint64_t v20 = (double *)&v8[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame];
      if (v8[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame + 32])
      {
        [v18 frame];
        double v22 = v21;
        double v24 = v23;
        double v26 = v25;
        double v28 = v27;
      }
      else
      {
        double v26 = v20[2];
        double v28 = v20[3];
        double v22 = *v20;
        double v24 = v20[1];
        id v29 = v18;
      }
      [v18 setFrame:v22, v24, v26, v28];
      id v19 = 0;
      goto LABEL_9;
    }
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v8;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_10001ACDC;
    *(void *)(v12 + 24) = v11;
    id v35 = sub_10001B3DC;
    uint64_t v36 = v12;
    uint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    id v33 = sub_1003F44E4;
    id v34 = &unk_1007965D0;
    id v13 = _Block_copy(&v31);
    uint64_t v14 = v8;
    id v15 = (char *)v7;
    swift_retain();
    swift_release();
    [v3 performWithoutAnimation:v13];
    _Block_release(v13);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      unsigned int v17 = *(void **)&v15[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView];
      id v18 = *(id *)&v14[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView];
      [v17 frame];
      [v18 setFrame:];

      id v19 = sub_10001ACDC;
      id v10 = (void *)&unk_10083C000;
LABEL_9:

      uint64_t v30 = &v8[v10[433]];
      *(_OWORD *)uint64_t v30 = 0u;
      *((_OWORD *)v30 + 1) = 0u;
      v30[32] = 1;
      swift_release();
      return sub_10001ABB8((uint64_t)v19);
    }
  }
  __break(1u);
  return result;
}

unsigned char *sub_10001A26C(unsigned char *result, void *a2)
{
  if (result)
  {
    unsigned __int8 v3 = result[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
    char v4 = *((unsigned char *)a2 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    *((unsigned char *)a2 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = v3;
    uint64_t v5 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    if (*((unsigned char *)a2 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated) != 1
      || (sub_10017CB6C(v3, v4) & 1) == 0)
    {
      (*(void (**)(void))((swift_isaMask & *a2) + 0x110))();
      *((unsigned char *)a2 + v5) = 1;
    }
    return [a2 layoutIfNeeded];
  }
  return result;
}

void sub_10001A328(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView);
  uint64_t v2 = (double *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame);
  id v12 = v1;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame + 32))
  {
    [v1 frame];
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
  }
  else
  {
    double v8 = v2[2];
    double v10 = v2[3];
    double v4 = *v2;
    double v6 = v2[1];
    id v11 = v1;
  }
  [v12 setFrame:v4, v6, v8, v10];
}

void sub_10001A3DC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x58);
  uint64_t v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  double v4 = v1;
  v2(11, v3);
}

void *sub_10001A488()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset);
  id v2 = v1;
  return v1;
}

void *sub_10001A4B8()
{
  id v1 = v0;
  return v0;
}

void sub_10001A4D4()
{
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_latestImageRequestID, &qword_100800950);
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView);
}

id sub_10001A58C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindAssetView();
  return [super dealloc];
}

uint64_t sub_10001A688()
{
  return type metadata accessor for StateOfMindAssetView();
}

uint64_t type metadata accessor for StateOfMindAssetView()
{
  uint64_t result = qword_1007F8F28;
  if (!qword_1007F8F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001A6DC()
{
  sub_10001A7A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10001A7A4()
{
  if (!qword_1007FEA40)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007FEA40);
    }
  }
}

void sub_10001A7FC(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_stateOfMindAsset) = a1;
  id v4 = a1;

  sub_100016B38();
  sub_1000157E4(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType));
  uint64_t v5 = *(void *)(v1 + v2);
  if (v5)
  {
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    double v7 = (void (**)())(v5 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    void *v7 = sub_10001ABB0;
    v7[1] = (void (*)())v6;
    sub_10001ABB8(v8);
  }
}

void sub_10001A8C4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer] setOpacity:0.0];
  id v2 = [v0 snapshotViewAfterScreenUpdates:1];
  uint64_t v3 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView;
  id v4 = *(void **)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView];
  *(void *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView] = v2;

  LODWORD(v5) = 1.0;
  [*(id *)&v0[v1] setOpacity:v5];
  uint64_t v6 = *(void **)&v0[v3];
  if (v6)
  {
    id v20 = v6;
    [v0 addSubview:v20];
    [v0 bounds];
    [v20 setFrame:];
    [v20 setContentMode:1];
    id v7 = [v20 superview];
    if (v7)
    {
      uint64_t v8 = v7;
      [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v9 = [v20 centerYAnchor];
      id v10 = [v8 centerYAnchor];
      id v11 = [v9 constraintEqualToAnchor:v10];

      [v11 setConstant:0.0];
      id v12 = v11;
      [v12 setActive:1];
    }
    id v13 = [v20 superview];
    if (v13)
    {
      uint64_t v14 = v13;
      [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v15 = [v20 centerXAnchor];
      id v16 = [v14 centerXAnchor];
      id v17 = [v15 constraintEqualToAnchor:v16];

      [v17 setConstant:0.0];
      id v18 = v17;
      [v18 setActive:1];

      id v19 = v14;
    }
    else
    {
      id v19 = v20;
    }
  }
}

uint64_t sub_10001AB78()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10001ABB0()
{
}

uint64_t sub_10001ABB8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10001ABC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001AC2C()
{
  return swift_deallocObject();
}

unsigned char *sub_10001AC6C()
{
  return sub_10001A26C(*(unsigned char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10001AC74()
{
  return swift_deallocObject();
}

uint64_t sub_10001AC84()
{
  return sub_1003F44BC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10001AC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001AC9C()
{
  return swift_release();
}

uint64_t sub_10001ACA4()
{
  return swift_deallocObject();
}

void sub_10001ACDC()
{
  sub_10001A328(*(void *)(v0 + 16));
}

uint64_t sub_10001ACE4()
{
  return swift_deallocObject();
}

uint64_t sub_10001ACF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100800950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001AD5C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_10001AEB4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100017370(a1, v7, v1 + v4, v8);
}

uint64_t sub_10001AF8C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_10001B0EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_100017844(v5, v6, v0 + v2, v7);
}

unint64_t sub_10001B1BC()
{
  unint64_t result = qword_1007FBD20;
  if (!qword_1007FBD20)
  {
    sub_100014440(&qword_100804DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD20);
  }
  return result;
}

void sub_10001B218()
{
}

uint64_t sub_10001B220(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100010218(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001B284(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_10001B2C0()
{
  unint64_t result = qword_1007FEAB0;
  if (!qword_1007FEAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FEAB0);
  }
  return result;
}

uint64_t sub_10001B314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001B35C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001B3BC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10001B3D4()
{
  return sub_1000182D8(*(void *)(v0 + 16));
}

uint64_t NSBundle.appVersion.getter()
{
  return sub_10001B4BC(0xD00000000000001ALL, 0x80000001006870A0);
}

uint64_t sub_10001B418(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FAD50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t NSBundle.appBuild.getter()
{
  return sub_10001B4BC(0x656C646E75424643, 0xEF6E6F6973726556);
}

uint64_t NSBundle.appName.getter()
{
  return sub_10001B4BC(0x656C646E75424643, 0xEC000000656D614ELL);
}

uint64_t sub_10001B4BC(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 infoDictionary];
  if (!v5)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_10001B5D0(a1, a2), (v9 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10001B648(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_9:
    sub_10001B418((uint64_t)&v12);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v11;
  }
  return 0;
}

unint64_t sub_10001B5D0(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10001BF44(a1, a2, v4);
}

uint64_t sub_10001B648(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_10001B6A8(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10001C0F0(a1, v2);
}

unint64_t sub_10001B738(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10001C028(a1, v4);
}

unint64_t sub_10001B77C(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10001C268(a1, v2);
}

unint64_t sub_10001B8AC(char a1)
{
  Hasher.init(_seed:)();
  sub_100041A58(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10001C4E0(a1, v2);
}

unint64_t sub_10001B934(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for CFString(0);
  sub_10001DF60(&qword_1007F8F40, type metadata accessor for CFString);
  _CFObject.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10001CB34(a1, v2);
}

unint64_t sub_10001B9E8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10001CF60(a1, v4, (unint64_t *)&qword_100800A40);
}

unint64_t sub_10001BA38(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_10001DF60((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_10001CC90(a1, v2);
}

uint64_t sub_10001BAD0(double a1, double a2)
{
  return sub_10001BD38((void (*)(unsigned char *, double, double))CLLocationCoordinate2D.hash(into:), (uint64_t (*)(Swift::Int, __n128, __n128))sub_10001CE50, a1, a2);
}

unint64_t sub_10001BAFC(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();

  return sub_10001CEC4(a1, v2);
}

unint64_t sub_10001BB40(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10001CF60(a1, v4, (unint64_t *)&qword_1007FF330);
}

unint64_t sub_10001BB90(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  sub_1002319D0();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10001D074(a1, v2);
}

unint64_t sub_10001BBFC(void *a1)
{
  Hasher.init(_seed:)();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v3 = a1;
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10001DFA8(a1);
      break;
  }
  Swift::Int v4 = Hasher._finalize()();

  return sub_10001D390(a1, v4);
}

uint64_t sub_10001BD0C(double a1, double a2)
{
  return sub_10001BD38((void (*)(unsigned char *, double, double))CLLocationCoordinate2D.hash(into:), (uint64_t (*)(Swift::Int, __n128, __n128))sub_10001CE50, a1, a2);
}

uint64_t sub_10001BD38(void (*a1)(unsigned char *, double, double), uint64_t (*a2)(Swift::Int, __n128, __n128), double a3, double a4)
{
  Hasher.init(_seed:)();
  a1(v12, a3, a4);
  Swift::Int v7 = Hasher._finalize()();
  v8.n128_f64[0] = a3;
  v9.n128_f64[0] = a4;

  return a2(v7, v8, v9);
}

unint64_t sub_10001BDC8(char a1)
{
  char v2 = a1 & 1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Swift::Int v3 = Hasher._finalize()();

  return sub_10001D568(v2, v3);
}

unint64_t sub_10001BE38(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10001CF60(a1, v4, (unint64_t *)&qword_1007F9110);
}

unint64_t sub_10001BE88(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10001CF60(a1, v4, &qword_1007F8F48);
}

unint64_t sub_10001BED8(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_10001D624(a1, v2);
}

unint64_t sub_10001BF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        long long v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10001C028(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10001DEB0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10001DF0C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10001C0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10001C268(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 0x656772614C78;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x69576D756964656DLL;
          unint64_t v7 = 0xEA00000000006564;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656772616CLL;
          break;
        case 3:
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6C6C616D73;
          break;
        case 5:
          unint64_t v7 = 0xEA00000000006E65;
          uint64_t v8 = 0x657263536C6C7566;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656772614C78;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEA00000000006564;
          if (v8 == 0x69576D756964656DLL) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x656772616CLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          if (v8 != 0x6D756964656DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6C6C616D73;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000006E65;
          if (v8 != 0x657263536C6C7566) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10001C4E0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x6F746F6870;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x746F68506576696CLL;
          unint64_t v7 = 0xE90000000000006FLL;
          break;
        case 2:
          uint64_t v8 = 0x6F65646976;
          break;
        case 3:
          uint64_t v8 = 0x636973756DLL;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x74736163646F70;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1802465122;
          break;
        case 6:
          uint64_t v8 = 0x6F69647561;
          break;
        case 7:
          uint64_t v8 = 0x7469736976;
          break;
        case 8:
          uint64_t v8 = 0x6E695069746C756DLL;
          unint64_t v7 = 0xEB0000000070614DLL;
          break;
        case 9:
          unint64_t v7 = 0xEA00000000007061;
          uint64_t v8 = 0x4D636972656E6567;
          break;
        case 0xA:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1802398060;
          break;
        case 0xB:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x746361746E6F63;
          break;
        case 0xC:
          uint64_t v8 = 0x4974756F6B726F77;
          unint64_t v7 = 0xEB000000006E6F63;
          break;
        case 0xD:
          uint64_t v8 = 0x5274756F6B726F77;
          unint64_t v7 = 0xEC0000006574756FLL;
          break;
        case 0xE:
          uint64_t v8 = 0x697463656C666572;
          unint64_t v7 = 0xEA00000000006E6FLL;
          break;
        case 0xF:
          uint64_t v8 = 0x4D664F6574617473;
          unint64_t v7 = 0xEB00000000646E69;
          break;
        case 0x10:
          uint64_t v8 = 0x63416E6F69746F6DLL;
          unint64_t v7 = 0xEE00797469766974;
          break;
        case 0x11:
          uint64_t v8 = 0x7261506472696874;
          unint64_t v7 = 0xEF616964654D7974;
          break;
        case 0x12:
          uint64_t v8 = 0x6C6F686563616C70;
          unint64_t v7 = 0xEB00000000726564;
          break;
        case 0x13:
          uint64_t v8 = 0x76456B6165727473;
          unint64_t v7 = 0xEB00000000746E65;
          break;
        case 0x14:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x6F746F6870;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE90000000000006FLL;
          if (v8 == 0x746F68506576696CLL) {
            goto LABEL_61;
          }
          goto LABEL_62;
        case 2:
          uint64_t v11 = 1701079414;
          goto LABEL_34;
        case 3:
          if (v8 != 0x636973756DLL) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 4:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v12 = 0x736163646F70;
          goto LABEL_44;
        case 5:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1802465122) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 6:
          uint64_t v11 = 1768191329;
LABEL_34:
          if (v8 != (v11 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 7:
          if (v8 != 0x7469736976) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 8:
          uint64_t v13 = 0x6E695069746C756DLL;
          uint64_t v14 = 7364941;
          goto LABEL_57;
        case 9:
          unint64_t v9 = 0xEA00000000007061;
          if (v8 != 0x4D636972656E6567) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 10:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1802398060) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 11:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v12 = 0x6361746E6F63;
LABEL_44:
          if (v8 != (v12 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 12:
          uint64_t v13 = 0x4974756F6B726F77;
          uint64_t v14 = 7237475;
          goto LABEL_57;
        case 13:
          unint64_t v9 = 0xEC0000006574756FLL;
          if (v8 != 0x5274756F6B726F77) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 14:
          unint64_t v9 = 0xEA00000000006E6FLL;
          if (v8 != 0x697463656C666572) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 15:
          uint64_t v13 = 0x4D664F6574617473;
          uint64_t v14 = 6581865;
          goto LABEL_57;
        case 16:
          unint64_t v9 = 0xEE00797469766974;
          if (v8 != 0x63416E6F69746F6DLL) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 17:
          unint64_t v9 = 0xEF616964654D7974;
          if (v8 != 0x7261506472696874) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 18:
          uint64_t v13 = 0x6C6F686563616C70;
          uint64_t v14 = 7497060;
LABEL_57:
          unint64_t v9 = v14 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          if (v8 != v13) {
            goto LABEL_62;
          }
          goto LABEL_61;
        case 19:
          uint64_t v10 = 0x76456B6165727473;
          unint64_t v9 = 0xEB00000000746E65;
          goto LABEL_60;
        case 20:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x6E776F6E6B6E75) {
            goto LABEL_62;
          }
          goto LABEL_61;
        default:
LABEL_60:
          if (v8 != v10) {
            goto LABEL_62;
          }
LABEL_61:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_62:
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10001CB34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_10001DF60(&qword_1007F8F40, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = static _CFObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = static _CFObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10001CC90(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_10001DF60((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10001CE50(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10001CEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10001CF60(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10001B284(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10001D074(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x6F746F6870;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x6F65646976;
          break;
        case 2:
          uint64_t v8 = 0x6F69647561;
          break;
        case 3:
          uint64_t v8 = 0x616964656DLL;
          break;
        case 4:
          uint64_t v8 = 0x6563616C70;
          break;
        case 5:
          uint64_t v8 = 0x61737265766E6F63;
          unint64_t v7 = 0xEC0000006E6F6974;
          break;
        case 6:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7974697669746361;
          break;
        case 7:
          uint64_t v8 = 0x697463656C666572;
          unint64_t v7 = 0xEA00000000006E6FLL;
          break;
        case 8:
          uint64_t v8 = 0x4D664F6574617473;
          unint64_t v7 = 0xEB00000000646E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x6F746F6870;
      switch(v6)
      {
        case 1:
          uint64_t v11 = 1701079414;
          goto LABEL_15;
        case 2:
          uint64_t v11 = 1768191329;
LABEL_15:
          if (v8 != (v11 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 3:
          if (v8 != 0x616964656DLL) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 4:
          if (v8 != 0x6563616C70) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 5:
          unint64_t v9 = 0xEC0000006E6F6974;
          if (v8 != 0x61737265766E6F63) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 6:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7974697669746361) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 7:
          uint64_t v10 = 0x697463656C666572;
          unint64_t v9 = 0xEA00000000006E6FLL;
          goto LABEL_26;
        case 8:
          unint64_t v9 = 0xEB00000000646E69;
          if (v8 != 0x4D664F6574617473) {
            goto LABEL_28;
          }
          goto LABEL_27;
        default:
LABEL_26:
          if (v8 != v10) {
            goto LABEL_28;
          }
LABEL_27:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_28:
          char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10001D390(void *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (2)
    {
      unint64_t v7 = *(void **)(*(void *)(v2 + 48) + 8 * v4);
      switch((unint64_t)v7)
      {
        case 0uLL:
          if (a1) {
            goto LABEL_4;
          }
          break;
        case 1uLL:
          if (a1 != (void *)1) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (a1 != (void *)2) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          if (a1 != (void *)3) {
            goto LABEL_4;
          }
          break;
        default:
          if ((unint64_t)a1 >= 4)
          {
            uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v10 = v9;
            if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
            {
              sub_10001DFB8(v7);
              sub_10001DFB8(v7);
              sub_10001DFB8(a1);
              swift_bridgeObjectRelease_n();
              sub_10001DFA8(a1);
              sub_10001DFA8(v7);
              sub_10001DFA8(v7);
              return v4;
            }
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            sub_10001DFB8(v7);
            sub_10001DFB8(v7);
            sub_10001DFB8(a1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10001DFA8(a1);
            sub_10001DFA8(v7);
            sub_10001DFA8(v7);
            if (v13) {
              return v4;
            }
          }
LABEL_4:
          unint64_t v4 = (v4 + 1) & v6;
          if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
            continue;
          }
          break;
      }
      break;
    }
  }
  return v4;
}

unint64_t sub_10001D568(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10001D624(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10001D6C4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LOWORD(result) = 0;
    unsigned __int8 v14 = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)_StringObject.sharedUTF8.getter();
  }
  uint64_t result = sub_10001D7A0((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE2(result) & 1;
LABEL_8:
    LOBYTE(v13[0]) = (a4 & 0x1000000000000000) != 0;
    return (unsigned __int16)result | (v14 << 16) | (LOBYTE(v13[0]) << 24);
  }
  return result;
}

uint64_t sub_10001D7A0(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1005B342C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1005B342C(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1005B342C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v34 = a6 + 55;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v34 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v35 = a6 + 48;
        }
        else {
          unsigned __int8 v35 = 58;
        }
        if (v19)
        {
          LOWORD(v24) = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                unsigned __int16 v29 = 0;
                int v30 = 1;
                if (v38 < 0x61 || v38 >= v33) {
                  return v29 | (v30 << 16);
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            int v40 = (__int16)v24 * (__int16)a6;
            __int16 v41 = v40;
            if ((__int16)v40 != v40) {
              goto LABEL_96;
            }
            int v24 = (__int16)v40 + (v38 + v39);
            if ((__int16)(v41 + (v38 + v39)) != v24) {
              goto LABEL_96;
            }
            ++v36;
            --v37;
          }
          while (v37);
LABEL_72:
          int v30 = 0;
          unsigned __int16 v29 = v24;
          return v29 | (v30 << 16);
        }
        goto LABEL_95;
      }
LABEL_96:
      unsigned __int16 v29 = 0;
      int v30 = 1;
      return v29 | (v30 << 16);
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v43 = a6 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v44 = a6 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      if (v19)
      {
        LOWORD(v45) = 0;
        do
        {
          unsigned int v46 = *v19;
          if (v46 < 0x30 || v46 >= v44)
          {
            if (v46 < 0x41 || v46 >= v43)
            {
              unsigned __int16 v29 = 0;
              int v30 = 1;
              if (v46 < 0x61 || v46 >= v42) {
                return v29 | (v30 << 16);
              }
              char v47 = -87;
            }
            else
            {
              char v47 = -55;
            }
          }
          else
          {
            char v47 = -48;
          }
          int v48 = (__int16)v45 * (__int16)a6;
          __int16 v49 = v48;
          if ((__int16)v48 != v48) {
            goto LABEL_96;
          }
          int v45 = (__int16)v48 + (v46 + v47);
          if ((__int16)(v49 + (v46 + v47)) != v45) {
            goto LABEL_96;
          }
          ++v19;
          --result;
        }
        while (result);
        int v30 = 0;
        unsigned __int16 v29 = v45;
        return v29 | (v30 << 16);
      }
      goto LABEL_95;
    }
    goto LABEL_96;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        LOWORD(v24) = 0;
        double v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned __int16 v29 = 0;
              int v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | (v30 << 16);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          int v31 = (__int16)v24 * (__int16)a6;
          __int16 v32 = v31;
          if ((__int16)v31 != v31) {
            goto LABEL_96;
          }
          int v24 = (__int16)v31 - (v27 + v28);
          if ((__int16)(v32 - (v27 + v28)) != v24) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_72;
          }
        }
      }
LABEL_95:
      unsigned __int16 v29 = 0;
      int v30 = 0;
      return v29 | (v30 << 16);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t _sSo8NSBundleC7JournalE15appVersionAsInts5Int16VyFZ_0()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_13;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_10001B5D0(0xD00000000000001ALL, 0x80000001006870A0), (v4 & 1) == 0))
  {
    long long v21 = 0u;
    long long v22 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_10001B648(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1))
  {
LABEL_13:
    sub_10001B418((uint64_t)&v21);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  long long v21 = v20;
  sub_100014344();
  uint64_t v5 = (void *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  if (v5[2] < 2uLL) {
    goto LABEL_26;
  }
  uint64_t v6 = v5[4];
  uint64_t v7 = v5[5];
  if (!((v7 ^ (unint64_t)v6) >> 14)) {
    goto LABEL_26;
  }
  unint64_t v9 = v5[6];
  unint64_t v8 = v5[7];
  int v10 = sub_10001D6C4(v5[4], v5[5], v9, v8, 10);
  if ((v10 & 0x1000000) != 0)
  {
    swift_bridgeObjectRetain();
    int v11 = sub_100188E78(v6, v7, v9, v8, 10);
    swift_bridgeObjectRelease();
    if ((v11 & 0x10000) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    LOWORD(v11) = v10;
    if ((v10 & 0x10000) != 0) {
      goto LABEL_26;
    }
  }
  if (v5[2] < 2uLL) {
    goto LABEL_25;
  }
  unint64_t v13 = v5[8];
  unint64_t v14 = v5[9];
  unint64_t v16 = v5[10];
  unint64_t v15 = v5[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!((v14 ^ v13) >> 14))
  {
LABEL_26:
    swift_bridgeObjectRelease();
    return 0;
  }
  int v17 = sub_10001D6C4(v13, v14, v16, v15, 10);
  if ((v17 & 0x1000000) != 0) {
    int v17 = sub_100188E78(v13, v14, v16, v15, 10);
  }
  int v18 = v17;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v18 & 0x10000) != 0) {
    return 0;
  }
  int v19 = (__int16)(1000 * v11);
  if (v19 != 1000 * (__int16)v11)
  {
    __break(1u);
    return result;
  }
  uint64_t result = (v19 + (__int16)v18);
  if (result != (__int16)(v19 + v18))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_10001DEB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001DF0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001DF60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10001DFA8(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

id sub_10001DFB8(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

uint64_t sub_10001DFC8(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v38 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v36 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1007F8F98);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v35 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v31 - v9;
  uint64_t v11 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView;
  uint64_t v33 = v1;
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView);
  uint64_t v13 = *((unsigned __int8 *)v12 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  *((unsigned char *)v12 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = 5;
  uint64_t v14 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (*((unsigned char *)v12 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated) == 1)
  {
    uint64_t v32 = v2;
    switch(v13)
    {
      case 5:
        swift_bridgeObjectRelease();
        uint64_t v2 = v32;
        break;
      default:
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        int v17 = v12;
        unint64_t v15 = (void *)swift_bridgeObjectRelease();
        uint64_t v2 = v32;
        if ((v16 & 1) == 0) {
          goto LABEL_6;
        }

        break;
    }
  }
  else
  {
    unint64_t v15 = v12;
LABEL_6:
    (*(void (**)(void *))((swift_isaMask & *v12) + 0x110))(v15);
    *((unsigned char *)v12 + v14) = 1;
  }
  int v18 = *(void **)(v33 + v11);
  int v19 = *(void (**)(uint64_t))((swift_isaMask & *v18) + 0x1D0);
  long long v20 = v18;
  uint64_t v21 = v34;
  v19(v34);

  if (*(void *)(v21 + OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata))
  {
    swift_retain();
    sub_10003A27C((uint64_t)v10);
    swift_release();
  }
  else
  {
    uint64_t v22 = _s12PodcastAssetC11PodcastDataVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  }
  sub_10001FB8C();
  unsigned __int8 v23 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10001B220((uint64_t)v10, (uint64_t)v7, &qword_1007F8F98);
  unint64_t v25 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v24;
  sub_10001FE28((uint64_t)v7, v26 + v25);
  aBlock[4] = sub_10001FE90;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100796728;
  unsigned int v27 = _Block_copy(aBlock);
  swift_release();
  char v28 = v36;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  unsigned __int16 v29 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v2);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v39);
  return sub_10001457C((uint64_t)v10, &qword_1007F8F98);
}

void sub_10001E5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v136 = (uint64_t)v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007F8F98);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int v17 = (char *)v126 - v16;
  __chkstk_darwin(v18);
  long long v20 = (char *)v126 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v22 = (char *)Strong;
  v126[1] = v3;
  uint64_t v127 = v11;
  uint64_t v135 = v9;
  uint64_t v134 = v8;
  uint64_t v140 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_backgroundView;
  id v23 = *(id *)(Strong + OBJC_IVAR____TtC7Journal21FullScreenPodcastView_backgroundView);
  UIView.removeAllConstraints()();

  uint64_t v138 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_dropShadowView;
  id v24 = *(id *)&v22[OBJC_IVAR____TtC7Journal21FullScreenPodcastView_dropShadowView];
  UIView.removeAllConstraints()();

  sub_10001B220(a2, (uint64_t)v20, &qword_1007F8F98);
  uint64_t v25 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  if (v26(v20, 1, v25) == 1)
  {
    sub_10001457C((uint64_t)v20, &qword_1007F8F98);
    uint64_t v129 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = *((void *)v20 + 3);
    uint64_t v129 = *((void *)v20 + 2);
    swift_bridgeObjectRetain();
    sub_10001FF58((uint64_t)v20, _s12PodcastAssetC11PodcastDataVMa);
  }
  sub_10001B220(a2, (uint64_t)v17, &qword_1007F8F98);
  unsigned int v28 = v26(v17, 1, v25);
  v126[0] = v5;
  uint64_t v132 = a2;
  v131 = v26;
  if (v28 == 1)
  {
    sub_10001457C((uint64_t)v17, &qword_1007F8F98);
    uint64_t v128 = 0;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = *((void *)v17 + 5);
    uint64_t v128 = *((void *)v17 + 4);
    swift_bridgeObjectRetain();
    sub_10001FF58((uint64_t)v17, _s12PodcastAssetC11PodcastDataVMa);
  }
  id v30 = [self mainBundle];
  v147._object = (void *)0x8000000100687110;
  v31._uint64_t countAndFlagsBits = 0x74736163646F50;
  v31._object = (void *)0xE700000000000000;
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v147._uint64_t countAndFlagsBits = 0xD000000000000013;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v147)._countAndFlagsBits;

  id v33 = [objc_allocWithZone((Class)UIStackView) init];
  [v33 setAxis:1];
  [v33 setAlignment:3];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  [v33 setSpacing:*(double *)&qword_10083D908, v126[0]];
  id v133 = v33;
  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v137 = [objc_allocWithZone((Class)UIStackView) init];
  id v142 = [objc_allocWithZone((Class)UILabel) init];
  id v141 = [objc_allocWithZone((Class)UILabel) init];
  id v139 = [objc_allocWithZone((Class)UILabel) init];
  if (v27)
  {
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v34 = 0;
  }
  [v142 setText:v34];

  if (v29)
  {
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v35 = 0;
  }
  uint64_t v36 = v133;
  [v141 setText:v35];

  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = v139;
  [v139 setText:v37];

  sub_10001B220(v132, (uint64_t)v14, &qword_1007F8F98);
  if (v131(v14, 1, v25) == 1)
  {
    sub_10001457C((uint64_t)v14, &qword_1007F8F98);
    uint64_t v39 = v136;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v136, 1, 1, v134);
    uint64_t v40 = v137;
  }
  else
  {
    uint64_t v39 = v136;
    sub_10001B220((uint64_t)&v14[*(int *)(v25 + 32)], v136, (uint64_t *)&unk_1007FC470);
    sub_10001FF58((uint64_t)v14, _s12PodcastAssetC11PodcastDataVMa);
    uint64_t v41 = v135;
    uint64_t v42 = v134;
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v39, 1, v134);
    uint64_t v40 = v137;
    if (v43 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v127, v39, v42);
      uint64_t v64 = v126[0];
      static Date.FormatStyle.TimeStyle.shortened.getter();
      static FormatStyleCapitalizationContext.standalone.getter();
      static Locale.autoupdatingCurrent.getter();
      static Calendar.autoupdatingCurrent.getter();
      static TimeZone.autoupdatingCurrent.getter();
      static Date.now.getter();
      sub_10001FF10((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
      Date.formatted<A>(_:)();
      sub_10001FF58(v64, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
      Swift::String v65 = (Swift::String)v143;
      id v66 = [v38 text];
      if (v66)
      {
        id v67 = v66;
        uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v70 = v69;

        *(void *)&long long v143 = v68;
        *((void *)&v143 + 1) = v70;
        v71._uint64_t countAndFlagsBits = 548913696;
        v71._object = (void *)0xA400000000000000;
        String.append(_:)(v71);
        if (*((void *)&v143 + 1))
        {
          NSString v72 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v72 = 0;
        }
        [v38 setText:v72];

        uint64_t v41 = v135;
      }
      else
      {
        [v38 setText:0];
      }
      id v119 = [v38 text];
      if (v119)
      {
        unint64_t v120 = v119;
        uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v123 = v122;

        *(void *)&long long v143 = v121;
        *((void *)&v143 + 1) = v123;
        String.append(_:)(v65);
        swift_bridgeObjectRelease();
        uint64_t v36 = v133;
        if (*((void *)&v143 + 1))
        {
          NSString v124 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v124 = 0;
        }
        uint64_t v125 = v135;
        [v38 setText:v124];

        (*(void (**)(char *, uint64_t))(v125 + 8))(v127, v134);
      }
      else
      {
        swift_bridgeObjectRelease();
        long long v143 = 0uLL;
        [v38 setText:0];
        (*(void (**)(char *, uint64_t))(v41 + 8))(v127, v134);
        swift_bridgeObjectRelease();
        uint64_t v36 = v133;
      }
      goto LABEL_20;
    }
  }
  sub_10001457C(v39, (uint64_t *)&unk_1007FC470);
LABEL_20:
  uint64_t v44 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView;
  id v45 = [*(id *)&v22[OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView] layer];
  if (qword_1007F7CA0 != -1) {
    swift_once();
  }
  long long v143 = xmmword_10083E9C0;
  long long v144 = *(_OWORD *)&qword_10083E9D0;
  long long v145 = xmmword_10083E9E0;
  long long v146 = *(_OWORD *)&qword_10083E9F0;
  [v45 setCornerRadii:&v143];

  uint64_t v46 = v138;
  id v47 = [*(id *)&v22[v138] layer];
  long long v143 = xmmword_10083E9C0;
  long long v144 = *(_OWORD *)&qword_10083E9D0;
  long long v145 = xmmword_10083E9E0;
  long long v146 = *(_OWORD *)&qword_10083E9F0;
  [v47 setCornerRadii:&v143];

  id v48 = [objc_allocWithZone((Class)UIButton) init];
  sub_100540B38(v40, v142, v141, v38, 0, v48);

  __int16 v49 = self;
  id v50 = v36;
  id v51 = [v49 clearColor];
  [v50 setBackgroundColor:v51];

  uint64_t v52 = v140;
  [v50 addArrangedSubview:*(void *)&v22[v140]];
  id v53 = *(id *)&v22[v46];
  sub_1005412A4(v53);

  [*(id *)&v22[v44] setClipsToBounds:1];
  uint64_t v54 = *(void **)&v22[v52];
  [v54 addSubview:*(void *)&v22[v46]];
  [v54 addSubview:*(void *)&v22[v44]];
  uint64_t v55 = qword_1007F7300;
  id v56 = v54;
  if (v55 != -1) {
    swift_once();
  }
  double v57 = *(double *)&qword_10083D910;
  id v58 = [v56 superview];
  id v59 = &stru_1007D7000;
  if (v58)
  {
    unsigned int v60 = v58;
    [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v61 = [v56 leadingAnchor];
    id v62 = [v60 leadingAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    [v63 setConstant:v57];
    if (v63)
    {
      id v63 = v63;
      id v59 = &stru_1007D7000;
      [v63 setActive:1];

      id v56 = v63;
    }
    else
    {
      id v59 = &stru_1007D7000;
    }
  }
  else
  {
    id v63 = 0;
    unsigned int v60 = v56;
  }

  double v73 = *(double *)&qword_10083D910;
  id v74 = *(id *)&v22[v140];
  id v75 = [v74 superview];
  if (v75)
  {
    id v76 = v75;
    [v74 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v77 = [v74 trailingAnchor];
    id v78 = [v76 trailingAnchor];
    id v79 = [v77 constraintEqualToAnchor:v78];

    [v79 setConstant:-v73];
    if (v79)
    {
      id v79 = v79;
      id v59 = &stru_1007D7000;
      [v79 setActive:1];

      id v74 = v79;
      id v80 = v137;
    }
    else
    {
      id v80 = v137;
      id v59 = &stru_1007D7000;
    }
  }
  else
  {
    id v79 = 0;
    id v76 = v74;
    id v80 = v137;
  }

  id v81 = *(id *)&v22[v140];
  [v81 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v82 = [v81 heightAnchor];
  id v83 = [v81 widthAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83 multiplier:1.0];

  [v84 v59[90].name:1];
  id v85 = *(id *)&v22[v44];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  id v86 = *(id *)&v22[v138];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  [v50 addArrangedSubview:*(void *)&v22[v44]];
  [v50 addArrangedSubview:v80];
  if (qword_1007F7368 != -1) {
    swift_once();
  }
  double v87 = *(double *)&qword_10083D978;
  id v88 = [v80 superview];
  if (v88)
  {
    uint64_t v89 = v88;
    [v80 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v90 = [v80 leadingAnchor];
    id v91 = [v89 leadingAnchor];
    id v92 = [v90 constraintEqualToAnchor:v91];

    [v92 setConstant:v87];
    id v93 = v92;
    [v93 setActive:1];
  }
  double v94 = *(double *)&qword_10083D978;
  id v95 = [v80 superview];
  if (v95)
  {
    uint64_t v96 = v95;
    [v80 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v97 = [v80 trailingAnchor];
    id v98 = [v96 trailingAnchor];
    id v99 = [v97 constraintEqualToAnchor:v98];

    [v99 setConstant:-v94];
    id v100 = v99;
    [v100 setActive:1];
  }
  [v22 addSubview:v50];
  id v101 = [v50 superview];
  if (v101)
  {
    uint64_t v102 = v101;
    [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v103 = [v50 centerYAnchor];
    id v104 = [v102 centerYAnchor];
    id v105 = [v103 constraintEqualToAnchor:v104];

    [v105 setConstant:0.0];
    id v106 = v105;
    [v106 setActive:1];
  }
  id v107 = [v50 superview];
  if (v107)
  {
    id v108 = v107;
    [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v109 = [v50 leadingAnchor];
    id v110 = [v108 leadingAnchor];
    id v111 = [v109 constraintEqualToAnchor:v110];

    [v111 setConstant:0.0];
    id v112 = v111;
    [v112 setActive:1];
  }
  id v113 = [v50 superview];
  if (v113)
  {
    long long v114 = v113;
    [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v115 = [v50 trailingAnchor];
    id v116 = [v114 trailingAnchor];
    id v117 = [v115 constraintEqualToAnchor:v116];

    [v117 setConstant:0.0];
    id v118 = v117;
    [v118 setActive:1];
  }
  [v22 layoutIfNeeded];
  [v50 layoutIfNeeded];
  [*(id *)&v22[v44] layoutIfNeeded];
}

id sub_10001F898(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastAsset] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView;
  type metadata accessor for MediaAssetView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_backgroundView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_dropShadowView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIView) init];

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FullScreenPodcastView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10001F9BC(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastAsset] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_podcastView;
  type metadata accessor for MediaAssetView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_backgroundView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal21FullScreenPodcastView_dropShadowView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIView) init];

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for FullScreenPodcastView();
  [super initWithCoder:a1];

  return v8;
}

id sub_10001FAC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenPodcastView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenPodcastView()
{
  return self;
}

unint64_t sub_10001FB8C()
{
  unint64_t result = qword_100805AB0;
  if (!qword_100805AB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100805AB0);
  }
  return result;
}

uint64_t sub_10001FBCC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10001FC04()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_1007F8F98) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v3 + *(int *)(v4 + 28);
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = v3 + *(int *)(v4 + 32);
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_10001FE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F8F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10001FE90()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_1007F8F98) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10001E5CC(v2, v3);
}

uint64_t sub_10001FEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001FF08()
{
  return swift_release();
}

uint64_t sub_10001FF10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001FF58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_10001FFB8(void *a1, void *a2)
{
  if (!a2)
  {
    id v8 = [self systemFontOfSize:0.0];
    goto LABEL_9;
  }
  uint64_t v4 = self;
  id v5 = a2;
  id v6 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
  id v7 = [v6 fontDescriptorWithSymbolicTraits:0x8000];

  if (!v7)
  {

LABEL_7:
    id v8 = [self preferredFontForTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
    goto LABEL_8;
  }
  id v8 = [self fontWithDescriptor:v7 size:0.0];

  if (!v8) {
    goto LABEL_7;
  }
LABEL_8:

LABEL_9:
  id v9 = [v8 fontDescriptor];
  unsigned int v10 = [v9 symbolicTraits];

  id v11 = [a1 fontDescriptor];
  unsigned int v12 = [v11 symbolicTraits];

  uint64_t v13 = v12 | v10;
  id v14 = [v8 fontDescriptor];
  id v15 = [v14 fontDescriptorWithSymbolicTraits:v13];

  if (v15)
  {
    id v16 = [self fontWithDescriptor:v15 size:0.0];

    id v8 = v15;
  }
  else
  {
    id v16 = a1;
  }

  return v16;
}

uint64_t sub_1000201D8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  double v12 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v89 = a1 + 64;
  double v94 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v91 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v24 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v25 = v24 | (v17 << 6);
LABEL_8:
      uint64_t v26 = *(void *)(a1 + 56);
      *(void *)&v98[0] = *(void *)(*(void *)(a1 + 48) + 8 * v25);
      uint64_t v27 = *(void **)&v98[0];
      sub_10001B648(v26 + 32 * v25, (uint64_t)v98 + 8);
      id v28 = v27;
      goto LABEL_27;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
    }
    if (v29 < v91)
    {
      unint64_t v30 = *(void *)(v89 + 8 * v29);
      if (v30) {
        goto LABEL_12;
      }
      int64_t v31 = v17 + 2;
      ++v17;
      if (v29 + 1 < v91)
      {
        unint64_t v30 = *(void *)(v89 + 8 * v31);
        if (v30) {
          goto LABEL_15;
        }
        int64_t v17 = v29 + 1;
        if (v29 + 2 < v91)
        {
          unint64_t v30 = *(void *)(v89 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          int64_t v31 = v29 + 3;
          int64_t v17 = v29 + 2;
          if (v29 + 3 < v91)
          {
            unint64_t v30 = *(void *)(v89 + 8 * v31);
            if (v30)
            {
LABEL_15:
              int64_t v29 = v31;
LABEL_12:
              unint64_t v16 = (v30 - 1) & v30;
              unint64_t v25 = __clz(__rbit64(v30)) + (v29 << 6);
              int64_t v17 = v29;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v29 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                goto LABEL_76;
              }
              if (v29 >= v91) {
                break;
              }
              unint64_t v30 = *(void *)(v89 + 8 * v29);
              ++v31;
              if (v30) {
                goto LABEL_12;
              }
            }
            int64_t v17 = v91 - 1;
          }
        }
      }
    }
    unint64_t v16 = 0;
    uint64_t v99 = 0;
    memset(v98, 0, sizeof(v98));
LABEL_27:
    sub_100020FC4((uint64_t)v98, (uint64_t)&v100);
    Swift::String v32 = (void *)v100;
    if (!(void)v100) {
      break;
    }
    sub_10002102C((long long *)((char *)&v100 + 8), v98);
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;
    if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_33;
      }
    }
    sub_10001B648((uint64_t)v98, (uint64_t)&v96);
    uint64_t v38 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
    if (swift_dynamicCast())
    {
      id v18 = v95[0];
      id v19 = sub_10001FFB8(v95[0], a6);
      uint64_t v97 = v38;
      *(void *)&long long v96 = v19;
      sub_10002102C(&v96, v95);
      id v20 = v32;
      id v21 = v19;
      double v22 = v94;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v93 = v22;
      sub_100599110(v95, v20, isUniquelyReferenced_nonNull_native);
      double v12 = v93;
      double v94 = v93;

      goto LABEL_5;
    }
LABEL_33:
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;
    if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0) {
        goto LABEL_45;
      }
    }
    sub_10001B648((uint64_t)v98, (uint64_t)&v96);
    uint64_t v44 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (swift_dynamicCast())
    {
      id v45 = v95[0];
      *(void *)&long long v96 = 0;
      v95[0] = 0;
      uint64_t v92 = 0;
      double v93 = 0.0;
      [v45 getRed:&v96 green:v95 blue:&v93 alpha:&v92];
      double v46 = *(double *)&v96;
      if (*(double *)&v96 <= 0.001 && (double v46 = *(double *)v95, *(double *)v95 <= 0.001) && (double v46 = v93, v93 <= 0.001)
        || (*(void *)&long long v96 = 0,
            v95[0] = 0,
            uint64_t v92 = 0,
            double v93 = 0.0,
            objc_msgSend(v45, "getRed:green:blue:alpha:", &v96, v95, &v93, &v92, v46),
            *(double *)&v96 >= 0.99)
        && *(double *)v95 >= 0.99
        && v93 >= 0.99)
      {
        uint64_t v97 = v44;
        *(void *)&long long v96 = a7;
        sub_10002102C(&v96, v95);
        id v53 = NSForegroundColorAttributeName;
        id v60 = a7;
        double v61 = v94;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        double v93 = v61;
        sub_100599110(v95, v53, v62);
        double v12 = v93;
        double v94 = v93;

        goto LABEL_53;
      }
    }
LABEL_45:
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;
    if (v47 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v49 == v50)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0) {
        goto LABEL_51;
      }
    }
    sub_10001B648((uint64_t)v98, (uint64_t)&v96);
    sub_10001B284(0, &qword_1007F8FA8);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_51:
      sub_10001B648((uint64_t)v98, (uint64_t)&v96);
      id v57 = v32;
      double v58 = v94;
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      v95[0] = *(id *)&v58;
      sub_100599110(&v96, v57, v59);
      double v12 = *(double *)v95;
      double v94 = *(double *)v95;

      goto LABEL_5;
    }
    id v45 = v95[0];
    id v52 = sub_100041CEC();
    [v52 setParagraphSpacingBefore:a4];
    sub_10044121C();
    uint64_t v97 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
    *(void *)&long long v96 = v52;
    sub_10002102C(&v96, v95);
    id v53 = NSParagraphStyleAttributeName;
    id v54 = v52;
    double v55 = v94;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    double v93 = v55;
    sub_100599110(v95, v53, v56);
    double v12 = v93;
    double v94 = v93;

LABEL_53:
LABEL_5:
    swift_bridgeObjectRelease();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v98);
  }
  swift_release();
  if (!*(void *)(*(void *)&v12 + 16))
  {
    long long v100 = 0u;
    long long v101 = 0u;
    Swift::String v65 = a8;
LABEL_62:
    sub_10001B418((uint64_t)&v100);
    *((void *)&v101 + 1) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    *(void *)&long long v100 = a7;
    sub_10002102C(&v100, v98);
    id v68 = a7;
    uint64_t v69 = NSForegroundColorAttributeName;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v12;
    sub_100599110(v98, v69, v70);
    double v67 = *(double *)&v96;
    double v94 = *(double *)&v96;

    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)&v67 + 16)) {
      goto LABEL_63;
    }
LABEL_61:
    long long v100 = 0u;
    long long v101 = 0u;
    goto LABEL_68;
  }
  id v63 = NSForegroundColorAttributeName;
  uint64_t v64 = sub_10001B6A4(v63);
  Swift::String v65 = a8;
  if (v66)
  {
    sub_10001B648(*(void *)(*(void *)&v12 + 56) + 32 * v64, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (!*((void *)&v101 + 1)) {
    goto LABEL_62;
  }
  sub_10001B418((uint64_t)&v100);
  double v67 = v94;
  if (!*(void *)(*(void *)&v94 + 16)) {
    goto LABEL_61;
  }
LABEL_63:
  Swift::String v71 = NSFontAttributeName;
  uint64_t v72 = sub_10001B6A4(v71);
  if (v73)
  {
    sub_10001B648(*(void *)(*(void *)&v67 + 56) + 32 * v72, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (*((void *)&v101 + 1))
  {
LABEL_67:
    sub_10001B418((uint64_t)&v100);
    goto LABEL_73;
  }
LABEL_68:
  sub_10001B418((uint64_t)&v100);
  if (v65)
  {
    *((void *)&v101 + 1) = sub_10001B284(0, (unint64_t *)&unk_10080A670);
    *(void *)&long long v100 = v65;
    sub_10002102C(&v100, v98);
    id v74 = v65;
    id v75 = NSFontAttributeName;
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_100599110(v98, v75, v76);
    double v94 = *(double *)&v96;
  }
  else
  {
    if (!a9)
    {
      id v83 = NSFontAttributeName;
      sub_1000F1E94((uint64_t)v83, &v100);

      goto LABEL_67;
    }
    *((void *)&v101 + 1) = sub_10001B284(0, (unint64_t *)&unk_10080A670);
    *(void *)&long long v100 = a9;
    sub_10002102C(&v100, v98);
    id v77 = NSFontAttributeName;
    id v78 = a9;
    char v79 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_100599110(v98, v77, v79);
    double v94 = *(double *)&v96;
  }
  swift_bridgeObjectRelease();
LABEL_73:
  id v80 = NSAdaptiveImageGlyphAttributeName;
  sub_1000F1E94((uint64_t)v80, &v100);

  sub_10001B418((uint64_t)&v100);
  type metadata accessor for Key(0);
  sub_10002103C();
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a10 setAttributes:isa range:a2];

  return swift_bridgeObjectRelease();
}

uint64_t sub_100020C00(void *a1, void *a2, void *a3, double a4)
{
  if (!a2) {
    return 0;
  }
  id v7 = a2;
  id v8 = [v7 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v9 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  id v12 = [self labelColor];
  id v13 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v14 = [v13 fontDescriptorWithSymbolicTraits:0x8000];

  if (v14)
  {
    id v15 = [self fontWithDescriptor:v14 size:0.0];
  }
  else
  {
    id v15 = 0;
  }
  uint64_t result = (uint64_t)[v7 length];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = result;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = v12;
    *(double *)(v18 + 32) = a4;
    *(void *)(v18 + 40) = a3;
    *(void *)(v18 + 48) = v15;
    *(void *)(v18 + 56) = v11;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100020F60;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_100020FA4;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100041E54;
    aBlock[3] = &unk_1007967A0;
    id v20 = _Block_copy(aBlock);
    id v21 = v15;
    id v16 = v11;
    swift_retain();
    id v22 = a1;
    id v23 = v12;
    id v24 = a3;
    swift_release();
    [v7 enumerateAttributesInRange:0 options:v26 usingBlock:v20];

    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100020F08()
{
  return swift_deallocObject();
}

uint64_t sub_100020F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000201D8(a1, a2, a3, *(double *)(v4 + 32), a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 40), *(void **)(v4 + 48), *(void **)(v4 + 56));
}

uint64_t sub_100020F94()
{
  return swift_deallocObject();
}

uint64_t sub_100020FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041E2C(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_100020FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100020FBC()
{
  return swift_release();
}

uint64_t sub_100020FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F8FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10002102C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_10002103C()
{
  unint64_t result = qword_10080A680;
  if (!qword_10080A680)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A680);
  }
  return result;
}

uint64_t _s7Journal19DynamicWaveformViewVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

char *sub_1000210E4(uint64_t a1, long long *a2, void *a3, void *a4)
{
  uint64_t v8 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_basePOICircleView;
  id v9 = objc_allocWithZone((Class)UIImageView);
  NSString v10 = v4;
  *(void *)&v4[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v10[v13] = [objc_allocWithZone((Class)UIView) init];
  id v14 = &v10[OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration];
  long long v15 = *a2;
  long long v16 = a2[1];
  *((void *)v14 + 4) = *((void *)a2 + 4);
  *(_OWORD *)id v14 = v15;
  *((_OWORD *)v14 + 1) = v16;
  sub_100021D2C((id *)a2);

  v44.receiver = v10;
  v44.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  int64_t v17 = (char *)[v44 initWithAnnotation:a1 reuseIdentifier:0];
  sub_100321788();
  double v18 = 0.0;
  double v19 = 0.0;
  double v20 = 0.0;
  double v21 = 0.0;
  double v22 = 0.0;
  if ((v23 & 1) == 0) {
    double v19 = AudioRecordingActivityState.hash(into:)(0.0, 0.0);
  }
  [v17 setFrame:v19, v20, v21, v22];
  id v24 = &v17[OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_basePOICircleView];
  id v25 = *(id *)&v17[OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_basePOICircleView];
  double v26 = COERCE_DOUBLE(sub_100321788());
  double v27 = 0.0;
  double v28 = 0.0;
  double v29 = 0.0;
  if ((v30 & 1) == 0)
  {
    if ((*((uint64_t *)a2 + 2) > 1
       || (*((unsigned char *)a2 + 24) & 1) != 0
       || (*((unsigned char *)a2 + 26) & 1) != 0 && (*((unsigned char *)a2 + 9) & 1) == 0)
      && (*((unsigned char *)a2 + 25) & 1) != 0)
    {
      double v31 = (v26 - v26 * 0.45) * 0.5;
      double v32 = v31;
    }
    else
    {
      double v31 = v26 * 0.55 * 0.5;
      double v32 = *((double *)a2 + 4);
    }
    double v18 = AudioRecordingActivityState.hash(into:)(v31, v32);
  }
  [v25 setFrame:v18, v27, v28, v29];

  sub_100021910(a3, a4);
  if (*((uint64_t *)a2 + 2) > 1)
  {
    sub_100021DC4();
    sub_100021694();
    [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView]];
    id v24 = &v17[OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_clusterCountLabel];
    goto LABEL_20;
  }
  if (*((unsigned char *)a2 + 24))
  {
    sub_100021DC4();
    uint64_t v33 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView;
    goto LABEL_19;
  }
  if (*((unsigned char *)a2 + 26) & 1) == 0 || (*((unsigned char *)a2 + 9))
  {
    sub_1000214F0();
    uint64_t v33 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_downArrowView;
LABEL_19:
    [v17 addSubview:*(void *)&v17[v33]];
  }
LABEL_20:
  [v17 addSubview:*(void *)v24];
  uint64_t v34 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView;
  id v35 = [*(id *)&v17[OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView] layer];
  id v36 = [self secondarySystemBackgroundColor];
  id v37 = [v36 CGColor];

  [v35 setShadowColor:v37];
  id v38 = [*(id *)&v17[v34] layer];
  LODWORD(v39) = 0.5;
  [v38 setShadowOpacity:v39];

  id v40 = [*(id *)&v17[v34] layer];
  [v40 setShadowRadius:5.0];

  id v41 = [*(id *)&v17[v34] layer];
  [v41 setShadowPathIsBounds:1];
  sub_100021D58(a3, a4);
  sub_100021D98((id *)a2);

  swift_unknownObjectRelease();
  return v17;
}

void sub_1000214F0()
{
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 16) <= 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 24) == 0
    && (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 26) ^ 1 | *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 9)) != 0)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_downArrowView);
    double v4 = *(double *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 32);
    double v5 = COERCE_DOUBLE(sub_100321788());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v6 & 1) == 0) {
      double v7 = AudioRecordingActivityState.hash(into:)(v5 * 0.4, v4 + v5 * 0.3);
    }
    [v3 setFrame:v7, v8, v9, v10];
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [self systemImageNamed:v11];

    [v3 setImage:v12];
    [v3 setContentMode:2];
  }
}

void sub_100021694()
{
  uint64_t v1 = (double *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 16);
  if (v2 >= 2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_clusterCountLabel);
    int v4 = *((unsigned __int8 *)v1 + 25);
    double v5 = v1[4];
    uint64_t v22 = *(void *)v1;
    LOWORD(v23) = *((_WORD *)v1 + 4);
    uint64_t v24 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_configuration + 16);
    LOWORD(v25) = *((_WORD *)v1 + 12);
    BYTE2(v25) = *((unsigned char *)v1 + 26);
    double v6 = COERCE_DOUBLE(sub_100321788());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v11 & 1) == 0)
    {
      if (v4)
      {
        double v12 = (v6 - v6 * 0.45) * 0.5;
        double v13 = v12;
      }
      else
      {
        double v12 = v6 * 0.55 * 0.5;
        double v13 = v5;
      }
      double v7 = AudioRecordingActivityState.hash(into:)(v12, v13);
    }
    [v3 setFrame:v7, v8, v9, v10];
    uint64_t v21 = v2;
    dispatch thunk of CustomStringConvertible.description.getter();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v14, v21, v22, v23, v24, v25, *(void *)&v5];

    [v3 setTextAlignment:1];
    id v15 = [self whiteColor];
    [v3 setTextColor:v15];

    double v16 = COERCE_DOUBLE(sub_100321788());
    double v17 = 15.0;
    if ((v18 & 1) == 0) {
      double v17 = v16 / 6.0;
    }
    id v19 = [self boldSystemFontOfSize:v17];
    [v3 setFont:v19];

    [v3 setAdjustsFontSizeToFitWidth:1];
    [v3 setClipsToBounds:1];
    id v20 = [v3 layer];
    [v3 frame];
    [v20 setCornerRadius:CGRectGetWidth(v26) * 0.5];
  }
}

void sub_100021910(void *a1, void *a2)
{
  if (a1)
  {
    int v4 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_basePOICircleView);
    id v17 = a1;
    id v5 = a2;
    [v4 setImage:v5];
    [*(id *)(v2 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v17];
    [*(id *)(v2 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v17];
  }
  else
  {
    double v6 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_basePOICircleView);
    [v6 frame];
    double v7 = CGRectGetWidth(v19) * 0.25;
    [v6 frame];
    double v8 = CGRectGetHeight(v20) * 0.23;
    [v6 frame];
    CGRectGetWidth(v21);
    [v6 frame];
    CGRectGetHeight(v22);
    double v9 = AudioRecordingActivityState.hash(into:)(v7, v8);
    id v13 = [objc_allocWithZone((Class)UIImageView) initWithFrame:v9, v10, v11, v12];
    id v17 = v13;
    if (qword_1007F7C38 != -1)
    {
      swift_once();
      id v13 = v17;
    }
    [v13 setImage:qword_10083E920];
    id v14 = [self systemWhiteColor];
    [v17 setTintColor:v14];

    if (qword_1007F71F0 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_10083D7B8;
    [v6 setBackgroundColor:qword_10083D7B8];
    [*(id *)(v2 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v15];
    [*(id *)(v2 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v15];
    id v16 = [v6 layer];
    [v6 frame];
    [v16 setCornerRadius:CGRectGetHeight(v23) * 0.5];

    [v6 addSubview:v17];
  }
}

id sub_100021C58()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  [super dealloc];
}

uint64_t _s19MOPOIAnnotationViewCMa()
{
  return self;
}

id *sub_100021D2C(id *a1)
{
  id v2 = *a1;
  return a1;
}

void sub_100021D58(void *a1, void *a2)
{
  if (a1)
  {
  }
}

id *sub_100021D98(id *a1)
{
  return a1;
}

void sub_100021DC4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView);
  [v1 setFrame:sub_100321538()];
  id v2 = [v1 layer];
  id v3 = [self whiteColor];
  id v4 = [v3 CGColor];

  [v2 setBackgroundColor:v4];
  [v1 setClipsToBounds:1];
  id v5 = [v1 layer];
  [v1 frame];
  [v5 setCornerRadius:CGRectGetWidth(v7) * 0.5];
}

void sub_100021F1C()
{
  uint64_t v1 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_basePOICircleView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtCC7Journal10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100022004(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_location;
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_location);
  if (!v5)
  {
    if (!a1) {
      goto LABEL_9;
    }
    id v6 = a1;
    goto LABEL_7;
  }
  if (!a1)
  {
    double v11 = *(void **)(v1 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer);
    v16.origin.x = MKMapRectWorld.origin.x;
    v16.origin.y = MKMapRectWorld.origin.y;
    v16.size.width = MKMapRectWorld.size.width;
    v16.size.height = MKMapRectWorld.size.height;
    MKCoordinateRegion v17 = MKCoordinateRegionForMapRect(v16);
    [v11 setRegion:v17.center.latitude, v17.center.longitude, v17.span.latitudeDelta, v17.span.longitudeDelta];
    goto LABEL_9;
  }
  sub_10001B284(0, (unint64_t *)&qword_1007F9110);
  id v6 = a1;
  id v7 = v5;
  char v8 = static NSObject.== infix(_:_:)();

  if ((v8 & 1) == 0)
  {
LABEL_7:
    double v9 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer);
    id v10 = v6;
    [v10 coordinate];
    MKCoordinateRegion v15 = MKCoordinateRegionMakeWithDistance(v14, 16093.0, 16093.0);
    [v9 setRegion:v15.center.latitude, v15.center.longitude, v15.span.latitudeDelta, v15.span.longitudeDelta];
  }
LABEL_9:
  double v12 = *(void **)(v2 + v4);
  *(void *)(v2 + v4) = a1;
}

char *sub_100022130()
{
  uint64_t v1 = self;
  uint64_t v2 = v0;
  id v3 = [v1 mainBundle];
  id v4 = [v3 bundleIdentifier];

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  uint64_t v5 = OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_delegateRelay;
  *(void *)&v2[v5] = [objc_allocWithZone((Class)type metadata accessor for DelegateRelay()) init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer;
  *(void *)&v2[v6] = [objc_allocWithZone((Class)MKLocalSearchCompleter) init];
  *(void *)&v2[OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results] = &_swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_location] = 0;

  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for LocationPickerSearchManager();
  id v7 = [(char *)[super init]];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_delegateRelay];
  swift_unknownObjectWeakAssign();
  double v9 = *(void **)&v7[OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer];
  id v10 = v7;
  [v9 setDelegate:v8];
  [v9 setResultTypes:7];

  return v10;
}

id sub_100022324()
{
  return sub_1000243C0((uint64_t (*)(void))type metadata accessor for LocationPickerSearchManager);
}

uint64_t sub_1000223FC()
{
  return type metadata accessor for LocationPickerSearchManager();
}

uint64_t type metadata accessor for LocationPickerSearchManager()
{
  uint64_t result = qword_1007F9048;
  if (!qword_1007F9048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100022450()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_100022510(void *a1)
{
  uint64_t v2 = v1;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "onSearchBarWillBeginEditing - Search started.", v6, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_10002467C(*(void *)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_delegateRelay), Strong);
    swift_unknownObjectRelease();
  }

  return [a1 setShowsCancelButton:1 animated:1];
}

void sub_100022614(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 text];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer);
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 setQueryFragment:v9];
  swift_bridgeObjectRelease();

  uint64_t v10 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v10 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    double v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "onSearchBarChangedText - Faking empty completer update due to empty query text.", v13, 2u);
      swift_slowDealloc();
    }

    *(void *)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results) = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1004C7D48(0);
      swift_unknownObjectRelease();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = Strong;
      [*(id *)(Strong + OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_offlineStateView) setHidden:1];
      [*(id *)(v15 + OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_collectionView) reloadData];
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000227FC(void *a1)
{
  uint64_t v2 = v1;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "onSearchBarClickedCancel - Search complete.", v6, 2u);
    swift_slowDealloc();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1004C78A4();
    swift_unknownObjectRelease();
  }
  [a1 setText:0];
  [a1 setShowsCancelButton:0 animated:1];
  [a1 resignFirstResponder];
  unint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer);
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setQueryFragment:v8];

  *(void *)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results) = &_swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

void sub_100022964()
{
  if (!*(void *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results) + 16))
  {
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v1, v2))
    {
      id v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "onCompleterWillUpdate - Requesting loading UI.", v3, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1004C7D48(1);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100022A5C()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_10080F290);
  __chkstk_darwin(v1 - 8);
  id v3 = (uint64_t *)((char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = type metadata accessor for Loc(0);
  uint64_t v66 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  os_log_type_t v5 = (id *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  NSString v8 = (char *)&v62 - v7;
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v65 = (uint64_t)&v62 - v11;
  uint64_t v63 = v0;
  os_log_type_t v12 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer);
  id v13 = [v12 results];
  sub_10001B284(0, (unint64_t *)&unk_1007F90F0);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v15 = result;
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  Swift::String v71 = v5;
  id v62 = v12;
  if (v15)
  {
    if (v15 >= 1)
    {
      uint64_t v17 = v15;
      uint64_t v18 = 0;
      id v68 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v66 + 56);
      unint64_t v69 = v14 & 0xC000000000000001;
      uint64_t v64 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v66 + 48);
      CGRect v19 = &_swiftEmptyArrayStorage;
      unint64_t v67 = v14;
      CGRect v20 = (int *)v70;
      while (1)
      {
        id v21 = v69 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v14 + 8 * v18 + 32);
        CGRect v22 = v21;
        id v23 = [v21 mapItem:v62];

        if (v23) {
          break;
        }
        uint64_t v31 = v70;
        (*v68)(v3, 1, 1, v70);

        if ((*v64)(v3, 1, v31) != 1) {
          goto LABEL_14;
        }
        sub_10002455C((uint64_t)v3);
        unint64_t v14 = v67;
LABEL_7:
        if (v17 == ++v18) {
          goto LABEL_20;
        }
      }
      v3[1] = 0;
      uint64_t v24 = (char *)v3 + v20[6];
      uint64_t v25 = type metadata accessor for Date();
      uint64_t v26 = v17;
      double v27 = v19;
      double v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
      uint64_t v72 = (uint64_t)v22;
      v28(v24, 1, 1, v25);
      v28((char *)v3 + v20[7], 1, 1, v25);
      CGRect v19 = v27;
      uint64_t v17 = v26;
      double v29 = (uint64_t *)((char *)v3 + v20[8]);
      *double v29 = 0;
      v29[1] = 0;
      char v30 = (uint64_t *)((char *)v3 + v20[9]);
      *char v30 = 0;
      v30[1] = 0;
      *(uint64_t *)((char *)v3 + v20[10]) = 0;
      *((unsigned char *)v3 + v20[11]) = 0;
      *id v3 = v72;
      (*v68)(v3, 0, 1, (uint64_t)v20);
LABEL_14:
      uint64_t v32 = v65;
      sub_100024618((uint64_t)v3, v65);
      sub_100024618(v32, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        CGRect v19 = (void *)sub_1002A55B0(0, v19[2] + 1, 1, (unint64_t)v19);
      }
      unint64_t v14 = v67;
      unint64_t v34 = v19[2];
      unint64_t v33 = v19[3];
      if (v34 >= v33 >> 1) {
        CGRect v19 = (void *)sub_1002A55B0(v33 > 1, v34 + 1, 1, (unint64_t)v19);
      }
      v19[2] = v34 + 1;
      sub_100024618((uint64_t)v8, (uint64_t)v19+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v34);
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    CGRect v19 = &_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease_n();
    *(void *)(v63 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    v35._uint64_t countAndFlagsBits = 40;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    id v36 = v62;
    [v62 region];
    Double.write<A>(to:)();
    v37._uint64_t countAndFlagsBits = 44;
    v37._object = (void *)0xE100000000000000;
    String.append(_:)(v37);
    [v36 region];
    Double.write<A>(to:)();
    v38._uint64_t countAndFlagsBits = 41;
    v38._object = (void *)0xE100000000000000;
    String.append(_:)(v38);
    uint64_t v40 = (uint64_t)v74;
    unint64_t v39 = v75;
    id v74 = (void *)v19[2];
    int64_t v41 = (int64_t)v74;
    uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v43 = v42;
    if (v41)
    {
      id v68 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))v40;
      unint64_t v69 = v39;
      uint64_t v70 = v42;
      id v74 = &_swiftEmptyArrayStorage;
      sub_100095B64(0, v41, 0);
      uint64_t v44 = (uint64_t)v19 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
      uint64_t v45 = *(void *)(v66 + 72);
      do
      {
        double v46 = v71;
        sub_100024434(v44, (uint64_t)v71);
        if (*v46)
        {
          id v47 = [*v46 title];
          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v50 = v49;
        }
        else
        {
          unint64_t v50 = 0xE700000000000000;
          uint64_t v48 = 0x4E574F4E4B4E55;
        }
        sub_100024498((uint64_t)v46);
        char v51 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095B64(0, v51[2] + 1, 1);
          char v51 = v74;
        }
        unint64_t v53 = v51[2];
        unint64_t v52 = v51[3];
        if (v53 >= v52 >> 1)
        {
          sub_100095B64(v52 > 1, v53 + 1, 1);
          char v51 = v74;
        }
        v51[2] = v53 + 1;
        id v54 = (char *)&v51[2 * v53];
        *((void *)v54 + 4) = v48;
        *((void *)v54 + 5) = v50;
        v44 += v45;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      unint64_t v39 = v69;
      unint64_t v43 = v70;
      uint64_t v40 = (uint64_t)v68;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v51 = &_swiftEmptyArrayStorage;
    }
    id v74 = v51;
    sub_100010218(&qword_100800A70);
    sub_1000245BC();
    uint64_t v55 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v57 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    double v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      id v74 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10011EA98(v40, v39, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10011EA98(v72, v43, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10011EA98(v55, v57, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "onCompleterDidUpdate - regionCoordinates=%s resultCount=%s resultTitles=%s", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1004C7D48(0);
      swift_unknownObjectRelease();
    }
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v61 = result;
      [*(id *)(result + OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_offlineStateView) setHidden:1];
      [*(id *)(v61 + OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_collectionView) reloadData];
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100023384()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_completer), "queryFragment"));
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v4 = v3;

  swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      NSString v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)NSString v8 = 136315138;
      swift_getErrorValue();
      uint64_t v9 = Error.localizedDescription.getter();
      sub_10011EA98(v9, v10, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "onCompleterDidFail - %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100023584(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_10080F290);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 dequeueReusableCellWithReuseIdentifier:v7 forIndexPath:isa];

  type metadata accessor for LocationCollectionViewCell();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10) {
    goto LABEL_10;
  }
  uint64_t v11 = v10;
  id v9 = (id)OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_cellType;
  *(unsigned char *)(v10 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_cellType) = 0;
  os_log_type_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_location);
  id v13 = *(void **)(v10 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_centerLocation);
  *(void *)(v10 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_centerLocation) = v12;
  id v14 = v12;

  *(unsigned char *)(v11 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_sortMethod) = 1;
  unint64_t v15 = IndexPath.item.getter();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v16 = v15;
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results);
  if (v15 >= *(void *)(v17 + 16))
  {
LABEL_9:
    __break(1u);
LABEL_10:

    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v18 = type metadata accessor for Loc(0);
  uint64_t v19 = *(void *)(v18 - 8);
  sub_100024434(v17+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v16, (uint64_t)v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v18);
  uint64_t v20 = v11 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_searchResult;
  swift_beginAccess();
  sub_1000244F4((uint64_t)v6, v20);
  swift_endAccess();
  if (*((unsigned char *)v9 + v11)) {
    sub_100272B64();
  }
  else {
    sub_100272F2C();
  }
  sub_10002455C((uint64_t)v6);
  return v11;
}

uint64_t sub_100023844(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Loc(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (id *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  id v14 = (id *)((char *)&v32 - v13);
  uint64_t v15 = OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results;
  uint64_t v16 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC7Journal27LocationPickerSearchManager_results) + 16);
  uint64_t result = IndexPath.item.getter();
  if (result < 0 || result >= v16) {
    return result;
  }
  uint64_t result = IndexPath.item.getter();
  if (result < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v18 = *(void *)(v2 + v15);
  if ((unint64_t)result >= *(void *)(v18 + 16))
  {
LABEL_19:
    __break(1u);
    return result;
  }
  sub_100024434(v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * result, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_100024434((uint64_t)v14, (uint64_t)v11);
  uint64_t v19 = Logger.logObject.getter();
  int v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    int v33 = v20;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v35 = v32;
    *(_DWORD *)uint64_t v21 = 134218242;
    uint64_t v22 = IndexPath.item.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v34 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2080;
    if (*v11)
    {
      id v23 = [*v11 title];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;
    }
    else
    {
      unint64_t v26 = 0xE700000000000000;
      uint64_t v24 = 0x4E574F4E4B4E55;
    }
    uint64_t v34 = sub_10011EA98(v24, v26, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100024498((uint64_t)v11);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v33, "onCollectionViewSelectedItem - path=%ld title=%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    sub_100024498((uint64_t)v11);
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v27 = *v14;
    if (*v14 && (id v28 = [*v14 mapItem]) != 0)
    {
      double v29 = v28;
      id v30 = [v27 title];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v29 setName:v31];

      sub_1004C7EE0(v27, v29);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return sub_100024498((uint64_t)v14);
}

void sub_100023F10(void *a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v10 = (id)Strong;
    id v8 = a3;
    id v9 = a1;
    a4();
  }
}

id sub_1000243A8()
{
  return sub_1000243C0((uint64_t (*)(void))type metadata accessor for DelegateRelay);
}

id sub_1000243C0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t type metadata accessor for DelegateRelay()
{
  return self;
}

uint64_t sub_100024434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Loc(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100024498(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Loc(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000244F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_10080F290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002455C(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_10080F290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000245BC()
{
  unint64_t result = qword_1007F9100;
  if (!qword_1007F9100)
  {
    sub_100014440(&qword_100800A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9100);
  }
  return result;
}

uint64_t sub_100024618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Loc(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10002467C(uint64_t a1, unsigned char *a2)
{
  a2[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_hideFirstSeparator] = 0;
  [*(id *)&a2[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_emptySearchResultsView] setHidden:1];
  [*(id *)&a2[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_emptyJournaledLocationView] setHidden:1];
  [*(id *)&a2[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_permissionMissingView] setHidden:1];
  uint64_t v4 = OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_collectionView;
  uint64_t v5 = *(void **)&a2[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_collectionView];
  if (v5)
  {
    [v5 setDelegate:a1];
    uint64_t v6 = *(void **)&a2[v4];
    if (v6) {
      [v6 setDataSource:a1];
    }
  }
  id v7 = [a2 sheetPresentationController];
  if (v7)
  {
    id v35 = v7;
    id v8 = [v7 detents];
    sub_10001B284(0, (unint64_t *)&qword_1007FB5F0);
    unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
    {
LABEL_32:
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (v10) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_7:
        uint64_t v11 = 4;
        while (1)
        {
          if ((v9 & 0xC000000000000001) != 0) {
            id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v12 = *(id *)(v9 + 8 * v11);
          }
          uint64_t v13 = v12;
          uint64_t v14 = v11 - 3;
          if (__OFADD__(v11 - 4, 1))
          {
            __break(1u);
            goto LABEL_32;
          }
          id v15 = [v12 identifier];
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v18 = v17;
          if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19) {
            break;
          }
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_20;
          }

          ++v11;
          if (v14 == v10) {
            goto LABEL_24;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_20:

        swift_bridgeObjectRelease_n();
        id v22 = [v35 selectedDetentIdentifier];
        if (!v22) {
          goto LABEL_29;
        }
        id v23 = v22;
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;
        if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
        {
          id v28 = UISheetPresentationControllerDetentIdentifierLarge;

          goto LABEL_24;
        }
        char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v30 = UISheetPresentationControllerDetentIdentifierLarge;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
LABEL_29:
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = v35;
          uint64_t v32 = swift_allocObject();
          *(void *)(v32 + 16) = sub_100024B3C;
          *(void *)(v32 + 24) = v31;
          aBlock[4] = sub_10001AC84;
          aBlock[5] = v32;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1003F44E4;
          aBlock[3] = &unk_100796818;
          int v33 = _Block_copy(aBlock);
          id v34 = v35;
          swift_retain();
          swift_release();
          [v34 _animateChanges:v33 completion:0];

          _Block_release(v33);
          LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if (v33) {
            __break(1u);
          }
          return;
        }
LABEL_25:

        return;
      }
    }
LABEL_24:
    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
}

uint64_t sub_100024B04()
{
  return swift_deallocObject();
}

id sub_100024B3C()
{
  return sub_1004C788C(*(void **)(v0 + 16));
}

uint64_t sub_100024B44()
{
  return swift_deallocObject();
}

uint64_t sub_100024B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100024B64()
{
  return swift_release();
}

id sub_100024B6C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___waveformView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___waveformView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___waveformView);
  }
  else
  {
    uint64_t v4 = swift_dynamicCastObjCProtocolConditional();
    if (v4) {
      swift_unknownObjectRetain();
    }
    id v5 = [objc_allocWithZone((Class)RCPlatterLeadingWaveformView) initWithFrame:v4 dataProvider:0.0];
    [v5 setStyle:1];
    swift_unknownObjectRelease();
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_100024C5C()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___emptyTimeCodeString);
  if (*(void *)(v0
                 + OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___emptyTimeCodeString
                 + 8))
  {
    uint64_t v2 = *v1;
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)AVTimeFormatter) init];
    [v3 setStyle:1];
    CMTimeEpoch epoch = kCMTimeInvalid.epoch;
    v9[0] = kCMTimeInvalid.value;
    v9[1] = *(void *)&kCMTimeInvalid.timescale;
    v9[2] = epoch;
    id v5 = [v3 stringFromCMTime:v9];
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    uint64_t *v1 = v2;
    v1[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100024D54()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for ContinuousClock();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  v1[8] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100024E58, v4, v3);
}

uint64_t sub_100024E58()
{
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v1;
  return _swift_task_switch(sub_100024EDC, v2, v1);
}

uint64_t sub_100024EDC()
{
  sub_1002B2318();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 96) = 3;
  static UIView.Invalidating.subscript.setter();
  id v1 = sub_1002B2318();
  [v1 setUserInteractionEnabled:0];

  ContinuousClock.init()();
  uint64_t v4 = (char *)&dword_100812A68 + dword_100812A68;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  void *v2 = v0;
  v2[1] = sub_100025014;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v4)(3000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_100025014()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[3];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[9];
    uint64_t v8 = v3[10];
    unint64_t v9 = sub_100026AFC;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[9];
    uint64_t v8 = v3[10];
    unint64_t v9 = sub_1000251A8;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_1000251A8()
{
  swift_release();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100025214()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for ColorResource();
  char v29 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v5 + 40);
  if (v7(ObjectType, v5)) {
    sub_1002B25B8();
  }
  id v8 = [v0 traitCollection];
  id v9 = [v8 _backlightLuminance];

  if (v9 != (id)2)
  {
    if (v9 != (id)1) {
      return;
    }
    sub_100025698();
    id v10 = sub_100024B6C();
    id v11 = [self tertiaryLabelColor];
    goto LABEL_12;
  }
  int v12 = v7(ObjectType, v5);
  id v13 = sub_1002B22B8();
  if (!v12)
  {
    uint64_t v25 = self;
    id v26 = [v25 labelColor];
    [v13 setTextColor:v26];

    id v10 = sub_100024B6C();
    id v11 = [v25 labelColor];
LABEL_12:
    char v29 = (void (**)(char *, uint64_t, uint64_t))v11;
    [v10 setSliceColor:];

    uint64_t v27 = v29;

    return;
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7F88 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100026A54(v2, (uint64_t)qword_10083EFB8);
  id v15 = v29[2];
  v15(v4, v14, v2);
  uint64_t v16 = (void *)UIColor.init(resource:)();
  [v13 setTextColor:v16];

  id v17 = sub_100024B6C();
  v15(v4, v14, v2);
  uint64_t v18 = (void *)UIColor.init(resource:)();
  [v17 setSliceColor:v18];

  uint64_t v19 = self;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v1;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_100026AC4;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = sub_10001AC84;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_100796930;
  id v22 = _Block_copy(aBlock);
  id v23 = v1;
  swift_retain();
  swift_release();
  [v19 performWithoutAnimation:v22];
  _Block_release(v22);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

void sub_100025698()
{
  id v0 = sub_1002B22B8();
  id v1 = [self labelColor];
  [v0 setTextColor:v1];

  id v2 = sub_1002B22B8();
  [v2 setAccessibilityValue:0];

  id v3 = sub_1002B22B8();
  sub_100024C5C();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setText:v4];
}

void sub_100025774(uint64_t a1)
{
  id v2 = sub_100024B6C();
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 24))(ObjectType);
  [v2 updateSliceFramesForRecordingTime:];
}

uint64_t sub_100025868()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___waveformView));

  return swift_bridgeObjectRelease();
}

id sub_1000258AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for AudioRecordingLiveActivityBannerViewController()
{
  return self;
}

void sub_100025958()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setOverrideUserInterfaceStyle:2];
  id v1 = [v0 view];
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = [v1 layer];

    [v3 setHitTestsAsOpaque:1];
    id v4 = [v0 view];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleTap:"];
      [v5 addGestureRecognizer:v6];

      sub_100025A78();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100025A78()
{
  id v1 = sub_100024B6C();
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v3 = v2;
  id v4 = sub_100024B6C();
  [v3 addSubview:v4];

  id v5 = sub_1002B22B8();
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v6 = sub_1002B22B8();
  LODWORD(v7) = 1148846080;
  [v6 setContentCompressionResistancePriority:0 forAxis:v7];

  id v8 = [v0 view];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v9 = v8;
  id v10 = sub_1002B22B8();
  [v9 addSubview:v10];

  id v11 = sub_1002B2318();
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v12 = [v0 view];
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v13 = v12;
  id v14 = sub_1002B2318();
  [v13 addSubview:v14];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1006D6450;
  id v16 = sub_100024B6C();
  id v17 = [v16 leadingAnchor];

  id v18 = [v0 view];
  if (!v18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v19 = v18;
  id v20 = [v18 leadingAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20 constant:20.0];
  *(void *)(v15 + 32) = v21;
  id v22 = sub_100024B6C();
  id v23 = [v22 widthAnchor];

  id v24 = [v23 constraintEqualToConstant:159.0];
  LODWORD(v25) = 1144750080;
  [v24 setPriority:v25];
  *(void *)(v15 + 40) = v24;
  id v26 = sub_100024B6C();
  id v27 = [v26 heightAnchor];

  id v28 = [v27 constraintEqualToConstant:46.0];
  *(void *)(v15 + 48) = v28;
  id v29 = sub_100024B6C();
  id v30 = [v29 centerYAnchor];

  id v31 = [v0 view];
  if (!v31)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v32 = v31;
  id v33 = [v31 centerYAnchor];

  id v34 = [v30 constraintEqualToAnchor:v33];
  *(void *)(v15 + 56) = v34;
  id v35 = sub_1002B22B8();
  id v36 = [v35 topAnchor];

  id v37 = [v0 view];
  if (!v37)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Swift::String v38 = v37;
  id v39 = [v37 topAnchor];

  id v40 = [v36 constraintGreaterThanOrEqualToAnchor:v39 constant:0.0];
  *(void *)(v15 + 64) = v40;
  id v41 = sub_1002B22B8();
  id v42 = [v41 leadingAnchor];

  id v43 = sub_100024B6C();
  id v44 = [v43 trailingAnchor];

  id v45 = [v42 constraintGreaterThanOrEqualToAnchor:v44 constant:3.0];
  *(void *)(v15 + 72) = v45;
  id v46 = sub_1002B22B8();
  id v47 = [v46 centerYAnchor];

  id v48 = [v0 view];
  if (!v48)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v49 = v48;
  id v50 = [v48 centerYAnchor];

  id v51 = [v47 constraintEqualToAnchor:v50];
  *(void *)(v15 + 80) = v51;
  id v52 = sub_1002B2318();
  id v53 = [v52 leadingAnchor];

  id v54 = sub_1002B22B8();
  id v55 = [v54 trailingAnchor];

  id v56 = [v53 constraintEqualToAnchor:v55 constant:8.0];
  *(void *)(v15 + 88) = v56;
  id v57 = sub_1002B2318();
  id v58 = [v57 widthAnchor];

  id v59 = [v58 constraintEqualToConstant:51.0];
  *(void *)(v15 + 96) = v59;
  id v60 = sub_1002B2318();
  id v61 = [v60 heightAnchor];

  id v62 = [v61 constraintEqualToConstant:51.0];
  *(void *)(v15 + 104) = v62;
  id v63 = sub_1002B2318();
  id v64 = [v63 centerYAnchor];

  id v65 = [v0 view];
  if (!v65)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v66 = v65;
  id v67 = [v65 centerYAnchor];

  id v68 = [v64 constraintEqualToAnchor:v67];
  *(void *)(v15 + 112) = v68;
  id v69 = [v0 view];
  if (!v69)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v70 = v69;
  Swift::String v71 = self;
  id v72 = [v70 trailingAnchor];

  id v73 = sub_1002B2318();
  id v74 = [v73 trailingAnchor];

  id v75 = [v72 constraintEqualToAnchor:v74 constant:22.0];
  *(void *)(v15 + 120) = v75;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v71 activateConstraints:isa];
}

void sub_100026258(void *a1)
{
  if ([a1 state] != (id)3) {
    return;
  }
  id v2 = [v1 view];
  if (!v2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  id v3 = v2;
  id v4 = [v2 window];

  if (v4)
  {
    id v9 = [v4 windowScene];
  }
  else
  {
    id v9 = 0;
  }
  id v5 = [self defaultWorkspace];
  if (!v5) {
    goto LABEL_12;
  }
  id v6 = v5;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_1006681AC(v9, 0, 1);
  [v6 openApplicationWithBundleIdentifier:v7 usingConfiguration:v8 completionHandler:0];
}

uint64_t sub_10002641C()
{
  sub_10001457C(v0 + 16, &qword_1007F9470);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001457C(v0+ OBJC_IVAR____TtCFFZFV7Journal150_s7Journal0057AudioRecordingLiveActivityBannerViewControllerswift_tCHFufMX126_0_33_A8920A825AC57B7B09EE15DAB3B684A07PreviewfMf_15PreviewRegistryfMu_11makePreviewFzT_V21DeveloperToolsSupport7PreviewU_FY_mediaURL, (uint64_t *)&unk_100800A60);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000264C0()
{
  return type metadata accessor for $s7Journal0057AudioRecordingLiveActivityBannerViewControllerswift_tCHFufMX126_0_33_A8920A825AC57B7B09EE15DAB3B684A07PreviewfMf_15PreviewRegistryfMu_.MockRecordingManager();
}

uint64_t type metadata accessor for $s7Journal0057AudioRecordingLiveActivityBannerViewControllerswift_tCHFufMX126_0_33_A8920A825AC57B7B09EE15DAB3B684A0Ll7PreviewfMf_15PreviewRegistryfMu_.MockRecordingManager()
{
  uint64_t result = qword_1007F9260;
  if (!qword_1007F9260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100026514()
{
  sub_1000265E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000265E4()
{
  if (!qword_1007F9270)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007F9270);
    }
  }
}

uint64_t sub_10002663C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1
     + OBJC_IVAR____TtCFFZFV7Journal150_s7Journal0057AudioRecordingLiveActivityBannerViewControllerswift_tCHFufMX126_0_33_A8920A825AC57B7B09EE15DAB3B684A07PreviewfMf_15PreviewRegistryfMu_11makePreviewFzT_V21DeveloperToolsSupport7PreviewU_FY_mediaURL;
  swift_beginAccess();
  return sub_10001B220(v3, a1, (uint64_t *)&unk_100800A60);
}

uint64_t sub_100026698@<X0>(uint64_t a1@<X8>)
{
  return sub_10001B220(v1 + 16, a1, &qword_1007F9470);
}

uint64_t sub_1000266C0()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1000266C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000266D8()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100026B00, v2, v1);
}

uint64_t sub_10002676C()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100026800, v2, v1);
}

uint64_t sub_100026800()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100026864()
{
  return swift_bridgeObjectRetain();
}

double sub_100026870()
{
  return *(double *)(*(void *)v0 + 88);
}

double sub_10002687C()
{
  return *(double *)(*v0
                   + OBJC_IVAR____TtCFFZFV7Journal150_s7Journal0057AudioRecordingLiveActivityBannerViewControllerswift_tCHFufMX126_0_33_A8920A825AC57B7B09EE15DAB3B684A07PreviewfMf_15PreviewRegistryfMu_11makePreviewFzT_V21DeveloperToolsSupport7PreviewU_FY_audioIntensitiesPerSecond);
}

uint64_t sub_100026890(uint64_t a1)
{
  uint64_t result = sub_100026918(&qword_1007F9448);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000268D4(uint64_t a1)
{
  uint64_t result = sub_100026918(&qword_1007F9468);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100026918(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for $s7Journal0057AudioRecordingLiveActivityBannerViewControllerswift_tCHFufMX126_0_33_A8920A825AC57B7B09EE15DAB3B684A07PreviewfMf_15PreviewRegistryfMu_.MockRecordingManager();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10002695C(uint64_t a1, Class a2, uint64_t a3, uint64_t a4)
{
  NSString v7 = (char *)objc_allocWithZone(a2);

  return sub_1000269B4(a1, v7, a3, a4);
}

id sub_1000269B4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&a2[OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___waveformView] = 0;
  uint64_t v4 = &a2[OBJC_IVAR____TtC7Journal46AudioRecordingLiveActivityBannerViewController____lazy_storage___emptyTimeCodeString];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&a2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingFinishedTask] = 0;
  *(void *)&a2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___timeLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___stopButton] = 0;
  id v5 = &a2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager];
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a4;
  v7.receiver = a2;
  v7.super_class = (Class)type metadata accessor for AudioRecordingLiveActivityViewController();
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_100026A54(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100026A8C()
{
  return swift_deallocObject();
}

void sub_100026AC4()
{
  sub_100025774(*(void *)(v0 + 16));
}

uint64_t sub_100026ACC()
{
  return swift_deallocObject();
}

uint64_t sub_100026ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100026AEC()
{
  return swift_release();
}

uint64_t *sub_100026B04(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DateComponents();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = sub_100010218(&qword_1007F9478);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 28));
    uint64_t v9 = a3[5];
    id v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    swift_retain();
    j__swift_retain();
    *(void *)id v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    id v16 = (uint64_t *)((char *)a2 + v14);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    id v20 = (char *)a1 + v19;
    id v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    char v23 = v21[8];
    sub_100026CCC(*(void *)v21, v23);
    *(void *)id v20 = v22;
    v20[8] = v23;
  }
  return a1;
}

uint64_t sub_100026CCC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100026CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_100010218(&qword_1007F9478);
  swift_release();
  j__swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_100026DF8(v8, v9);
}

uint64_t sub_100026DF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100026E04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = sub_100010218(&qword_1007F9478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  id v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  swift_retain();
  j__swift_retain();
  *(void *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = v12;
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for Calendar();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_100026CCC(*(void *)v19, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  return a1;
}

uint64_t sub_100026F78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = sub_100010218(&qword_1007F9478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  swift_retain();
  swift_release();
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  id v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  char v12 = *((unsigned char *)v10 + 8);
  j__swift_retain();
  *(void *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = v12;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_10001457C(a1 + v13, &qword_1007F9480);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_100026CCC(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  sub_100026DF8(v22, v23);
  return a1;
}

uint64_t sub_100027128(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = sub_100010218(&qword_1007F9478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  char v12 = (void *)(a1 + v9);
  uint64_t v13 = (const void *)(a2 + v9);
  uint64_t v14 = sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for Calendar();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t sub_10002728C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = sub_100010218(&qword_1007F9478);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  swift_release();
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  LOBYTE(v10) = *((unsigned char *)v10 + 8);
  *(void *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = (_BYTE)v10;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_10001457C(a1 + v12, &qword_1007F9480);
    uint64_t v15 = sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Calendar();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((unsigned char *)v19 + 8);
  uint64_t v21 = *(void *)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = (_BYTE)v19;
  sub_100026DF8(v21, v22);
  return a1;
}

uint64_t sub_10002742C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100027440);
}

uint64_t sub_100027440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_1007F9478);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = sub_100010218(&qword_1008155B0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100027570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100027584);
}

uint64_t sub_100027584(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218(&qword_1007F9478);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  else
  {
    uint64_t v11 = sub_100010218(&qword_1008155B0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for InsightsEntriesDetailAndToolbarView()
{
  uint64_t result = qword_1007F94E0;
  if (!qword_1007F94E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100027704()
{
  sub_100027834(319, &qword_1007F94F0, (uint64_t (*)(uint64_t))&type metadata accessor for DateComponents, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F)
  {
    sub_100027834(319, (unint64_t *)&qword_1007F94F8, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100027834(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100027898()
{
  return swift_getOpaqueTypeConformance2();
}

void (*sub_1000278B4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = type metadata accessor for DateComponents();
  *uint64_t v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = sub_100010218(&qword_1007F9478);
  v3[4] = v7;
  unint64_t v8 = malloc(*(void *)(*(void *)(v7 - 8) + 64));
  v3[5] = v8;
  sub_10001B220(v1, (uint64_t)v8, &qword_1007F9478);
  State.wrappedValue.getter();
  return sub_1000279DC;
}

void sub_1000279DC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 16);
  uint64_t v5 = *(void **)(*(void *)a1 + 24);
  if (a2)
  {
    uint64_t v6 = *v2;
    uint64_t v7 = v2[1];
    (*(void (**)(void, void *, void))(v7 + 16))(*(void *)(*(void *)a1 + 16), v5, *v2);
    State.wrappedValue.setter();
    sub_10001457C((uint64_t)v3, &qword_1007F9478);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    State.wrappedValue.setter();
    sub_10001457C((uint64_t)v3, &qword_1007F9478);
  }
  free(v3);
  free(v5);
  free(v4);

  free(v2);
}

uint64_t sub_100027AC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v35 = type metadata accessor for DateComponents();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Calendar();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  id v34 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v31 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v32 = v1 + *(int *)(type metadata accessor for InsightsEntriesDetailAndToolbarView() + 24);
  sub_100666410((uint64_t)v7);
  sub_100010218(&qword_1007F9478);
  uint64_t v19 = v33;
  State.wrappedValue.getter();
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v35);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v33 = v5;
  v20(v7, v5);
  uint64_t v35 = v14;
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v21((uint64_t)v12, 1, v13) == 1)
  {
    sub_10001457C((uint64_t)v12, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    id v30 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v30(v18, v12, v13);
    sub_100666410((uint64_t)v7);
    uint64_t v22 = (uint64_t)v34;
    Calendar.endOfDay(_:)();
    uint64_t v23 = v33;
    v20(v7, v33);
    if (v21(v22, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v13);
      sub_10001457C((uint64_t)v34, (uint64_t *)&unk_1007FC470);
    }
    else
    {
      id v24 = v31;
      v30(v31, v34, v13);
      uint64_t v25 = v23;
      sub_100666410((uint64_t)v7);
      char v26 = Calendar.isDateInToday(_:)();
      v20(v7, v25);
      id v27 = *(void (**)(char *, uint64_t))(v35 + 8);
      v27(v18, v13);
      if ((v26 & 1) == 0) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v36, v24, v13);
      }
      v27(v24, v13);
    }
  }
  return static Date.now.getter();
}

uint64_t sub_100027F1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FF070);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DateComponents();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  __n128 v25 = __chkstk_darwin(v21);
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v33 = (char *)&v33 - v22;
  uint64_t v34 = v24;
  uint64_t v35 = v23;
  id v26 = [*(id *)(a1 + 32) entryDate:v25.n128_f64[0]];
  if (v26)
  {
    id v27 = v26;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }
  sub_10002C4EC((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5))
  {
    sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v19 + 56))(v17, 1, 1, v18, v25);
    return sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FF070);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v14, v5);
  sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
  static Calendar.current.getter();
  if (qword_1007F7ED0 != -1) {
    swift_once();
  }
  Calendar.dateComponents(_:from:)();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v37);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    return sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FF070);
  }
  uint64_t v29 = v33;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v33, v17, v18);
  id v30 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 16);
  id v31 = v35;
  v30((uint64_t)v35, v29, v18);
  v30(v34, v31, v18);
  sub_100010218(&qword_1007F9478);
  State.wrappedValue.setter();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v32((uint64_t)v31, v18);
  return ((uint64_t (*)(char *, uint64_t))v32)(v29, v18);
}

void (*sub_10002844C@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>))(unsigned char *, void)
{
  uint64_t v4 = sub_1000278B4(v9);
  uint64_t result = (void (*)(unsigned char *, void))DateComponents.day.modify();
  int v7 = *(unsigned __int8 *)(v6 + 8);
  if (v7 == 1)
  {
    result(v8, 0);
    uint64_t result = (void (*)(unsigned char *, void))((uint64_t (*)(void *, void))v4)(v9, 0);
LABEL_5:
    *a2 = v7;
    return result;
  }
  if (!__OFADD__(*(void *)v6, a1))
  {
    *(void *)v6 += a1;
    result(v8, 0);
    uint64_t result = (void (*)(unsigned char *, void))((uint64_t (*)(void *, void))v4)(v9, 0);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100028540@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  __chkstk_darwin(v3);
  id v84 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v5 - 8);
  id v83 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TimeZone();
  __chkstk_darwin(v7 - 8);
  id v82 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Calendar();
  __chkstk_darwin(v9 - 8);
  char v79 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  id v77 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_1007F9538);
  __chkstk_darwin(v13 - 8);
  id v72 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1007F9540);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for Date.FormatStyle();
  __chkstk_darwin(v78);
  id v68 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for InsightsCalendarDetailTabView(0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  __n128 v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100010218(&qword_1007F9548);
  __chkstk_darwin(v26);
  id v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100010218(&qword_1007F9550);
  uint64_t v74 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v67 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100010218(&qword_1007F9558);
  uint64_t v76 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v70 = (char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100010218(&qword_1007F9560);
  uint64_t v80 = *(void *)(v31 - 8);
  uint64_t v81 = v31;
  __chkstk_darwin(v31);
  Swift::String v71 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218(&qword_1007F9478);
  State.projectedValue.getter();
  uint64_t v33 = &v25[*(int *)(v23 + 28)];
  *(void *)uint64_t v33 = swift_getKeyPath();
  v33[8] = 0;
  uint64_t v34 = (uint64_t *)&v25[*(int *)(v23 + 32)];
  uint64_t *v34 = swift_getKeyPath();
  sub_100010218(&qword_1007F9480);
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = static SafeAreaRegions.all.getter();
  LOBYTE(v34) = static Edge.Set.all.getter();
  sub_10002BAAC((uint64_t)v25, (uint64_t)v28, type metadata accessor for InsightsCalendarDetailTabView);
  uint64_t v36 = *(int *)(v26 + 36);
  *(void *)&long long v66 = v26;
  uint64_t v37 = &v28[v36];
  *(void *)uint64_t v37 = v35;
  v37[8] = (char)v34;
  sub_10002C48C((uint64_t)v25, type metadata accessor for InsightsCalendarDetailTabView);
  id v88 = a1;
  id v69 = a1;
  *((void *)&v66 + 1) = sub_100010218(&qword_1007F9568);
  unint64_t v38 = sub_10002B824();
  uint64_t v39 = sub_100014440(&qword_1007F9578);
  uint64_t v40 = sub_100014488(&qword_1007F9580, &qword_1007F9578);
  *(void *)&long long v89 = v39;
  *((void *)&v89 + 1) = v40;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  sub_10001457C((uint64_t)v28, &qword_1007F9548);
  sub_100027AC4((uint64_t)v21);
  static Date.FormatStyle.DateStyle.abbreviated.getter();
  uint64_t v42 = type metadata accessor for Date.FormatStyle.DateStyle();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v17, 0, 1, v42);
  uint64_t v43 = type metadata accessor for Date.FormatStyle.TimeStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v72, 1, 1, v43);
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  sub_10002BCB4((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  sub_10002BCB4((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v44 = Text.init<A>(_:format:)();
  uint64_t v46 = v45;
  long long v89 = v66;
  LOBYTE(v21) = v47 & 1;
  *(void *)&long long v90 = v38;
  *((void *)&v90 + 1) = OpaqueTypeConformance2;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  unint64_t v49 = v70;
  uint64_t v50 = v73;
  id v51 = v67;
  View.navigationTitle(_:)();
  sub_10002B8D0(v44, v46, (char)v21);
  swift_bridgeObjectRelease();
  uint64_t v52 = v50;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v50);
  id v53 = v84;
  uint64_t v54 = v85;
  uint64_t v55 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v86);
  *(void *)&long long v89 = v52;
  *((void *)&v89 + 1) = v48;
  swift_getOpaqueTypeConformance2();
  id v56 = v71;
  uint64_t v57 = v75;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v49, v57);
  uint64_t v58 = static HorizontalAlignment.center.getter();
  uint64_t v59 = sub_100010218(&qword_1007F9590);
  uint64_t v60 = v87;
  uint64_t v61 = v87 + *(int *)(v59 + 36);
  sub_100029AD4(v69, v61);
  VerticalEdge.rawValue.getter();
  LOBYTE(v48) = Edge.init(rawValue:)();
  uint64_t v62 = static SafeAreaRegions.container.getter();
  uint64_t v63 = v61 + *(int *)(sub_100010218(&qword_1007F9598) + 36);
  *(void *)uint64_t v63 = v62;
  *(void *)(v63 + 8) = 0;
  *(unsigned char *)(v63 + 16) = 0;
  *(unsigned char *)(v63 + 17) = v48;
  *(void *)(v63 + 24) = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v60, v56, v81);
  static Edge.Set.bottom.getter();
  long long v89 = 0u;
  long long v90 = 0u;
  char v91 = 1;
  sub_100010218(&qword_1007F95A0);
  return SafeAreaPaddingModifier.init(edges:insets:)();
}

uint64_t sub_100028FDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100010218(&qword_1007F9578);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v9 = a1;
  sub_100010218(&qword_1007F96B0);
  sub_100014488(&qword_1007F96B8, &qword_1007F96B0);
  ToolbarItem<>.init(placement:content:)();
  sub_100014488(&qword_1007F9580, &qword_1007F9578);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000291A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InsightsEntriesDetailAndToolbarView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_10002BAAC(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for InsightsEntriesDetailAndToolbarView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_10002BB18((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  sub_100010218(&qword_1007F96C0);
  sub_10002BE40();
  return Button.init(action:label:)();
}

uint64_t sub_1000292F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InsightsEntriesDetailAndToolbarView();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + *(int *)(v3 + 28);
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);
  j__swift_retain();
  uint64_t v13 = sub_100666444(v11, v12);
  uint64_t result = j__swift_release();
  if (v13)
  {
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
    sub_10002BAAC(a1, (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for InsightsEntriesDetailAndToolbarView);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v16 = static MainActor.shared.getter();
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v16;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v13;
    sub_10002BB18((uint64_t)v6, (uint64_t)v18 + v17);
    sub_100328A60((uint64_t)v9, (uint64_t)&unk_1007F96D8, (uint64_t)v18);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10002950C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for CanvasStartingState();
  v5[5] = swift_task_alloc();
  uint64_t v6 = *(void *)(type metadata accessor for InsightsEntriesDetailAndToolbarView() - 8);
  v5[6] = v6;
  v5[7] = *(void *)(v6 + 64);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_100029634, v8, v7);
}

uint64_t sub_100029634()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = v0[2];
  sub_10002BAAC(v0[3], v1, (uint64_t (*)(void))type metadata accessor for InsightsEntriesDetailAndToolbarView);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_10002BB18(v1, v7 + v6);
  uint64_t v8 = (uint64_t (**)(uint64_t))(v5
                                        + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry);
  uint64_t v9 = *(void *)(v5 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry);
  *uint64_t v8 = sub_10002C428;
  v8[1] = (uint64_t (*)(uint64_t))v7;
  sub_10001ABB8(v9);
  uint64_t v10 = type metadata accessor for WidgetFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
  uint64_t v11 = v2 + v4[6];
  sub_100027AC4(v11);
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  uint64_t v13 = (void *)(v2 + v4[5]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(unsigned char *)(v2 + v4[7]) = 1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[12] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100029818;
  uint64_t v15 = v0[5];
  return sub_100059E88(0, v15);
}

uint64_t sub_100029818()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  sub_10002C48C(v2, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100029970, v4, v3);
}

uint64_t sub_100029970()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000299E4()
{
  Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v0 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v0, v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100029AD4@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a1;
  uint64_t v121 = a2;
  uint64_t v2 = type metadata accessor for Capsule();
  __chkstk_darwin(v2 - 8);
  unint64_t v120 = (char *)v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShadowStyle();
  uint64_t v117 = *(void *)(v4 - 8);
  uint64_t v118 = v4;
  __chkstk_darwin(v4);
  id v116 = (char *)v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100010218(&qword_1007F95A8);
  __chkstk_darwin(v115);
  id v119 = (void *)((char *)v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = sub_100010218(&qword_1007F95B0);
  __chkstk_darwin(v123);
  long long v100 = (char *)v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v108 = (char *)v94 - v9;
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  uint64_t v124 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v122 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v94 - v13;
  uint64_t v102 = sub_100010218(&qword_1007F95B8);
  __chkstk_darwin(v102);
  id v105 = (char *)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v107 = (uint64_t)v94 - v17;
  uint64_t v18 = type metadata accessor for ColorResource();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_1007F95C0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100010218(&qword_1007F95C8);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100010218(&qword_1007F95D0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100010218(&qword_1007F95D8);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  long long v101 = (char *)v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100010218(&qword_1007F95E0);
  __chkstk_darwin(v98);
  uint64_t v99 = (char *)v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100010218(&qword_1007F95E8);
  __chkstk_darwin(v97);
  id v109 = (char *)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100010218(&qword_1007F95F0);
  __chkstk_darwin(v106);
  id v112 = (char *)v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100010218(&qword_1007F95F8);
  __chkstk_darwin(v35 - 8);
  uint64_t v114 = (uint64_t)v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v24 = static VerticalAlignment.center.getter();
  *((void *)v24 + 1) = 0;
  v24[16] = 0;
  uint64_t v37 = sub_100010218(&qword_1007F9600);
  sub_10002A894(v125, &v24[*(int *)(v37 + 44)]);
  if (qword_1007F7F40 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_100026A54(v18, (uint64_t)qword_10083EEE0);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v113 = v18;
  uint64_t v111 = v19 + 16;
  long long v96 = v39;
  v39(v21, v38, v18);
  id v110 = v21;
  uint64_t v40 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v24, (uint64_t)v27, &qword_1007F95C0);
  uint64_t v42 = (uint64_t *)&v27[*(int *)(v25 + 36)];
  *uint64_t v42 = KeyPath;
  v42[1] = v40;
  sub_10001457C((uint64_t)v24, &qword_1007F95C0);
  uint64_t v43 = static Font.headline.getter();
  uint64_t v44 = swift_getKeyPath();
  sub_10001B220((uint64_t)v27, (uint64_t)v30, &qword_1007F95C8);
  uint64_t v45 = (uint64_t *)&v30[*(int *)(v28 + 36)];
  *uint64_t v45 = v44;
  v45[1] = v43;
  sub_10001457C((uint64_t)v27, &qword_1007F95C8);
  uint64_t v46 = *(void (**)(char *, void, uint64_t))(v124 + 104);
  v46(v14, enum case for DynamicTypeSize.large(_:), v10);
  char v47 = v122;
  v46(v122, enum case for DynamicTypeSize.xxLarge(_:), v10);
  sub_10002BCB4(&qword_1007F9608, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if (dispatch thunk of static Comparable.<= infix(_:_:)())
  {
    v94[1] = v28;
    uint64_t v48 = v100;
    id v95 = v30;
    uint64_t v50 = v123;
    uint64_t v49 = v124;
    id v51 = v108;
    uint64_t v52 = &v108[*(int *)(v123 + 48)];
    id v53 = *(void (**)(char *, char *, uint64_t))(v124 + 32);
    v53(v108, v14, v10);
    uint64_t v54 = v52;
    v53(v52, v47, v10);
    uint64_t v55 = &v48[*(int *)(v50 + 48)];
    id v56 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v56(v48, v51, v10);
    v56(v55, v54, v10);
    uint64_t v57 = (uint64_t)v105;
    v53(v105, v48, v10);
    uint64_t v58 = *(void (**)(char *, uint64_t))(v49 + 8);
    v58(v55, v10);
    uint64_t v59 = &v48[*(int *)(v123 + 48)];
    v53(v48, v51, v10);
    v53(v59, v54, v10);
    v53((char *)(v57 + *(int *)(v102 + 36)), v59, v10);
    v58(v48, v10);
    uint64_t v60 = v107;
    sub_10002C4EC(v57, v107, &qword_1007F95B8);
    sub_10002B8F0();
    sub_100014488(&qword_1007F9648, &qword_1007F95B8);
    char v47 = v101;
    uint64_t v61 = (uint64_t)v95;
    View.dynamicTypeSize<A>(_:)();
    sub_10001457C(v60, &qword_1007F95B8);
    sub_10001457C(v61, &qword_1007F95D0);
    uint64_t v62 = swift_getKeyPath();
    uint64_t v63 = v103;
    uint64_t v64 = (uint64_t)v99;
    uint64_t v65 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v99, v47, v104);
    uint64_t v66 = v64 + *(int *)(v98 + 36);
    *(void *)uint64_t v66 = v62;
    *(unsigned char *)(v66 + 8) = 0;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v65);
    uint64_t v24 = v109;
    sub_10001B220(v64, (uint64_t)v109, &qword_1007F95E0);
    LOWORD(v47) = 256;
    *(_WORD *)&v24[*(int *)(v97 + 36)] = 256;
    sub_10001457C(v64, &qword_1007F95E0);
    if (qword_1007F7FB8 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  uint64_t v67 = v113;
  uint64_t v68 = sub_100026A54(v113, (uint64_t)qword_10083F048);
  v96(v110, v68, v67);
  uint64_t v69 = Color.init(_:)();
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  uint64_t v70 = v116;
  static ShadowStyle.drop(color:radius:x:y:)();
  swift_release();
  uint64_t v71 = v118;
  id v72 = v119;
  uint64_t v73 = v117;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v119 + *(int *)(v115 + 36), v70, v118);
  *id v72 = v69;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v71);
  uint64_t v74 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v75 = type metadata accessor for RoundedCornerStyle();
  uint64_t v76 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 104))(v120, v74, v75);
  uint64_t v77 = (uint64_t)v112;
  uint64_t v78 = (uint64_t)&v112[*(int *)(v106 + 36)];
  sub_10001B220((uint64_t)v72, v78, &qword_1007F95A8);
  uint64_t v79 = sub_100010218(&qword_1007F9650);
  sub_10002BAAC(v76, v78 + *(int *)(v79 + 52), (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(_WORD *)(v78 + *(int *)(v79 + 56)) = (_WORD)v47;
  sub_10001B220((uint64_t)v24, v77, &qword_1007F95E8);
  sub_10002C48C(v76, (uint64_t (*)(void))&type metadata accessor for Capsule);
  sub_10001457C((uint64_t)v72, &qword_1007F95A8);
  sub_10001457C((uint64_t)v24, &qword_1007F95E8);
  uint64_t v80 = static Alignment.center.getter();
  uint64_t v81 = v114;
  sub_1001A3CAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v114, 0.0, 1, 58.0, 0, v80, v82);
  sub_10001457C(v77, &qword_1007F95F0);
  uint64_t v83 = static Alignment.center.getter();
  uint64_t v85 = v84;
  uint64_t v86 = (char *)v125 + *(int *)(type metadata accessor for InsightsEntriesDetailAndToolbarView() + 28);
  uint64_t v87 = *(void *)v86;
  LOBYTE(v76) = v86[8];
  sub_100026CCC(*(void *)v86, v76);
  char v88 = sub_100666714(v87, v76);
  sub_100026DF8(v87, v76);
  if (v88)
  {
    uint64_t v89 = 0;
    char v90 = 0;
  }
  else
  {
    uint64_t v89 = static SafeAreaRegions.all.getter();
    char v90 = static Edge.Set.all.getter();
  }
  uint64_t v91 = v121;
  sub_10001B220(v81, v121, &qword_1007F95F8);
  uint64_t v92 = v91 + *(int *)(sub_100010218(&qword_1007F9658) + 36);
  *(void *)uint64_t v92 = v89;
  *(unsigned char *)(v92 + 8) = v90;
  *(unsigned char *)(v92 + 9) = v88 & 1;
  *(void *)(v92 + 16) = v83;
  *(void *)(v92 + 24) = v85;
  return sub_10001457C(v81, &qword_1007F95F8);
}

void (*sub_10002A894@<X0>(void (*a1)(char *, uint64_t)@<X0>, char *a2@<X8>))(unsigned char *, void)
{
  uint64_t v87 = a2;
  uint64_t v84 = type metadata accessor for DateComponents();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  long long v100 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FF070);
  __chkstk_darwin(v4 - 8);
  uint64_t v79 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for Calendar();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v99 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100010218(&qword_1007F9660);
  __chkstk_darwin(v82);
  uint64_t v86 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v75 - v9;
  __chkstk_darwin(v10);
  uint64_t v85 = (uint64_t)&v75 - v11;
  uint64_t v96 = type metadata accessor for ColorResource();
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  char v88 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for Divider();
  uint64_t v13 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100010218(&qword_1007F9668);
  __chkstk_darwin(v92);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100010218(&qword_1007F9670);
  __chkstk_darwin(v93);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v103 = (uint64_t)&v75 - v21;
  uint64_t v98 = type metadata accessor for InsightsEntriesDetailAndToolbarView();
  uint64_t v22 = *(void *)(v98 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v98);
  uint64_t v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100010218(&qword_1007F9678);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  id v95 = (char *)&v75 - v27;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v75 - v29;
  long long v101 = a1;
  sub_10002BAAC((uint64_t)a1, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for InsightsEntriesDetailAndToolbarView);
  uint64_t v31 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v32 = (v31 + 16) & ~v31;
  uint64_t v91 = v32 + v23;
  uint64_t v90 = v31 | 7;
  uint64_t v33 = swift_allocObject();
  sub_10002BB18((uint64_t)v24, v33 + v32);
  uint64_t v34 = sub_100010218(&qword_1007F9680);
  sub_10002BB94();
  uint64_t v102 = v30;
  uint64_t v89 = v34;
  Button.init(action:label:)();
  Divider.init()();
  if (qword_1007F7F48 != -1) {
    swift_once();
  }
  uint64_t v35 = v96;
  uint64_t v36 = sub_100026A54(v96, (uint64_t)qword_10083EEF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v88, v36, v35);
  uint64_t v37 = Color.init(_:)();
  char v38 = static Edge.Set.all.getter();
  uint64_t v39 = v97;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v97);
  uint64_t v40 = &v17[*(int *)(v92 + 36)];
  *(void *)uint64_t v40 = v37;
  v40[8] = v38;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v39);
  char v41 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_10001B220((uint64_t)v17, (uint64_t)v19, &qword_1007F9668);
  uint64_t v50 = &v19[*(int *)(v93 + 36)];
  *uint64_t v50 = v41;
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_10001457C((uint64_t)v17, &qword_1007F9668);
  sub_10002C4EC((uint64_t)v19, v103, &qword_1007F9670);
  sub_10002BAAC((uint64_t)v101, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for InsightsEntriesDetailAndToolbarView);
  uint64_t v51 = swift_allocObject();
  sub_10002BB18((uint64_t)v24, v51 + v32);
  uint64_t v52 = v95;
  Button.init(action:label:)();
  uint64_t v53 = v99;
  sub_100666410(v99);
  sub_100010218(&qword_1007F9478);
  uint64_t v54 = v100;
  State.wrappedValue.getter();
  uint64_t result = (void (*)(unsigned char *, void))DateComponents.day.modify();
  uint64_t v57 = (uint64_t)v19;
  if (*(unsigned char *)(v56 + 8) == 1)
  {
    result(v104, 0);
LABEL_7:
    uint64_t v58 = v83;
    uint64_t v59 = (uint64_t)v79;
    uint64_t v60 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v79, v54, v84);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v60);
    LOBYTE(v60) = sub_100638BFC(v59);
    sub_10001457C(v59, (uint64_t *)&unk_1007FF070);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v53, v80);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v62 = swift_allocObject();
    *(unsigned char *)(v62 + 16) = v60 & 1;
    uint64_t v63 = v76;
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
    uint64_t v65 = (uint64_t)v81;
    uint64_t v66 = v77;
    v64(v81, v52, v77);
    uint64_t v67 = (uint64_t *)(v65 + *(int *)(v82 + 36));
    *uint64_t v67 = KeyPath;
    v67[1] = (uint64_t)sub_10002BD30;
    v67[2] = v62;
    long long v101 = *(void (**)(char *, uint64_t))(v63 + 8);
    v101(v52, v66);
    uint64_t v68 = v85;
    sub_10002C4EC(v65, v85, &qword_1007F9660);
    uint64_t v69 = v75;
    v64(v75, v102, v66);
    sub_10001B220(v103, v57, &qword_1007F9670);
    uint64_t v70 = v57;
    uint64_t v71 = v86;
    sub_10001B220(v68, v86, &qword_1007F9660);
    id v72 = v87;
    v64(v87, v69, v66);
    uint64_t v73 = sub_100010218(&qword_1007F96A8);
    sub_10001B220(v70, (uint64_t)&v72[*(int *)(v73 + 48)], &qword_1007F9670);
    sub_10001B220(v71, (uint64_t)&v72[*(int *)(v73 + 64)], &qword_1007F9660);
    sub_10001457C(v68, &qword_1007F9660);
    sub_10001457C(v103, &qword_1007F9670);
    uint64_t v74 = (uint64_t (*)(char *, uint64_t))v101;
    v101(v102, v66);
    sub_10001457C(v71, &qword_1007F9660);
    sub_10001457C(v70, &qword_1007F9670);
    return (void (*)(unsigned char *, void))v74(v69, v66);
  }
  if (!__OFADD__(*(void *)v56, 1))
  {
    ++*(void *)v56;
    result(v104, 0);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002B3B0()
{
  return swift_release_n();
}

uint64_t sub_10002B46C()
{
  Image.init(systemName:)();
  static Edge.Set.all.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v0 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  sub_100010218(&qword_1007F9698);
  sub_10002BC40();
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v0, v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002B5B0()
{
  return swift_release_n();
}

uint64_t sub_10002B668()
{
  Image.init(systemName:)();
  static Edge.Set.all.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v0 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  sub_100010218(&qword_1007F9698);
  sub_10002BC40();
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v0, v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002B7AC()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10002B7C8@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.bottom.getter();
  a1[1] = v3;
  uint64_t v4 = sub_100010218(&qword_1007F9530);
  return sub_100028540(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_10002B81C()
{
  return sub_100028FDC(*(void *)(v0 + 16));
}

unint64_t sub_10002B824()
{
  unint64_t result = qword_1007F9570;
  if (!qword_1007F9570)
  {
    sub_100014440(&qword_1007F9548);
    sub_10002BCB4(&qword_100815660, (void (*)(uint64_t))type metadata accessor for InsightsCalendarDetailTabView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9570);
  }
  return result;
}

uint64_t sub_10002B8D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_10002B8F0()
{
  unint64_t result = qword_1007F9610;
  if (!qword_1007F9610)
  {
    sub_100014440(&qword_1007F95D0);
    sub_10002B990();
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9610);
  }
  return result;
}

unint64_t sub_10002B990()
{
  unint64_t result = qword_1007F9618;
  if (!qword_1007F9618)
  {
    sub_100014440(&qword_1007F95C8);
    sub_100014488(&qword_1007F9620, &qword_1007F95C0);
    sub_100014488(&qword_1007F9628, &qword_1007F9630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9618);
  }
  return result;
}

uint64_t sub_10002BA54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues._accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10002BA84()
{
  return EnvironmentValues._accessibilityShowButtonShapes.setter();
}

uint64_t sub_10002BAAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002BB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsEntriesDetailAndToolbarView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002BB7C()
{
  return sub_10002BDCC((uint64_t (*)(uint64_t))sub_10002B3B0);
}

unint64_t sub_10002BB94()
{
  unint64_t result = qword_1007F9688;
  if (!qword_1007F9688)
  {
    sub_100014440(&qword_1007F9680);
    sub_10002BC40();
    sub_10002BCB4((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9688);
  }
  return result;
}

unint64_t sub_10002BC40()
{
  unint64_t result = qword_1007F9690;
  if (!qword_1007F9690)
  {
    sub_100014440(&qword_1007F9698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9690);
  }
  return result;
}

uint64_t sub_10002BCB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002BD00()
{
  return sub_10002BDCC((uint64_t (*)(uint64_t))sub_10002B5B0);
}

uint64_t sub_10002BD20()
{
  return swift_deallocObject();
}

unsigned char *sub_10002BD30(unsigned char *a1)
{
  return sub_1001ADD78(a1, *(unsigned char *)(v1 + 16));
}

unint64_t sub_10002BD38()
{
  unint64_t result = qword_100815680;
  if (!qword_100815680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100815680);
  }
  return result;
}

void (*sub_10002BD8C@<X0>(unsigned char *a1@<X8>))(unsigned char *, void)
{
  return sub_10002844C(*(void *)(v1 + 24), a1);
}

uint64_t sub_10002BDA8()
{
  return sub_1000291A4(*(void *)(v0 + 16));
}

uint64_t sub_10002BDB4()
{
  return sub_10002BDCC(sub_1000292F0);
}

uint64_t sub_10002BDCC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for InsightsEntriesDetailAndToolbarView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unint64_t sub_10002BE40()
{
  unint64_t result = qword_1007F96C8;
  if (!qword_1007F96C8)
  {
    sub_100014440(&qword_1007F96C0);
    sub_10002BCB4((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1007F96C8);
  }
  return result;
}

uint64_t sub_10002BEEC()
{
  uint64_t v1 = type metadata accessor for InsightsEntriesDetailAndToolbarView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v3 = type metadata accessor for DateComponents();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  sub_100010218(&qword_1007F9478);
  swift_release();
  j__swift_release();
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 24);
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for Calendar();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(v0 + v2 + *(int *)(v1 + 28)), *(unsigned char *)(v0 + v2 + *(int *)(v1 + 28) + 8));

  return swift_deallocObject();
}

uint64_t sub_10002C098(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for InsightsEntriesDetailAndToolbarView() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_10002950C(a1, v5, v6, v7, v8);
}

uint64_t sub_10002C194()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10002C28C()
{
  uint64_t v1 = type metadata accessor for InsightsEntriesDetailAndToolbarView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v3 = type metadata accessor for DateComponents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_100010218(&qword_1007F9478);
  swift_release();
  j__swift_release();
  uint64_t v4 = v2 + *(int *)(v1 + 24);
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(v2 + *(int *)(v1 + 28)), *(unsigned char *)(v2 + *(int *)(v1 + 28) + 8));

  return swift_deallocObject();
}

uint64_t sub_10002C428(uint64_t a1)
{
  return sub_100027F1C(a1);
}

uint64_t sub_10002C48C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002C4EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100010218(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002C550()
{
  return sub_100014488(&qword_1007F96E0, &qword_1007F96E8);
}

void (*sub_10002C58C@<X0>(unsigned char *a1@<X8>))(unsigned char *, void)
{
  return sub_10002BD8C(a1);
}

void sub_10002C5A4()
{
  qword_10083CDA8 = 0x4059000000000000;
}

void sub_10002C5B4()
{
  qword_10083CDB0 = 0x4052000000000000;
}

id sub_10002C5EC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurGradientLayer;
  id v10 = objc_allocWithZone((Class)CAGradientLayer);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurEffectView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_floatingButtons;
  type metadata accessor for ComposeButton();
  *(void *)&v11[v13] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)type metadata accessor for VariableBlurView()) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal18ComposeButtonsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for ComposeButtonsView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_10002C7FC();

  return v15;
}

void sub_10002C7FC()
{
  uint64_t v1 = v0;
  if (qword_1007F68B0 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_10083CDA8;
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 heightAnchor];
  id v4 = [v3 constraintEqualToConstant:v2];

  [v4 setActive:1];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurView];
  [v1 addSubview:v5];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  sub_10002CA34();
  [v1 setAccessibilityContainerType:4];
  [v5 setHidden:UIAccessibilityIsReduceTransparencyEnabled()];
  id v6 = [self defaultCenter];
  [v6 addObserver:v1 selector:"updateTransparencyEffects" name:UIAccessibilityReduceTransparencyStatusDidChangeNotification object:0];
}

uint64_t sub_10002CA34()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC7Journal18ComposeButtonsView_floatingButtons];
  [v0 addSubview:v1];
  id v2 = [v1 superview];
  if (v2)
  {
    id v3 = v2;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = [v1 centerXAnchor];
    id v5 = [v3 centerXAnchor];
    id v6 = [v4 constraintEqualToAnchor:v5];

    [v6 setConstant:0.0];
    if (v6)
    {
      id v7 = v6;
      [v7 setActive:1];
    }
  }
  id v8 = [v1 superview];
  if (v8)
  {
    uint64_t v9 = v8;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v1 topAnchor];
    id v11 = [v9 topAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:0.0];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
  }
  if (qword_1007F68B8 != -1) {
    swift_once();
  }
  double v14 = *(double *)&qword_10083CDB0;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v15 = [v1 widthAnchor];
  id v16 = [v15 constraintEqualToConstant:v14];

  [v16 setActive:1];
  double v17 = *(double *)&qword_10083CDB0;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v18 = [v1 heightAnchor];
  id v19 = [v18 constraintEqualToConstant:v17];

  [v19 setActive:1];
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = (void (**)())&v1[OBJC_IVAR____TtC7JournalP33_08145CDDEA6A92DF1A40BD81AC9894B713ComposeButton_buttonTapped];
  *uint64_t v21 = sub_10002D7B0;
  v21[1] = (void (*)())v20;

  return swift_release();
}

void sub_10002CD74()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_1002573B0();
      swift_unknownObjectRelease();
    }
  }
}

id sub_10002CE4C(uint64_t a1)
{
  return sub_10002D5B8(a1, type metadata accessor for ComposeButtonsView);
}

uint64_t type metadata accessor for ComposeButtonsView()
{
  return self;
}

uint64_t sub_10002D04C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007F9770);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UIButton.Configuration();
  uint64_t v13 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.Size.large(_:), v9);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
  UIButton.Configuration.cornerStyle.setter();
  if (qword_1007F71A0 != -1) {
    swift_once();
  }
  id v16 = (id)qword_10083D768;
  UIButton.Configuration.baseBackgroundColor.setter();
  if (qword_1007F71A8 != -1) {
    swift_once();
  }
  id v17 = (id)qword_10083D770;
  UIButton.Configuration.baseForegroundColor.setter();
  id v18 = [self configurationWithPointSize:7 weight:20.0];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [self systemImageNamed:v19 withConfiguration:v18];

  UIButton.Configuration.image.setter();
  if (qword_1007F7A08 != -1) {
    swift_once();
  }
  NSString v21 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityLabel:v21];

  uint64_t v22 = v26;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v4, v15, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v22);
  UIButton.configuration.setter();
  sub_10002D628();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v1 addAction:v23 forControlEvents:64];

  sub_1005414B4(v1);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v22);
}

uint64_t sub_10002D51C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void (**)(void))(result
                          + OBJC_IVAR____TtC7JournalP33_08145CDDEA6A92DF1A40BD81AC9894B713ComposeButton_buttonTapped);
    swift_retain();

    v2();
    return swift_release();
  }
  return result;
}

id sub_10002D59C()
{
  return sub_10002D5B8(0, type metadata accessor for ComposeButton);
}

id sub_10002D5B8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for ComposeButton()
{
  return self;
}

unint64_t sub_10002D628()
{
  unint64_t result = qword_1007FA1B0;
  if (!qword_1007FA1B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007FA1B0);
  }
  return result;
}

uint64_t sub_10002D668()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10002D6A0()
{
  return sub_10002D51C();
}

void sub_10002D6A8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurGradientLayer;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurEffectView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v3 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_floatingButtons;
  type metadata accessor for ComposeButton();
  *(void *)&v0[v3] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal18ComposeButtonsView_blurView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)type metadata accessor for VariableBlurView()) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal18ComposeButtonsView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10002D7B0()
{
}

uint64_t initializeBufferWithCopyOfBuffer for ScheduledReminder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ScheduledReminder()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ScheduledReminder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ScheduledReminder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledReminder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledReminder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledReminder()
{
  return &type metadata for ScheduledReminder;
}

uint64_t sub_10002D92C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a3;
  uint64_t v6 = sub_100010218(&qword_1007F9798);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10002E100();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_100010218(&qword_1007F9788);
  sub_10002E154(&qword_1007F97A0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v3)
  {
    char v13 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

BOOL sub_10002DB08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10002DB1C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10002DB64()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10002DB90()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10002DBD4()
{
  uint64_t v1 = 1920298856;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574756E696DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737961646B656577;
  }
}

uint64_t sub_10002DC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002DD20(a1, a2);
  *a3 = result;
  return result;
}

void sub_10002DC4C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10002DC58(uint64_t a1)
{
  unint64_t v2 = sub_10002E100();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002DC94(uint64_t a1)
{
  unint64_t v2 = sub_10002E100();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002DCD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10002DE60(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10002DD00(void *a1)
{
  return sub_10002D92C(a1, *v1, v1[1]);
}

uint64_t sub_10002DD20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737961646B656577 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1920298856 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574756E696DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_10002DE60(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007F9778);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10002E0BC(a1, v7);
  sub_10002E100();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100010218(&qword_1007F9788);
    v9[7] = 0;
    sub_10002E154(&qword_1007F9790);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    v9[5] = 2;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_10002E0BC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10002E100()
{
  unint64_t result = qword_1007F9780;
  if (!qword_1007F9780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9780);
  }
  return result;
}

uint64_t sub_10002E154(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(&qword_1007F9788);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for AssetSizeType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RecordingState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScheduledReminder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002E320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10002E348(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10002E350(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledReminder.CodingKeys()
{
  return &type metadata for ScheduledReminder.CodingKeys;
}

unint64_t sub_10002E36C()
{
  unint64_t result = qword_1007F97A8;
  if (!qword_1007F97A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F97A8);
  }
  return result;
}

unint64_t sub_10002E3C4()
{
  unint64_t result = qword_1007F97B0;
  if (!qword_1007F97B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F97B0);
  }
  return result;
}

unint64_t sub_10002E41C()
{
  unint64_t result = qword_1007F97B8;
  if (!qword_1007F97B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F97B8);
  }
  return result;
}

uint64_t _s13MOMapLocationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s13MOMapLocationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  int v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13MOMapLocationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13MOMapLocationVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13MOMapLocationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13MOMapLocationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13MOMapLocationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13MOMapLocationVMa()
{
  return &_s13MOMapLocationVN;
}

uint64_t sub_10002E788()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007F97C0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007F97C0);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_10002E850(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002E984(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1007F99E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_1000353E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    LOBYTE(v14) = 1;
    type metadata accessor for Date();
    sub_10003374C(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v14) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_10003374C(&qword_1007F99F8, type metadata accessor for CGSize);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v14) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10002ECF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100010218(&qword_1007F99D0);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_10002E0BC(a1, a1[3]);
  sub_1000353E4();
  uint64_t v44 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v11[1] = v17;
  type metadata accessor for Date();
  LOBYTE(v46) = 1;
  sub_10003374C(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  id v18 = (int *)v45;
  sub_10002C4EC(v13, (uint64_t)v11 + *(int *)(v45 + 20), (uint64_t *)&unk_1007FC470);
  LOBYTE(v46) = 2;
  uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v20 = (uint64_t *)((char *)v11 + v18[6]);
  *id v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v23 = (char *)v11 + v18[7];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v26 = (char *)v11 + v18[8];
  *(void *)uint64_t v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_10003374C(&qword_1007F99E0, type metadata accessor for CGSize);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  uint64_t *v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  uint64_t *v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  uint64_t v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *uint64_t v40 = v37;
  v40[1] = v39;
  sub_100035998((uint64_t)v11, v15, _s14LivePhotoAssetC13LivePhotoDataVMa);
  _s7Journal19DynamicWaveformViewVwxx_0(v12);
  return sub_100035A00((uint64_t)v11, _s14LivePhotoAssetC13LivePhotoDataVMa);
}

unint64_t sub_10002F330()
{
  return sub_10002E850(*v0);
}

uint64_t sub_10002F338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100033A58(a1, a2);
  *a3 = result;
  return result;
}

void sub_10002F360(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_10002F36C(uint64_t a1)
{
  unint64_t v2 = sub_1000353E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002F3A8(uint64_t a1)
{
  unint64_t v2 = sub_1000353E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002F3E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002ECF0(a1, a2);
}

uint64_t sub_10002F3FC(void *a1)
{
  return sub_10002E984(a1);
}

uint64_t sub_10002F414(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10002F44C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10002F484(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10002F4BC()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100033794(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_livePhotoAttachments) = v2;

  return swift_release();
}

uint64_t sub_10002F528()
{
  swift_release();

  return swift_release();
}

id sub_10002F568()
{
  if ((v0[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_pendingLivePhotoRequest + 4] & 1) == 0)
  {
    unint64_t v1 = (unsigned int *)&v0[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
    [self cancelLivePhotoRequestWithRequestID:*v1];
  }
  v3.receiver = v0;
  v3.super_class = (Class)_s14LivePhotoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10002F6BC()
{
  return _s14LivePhotoAssetCMa(0);
}

uint64_t _s14LivePhotoAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1007F9808);
}

uint64_t sub_10002F6E4()
{
  return swift_updateClassMetadata2();
}

double *sub_10002F734()
{
  if (*(void *)(v0 + 24))
  {
    unint64_t v1 = *(double **)(v0 + 24);
  }
  else
  {
    unint64_t v1 = sub_100030D68(v0);
    *(void *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10002F794(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (!a1)
  {
    if (qword_1007F68C0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100026A54(v8, (uint64_t)qword_1007F97C0);
    id v9 = a3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v10 = v9;
    char v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138413058;
      os_log_type_t type = v12;
      id v14 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v25 = v10;

      *(_WORD *)(v13 + 12) = 2080;
      type metadata accessor for UUID();
      sub_10003374C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v15, v16, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v17 = Dictionary.description.getter();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_10011EA98(v17, v19, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 32) = 2080;
      type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v20 = Array.description.getter();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      sub_10011EA98(v20, v22, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, type, "%@[%s].getLivePhoto failed to generate PHLivePhoto - info: %s componentURLs: %s", (uint8_t *)v13, 0x2Au);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return a5(a1);
}

void sub_10002FB8C(uint64_t a1, void *a2)
{
  objc_super v3 = *(void (**)(void *, uint64_t))(a1 + 32);
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v5 = a2;
  v3(a2, v4);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_10002FC30()
{
  uint64_t v1 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100804090);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_1000398E0((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100804090);
    return 0;
  }
  else
  {
    sub_100035998((uint64_t)v7, (uint64_t)v4, _s14LivePhotoAssetC13LivePhotoDataVMa);
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100804090);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_100035A00((uint64_t)v4, _s14LivePhotoAssetC13LivePhotoDataVMa);
  }
  return v8;
}

double *sub_10002FDE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v117 = (char *)v97 - v6;
  uint64_t v123 = type metadata accessor for UTType();
  uint64_t v125 = *(double **)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v102 = (char *)v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v97 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v97 - v12;
  __chkstk_darwin(v14);
  uint64_t v104 = (char *)v97 - v15;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v118 = (char *)v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v116 = (char *)v97 - v20;
  __chkstk_darwin(v21);
  double v126 = (char *)v97 - v22;
  uint64_t v23 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = [self defaultManager];
  URL._bridgeToObjectiveC()(v27);
  uint64_t v29 = v28;
  id v130 = 0;
  id v30 = [v26 contentsOfDirectoryAtURL:v28 includingPropertiesForKeys:0 options:0 error:&v130];

  id v31 = v130;
  if (v30)
  {
    long long v101 = v10;
    uint64_t v99 = v1;
    uint64_t v108 = v16;
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = v31;

    uint64_t v34 = *(void *)(v32 + 16);
    if (v34)
    {
      id v105 = v4;
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      uint64_t v35 = v17 + 16;
      uint64_t v128 = v36;
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64);
      v97[1] = v32;
      unint64_t v103 = v37;
      unint64_t v38 = v32 + v37;
      uint64_t v39 = *(void *)(v35 + 56);
      uint64_t v114 = (unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 32);
      uint64_t v121 = (void (**)(char *, char *, uint64_t))(v35 + 16);
      uint64_t v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 6);
      uint64_t v107 = (void (**)(char *, uint64_t, uint64_t))(v125 + 4);
      uint64_t v106 = (void (**)(char *, uint64_t))(v125 + 1);
      id v119 = (void (**)(char *, uint64_t))(v35 - 8);
      long long v100 = (void (**)(char *, char *, uint64_t))(v125 + 2);
      uint64_t v40 = _swiftEmptyArrayStorage;
      uint64_t v115 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 40);
      v97[0] = (v35 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      char v41 = v25;
      uint64_t v113 = v25;
      uint64_t v42 = v116;
      uint64_t v43 = v13;
      uint64_t v44 = v108;
      uint64_t v98 = v43;
      os_log_t v127 = (os_log_t)v35;
      uint64_t v112 = v39;
      v36(v41, (char *)(v32 + v37), v108);
      while (1)
      {
        uint64_t v111 = *v115;
        v111(v41, 0, 1, v44);
        if ((*v114)(v41, 1, v44) == 1) {
          goto LABEL_31;
        }
        uint64_t v124 = v34;
        uint64_t v125 = v40;
        uint64_t v50 = v126;
        unint64_t v120 = *v121;
        v120(v126, v41, v44);
        URL.pathExtension.getter();
        swift_bridgeObjectRetain();
        static UTType.data.getter();
        uint64_t v51 = (uint64_t)v117;
        UTType.init(filenameExtension:conformingTo:)();
        uint64_t v52 = v44;
        uint64_t v53 = v43;
        uint64_t v54 = v123;
        uint64_t v55 = *v122;
        if ((*v122)(v51, 1, v123) == 1)
        {
          uint64_t v56 = v53;
          sub_10001457C(v51, &qword_1007F99B8);
          swift_bridgeObjectRelease();
          v128(v42, v50, v52);
          uint64_t v57 = v119;
        }
        else
        {
          uint64_t v58 = *v107;
          id v110 = v55;
          uint64_t v59 = v52;
          uint64_t v60 = v104;
          v58(v104, v51, v54);
          static UTType.image.getter();
          int v109 = UTType.conforms(to:)();
          uint64_t v61 = *v106;
          uint64_t v56 = v53;
          (*v106)(v53, v54);
          uint64_t v42 = v116;
          v61(v60, v54);
          swift_bridgeObjectRelease();
          v128(v42, v50, v59);
          uint64_t v44 = v59;
          uint64_t v55 = v110;
          uint64_t v57 = v119;
          uint64_t v62 = v50;
          if (v109) {
            goto LABEL_15;
          }
        }
        URL.pathExtension.getter();
        swift_bridgeObjectRetain();
        uint64_t v63 = v56;
        static UTType.data.getter();
        uint64_t v64 = (uint64_t)v105;
        UTType.init(filenameExtension:conformingTo:)();
        uint64_t v65 = v42;
        uint64_t v66 = v123;
        if (v55(v64, 1, v123) == 1)
        {
          sub_10001457C(v64, &qword_1007F99B8);
          swift_bridgeObjectRelease();
          uint64_t v45 = *v57;
          uint64_t v46 = v108;
          (*v57)(v65, v108);
          uint64_t v40 = v125;
          char v47 = v126;
          uint64_t v42 = v65;
          uint64_t v43 = v63;
          uint64_t v44 = v46;
          uint64_t v48 = v124;
          char v41 = v113;
LABEL_5:
          v45(v47, v44);
          uint64_t v49 = v112;
          goto LABEL_6;
        }
        uint64_t v67 = v101;
        (*v107)(v101, v64, v66);
        static UTType.video.getter();
        char v68 = UTType.conforms(to:)();
        uint64_t v69 = *v106;
        (*v106)(v63, v66);
        uint64_t v70 = v102;
        (*v100)(v102, v67, v66);
        if (v68)
        {
          v69(v70, v66);
          v69(v67, v66);
          swift_bridgeObjectRelease();
          uint64_t v56 = v63;
          uint64_t v42 = v116;
          uint64_t v62 = v126;
          uint64_t v44 = v108;
          uint64_t v57 = v119;
LABEL_15:
          uint64_t v45 = *v57;
          (*v57)(v42, v44);
          uint64_t v40 = v125;
          goto LABEL_16;
        }
        static UTType.movie.getter();
        char v73 = UTType.conforms(to:)();
        v69(v63, v66);
        v69(v70, v66);
        v69(v67, v66);
        swift_bridgeObjectRelease();
        uint64_t v45 = *v119;
        uint64_t v42 = v116;
        uint64_t v44 = v108;
        (*v119)(v116, v108);
        uint64_t v40 = v125;
        if ((v73 & 1) == 0)
        {
          char v47 = v126;
          uint64_t v43 = v98;
          char v41 = v113;
          uint64_t v48 = v124;
          goto LABEL_5;
        }
        uint64_t v62 = v126;
        uint64_t v56 = v98;
LABEL_16:
        uint64_t v48 = v124;
        v128(v118, v62, v44);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = (double *)sub_1002A59DC(0, *((void *)v40 + 2) + 1, 1, (unint64_t)v40);
        }
        unint64_t v72 = *((void *)v40 + 2);
        unint64_t v71 = *((void *)v40 + 3);
        if (v72 >= v71 >> 1) {
          uint64_t v40 = (double *)sub_1002A59DC(v71 > 1, v72 + 1, 1, (unint64_t)v40);
        }
        *((void *)v40 + 2) = v72 + 1;
        uint64_t v49 = v112;
        v120((char *)v40 + v103 + v72 * v112, v118, v44);
        v45(v126, v44);
        uint64_t v43 = v56;
        char v41 = v113;
LABEL_6:
        v38 += v49;
        uint64_t v34 = v48 - 1;
        if (!v34)
        {
          v111(v41, 1, 1, v44);
          goto LABEL_31;
        }
        v128(v41, (char *)v38, v44);
      }
    }
    uint64_t v40 = _swiftEmptyArrayStorage;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v25, 1, 1, v108);
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v1 = v99;
  }
  else
  {
    id v74 = v130;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F68C0 != -1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    sub_100026A54(v75, (uint64_t)qword_1007F97C0);
    id v76 = v1;
    swift_errorRetain();
    id v77 = v76;
    swift_errorRetain();
    uint64_t v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = swift_slowAlloc();
      uint64_t v81 = (void *)swift_slowAlloc();
      uint64_t v128 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
      uint64_t v129 = (uint64_t)v77;
      id v130 = v128;
      *(_DWORD *)uint64_t v80 = 138412802;
      os_log_t v127 = v78;
      uint64_t v99 = v1;
      id v82 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v81 = v77;

      *(_WORD *)(v80 + 12) = 2080;
      type metadata accessor for UUID();
      sub_10003374C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v129 = sub_10011EA98(v83, v84, (uint64_t *)&v130);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 22) = 2112;
      swift_errorRetain();
      uint64_t v85 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v129 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v81[1] = v85;
      uint64_t v1 = v99;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v86 = v127;
      _os_log_impl((void *)&_mh_execute_header, v127, v79, "%@[%s] (getLivePhotoComponentURLs) directoryContents error: %@", (uint8_t *)v80, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v40 = _swiftEmptyArrayStorage;
  }
  if (*((void *)v40 + 2) <= 1uLL)
  {
    uint64_t v125 = v40;
    if (qword_1007F68C0 != -1) {
      swift_once();
    }
    uint64_t v87 = type metadata accessor for Logger();
    sub_100026A54(v87, (uint64_t)qword_1007F97C0);
    id v88 = v1;
    uint64_t v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = swift_slowAlloc();
      uint64_t v92 = (void *)swift_slowAlloc();
      id v130 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v91 = 138412546;
      uint64_t v129 = (uint64_t)v88;
      id v93 = v88;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v92 = v88;

      *(_WORD *)(v91 + 12) = 2080;
      type metadata accessor for UUID();
      sub_10003374C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v129 = sub_10011EA98(v94, v95, (uint64_t *)&v130);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v89, v90, "%@[%s] (getLivePhotoComponentURLs) unable to extract enough paths from pvt directory", (uint8_t *)v91, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return v125;
  }
  return v40;
}

double *sub_100030D68(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v2 - 8);
  v187 = &v156[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v194 = &v156[-v5];
  uint64_t v197 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  uint64_t v8 = &v156[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v156[-v10];
  __chkstk_darwin(v12);
  uint64_t v14 = &v156[-v13];
  __chkstk_darwin(v15);
  v175 = &v156[-v16];
  uint64_t v200 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v200);
  v190 = &v156[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v201 = &v156[-v19];
  __chkstk_darwin(v20);
  uint64_t v22 = &v156[-v21];
  __chkstk_darwin(v23);
  v189 = &v156[-v24];
  __chkstk_darwin(v25);
  char v27 = &v156[-v26];
  __chkstk_darwin(v28);
  v188 = &v156[-v29];
  uint64_t v30 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v30 - 8);
  v176 = &v156[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v32);
  v193 = &v156[-v33];
  __chkstk_darwin(v34);
  v169 = &v156[-v35];
  __chkstk_darwin(v36);
  v203 = &v156[-v37];
  __chkstk_darwin(v38);
  v168 = &v156[-v39];
  __chkstk_darwin(v40);
  v178 = &v156[-v41];
  uint64_t v192 = type metadata accessor for URL();
  uint64_t v42 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v164 = &v156[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v44);
  v174 = &v156[-v45];
  __chkstk_darwin(v46);
  v167 = &v156[-v47];
  __chkstk_darwin(v48);
  v199 = &v156[-v49];
  __chkstk_darwin(v50);
  v183 = &v156[-v51];
  __chkstk_darwin(v52);
  long long v162 = &v156[-v53];
  __chkstk_darwin(v54);
  v182 = &v156[-v55];
  __chkstk_darwin(v56);
  v181 = &v156[-v57];
  __chkstk_darwin(v58);
  v161 = &v156[-v59];
  __chkstk_darwin(v60);
  v180 = &v156[-v61];
  uint64_t v207 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v207);
  __chkstk_darwin(v62);
  __chkstk_darwin(v63);
  v179 = (id *)&v156[-v64];
  __chkstk_darwin(v65);
  uint64_t v67 = (id *)&v156[-v66];
  __chkstk_darwin(v68);
  char v73 = &v156[-v72];
  uint64_t v74 = *(void *)(a1 + 16);
  uint64_t v75 = *(void *)(v74 + 16);
  if (!v75) {
    return _swiftEmptyArrayStorage;
  }
  v177 = (id *)v71;
  v195 = (id *)v70;
  v170 = v27;
  v171 = v22;
  v186 = v14;
  v165 = v11;
  long long v160 = v8;
  uint64_t v76 = v74 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
  v202 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v205 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  v206 = (void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
  v185 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48);
  v173 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
  v172 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
  v184 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v42 + 16);
  v191 = (void (**)(unsigned char *, uint64_t))(v42 + 8);
  unint64_t v159 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16);
  uint64_t v77 = *(void *)(v69 + 72);
  uint64_t v163 = v74;
  swift_bridgeObjectRetain();
  v204 = _swiftEmptyArrayStorage;
  int v78 = 1;
  int v209 = 1;
  uint64_t v79 = (uint64_t)v203;
  uint64_t v80 = v192;
  uint64_t v198 = v42;
  uint64_t v196 = v77;
  while (1)
  {
    sub_100035998(v76, (uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
    if ((v209 & 1) == 0 && (v78 & 1) == 0) {
      break;
    }
    sub_100035998((uint64_t)v73, (uint64_t)v67, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);

        goto LABEL_6;
      case 2u:
        if (v209)
        {
          int v208 = v78;
          uint64_t v87 = v177;
          sub_100035998((uint64_t)v73, (uint64_t)v177, type metadata accessor for AssetAttachment.AssetType);
          uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v89 = (uint64_t)v87;
          switch(EnumCaseMultiPayload)
          {
            case 1:

              (*v202)(v79, 1, 1, v80);
              goto LABEL_64;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v126 = sub_100010218(&qword_10080B3F0);
              uint64_t v89 = (uint64_t)v177 + *(int *)(v126 + 48);
              goto LABEL_48;
            default:
LABEL_48:
              os_log_t v127 = v189;
              sub_100035318(v89, (uint64_t)v189, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              uint64_t v128 = (uint64_t)v127;
              uint64_t v129 = (uint64_t)v171;
              sub_100035998(v128, (uint64_t)v171, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                (*v206)(v79, v129, v80);
              }
              else
              {
                type metadata accessor for Journaling();
                id v130 = v169;
                sub_1005E6B0C((uint64_t)v169);
                swift_bridgeObjectRelease();
                if ((*v205)((uint64_t)v130, 1, v80) == 1)
                {
                  sub_10001457C((uint64_t)v130, (uint64_t *)&unk_100800A60);
                  uint64_t v131 = 1;
                  uint64_t v79 = (uint64_t)v203;
                  goto LABEL_63;
                }
                uint64_t v140 = v130;
                id v141 = *v206;
                id v142 = v162;
                (*v206)((uint64_t)v162, (uint64_t)v140, v80);
                uint64_t v79 = (uint64_t)v203;
                v141((uint64_t)v203, (uint64_t)v142, v80);
                uint64_t v77 = v196;
              }
              uint64_t v131 = 0;
LABEL_63:
              (*v202)(v79, v131, 1, v80);
              sub_100035A00((uint64_t)v189, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_64:
              int v78 = v208;
              if ((*v205)(v79, 1, v80) == 1)
              {
                sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
                sub_10001457C(v79, (uint64_t *)&unk_100800A60);
                int v209 = 1;
              }
              else
              {
                long long v143 = *v206;
                long long v144 = v182;
                (*v206)((uint64_t)v182, v79, v80);
                (*v184)(v183, v144, v80);
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  unint64_t v145 = (unint64_t)v204;
                }
                else {
                  unint64_t v145 = sub_1002A59DC(0, *((void *)v204 + 2) + 1, 1, (unint64_t)v204);
                }
                unint64_t v147 = *(void *)(v145 + 16);
                unint64_t v146 = *(void *)(v145 + 24);
                if (v147 >= v146 >> 1) {
                  unint64_t v145 = sub_1002A59DC(v146 > 1, v147 + 1, 1, v145);
                }
                *(void *)(v145 + 16) = v147 + 1;
                unint64_t v148 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
                v204 = (double *)v145;
                v143(v145 + v148 + *(void *)(v42 + 72) * v147, (uint64_t)v183, v80);
                (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v182, v80);
                sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
                int v209 = 0;
                uint64_t v77 = v196;
                int v78 = v208;
              }
              break;
          }
        }
        else
        {
          sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
          int v209 = 0;
        }
        goto LABEL_4;
      case 3u:
        sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
        goto LABEL_4;
      case 4u:
        int v208 = v78;
        swift_bridgeObjectRelease();
        os_log_type_t v90 = v195;
        sub_100035998((uint64_t)v73, (uint64_t)v195, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v91 = swift_getEnumCaseMultiPayload();
        uint64_t v92 = (uint64_t)v90;
        switch(v91)
        {
          case 1:
            id v93 = (unsigned char *)v79;

            uint64_t v94 = (uint64_t)v193;
            (*v202)((uint64_t)v193, 1, 1, v80);
            break;
          case 4:
            swift_bridgeObjectRelease();
            uint64_t v95 = sub_100010218(&qword_10080B3F0);
            uint64_t v92 = (uint64_t)v195 + *(int *)(v95 + 48);
            goto LABEL_22;
          default:
LABEL_22:
            uint64_t v96 = v201;
            sub_100035318(v92, (uint64_t)v201, type metadata accessor for AssetAttachment.AssetType.FilePathType);
            uint64_t v97 = (uint64_t)v96;
            uint64_t v98 = v190;
            sub_100035998(v97, (uint64_t)v190, type metadata accessor for AssetAttachment.AssetType.FilePathType);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              id v93 = (unsigned char *)v79;
              uint64_t v94 = (uint64_t)v193;
              (*v206)((uint64_t)v193, (uint64_t)v98, v80);
              uint64_t v99 = 0;
            }
            else
            {
              type metadata accessor for Journaling();
              long long v100 = v176;
              sub_1005E6B0C((uint64_t)v176);
              swift_bridgeObjectRelease();
              if ((*v205)((uint64_t)v100, 1, v80) == 1)
              {
                sub_10001457C((uint64_t)v100, (uint64_t *)&unk_100800A60);
                uint64_t v99 = 1;
                id v93 = v203;
                uint64_t v94 = (uint64_t)v193;
              }
              else
              {
                long long v101 = v100;
                uint64_t v102 = *v206;
                unint64_t v103 = v167;
                (*v206)((uint64_t)v167, (uint64_t)v101, v80);
                uint64_t v94 = (uint64_t)v193;
                v102((uint64_t)v193, (uint64_t)v103, v80);
                uint64_t v77 = v196;
                uint64_t v99 = 0;
                id v93 = v203;
              }
            }
            (*v202)(v94, v99, 1, v80);
            sub_100035A00((uint64_t)v201, type metadata accessor for AssetAttachment.AssetType.FilePathType);
            break;
        }
        int v78 = v208;
        if ((*v205)(v94, 1, v80) == 1)
        {
          sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
          sub_10001457C(v94, (uint64_t *)&unk_100800A60);
          uint64_t v79 = (uint64_t)v93;
          uint64_t v42 = v198;
          goto LABEL_80;
        }
        v166 = *v206;
        v166((uint64_t)v199, v94, v80);
        URL.pathExtension.getter();
        swift_bridgeObjectRetain();
        uint64_t v104 = v186;
        static UTType.data.getter();
        id v105 = v194;
        UTType.init(filenameExtension:conformingTo:)();
        uint64_t v106 = *v185;
        uint64_t v107 = v105;
        uint64_t v108 = v197;
        if ((*v185)(v107, 1, v197) == 1)
        {
          sub_10001457C((uint64_t)v194, &qword_1007F99B8);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v109 = v108;
          id v110 = v175;
          (*v173)(v175, v194, v109);
          static UTType.image.getter();
          LODWORD(v158) = UTType.conforms(to:)();
          uint64_t v111 = *v172;
          (*v172)(v104, v197);
          v111(v110, v197);
          uint64_t v108 = v197;
          swift_bridgeObjectRelease();
          if (v158 & v208)
          {
            uint64_t v80 = v192;
            (*v184)(v174, v199, v192);
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              uint64_t v79 = (uint64_t)v203;
              unint64_t v112 = (unint64_t)v204;
            }
            else
            {
              unint64_t v112 = sub_1002A59DC(0, *((void *)v204 + 2) + 1, 1, (unint64_t)v204);
              uint64_t v79 = (uint64_t)v203;
            }
            uint64_t v42 = v198;
            unint64_t v114 = *(void *)(v112 + 16);
            unint64_t v113 = *(void *)(v112 + 24);
            if (v114 >= v113 >> 1) {
              unint64_t v112 = sub_1002A59DC(v113 > 1, v114 + 1, 1, v112);
            }
            *(void *)(v112 + 16) = v114 + 1;
            unint64_t v115 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
            v204 = (double *)v112;
            v166(v112 + v115 + *(void *)(v42 + 72) * v114, (uint64_t)v174, v80);
            (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v199, v80);
            sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
            int v78 = 0;
            uint64_t v77 = v196;
            goto LABEL_80;
          }
        }
        URL.pathExtension.getter();
        swift_bridgeObjectRetain();
        id v116 = v186;
        static UTType.data.getter();
        uint64_t v117 = v187;
        UTType.init(filenameExtension:conformingTo:)();
        if (v106(v117, 1, v108) == 1)
        {
          sub_10001457C((uint64_t)v187, &qword_1007F99B8);
          swift_bridgeObjectRelease();
          uint64_t v80 = v192;
LABEL_78:
          (*v191)(v199, v80);
          sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
          uint64_t v79 = (uint64_t)v203;
          uint64_t v42 = v198;
          uint64_t v77 = v196;
LABEL_79:
          int v78 = v208;
          goto LABEL_80;
        }
        uint64_t v118 = v165;
        (*v173)(v165, v187, v108);
        static UTType.video.getter();
        int v157 = UTType.conforms(to:)();
        v158 = *v172;
        v158(v116, v108);
        id v119 = v160;
        (*v159)(v160, v118, v108);
        if (v157)
        {
          unint64_t v120 = v158;
          v158(v119, v108);
          v120(v165, v108);
          swift_bridgeObjectRelease();
          uint64_t v80 = v192;
        }
        else
        {
          static UTType.movie.getter();
          int v157 = UTType.conforms(to:)();
          long long v149 = v158;
          v158(v116, v108);
          v149(v119, v108);
          v149(v165, v108);
          swift_bridgeObjectRelease();
          uint64_t v80 = v192;
          if ((v157 & 1) == 0) {
            goto LABEL_78;
          }
        }
        uint64_t v79 = (uint64_t)v203;
        uint64_t v77 = v196;
        int v78 = v208;
        if (v209)
        {
          (*v184)(v164, v199, v80);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = v198;
          if (isUniquelyReferenced_nonNull_native) {
            unint64_t v151 = (unint64_t)v204;
          }
          else {
            unint64_t v151 = sub_1002A59DC(0, *((void *)v204 + 2) + 1, 1, (unint64_t)v204);
          }
          unint64_t v153 = *(void *)(v151 + 16);
          unint64_t v152 = *(void *)(v151 + 24);
          if (v153 >= v152 >> 1) {
            unint64_t v151 = sub_1002A59DC(v152 > 1, v153 + 1, 1, v151);
          }
          *(void *)(v151 + 16) = v153 + 1;
          unint64_t v154 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
          v204 = (double *)v151;
          v166(v151 + v154 + *(void *)(v42 + 72) * v153, (uint64_t)v164, v80);
          (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v199, v80);
          sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
          int v209 = 0;
          goto LABEL_79;
        }
        (*v191)(v199, v80);
        sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
        int v209 = 0;
        uint64_t v42 = v198;
LABEL_80:
        uint64_t v81 = (uint64_t)v67 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
LABEL_5:
        sub_100035A00(v81, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_6:
        v76 += v77;
        if (!--v75) {
          goto LABEL_88;
        }
        break;
      default:
        if (v78)
        {
          id v82 = v179;
          sub_100035998((uint64_t)v73, (uint64_t)v179, type metadata accessor for AssetAttachment.AssetType);
          uint64_t v83 = swift_getEnumCaseMultiPayload();
          uint64_t v84 = (uint64_t)v82;
          switch(v83)
          {
            case 1:

              uint64_t v85 = v80;
              uint64_t v86 = (uint64_t)v178;
              (*v202)((uint64_t)v178, 1, 1, v85);
              break;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v84 = (uint64_t)v82 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
              goto LABEL_43;
            default:
LABEL_43:
              uint64_t v121 = v188;
              sub_100035318(v84, (uint64_t)v188, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              uint64_t v122 = (uint64_t)v121;
              uint64_t v123 = (uint64_t)v170;
              sub_100035998(v122, (uint64_t)v170, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v85 = v80;
                uint64_t v86 = (uint64_t)v178;
                (*v206)((uint64_t)v178, v123, v85);
                uint64_t v124 = 0;
              }
              else
              {
                type metadata accessor for Journaling();
                uint64_t v125 = v168;
                sub_1005E6B0C((uint64_t)v168);
                swift_bridgeObjectRelease();
                if ((*v205)((uint64_t)v125, 1, v80) == 1)
                {
                  sub_10001457C((uint64_t)v125, (uint64_t *)&unk_100800A60);
                  uint64_t v124 = 1;
                  uint64_t v79 = (uint64_t)v203;
                  uint64_t v85 = v80;
                  uint64_t v86 = (uint64_t)v178;
                }
                else
                {
                  uint64_t v132 = *v206;
                  id v133 = v161;
                  (*v206)((uint64_t)v161, (uint64_t)v125, v80);
                  uint64_t v85 = v80;
                  uint64_t v86 = (uint64_t)v178;
                  v132((uint64_t)v178, (uint64_t)v133, v85);
                  uint64_t v77 = v196;
                  uint64_t v124 = 0;
                  uint64_t v79 = (uint64_t)v203;
                }
              }
              (*v202)(v86, v124, 1, v85);
              sub_100035A00((uint64_t)v188, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              break;
          }
          if ((*v205)(v86, 1, v85) == 1)
          {
            sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
            sub_10001457C(v86, (uint64_t *)&unk_100800A60);
            int v78 = 1;
            uint64_t v80 = v85;
            uint64_t v42 = v198;
          }
          else
          {
            uint64_t v134 = *v206;
            uint64_t v135 = v180;
            (*v206)((uint64_t)v180, v86, v85);
            (*v184)(v181, v135, v85);
            uint64_t v80 = v85;
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              uint64_t v42 = v198;
              unint64_t v136 = (unint64_t)v204;
            }
            else
            {
              unint64_t v136 = sub_1002A59DC(0, *((void *)v204 + 2) + 1, 1, (unint64_t)v204);
              uint64_t v42 = v198;
            }
            unint64_t v138 = *(void *)(v136 + 16);
            unint64_t v137 = *(void *)(v136 + 24);
            if (v138 >= v137 >> 1) {
              unint64_t v136 = sub_1002A59DC(v137 > 1, v138 + 1, 1, v136);
            }
            *(void *)(v136 + 16) = v138 + 1;
            unint64_t v139 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
            v204 = (double *)v136;
            v134(v136 + v139 + *(void *)(v42 + 72) * v138, (uint64_t)v181, v80);
            (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v180, v80);
            sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
            int v78 = 0;
            uint64_t v79 = (uint64_t)v203;
            uint64_t v77 = v196;
          }
        }
        else
        {
          sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
          int v78 = 0;
        }
LABEL_4:
        uint64_t v81 = (uint64_t)v67;
        goto LABEL_5;
    }
  }
  sub_100035A00((uint64_t)v73, type metadata accessor for AssetAttachment.AssetType);
LABEL_88:
  swift_bridgeObjectRelease();
  return v204;
}

uint64_t sub_100032764()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s14LivePhotoAssetC20LivePhotoAttachmentsCMa()
{
  return self;
}

uint64_t *sub_1000327C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    char v27 = (char *)v4 + v24;
    uint64_t v28 = (char *)a2 + v24;
    *(_OWORD *)char v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = (uint64_t *)((char *)v4 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (uint64_t *)((char *)v4 + v30);
    uint64_t v35 = (uint64_t *)((char *)a2 + v30);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[12];
    uint64_t v38 = (uint64_t *)((char *)v4 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100032A00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100032B04(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)((char *)a1 + v28);
  uint64_t v33 = (void *)((char *)a2 + v28);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100032CEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  long long v29 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  void *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100032F90(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  v13[8] = v14[8];
  *(void *)int v13 = *(void *)v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = (char *)a1 + v16;
  uint64_t v20 = (char *)a2 + v16;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  uint64_t v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *sub_10003312C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  long long v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(_OWORD *)long long v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  uint64_t v31 = (void *)((char *)a1 + v28);
  uint64_t v32 = (void *)((char *)a2 + v28);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  void *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100033378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003338C);
}

uint64_t sub_10003338C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10003344C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100033460);
}

uint64_t sub_100033460(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s14LivePhotoAssetC13LivePhotoDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1007F9918);
}

uint64_t sub_10003352C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100033564()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100033618()
{
  if (!qword_1007FAAE0)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007FAAE0);
    }
  }
}

uint64_t sub_100033670()
{
  return swift_retain();
}

uint64_t sub_100033680(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100033698()
{
  return sub_10002FC30();
}

uint64_t sub_1000336BC()
{
  return sub_10003374C(&qword_1007F9970, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_100033704()
{
  return sub_10003374C(&qword_1007F9978, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_10003374C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100033794(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - v7;
  if (a1 >> 62) {
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (!v9)
  {
LABEL_15:
    _s14LivePhotoAssetC20LivePhotoAttachmentsCMa();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
    *(void *)(result + 24) = 0;
    return result;
  }
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100095C20(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100035998(v13 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v8, type metadata accessor for AssetAttachment.AssetType);
        swift_unknownObjectRelease();
        uint64_t v20 = v10;
        unint64_t v15 = v10[2];
        unint64_t v14 = v10[3];
        if (v15 >= v14 >> 1)
        {
          sub_100095C20(v14 > 1, v15 + 1, 1);
          uint64_t v10 = v20;
        }
        v10[2] = v15 + 1;
        sub_100035318((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v15, type metadata accessor for AssetAttachment.AssetType);
      }
    }
    else
    {
      uint64_t v16 = (void *)(a1 + 32);
      do
      {
        sub_100035998(*v16 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v5, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v20 = v10;
        unint64_t v18 = v10[2];
        unint64_t v17 = v10[3];
        if (v18 >= v17 >> 1)
        {
          sub_100095C20(v17 > 1, v18 + 1, 1);
          uint64_t v10 = v20;
        }
        v10[2] = v18 + 1;
        sub_100035318((uint64_t)v5, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18, type metadata accessor for AssetAttachment.AssetType);
        ++v16;
        --v9;
      }
      while (v9);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100033A58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564497465737361 && a2 == 0xEF7265696669746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7243657261757173 && a2 == 0xEE0074636552706FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100687A10 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100687A30)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

char *sub_100033E34(int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int (*a9)(char *, uint64_t, uint64_t), unsigned __int8 a10, void (*a11)(char *, char *, uint64_t), unsigned __int8 a12, unsigned int (**a13)(uint64_t, uint64_t, uint64_t), uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v178 = a5;
  uint64_t v179 = a8;
  id v180 = a3;
  uint64_t v176 = a7;
  uint64_t v185 = a6;
  uint64_t v174 = a4;
  uint64_t v187 = a2;
  LODWORD(v216) = a1;
  uint64_t v167 = a18;
  sub_10002C4EC(a18, (uint64_t)v222, (uint64_t *)&unk_10080E010);
  double v170 = *(double *)&v222[1];
  double v171 = *(double *)v222;
  double v168 = *(double *)&v222[3];
  double v169 = *(double *)&v222[2];
  uint64_t v166 = a17;
  sub_10002C4EC(a17, (uint64_t)v221, (uint64_t *)&unk_10080E010);
  CGFloat v18 = *(double *)v221;
  CGFloat v19 = *(double *)&v221[1];
  CGFloat v20 = *(double *)&v221[2];
  CGFloat v21 = *(double *)&v221[3];
  uint64_t v165 = a16;
  sub_10002C4EC(a16, (uint64_t)v220, (uint64_t *)&unk_10080E010);
  CGFloat x = *(double *)v220;
  CGFloat y = *(double *)&v220[1];
  CGFloat width = *(double *)&v220[2];
  CGFloat height = *(double *)&v220[3];
  uint64_t v175 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v175);
  uint64_t v177 = (uint64_t)v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v27 - 8);
  uint64_t v184 = (uint64_t)v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  __chkstk_darwin(v173);
  v172 = (void *)((char *)v162 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v194 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v194);
  v193 = (char *)v162 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v31 - 8);
  v199 = (char *)v162 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  int v209 = (char *)v162 - v34;
  uint64_t v215 = type metadata accessor for UTType();
  uint64_t v213 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  uint64_t v36 = (char *)v162 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  int v208 = (char *)v162 - v38;
  __chkstk_darwin(v39);
  uint64_t v196 = (char *)v162 - v40;
  __chkstk_darwin(v41);
  v188 = (char *)v162 - v42;
  uint64_t v43 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v43 - 8);
  uint64_t v207 = (char *)v162 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)v162 - v46;
  uint64_t v217 = type metadata accessor for URL();
  uint64_t v48 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  v218 = (char *)v162 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v181 = (char *)v162 - v51;
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)v162 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v58 = (char *)v162 - v57;
  UUID.init()();
  uint64_t v59 = (char *)objc_allocWithZone((Class)_s14LivePhotoAssetCMa(0));
  *(void *)&v59[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata] = 0;
  uint64_t v60 = &v59[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
  *(_DWORD *)uint64_t v60 = 0;
  v60[4] = 1;
  *(void *)&v59[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_livePhotoAttachments] = 0;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v55, v58, v52);
  uint64_t v61 = (char *)sub_1001817C4((uint64_t)v55, 1, (char)v216);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v53 + 8);
  v190 = v58;
  uint64_t v191 = v53 + 8;
  uint64_t v195 = v52;
  v189 = v62;
  v62(v58, v52);
  uint64_t v63 = v217;
  sub_10001B220(v187, (uint64_t)v47, (uint64_t *)&unk_100800A60);
  v210 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v211 = v48 + 48;
  if (v210(v47, 1, v63) == 1)
  {
    uint64_t v64 = v61;
    sub_10001457C((uint64_t)v47, (uint64_t *)&unk_100800A60);
    uint64_t v65 = v166;
    uint64_t v66 = v184;
    goto LABEL_35;
  }
  v205 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
  uint64_t v206 = v48 + 32;
  v205(v181, v47, v63);
  uint64_t v163 = v61;
  uint64_t v67 = v61;
  uint64_t v68 = sub_10002FDE8();
  uint64_t v69 = *((void *)v68 + 2);
  uint64_t v164 = v48;
  uint64_t v192 = v67;
  v162[1] = v68;
  if (v69)
  {
    v186 = &v67[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    uint64_t v70 = v48 + 16;
    uint64_t v72 = (char *)v68 + ((*(unsigned __int8 *)(v70 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 64));
    uint64_t v203 = *(void *)(v70 + 56);
    uint64_t v73 = v213;
    v214 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48);
    uint64_t v198 = (void (**)(char *, uint64_t, uint64_t))(v213 + 32);
    v182 = (void (**)(char *, char *, uint64_t))(v213 + 16);
    v183 = v36;
    v212 = v71;
    uint64_t v213 = v70;
    v202 = (void (**)(char *, uint64_t))(v70 - 8);
    v204 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 40);
    v162[0] = (v70 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v74 = v196;
    uint64_t v75 = v207;
    uint64_t v197 = (void (**)(char *, uint64_t))(v73 + 8);
    v71(v207, v72, v63);
    while (1)
    {
      uint64_t v76 = *v204;
      (*v204)(v75, 0, 1, v63);
      if (v210(v75, 1, v63) == 1) {
        goto LABEL_25;
      }
      v201 = v76;
      os_log_t v216 = v69;
      v205(v218, v75, v63);
      URL.pathExtension.getter();
      swift_bridgeObjectRetain();
      static UTType.data.getter();
      uint64_t v77 = (uint64_t)v209;
      UTType.init(filenameExtension:conformingTo:)();
      uint64_t v78 = v215;
      uint64_t v79 = *v214;
      if ((*v214)(v77, 1, v215) == 1)
      {
        sub_10001457C(v77, &qword_1007F99B8);
        swift_bridgeObjectRelease();
        uint64_t v80 = v208;
      }
      else
      {
        uint64_t v81 = v188;
        (*v198)(v188, v77, v78);
        static UTType.image.getter();
        LODWORD(v200) = UTType.conforms(to:)();
        id v82 = *v197;
        (*v197)(v74, v78);
        v82(v81, v78);
        uint64_t v75 = v207;
        swift_bridgeObjectRelease();
        uint64_t v80 = v208;
        if (v200)
        {
          uint64_t v83 = (uint64_t)v193;
          v212(v193, v218, v217);
          type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v84 = v192;
          uint64_t v85 = v190;
          UUID.init()();
          uint64_t v86 = UUID.uuidString.getter();
          uint64_t v88 = v87;
          v189(v85, v195);
          type metadata accessor for AssetAttachment(0);
          uint64_t v89 = swift_allocObject();
          *(void *)(v89 + 16) = 0;
          sub_100035318(v83, v89 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
          os_log_type_t v90 = (uint64_t *)(v89 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
          *os_log_type_t v90 = v86;
          v90[1] = v88;
          uint64_t v91 = v186;
          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v91 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

          goto LABEL_22;
        }
      }
      URL.pathExtension.getter();
      swift_bridgeObjectRetain();
      static UTType.data.getter();
      uint64_t v92 = (uint64_t)v199;
      UTType.init(filenameExtension:conformingTo:)();
      uint64_t v93 = v215;
      if (v79(v92, 1, v215) == 1)
      {
        sub_10001457C(v92, &qword_1007F99B8);
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      uint64_t v200 = v72;
      (*v198)(v80, v92, v93);
      static UTType.video.getter();
      uint64_t v94 = v80;
      char v95 = UTType.conforms(to:)();
      uint64_t v96 = *v197;
      (*v197)(v74, v93);
      uint64_t v97 = v183;
      (*v182)(v183, v94, v93);
      if (v95)
      {
        v96(v97, v93);
        v96(v94, v93);
        swift_bridgeObjectRelease();
        uint64_t v75 = v207;
        uint64_t v72 = v200;
      }
      else
      {
        static UTType.movie.getter();
        char v98 = UTType.conforms(to:)();
        v96(v74, v93);
        v96(v97, v93);
        v96(v94, v93);
        swift_bridgeObjectRelease();
        uint64_t v75 = v207;
        uint64_t v72 = v200;
        if ((v98 & 1) == 0) {
          goto LABEL_6;
        }
      }
      uint64_t v99 = (uint64_t)v193;
      v212(v193, v218, v217);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v200 = v192;
      long long v100 = v190;
      UUID.init()();
      uint64_t v101 = UUID.uuidString.getter();
      uint64_t v103 = v102;
      v189(v100, v195);
      type metadata accessor for AssetAttachment(0);
      uint64_t v104 = swift_allocObject();
      *(void *)(v104 + 16) = 0;
      sub_100035318(v99, v104 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
      id v105 = (uint64_t *)(v104 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
      *id v105 = v101;
      v105[1] = v103;
      uint64_t v106 = v186;
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v106 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v106 & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

LABEL_22:
      uint64_t v74 = v196;
LABEL_6:
      uint64_t v63 = v217;
      (*v202)(v218, v217);
      v72 += v203;
      uint64_t v69 = (os_log_t)((char *)v216 - 1);
      if (v216 == (os_log_t)1)
      {
        v201(v75, 1, 1, v63);
        goto LABEL_25;
      }
      v212(v75, v72, v63);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v207, 1, 1, v63);
LABEL_25:
  swift_bridgeObjectRelease();
  id v107 = v192;
  uint64_t v108 = &v192[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
  swift_beginAccess();
  if (*(void *)v108 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v109 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v109 = *(void *)((*(void *)v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v110 = v164;
  uint64_t v111 = v181;
  if (v109 < 2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000352C4();
    swift_allocError();
    *unint64_t v112 = 0;
    swift_willThrow();

    sub_10001457C(v185, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v187, (uint64_t *)&unk_100800A60);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v217);
    return v163;
  }
  if (qword_1007F68C0 != -1) {
    swift_once();
  }
  uint64_t v114 = type metadata accessor for Logger();
  sub_100026A54(v114, (uint64_t)qword_1007F97C0);
  id v115 = v107;
  id v116 = Logger.logObject.getter();
  os_log_type_t v117 = static os_log_type_t.default.getter();
  int v118 = v117;
  if (os_log_type_enabled(v116, v117))
  {
    uint64_t v119 = swift_slowAlloc();
    uint64_t v120 = swift_slowAlloc();
    os_log_t v216 = v116;
    uint64_t v121 = (void *)v120;
    v214 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v120;
    v218 = (char *)swift_slowAlloc();
    uint64_t v219 = (uint64_t)v115;
    v226 = v218;
    *(_DWORD *)uint64_t v119 = 138412802;
    LODWORD(v215) = v118;
    id v122 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v121 = v115;

    *(_WORD *)(v119 + 12) = 2080;
    sub_10003374C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v123 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v219 = sub_10011EA98(v123, v124, (uint64_t *)&v226);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v119 + 22) = 2080;
    type metadata accessor for AssetAttachment(0);
    swift_bridgeObjectRetain();
    uint64_t v125 = Array.description.getter();
    unint64_t v127 = v126;
    swift_bridgeObjectRelease();
    uint64_t v219 = sub_10011EA98(v125, v127, (uint64_t *)&v226);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v128 = v216;
    _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v215, "%@[%s] init self.sourceAttachments=%s", (uint8_t *)v119, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v164 + 8))(v181, v217);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v217);
  }
  uint64_t v66 = v184;
  uint64_t v61 = v163;
  uint64_t v65 = v166;
LABEL_35:
  sub_10001B220(v185, v66, (uint64_t *)&unk_1007FC470);
  sub_10002C4EC(v165, (uint64_t)v225, (uint64_t *)&unk_10080E010);
  if (v225[32] == 1)
  {
    CGFloat x = CGRectZero.origin.x;
    CGFloat y = CGRectZero.origin.y;
    CGFloat width = CGRectZero.size.width;
    CGFloat height = CGRectZero.size.height;
  }
  v227.origin.CGFloat x = x;
  v227.origin.CGFloat y = y;
  v227.size.CGFloat width = width;
  v227.size.CGFloat height = height;
  uint64_t v129 = NSStringFromCGRect(v227);
  uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v217 = v131;
  v218 = (char *)v130;

  sub_10002C4EC(v65, (uint64_t)v224, (uint64_t *)&unk_10080E010);
  if (v224[32] == 1)
  {
    CGFloat v18 = CGRectZero.origin.x;
    CGFloat v19 = CGRectZero.origin.y;
    CGFloat v20 = CGRectZero.size.width;
    CGFloat v21 = CGRectZero.size.height;
  }
  LODWORD(v216) = a15;
  uint64_t v215 = a14;
  v214 = a13;
  LODWORD(v213) = a12;
  v212 = a11;
  LODWORD(v211) = a10;
  v210 = a9;
  v228.origin.CGFloat x = v18;
  v228.origin.CGFloat y = v19;
  v228.size.CGFloat width = v20;
  v228.size.CGFloat height = v21;
  uint64_t v132 = NSStringFromCGRect(v228);
  uint64_t v133 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v135 = v134;

  sub_10002C4EC(v167, (uint64_t)v223, (uint64_t *)&unk_10080E010);
  CGFloat v137 = v170;
  CGFloat v136 = v171;
  CGFloat v139 = v168;
  CGFloat v138 = v169;
  if (v223[32] == 1)
  {
    CGFloat v136 = CGRectZero.origin.x;
    CGFloat v137 = CGRectZero.origin.y;
    CGFloat v138 = CGRectZero.size.width;
    CGFloat v139 = CGRectZero.size.height;
  }
  uint64_t v140 = NSStringFromCGRect(*(CGRect *)&v136);
  uint64_t v141 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v143 = v142;

  sub_10001457C(v185, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v187, (uint64_t *)&unk_100800A60);
  uint64_t v144 = (uint64_t)v172;
  uint64_t v145 = v178;
  void *v172 = v174;
  *(void *)(v144 + 8) = v145;
  unint64_t v113 = v61;
  unint64_t v146 = (int *)v173;
  sub_10002C4EC(v184, v144 + *(int *)(v173 + 20), (uint64_t *)&unk_1007FC470);
  unint64_t v147 = (void *)(v144 + v146[6]);
  uint64_t v148 = v179;
  *unint64_t v147 = v176;
  v147[1] = v148;
  uint64_t v149 = v144 + v146[7];
  *(void *)uint64_t v149 = v210;
  *(unsigned char *)(v149 + 8) = v211 & 1;
  uint64_t v150 = v144 + v146[8];
  *(void *)uint64_t v150 = v212;
  *(unsigned char *)(v150 + 8) = v213 & 1;
  uint64_t v151 = v144 + v146[9];
  uint64_t v152 = v215;
  *(void *)uint64_t v151 = v214;
  *(void *)(v151 + 8) = v152;
  *(unsigned char *)(v151 + 16) = v216 & 1;
  unint64_t v153 = (char **)(v144 + v146[10]);
  uint64_t v154 = v217;
  *unint64_t v153 = v218;
  v153[1] = (char *)v154;
  uint64_t v155 = (uint64_t *)(v144 + v146[11]);
  *uint64_t v155 = v133;
  v155[1] = v135;
  uint64_t v156 = (uint64_t *)(v144 + v146[12]);
  *uint64_t v156 = v141;
  v156[1] = v143;
  uint64_t v157 = v177;
  sub_100035318(v144, v177, _s14LivePhotoAssetC13LivePhotoDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007F99C0);
  uint64_t v158 = swift_allocObject();
  uint64_t v159 = v158 + *(void *)(*(void *)v158 + 104);
  uint64_t v160 = sub_100010218((uint64_t *)&unk_100804090);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v159, 1, 1, v160);
  *(_OWORD *)(v158 + *(void *)(*(void *)v158 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v157, v158 + *(void *)(*(void *)v158 + 120), (uint64_t *)&unk_10080F2B0);
  *(void *)&v113[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata] = v158;
  swift_release();
  return v113;
}

unint64_t sub_1000352C4()
{
  unint64_t result = qword_1007F99C8;
  if (!qword_1007F99C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F99C8);
  }
  return result;
}

uint64_t sub_100035318(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100035380(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_1000353E4()
{
  unint64_t result = qword_1007F99D8;
  if (!qword_1007F99D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F99D8);
  }
  return result;
}

uint64_t sub_100035438(char *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  if (*(void *)&a1[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_livePhotoAttachments])
  {
    id v5 = a2;
    swift_retain();
    char v6 = sub_10002F734();
    swift_release();
  }
  else
  {
    id v7 = a2;
    char v6 = _swiftEmptyArrayStorage;
  }
  if (*((void *)v6 + 2) == 2)
  {
    uint64_t v8 = self;
    type metadata accessor for URL();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = a1;
    v10[3] = v6;
    v10[4] = sub_100035924;
    v10[5] = v4;
    aBlock[4] = (uint64_t)sub_100035974;
    aBlock[5] = (uint64_t)v10;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002FB8C;
    aBlock[3] = (uint64_t)&unk_100796CD0;
    uint64_t v11 = _Block_copy(aBlock);
    uint64_t v12 = a1;
    swift_retain();
    swift_release();
    LODWORD(v8) = [v8 requestLivePhotoWithResourceFileURLs:isa placeholderImage:0 targetSize:0 contentMode:0.0 resultHandler:0.0];
    _Block_release(v11);

    uint64_t v13 = &v12[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
    *(_DWORD *)uint64_t v13 = v8;
    v13[4] = 0;
  }
  else
  {
    if (qword_1007F68C0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100026A54(v14, (uint64_t)qword_1007F97C0);
    unint64_t v15 = a1;
    swift_bridgeObjectRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      log = v16;
      CGFloat v19 = (void *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138412802;
      uint64_t v29 = (uint64_t)v15;
      CGFloat v20 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *CGFloat v19 = v15;

      *(_WORD *)(v18 + 12) = 2080;
      type metadata accessor for UUID();
      sub_10003374C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v29 = sub_10011EA98(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v23 = Array.description.getter();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_10011EA98(v23, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v17, "%@[%s].getLivePhoto not enough components to build PHLivePhoto: %s", (uint8_t *)v18, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10050D878(0, (uint64_t)a2);
  }
  return swift_release();
}

uint64_t sub_1000358EC()
{
  return swift_deallocObject();
}

uint64_t sub_100035924(void *a1)
{
  return sub_10050D878(a1, *(void *)(v1 + 16));
}

uint64_t sub_10003592C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100035974(uint64_t a1, uint64_t a2)
{
  return sub_10002F794(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32));
}

uint64_t sub_100035980(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100035990()
{
  return swift_release();
}

uint64_t sub_100035998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100035A00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100035BBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOMa()
{
  return &_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysON;
}

unint64_t sub_100035BF8()
{
  unint64_t result = qword_1007F9A00;
  if (!qword_1007F9A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9A00);
  }
  return result;
}

unint64_t sub_100035C50()
{
  unint64_t result = qword_1007F9A08;
  if (!qword_1007F9A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9A08);
  }
  return result;
}

unint64_t sub_100035CA8()
{
  unint64_t result = qword_1007F9A10;
  if (!qword_1007F9A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9A10);
  }
  return result;
}

void sub_100035CFC()
{
  sub_100035D54();
}

void sub_100035D54()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 fetchRequest];
    id v4 = sub_100036624();
    [v3 setPredicate:v4];

    id v7 = 0;
    if ([v2 performFetch:&v7])
    {
      id v5 = v7;
    }
    else
    {
      id v6 = v7;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  else
  {
    sub_100036B8C();
  }
}

uint64_t sub_100035E94()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = (char *)[v2 sections];
  if (!v3)
  {

    return (uint64_t)v3;
  }
  sub_100010218(&qword_1007F9BD0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_17:
    id v3 = 0;
LABEL_18:

    swift_bridgeObjectRelease_n();
    return (uint64_t)v3;
  }
  while (v5 >= 1)
  {
    uint64_t v7 = 0;
    id v3 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        int v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        int v8 = *(void **)(v4 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v9 = (char *)[v8 numberOfObjects];
      swift_unknownObjectRelease();
      BOOL v10 = __OFADD__(v3, v9);
      id v3 = &v9[(void)v3];
      if (v10) {
        break;
      }
      if (v5 == ++v7) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100036004()
{
  uint64_t v1 = v0;
  unint64_t v2 = v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_logger;
  if (qword_1007F7DC0 != -1) {
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v3 = type metadata accessor for Logger();
    uint64_t v4 = sub_100026A54(v3, (uint64_t)qword_10083ED40);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v2, v4, v3);
    *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController) = 0;
    *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_currentFilters) = 0;
    uint64_t v5 = OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_sortOrder;
    if (qword_1007F6CD8 != -1) {
      swift_once();
    }
    swift_retain();
    AppStorage.wrappedValue.getter();
    swift_release();
    *(unsigned char *)(v1 + v5) = v27;
    *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_assetIDs) = 0;
    uint64_t v6 = v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_dateInterval;
    uint64_t v7 = type metadata accessor for DateInterval();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    int v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      BOOL v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "EntryListViewModel init", v10, 2u);
      swift_slowDealloc();
    }

    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
    *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context) = v11;
    id v12 = v11;
    sub_100036B8C();
    uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
    if (!v13) {
      return v1;
    }
    id v14 = v13;
    id v15 = [v14 sections];
    if (!v15) {
      goto LABEL_24;
    }
    uint64_t v16 = v15;
    sub_100010218(&qword_1007F9BD0);
    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v17 = result;
      if (!result)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        unint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 134217984;
          swift_beginAccess();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "EntryListViewModel - initial entry count (including tips): %ld", v26, 0xCu);
          swift_slowDealloc();
        }

        return v1;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v17) {
        goto LABEL_23;
      }
    }
    if (v17 < 1) {
      break;
    }
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v21 = *(void **)(v2 + 8 * v19 + 32);
        swift_unknownObjectRetain();
      }
      id v22 = [v21 numberOfObjects];
      swift_unknownObjectRelease();
      BOOL v23 = __OFADD__(v20, v22);
      v20 += (uint64_t)v22;
      if (v23) {
        break;
      }
      if (v17 == ++v19) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_once();
  }
  __break(1u);
  return result;
}

id sub_10003646C()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithEntityName:v1];

  [v2 setFetchBatchSize:20];
  [v2 setReturnsObjectsAsFaults:0];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 setRelationshipKeyPathsForPrefetching:isa];

  id v4 = sub_100036624();
  [v2 setPredicate:v4];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6D00;
  sub_10001B284(0, (unint64_t *)&qword_10080F990);
  swift_getKeyPath();
  *(void *)(v5 + 32) = NSSortDescriptor.init<A, B>(keyPath:ascending:)();
  specialized Array._endMutation()();
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setSortDescriptors:v6];

  return v2;
}

id sub_100036624()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = sub_100010218(&qword_1007F9BE8);
  __chkstk_darwin(v8 - 8);
  BOOL v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DateInterval();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
  if (qword_1007F7080 != -1) {
    swift_once();
  }
  id v15 = (id)static NSPredicate.validEntries;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_assetIDs);
  if (v16)
  {
    sub_10001B284(0, (unint64_t *)&qword_100800A30);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1006D6280;
    *(void *)(v17 + 56) = sub_100010218(&qword_1007F9C00);
    *(void *)(v17 + 64) = sub_100038A50();
    *(void *)(v17 + 32) = v16;
    swift_bridgeObjectRetain();
    NSPredicate.init(format:_:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v18 = v1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_dateInterval;
  swift_beginAccess();
  sub_100038980(v18, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001457C((uint64_t)v10, &qword_1007F9BE8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    uint64_t v29 = sub_10001B284(0, (unint64_t *)&qword_100800A30);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1006D6270;
    uint64_t v30 = v11;
    DateInterval.start.getter();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    uint64_t v21 = v32;
    id v22 = *(void (**)(char *, uint64_t))(v31 + 8);
    v22(v7, v32);
    uint64_t v23 = sub_10001B284(0, &qword_1007F9BF0);
    *(void *)(v19 + 56) = v23;
    unint64_t v24 = sub_1000389E8();
    *(void *)(v19 + 64) = v24;
    *(void *)(v19 + 32) = isa;
    DateInterval.end.getter();
    Class v25 = Date._bridgeToObjectiveC()().super.isa;
    v22(v4, v21);
    *(void *)(v19 + 96) = v23;
    *(void *)(v19 + 104) = v24;
    *(void *)(v19 + 72) = v25;
    NSPredicate.init(format:_:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  }
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  Class v26 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [self andPredicateWithSubpredicates:v26];

  return v27;
}

void sub_100036B8C()
{
  id v1 = sub_10003646C();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  id v3 = objc_allocWithZone((Class)NSFetchedResultsController);
  id v4 = v2;
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithFetchRequest:v1 managedObjectContext:v4 sectionNameKeyPath:v5 cacheName:0];

  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController) = v6;
}

id sub_100036C8C()
{
  id v1 = sub_10003646C();
  id v2 = [objc_allocWithZone((Class)NSFetchedResultsController) initWithFetchRequest:v1 managedObjectContext:*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context) sectionNameKeyPath:0 cacheName:0];

  uint64_t v3 = OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController) = v2;

  id result = *(id *)(v0 + v3);
  if (result)
  {
    id v6 = [result fetchRequest];
    [v6 setPredicate:0];

    id result = *(id *)(v0 + v3);
    if (result)
    {
      id v10 = 0;
      unsigned int v7 = [result performFetch:&v10];
      id v8 = v10;
      if (v7)
      {
        return v8;
      }
      else
      {
        id v9 = v10;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        return (id)swift_errorRelease();
      }
    }
  }
  return result;
}

uint64_t sub_100036E00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Journaling.EntrySource();
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038878(a1, (uint64_t)v9);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v10 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  UUID.init()();
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  id v12 = sub_100190624((uint64_t)v9, (uint64_t)v10, (uint64_t)v6);
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  uint64_t v13 = sub_10057F170(v12, 1, 1, v10);
  sub_10001457C((uint64_t)v6, &qword_100800950);
  uint64_t result = sub_1000388DC((uint64_t)v9);
  *a2 = v13;
  return result;
}

id sub_100036FD8(int a1, id a2)
{
  return [a2 setIsRemovedFromCloud:1];
}

uint64_t sub_100036FEC()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithEntityName:v1];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6D10;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  *(void *)(v3 + 32) = NSPredicate.init(format:_:)();
  *(void *)(v3 + 40) = NSPredicate.init(format:_:)();
  unsigned __int8 v7 = v3;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [self andPredicateWithSubpredicates:isa];

  [v2 setPredicate:v5];
  NSManagedObjectContext.performAndWait<A>(_:)();

  return v7;
}

uint64_t sub_1000371C8()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithEntityName:v1];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6D10;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  *(void *)(v3 + 32) = NSPredicate.init(format:_:)();
  if (qword_1007F7080 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.validEntries;
  *(void *)(v3 + 40) = static NSPredicate.validEntries;
  unsigned __int8 v10 = v3;
  specialized Array._endMutation()();
  id v5 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [self andPredicateWithSubpredicates:isa];

  [v2 setPredicate:v7];
  __chkstk_darwin(v8);
  NSManagedObjectContext.performAndWait<A>(_:)();

  return v10;
}

void sub_1000373DC(BOOL *a1@<X8>)
{
}

void sub_1000373FC(const char *a1@<X2>, BOOL *a2@<X8>)
{
  type metadata accessor for JournalEntryMO();
  uint64_t v5 = NSManagedObjectContext.count<A>(for:)();
  if (v2)
  {
    swift_errorRetain();
    swift_errorRetain();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      id v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      swift_errorRetain();
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v9 = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, a1, v8, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    BOOL v10 = 0;
  }
  else
  {
    BOOL v10 = v5 > 0;
  }
  *a2 = v10;
}

uint64_t sub_1000375E0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001457C(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_dateInterval, &qword_1007F9BE8);

  return swift_deallocClassInstance();
}

uint64_t sub_1000376D8()
{
  return _s18EntryListViewModelCMa();
}

uint64_t _s18EntryListViewModelCMa()
{
  uint64_t result = qword_1007F9A48;
  if (!qword_1007F9A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003772C()
{
  type metadata accessor for Logger();
  if (v0 <= 0x3F)
  {
    sub_10003781C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10003781C()
{
  if (!qword_1007F9A58)
  {
    type metadata accessor for DateInterval();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007F9A58);
    }
  }
}

uint64_t sub_100037874()
{
  v1[4] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_100037934, 0, 0);
}

uint64_t sub_100037934()
{
  id v1 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v2 = String._bridgeToObjectiveC()();
  id v40 = [v1 initWithEntityName:v2];
  v0[8] = v40;

  v0[2] = _swiftEmptyArrayStorage;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6D20;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6280;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_10001B2C0();
  *(void *)(v4 + 32) = 0x737465737361;
  *(void *)(v4 + 40) = 0xE600000000000000;
  *(void *)(v3 + 32) = NSPredicate.init(format:_:)();
  if (qword_1007F7060 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)static NSPredicate.hasNonEmptyText;
  *(void *)(v3 + 40) = static NSPredicate.hasNonEmptyText;
  uint64_t v6 = qword_1007F7068;
  id v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)static NSPredicate.hasNonEmptyTitle;
  *(void *)(v3 + 48) = static NSPredicate.hasNonEmptyTitle;
  specialized Array._endMutation()();
  id v9 = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v11 = self;
  id v12 = [v11 orPredicateWithSubpredicates:isa];
  v0[9] = v12;

  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D6D30;
  *(void *)(v13 + 32) = v12;
  uint64_t v14 = qword_1007F7020;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v13 + 40) = static NSPredicate.notRemovedFromCloud;
  uint64_t v17 = qword_1007F7038;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)static NSPredicate.entryDateNotNil;
  *(void *)(v13 + 48) = static NSPredicate.entryDateNotNil;
  uint64_t v20 = qword_1007F7050;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  id v22 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v13 + 56) = static NSPredicate.isNotTipEntry;
  specialized Array._endMutation()();
  id v23 = v22;
  Class v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [v11 andPredicateWithSubpredicates:v24];
  v0[10] = v25;

  id v26 = v25;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (qword_1007F7040 != -1) {
    swift_once();
  }
  id v27 = (id)static NSPredicate.isDraftEntry;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v28 = v0[6];
  uint64_t v29 = v0[7];
  uint64_t v30 = v0[4];
  uint64_t v31 = v0[5];
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v33 = [v11 andPredicateWithSubpredicates:v32];

  [v40 setPredicate:v33];
  uint64_t v34 = swift_allocObject();
  v0[11] = v34;
  *(void *)(v34 + 16) = v30;
  *(void *)(v34 + 24) = v40;
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v29, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v31);
  swift_retain();
  id v35 = v40;
  uint64_t v36 = (void *)swift_task_alloc();
  v0[12] = v36;
  uint64_t v37 = sub_100010218(&qword_1007F9BE0);
  *uint64_t v36 = v0;
  v36[1] = sub_100037F2C;
  uint64_t v38 = v0[7];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 3, v38, sub_10003885C, v34, v37);
}

uint64_t sub_100037F2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000380C4, 0, 0);
}

uint64_t sub_1000380C4()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 64);

  uint64_t v3 = *(void *)(v0 + 24);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

void sub_100038148(uint64_t *a1@<X8>)
{
  type metadata accessor for JournalEntryMO();
  unint64_t v3 = NSManagedObjectContext.fetch<A>(_:)();
  if (v1)
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      id v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v7 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "(getDraftEntry) error fetching draft entries: %@", v6, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v13 = 0;
    goto LABEL_22;
  }
  unint64_t v8 = v3;
  unint64_t v9 = v3 >> 62;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 < 2) {
      goto LABEL_12;
    }
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
  {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  BOOL v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v12 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "(getDraftEntry) Found multiple draft entries (%ld), using first one", v12, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

LABEL_12:
  if (!v9)
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
LABEL_22:
    *a1 = v13;
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_21;
  }
LABEL_14:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_17;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v14 = *(id *)(v8 + 32);
LABEL_17:
    id v15 = v14;
    swift_bridgeObjectRelease();
    id v16 = [v15 managedObjectContext];
    if (!v16) {
      id v16 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
    }
    type metadata accessor for Journaling.EntryViewModel();
    swift_allocObject();
    uint64_t v13 = sub_10057F170(v15, 0, 0, v16);
    goto LABEL_22;
  }
  __break(1u);
}

id sub_10003852C(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  sub_10003859C(a3);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_10003859C(SEL *a1)
{
  unint64_t v3 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  BOOL v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = __chkstk_darwin(v11).n128_u64[0];
  id v14 = (char *)&v24 - v13;
  if (objc_msgSend(v3, "isTip", v12)) {
    return 32;
  }
  id v15 = [v3 *a1];
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_9;
  }
  id v16 = v15;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_9:
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_1007FC470);
    return 32;
  }
  v17(v14, v6, v7);
  Date.init()();
  uint64_t v18 = sub_1002A8F8C((uint64_t)v10);
  uint64_t v20 = v19;
  id v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v10, v7);
  if (v20) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = 32;
  }
  v21(v14, v7);
  return v22;
}

uint64_t sub_10003881C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10003885C(uint64_t *a1@<X8>)
{
}

uint64_t sub_100038878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Journaling.EntrySource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000388DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Journaling.EntrySource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100038938(BOOL *a1@<X8>)
{
}

void sub_10003895C(BOOL *a1@<X8>)
{
}

uint64_t sub_100038980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000389E8()
{
  unint64_t result = qword_1007F9BF8;
  if (!qword_1007F9BF8)
  {
    sub_10001B284(255, &qword_1007F9BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9BF8);
  }
  return result;
}

unint64_t sub_100038A50()
{
  unint64_t result = qword_1007F9C08;
  if (!qword_1007F9C08)
  {
    sub_100014440(&qword_1007F9C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9C08);
  }
  return result;
}

const char *sub_100038AAC()
{
  return "momentDateForSorting";
}

const char *sub_100038AC0()
{
  return "entryDate";
}

uint64_t sub_100038AD4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007F9C10);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007F9C10);
  if (qword_1007F7DA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ECF8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t Journaling.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CanvasGridManager()
{
  return self;
}

BOOL sub_100038BD0(uint64_t a1)
{
  double v1 = (double)a1;
  if (qword_1007F68C8 != -1) {
    swift_once();
  }
  double v2 = v1 * 0.000000953674316;
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007F9C10);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "(isMaxMegabytesReached) entryInMegabytes: %f", v6, 0xCu);
    swift_slowDealloc();
  }

  return v2 >= 500.0;
}

uint64_t sub_100038D04(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v8 = [self mainScreen];
  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v23.origin.CGFloat x = v10;
  v23.origin.CGFloat y = v12;
  v23.size.CGFloat width = v14;
  v23.size.CGFloat height = v16;
  double Width = CGRectGetWidth(v23);
  if (qword_1007F7390 != -1) {
    swift_once();
  }
  double v18 = Width - (*(double *)&qword_10083D9A0 + *(double *)&qword_10083D9A0);
  if (qword_1007F7388 != -1) {
    swift_once();
  }
  double v19 = v18 - (*(double *)&qword_10083D998 + *(double *)&qword_10083D998);
  v24.origin.CGFloat x = a1;
  v24.origin.CGFloat y = a2;
  v24.size.CGFloat width = a3;
  v24.size.CGFloat height = a4;
  double v20 = CGRectGetWidth(v24);
  if (v19 * 0.5 >= v20)
  {
    if (v20 >= v19 * 0.5) {
      return 4;
    }
    double v22 = v19 * 0.25;
    if (v22 >= v20)
    {
      return 4;
    }
    else
    {
      v26.origin.CGFloat x = a1;
      v26.origin.CGFloat y = a2;
      v26.size.CGFloat width = a3;
      v26.size.CGFloat height = a4;
      if (CGRectGetHeight(v26) >= v22) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
  else
  {
    v25.origin.CGFloat x = a1;
    v25.origin.CGFloat y = a2;
    v25.size.CGFloat width = a3;
    v25.size.CGFloat height = a4;
    if (v20 == CGRectGetHeight(v25))
    {
      return 5;
    }
    else
    {
      v27.origin.CGFloat x = a1;
      v27.origin.CGFloat y = a2;
      v27.size.CGFloat width = a3;
      v27.size.CGFloat height = a4;
      return v19 * 0.25 >= CGRectGetHeight(v27);
    }
  }
}

void sub_100038EE4(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    unint64_t v3 = a2 >> 62;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v4) {
        return;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v4) {
        return;
      }
    }
    if (qword_1007F7398 != -1) {
      swift_once();
    }
    if (v4 == 1)
    {
      if (v3)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v5)
        {
LABEL_9:
          if ((a2 & 0xC000000000000001) != 0)
          {
            uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            uint64_t v6 = *(id *)(a2 + 32);
          }
          uint64_t v7 = v6;
          uint64_t v8 = swift_bridgeObjectRelease();
          unsigned int v9 = *((unsigned __int8 *)v7 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type);
          if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x200))(v8))
          {
          }
          else if (v9 > 9 || v9 == 6)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
          }
          return;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_100039114()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1;
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    unint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    if (*(unsigned char *)(v0 + 89))
    {
      char v5 = *(unsigned char *)(v0 + 88) & 1;
      uint64_t v6 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      uint64_t v14 = 2;
    }
    else
    {
      unsigned int v15 = *(unsigned __int8 *)(v0 + 88);
      sub_100040D64(*(void *)(v0 + 64), *(void *)(v0 + 72));
      uint64_t v7 = sub_10003FBA4();
      uint64_t v12 = v8;
      uint64_t v13 = v7;
      uint64_t v6 = v9;
      char v5 = v10;
      sub_100040E58(v2, v3, v4, v15, 0);
      uint64_t v14 = *(void *)(v0 + 16);
      uint64_t v4 = v12;
      uint64_t v2 = v13;
    }
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v6;
    *(void *)(v0 + 32) = v4;
    *(unsigned char *)(v0 + 40) = v5;
    sub_100040E28(v2);
    sub_100040E38(v14);
  }
  sub_100040E48(v1);
  return v2;
}

uint64_t sub_100039278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9D70);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9D78);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9D78);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100807640);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, (uint64_t *)&unk_100807640);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9D78);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9D70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s16StateOfMindAssetC15StateOfMindDataVMa);
    uint64_t v15 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s16StateOfMindAssetC15StateOfMindDataVMa, &qword_1007F9D80, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v9, (uint64_t *)&unk_100807640);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v9, v12, &qword_1007F9D78);
  return swift_endAccess();
}

uint64_t sub_1000395AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9DF0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9DF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100804080);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, (uint64_t *)&unk_100804080);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9DF0);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, (uint64_t *)&unk_10080F2C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s10PhotoAssetC9PhotoDataVMa);
    uint64_t v15 = _s10PhotoAssetC9PhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s10PhotoAssetC9PhotoDataVMa, &qword_1007F9DF8, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v9, (uint64_t *)&unk_100804080);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v9, v12, &qword_1007F9DF0);
  return swift_endAccess();
}

uint64_t sub_1000398E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9E00);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9E00);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100804090);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, (uint64_t *)&unk_100804090);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9E00);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, (uint64_t *)&unk_10080F2B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t v15 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s14LivePhotoAssetC13LivePhotoDataVMa, &qword_1007F9970, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, (uint64_t *)&unk_100804090);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9E00);
  return swift_endAccess();
}

uint64_t sub_100039C14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9E08);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9E08);
  uint64_t v13 = sub_100010218(&qword_1007F9E10);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9E10);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9E08);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, (uint64_t *)&unk_10080F2A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s10VideoAssetC9VideoDataVMa);
    uint64_t v15 = _s10VideoAssetC9VideoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s10VideoAssetC9VideoDataVMa, &qword_1007F9E18, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9E10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9E08);
  return swift_endAccess();
}

uint64_t sub_100039F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9E48);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9E50);
  uint64_t v13 = sub_100010218(&qword_1007F9E58);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9E58);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9E50);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s10MusicAssetC9MusicDataVMa);
    uint64_t v15 = _s10MusicAssetC9MusicDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s10MusicAssetC9MusicDataVMa, &qword_1007F9E60, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9E58);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9E50);
  return swift_endAccess();
}

uint64_t sub_10003A27C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9E68);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9E70);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9E70);
  uint64_t v13 = sub_100010218(&qword_1007F8F98);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F8F98);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9E70);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9E68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s12PodcastAssetC11PodcastDataVMa);
    uint64_t v15 = _s12PodcastAssetC11PodcastDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s12PodcastAssetC11PodcastDataVMa, &qword_1007F9E78, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F8F98);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9E70);
  return swift_endAccess();
}

uint64_t sub_10003A5B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9E80);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9E88);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9E88);
  uint64_t v13 = sub_100010218(&qword_1007F9E90);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9E90);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9E88);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9E80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s9BookAssetC8BookDataVMa);
    uint64_t v15 = _s9BookAssetC8BookDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s9BookAssetC8BookDataVMa, &qword_1007F9E98, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9E90);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9E88);
  return swift_endAccess();
}

uint64_t sub_10003A8E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9DC8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9DD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9DD0);
  uint64_t v13 = sub_100010218(&qword_1007F9DD8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9DD8);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9DD0);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9DC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
    uint64_t v15 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s20ThirdPartyMediaAssetC12MetadataTypeVMa, &qword_1007F9DE0, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9DD8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9DD0);
  return swift_endAccess();
}

uint64_t sub_10003AC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9E28);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9E30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  double v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9E30);
  uint64_t v13 = sub_100010218(&qword_1007F9E38);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9E38);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9E30);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9E28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s10AudioAssetC9AudioDataVMa);
    uint64_t v15 = _s10AudioAssetC9AudioDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s10AudioAssetC9AudioDataVMa, &qword_1007F9E40, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9E38);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9E30);
  return swift_endAccess();
}

uint64_t sub_10003AF4C@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  unint64_t v6 = *(void *)(v1 + 40);
  if (v6 >> 60 == 7)
  {
    uint64_t v17 = *(void *)(v1 + 32);
    uint64_t v18 = *(void *)(v1 + 24);
    uint64_t v19 = *(void *)(v1 + 16);
    uint64_t v7 = *(void *)(v1 + 64);
    unint64_t v8 = *(void *)(v1 + 72);
    uint64_t v9 = *(void *)(v1 + 80);
    unint64_t v10 = *(void *)(v1 + 88);
    if (*(unsigned char *)(v1 + 96))
    {
      uint64_t v11 = *(void *)(v1 + 72) & 1;
      *a1 = v7;
      a1[1] = v11;
      a1[2] = v9;
      a1[3] = v10;
      sub_100040F10(v9, v10);
    }
    else
    {
      sub_100040D64(*(void *)(v1 + 64), *(void *)(v1 + 72));
      sub_100040314();
      sub_100040F84(v7, v8, v9, v10, 0);
      uint64_t v7 = *a1;
      uint64_t v11 = a1[1];
      uint64_t v9 = a1[2];
      unint64_t v10 = a1[3];
    }
    uint64_t v13 = *(void *)(v1 + 16);
    uint64_t v12 = *(void *)(v1 + 24);
    uint64_t v14 = *(void *)(v1 + 32);
    unint64_t v15 = *(void *)(v1 + 40);
    *(void *)(v1 + 16) = v7;
    *(void *)(v1 + 24) = v11;
    *(void *)(v1 + 32) = v9;
    *(void *)(v1 + 40) = v10;
    sub_100040F24(v7, v11, v9, v10);
    sub_100040F40(v13, v12, v14, v15);
    uint64_t v4 = v18;
    uint64_t v3 = v19;
    uint64_t v5 = v17;
  }
  else
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
  return sub_100040F70(v3, v4, v5, v6);
}

uint64_t sub_10003B080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9DA8);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9DB0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9DB0);
  uint64_t v13 = sub_100010218(&qword_1007F9DB8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9DB8);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9DB0);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9DA8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s15GenericMapAssetC14GenericMapDataVMa);
    uint64_t v15 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s15GenericMapAssetC14GenericMapDataVMa, &qword_1007F9DC0, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9DB8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9DB0);
  return swift_endAccess();
}

uint64_t sub_10003B3B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9EA0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9EA8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9EA8);
  uint64_t v13 = sub_100010218(&qword_1007F9EB0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9EB0);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9EA8);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9EA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    uint64_t v15 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s16WorkoutIconAssetC15WorkoutIconDataVMa, &qword_1007F9EB8, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9EB0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9EA8);
  return swift_endAccess();
}

uint64_t sub_10003B6E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080E8E0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9EC0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9EC0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_10080E8F0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, (uint64_t *)&unk_10080E8F0);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9EC0);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, (uint64_t *)&unk_10080E8E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
    uint64_t v15 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, &qword_1007F9EC8, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, (uint64_t *)&unk_10080E8F0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9EC0);
  return swift_endAccess();
}

uint64_t sub_10003BA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9D88);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9D90);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9D90);
  uint64_t v13 = sub_100010218(&qword_1007F9D98);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9D98);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9D90);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9D88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s19MotionActivityAssetC18MotionActivityDataVMa);
    uint64_t v15 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s19MotionActivityAssetC18MotionActivityDataVMa, &qword_1007F9DA0, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9D98);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9D90);
  return swift_endAccess();
}

uint64_t sub_10003BD50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9F58);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9F60);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9F60);
  uint64_t v13 = sub_100010218(&qword_1007F9F68);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9F68);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9F60);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9F58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s9LinkAssetC8LinkDataVMa);
    uint64_t v15 = _s9LinkAssetC8LinkDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s9LinkAssetC8LinkDataVMa, &qword_1007F9F70, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9F68);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9F60);
  return swift_endAccess();
}

uint64_t sub_10003C084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9ED0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9ED8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9ED8);
  uint64_t v13 = sub_100010218(&qword_1007F9EE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9EE0);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9ED8);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9ED0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s12ContactAssetC11ContactDataVMa);
    uint64_t v15 = _s12ContactAssetC11ContactDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s12ContactAssetC11ContactDataVMa, &qword_1007F9EE8, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9EE0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9ED8);
  return swift_endAccess();
}

uint64_t sub_10003C3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9F40);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9F48);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9F48);
  uint64_t v13 = sub_100010218(&qword_1007F9F50);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9F50);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9F48);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9F40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s10VisitAssetC9VisitDataVMa);
    uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s10VisitAssetC9VisitDataVMa, &qword_1007F9F18, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9F50);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9F48);
  return swift_endAccess();
}

uint64_t sub_10003C6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9F78);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007F9F80);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, &qword_1007F9F80);
  uint64_t v13 = sub_100010218(&qword_1007F9F88);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_10002C4EC((uint64_t)v11, a1, &qword_1007F9F88);
  }
  sub_10001457C((uint64_t)v11, &qword_1007F9F80);
  sub_10001B220(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_1007F9F78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100041128((uint64_t)v5, a1, _s16StreakEventAssetC12MetadataTypeVMa);
    uint64_t v15 = _s16StreakEventAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_10003FDF4(_s16StreakEventAssetC12MetadataTypeVMa, &qword_1007F9F90, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa, a1);
    sub_100040DD0(v17, v18);
  }
  sub_10001B220(a1, (uint64_t)v8, &qword_1007F9F88);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_100041190((uint64_t)v8, v12, &qword_1007F9F80);
  return swift_endAccess();
}

uint64_t sub_10003CA20(uint64_t a1)
{
  sub_10001B220(a1, (uint64_t)v21, &qword_1007FAD50);
  uint64_t v3 = v22;
  if (v22)
  {
    uint64_t v4 = sub_10002E0BC(v21, v22);
    uint64_t v5 = *(void *)(v3 - 8);
    __n128 v6 = __chkstk_darwin(v4);
    unint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v21);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = (objc_class *)_s16MultiPinMapAssetCMa();
  v20.receiver = v1;
  v20.super_class = v10;
  unsigned int v11 = [super isEqual:v9];
  swift_unknownObjectRelease();
  if (!v11) {
    goto LABEL_17;
  }
  sub_10001B220(a1, (uint64_t)v21, &qword_1007FAD50);
  if (!v22)
  {
    sub_10001457C((uint64_t)v21, &qword_1007FAD50);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    char v17 = 0;
    return v17 & 1;
  }
  uint64_t v12 = (char *)v19[1];
  if (!*(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), uint64_t v13 = (void *)sub_100039114(), swift_release(), v13 == (void *)1)
    || (uint64_t v14 = swift_bridgeObjectRetain(), sub_10003F810(v14), !v13))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  if (!*(void *)&v12[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), uint64_t v15 = (void *)sub_100039114(), swift_release(), v15 == (void *)1)
    || (uint64_t v16 = swift_bridgeObjectRetain(), sub_10003F810(v16), !v15))
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  char v17 = sub_1004B8244((uint64_t)v13, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v17 & 1;
}

uint64_t sub_10003CD5C(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  v13[1] = a5;
  void v13[2] = a3;
  uint64_t v8 = sub_100010218(&qword_1007F9F20);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unsigned int v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100040FEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v17 = a2;
  char v16 = 0;
  sub_100010218(&qword_1007F9F08);
  sub_100041040(&qword_1007F9F28, &qword_1007F9F30);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v5)
  {
    char v15 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v14 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10003CF50()
{
  uint64_t v1 = 0x6D696C537369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F697369766572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144737469736976;
  }
}

uint64_t sub_10003CFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10004098C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10003CFD4(uint64_t a1)
{
  unint64_t v2 = sub_100040FEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003D010(uint64_t a1)
{
  unint64_t v2 = sub_100040FEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003D04C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100040AE8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_10003D088(void *a1)
{
  return sub_10003CD5C(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_10003D0B0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10003D0C8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
  {
    swift_retain();
    uint64_t v3 = sub_100039114();
    char v5 = v4;
    a1 = swift_release();
    if (v3 != 1)
    {
      a1 = sub_10003F810(v3);
      if (v5) {
        return 1;
      }
    }
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v7 = v6;
  sub_100010218(&qword_1007F9F98);
  NSManagedObjectContext.performAndWait<A>(_:)();

  return v9 & 1;
}

uint64_t sub_10003D1F4(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 89) = a1;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = *(void *)(v3 - 8);
  *(void *)(v2 + 40) = swift_task_alloc();
  return _swift_task_switch(sub_10003D2B8, 0, 0);
}

uint64_t sub_10003D2B8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    && (swift_retain(), uint64_t v3 = sub_100039114(), v5 = v4, v7 = v6, v9 = v8, swift_release(), v3 != 1))
  {
    if (v5 == 2)
    {
      sub_10003F810(v3);
      return _swift_task_switch(sub_10003D828, 0, 0);
    }
    else
    {
      uint64_t v12 = v0[2];
      sub_100010218(&qword_1007F9E20);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 64) = v3;
      *(void *)(v13 + 72) = 2;
      *(void *)(v13 + 80) = v7;
      *(unsigned char *)(v13 + 88) = v9 & 1;
      *(unsigned char *)(v13 + 89) = 1;
      *(void *)(v13 + 24) = 0;
      *(void *)(v13 + 32) = 0;
      *(void *)(v13 + 16) = 2;
      *(unsigned char *)(v13 + 40) = 0;
      *(_OWORD *)(v13 + 48) = xmmword_1006D6A80;
      *(void *)(v1 + v2) = v13;
      swift_release();
      swift_getObjectType();
      uint64_t v14 = swift_conformsToProtocol2();
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      if (v14) {
        uint64_t v16 = v12;
      }
      else {
        uint64_t v16 = 0;
      }
      if (v16)
      {
        uint64_t v17 = (void *)v0[2];
        uint64_t ObjectType = swift_getObjectType();
        id v19 = v17;
        objc_super v20 = (void *)swift_task_alloc();
        v0[6] = v20;
        *objc_super v20 = v0;
        v20[1] = sub_10003D584;
        return sub_10058DF1C(ObjectType, v15);
      }
      else
      {
        uint64_t v22 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
        id v21 = (void *)swift_task_alloc();
        v0[7] = v21;
        *id v21 = v0;
        v21[1] = sub_10003D72C;
        return v22();
      }
    }
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_10003D584()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003D680, 0, 0);
}

uint64_t sub_10003D680()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_10003D72C;
  return v3();
}

uint64_t sub_10003D72C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003D828, 0, 0);
}

uint64_t sub_10003D828()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  *(void *)(v0 + 64) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 24);
    char v6 = *(unsigned char *)(v0 + 89);
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 72) = v7;
    *(void *)(v7 + 16) = v1;
    *(unsigned char *)(v7 + 24) = v6;
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
    char v8 = v1;
    v2;
    char v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v9;
    uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC460);
    void *v9 = v0;
    v9[1] = sub_10003D9D0;
    uint64_t v11 = *(void *)(v0 + 40);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 88, v11, sub_100041274, v7, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_10003D9D0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10003DB64, 0, 0);
}

uint64_t sub_10003DB64()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003DBC4()
{
  uint64_t v1 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  uint64_t v5 = sub_100039114();
  swift_release();
  if (v5 == 1) {
    return 0;
  }
  if (!v5
    || !*(void *)(v5 + 16)
    || (uint64_t v7 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8),
        char v8 = (uint64_t *)(v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))),
        (uint64_t v9 = v8[1]) == 0)
    || !*(void *)(v0 + v4))
  {
LABEL_15:
    sub_100010218((uint64_t *)&unk_10080C370);
    uint64_t inited = swift_initStackObject();
    uint64_t v17 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_1006D6270;
    if (v5)
    {
      if (*(void *)(v5 + 16))
      {
        uint64_t v18 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
        uint64_t v19 = *(void *)(v5
                        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
        uint64_t v20 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
      }
      v17[4] = v19;
      v17[5] = v20;
      uint64_t v22 = *(void *)(v5 + 16);
      uint64_t v23 = _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if (v22)
      {
        sub_10003F820(v5+ ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80)), (uint64_t)v3);
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v25 = 1;
      }
      id v21 = v17 + 6;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v3, v25, 1, v23);
      sub_10003F810(v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v3, 1, v23) != 1)
      {
        uint64_t v27 = *((void *)v3 + 2);
        uint64_t v26 = *((void *)v3 + 3);
        swift_bridgeObjectRetain();
        sub_10003F884((uint64_t)v3);
        *id v21 = v27;
        goto LABEL_27;
      }
      sub_10001457C((uint64_t)v3, &qword_1007F9F50);
    }
    else
    {
      id v21 = (void *)(inited + 48);
      *(void *)(inited + 32) = 0;
      *(void *)(inited + 40) = 0;
    }
    uint64_t v26 = 0;
    *id v21 = 0;
LABEL_27:
    v17[7] = v26;
    uint64_t v6 = sub_10023DA38(8236, 0xE200000000000000, (uint64_t)v17);
    swift_setDeallocating();
    sub_100010218(&qword_100803920);
    swift_arrayDestroy();
    return v6;
  }
  uint64_t v29 = *v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_100039114();
  int v30 = v11;
  swift_release();
  if (v10 == 1
    || (uint64_t v12 = swift_bridgeObjectRetain(), sub_10003F810(v12), !v10)
    || (unint64_t v13 = *(void *)(v10 + 16), swift_bridgeObjectRelease(), v13 < 2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_10003F810(v5);
  if (qword_1007F7A98 != -1) {
    swift_once();
  }
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1006D6270;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v15 = sub_10001B2C0();
  *(void *)(v14 + 32) = v29;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 96) = &type metadata for Int;
  *(void *)(v14 + 104) = &protocol witness table for Int;
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = v13 - 1;
  uint64_t v6 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_10003E010(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for MultiPinMapThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  id v15 = a6;
  uint64_t v16 = (char *)v13;
  uint64_t v17 = sub_1003F2BE0();
  uint64_t v18 = &v16[qword_10083D538];
  *(void *)uint64_t v18 = v17;
  *((void *)v18 + 1) = v19;
  *((void *)v18 + 2) = v20;
  v18[24] = v21;

  return sub_100529128(v14, a1, a2, v12, a4, a5, v15);
}

uint64_t sub_10003E0D4(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id, v7, v9);
  id v12 = [a3 userInterfaceStyle];
  if (*(void *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
  {
    uint64_t v23 = a1;
    char v13 = a2;
    swift_retain();
    uint64_t v14 = sub_100039114();
    uint64_t v16 = v15;
    char v18 = v17;
    swift_release();
    if (v14 == 1)
    {
      uint64_t v16 = 0;
      char v19 = 1;
    }
    else
    {
      char v19 = v18 & 1;
      sub_10003F810(v14);
    }
    a2 = v13;
    a1 = v23;
  }
  else
  {
    uint64_t v16 = 0;
    char v19 = 1;
  }
  uint64_t v20 = sub_1003209E8((uint64_t)v11, a1, (uint64_t)v12, 0, v16, v19, a2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v20;
}

uint64_t sub_10003E2A4()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_10003E2E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16MultiPinMapAssetCMa();
  return [super dealloc];
}

uint64_t sub_10003E368()
{
  return _s16MultiPinMapAssetCMa();
}

uint64_t _s16MultiPinMapAssetCMa()
{
  uint64_t result = qword_1007F9CE8;
  if (!qword_1007F9CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003E3BC()
{
  return swift_updateClassMetadata2();
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 _s16MultiPinMapAssetC15MultiPinMapDataVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataVMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataVN;
}

uint64_t sub_10003E5D0()
{
  return swift_retain();
}

uint64_t sub_10003E5E0()
{
  return sub_10003DBC4();
}

int *sub_10003E604(uint64_t a1)
{
  uint64_t v136 = a1;
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  uint64_t v135 = (char *)&v122 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  uint64_t v134 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100010218(&qword_1007F9D48);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v132 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100010218(&qword_1007F9D50);
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  unint64_t v127 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007F9D58);
  uint64_t v131 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_t v128 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for UTType();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  id v122 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  CGFloat v138 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v122 - v14;
  __chkstk_darwin(v16);
  CGFloat v137 = (char *)&v122 - v17;
  __chkstk_darwin(v18);
  uint64_t v142 = (char *)&v122 - v19;
  uint64_t v160 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v20 = *((void *)v160 - 1);
  __chkstk_darwin(v160);
  CGFloat v139 = (uint64_t *)((char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v143 = (uint64_t)&v122 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char **)((char *)&v122 - v25);
  uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v27 - 8);
  uint64_t v141 = (uint64_t)&v122 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  unint64_t v153 = (char *)&v122 - v30;
  __chkstk_darwin(v31);
  id v33 = (char *)&v122 - v32;
  __chkstk_darwin(v34);
  uint64_t v152 = (uint64_t)&v122 - v35;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v122 - v37;
  uint64_t v145 = (uint64_t)&v122 - v37;
  __n128 v40 = __chkstk_darwin(v39);
  uint64_t v144 = (uint64_t)&v122 - v41;
  uint64_t v42 = *(void (**)(__n128))(v11 + 56);
  v42(v40);
  unint64_t v146 = v42;
  uint64_t v147 = v11 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v42)(v38, 1, 1, v10);
  uint64_t v43 = *(void *)(v136 + 16);
  uint64_t v133 = v7;
  if (!v43)
  {
    uint64_t v97 = (char *)_swiftEmptyArrayStorage;
    uint64_t v148 = (char *)_swiftEmptyArrayStorage;
    uint64_t v92 = v126;
    uint64_t v93 = v125;
    uint64_t v94 = v124;
    uint64_t v95 = v123;
    uint64_t v96 = v122;
    goto LABEL_48;
  }
  uint64_t v44 = v136 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v45 = *(void *)(v20 + 72);
  uint64_t v46 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v150 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v151 = v45;
  uint64_t v140 = (void (**)(char *, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  uint64_t v47 = v44;
  uint64_t v148 = (char *)_swiftEmptyArrayStorage;
  uint64_t v155 = v26;
  uint64_t v156 = (char *)_swiftEmptyArrayStorage;
  uint64_t v154 = v15;
  uint64_t v48 = (uint64_t)v153;
  uint64_t v158 = v33;
  uint64_t v159 = v46;
  uint64_t v49 = v15;
  do
  {
    uint64_t v157 = v47;
    sub_10003F820(v47, (uint64_t)v26);
    uint64_t v50 = v26[1];
    if (v50)
    {
      uint64_t v51 = *v26;
      swift_bridgeObjectRetain();
      uint64_t v52 = v156;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v52 = sub_1002A54A0(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v54 = *((void *)v52 + 2);
      unint64_t v53 = *((void *)v52 + 3);
      if (v54 >= v53 >> 1) {
        uint64_t v52 = sub_1002A54A0((char *)(v53 > 1), v54 + 1, 1, v52);
      }
      *((void *)v52 + 2) = v54 + 1;
      uint64_t v156 = v52;
      uint64_t v55 = &v52[16 * v54];
      *((void *)v55 + 4) = v51;
      *((void *)v55 + 5) = v50;
      uint64_t v49 = v154;
      id v33 = v158;
      uint64_t v46 = v159;
    }
    uint64_t v56 = (char *)v26 + v160[13];
    unint64_t v57 = *((void *)v56 + 1);
    if (v57 >> 60 != 15)
    {
      uint64_t v58 = *(void *)v56;
      sub_100040D64(*(void *)v56, *((void *)v56 + 1));
      uint64_t v59 = (void *)sub_10003F908(v58, v57, (unint64_t *)&unk_10080F270);
      sub_100040DBC(v58, v57);
      if (!v59)
      {
        id v33 = v158;
        uint64_t v46 = v159;
        goto LABEL_30;
      }
      id v60 = [v59 _addressFormattedAsSinglelineAddress];
      if (v60)
      {
        uint64_t v61 = v60;
        uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v64 = v63;

        uint64_t v65 = v143;
        sub_10003F820((uint64_t)v26, v143);
        uint64_t v66 = v139;
        if (v64)
        {
          uint64_t v67 = v65;
LABEL_21:
          sub_10003F884(v67);
          goto LABEL_24;
        }
      }
      else
      {
        sub_10003F820((uint64_t)v26, v143);
        uint64_t v66 = v139;
      }
      id v68 = [v59 name];
      if (v68)
      {
        uint64_t v69 = v68;
        uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v64 = v70;

        sub_100041128(v143, (uint64_t)v66, _s10VisitAssetC9VisitDataVMa);
        id v33 = v158;
        uint64_t v46 = v159;
        if (v64)
        {
          uint64_t v67 = (uint64_t)v66;
          goto LABEL_21;
        }
      }
      else
      {
        sub_100041128(v143, (uint64_t)v66, _s10VisitAssetC9VisitDataVMa);
        id v33 = v158;
        uint64_t v46 = v159;
      }
      uint64_t v62 = *v66;
      uint64_t v64 = v66[1];
      swift_bridgeObjectRetain();
      sub_10003F884((uint64_t)v66);
      if (!v64)
      {
LABEL_29:

        uint64_t v49 = v154;
        goto LABEL_30;
      }
LABEL_24:
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v71 = v148;
      }
      else {
        uint64_t v71 = sub_1002A54A0(0, *((void *)v148 + 2) + 1, 1, v148);
      }
      unint64_t v73 = *((void *)v71 + 2);
      unint64_t v72 = *((void *)v71 + 3);
      if (v73 >= v72 >> 1) {
        uint64_t v71 = sub_1002A54A0((char *)(v72 > 1), v73 + 1, 1, v71);
      }
      *((void *)v71 + 2) = v73 + 1;
      uint64_t v148 = v71;
      uint64_t v74 = &v71[16 * v73];
      *((void *)v74 + 4) = v62;
      *((void *)v74 + 5) = v64;
      id v33 = v158;
      uint64_t v46 = v159;
      goto LABEL_29;
    }
LABEL_30:
    uint64_t v75 = v152;
    sub_10001B220((uint64_t)v26 + v160[7], v152, (uint64_t *)&unk_1007FC470);
    uint64_t v76 = *v46;
    if ((*v46)(v75, 1, v10) == 1)
    {
      sub_10001457C(v75, (uint64_t *)&unk_1007FC470);
    }
    else
    {
      uint64_t v149 = v43;
      uint64_t v77 = *v150;
      uint64_t v78 = v142;
      (*v150)(v142, v75, v10);
      uint64_t v79 = v144;
      sub_10001B220(v144, (uint64_t)v33, (uint64_t *)&unk_1007FC470);
      if (v76((uint64_t)v33, 1, v10) == 1)
      {
        sub_10001457C(v79, (uint64_t *)&unk_1007FC470);
        sub_10001457C((uint64_t)v33, (uint64_t *)&unk_1007FC470);
        v77((char *)v79, (uint64_t)v78, v10);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v146)(v79, 0, 1, v10);
        uint64_t v46 = v159;
        uint64_t v43 = v149;
        uint64_t v26 = v155;
        uint64_t v48 = (uint64_t)v153;
      }
      else
      {
        uint64_t v80 = v137;
        v77(v137, (uint64_t)v33, v10);
        char v81 = static Date.< infix(_:_:)();
        id v82 = *v140;
        (*v140)(v80, v10);
        if (v81)
        {
          uint64_t v83 = v144;
          sub_10001457C(v144, (uint64_t *)&unk_1007FC470);
          v77((char *)v83, (uint64_t)v78, v10);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v146)(v83, 0, 1, v10);
        }
        else
        {
          v82(v78, v10);
        }
        uint64_t v48 = (uint64_t)v153;
        uint64_t v49 = v154;
        id v33 = v158;
        uint64_t v46 = v159;
        uint64_t v43 = v149;
        uint64_t v26 = v155;
      }
    }
    sub_10001B220((uint64_t)v26 + v160[8], v48, (uint64_t *)&unk_1007FC470);
    if (v76(v48, 1, v10) == 1)
    {
      sub_10003F884((uint64_t)v26);
      sub_10001457C(v48, (uint64_t *)&unk_1007FC470);
    }
    else
    {
      uint64_t v84 = *v150;
      (*v150)(v49, v48, v10);
      uint64_t v85 = v145;
      uint64_t v86 = v141;
      sub_10001B220(v145, v141, (uint64_t *)&unk_1007FC470);
      if (v76(v86, 1, v10) == 1)
      {
        uint64_t v87 = (uint64_t)v155;
        sub_10003F884((uint64_t)v155);
        sub_10001457C(v85, (uint64_t *)&unk_1007FC470);
        sub_10001457C(v86, (uint64_t *)&unk_1007FC470);
        v84((char *)v85, (uint64_t)v49, v10);
        uint64_t v26 = (void *)v87;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v146)(v85, 0, 1, v10);
        uint64_t v48 = (uint64_t)v153;
        id v33 = v158;
        uint64_t v46 = v159;
      }
      else
      {
        uint64_t v88 = v138;
        v84(v138, v86, v10);
        char v89 = static Date.> infix(_:_:)();
        os_log_type_t v90 = *v140;
        (*v140)(v88, v10);
        sub_10003F884((uint64_t)v155);
        if (v89)
        {
          uint64_t v91 = v145;
          sub_10001457C(v145, (uint64_t *)&unk_1007FC470);
          v84((char *)v91, (uint64_t)v49, v10);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v146)(v91, 0, 1, v10);
        }
        else
        {
          v90(v49, v10);
        }
        uint64_t v48 = (uint64_t)v153;
        id v33 = v158;
        uint64_t v46 = v159;
        uint64_t v26 = v155;
      }
    }
    uint64_t v47 = v157 + v151;
    --v43;
  }
  while (v43);
  swift_bridgeObjectRelease();
  uint64_t v92 = v126;
  uint64_t v93 = v125;
  uint64_t v94 = v124;
  uint64_t v95 = v123;
  uint64_t v96 = v122;
  uint64_t v97 = v156;
LABEL_48:
  static UTType.calendarEvent.getter();
  id v98 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class isa = UTType._bridgeToObjectiveC()().super.isa;
  uint64_t v160 = (int *)[v98 initWithContentType:isa];

  (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v94);
  v161 = v97;
  uint64_t v100 = v129;
  uint64_t v101 = v127;
  uint64_t v102 = v130;
  (*(void (**)(char *, void, uint64_t))(v129 + 104))(v127, enum case for ListFormatStyle.ListType.and<A, B>(_:), v130);
  uint64_t v103 = v132;
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v132, enum case for ListFormatStyle.Width.narrow<A, B>(_:), v92);
  sub_100010218(&qword_100800A70);
  sub_100014488(&qword_1007F9D60, &qword_100800A70);
  uint64_t v104 = v128;
  static FormatStyle.list<A>(type:width:)();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v103, v92);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
  sub_100014488(&qword_1007F9D68, &qword_1007F9D58);
  uint64_t v105 = v133;
  Sequence.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v104, v105);
  swift_bridgeObjectRelease();
  uint64_t v106 = v162;
  unint64_t v107 = v163;
  v161 = v148;
  sub_100014488((unint64_t *)&qword_1007F9100, &qword_100800A70);
  uint64_t v108 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v110 = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v108;
  unint64_t v112 = v160;
  sub_100042914(v106, v107, v111, v110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v113 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v115 = v114;
  sub_100010218(&qword_1007FC170);
  uint64_t v116 = swift_allocObject();
  *(_OWORD *)(v116 + 16) = xmmword_1006D6280;
  uint64_t v117 = v113;
  uint64_t v118 = v144;
  *(void *)(v116 + 32) = sub_100044F68(v117, v115, v144);
  *(void *)(v116 + 40) = v119;
  Class v120 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v112 setAlternateNames:v120];
  swift_bridgeObjectRelease();

  sub_10001457C(v145, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v118, (uint64_t *)&unk_1007FC470);
  return v112;
}

int *sub_10003F6C4()
{
  if (!*(void *)(*v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  unint64_t v1 = sub_100039114();
  swift_release();
  if (v1 <= 1) {
    return 0;
  }
  uint64_t v3 = sub_10003E604(v1);
  sub_10003F810(v1);
  return v3;
}

unint64_t sub_10003F764()
{
  unint64_t result = qword_1007F9D00;
  if (!qword_1007F9D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9D00);
  }
  return result;
}

unint64_t sub_10003F7BC()
{
  unint64_t result = qword_1007F9D08;
  if (!qword_1007F9D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9D08);
  }
  return result;
}

uint64_t sub_10003F810(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003F820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003F884(uint64_t a1)
{
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003F8E0(uint64_t a1, uint64_t a2)
{
  return sub_10003F908(a1, a2, (unint64_t *)&unk_10080F270);
}

uint64_t sub_10003F8F4(uint64_t a1, uint64_t a2)
{
  return sub_10003F908(a1, a2, (unint64_t *)&qword_10080F260);
}

uint64_t sub_10003F908(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_10003FBA4()
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10003F764();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  return v1;
}

uint64_t sub_10003FDF4@<X0>(uint64_t (*a1)(void)@<X2>, unint64_t *a2@<X3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v8 = a1(0);
  sub_1000411F4(a2, a3);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a4, 0, 1, v8);
}

uint64_t sub_1000400E0()
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_100010218((uint64_t *)&unk_100811810);
  sub_100040E64();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  return v1;
}

uint64_t sub_100040314()
{
  return swift_release();
}

uint64_t sub_100040544()
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000410D4();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  return v1;
}

uint64_t sub_100040778@<X0>(uint64_t a1@<X8>)
{
  return sub_10003FDF4(_s10VisitAssetC9VisitDataVMa, &qword_1007F9F18, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
}

char *sub_1000407C0(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v16 - v9;
  UUID.init()();
  uint64_t v11 = (char *)objc_allocWithZone((Class)_s16MultiPinMapAssetCMa());
  *(void *)&v11[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata] = 0;
  *(void *)&v11[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_isWorkArray] = 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  uint64_t v12 = (char *)sub_1001817C4((uint64_t)v7, 8, a1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  sub_100010218(&qword_1007F9E20);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 64) = a2;
  *(_OWORD *)(v13 + 72) = xmmword_1006D6E40;
  *(_WORD *)(v13 + 88) = 257;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = 0;
  *(void *)(v13 + 16) = 2;
  *(unsigned char *)(v13 + 40) = 0;
  *(_OWORD *)(v13 + 48) = xmmword_1006D6A80;
  *(void *)&v12[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata] = v13;
  uint64_t v14 = v12;
  swift_release();
  sub_100098498();

  return v14;
}

uint64_t sub_10004098C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144737469736976 && a2 == 0xEA00000000006174;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D696C537369 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100040AE8(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007F9EF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10002E0BC(a1, v7);
  sub_100040FEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100010218(&qword_1007F9F08);
    v9[15] = 0;
    sub_100041040(&qword_1007F9F10, &qword_1007F9F18);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v7 = v10;
    v9[14] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v9[13] = 2;
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100040D64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100040DBC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100040DD0(a1, a2);
  }
  return a1;
}

uint64_t sub_100040DD0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100040E28(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100040E38(uint64_t result)
{
  if (result != 2) {
    return sub_10003F810(result);
  }
  return result;
}

uint64_t sub_100040E48(uint64_t result)
{
  if (result != 2) {
    return sub_100040E28(result);
  }
  return result;
}

uint64_t sub_100040E58(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_100040DD0(a1, a2);
  }
}

unint64_t sub_100040E64()
{
  unint64_t result = qword_1007F9DE8;
  if (!qword_1007F9DE8)
  {
    sub_100014440((uint64_t *)&unk_100811810);
    sub_1000411F4((unint64_t *)&unk_100811820, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9DE8);
  }
  return result;
}

uint64_t sub_100040F10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100040D64(a1, a2);
  }
  return a1;
}

uint64_t sub_100040F24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 11) {
    return sub_100040F10(a3, a4);
  }
  return result;
}

uint64_t sub_100040F40(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 7) {
    return sub_100040F54(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_100040F54(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 11) {
    return sub_100040DBC(a3, a4);
  }
  return result;
}

uint64_t sub_100040F70(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 7) {
    return sub_100040F24(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_100040F84(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    return sub_100040DBC(a3, a4);
  }
  else {
    return sub_100040DD0(a1, a2);
  }
}

unint64_t sub_100040F98()
{
  unint64_t result = qword_1007F9EF0;
  if (!qword_1007F9EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9EF0);
  }
  return result;
}

unint64_t sub_100040FEC()
{
  unint64_t result = qword_1007F9F00;
  if (!qword_1007F9F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9F00);
  }
  return result;
}

uint64_t sub_100041040(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(&qword_1007F9F08);
    sub_1000411F4(a2, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000410D4()
{
  unint64_t result = qword_1007F9F38;
  if (!qword_1007F9F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9F38);
  }
  return result;
}

uint64_t sub_100041128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100041190(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100010218(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000411F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004123C()
{
  return swift_deallocObject();
}

char *sub_100041274@<X0>(BOOL *a1@<X8>)
{
  return sub_100180DFC(*(char **)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_100041294@<X0>(unsigned char *a1@<X8>)
{
  return sub_100180DAC(*(void *)(v1 + 16), a1);
}

unsigned char *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004137CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysON;
}

unint64_t sub_1000413B8()
{
  unint64_t result = qword_1007F9FA0;
  if (!qword_1007F9FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9FA0);
  }
  return result;
}

unint64_t sub_100041410()
{
  unint64_t result = qword_1007F9FA8;
  if (!qword_1007F9FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9FA8);
  }
  return result;
}

unint64_t sub_100041468()
{
  unint64_t result = qword_1007F9FB0;
  if (!qword_1007F9FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9FB0);
  }
  return result;
}

BOOL static TranscriptPostProcessorError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void TranscriptPostProcessorError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int TranscriptPostProcessorError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

unint64_t sub_100041540()
{
  unint64_t result = qword_1007F9FC0;
  if (!qword_1007F9FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9FC0);
  }
  return result;
}

unsigned char *_s16UnitsCounterTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100041660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataConfig.UnitsCounterType()
{
  return &type metadata for DataConfig.UnitsCounterType;
}

void sub_100041698(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = self;
  id v5 = [v4 standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 stringArrayForKey:v6];

  if (v7)
  {
    uint64_t v8 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  unint64_t v9 = sub_100464E78(a1, a2, v8);
  if (v10)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10035F914(v9);
    swift_bridgeObjectRelease();
    id v11 = [v4 standardUserDefaults];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v13 = String._bridgeToObjectiveC()();
    [v11 setObject:isa forKey:v13];
  }
}

void sub_10004184C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = self;
  id v5 = [v4 standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 stringArrayForKey:v6];

  if (v7)
  {
    uint64_t v8 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  }
  if (sub_100018958(a1, a2, v8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1002A54A0(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1002A54A0((char *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    id v11 = &v8[16 * v10];
    *((void *)v11 + 4) = a1;
    *((void *)v11 + 5) = a2;
    id v12 = [v4 standardUserDefaults];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    [v12 setObject:isa forKey:v14];
  }
}

uint64_t sub_100041A58(char a1)
{
  uint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746F68506576696CLL;
      break;
    case 2:
      uint64_t result = 0x6F65646976;
      break;
    case 3:
      uint64_t result = 0x636973756DLL;
      break;
    case 4:
      uint64_t result = 0x74736163646F70;
      break;
    case 5:
      uint64_t result = 1802465122;
      break;
    case 6:
      uint64_t result = 0x6F69647561;
      break;
    case 7:
      uint64_t result = 0x7469736976;
      break;
    case 8:
      uint64_t result = 0x6E695069746C756DLL;
      break;
    case 9:
      uint64_t result = 0x4D636972656E6567;
      break;
    case 10:
      uint64_t result = 1802398060;
      break;
    case 11:
      uint64_t result = 0x746361746E6F63;
      break;
    case 12:
      uint64_t result = 0x4974756F6B726F77;
      break;
    case 13:
      uint64_t result = 0x5274756F6B726F77;
      break;
    case 14:
      uint64_t result = 0x697463656C666572;
      break;
    case 15:
      uint64_t result = 0x4D664F6574617473;
      break;
    case 16:
      uint64_t result = 0x63416E6F69746F6DLL;
      break;
    case 17:
      uint64_t result = 0x7261506472696874;
      break;
    case 18:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 19:
      uint64_t result = 0x76456B6165727473;
      break;
    case 20:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

id sub_100041CEC()
{
  id v1 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v1 setAlignment:[v0 alignment]];
  [v0 firstLineHeadIndent];
  [v1 setFirstLineHeadIndent:];
  [v0 headIndent];
  [v1 setHeadIndent:];
  [v1 setBaseWritingDirection:[v0 baseWritingDirection]];
  Class isa = (Class)[v0 textLists];
  if (!isa)
  {
    sub_10001B284(0, &qword_1007FA0C8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 setTextLists:isa];

  return v1;
}

uint64_t sub_100041E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100041E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_100045AC8((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

id sub_100041F24(uint64_t a1, unint64_t a2)
{
  sub_100010218(&qword_1007FA0A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSDocumentTypeDocumentOption;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  sub_100040D64(a1, a2);
  NSString v6 = NSDocumentTypeDocumentOption;
  id v7 = NSRTFTextDocumentType;
  unint64_t v8 = sub_100396C0C(inited);
  id v9 = objc_allocWithZone((Class)NSAttributedString);
  id v10 = sub_100044DD8(a1, a2, v8, 0);
  sub_100040DD0(a1, a2);
  return v10;
}

uint64_t sub_10004243C()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v0];
  unint64_t v3 = (unint64_t)[v2 length];
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = ObjectType;
  NSString v6 = (void *)swift_allocObject();
  v6[2] = sub_100045A70;
  v6[3] = v5;
  aBlock[4] = sub_100045A88;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100041E54;
  aBlock[3] = &unk_1007972C0;
  id v7 = _Block_copy(aBlock);
  id v2 = v2;
  swift_retain();
  swift_release();
  [v2 enumerateAttributesInRange:0 options:v4 usingBlock:0];
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
  id v8 = [v0 length];
  sub_100010218(&qword_1007FA090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  id v11 = NSDocumentTypeDocumentAttribute;
  id v12 = NSRTFTextDocumentType;
  sub_100396D94(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_100045AC8(&qword_1007F8C80, type metadata accessor for DocumentAttributeKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v14 = [v0 dataFromRange:0 documentAttributes:v8 error:isa aBlock];

  id v15 = aBlock[0];
  if (v14)
  {
    uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    return v16;
  }
  uint64_t v17 = v15;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_1007F68D0 != -1) {
    goto LABEL_13;
  }
LABEL_6:
  uint64_t v18 = type metadata accessor for Logger();
  sub_100026A54(v18, (uint64_t)qword_1007F9FC8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    swift_errorRetain();
    uint64_t v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
    aBlock[0] = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v23;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "WARNING: failed to turn NSAttributedString to Data: %@", v21, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    swift_release();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  return 0;
}

void sub_100042914(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = HIBYTE(a2) & 0xF;
  uint64_t v10 = HIBYTE(a4) & 0xF;
  if (a2)
  {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v11 = HIBYTE(a2) & 0xF;
    }
    uint64_t v12 = a1;
    if (v11) {
      goto LABEL_9;
    }
  }
  if (!a4) {
    goto LABEL_10;
  }
  uint64_t v13 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(a4) & 0xF;
  }
  uint64_t v12 = a3;
  if (v13)
  {
LABEL_9:
    sub_100044A94(10, v12);
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    NSString v14 = 0;
  }
  [v4 setDisplayName:v14];

  if (a4)
  {
    uint64_t v15 = a3 & 0xFFFFFFFFFFFFLL;
    if ((a4 & 0x2000000000000000) != 0) {
      uint64_t v15 = v10;
    }
    if (v15) {
      goto LABEL_19;
    }
  }
  if (!a2) {
    goto LABEL_20;
  }
  uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v16 = v9;
  }
  if (v16) {
LABEL_19:
  }
    NSString v17 = String._bridgeToObjectiveC()();
  else {
LABEL_20:
  }
    NSString v17 = 0;
  id v18 = v17;
  [v4 setContentDescription:];
}

uint64_t sub_100042A54()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007F9FC8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007F9FC8);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100042B1C(char a1)
{
  uint64_t countAndFlagsBits = 0;
  switch(a1)
  {
    case 1:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000038;
      unint64_t v4 = 0xEA00000000006F74;
      unint64_t v11 = 0x8000000100688100;
      uint64_t v3 = 0x6F6870206576696CLL;
      goto LABEL_20;
    case 2:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x80000001006880C0;
      uint64_t v3 = 0x6F65646976;
      goto LABEL_22;
    case 3:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100688080;
      uint64_t v3 = 0x636973756DLL;
      goto LABEL_22;
    case 4:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000036;
      unint64_t v11 = 0x8000000100688040;
      uint64_t v6 = 0x736163646F70;
      goto LABEL_15;
    case 5:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000033;
      unint64_t v11 = 0x8000000100688000;
      uint64_t v3 = 1802465122;
      unint64_t v4 = 0xE400000000000000;
      goto LABEL_20;
    case 6:
    case 18:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100687FC0;
      uint64_t v3 = 0x6572206F69647561;
      unint64_t v4 = 0xEF676E6964726F63;
      goto LABEL_23;
    case 7:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100687F80;
      uint64_t v3 = 0x7469736976;
      goto LABEL_22;
    case 8:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100687F80;
      uint64_t v3 = 0x6563616C70;
      goto LABEL_22;
    case 9:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100687F80;
      uint64_t v3 = 0x20676E696B6C6177;
      unint64_t v4 = 0xEC00000061657261;
      goto LABEL_23;
    case 10:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000033;
      unint64_t v11 = 0x8000000100687F40;
      uint64_t v3 = 1802398060;
      unint64_t v4 = 0xE400000000000000;
      goto LABEL_20;
    case 11:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000036;
      unint64_t v11 = 0x8000000100687F00;
      uint64_t v6 = 0x6361746E6F63;
      goto LABEL_15;
    case 12:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000003ALL;
      unint64_t v11 = 0x8000000100687EC0;
      uint64_t v6 = 0x756F6B726F77;
LABEL_15:
      uint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      unint64_t v4 = 0xE700000000000000;
      goto LABEL_20;
    case 13:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000003BLL;
      unint64_t v11 = 0x8000000100687E80;
      uint64_t v3 = 0x2074756F6B726F77;
      unint64_t v4 = 0xED00006574756F72;
      goto LABEL_20;
    case 14:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000039;
      unint64_t v11 = 0x8000000100687E40;
      uint64_t v3 = 0x697463656C666572;
      unint64_t v4 = 0xEA00000000006E6FLL;
      goto LABEL_20;
    case 15:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000003ALL;
      unint64_t v11 = 0x8000000100687E00;
      uint64_t v3 = 0x666F206574617473;
      unint64_t v4 = 0xED0000646E696D20;
      goto LABEL_20;
    case 16:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000003DLL;
      unint64_t v11 = 0x8000000100687DC0;
      uint64_t v3 = 0x61206E6F69746F6DLL;
      unint64_t v4 = 0xEF79746976697463;
LABEL_20:
      v7.super.Class isa = v2;
      uint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      goto LABEL_24;
    case 17:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100687D80;
      uint64_t v3 = 0x616964656DLL;
      goto LABEL_22;
    case 19:
    case 20:
      return countAndFlagsBits;
    default:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v11 = 0x8000000100688140;
      uint64_t v3 = 0x6F746F6870;
LABEL_22:
      unint64_t v4 = 0xE500000000000000;
LABEL_23:
      v7.super.Class isa = v2;
      uint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      unint64_t v5 = 0xD000000000000034;
LABEL_24:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v7, *(Swift::String *)&v8, *(Swift::String *)(&v11 - 1))._countAndFlagsBits;

      return countAndFlagsBits;
  }
}

unint64_t sub_100043220(unsigned __int8 a1)
{
  int v1 = a1;
  unint64_t result = 0x6D726F6665766177;
  switch(v1)
  {
    case 1:
      unint64_t result = 0x746F68706576696CLL;
      break;
    case 2:
      unint64_t result = 0x6F65646976;
      break;
    case 3:
      unint64_t result = 0x636973756DLL;
      break;
    case 4:
      unint64_t result = 0x6F702E656C707061;
      break;
    case 5:
      unint64_t result = 1802465122;
      break;
    case 6:
      return result;
    case 7:
      unint64_t result = 0x6E697070616DLL;
      break;
    case 8:
    case 9:
      unint64_t result = 7364973;
      break;
    case 10:
      unint64_t result = 1802398060;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0x722E657275676966;
      break;
    case 13:
      unint64_t result = 0x6574756F72;
      break;
    case 15:
      unint64_t result = 0xD000000000000011;
      break;
    case 16:
      unint64_t result = 0x772E657275676966;
      break;
    case 17:
      unint64_t result = 0x6F6E2E636973756DLL;
      break;
    default:
      unint64_t result = 0x6F746F6870;
      break;
  }
  return result;
}

uint64_t sub_10004341C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100043914(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100041A58);
}

Swift::Int sub_100043434(uint64_t a1, uint64_t a2)
{
  return sub_1000439C4(a1, a2, (void (*)(uint64_t))sub_100041A58);
}

uint64_t sub_10004344C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100043A48(a1, a2, a3, (void (*)(void))sub_100041A58);
}

Swift::Int sub_100043464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100043AB8(a1, a2, a3, (void (*)(uint64_t))sub_100041A58);
}

uint64_t sub_10004347C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100044D84();
  *a1 = result;
  return result;
}

uint64_t sub_1000434AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100041A58(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000434D8()
{
  return sub_100042B1C(*v0);
}

uint64_t sub_1000434E0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100043540()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100043590(char a1)
{
  uint64_t result = 0x6974736567677573;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x50616964656DLL;
      goto LABEL_6;
    case 2:
      uint64_t v3 = 0x506567616D69;
      goto LABEL_6;
    case 3:
      return 0x69506172656D6163;
    case 4:
      uint64_t v3 = 0x506F69647561;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6369000000000000;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      uint64_t result = 0x6568536572616873;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000436F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);

  return v4(a2, 1, 1, a1);
}

uint64_t sub_100043764@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038878(v5, (uint64_t)v4);
  uint64_t v6 = sub_100010218(&qword_100805B00);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 2, v6);
  if (result)
  {
    if (result == 1)
    {
      unint64_t v8 = 0xEA00000000007972;
      uint64_t v9 = 0x746E456B6E616C62;
    }
    else
    {
      unint64_t v8 = 0xE700000000000000;
      uint64_t v9 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    uint64_t v10 = &v4[*(int *)(v6 + 48)];
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
    unint64_t v8 = 0xEE007972746E4564;
    uint64_t v9 = 0x6574736567677573;
  }
  *a2 = v9;
  a2[1] = v8;
  return result;
}

uint64_t sub_1000438FC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100043914(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100043590);
}

uint64_t sub_100043914(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_1000439AC(uint64_t a1, uint64_t a2)
{
  return sub_1000439C4(a1, a2, (void (*)(uint64_t))sub_100043590);
}

Swift::Int sub_1000439C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  Hasher.init(_seed:)();
  a3(v5);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100043A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100043A48(a1, a2, a3, (void (*)(void))sub_100043590);
}

uint64_t sub_100043A48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100043AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100043AB8(a1, a2, a3, (void (*)(uint64_t))sub_100043590);
}

Swift::Int sub_100043AB8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  Hasher.init(_seed:)();
  a4(v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100043B20@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100044D38(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100043B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100043590(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100043B7C(unsigned __int8 *a1, char *a2)
{
  return sub_10017CE60(*a1, *a2);
}

Swift::Int sub_100043B88()
{
  return Hasher._finalize()();
}

uint64_t sub_100043C70()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100043D40()
{
  return Hasher._finalize()();
}

unint64_t sub_100043E24@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100044F1C(*a1);
  *a2 = result;
  return result;
}

void sub_100043E54(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x746E656D6F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F746F6870;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F697461657263;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6D6F74737563;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Journaling.deinit()
{
  return v0;
}

uint64_t type metadata accessor for Journaling()
{
  return self;
}

uint64_t getEnumTagSinglePayload for Journaling.EntryDateSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.EntryDateSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100044088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.EntryDateSource()
{
  return &type metadata for Journaling.EntryDateSource;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004421CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetSource()
{
  return &type metadata for Journaling.AssetSource;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000443B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetType()
{
  return &type metadata for Journaling.AssetType;
}

uint64_t destroy for Journaling.EntriesFilter()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s7Journal10JournalingC13EntriesFilterVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Journaling.EntriesFilter(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Journaling.EntriesFilter(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Journaling.EntriesFilter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Journaling.EntriesFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.EntriesFilter()
{
  return &type metadata for Journaling.EntriesFilter;
}

unint64_t sub_1000445E4()
{
  unint64_t result = qword_1007FA078;
  if (!qword_1007FA078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA078);
  }
  return result;
}

unint64_t sub_10004463C()
{
  unint64_t result = qword_1007FA080;
  if (!qword_1007FA080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA080);
  }
  return result;
}

unint64_t sub_100044694()
{
  unint64_t result = qword_1007FA088;
  if (!qword_1007FA088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA088);
  }
  return result;
}

uint64_t sub_1000446E8()
{
  sub_100010218(&qword_1007FA098);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D70E0;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = NSLinkAttributeName;
  *(void *)(inited + 48) = NSParagraphStyleAttributeName;
  *(void *)(inited + 56) = NSUnderlineStyleAttributeName;
  *(void *)(inited + 64) = NSStrikethroughStyleAttributeName;
  *(void *)(inited + 72) = NSStrikethroughColorAttributeName;
  *(void *)(inited + 80) = NSWritingDirectionAttributeName;
  *(void *)(inited + 88) = NSForegroundColorAttributeName;
  *(void *)(inited + 96) = NSAttachmentAttributeName;
  int v1 = NSFontAttributeName;
  int v2 = NSLinkAttributeName;
  unint64_t v3 = NSParagraphStyleAttributeName;
  int v4 = NSUnderlineStyleAttributeName;
  uint64_t v5 = NSStrikethroughStyleAttributeName;
  unsigned int v6 = NSStrikethroughColorAttributeName;
  BOOL v7 = NSWritingDirectionAttributeName;
  int v8 = NSForegroundColorAttributeName;
  uint64_t v9 = NSAttachmentAttributeName;
  uint64_t v10 = sub_1000F690C(inited);
  swift_setDeallocating();
  type metadata accessor for Key(0);
  uint64_t result = swift_arrayDestroy();
  qword_10083CE08 = (uint64_t)v10;
  return result;
}

void sub_10004482C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v22 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  int64_t v11 = 0;
  uint64_t v21 = swift_bridgeObjectRetain() + 104;
  if (!v9) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_7:
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)&v25[0] = *(void *)(*(void *)(a1 + 48) + 8 * v13);
  uint64_t v15 = *(void **)&v25[0];
  sub_10001B648(v14 + 32 * v13, (uint64_t)v25 + 8);
  id v16 = v15;
  while (1)
  {
    sub_100020FC4((uint64_t)v25, (uint64_t)&v27);
    os_log_type_t v20 = v27;
    if (!v27)
    {
      swift_release();
      return;
    }
    if (qword_1007F68D8 != -1) {
      swift_once();
    }
    if (sub_10054208C(v20, qword_10083CE08))
    {
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);

      if (v9) {
        goto LABEL_6;
      }
    }
    else
    {
      [a5 removeAttribute:v20 range:a2, a3];

      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);
      if (v9) {
        goto LABEL_6;
      }
    }
LABEL_8:
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      int64_t v19 = v11;
    }
    else
    {
      unint64_t v18 = *(void *)(v22 + 8 * v17);
      if (v18) {
        goto LABEL_11;
      }
      int64_t v19 = v11 + 1;
      if (v11 + 2 < v10)
      {
        unint64_t v18 = *(void *)(v22 + 8 * (v11 + 2));
        if (v18)
        {
          int64_t v17 = v11 + 2;
LABEL_11:
          unint64_t v9 = (v18 - 1) & v18;
          unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
          int64_t v11 = v17;
          goto LABEL_7;
        }
        int64_t v19 = v11 + 2;
        if (v11 + 3 < v10)
        {
          unint64_t v18 = *(void *)(v22 + 8 * (v11 + 3));
          if (v18)
          {
            int64_t v17 = v11 + 3;
            goto LABEL_11;
          }
          int64_t v17 = v11 + 4;
          int64_t v19 = v11 + 3;
          if (v11 + 4 < v10)
          {
            unint64_t v18 = *(void *)(v22 + 8 * v17);
            if (v18) {
              goto LABEL_11;
            }
            while (v10 - 5 != v11)
            {
              unint64_t v18 = *(void *)(v21 + 8 * v11++);
              if (v18)
              {
                int64_t v17 = v11 + 4;
                goto LABEL_11;
              }
            }
            int64_t v19 = v10 - 1;
          }
        }
      }
    }
    unint64_t v9 = 0;
    uint64_t v26 = 0;
    int64_t v11 = v19;
    memset(v25, 0, sizeof(v25));
  }
  __break(1u);
}

uint64_t sub_100044A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 1;
  unsigned int v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = a1;
  v6[4] = v5;
  swift_retain();
  swift_retain();
  sub_100010218(&qword_1007F8E80);
  sub_100014344();
  sub_100014488(&qword_1007F8E88, &qword_1007F8E80);
  StringProtocol.enumerateSubstrings<A>(in:options:_:)();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v5 + 32))
  {
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
  }
  else
  {
    String.subscript.getter();
    a2 = static String._fromSubstring(_:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return a2;
}

uint64_t sub_100044C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (void *)(a8 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(a8 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *uint64_t v14 = v18;
    if (v18 >= a9)
    {
      uint64_t result = swift_beginAccess();
      *(void *)(a10 + 16) = a5;
      *(void *)(a10 + 24) = a6;
      *(unsigned char *)(a10 + 32) = 0;
      *a7 = 1;
    }
  }
  return result;
}

unint64_t sub_100044D38(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007912E8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

uint64_t sub_100044D84()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

id sub_100044DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_100045AC8(&qword_1007F8C20, type metadata accessor for DocumentReadingOptionKey);
  Class v7 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v8 = [v4 initWithData:isa options:v7 documentAttributes:a4 error:&v12];

  if (v8)
  {
    id v9 = v12;
  }
  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v8;
}

unint64_t sub_100044F1C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100791970, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_100044F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a1;
  uint64_t v89 = a3;
  uint64_t v4 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v87 = v4;
  __chkstk_darwin(v4);
  uint64_t v85 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  __chkstk_darwin(v6);
  id v82 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v80 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  __chkstk_darwin(v8);
  uint64_t v79 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v12 - 8);
  uint64_t v75 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TimeZone();
  __chkstk_darwin(v14 - 8);
  uint64_t v74 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Calendar();
  __chkstk_darwin(v16 - 8);
  unint64_t v72 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v70 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100010218(&qword_1007F9538);
  __chkstk_darwin(v20 - 8);
  id v68 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_1007F9540);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Date.FormatStyle();
  uint64_t v67 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v67 - v29;
  __chkstk_darwin(v31);
  uint64_t v69 = (char *)&v67 - v32;
  __chkstk_darwin(v33);
  uint64_t v71 = (char *)&v67 - v34;
  __chkstk_darwin(v35);
  unint64_t v73 = (char *)&v67 - v36;
  uint64_t v37 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (char *)&v67 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v91 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  os_log_type_t v90 = (char *)&v67 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a2;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v45 = *((void *)v43 + 2);
  unint64_t v44 = *((void *)v43 + 3);
  if (v45 >= v44 >> 1) {
    uint64_t v43 = sub_1002A54A0((char *)(v44 > 1), v45 + 1, 1, v43);
  }
  *((void *)v43 + 2) = v45 + 1;
  uint64_t v46 = &v43[16 * v45];
  uint64_t v47 = v89;
  *((void *)v46 + 4) = v88;
  *((void *)v46 + 5) = v42;
  sub_100045944(v47, (uint64_t)v39);
  uint64_t v48 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v39, 1, v40) == 1)
  {
    sub_10001457C((uint64_t)v39, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v89 = v40;
    v49(v90, v39, v40);
    uint64_t v50 = type metadata accessor for Date.FormatStyle.DateStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v24, 1, 1, v50);
    uint64_t v51 = type metadata accessor for Date.FormatStyle.TimeStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v68, 1, 1, v51);
    static Locale.autoupdatingCurrent.getter();
    static Calendar.autoupdatingCurrent.getter();
    static TimeZone.autoupdatingCurrent.getter();
    static FormatStyleCapitalizationContext.unknown.getter();
    Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
    uint64_t v52 = v76;
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
    Date.FormatStyle.year(_:)();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v78);
    unint64_t v53 = *(void (**)(char *, uint64_t))(v67 + 8);
    v53(v27, v25);
    unint64_t v54 = v79;
    static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
    uint64_t v55 = v69;
    Date.FormatStyle.weekday(_:)();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v54, v81);
    v53(v30, v25);
    uint64_t v56 = v82;
    static Date.FormatStyle.Symbol.Month.abbreviated.getter();
    unint64_t v57 = v71;
    Date.FormatStyle.month(_:)();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v56, v84);
    v53(v55, v25);
    uint64_t v58 = v85;
    static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
    uint64_t v59 = v73;
    Date.FormatStyle.day(_:)();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v87);
    v53(v57, v25);
    sub_100045AC8((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    Date.formatted<A>(_:)();
    v53(v59, v25);
    id v60 = v92;
    uint64_t v61 = v93;
    unint64_t v63 = *((void *)v43 + 2);
    unint64_t v62 = *((void *)v43 + 3);
    if (v63 >= v62 >> 1) {
      uint64_t v43 = sub_1002A54A0((char *)(v62 > 1), v63 + 1, 1, v43);
    }
    *((void *)v43 + 2) = v63 + 1;
    uint64_t v64 = &v43[16 * v63];
    *((void *)v64 + 4) = v60;
    *((void *)v64 + 5) = v61;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v89);
  }
  uint64_t v92 = v43;
  sub_100010218(&qword_100800A70);
  sub_100014488((unint64_t *)&qword_1007F9100, &qword_100800A70);
  uint64_t v65 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_100045944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000459AC()
{
  return swift_deallocObject();
}

uint64_t sub_1000459BC()
{
  return swift_deallocObject();
}

uint64_t sub_1000459CC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100045A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  return sub_100044C94(a1, a2, a3, a4, a5, a6, a7, v7[2], v7[3], v7[4]);
}

uint64_t sub_100045A38()
{
  return swift_deallocObject();
}

void sub_100045A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10004482C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_100045A78()
{
  return swift_deallocObject();
}

uint64_t sub_100045A88()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100045AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100045AC0()
{
  return swift_release();
}

uint64_t sub_100045AC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100045B10()
{
  unint64_t result = qword_1007FA0C0;
  if (!qword_1007FA0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA0C0);
  }
  return result;
}

uint64_t *sub_100045B64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100010218(&qword_100805B00);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v7 + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100045D18(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100805B00);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 48);
    uint64_t v6 = type metadata accessor for Date();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

char *sub_100045E10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100805B00);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *sub_100045F88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100805B00);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(a1, a2, v17);
      uint64_t v18 = *(int *)(v6 + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
      return a1;
    }
    sub_10001457C((uint64_t)a1, &qword_100805B00);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

char *sub_1000461C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100805B00);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *sub_10004633C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100805B00);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(a1, a2, v17);
      uint64_t v18 = *(int *)(v6 + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
      return a1;
    }
    sub_10001457C((uint64_t)a1, &qword_100805B00);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_100046578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004658C);
}

uint64_t sub_10004658C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100805B00);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000465FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046610);
}

uint64_t sub_100046610(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100010218(&qword_100805B00);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100046698(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100805B00);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_100046704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100805B00);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for Journaling.EntrySource()
{
  uint64_t result = qword_1007FA140;
  if (!qword_1007FA140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000467C4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return result;
}

Class sub_100046894()
{
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  if (qword_1007F7620 != -1) {
LABEL_29:
  }
    swift_once();
  uint64_t v0 = qword_1007F7C10;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_10083E8F8;
  unint64_t v2 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F7618 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1007F7C18;
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10083E900;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = v4;
  uint64_t v6 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v6;
  UIMenuElementSize preferredElementSize = v7;
  specialized Array._endMutation()();
  id v34 = v2;
  id v31 = v6;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v37.value.super.Class isa = 0;
  v37.is_nil = 0;
  v30.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v37, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  id v9 = [(objc_class *)v30.super.super.isa children];
  sub_10001B284(0, (unint64_t *)&unk_100807680);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_10:
      unint64_t v35 = v10 & 0xC000000000000001;
      uint64_t v12 = 4;
      uint64_t v32 = v11;
      unint64_t v33 = v10;
      while (1)
      {
        if (v35) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(v10 + 8 * v12);
        }
        uint64_t v14 = v13;
        uint64_t v15 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        self;
        uint64_t v16 = swift_dynamicCastObjCClass();
        if (!v16) {
          goto LABEL_12;
        }
        uint64_t v17 = (void *)v16;
        id v18 = v14;
        id v19 = [v17 title];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        id v23 = [v34 title];
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

        if (v20 == v24 && v22 == v26)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v11 = v32;
        }
        else
        {
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v32;
          if ((v28 & 1) == 0)
          {

            unint64_t v10 = v33;
LABEL_12:

            if (v15 == v11) {
              break;
            }
            goto LABEL_13;
          }
        }
        [v17 setState:1];

        unint64_t v10 = v33;
        if (v15 == v11) {
          break;
        }
LABEL_13:
        ++v12;
      }
    }
  }

  swift_bridgeObjectRelease_n();
  return v30.super.super.isa;
}

void sub_100046D38()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC7Journal10MosaicCell_wantsResizeMenuDismissalPreview) = 0;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC7Journal10MosaicCell_journalAsset];
      if (v7
        && ((swift_getObjectType(), (uint64_t v8 = swift_conformsToProtocol2()) != 0) ? (v9 = v8) : (v9 = 0),
            v8 ? (unint64_t v10 = v7) : (unint64_t v10 = 0),
            v10))
      {
        uint64_t v11 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
        type metadata accessor for MainActor();
        id v12 = v7;
        swift_unknownObjectRetain();
        uint64_t v13 = static MainActor.shared.getter();
        uint64_t v14 = (void *)swift_allocObject();
        v14[2] = v13;
        v14[3] = &protocol witness table for MainActor;
        v14[4] = v6;
        v14[5] = v10;
        v14[6] = v9;
        sub_100328A60((uint64_t)v2, (uint64_t)&unk_1007FA1D8, (uint64_t)v14);

        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
}

id sub_100046F9C()
{
  id v1 = [objc_allocWithZone((Class)UIDragPreviewParameters) init];
  [v0 bounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  if (qword_1007F70D0 != -1) {
    swift_once();
  }
  v15.origin.CGFloat x = v3;
  v15.origin.CGFloat y = v5;
  v15.size.CGFloat width = v7;
  v15.size.CGFloat height = v9;
  CGRect v16 = CGRectInset(v15, *(CGFloat *)&qword_10083D670, *(CGFloat *)&qword_10083D670);
  id v10 = [self bezierPathWithRoundedRect:v16.origin.x, v16.origin.y, v16.size.width, v16.size.height, 4.0];
  [v1 setVisiblePath:v10];

  uint64_t v11 = self;
  id v12 = v1;
  id v13 = [v11 clearColor];
  [v12 setBackgroundColor:v13];

  return v12;
}

uint64_t sub_1000473E8()
{
  return swift_deallocObject();
}

void sub_100047420()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal10MosaicCell_wantsResizeMenuDismissalPreview) = 1;
}

uint64_t sub_10004743C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004744C()
{
  return swift_release();
}

id sub_100047454()
{
  if ((v0[OBJC_IVAR____TtC7Journal10MosaicCell_showResizeMenu] & 1) == 0) {
    return 0;
  }
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  CGFloat v3 = self;
  v7[4] = sub_100047588;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1005D2ABC;
  v7[3] = &unk_100797380;
  double v4 = _Block_copy(v7);
  CGFloat v5 = v0;
  swift_retain();
  swift_release();
  id v1 = [v3 configurationWithIdentifier:0 previewProvider:0 actionProvider:v4];
  swift_release();
  _Block_release(v4);
  return v1;
}

Class sub_100047588()
{
  return sub_100046894();
}

uint64_t sub_100047590()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1000475C8()
{
}

uint64_t sub_1000475D0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100047618(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  CGFloat v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_100383838(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000476EC(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA300);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_100048CD4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    _s9BookAssetC8BookDataVMa(0);
    v8[12] = 3;
    type metadata accessor for Date();
    sub_100048C8C(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000478F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FA2F0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  CGFloat v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s9BookAssetC8BookDataVMa(0);
  __chkstk_darwin(v10);
  id v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100048CD4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v29 = 0;
  *id v12 = KeyedDecodingContainer.decode(_:forKey:)();
  v12[1] = v16;
  char v28 = 1;
  v12[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[3] = v17;
  char v27 = 2;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v21[1] = 0;
  v12[4] = v18;
  v12[5] = v19;
  type metadata accessor for Date();
  char v26 = 3;
  sub_100048C8C(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  sub_10002C4EC(v13, (uint64_t)v12 + *(int *)(v22 + 28), (uint64_t *)&unk_1007FC470);
  sub_100048D28((uint64_t)v12, v23);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_100048D8C((uint64_t)v12);
}

uint64_t sub_100047C98()
{
  uint64_t result = 0x6449616964656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x726F68747561;
      break;
    case 3:
      uint64_t result = 0x7550664F656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100047D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100048DE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100047D54(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100047D60(uint64_t a1)
{
  unint64_t v2 = sub_100048CD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100047D9C(uint64_t a1)
{
  unint64_t v2 = sub_100048CD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100047DD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000478F4(a1, a2);
}

uint64_t sub_100047DF0(void *a1)
{
  return sub_1000476EC(a1);
}

uint64_t sub_100047E08()
{
  uint64_t v1 = sub_100010218(&qword_1007F9E90);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_5;
  }
  swift_retain();
  sub_10003A5B0((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1000494F0((uint64_t)v3);
    return 0;
  }
  sub_100049488((uint64_t)v3, (uint64_t)v8, _s9BookAssetC8BookDataVMa);
  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = *((void *)v8 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v8 + 24);
  *(void *)(inited + 56) = *((void *)v8 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10023DA38(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  sub_100048D8C((uint64_t)v8);
  return v10;
}

uint64_t sub_10004803C()
{
  return swift_release();
}

id sub_10004804C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9BookAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100048094()
{
  return _s9BookAssetCMa(0);
}

uint64_t _s9BookAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1007FA208);
}

uint64_t sub_1000480BC()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100048100(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    CGFloat v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v10, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t sub_10004829C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_10004837C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  CGFloat v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

void *sub_1000484C8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1000486A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1000487BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_100048964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048978);
}

uint64_t sub_100048978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100048A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048A40);
}

uint64_t sub_100048A40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s9BookAssetC8BookDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1007FA270);
}

void sub_100048B0C()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100048BB0()
{
  return swift_retain();
}

uint64_t sub_100048BC0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100048BD8()
{
  return sub_100047E08();
}

uint64_t sub_100048BFC()
{
  return sub_100048C8C(&qword_1007F9E98, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_100048C44()
{
  return sub_100048C8C(&qword_1007FA2B0, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_100048C8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100048CD4()
{
  unint64_t result = qword_1007FA2F8;
  if (!qword_1007FA2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA2F8);
  }
  return result;
}

uint64_t sub_100048D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048D8C(uint64_t a1)
{
  uint64_t v2 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100048DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7550664F656D6974 && a2 == 0xEE00657361686372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_100048FB8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v51 = a7;
  uint64_t v52 = a8;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v50 = a9;
  uint64_t v53 = sub_100010218(&qword_1007F9E80);
  __chkstk_darwin(v53);
  uint64_t v54 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s9BookAssetC8BookDataVMa(0);
  __chkstk_darwin(v45);
  uint64_t v13 = (id *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v14);
  int v16 = (id *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v44 - v22;
  UUID.init()();
  uint64_t v24 = (char *)objc_allocWithZone((Class)_s9BookAssetCMa(0));
  *(void *)&v24[OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata] = 0;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
  uint64_t v25 = (char *)sub_1001817C4((uint64_t)v20, 5, a1);
  char v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v23, v17);
  if (a6)
  {
    *int v16 = a6;
    swift_storeEnumTagMultiPayload();
    char v27 = v25;
    id v44 = a6;
    UUID.init()();
    uint64_t v28 = UUID.uuidString.getter();
    uint64_t v30 = v29;
    v26(v23, v17);
    type metadata accessor for AssetAttachment(0);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
    sub_100049488((uint64_t)v16, v31 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    uint64_t v32 = (uint64_t *)(v31 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
    *uint64_t v32 = v28;
    v32[1] = v30;
    unint64_t v33 = &v27[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v33 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
    id v34 = v25;
  }
  uint64_t v35 = v47;
  *uint64_t v13 = v46;
  v13[1] = v35;
  uint64_t v37 = v49;
  uint64_t v36 = v50;
  void v13[2] = v48;
  _DWORD v13[3] = v37;
  uint64_t v38 = v52;
  v13[4] = v51;
  v13[5] = v38;
  sub_10002C4EC(v36, (uint64_t)v13 + *(int *)(v45 + 28), (uint64_t *)&unk_1007FC470);
  uint64_t v39 = v54;
  sub_100049488((uint64_t)v13, v54, _s9BookAssetC8BookDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007FA308);
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v40 + *(void *)(*(void *)v40 + 104);
  uint64_t v42 = sub_100010218(&qword_1007F9E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  *(_OWORD *)(v40 + *(void *)(*(void *)v40 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v39, v40 + *(void *)(*(void *)v40 + 120), &qword_1007F9E80);
  *(void *)&v25[OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata] = v40;

  swift_release();
  return v25;
}

uint64_t sub_100049488(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000494F0(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioRecordingLiveActivityStopButton.Phase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9BookAssetC8BookDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000496ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9BookAssetC8BookDataV10CodingKeysOMa()
{
  return &_s9BookAssetC8BookDataV10CodingKeysON;
}

unint64_t sub_1000496E8()
{
  unint64_t result = qword_1007FA310;
  if (!qword_1007FA310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA310);
  }
  return result;
}

unint64_t sub_100049740()
{
  unint64_t result = qword_1007FA318;
  if (!qword_1007FA318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA318);
  }
  return result;
}

unint64_t sub_100049798()
{
  unint64_t result = qword_1007FA320;
  if (!qword_1007FA320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA320);
  }
  return result;
}

id sub_1000497EC()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v0];
  id v6 = [v5 mutableString];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  [v6 replaceOccurrencesOfString:v7 withString:v8 options:1024 range:[v5 length]];

  static CharacterSet.whitespacesAndNewlines.getter();
  sub_100049980();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v9 = [objc_allocWithZone((Class)NSAttributedString) initWithAttributedString:v5];

  return v9;
}

void sub_100049980()
{
  id v1 = [v0 mutableString];
  Class isa = CharacterSet._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 rangeOfCharacterFromSet:isa];
  uint64_t v5 = v4;

  if (v5) {
    BOOL v6 = v3 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    while (1)
    {
      NSString v7 = String._bridgeToObjectiveC()();
      [v0 replaceCharactersInRange:0 withString:v5];

      id v8 = [v0 string];
      if (!v8) {
        break;
      }
      id v9 = v8;
      Class v10 = CharacterSet._bridgeToObjectiveC()().super.isa;
      id v11 = [v9 rangeOfCharacterFromSet:v10];
      uint64_t v5 = v12;

      if (v5) {
        BOOL v13 = v11 == 0;
      }
      else {
        BOOL v13 = 0;
      }
      if (!v13) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_11:
    id v14 = [v0 mutableString];
    Class v15 = CharacterSet._bridgeToObjectiveC()().super.isa;
    int v16 = (char *)[v14 rangeOfCharacterFromSet:v15 options:4];
    uint64_t v18 = v17;

    while (v18)
    {
      if (&v16[v18] != [v0 length]) {
        break;
      }
      NSString v19 = String._bridgeToObjectiveC()();
      [v0 replaceCharactersInRange:v16 withString:v18];

      id v20 = [v0 mutableString];
      Class v21 = CharacterSet._bridgeToObjectiveC()().super.isa;
      int v16 = (char *)[v20 rangeOfCharacterFromSet:v21 options:4];
      uint64_t v18 = v22;
    }
  }
}

uint64_t sub_100049B7C(void *a1)
{
  NSAttributedStringKey v2 = v1;
  id v4 = objc_allocWithZone((Class)NSRegularExpression);
  uint64_t result = (uint64_t)sub_10004A408(0x5D7D4C7B705C5BLL, 0xE700000000000000, 0);
  BOOL v6 = (void *)result;
  if (result)
  {
    NSString v7 = [(NSString *)v1 string];
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v8 = [(NSString *)v1 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = String.count.getter();
    swift_bridgeObjectRelease();
    id v10 = [v6 matchesInString:v7 options:0 range:0];

    sub_10001B284(0, &qword_1007FA340);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12)
    {
      while (1)
      {
        char v27 = v6;
        NSAttributedStringKey v28 = v2;
        if (v12 < 1) {
          break;
        }
        unint64_t v29 = v11 & 0xC000000000000001;
        sub_100010218(&qword_10080A220);
        uint64_t v13 = 0;
        NSAttributedStringKey v2 = NSFontAttributeName;
        BOOL v6 = (void *)v11;
        while (1)
        {
          id v14 = v29 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v11 + 8 * v13 + 32);
          Class v15 = v14;
          v32[0] = NSFontAttributeName;
          v32[4] = sub_10001B284(0, (unint64_t *)&unk_10080A670);
          v32[1] = a1;
          int v16 = (void *)static _DictionaryStorage.allocate(capacity:)();
          sub_10004A8F4((uint64_t)v32, (uint64_t)&v30);
          unint64_t v11 = v30;
          uint64_t v17 = NSFontAttributeName;
          id v18 = a1;
          unint64_t v19 = sub_10001B6A4(v11);
          if (v20) {
            break;
          }
          v16[(v19 >> 6) + 8] |= 1 << v19;
          *(void *)(v16[6] + 8 * v19) = v11;
          sub_10002102C(&v31, (_OWORD *)(v16[7] + 32 * v19));
          uint64_t v21 = v16[2];
          BOOL v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_16;
          }
          ++v13;
          v16[2] = v23;
          sub_100010218((uint64_t *)&unk_10080A7D0);
          swift_arrayDestroy();
          type metadata accessor for Key(0);
          sub_10004A95C((unint64_t *)&qword_10080A680, type metadata accessor for Key);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_release();
          id v25 = [v15 range];
          -[NSString addAttributes:range:](v28, "addAttributes:range:", isa, v25, v26);

          unint64_t v11 = (unint64_t)v6;
          if (v12 == v13)
          {

            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v12 = result;
        if (!result) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_18:

LABEL_19:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_100049F54()
{
  id v2 = [v0 length];
  sub_100010218(&qword_1007FA090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 40) = NSHTMLTextDocumentType;
  uint64_t v5 = NSDocumentTypeDocumentAttribute;
  BOOL v6 = NSHTMLTextDocumentType;
  sub_100396D94(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_10004A95C(&qword_1007F8C80, type metadata accessor for DocumentAttributeKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v28[0] = 0;
  id v8 = [v0 dataFromRange:0 documentAttributes:isa error:v28];

  id v9 = v28[0];
  if (v8)
  {
    uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    switch(v12 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10) {
          __break(1u);
        }
        sub_100040D64(v10, v12);
        swift_retain();
        uint64_t v20 = sub_10004A5EC((int)v10, v10 >> 32, v12 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10004A858);
        if (v1) {
          goto LABEL_25;
        }
        id v8 = (id)v20;
        uint64_t v22 = v21;
        sub_100040DD0(v10, v12);
        if (!v22) {
          goto LABEL_13;
        }
        goto LABEL_20;
      case 2uLL:
        uint64_t v14 = *(void *)(v10 + 16);
        uint64_t v15 = *(void *)(v10 + 24);
        sub_100040D64(v10, v12);
        swift_retain();
        swift_retain();
        uint64_t v16 = sub_10004A5EC(v14, v15, v12 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10004A858);
        if (v1)
        {
          swift_release();
          swift_release();
          __break(1u);
LABEL_25:
          sub_100040DD0(v10, v12);
          __break(1u);
          JUMPOUT(0x10004A3F8);
        }
        id v8 = (id)v16;
        uint64_t v18 = v17;
        swift_release();
        swift_release();
        if (v18) {
          goto LABEL_20;
        }
LABEL_13:
        uint64_t v26 = v10;
        unint64_t v27 = v12;
        sub_100040D64(v10, v12);
        sub_100010218(&qword_1007FA328);
        if (swift_dynamicCast())
        {
          sub_10001B3BC(v24, (uint64_t)v28);
          sub_10002E0BC(v28, v29);
          if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
          {
            sub_10002E0BC(v28, v29);
            dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
            sub_100040DD0(v10, v12);
            id v8 = *(id *)&v24[0];
            _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);
            goto LABEL_21;
          }
          _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);
        }
        else
        {
          uint64_t v25 = 0;
          memset(v24, 0, sizeof(v24));
          sub_10004A890((uint64_t)v24);
        }
        uint64_t v19 = sub_10004A4E4(v10, v12);
LABEL_19:
        id v8 = (id)v19;
LABEL_20:
        sub_100040DD0(v10, v12);
LABEL_21:
        sub_100040DD0(v10, v12);
        break;
      case 3uLL:
        memset(v28, 0, 14);
        goto LABEL_9;
      default:
        v28[0] = (id)v10;
        LOWORD(v28[1]) = v12;
        BYTE2(v28[1]) = BYTE2(v12);
        BYTE3(v28[1]) = BYTE3(v12);
        BYTE4(v28[1]) = BYTE4(v12);
        BYTE5(v28[1]) = BYTE5(v12);
LABEL_9:
        uint64_t v19 = static String._fromUTF8Repairing(_:)();
        goto LABEL_19;
    }
  }
  else
  {
    uint64_t v13 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v8;
}

id sub_10004A408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_10004A4E4(uint64_t a1, unint64_t a2)
{
  sub_100040D64(a1, a2);
  sub_10004A69C(a1, a2);
  sub_100040DD0(a1, a2);
  uint64_t v4 = static String._fromUTF8Repairing(_:)();
  swift_release();
  return v4;
}

uint64_t sub_10004A55C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_10004A598(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_10004A5EC(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_10004A598(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_10004A69C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_100010218(&qword_1007FA338);
          id v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_100040D64(a1, a2);
        uint64_t v13 = Data._copyContents(initializing:)();
        sub_100040DD0(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x10004A848);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_10004A858@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004A890(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA330);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004A8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_10080A7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004A95C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_10004A9A4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal18JournalDividerView_dividerView;
  id v10 = objc_allocWithZone((Class)UIView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for JournalDividerView();
  id v12 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = self;
  uint64_t v14 = (char *)v12;
  id v15 = [v13 clearColor];
  [v14 setBackgroundColor:v15];

  uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC7Journal18JournalDividerView_dividerView];
  id v17 = [v13 separatorColor];
  [v16 setBackgroundColor:v17];

  [v14 addSubview:v16];
  [v14 setClipsToBounds:0];

  return v14;
}

id sub_10004AB34(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal18JournalDividerView_dividerView;
  id v4 = objc_allocWithZone((Class)UIView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for JournalDividerView();
  [super initWithCoder:a1];
  if (v6)
  {
    id v7 = self;
    id v8 = (char *)v6;
    id v9 = [v7 clearColor];
    [v8 setBackgroundColor:v9];

    id v10 = *(void **)&v8[OBJC_IVAR____TtC7Journal18JournalDividerView_dividerView];
    id v11 = [v7 separatorColor];
    [v10 setBackgroundColor:v11];

    [v8 addSubview:v10];
    [v8 setClipsToBounds:0];
  }
  return v6;
}

id sub_10004ADE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalDividerView();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalDividerView()
{
  return self;
}

void sub_10004AE50()
{
  id v0 = [self configurationWithPointSize:7 weight:1 scale:12.0];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self _systemImageNamed:v1 withConfiguration:v0];

  qword_10083CE20 = (uint64_t)v2;
}

id sub_10004AEF8(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10083CE28);
}

__n128 sub_10004AF0C()
{
  __asm { FMOV            V0.2D, #20.0 }
  xmmword_10083CE30 = (__int128)result;
  return result;
}

id sub_10004AF1C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_circularPlatter;
  id v10 = objc_allocWithZone((Class)UIView);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_xImageView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_blurView;
  id v14 = [self effectWithStyle:8];
  id v15 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v14];

  *(void *)&v11[v13] = v15;
  uint64_t v16 = &v11[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_tapCompletion];
  *(void *)uint64_t v16 = AudioRecordingActivityState.hash(into:);
  *((void *)v16 + 1) = 0;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for CanvasAssetDeleteView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_10004B0C8();

  return v17;
}

void sub_10004B0C8()
{
  NSString v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_circularPlatter];
  [v0 addSubview:v1];
  [v1 insertSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_blurView] atIndex:0];
  if (qword_1007F68F0 != -1) {
    swift_once();
  }
  double v2 = *(double *)&xmmword_10083CE30;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v1 widthAnchor];
  id v4 = [v3 constraintEqualToConstant:v2];

  [v4 setActive:1];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v1 heightAnchor];
  id v6 = [v1 widthAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 multiplier:1.0];

  [v7 setActive:1];
  id v8 = [v1 superview];
  if (v8)
  {
    uint64_t v9 = v8;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v1 topAnchor];
    id v11 = [v9 topAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:6.0];
    id v13 = v12;
    [v13 setActive:1];
  }
  id v14 = [v1 superview];
  if (v14)
  {
    id v15 = v14;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v1 trailingAnchor];
    id v17 = [v15 trailingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:-6.0];
    id v19 = v18;
    [v19 setActive:1];
  }
  id v20 = [objc_allocWithZone((Class)UIImageView) init];
  [v1 bounds];
  [v20 setFrame:];
  if (qword_1007F68E0 != -1) {
    swift_once();
  }
  [v20 setImage:qword_10083CE20];
  if (qword_1007F68E8 != -1) {
    swift_once();
  }
  [v20 setTintColor:qword_10083CE28];
  [v1 addSubview:v20];
  id v21 = [v20 superview];
  if (v21)
  {
    uint64_t v22 = v21;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v20 centerXAnchor];
    id v24 = [v22 centerXAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:0.0];
    id v26 = v25;
    [v26 setActive:1];
  }
  id v27 = [v20 superview];
  if (v27)
  {
    NSAttributedStringKey v28 = v27;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v20 centerYAnchor];
    id v30 = [v28 centerYAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:0.0];
    id v32 = v31;
    [v32 setActive:1];
  }
  id v37 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"tapAction:"];
  [v0 addGestureRecognizer:];
  if (qword_1007F79C0 != -1) {
    swift_once();
  }
  NSString v33 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityLabel:v33];

  UIAccessibilityTraits v34 = UIAccessibilityTraitButton;
  unint64_t v35 = (unint64_t)[v0 accessibilityTraits];
  if ((v34 & ~v35) != 0) {
    UIAccessibilityTraits v36 = v34;
  }
  else {
    UIAccessibilityTraits v36 = 0;
  }
  [v0 setAccessibilityTraits:v36 | v35];
}

id sub_10004B74C()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CanvasAssetDeleteView();
  [super layoutSubviews];
  NSString v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_circularPlatter];
  id v2 = [v1 layer];
  [v1 frame];
  [v2 setCornerRadius:v3 * 0.5];

  id v4 = [v1 layer];
  [v4 setMasksToBounds:1];

  id v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_blurView];
  [v1 bounds];
  return [v5 setFrame:];
}

id sub_10004B884()
{
  return sub_10004CECC(type metadata accessor for CanvasAssetDeleteView);
}

uint64_t type metadata accessor for CanvasAssetDeleteView()
{
  return self;
}

void sub_10004B930()
{
  id v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleBody];
  id v2 = [v1 fontDescriptor];
  id v3 = [v1 fontDescriptor];
  unsigned int v4 = [v3 symbolicTraits];

  id v5 = [v2 fontDescriptorWithSymbolicTraits:v4 | 2];
  if (v5)
  {
    id v6 = [v0 fontWithDescriptor:v5 size:0.0];

    if (v6)
    {

      id v1 = v6;
    }
  }
  qword_10083CE40 = (uint64_t)v1;
}

void sub_10004BA38()
{
  if (qword_1007F68F8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10083CE40;
  id v1 = self;
  id v2 = v0;
  id v3 = [v1 configurationWithFont:v2 scale:1];

  qword_10083CE48 = (uint64_t)v3;
}

void sub_10004BAD4()
{
  id v0 = [self tertiarySystemBackgroundColor];
  id v1 = [v0 colorWithAlphaComponent:0.5];

  qword_10083CE50 = (uint64_t)v1;
}

id sub_10004BB3C(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_systemWhiteColor, &qword_10083CE58);
}

void sub_10004BCA8()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIVisualEffectView) init];
  id v3 = [self _effectWithBlurRadius:10.0 scale:1.0];
  [v2 setEffect:v3];

  unsigned int v4 = self;
  id v5 = v2;
  id v6 = [v4 blackColor];
  id v7 = [v6 colorWithAlphaComponent:0.2];

  [v5 setBackgroundColor:v7];
  [v1 addSubview:v5];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  id v45 = [objc_allocWithZone((Class)UIStackView) init];
  [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v45 setAxis:0];
  [v45 setDistribution:2];
  [v45 setAlignment:3];
  [v1 addSubview:v45];
  id v8 = [v45 superview];
  uint64_t v9 = v45;
  if (v8)
  {
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v45 centerXAnchor];
    id v11 = [v8 centerXAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:0.0];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
    uint64_t v9 = v45;
  }
  id v14 = [v9 superview];
  if (v14)
  {
    id v15 = v14;
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v45 centerYAnchor];
    id v17 = [v15 centerYAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:0.0];
    if (v18)
    {
      id v19 = v18;
      [v19 setActive:1];
    }
  }
  if (qword_1007F7410 != -1) {
    swift_once();
  }
  double v20 = *(double *)&qword_10083DA20;
  id v21 = [v45 superview];
  if (v21)
  {
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v45 leadingAnchor];
    id v23 = [v21 leadingAnchor];
    id v24 = [v22 constraintGreaterThanOrEqualToAnchor:v23];

    [v24 setConstant:v20];
    if (v24)
    {
      id v25 = v24;
      [v25 setActive:1];
    }
  }
  double v26 = *(double *)&qword_10083DA20;
  id v27 = [v45 superview];
  NSAttributedStringKey v28 = v45;
  if (v27)
  {
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v45 trailingAnchor];
    id v30 = [v27 trailingAnchor];
    id v31 = [v29 constraintLessThanOrEqualToAnchor:v30];

    [v31 setConstant:v26];
    if (v31)
    {
      id v32 = v31;
      [v32 setActive:1];
    }
    NSAttributedStringKey v28 = v45;
  }
  [v28 setMaximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  if (qword_1007F6900 != -1) {
    swift_once();
  }
  id v33 = (id)qword_10083CE48;
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [self systemImageNamed:v34 withConfiguration:v33];

  if (v35)
  {
    if (qword_1007F6908 != -1) {
      swift_once();
    }
    id v36 = [v35 imageWithTintColor:qword_10083CE50];
  }
  else
  {
    id v36 = 0;
  }
  id v37 = [objc_allocWithZone((Class)UIImageView) initWithImage:v36];
  [v37 setAdjustsImageSizeForAccessibilityContentSizeCategory:1];
  if (qword_1007F6908 != -1) {
    swift_once();
  }
  [v37 setTintColor:qword_10083CE50];
  [v37 setOverrideUserInterfaceStyle:1];
  [v45 addArrangedSubview:v37];
  id v38 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v39 = OBJC_IVAR____TtC7Journal23CanvasAssetOverflowView_overflowCountLabel;
  uint64_t v40 = *(void **)&v1[OBJC_IVAR____TtC7Journal23CanvasAssetOverflowView_overflowCountLabel];
  *(void *)&v1[OBJC_IVAR____TtC7Journal23CanvasAssetOverflowView_overflowCountLabel] = v38;

  uint64_t v41 = *(void **)&v1[v39];
  if (v41)
  {
    uint64_t v42 = qword_1007F6910;
    id v43 = v41;
    if (v42 != -1) {
      swift_once();
    }
    [v43 setTextColor:qword_10083CE58];
    if (qword_1007F68F8 != -1) {
      swift_once();
    }
    [v43 setFont:qword_10083CE40];
    [v43 setPreferredVibrancy:1];
    [v43 setAdjustsFontForContentSizeCategory:1];
    [v43 setAdjustsFontSizeToFitWidth:1];
    [v45 addArrangedSubview:v43];
    id v44 = [objc_allocWithZone((Class)UIButton) init];
    [v44 addTarget:v1 action:"tapActionWithSender:" forControlEvents:64];
    [v1 addSubview:v44];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

void sub_10004C4F8(uint64_t a1)
{
  id v3 = [self mainBundle];
  v11._object = (void *)0x8000000100688390;
  v4._uint64_t countAndFlagsBits = 25637;
  v4._object = (void *)0xE200000000000000;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v11);

  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1006D6280;
  *(void *)(v6 + 56) = &type metadata for Int;
  *(void *)(v6 + 64) = &protocol witness table for Int;
  *(void *)(v6 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasAssetOverflowView_overflowCountLabel);
  if (v7)
  {
    id v8 = v7;
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setText:v9];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id sub_10004C68C()
{
  return sub_10004CECC(type metadata accessor for CanvasAssetOverflowView);
}

uint64_t type metadata accessor for CanvasAssetOverflowView()
{
  return self;
}

void sub_10004C718()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v1 = [self configurationWithFont:v0 scale:2];

  qword_10083CE60 = (uint64_t)v1;
}

id sub_10004C79C()
{
  if (qword_1007F7BF0 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10083E8D8;
  if (qword_10083E8D8)
  {
    if (qword_1007F6918 != -1) {
      swift_once();
    }
    id result = [v0 imageWithConfiguration:qword_10083CE60];
  }
  else
  {
    id result = 0;
  }
  qword_10083CE68 = (uint64_t)result;
  return result;
}

id sub_10004C854(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10083CE70);
}

id sub_10004C868(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

id sub_10004C8AC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal19CanvasAssetPlayView_accessoryButton;
  id v10 = objc_allocWithZone((Class)UIButton);
  Swift::String v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  id v12 = &v11[OBJC_IVAR____TtC7Journal19CanvasAssetPlayView_tapCompletion];
  *(void *)id v12 = AudioRecordingActivityState.hash(into:);
  *((void *)v12 + 1) = 0;
  v11[OBJC_IVAR____TtC7Journal19CanvasAssetPlayView_isPlaying] = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for CanvasAssetPlayView();
  id v13 = [super initWithFrame:a1, a2, a3, a4];
  id v14 = [v13 layer];
  [v14 setCornerRadius:a4 * 0.5];

  id v15 = [v13 layer];
  [v15 setMasksToBounds:1];

  sub_10004CAE4();
  return v13;
}

void sub_10004CAE4()
{
  id v1 = v0;
  id v2 = [self effectWithStyle:7];
  id v3 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v2];

  id v4 = v3;
  [v1 bounds];
  [v4 setFrame:];

  [v1 insertSubview:v4 atIndex:0];
  Swift::String v5 = *(void **)&v1[OBJC_IVAR____TtC7Journal19CanvasAssetPlayView_accessoryButton];
  if (qword_1007F6920 != -1) {
    swift_once();
  }
  [v5 setImage:qword_10083CE68 forState:0];
  if (qword_1007F6928 != -1) {
    swift_once();
  }
  [v5 setTintColor:qword_10083CE70];
  [v5 addTarget:v1 action:"tapActionWithSender:" forControlEvents:64];
  [v1 addSubview:v5];
  id v6 = [v5 superview];
  if (v6)
  {
    id v7 = v6;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v8 = [v5 centerYAnchor];
    id v9 = [v7 centerYAnchor];
    id v10 = [v8 constraintEqualToAnchor:v9];

    [v10 setConstant:0.0];
    if (v10)
    {
      id v11 = v10;
      [v11 setActive:1];
    }
  }
  id v12 = [v5 superview];
  if (v12)
  {
    id v18 = v12;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v5 centerXAnchor];
    id v14 = [v18 centerXAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:0.0];
    if (v15)
    {
      id v16 = v15;
      [v16 setActive:1];

      id v4 = v16;
    }

    objc_super v17 = v18;
  }
  else
  {
    objc_super v17 = v4;
  }
}

uint64_t sub_10004CE44(char *a1, uint64_t a2, void *a3, void *a4)
{
  Swift::String v5 = *(void (**)(uint64_t))&a1[*a4];
  id v6 = a3;
  id v7 = a1;
  uint64_t v8 = swift_retain();
  v5(v8);

  return swift_release();
}

id sub_10004CEB4()
{
  return sub_10004CECC(type metadata accessor for CanvasAssetPlayView);
}

id sub_10004CECC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasAssetPlayView()
{
  return self;
}

void sub_10004CF78()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_circularPlatter;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_xImageView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_blurView;
  id v4 = [self effectWithStyle:8];
  id v5 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v4];

  *(void *)&v0[v3] = v5;
  id v6 = &v0[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_tapCompletion];
  *(void *)id v6 = AudioRecordingActivityState.hash(into:);
  *((void *)v6 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10004D09C(char *a1, char *a2)
{
  return sub_10017D00C(*a1, *a2);
}

Swift::Int sub_10004D0A8()
{
  return Hasher._finalize()();
}

uint64_t sub_10004D140()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10004D1C4()
{
  return Hasher._finalize()();
}

uint64_t sub_10004D258@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100791B68, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10004D2B8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x4D664F6574617473;
  if (*v1) {
    uint64_t v2 = 0x4D6C7566646E696DLL;
  }
  unint64_t v3 = 0xEB00000000646E69;
  if (*v1) {
    unint64_t v3 = 0xEE00736574756E69;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10004D30C()
{
  type metadata accessor for HealthManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10004E808();
  qword_10083CE78 = v0;
  return result;
}

id sub_10004D384()
{
  id v1 = *(id *)(v0 + 24);
  if (v1)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    unsigned int v3 = [v1 BOOLForKey:v2];

    if (v3)
    {
      NSString v4 = String._bridgeToObjectiveC()();
      id v1 = [v1 BOOLForKey:v4];
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

id sub_10004D528(char a1)
{
  if (![self isHealthDataAvailable])
  {
    char v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "HealthKit is not available on this device", v7, 2u);
      swift_slowDealloc();
    }
LABEL_6:

    return 0;
  }
  sub_10004E938();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if ((a1 & 1) == 0)
  {
    id v4 = [ObjCClassFromMetadata stateOfMindType];
    goto LABEL_8;
  }
  id v4 = [ObjCClassFromMetadata categoryTypeForIdentifier:HKCategoryTypeIdentifierMindfulSession];
  if (!v4)
  {
    char v5 = Logger.logObject.getter();
    uint64_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, (os_log_type_t)v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)id v11 = 136315138;
      sub_10011EA98(0x4D6C7566646E696DLL, 0xEE00736574756E69, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, (os_log_type_t)v10, "Couldn't create a HKSampleType for %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }
    goto LABEL_6;
  }
LABEL_8:
  id v8 = [v1[2] authorizationStatusForType:v4];
  if (v8 && ([v1 hasSeenBothHealthTCCs] & 1) != 0) {
    [v1 setHasSeenBothHealthTCCs:1];
  }

  return v8;
}

uint64_t sub_10004D7C0(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return _swift_task_switch(sub_10004D7E0, 0, 0);
}

uint64_t sub_10004D7E0()
{
  if ([self isHealthDataAvailable])
  {
    uint64_t v1 = v0[4];
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      unsigned int v3 = (unsigned char *)(v1 + 32);
      sub_10004E938();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      swift_bridgeObjectRetain();
      while ((*v3 & 1) != 0)
      {
        if ([ObjCClassFromMetadata categoryTypeForIdentifier:HKCategoryTypeIdentifierMindfulSession]) {
          goto LABEL_5;
        }
LABEL_8:
        ++v3;
        if (!--v2)
        {
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      id v5 = [ObjCClassFromMetadata stateOfMindType];
LABEL_5:
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_8;
    }
LABEL_18:
    uint64_t v11 = sub_100388740((unint64_t)_swiftEmptyArrayStorage);
    v0[6] = v11;
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    {
      sub_1000F6B3C((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v12 = v14;
    }
    else
    {
      uint64_t v12 = &_swiftEmptySetSingleton;
    }
    v0[7] = v12;
    id v13 = (void *)swift_task_alloc();
    v0[8] = v13;
    *id v13 = v0;
    v13[1] = sub_10004DAD0;
    return HKHealthStore.requestAuthorization(toShare:read:)(v11, v12);
  }
  else
  {
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "HealthKit is not available on this device", v8, 2u);
      swift_slowDealloc();
    }

    id v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_10004DAD0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_10004DCA0;
  }
  else {
    uint64_t v2 = sub_10004DC34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004DC34()
{
  [*(id *)(v0 + 40) setHasSeenBothHealthTCCs:1];
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004DCA0()
{
  uint64_t v12 = v0;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[2] = sub_10011EA98(v4, v6, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v10 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Encountered error when requesting authorization from HKHealthStore for healthTypes: %s: %@", (uint8_t *)v3, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10004DF3C(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return _swift_task_switch(sub_10004DF60, 0, 0);
}

uint64_t sub_10004DF60()
{
  if ([self isHealthDataAvailable])
  {
    sub_10004E938();
    id v1 = [(id)swift_getObjCClassFromMetadata() categoryTypeForIdentifier:HKCategoryTypeIdentifierMindfulSession];
    v0[18] = v1;
    if (v1)
    {
      uint64_t v2 = v1;
      self;
      uint64_t v3 = swift_dynamicCastObjCClass();
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = v0[17];
        id v6 = v2;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        Class v8 = Date._bridgeToObjectiveC()().super.isa;
        id v9 = [self categorySampleWithType:v4 value:0 startDate:isa endDate:v8];
        v0[19] = v9;

        uint64_t v10 = *(void **)(v5 + 16);
        v0[2] = v0;
        v0[3] = sub_10004E258;
        uint64_t v11 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_10004E5BC;
        v0[13] = &unk_1007974C0;
        v0[14] = v11;
        [v10 saveObject:v9 withCompletion:v0 + 10];
        return _swift_continuation_await(v0 + 2);
      }
    }
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      uint64_t v15 = "Couldn't create a HKCategoryType of type .mindfulSession";
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      uint64_t v15 = "HealthKit is not available on this device";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
      swift_slowDealloc();
    }
  }

  id v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10004E258()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_10004E3CC;
  }
  else {
    uint64_t v2 = sub_10004E368;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004E368()
{
  uint64_t v1 = *(void **)(v0 + 152);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10004E3CC()
{
  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v10 = *(void **)(v0 + 152);
    uint64_t v3 = *(void **)(v0 + 144);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Saving a mindfulSessionCategory type encountered an error : %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 152);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  Class v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10004E5BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      uint64_t v6 = swift_allocError();
      void *v7 = a3;
      id v8 = a3;
      a1 = v3;
      a2 = v6;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
}

uint64_t sub_10004E65C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal13HealthManager_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10004E70C()
{
  return type metadata accessor for HealthManager();
}

uint64_t type metadata accessor for HealthManager()
{
  uint64_t result = qword_1007FA468;
  if (!qword_1007FA468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004E760()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10004E808()
{
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)HKHealthStore) init];
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 initWithSuiteName:v2];

  *(void *)(v0 + 24) = v3;
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  return v0;
}

unint64_t sub_10004E938()
{
  unint64_t result = qword_100811410;
  if (!qword_100811410)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100811410);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JournalSortOrder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004EAD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10004EAFC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HealthType()
{
  return &type metadata for HealthType;
}

unint64_t sub_10004EB1C()
{
  unint64_t result = qword_1007FA530;
  if (!qword_1007FA530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA530);
  }
  return result;
}

uint64_t sub_10004EB70()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  int v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10004F680;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007975B8;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

char *sub_10004EDF0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapView;
  type metadata accessor for GenericMapAssetView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_cardView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapAsset] = 0;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FullScreenGenericMapView();
  os_log_type_t v13 = (char *)objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  *(void *)(*(void *)&v13[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapView]
            + OBJC_IVAR____TtC7Journal19GenericMapAssetView_delegate
            + 8) = &off_100797568;
  swift_unknownObjectWeakAssign();
  return v13;
}

id sub_10004EF54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenGenericMapView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenGenericMapView()
{
  return self;
}

uint64_t sub_10004F008()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10004F040()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (char *)result;
    uint64_t v2 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_cardView;
    id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(result
                                                               + OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_cardView), "layer"));
    if (qword_1007F7CA0 != -1) {
      swift_once();
    }
    long long v56 = xmmword_10083E9C0;
    long long v57 = *(_OWORD *)&qword_10083E9D0;
    long long v58 = xmmword_10083E9E0;
    long long v59 = *(_OWORD *)&qword_10083E9F0;
    [v3 setCornerRadii:&v56];

    uint64_t v4 = *(void **)&v1[v2];
    [v1 addSubview:v4];
    uint64_t v5 = qword_1007F7300;
    id v6 = v4;
    if (v5 != -1) {
      swift_once();
    }
    double v7 = *(double *)&qword_10083D910;
    int v8 = &selRef_drawMapRect_zoomScale_inContext_;
    id v9 = [v6 superview];
    id v10 = &stru_1007D7000;
    uint64_t v11 = &stru_1007D7000;
    if (v9)
    {
      uint64_t v12 = v9;
      [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v13 = [v6 leadingAnchor];
      id v14 = [v12 leadingAnchor];
      id v15 = [v13 constraintEqualToAnchor:v14];

      [v15 setConstant:v7];
      if (v15)
      {
        id v15 = v15;
        [v15 setActive:1];

        id v6 = v15;
      }

      uint64_t v11 = &stru_1007D7000;
      id v10 = &stru_1007D7000;
      int v8 = &selRef_drawMapRect_zoomScale_inContext_;
    }
    else
    {
      id v15 = 0;
      uint64_t v12 = v6;
    }

    double v16 = *(double *)&qword_10083D910;
    id v17 = *(id *)&v1[v2];
    id v18 = [v17 v8[77]];
    if (v18)
    {
      id v19 = v18;
      [v17 v10[96].name];
      id v20 = [v17 trailingAnchor];
      id v21 = [v19 trailingAnchor];
      id v22 = [v20 v11[68].types:v21];

      [v22 setConstant:-v16];
      if (v22)
      {
        id v22 = v22;
        [v22 setActive:1];

        id v17 = v22;
      }

      int v8 = &selRef_drawMapRect_zoomScale_inContext_;
    }
    else
    {
      id v22 = 0;
      id v19 = v17;
    }

    id v23 = *(void **)&v1[v2];
    id v24 = self;
    id v25 = v23;
    id v26 = [v24 mainScreen];
    [v26 bounds];
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;

    v60.origin.CGFloat x = v28;
    v60.origin.CGFloat y = v30;
    v60.size.CGFloat width = v32;
    v60.size.CGFloat height = v34;
    CGFloat v35 = CGRectGetHeight(v60) * 0.66;
    [v25 v10[96].name];
    id v36 = [v25 heightAnchor];
    id v37 = [v36 constraintEqualToConstant:v35];

    [v37 setActive:1];
    id v38 = *(id *)&v1[v2];
    id v39 = [v38 v8[77]];
    if (v39)
    {
      uint64_t v40 = v39;
      [v38 v10[96].name];
      id v41 = [v38 centerYAnchor];
      id v42 = [v40 centerYAnchor];
      id v43 = [v41 v11[68].types:v42];

      [v43 setConstant:0.0];
      if (v43)
      {
        id v43 = v43;
        [v43 setActive:1];

        id v38 = v43;
      }
    }
    else
    {
      id v43 = 0;
      uint64_t v40 = v38;
    }

    uint64_t v44 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapView;
    id v45 = *(char **)&v1[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapView];
    uint64_t v46 = *(void **)&v1[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapAsset];
    uint64_t v47 = *(void **)&v45[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset];
    *(void *)&v45[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset] = v46;
    id v48 = v46;
    uint64_t v49 = v45;

    sub_1004E3194();
    uint64_t v50 = *(unsigned char **)&v1[v44];
    v50[OBJC_IVAR____TtC7Journal19GenericMapAssetView_isInteractive] = 1;
    uint64_t v51 = v50;
    sub_1004E3528();

    id v52 = [*(id *)&v1[v44] layer];
    long long v56 = xmmword_10083E9C0;
    long long v57 = *(_OWORD *)&qword_10083E9D0;
    long long v58 = xmmword_10083E9E0;
    long long v59 = *(_OWORD *)&qword_10083E9F0;
    [v52 setCornerRadii:&v56];

    id v53 = [*(id *)&v1[v44] layer];
    [v53 setMasksToBounds:1];

    uint64_t v54 = *(void **)&v1[v44];
    [*(id *)&v1[v2] addSubview:v54];
    id v55 = v54;
    sub_1001DCF60(0.0);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004F680()
{
  return sub_10004F040();
}

uint64_t sub_10004F688(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004F698()
{
  return swift_release();
}

unint64_t sub_10004F6A0()
{
  unint64_t result = qword_1007FBD10;
  if (!qword_1007FBD10)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD10);
  }
  return result;
}

void sub_10004F6F8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapView;
  type metadata accessor for GenericMapAssetView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_cardView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_mapAsset] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10004F7B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FA578);
  sub_100026A54(v0, (uint64_t)qword_1007FA578);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004F958(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10004FB60(char a1, void *aBlock)
{
  *(void *)(v2 + 16) = _Block_copy(aBlock);
  id v6 = (uint64_t (*)(char))((char *)&dword_1007FA620 + dword_1007FA620);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10004FC14;
  return v6(a1);
}

uint64_t sub_10004FC14()
{
  id v1 = *(void (***)(void))(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10004FE94(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1007FA5B8 + dword_1007FA5B8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_10004FF3C;
  return v4();
}

uint64_t sub_10004FF3C()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v2)
  {
    uint64_t v7 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
  }
  _Block_release(*(const void **)(v4 + 16));
  int v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

void sub_1000500A0(double a1)
{
}

void sub_1000500AC(const char *a1, double a2)
{
  if (qword_1007F6938 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_1007FA578);
  oslog = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v7 + 56) = &type metadata for Double;
    *(void *)(v7 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v7 + 32) = Current - a2;
    uint64_t v9 = String.init(format:_:)();
    sub_10011EA98(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000502BC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FA5C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 initWithName:v8 bundleIdentifier:v9];

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100052058;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100797620;
  id v13 = _Block_copy(aBlock);
  swift_release();
  [a2 searchableIndex:v10 reindexAllSearchableItemsWithAcknowledgementHandler:v13];
  _Block_release(v13);
}

uint64_t sub_10005065C(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  v2[4] = swift_getObjCClassMetadata();
  id v4 = a1;
  return _swift_task_switch(sub_1000506E8, 0, 0);
}

uint64_t sub_1000506E8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  static Date.timeIntervalSinceReferenceDate.getter();
  v0[5] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[6] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000507E8;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD00000000000002DLL, 0x8000000100688640, sub_100052294, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1000507E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100050900, 0, 0);
}

uint64_t sub_100050900()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void (***)(void, void))(v0 + 24);
  sub_1000500AC("SpotlightUtilities.reindexAllSearchableItems completed in %s seconds.", *(double *)(v0 + 40));

  v2[2](v2, 0);
  _Block_release(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_1000509CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightUtilities();
  return [super dealloc];
}

uint64_t type metadata accessor for SpotlightUtilities()
{
  return self;
}

uint64_t sub_100050A24(char a1)
{
  *(unsigned char *)(v1 + 308) = a1;
  uint64_t v2 = type metadata accessor for CSSearchQuery.Results.Item();
  *(void *)(v1 + 160) = v2;
  *(void *)(v1 + 168) = *(void *)(v2 - 8);
  *(void *)(v1 + 176) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CSSearchQuery.Results();
  *(void *)(v1 + 184) = v3;
  *(void *)(v1 + 192) = *(void *)(v3 - 8);
  *(void *)(v1 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_100050B40, 0, 0);
}

uint64_t sub_100050B40()
{
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v0 + 208) = v1;
  if (qword_1007F6938 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 216) = sub_100026A54(v2, (uint64_t)qword_1007FA578);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = *(unsigned __int8 *)(v0 + 308);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    *(_DWORD *)(v0 + 304) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SpotlightUtilities.setDisableSearchInSpotlightFlag disableSearchInSpotlight: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }

  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone((Class)CSSearchQuery);
  NSString v8 = String._bridgeToObjectiveC()();
  *(void *)(v0 + 224) = [v7 initWithQueryString:v8 queryContext:0];

  CSSearchQuery.results.getter();
  unint64_t v11 = (uint64_t (__cdecl *)())((char *)&dword_1008077B8 + dword_1008077B8);
  NSString v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v9;
  void *v9 = v0;
  v9[1] = sub_100050D68;
  return v11();
}

uint64_t sub_100050D68(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  os_log_type_t v4 = (void *)*v2;
  v4[30] = a1;
  v4[31] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[24] + 8))(v3[25], v3[23]);
  if (v1) {
    int v5 = sub_10005180C;
  }
  else {
    int v5 = sub_100050ED8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100050ED8()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 240);
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 134217984;
    *(void *)(v0 + 152) = *(void *)(v3 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "SpotlightUtilities.setDisableSearchInSpotlightFlag found %ld searchable items", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = *(void *)(v0 + 240);
  id v40 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v0 + 308)];
  *(void *)(v0 + 256) = v40;
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 168);
    id v39 = *(void (**)(void, unint64_t, void))(v7 + 16);
    unint64_t v8 = *(void *)(v0 + 240)
       + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    NSString v9 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v38 = *(void *)(v7 + 72);
    v39(*(void *)(v0 + 176), v8, *(void *)(v0 + 160));
    while (1)
    {
      id v10 = (void *)CSSearchQuery.Results.Item.item.getter();
      id v11 = [v10 attributeSet];
      id v12 = [v11 disableSearchInSpotlight];

      if (!v12) {
        goto LABEL_11;
      }
      sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
      id v13 = v40;
      id v14 = v12;
      char v15 = static NSObject.== infix(_:_:)();

      if (v15)
      {
        (*v9)(*(void *)(v0 + 176), *(void *)(v0 + 160));
      }
      else
      {
LABEL_11:
        id v16 = [v10 attributeSet];
        [v16 setDisableSearchInSpotlight:v40];

        [v10 setIsUpdate:1];
        id v17 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v18 = *(void *)(v0 + 176);
        uint64_t v19 = *(void *)(v0 + 160);
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        (*v9)(v18, v19);
      }
      v8 += v38;
      if (!--v6) {
        break;
      }
      v39(*(void *)(v0 + 176), v8, *(void *)(v0 + 160));
    }
  }
  swift_bridgeObjectRelease();
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  id v22 = &selRef_drawMapRect_zoomScale_inContext_;
  if (os_log_type_enabled(v20, v21))
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    *(_DWORD *)id v23 = 138412290;
    id v25 = objc_allocWithZone((Class)CSSearchableIndex);
    NSString v26 = String._bridgeToObjectiveC()();
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v25 initWithName:v26 bundleIdentifier:v27];

    *(void *)(v0 + 144) = v28;
    id v22 = &selRef_drawMapRect_zoomScale_inContext_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v24 = v28;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "SpotlightUtilities.setDisableSearchInSpotlightFlag searchableIndeCGFloat x = %@", v23, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v29 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v30 = String._bridgeToObjectiveC()();
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v29 v22[325] v30 v31];
  *(void *)(v0 + 264) = v32;

  sub_10001B284(0, &qword_1007FA628);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  *(void *)(v0 + 272) = isa;
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v34 = String._bridgeToObjectiveC()();
  *(void *)(v0 + 280) = v34;
  swift_bridgeObjectRelease();
  NSString v35 = String._bridgeToObjectiveC()();
  *(void *)(v0 + 288) = v35;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_100051524;
  uint64_t v36 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10004F958;
  *(void *)(v0 + 104) = &unk_1007977B0;
  *(void *)(v0 + 112) = v36;
  [v32 indexSearchableItems:isa deleteSearchableItemsWithIdentifiers:0 clientState:0 clientStateName:0 protectionClass:v34 forBundleID:v35 options:256 completionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100051524()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 296) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_1000519E8;
  }
  else
  {
    os_log_type_t v2 = sub_10005163C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10005163C()
{
  os_log_type_t v2 = *(void **)(v0 + 280);
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void **)(v0 + 272);

  unint64_t v4 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    NSString v9 = *(NSObject **)(v0 + 256);
    id v10 = *(void **)(v0 + 224);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 136) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SpotlightUtilities.setDisableSearchInSpotlightFlag update of %ld items was successful", v7, 0xCu);
    swift_slowDealloc();
    id v11 = v5;
    uint64_t v5 = v9;
  }
  else
  {
    id v10 = *(void **)(v0 + 256);
    id v11 = *(NSObject **)(v0 + 224);
    swift_bridgeObjectRelease_n();
  }

  sub_1000500AC("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10005180C()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    unint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "SpotlightUtilities.setDisableSearchInSpotlightFlag error %@", v3, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1000500AC("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000519E8()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void **)(v0 + 272);
  os_log_type_t v2 = *(void **)(v0 + 280);
  uint64_t v5 = *(void **)(v0 + 256);
  unint64_t v4 = *(void **)(v0 + 264);
  os_log_type_t v6 = *(void **)(v0 + 224);
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    NSString v9 = (uint8_t *)swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)NSString v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SpotlightUtilities.setDisableSearchInSpotlightFlag error %@", v9, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1000500AC("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100051BF0()
{
  return _swift_task_switch(sub_100051C0C, 0, 0);
}

uint64_t sub_100051C0C()
{
  static Date.timeIntervalSinceReferenceDate.getter();
  v0[15] = v1;
  id v2 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 initWithName:v3 bundleIdentifier:v4];
  v0[16] = v5;

  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v0[17] = isa;
  v0[2] = v0;
  v0[3] = sub_100051DA4;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10004F958;
  v0[13] = &unk_1007975E0;
  v0[14] = v7;
  [v5 deleteSearchableItemsWithDomainIdentifiers:isa completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100051DA4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    id v2 = sub_100051F30;
  }
  else {
    id v2 = sub_100051EB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100051EB4()
{
  uint64_t v1 = *(void **)(v0 + 136);
  double v2 = *(double *)(v0 + 120);

  sub_1000500AC("SpotlightUtilities.deleteAllSearchableItems completed in %s seconds.", v2);
  NSString v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100051F30()
{
  uint64_t v1 = (void *)*((void *)v0 + 17);
  double v2 = (void *)*((void *)v0 + 16);
  double v3 = v0[15];
  swift_willThrow();

  sub_1000500AC("SpotlightUtilities.deleteAllSearchableItems completed in %s seconds.", v3);
  uint64_t v4 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v4();
}

uint64_t sub_100051FC4()
{
  uint64_t v1 = sub_100010218(&qword_1007FA5C0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100052058()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1000520C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000520D0()
{
  return swift_release();
}

uint64_t sub_1000520D8()
{
  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_100052118()
{
  uint64_t v2 = *(void **)(v0 + 16);
  double v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100052588;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_1007FA5C8 + dword_1007FA5C8);
  return v5(v2, v3);
}

uint64_t sub_1000521D0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100052588;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1008095C0 + dword_1008095C0);
  return v6(v2, v3, v4);
}

void sub_100052294(uint64_t a1)
{
  sub_1000502BC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10005229C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1000522D4()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100052588;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1007FA5E0 + dword_1007FA5E0);
  return v4(v2);
}

uint64_t sub_100052388(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100052588;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1008095D0 + dword_1008095D0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100052454()
{
  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_10005248C()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10002C194;
  uint64_t v5 = (uint64_t (*)(char, void *))((char *)&dword_1007FA600 + dword_1007FA600);
  return v5(v2, v3);
}

uint64_t sub_100052548()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_100052590()
{
  unint64_t result = qword_1007FA630;
  if (!qword_1007FA630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA630);
  }
  return result;
}

BOOL sub_1000525E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_100052608()
{
  if (*v0) {
    return 0xD000000000000045;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

uint64_t sub_100052654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v23 = a2;
  uint64_t v4 = sub_100010218(&qword_1007FA638);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v20 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v11((char *)&v20 - v9, a1, v4, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = swift_allocObject();
  id v13 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v13(v21 + v12, v10, v4);
  uint64_t v14 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v20, a1, v4);
  uint64_t v15 = swift_allocObject();
  v13(v15 + v12, v14, v4);
  id v16 = (void *)swift_allocObject();
  uint64_t v17 = v21;
  v16[2] = sub_1000528DC;
  v16[3] = v17;
  v16[4] = 0;
  v16[5] = sub_100052AC0;
  v16[6] = v15;
  swift_retain();
  swift_retain();
  uint64_t v18 = NSItemProvider.loadFileRepresentation(for:openInPlace:completionHandler:)();
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_100052890()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1000528DC()
{
  sub_100010218(&qword_1007FA638);

  return sub_100052890();
}

uint64_t sub_100052950(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_100010218(&qword_1007FA638);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100052A2C()
{
  uint64_t v1 = sub_100010218(&qword_1007FA638);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100052AC0(uint64_t a1)
{
  sub_100010218(&qword_1007FA638);

  return sub_100052950(a1);
}

void sub_100052B34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, NSObject *a6, void (*a7)(char *), uint64_t a8)
{
  v25[1] = a8;
  NSString v26 = a7;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v25 - v20;
  sub_100052E44(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100052EAC((uint64_t)v14);
    if (a3)
    {
      uint64_t v22 = a3;
    }
    else
    {
      sub_100052590();
      uint64_t v22 = swift_allocError();
      *uint64_t v23 = 0;
    }
    swift_errorRetain();
    a4(v22);
    swift_errorRelease();
    if (a6) {
      dispatch_group_leave(a6);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    sub_100369EF0((uint64_t)v18);
    v26(v18);
    if (a6) {
      dispatch_group_leave(a6);
    }
    id v24 = *(void (**)(char *, uint64_t))(v16 + 8);
    v24(v18, v15);
    v24(v21, v15);
  }
}

uint64_t sub_100052DEC()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_100052E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100052B34(a1, a2, a3, *(void (**)(uint64_t))(v3 + 16), *(void *)(v3 + 24), *(NSObject **)(v3 + 32), *(void (**)(char *))(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_100052E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100052EAC(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for NSItemProviderExtensionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100052FD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSItemProviderExtensionError()
{
  return &type metadata for NSItemProviderExtensionError;
}

unint64_t sub_100053014()
{
  unint64_t result = qword_1007FA640;
  if (!qword_1007FA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FA640);
  }
  return result;
}

uint64_t sub_100053068()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___appStoreRatingManager;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___appStoreRatingManager);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    uint64_t v3 = sub_1000530D4();
    uint64_t v4 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    swift_retain();
    sub_10005F764(v4);
  }
  sub_10005F774(v2);
  return v3;
}

uint64_t sub_1000530D4()
{
  __n128 v8 = &type metadata for JournalFeatureFlags;
  unint64_t v9 = sub_10005F364();
  v7[0] = 11;
  char v0 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v7);
  if ((v0 & 1) == 0) {
    return 0;
  }
  id v1 = [self standardUserDefaults];
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  type metadata accessor for AppStoreRatingManager();
  uint64_t v3 = swift_allocObject();
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  return v3;
}

id sub_100053278()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___rootNavController;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___rootNavController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___rootNavController);
  }
  else
  {
    id v4 = sub_100053338();
    id v5 = [objc_allocWithZone((Class)type metadata accessor for StatusResponsiveNavigationController()) initWithRootViewController:v4];

    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_transitionCoordinator);
    [v5 setDelegate:v6];
    [v5 setTransitioningDelegate:v6];
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_100053338()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___timelineController;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___timelineController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___timelineController);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for JournalTimelineViewController());
    uint64_t v6 = swift_retain();
    id v7 = sub_100257CF8(v6);
    swift_weakAssign();
    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

unint64_t sub_1000533E0()
{
  id v0 = sub_100053278();
  id v1 = [v0 viewControllers];

  sub_10001B284(0, (unint64_t *)&qword_1008068F0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    id v7 = sub_100053338();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_17:
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = sub_100053338();
    if (v6)
    {
      id v8 = v6;
      char v9 = static NSObject.== infix(_:_:)();

      if ((v9 & 1) == 0) {
        return 0;
      }
      id v10 = sub_100053338();
      id v7 = [v10 presentedViewController];

      if (!v7) {
        return 1;
      }
    }
LABEL_14:

    return 0;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 8 * result + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100053580(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 312) = a2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = v2;
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v3 + 192) = v4;
  *(void *)(v3 + 200) = *(void *)(v4 - 8);
  *(void *)(v3 + 208) = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for Journaling.EntrySource() - 8);
  *(void *)(v3 + 216) = v5;
  *(void *)(v3 + 224) = *(void *)(v5 + 64);
  *(void *)(v3 + 232) = swift_task_alloc();
  *(void *)(v3 + 240) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 248) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 256) = v7;
  *(void *)(v3 + 264) = v6;
  return _swift_task_switch(sub_1000536E8, v7, v6);
}

uint64_t sub_1000536E8()
{
  uint64_t v1 = v0[22];
  if (v1)
  {
    char v2 = *(unsigned char *)(v1 + 16);
    swift_retain();
    swift_release();
    if ((v2 & 1) == 0)
    {
      id v3 = *(id *)(v1 + 32);
      id v4 = [v3 managedObjectContext];
      if (!v4) {
        id v4 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      uint64_t v5 = sub_10057F170(v3, 1, 0, v4);
      swift_release();
      uint64_t v1 = v5;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(v1);
  }
  else
  {
    uint64_t v8 = v0[30];
    v0[34] = *(void *)(v0[23] + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_listViewModel);
    uint64_t v9 = sub_100010218(&qword_100805B00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 2, v9);
    return _swift_task_switch(sub_1000538AC, 0, 0);
  }
}

uint64_t sub_1000538AC()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[27];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v5 = v0[24];
  sub_10005F460(v0[30], v1, (uint64_t (*)(void))type metadata accessor for Journaling.EntrySource);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  v0[35] = v7;
  sub_10005F628(v1, v7 + v6, (uint64_t (*)(void))type metadata accessor for Journaling.EntrySource);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[36] = v8;
  uint64_t v9 = type metadata accessor for Journaling.EntryViewModel();
  *uint64_t v8 = v0;
  v8[1] = sub_100053A34;
  uint64_t v10 = v0[26];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 20, v10, sub_10005F690, v7, v9);
}

uint64_t sub_100053A34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  uint64_t v3 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100053BA8, 0, 0);
}

uint64_t sub_100053BA8()
{
  uint64_t v1 = v0[30];
  v0[37] = v0[20];
  sub_10005F6FC(v1, (uint64_t (*)(void))type metadata accessor for Journaling.EntrySource);
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  return _swift_task_switch(sub_100053C28, v2, v3);
}

uint64_t sub_100053C28()
{
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  id v1 = [(id)qword_10083D3C0 integerForKey:@"ADD_ENTRY_TITLE"];
  if (v1 == (id)2)
  {
    uint64_t v6 = v0[37];
    *(unsigned char *)(v6 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = 0;
    uint64_t v3 = *(void **)(v6 + 24);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    v0[6] = sub_10005F75C;
    v0[7] = v7;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10017D530;
    v0[5] = &unk_100797AE0;
    uint64_t v5 = _Block_copy(v0 + 2);
    goto LABEL_9;
  }
  if (v1 == (id)1)
  {
    uint64_t v8 = v0[37];
    *(unsigned char *)(v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = *((unsigned char *)v0 + 312);
    uint64_t v3 = *(void **)(v8 + 24);
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    v0[12] = sub_10005F75C;
    v0[13] = v9;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10017D530;
    v0[11] = &unk_100797B08;
    uint64_t v5 = _Block_copy(v0 + 8);
    goto LABEL_9;
  }
  if (!v1)
  {
    uint64_t v2 = v0[37];
    *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = 1;
    uint64_t v3 = *(void **)(v2 + 24);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    v0[18] = sub_10005F75C;
    v0[19] = v4;
    v0[14] = _NSConcreteStackBlock;
    v0[15] = 1107296256;
    v0[16] = sub_10017D530;
    v0[17] = &unk_100797B30;
    uint64_t v5 = _Block_copy(v0 + 14);
LABEL_9:
    swift_release();
    [v3 performBlock:v5];
    _Block_release(v5);
    goto LABEL_13;
  }
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134217984;
    v0[21] = [(id)qword_10083D3C0 integerForKey:@"ADD_ENTRY_TITLE"];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "prepareEntryForCanvas - Encountered unrecognized \"entryTitleOption\" value, %ld.", v12, 0xCu);
    swift_slowDealloc();
  }

LABEL_13:
  uint64_t v15 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[38] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100054030;
  return v15();
}

uint64_t sub_100054030()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100054150, v3, v2);
}

uint64_t sub_100054150()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 296);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_1000541DC()
{
  uint64_t v1 = v0;
  if (sub_100053068())
  {
    sub_1005243CC();
    swift_release();
  }
  uint64_t v2 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig);
  *(void *)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig) = 0;
  if (v3)
  {
    id v6 = v3;
    if (sub_1000533E0())
    {
      uint64_t v4 = *(void **)(v0 + v2);
      *(void *)(v1 + v2) = v3;
      id v5 = v6;

      if (qword_1007F6C18 != -1) {
        swift_once();
      }
      sub_1002417E8(v5);
    }
  }
}

void sub_1000542D4(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_100010218(&qword_1007FA5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10005EEAC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100797970;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [a2 dismissViewControllerAnimated:a3 & 1 completion:v12];
  _Block_release(v12);
}

void sub_100054484(char a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig);
  if (v2)
  {
    *(void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig) = 0;

    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v5 = Strong;
      id v6 = [Strong viewIfLoaded];
      id v7 = [v6 window];

      if ((v7
         || (id v8 = [v5 presentedViewController], v8, v8))
        && ([v5 isBeingDismissed] & 1) == 0)
      {
        uint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator];
        swift_retain();

        int v10 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
        swift_release();
        if (v10 == 2) {
          return;
        }
      }
      else
      {
      }
    }
    if (qword_1007F6C18 != -1) {
      swift_once();
    }
    sub_100242018(0, a1 & 1);
  }
}

uint64_t sub_1000545D8()
{
  v1[2] = v0;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100054670, v3, v2);
}

uint64_t sub_100054670()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  v0[6] = Strong;
  if (!Strong)
  {
LABEL_6:
    swift_release();
    id v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(1);
  }
  uint64_t v2 = Strong;
  id v3 = [Strong viewIfLoaded];
  id v4 = [v3 window];

  if (!v4
    && (id v5 = [v2 presentedViewController], v5, !v5)
    || [v2 isBeingDismissed])
  {

    goto LABEL_6;
  }
  id v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *id v8 = v0;
  v8[1] = sub_1000547E8;
  return sub_100447AE0();
}

uint64_t sub_1000547E8(char a1)
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 48);
  *(unsigned char *)(*v1 + 64) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 32);
  return _swift_task_switch(sub_100054930, v5, v4);
}

uint64_t sub_100054930()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100054994(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  sub_100010218(&qword_1007FAA00);
  v2[31] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for WidgetFamily();
  v2[32] = v3;
  v2[33] = *(void *)(v3 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = type metadata accessor for CanvasStartingState();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v2[38] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = type metadata accessor for AppLaunchAction();
  v2[42] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[43] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[44] = v5;
  v2[45] = v4;
  return _swift_task_switch(sub_100054B98, v5, v4);
}

uint64_t sub_100054B98()
{
  sub_10005F460(v0[29], v0[42], (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = (uint64_t *)v0[42];
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      v0[48] = v10;
      uint64_t v12 = (void *)swift_task_alloc();
      v0[49] = (uint64_t)v12;
      *uint64_t v12 = v0;
      v12[1] = sub_100055314;
      uint64_t result = sub_100057AAC(v11, v10, 1);
      break;
    case 2u:
      sub_10002C4EC(v0[42], v0[38], &qword_100800950);
      uint64_t v14 = (void *)swift_task_alloc();
      v0[50] = (uint64_t)v14;
      *uint64_t v14 = v0;
      v14[1] = sub_100055534;
      uint64_t v15 = v0[38];
      uint64_t result = sub_100059380(v15);
      break;
    case 3u:
      sub_10005F628(v0[42], v0[37], (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      uint64_t v16 = (void *)swift_task_alloc();
      v0[52] = (uint64_t)v16;
      *uint64_t v16 = v0;
      v16[1] = sub_100055940;
      uint64_t v17 = v0[37];
      uint64_t result = sub_100059E88(0, v17);
      break;
    case 4u:
      if (*(unsigned char *)v0[42] == 1)
      {
        if (qword_1007F6930 != -1) {
          swift_once();
        }
        uint64_t v18 = (void *)swift_task_alloc();
        v0[53] = (uint64_t)v18;
        *uint64_t v18 = v0;
        v18[1] = sub_100055CB8;
        uint64_t result = sub_10004D7C0((uint64_t)&off_100791CC8);
      }
      else
      {
        if (qword_1007F6BF8 != -1) {
          swift_once();
        }
        v0[54] = qword_10083D1E8;
        uint64_t result = _swift_task_switch(sub_100055ED8, 0, 0);
      }
      break;
    case 5u:
      uint64_t v19 = (void *)swift_task_alloc();
      v0[51] = (uint64_t)v19;
      *uint64_t v19 = v0;
      v19[1] = sub_100055744;
      uint64_t result = sub_100058864(9);
      break;
    default:
      uint64_t v1 = v0[39];
      uint64_t v2 = v0[40];
      sub_10002C4EC(v0[42], v2, (uint64_t *)&unk_100800A60);
      sub_10001B220(v2, v1, (uint64_t *)&unk_100800A60);
      uint64_t v3 = type metadata accessor for URL();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
      uint64_t v6 = v0[39];
      if (v5 == 1)
      {
        sub_10001457C(v0[39], (uint64_t *)&unk_100800A60);
        uint64_t v7 = 0;
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v7 = URL.absoluteString.getter();
        uint64_t v8 = v20;
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
      }
      v0[46] = v8;
      uint64_t v21 = (void *)swift_task_alloc();
      v0[47] = (uint64_t)v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1000550E0;
      uint64_t result = sub_100057384(v7, v8);
      break;
  }
  return result;
}

uint64_t sub_1000550E0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 481) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  return _swift_task_switch(sub_10005522C, v4, v3);
}

uint64_t sub_10005522C()
{
  uint64_t v1 = *(void *)(v0 + 320);
  swift_release();
  sub_10001457C(v1, (uint64_t *)&unk_100800A60);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 481);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100055314(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 482) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  return _swift_task_switch(sub_100055460, v4, v3);
}

uint64_t sub_100055460()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 482);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100055534(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 483) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  return _swift_task_switch(sub_10005565C, v4, v3);
}

uint64_t sub_10005565C()
{
  uint64_t v1 = *(void *)(v0 + 304);
  swift_release();
  sub_10001457C(v1, &qword_100800950);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 483);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100055744(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 484) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  return _swift_task_switch(sub_10005586C, v4, v3);
}

uint64_t sub_10005586C()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 484);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100055940(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 485) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  return _swift_task_switch(sub_100055A68, v4, v3);
}

uint64_t sub_100055A68()
{
  int v1 = *(unsigned __int8 *)(v0 + 485);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 296);
  swift_release();
  sub_10005F460(v3, v2, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  uint64_t v4 = *(void *)(v0 + 288);
  if (v1 == 1)
  {
    uint64_t v5 = *(void *)(v4 + *(int *)(*(void *)(v0 + 280) + 20) + 8);
    sub_10005F6FC(v4, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
    if (v5)
    {
      uint64_t v6 = *(void *)(v0 + 256);
      uint64_t v7 = *(void *)(v0 + 264);
      uint64_t v8 = *(void *)(v0 + 248);
      sub_10001B220(*(void *)(v0 + 296), v8, &qword_1007FAA00);
      int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
      uint64_t v10 = *(void *)(v0 + 296);
      if (v9 == 1)
      {
        uint64_t v11 = *(void *)(v0 + 248);
        sub_10005F6FC(*(void *)(v0 + 296), (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
        sub_10001457C(v11, &qword_1007FAA00);
      }
      else
      {
        uint64_t v16 = *(void *)(v0 + 264);
        uint64_t v15 = *(void *)(v0 + 272);
        uint64_t v17 = *(void *)(v0 + 256);
        (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v15, *(void *)(v0 + 248), v17);
        sub_1002FC638(v15);
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
        sub_10005F6FC(v10, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      }
      uint64_t v12 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    sub_10005F6FC(v4, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  }
  sub_10005F6FC(*(void *)(v0 + 296), (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  uint64_t v12 = *(unsigned __int8 *)(v0 + 485);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v13(v12);
}

uint64_t sub_100055CB8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 360);
  uint64_t v3 = *(void *)(v1 + 352);
  return _swift_task_switch(sub_100055DD8, v3, v2);
}

uint64_t sub_100055DD8()
{
  swift_release();
  id v1 = sub_10004D528(0);
  if ((v2 & 1) != 0 || (char v3 = 0, v1))
  {
    BOOL v4 = sub_10004D528(1) != 0;
    char v3 = v5 | v4;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6(v3 & 1);
}

uint64_t sub_100055ED8()
{
  id v1 = *(void **)(v0[54] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_100055FE0;
  uint64_t v2 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100232BB4;
  v0[21] = &unk_100797A88;
  v0[22] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100055FE0()
{
  return _swift_task_switch(sub_1000560C0, 0, 0);
}

uint64_t sub_1000560C0()
{
  uint64_t v1 = (void *)v0[28];
  v0[55] = [v1 authorizationStatus];

  uint64_t v2 = v0[44];
  uint64_t v3 = v0[45];
  return _swift_task_switch(sub_100056138, v2, v3);
}

uint64_t sub_100056138()
{
  if (v0[55])
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1(0);
  }
  else
  {
    v0[56] = qword_10083D1E8;
    return _swift_task_switch(sub_100056260, 0, 0);
  }
}

uint64_t sub_100056260()
{
  uint64_t v1 = *(void **)(v0[56] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[10] = v0;
  v0[15] = v0 + 60;
  v0[11] = sub_10005636C;
  uint64_t v2 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_100232C08;
  v0[26] = &unk_100797AA0;
  v0[27] = v2;
  [v1 requestAuthorizationWithOptions:6 completionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_10005636C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 456) = v1;
  if (v1) {
    uint64_t v2 = sub_100056654;
  }
  else {
    uint64_t v2 = sub_10005647C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10005647C()
{
  int v1 = *(unsigned __int8 *)(v0 + 480);
  uint64_t v2 = *(void **)(*(void *)(v0 + 448) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
  [v2 setIsJournalingScheduleEnabled:0];
  [v2 setIsStreakReminderEnabled:0];
  if (v1 == 1)
  {
    if (qword_1007F6BF0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_1008043B0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "😊 notifications authorization granted 😊", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v7;
    void *v7 = v0;
    v7[1] = sub_1000566D4;
    return sub_100232CBC(0, 0, 0, 1);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 352);
    uint64_t v10 = *(void *)(v0 + 360);
    return _swift_task_switch(sub_100056868, v9, v10);
  }
}

uint64_t sub_100056654()
{
  swift_willThrow();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return _swift_task_switch(sub_100056938, v1, v2);
}

uint64_t sub_1000566D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1000567F0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = *(void *)(v2 + 360);
    uint64_t v3 = sub_100056868;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000567F0()
{
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  return _swift_task_switch(sub_100056938, v1, v2);
}

uint64_t sub_100056868()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_100056938()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_100056A08()
{
  v1[7] = v0;
  type metadata accessor for AdminMenu();
  v1[8] = swift_task_alloc();
  v1[9] = sub_100010218(&qword_1007FA9F0);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v3;
  v1[15] = v2;
  return _swift_task_switch(sub_100056B14, v3, v2);
}

uint64_t sub_100056B14()
{
  *(void *)(v0 + 40) = &type metadata for JournalFeatureFlags;
  unint64_t v1 = sub_10005F364();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v1;
  char v2 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100056C30;
    return sub_1000545D8();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5(0);
  }
}

uint64_t sub_100056C30(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 192) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  return _swift_task_switch(sub_100056D58, v4, v3);
}

uint64_t sub_100056D58()
{
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    *(void *)(v0 + 136) = sub_100053338();
    *(void *)(v0 + 144) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 152) = v2;
    *(void *)(v0 + 160) = v1;
    return _swift_task_switch(sub_100056E54, v2, v1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3(0);
  }
}

uint64_t sub_100056E54()
{
  id v1 = [*(id *)(v0 + 136) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 168) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v10;
    void *v10 = v0;
    v10[1] = sub_100056FE8;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 136);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(v0 + 120);
    return _swift_task_switch(sub_1000571B8, v5, v6);
  }
}

uint64_t sub_100056FE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_100057148, v3, v2);
}

uint64_t sub_100057148()
{
  uint64_t v1 = (void *)v0[17];

  swift_release();
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  return _swift_task_switch(sub_1000571B8, v2, v3);
}

uint64_t sub_1000571B8()
{
  uint64_t v1 = (uint64_t *)v0[8];
  swift_release();
  sub_100054484(1);
  sub_1000B5490(v1);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v7 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  sub_10005F460(v5, v3, (uint64_t (*)(void))type metadata accessor for AdminMenu);
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v6 + 36));
  *uint64_t v8 = KeyPath;
  v8[1] = (uint64_t)v7;
  id v9 = v7;
  sub_10005F6FC(v5, (uint64_t (*)(void))type metadata accessor for AdminMenu);
  sub_10001B220(v3, v4, &qword_1007FA9F0);
  id v10 = objc_allocWithZone((Class)sub_100010218(&qword_1007FA9F8));
  uint64_t v11 = (void *)UIHostingController.init(rootView:)();
  id v12 = sub_100053278();
  [v12 pushViewController:v11 animated:1];

  sub_10001457C(v3, &qword_1007FA9F0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
  return v13(1);
}

uint64_t sub_100057384(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v3[7] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100057438;
  return sub_1000545D8();
}

uint64_t sub_100057438(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(v2 + 136) = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 72) = v3;
  return _swift_task_switch(sub_100057584, v4, v3);
}

uint64_t sub_100057584()
{
  if (*(unsigned char *)(v0 + 136) == 1)
  {
    *(void *)(v0 + 80) = sub_100053338();
    *(void *)(v0 + 88) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 96) = v2;
    *(void *)(v0 + 104) = v1;
    return _swift_task_switch(sub_100057660, v2, v1);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v4 = *(unsigned __int8 *)(v0 + 136);
    return v3(v4);
  }
}

uint64_t sub_100057660()
{
  id v1 = [*(id *)(v0 + 80) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 112) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 120) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v10;
    void *v10 = v0;
    v10[1] = sub_1000577F4;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 80);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    return _swift_task_switch(sub_1000579C4, v5, v6);
  }
}

uint64_t sub_1000577F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_100057954, v3, v2);
}

uint64_t sub_100057954()
{
  uint64_t v1 = (void *)v0[10];

  swift_release();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  return _swift_task_switch(sub_1000579C4, v2, v3);
}

uint64_t sub_1000579C4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_100054484(1);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = (char *)sub_100053338();
    id v5 = *(id *)&v4[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController];
    sub_1001C9AF0(v3, v2, 1);
  }
  uint64_t v6 = (char *)sub_100053338();
  id v7 = *(id *)&v6[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController];
  sub_10030A6C4();

  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v9 = *(unsigned __int8 *)(v0 + 136);
  return v8(v9);
}

uint64_t sub_100057AAC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 200) = a3;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 40) = type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 56) = v5;
  *id v5 = v4;
  v5[1] = sub_100057B64;
  return sub_1000545D8();
}

uint64_t sub_100057B64(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(v2 + 201) = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 72) = v3;
  return _swift_task_switch(sub_100057CB0, v4, v3);
}

uint64_t sub_100057CB0()
{
  if (*(unsigned char *)(v0 + 201) == 1)
  {
    *(void *)(v0 + 80) = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_latestTimelineSearchController;
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 88) = Strong;
    if (Strong)
    {
      uint64_t v2 = Strong;
      if (([Strong isBeingDismissed] & 1) == 0)
      {
        unint64_t v10 = *(void *)(v0 + 24);
        if (v10)
        {
          if (*(unsigned char *)(v0 + 200) == 1)
          {
            *(void *)&v2[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchTokens] = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease();
            id v11 = [v2 searchBar];
            id v12 = [v11 searchTextField];

            sub_10001B284(0, (unint64_t *)&qword_1007FA9E8);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v12 setTokens:isa];
          }
          uint64_t v14 = *(void *)(v0 + 16);
          id v15 = [v2 searchBar];
          NSString v16 = String._bridgeToObjectiveC()();
          [v15 setText:v16];

          sub_100365900(v14, v10);
        }
        uint64_t v17 = v2;
        *(void *)(v0 + 96) = static MainActor.shared.getter();
        uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v5 = v18;
        *(void *)(v0 + 104) = v3;
        *(void *)(v0 + 112) = v18;
        uint64_t v6 = sub_100057F3C;
        goto LABEL_14;
      }
    }
    *(void *)(v0 + 144) = sub_100053338();
    *(void *)(v0 + 152) = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v5 = v4;
    *(void *)(v0 + 160) = v3;
    *(void *)(v0 + 168) = v4;
    uint64_t v6 = sub_10005830C;
LABEL_14:
    return _swift_task_switch(v6, v3, v5);
  }
  swift_release();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v8 = *(unsigned __int8 *)(v0 + 201);
  return v7(v8);
}

uint64_t sub_100057F3C()
{
  id v1 = [*(id *)(v0 + 88) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 120) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 128) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v10;
    void *v10 = v0;
    v10[1] = sub_1000580D0;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 88);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    return _swift_task_switch(sub_1000582A0, v5, v6);
  }
}

uint64_t sub_1000580D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100058230, v3, v2);
}

uint64_t sub_100058230()
{
  uint64_t v1 = (void *)v0[11];

  swift_release();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  return _swift_task_switch(sub_1000582A0, v2, v3);
}

uint64_t sub_1000582A0()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 201);
  return v2(v3);
}

uint64_t sub_10005830C()
{
  id v1 = [*(id *)(v0 + 144) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 144);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 184) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v10;
    void *v10 = v0;
    v10[1] = sub_1000584A0;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 144);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    return _swift_task_switch(sub_100058670, v5, v6);
  }
}

uint64_t sub_1000584A0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return _swift_task_switch(sub_100058600, v3, v2);
}

uint64_t sub_100058600()
{
  uint64_t v1 = (void *)v0[18];

  swift_release();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  return _swift_task_switch(sub_100058670, v2, v3);
}

uint64_t sub_100058670()
{
  swift_release();
  sub_100054484(1);
  uint64_t v1 = (char *)[objc_allocWithZone((Class)type metadata accessor for JournalSearchViewController()) init];
  swift_weakAssign();
  swift_weakLoadStrong();
  swift_weakAssign();
  swift_release();
  _s18EntryListViewModelCMa();
  swift_allocObject();
  uint64_t v2 = sub_100036004();
  uint64_t v3 = OBJC_IVAR____TtC7Journal27JournalSearchViewController_searchResultsViewModel;
  *(void *)&v1[OBJC_IVAR____TtC7Journal27JournalSearchViewController_searchResultsViewModel] = v2;
  swift_retain();
  swift_release();
  if (*(void *)&v1[v3])
  {
    uint64_t v4 = swift_retain();
    sub_1001C736C(v4, 0);
    swift_release();
  }
  swift_release();
  unint64_t v5 = *(void *)(v0 + 24);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    id v7 = [v1 searchBar];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setText:v8];

    sub_100365900(v6, v5);
  }
  swift_unknownObjectWeakAssign();
  id v9 = sub_100053338();
  [v9 presentViewController:v1 animated:1 completion:0];

  unint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v11 = *(unsigned __int8 *)(v0 + 201);
  return v10(v11);
}

uint64_t sub_100058864(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 224) = a1;
  *(void *)(v2 + 64) = type metadata accessor for InsightsView();
  *(void *)(v2 + 72) = swift_task_alloc();
  uint64_t v3 = sub_100010218(&qword_1007FA9C0);
  *(void *)(v2 + 80) = v3;
  *(void *)(v2 + 88) = *(void *)(v3 - 8);
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = sub_100010218(&qword_1007FA9C8);
  *(void *)(v2 + 112) = swift_task_alloc();
  *(void *)(v2 + 120) = swift_task_alloc();
  *(void *)(v2 + 128) = type metadata accessor for MainActor();
  *(void *)(v2 + 136) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 144) = v5;
  *(void *)(v2 + 152) = v4;
  return _swift_task_switch(sub_1000589D8, v5, v4);
}

uint64_t sub_1000589D8()
{
  *(void *)(v0 + 40) = &type metadata for JournalFeatureFlags;
  unint64_t v1 = sub_10005F364();
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 48) = v1;
  char v2 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100058B10;
    return sub_1000545D8();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5(0);
  }
}

uint64_t sub_100058B10(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 225) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  return _swift_task_switch(sub_100058C38, v4, v3);
}

uint64_t sub_100058C38()
{
  if (*(unsigned char *)(v0 + 225) == 1)
  {
    *(void *)(v0 + 168) = sub_100053338();
    *(void *)(v0 + 176) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 184) = v2;
    *(void *)(v0 + 192) = v1;
    return _swift_task_switch(sub_100058D4C, v2, v1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3(0);
  }
}

uint64_t sub_100058D4C()
{
  id v1 = [*(id *)(v0 + 168) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 200) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 208) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v10;
    void *v10 = v0;
    v10[1] = sub_100058EE4;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 168);

    swift_release();
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 152);
    return _swift_task_switch(sub_1000590B0, v5, v6);
  }
}

uint64_t sub_100058EE4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_100059044, v3, v2);
}

uint64_t sub_100059044()
{
  uint64_t v1 = (void *)v0[21];
  swift_release();

  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  return _swift_task_switch(sub_1000590B0, v2, v3);
}

uint64_t sub_1000590B0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  char v2 = *(unsigned char *)(v0 + 224);
  swift_release();
  sub_100054484(1);
  sub_1002FD5DC(v2, v1);
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 56);
  type metadata accessor for InsightsDataManager(0);
  sub_10005F3B8(&qword_1007FA9D0, (void (*)(uint64_t))type metadata accessor for InsightsView);
  sub_10005F3B8((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  View.environment<A>(_:)();
  sub_10005F6FC(v6, (uint64_t (*)(void))type metadata accessor for InsightsView);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v16, v3, v5);
  uint64_t v9 = (uint64_t *)(v16 + *(int *)(v17 + 36));
  uint64_t *v9 = KeyPath;
  v9[1] = v7;
  unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v10(v3, v5);
  sub_10001B220(v16, v18, &qword_1007FA9C8);
  id v11 = objc_allocWithZone((Class)sub_100010218(&qword_1007FA9E0));
  uint64_t v12 = (void *)UIHostingController.init(rootView:)();
  [v12 setModalPresentationStyle:1];
  swift_unknownObjectWeakAssign();
  id v13 = sub_100053338();
  [v13 presentViewController:v12 animated:1 completion:0];

  sub_10001457C(v16, &qword_1007FA9C8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v14(1);
}

uint64_t sub_100059380(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_100800950);
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for MainActor();
  v2[6] = static MainActor.shared.getter();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[7] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100059460;
  return sub_1000545D8();
}

uint64_t sub_100059460(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(v2 + 152) = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 72) = v3;
  return _swift_task_switch(sub_1000595AC, v4, v3);
}

uint64_t sub_1000595AC()
{
  if (*(unsigned char *)(v0 + 152) == 1)
  {
    type metadata accessor for AppSecureAccessManager();
    id v1 = sub_100053278();
    id v2 = [v1 viewIfLoaded];

    id v3 = [v2 window];
    id v4 = [v3 windowScene];
    *(void *)(v0 + 80) = v4;

    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100059714;
    return sub_100082D54((uint64_t)v4);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7(0);
  }
}

uint64_t sub_100059714(char a1)
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 80);
  *(unsigned char *)(*v1 + 153) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_10005985C, v5, v4);
}

uint64_t sub_10005985C()
{
  if (*(unsigned char *)(v0 + 153) == 1)
  {
    *(void *)(v0 + 96) = sub_100053338();
    *(void *)(v0 + 104) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 112) = v2;
    *(void *)(v0 + 120) = v1;
    return _swift_task_switch(sub_100059944, v2, v1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3(0);
  }
}

uint64_t sub_100059944()
{
  id v1 = [*(id *)(v0 + 96) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 128) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 136) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v10;
    void *v10 = v0;
    v10[1] = sub_100059AD8;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 96);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    return _swift_task_switch(sub_100059CA8, v5, v6);
  }
}

uint64_t sub_100059AD8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_100059C38, v3, v2);
}

uint64_t sub_100059C38()
{
  uint64_t v1 = (void *)v0[12];

  swift_release();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  return _swift_task_switch(sub_100059CA8, v2, v3);
}

uint64_t sub_100059CA8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  swift_release();
  sub_10001B220(v2, v1, &qword_100800950);
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  Class isa = 0;
  if (v5 != 1)
  {
    uint64_t v7 = v0[4];
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v8 = v0[3];
  id v9 = [objc_allocWithZone((Class)MOSuggestionSheetOptions) initWithShowCancelButton:1 showBlankEntryButton:1 peekDetentRatio:1 presentFullScreen:1 presentationIsAnimated:1 selectedTabIsRecommended:isa selectedSuggestionId:0.0];

  unint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig);
  *(void *)(v8 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig) = v9;
  id v11 = v9;

  if (qword_1007F6C18 != -1) {
    swift_once();
  }
  *(void *)(qword_10083D208 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate + 8) = &off_1007A25B8;
  swift_unknownObjectWeakAssign();
  sub_1002417E8(v11);

  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(1);
}

uint64_t sub_100059E88(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = type metadata accessor for CanvasStartingState();
  v3[18] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v3[19] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = type metadata accessor for MainActor();
  v3[24] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[25] = v6;
  v3[26] = v5;
  return _swift_task_switch(sub_100059FE4, v6, v5);
}

uint64_t sub_100059FE4()
{
  uint64_t v1 = v0[14];
  if (!v1 || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
  {
LABEL_11:
    id v11 = (void *)swift_task_alloc();
    v0[27] = v11;
    *id v11 = v0;
    v11[1] = sub_10005A1C8;
    return sub_1000545D8();
  }
  uint64_t v3 = (void *)Strong;
  swift_retain();
  id v4 = [v3 viewIfLoaded];
  id v5 = [v4 window];

  if (!v5
    && (id v6 = [v3 presentedViewController], v6, !v6)
    || ([v3 isBeingDismissed] & 1) != 0)
  {

    swift_release();
    goto LABEL_11;
  }
  uint64_t v7 = swift_retain();
  char v8 = _s7Journal10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(v7, v1);
  swift_release();

  swift_release();
  if ((v8 & 1) == 0) {
    goto LABEL_11;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(1);
}

uint64_t sub_10005A1C8(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 368) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  return _swift_task_switch(sub_10005A2F0, v4, v3);
}

uint64_t sub_10005A2F0()
{
  if (*(unsigned char *)(v0 + 368) == 1)
  {
    *(void *)(v0 + 224) = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_latestCanvasController;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = Strong;
      id v3 = [Strong viewIfLoaded];
      id v4 = [v3 window];

      if ((v4
         || (id v5 = [v2 presentedViewController], v5, v5))
        && ([v2 isBeingDismissed] & 1) == 0)
      {
        id v8 = [v2 presentingViewController];
        *(void *)(v0 + 232) = v8;

        if (v8)
        {
          if (qword_1007F6C18 != -1) {
            swift_once();
          }
          sub_100242018(0, 1);
          id v9 = v8;
          *(void *)(v0 + 240) = static MainActor.shared.getter();
          uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v12 = v11;
          *(void *)(v0 + 248) = v10;
          *(void *)(v0 + 256) = v11;
          id v13 = sub_10005A7C4;
LABEL_39:
          return _swift_task_switch(v13, v10, v12);
        }
      }
      else
      {
      }
    }
    id v14 = sub_100053338();
    id v15 = [v14 presentedViewController];
    if (v15)
    {
      do
      {
        uint64_t v16 = v15;

        id v15 = [v16 presentedViewController];
        id v14 = v16;
      }
      while (v15);
    }
    else
    {
      uint64_t v16 = v14;
    }
    uint64_t v17 = swift_unknownObjectWeakLoadStrong();
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      sub_10001B284(0, (unint64_t *)&qword_1008068F0);
      id v19 = v16;
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
LABEL_35:
        double v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 344) = v33;
        void *v33 = v0;
        v33[1] = sub_10005AFB0;
        uint64_t v34 = *(void *)(v0 + 112);
        return sub_100053580(v34, 0);
      }
    }
    else
    {
    }
    id v21 = sub_100053338();
    id v22 = [v21 presentedViewController];
    if (v22)
    {
      do
      {
        uint64_t v23 = v22;

        id v22 = [v23 presentedViewController];
        id v21 = v23;
      }
      while (v22);
    }
    else
    {
      uint64_t v23 = v21;
    }
    uint64_t v24 = swift_unknownObjectWeakLoadStrong();
    if (v24)
    {
      id v25 = (void *)v24;
      sub_10001B284(0, (unint64_t *)&qword_1008068F0);
      id v26 = v23;
      char v27 = static NSObject.== infix(_:_:)();

      if (v27) {
        goto LABEL_35;
      }
    }
    else
    {
    }
    id v28 = sub_100053338();
    id v29 = [v28 presentedViewController];
    if (v29)
    {
      do
      {
        NSString v30 = v29;

        id v29 = [v30 presentedViewController];
        id v28 = v30;
      }
      while (v29);
    }
    else
    {
      NSString v30 = v28;
    }
    id v31 = sub_100053338();
    sub_10001B284(0, (unint64_t *)&qword_1008068F0);
    char v32 = static NSObject.== infix(_:_:)();

    if (v32) {
      goto LABEL_35;
    }
    *(void *)(v0 + 288) = sub_100053338();
    *(void *)(v0 + 296) = static MainActor.shared.getter();
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v12 = v35;
    *(void *)(v0 + 304) = v10;
    *(void *)(v0 + 312) = v35;
    id v13 = sub_10005ABCC;
    goto LABEL_39;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6(0);
}

uint64_t sub_10005A7C4()
{
  id v1 = [*(id *)(v0 + 232) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 264) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 272) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v10;
    void *v10 = v0;
    v10[1] = sub_10005A958;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    id v4 = *(void **)(v0 + 232);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    return _swift_task_switch(sub_10005AB28, v5, v6);
  }
}

uint64_t sub_10005A958()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 256);
  uint64_t v3 = *(void *)(v1 + 248);
  return _swift_task_switch(sub_10005AAB8, v3, v2);
}

uint64_t sub_10005AAB8()
{
  uint64_t v1 = (void *)v0[29];

  swift_release();
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  return _swift_task_switch(sub_10005AB28, v2, v3);
}

uint64_t sub_10005AB28()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v1;
  void *v1 = v0;
  v1[1] = sub_10005AFB0;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_100053580(v2, 0);
}

uint64_t sub_10005ABCC()
{
  id v1 = [*(id *)(v0 + 288) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v9 = static MainActor.shared.getter();
    *(void *)(v0 + 320) = v9;
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 328) = v10;
    *(void *)(v10 + 16) = v8;
    *(unsigned char *)(v10 + 24) = 1;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10005ADA0;
    return withCheckedContinuation<A>(isolation:function:_:)(v11, v9, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v10, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 288);
    swift_release();

    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10005AFB0;
    uint64_t v6 = *(void *)(v0 + 112);
    return sub_100053580(v6, 0);
  }
}

uint64_t sub_10005ADA0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return _swift_task_switch(sub_10005AF00, v3, v2);
}

uint64_t sub_10005AF00()
{
  uint64_t v1 = (void *)v0[36];

  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[43] = v2;
  void *v2 = v0;
  v2[1] = sub_10005AFB0;
  uint64_t v3 = v0[14];
  return sub_100053580(v3, 0);
}

uint64_t sub_10005AFB0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  return _swift_task_switch(sub_10005B0D8, v4, v3);
}

uint64_t sub_10005B0D8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[15];
  if (*(void *)(v2 + *(int *)(v1 + 20) + 8))
  {
    uint64_t v3 = v0[44];
    id v4 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithString:v5];

    uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
    *(void *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts) = v6;
    id v8 = v6;

    uint64_t v9 = *(void **)(v3 + 24);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    v0[12] = sub_10005F35C;
    v0[13] = v10;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10017D530;
    v0[11] = &unk_100797A60;
    uint64_t v11 = _Block_copy(v0 + 8);
    swift_release();
    [v9 performBlock:v11];
    _Block_release(v11);

    uint64_t v1 = v0[17];
    uint64_t v2 = v0[15];
  }
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[19];
  sub_10001B220(v2 + *(int *)(v1 + 24), v14, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12) == 1)
  {
    uint64_t v15 = v0[19];
    swift_release();
    sub_10001457C(v15, (uint64_t *)&unk_1007FC470);
    uint64_t v16 = v0[18];
    sub_10005F460(v0[15], v16, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
    id v17 = objc_allocWithZone((Class)type metadata accessor for CanvasViewController());
    uint64_t v18 = swift_retain();
    id v19 = sub_1004533F8(v18, v16);
    swift_release();
    swift_weakAssign();
    id v20 = [objc_allocWithZone((Class)type metadata accessor for JurassicNavigationController()) initWithRootViewController:v19];
    [v20 setModalInPresentation:1];
    swift_unknownObjectWeakAssign();
    id v21 = sub_100053338();
    id v22 = [v21 presentedViewController];
    if (v22)
    {
      do
      {
        uint64_t v23 = v22;

        id v22 = [v23 presentedViewController];
        id v21 = v23;
      }
      while (v22);
    }
    else
    {
      uint64_t v23 = v21;
    }
    uint64_t v27 = v0[16];
    BOOL v28 = *(void *)(v27 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig) == 0;
    v0[6] = sub_10005F354;
    v0[7] = v27;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10017D530;
    v0[5] = &unk_100797A10;
    id v29 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    [v23 presentViewController:v20 animated:v28 completion:v29];

    swift_release();
    _Block_release(v29);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    NSString v30 = (uint64_t (*)(uint64_t))v0[1];
    return v30(1);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[21] + 32))(v0[22], v0[19], v0[20]);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[45] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_10005B570;
    uint64_t v25 = v0[22];
    return sub_100583590(v25, 3);
  }
}

uint64_t sub_10005B570()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 208);
  uint64_t v3 = *(void *)(v1 + 200);
  return _swift_task_switch(sub_10005B690, v3, v2);
}

uint64_t sub_10005B690()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[18];
  sub_10005F460(v0[15], v4, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  id v5 = objc_allocWithZone((Class)type metadata accessor for CanvasViewController());
  uint64_t v6 = swift_retain();
  id v7 = sub_1004533F8(v6, v4);
  swift_release();
  swift_weakAssign();
  id v8 = [objc_allocWithZone((Class)type metadata accessor for JurassicNavigationController()) initWithRootViewController:v7];
  [v8 setModalInPresentation:1];
  swift_unknownObjectWeakAssign();
  id v9 = sub_100053338();
  id v10 = [v9 presentedViewController];
  if (v10)
  {
    do
    {
      uint64_t v11 = v10;

      id v10 = [v11 presentedViewController];
      id v9 = v11;
    }
    while (v10);
  }
  else
  {
    uint64_t v11 = v9;
  }
  uint64_t v12 = v0[16];
  BOOL v13 = *(void *)(v12 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig) == 0;
  v0[6] = sub_10005F354;
  v0[7] = v12;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_100797A10;
  uint64_t v14 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  [v11 presentViewController:v8 animated:v13 completion:v14];

  swift_release();
  _Block_release(v14);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(1);
}

uint64_t sub_10005B914(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA5C0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __n128 v5 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_100446EB4((void (*)(void))sub_10005EEAC, v7);
  return swift_release();
}

uint64_t sub_10005BA54(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = a1;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_1007FA990, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_10005BB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  if (qword_1007F7CE0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10083EA18;
  v4[8] = qword_10083EA18;
  return _swift_task_switch(sub_10005BC7C, v6, 0);
}

uint64_t sub_10005BC7C()
{
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[3]);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_10005BD70;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[2];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1, v2, sub_10005EF68, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10005BD70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10005BF00, v1, 0);
}

uint64_t sub_10005BF00()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_10005BF90;
  return sub_100580C88();
}

uint64_t sub_10005BF90()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000251A8, v1, v0);
}

uint64_t sub_10005C0CC(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 136) = a1;
  *(void *)(v2 + 24) = type metadata accessor for MainActor();
  *(void *)(v2 + 32) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  return _swift_task_switch(sub_10005C16C, v4, v3);
}

uint64_t sub_10005C16C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 136);
  id v2 = sub_100053338();
  id v3 = [v2 transitioningDelegate];
  *(void *)(v0 + 56) = v3;

  switch(v1)
  {
    case 1:
      id v7 = objc_allocWithZone((Class)type metadata accessor for MOOnboardingNavigationController());
      swift_retain();
      uint64_t v6 = (void *)MOOnboardingNavigationController.init(onboardingDelegate:)();
      uint64_t v8 = *(void (**)(uint64_t))((swift_isaMask & *v6) + 0x60);
      uint64_t v9 = swift_retain();
      v8(v9);
      [v6 setModalInPresentation:1];
      goto LABEL_5;
    case 2:
      id v10 = objc_allocWithZone((Class)type metadata accessor for NotificationsOnboardingViewController());
      uint64_t v6 = sub_1004D6A34();
      [v6 setModalInPresentation:1];
      [v6 setTransitioningDelegate:v3];
LABEL_5:
      [v6 setModalPresentationStyle:2];
      break;
    case 3:
      id v11 = objc_allocWithZone((Class)type metadata accessor for LockJournalOnboardingViewController());
      uint64_t v6 = sub_1003DFF38();
      [v6 setModalInPresentation:1];
      [v6 setTransitioningDelegate:v3];
      [v6 setModalPresentationStyle:0];
      break;
    case 4:
      id v12 = objc_allocWithZone((Class)type metadata accessor for WhatsNewViewController());
      uint64_t v6 = sub_10036BD30();
      break;
    default:
      uint64_t v4 = swift_allocObject();
      swift_weakInit();
      id v5 = objc_allocWithZone((Class)type metadata accessor for OnboardingViewController());
      swift_retain_n();
      uint64_t v6 = sub_100187680((uint64_t)sub_10005F254, v4);
      [v6 setModalInPresentation:1];
      [v6 setTransitioningDelegate:v3];
      [v6 setModalPresentationStyle:5];
      swift_release_n();
      break;
  }
  *(void *)(v0 + 64) = v6;
  BOOL v13 = v6;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10005C45C;
  return sub_1000545D8();
}

uint64_t sub_10005C45C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 137) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  return _swift_task_switch(sub_10005C584, v4, v3);
}

uint64_t sub_10005C584()
{
  if (*(unsigned char *)(v0 + 137) == 1)
  {
    *(void *)(v0 + 80) = sub_100053338();
    *(void *)(v0 + 88) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 96) = v2;
    *(void *)(v0 + 104) = v1;
    return _swift_task_switch(sub_10005C674, v2, v1);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void **)(v0 + 64);

    swift_unknownObjectRelease();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v5 = *(unsigned __int8 *)(v0 + 137);
    return v4(v5);
  }
}

uint64_t sub_10005C674()
{
  id v1 = [*(id *)(v0 + 80) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 112) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 120) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v10;
    void *v10 = v0;
    v10[1] = sub_10005C808;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 80);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    return _swift_task_switch(sub_10005C9D8, v5, v6);
  }
}

uint64_t sub_10005C808()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10005C968, v3, v2);
}

uint64_t sub_10005C968()
{
  uint64_t v1 = (void *)v0[10];

  swift_release();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return _swift_task_switch(sub_10005C9D8, v2, v3);
}

uint64_t sub_10005C9D8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  sub_100054484(1);
  id v2 = sub_100053338();
  [v2 presentViewController:v1 animated:1 completion:0];

  uint64_t v3 = *(void **)(v0 + 64);
  swift_unknownObjectRelease();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 137);
  return v4(v5);
}

uint64_t sub_10005CA84(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = a1;
  sub_100328C50((uint64_t)v4, (uint64_t)&unk_1007FA9B8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_10005CB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_10005CC34, v6, v5);
}

uint64_t sub_10005CC34()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    void *v2 = v0;
    v2[1] = sub_10005CD3C;
    return sub_100057384(0, 0);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = 2;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_10005CD3C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 96) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_10005CE88, v4, v3);
}

uint64_t sub_10005CE88()
{
  char v1 = *(unsigned char *)(v0 + 96);
  swift_release();
  **(unsigned char **)(v0 + 40) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10005CEF4(char a1)
{
  *(void *)(v2 + 48) = v1;
  *(unsigned char *)(v2 + 217) = a1;
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v2 + 56) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 72) = *(void *)(v3 - 8);
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = type metadata accessor for MainActor();
  *(void *)(v2 + 96) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 104) = v5;
  *(void *)(v2 + 112) = v4;
  return _swift_task_switch(sub_10005D020, v5, v4);
}

uint64_t sub_10005D020()
{
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  v0[15] = Strong;
  if (!Strong) {
    goto LABEL_12;
  }
  uint64_t v2 = Strong;
  id v3 = [Strong viewIfLoaded];
  id v4 = [v3 window];

  if (!v4
    && (id v5 = [v2 presentedViewController], v5, !v5)
    || [v2 isBeingDismissed])
  {
    swift_release();

LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8(0);
  }
  id v6 = [v2 presentingViewController];
  v0[16] = v6;
  if (!v6)
  {

LABEL_12:
    swift_release();
    goto LABEL_13;
  }
  uint64_t v7 = OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry;
  v0[17] = OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry;
  v0[18] = *(void *)&v2[v7];
  return _swift_task_switch(sub_10005D1C8, 0, 0);
}

uint64_t sub_10005D1C8()
{
  (*(void (**)(void, void, void))(v0[9] + 104))(v0[10], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[8]);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  void *v1 = v0;
  v1[1] = sub_10005D2C8;
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[10];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 27, v3, sub_10005F0F8, v2, &type metadata for Bool);
}

uint64_t sub_10005D2C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  uint64_t v3 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10005D43C, 0, 0);
}

uint64_t sub_10005D43C()
{
  *(unsigned char *)(v0 + 218) = *(unsigned char *)(v0 + 216);
  return _swift_task_switch(sub_10005D45C, *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_10005D45C()
{
  if (*(unsigned char *)(v0 + 218))
  {
    uint64_t v1 = 0;
  }
  else
  {
    int v2 = *(unsigned __int8 *)(v0 + 217);
    uint64_t v1 = *(void *)(*(void *)(v0 + 120) + *(void *)(v0 + 136));
    swift_retain_n();
    if (v2 == 1)
    {
      uint64_t v3 = *(void *)(v0 + 48);
      id v4 = sub_100053338();
      *(void *)(v0 + 40) = type metadata accessor for JournalNavigationCoordinator();
      *(void *)(v0 + 16) = v3;
      swift_retain();
      sub_100256B7C(0);

      sub_10001457C(v0 + 16, &qword_1007FAD50);
    }
    uint64_t v5 = (char *)sub_100053338();
    id v6 = *(id *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController];
    sub_1001C9BD4(v1, 0);
    swift_release();
  }
  *(void *)(v0 + 160) = v1;
  uint64_t v7 = *(void (**)(uint64_t))(*(void *)(v0 + 48)
                                      + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry);
  if (v7)
  {
    swift_retain();
    v7(v1);
    sub_10001ABB8((uint64_t)v7);
  }
  id v8 = *(id *)(v0 + 128);
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 176) = v10;
  *(void *)(v0 + 184) = v9;
  return _swift_task_switch(sub_10005D5F4, v10, v9);
}

uint64_t sub_10005D5F4()
{
  id v1 = [*(id *)(v0 + 128) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 192) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 200) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v10;
    void *v10 = v0;
    v10[1] = sub_10005D78C;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F7B0, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    id v4 = *(void **)(v0 + 128);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    return _swift_task_switch(sub_10005D960, v5, v6);
  }
}

uint64_t sub_10005D78C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return _swift_task_switch(sub_10005D8EC, v3, v2);
}

uint64_t sub_10005D8EC()
{
  uint64_t v1 = (void *)v0[16];

  swift_release();
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  return _swift_task_switch(sub_10005D960, v2, v3);
}

void sub_10005D960()
{
  swift_release();
  uint64_t v1 = (char *)sub_100053338();
  id v2 = *(id *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController];
  sub_10030A6C4();

  uint64_t v3 = sub_100053068();
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = sub_100053338();
    id v6 = [v5 view];

    if (!v6)
    {
      __break(1u);
      return;
    }
    uint64_t v7 = *(void **)(v0 + 120);
    uint64_t v8 = *(void **)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 56);
    id v10 = [v6 window];

    id v11 = [v10 windowScene];
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    BOOL v13 = (void *)swift_allocObject();
    void v13[2] = 0;
    _DWORD v13[3] = 0;
    v13[4] = v4;
    v13[5] = v11;
    swift_retain();
    id v14 = v11;
    sub_100328A60(v9, (uint64_t)&unk_1007FA9A8, (uint64_t)v13);
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 120);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(void (**)(uint64_t))(v0 + 8);
  v16(1);
}

uint64_t sub_10005DB70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  sub_10005F764(*(void *)(v0
                          + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___appStoreRatingManager));

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  sub_10001ABB8(*(void *)(v0 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry));
  return v0;
}

uint64_t sub_10005DC88()
{
  sub_10005DB70();

  return swift_deallocClassInstance();
}

uint64_t sub_10005DCE0()
{
  return type metadata accessor for JournalNavigationCoordinator();
}

uint64_t type metadata accessor for JournalNavigationCoordinator()
{
  uint64_t result = qword_1007FA6C0;
  if (!qword_1007FA6C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005DD34()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10005DE10()
{
  uint64_t v1 = v0;
  id v2 = [self mainBundle];
  id v3 = [v2 bundleIdentifier];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  uint64_t v4 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_listViewModel;
  _s18EntryListViewModelCMa();
  swift_allocObject();
  *(void *)(v1 + v4) = sub_100036004();
  uint64_t v5 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_transitionCoordinator;
  *(void *)(v1 + v5) = [objc_allocWithZone((Class)type metadata accessor for JournalTransitionCoordinator()) init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_fullScreenAssetCoordinator;
  *(void *)(v1 + v6) = [objc_allocWithZone((Class)type metadata accessor for FullScreenAssetControllerCoordinator()) init];
  *(void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_presentedTimelineSuggestionSheetConfig) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___appStoreRatingManager) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___rootNavController) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator____lazy_storage___timelineController) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry);
  void *v7 = 0;
  v7[1] = 0;
  return v1;
}

uint64_t sub_10005DFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_10005E058, v6, v5);
}

uint64_t sub_10005E058()
{
  v0[7] = sub_100053338();
  v0[8] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[9] = v2;
  v0[10] = v1;
  return _swift_task_switch(sub_10005E0EC, v2, v1);
}

uint64_t sub_10005E0EC()
{
  id v1 = [*(id *)(v0 + 56) presentedViewController];
  if (v1 && (v2 = v1, unsigned __int8 v3 = [v1 isBeingDismissed], v2, (v3 & 1) == 0))
  {
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 88) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    *(void *)(v9 + 16) = v7;
    *(unsigned char *)(v9 + 24) = 1;
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v10;
    void *v10 = v0;
    v10[1] = sub_10005E280;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000015, 0x80000001006889D0, sub_10005F03C, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 56);
    swift_release();

    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    return _swift_task_switch(sub_10005E450, v5, v6);
  }
}

uint64_t sub_10005E280()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_10005E3E0, v3, v2);
}

uint64_t sub_10005E3E0()
{
  uint64_t v1 = (void *)v0[7];

  swift_release();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return _swift_task_switch(sub_10005E450, v2, v3);
}

uint64_t sub_10005E450()
{
  swift_release();
  id v1 = sub_100053338();
  sub_1002573B0();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_10005E7E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StatusResponsiveNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for StatusResponsiveNavigationController()
{
  return self;
}

uint64_t sub_10005E840(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_10005E8E0, v5, v4);
}

uint64_t sub_10005E8E0()
{
  sub_100054484(1);
  v0[9] = OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_latestCanvasController;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  v0[10] = Strong;
  if (!Strong)
  {
LABEL_6:
    swift_release();
    uint64_t v6 = *(void *)(v0[4] + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_fullScreenAssetCoordinator);
    id v7 = sub_100053338();
    id v8 = [v7 presentedViewController];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;

        id v8 = [v9 presentedViewController];
        id v7 = v9;
      }
      while (v8);
    }
    else
    {
      uint64_t v9 = v7;
    }
    uint64_t v13 = v0[2];
    sub_1005D6E98(v9, v13, v0[3], *(void *)(v0[4] + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_transitionCoordinator));

    id v14 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakAssign();

    uint64_t v15 = (uint64_t (**)())(v6 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_onDelete);
    *uint64_t v15 = sub_10005EE98;
    v15[1] = (uint64_t (*)())v13;
    swift_retain();
    swift_release();
    uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(1);
  }
  uint64_t v2 = Strong;
  id v3 = [Strong viewIfLoaded];
  id v4 = [v3 window];

  if (!v4
    && (id v5 = [v2 presentedViewController], v5, !v5)
    || [v2 isBeingDismissed])
  {

    goto LABEL_6;
  }
  uint64_t v10 = static MainActor.shared.getter();
  v0[11] = v10;
  uint64_t v11 = swift_task_alloc();
  v0[12] = v11;
  *(void *)(v11 + 16) = v2;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[13] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10005EBCC;
  return withCheckedContinuation<A>(isolation:function:_:)(v12, v10, &protocol witness table for MainActor, 0xD000000000000042, 0x8000000100688980, sub_10005EEA0, v11, (char *)&type metadata for () + 8);
}

uint64_t sub_10005EBCC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10005ED2C, v3, v2);
}

uint64_t sub_10005ED2C()
{
  swift_release();
  uint64_t v1 = *(void *)(*(void *)(v0 + 32)
                 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_fullScreenAssetCoordinator);
  id v2 = sub_100053338();
  id v3 = [v2 presentedViewController];
  if (v3)
  {
    do
    {
      id v4 = v3;

      id v3 = [v4 presentedViewController];
      id v2 = v4;
    }
    while (v3);
  }
  else
  {
    id v4 = v2;
  }
  uint64_t v5 = *(void *)(v0 + 16);
  sub_1005D6E98(v4, v5, *(void *)(v0 + 24), *(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_transitionCoordinator));

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();

  id v7 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_onDelete);
  void *v7 = sub_10005EE98;
  v7[1] = (uint64_t (*)())v5;
  swift_retain();
  swift_release();
  id v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(1);
}

uint64_t sub_10005EE98()
{
  return sub_10005BA54(v0);
}

uint64_t sub_10005EEA0(uint64_t a1)
{
  return sub_10005B914(a1);
}

uint64_t sub_10005EEB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100052588;
  return sub_10005BB6C(a1, v4, v5, v6);
}

id sub_10005EF68()
{
  return sub_100585890(v0);
}

uint64_t sub_10005EF88(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100052588;
  return sub_10005DFBC(a1, v4, v5, v6);
}

void sub_10005F03C(uint64_t a1)
{
  sub_1000542D4(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_10005F04C()
{
  uint64_t v1 = sub_100010218(&qword_1007FA5C0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10005F0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005F0F0()
{
  return swift_release();
}

uint64_t sub_10005F0F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1005858C8(v1, a1);
}

uint64_t sub_10005F114()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10005F15C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_100052588;
  return sub_100523F3C(a1, v4, v5, v7, v6);
}

uint64_t sub_10005F21C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10005F254()
{
  return sub_10005CA84(v0);
}

uint64_t sub_10005F260()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10005F2A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10005CB9C(a1, v4, v5, v6);
}

void sub_10005F354()
{
}

uint64_t sub_10005F35C()
{
  return sub_100582B98();
}

unint64_t sub_10005F364()
{
  unint64_t result = qword_100800960;
  if (!qword_100800960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800960);
  }
  return result;
}

uint64_t sub_10005F3B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005F408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.managedObjectContext.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10005F434(id *a1)
{
  id v1 = *a1;
  return EnvironmentValues.managedObjectContext.setter();
}

uint64_t sub_10005F460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005F4C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Journaling.EntrySource() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_100010218(&qword_100805B00);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 2, v3))
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    unint64_t v5 = v0 + v2 + *(int *)(v3 + 48);
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }

  return swift_deallocObject();
}

uint64_t sub_10005F628(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005F690@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Journaling.EntrySource() - 8);
  return sub_100036E00(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10005F6FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10005F75C()
{
}

uint64_t sub_10005F764(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10005F774(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10005F7B4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal29InsightsEntriesViewController____lazy_storage___model;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal29InsightsEntriesViewController____lazy_storage___model))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal29InsightsEntriesViewController____lazy_storage___model);
  }
  else
  {
    uint64_t v3 = v0;
    _s18EntryListViewModelCMa();
    swift_allocObject();
    uint64_t v2 = sub_100036004();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10005F830()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for InsightsEntriesViewController();
  [super viewDidLoad];
  *(void *)&v0[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate + 8] = &off_100797B58;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(sub_10005F7B4() + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_sortOrder) = 0;
  sub_100036B8C();
  swift_release();
  uint64_t v1 = sub_10005F7B4();
  sub_1001C736C(v1, 1);
  return swift_release();
}

uint64_t sub_10005F928()
{
  uint64_t v1 = type metadata accessor for Calendar.Component();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  uint64_t v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Calendar();
  uint64_t v42 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FF070);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DateComponents();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_1007F9BE8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10005F7B4();
  uint64_t v20 = v0 + OBJC_IVAR____TtC7Journal29InsightsEntriesViewController_currentDate;
  swift_beginAccess();
  sub_10001B220(v20, (uint64_t)v11, (uint64_t *)&unk_1007FF070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    id v21 = (uint64_t *)&unk_1007FF070;
    uint64_t v22 = (uint64_t)v11;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    static Calendar.current.getter();
    Calendar.date(from:)();
    uint64_t v23 = v42 + 8;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v42 + 8);
    v24(v4, v40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v7, 1, v41) != 1)
    {
      uint64_t v34 = v19;
      uint64_t v26 = v39;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v7, v41);
      static Calendar.current.getter();
      uint64_t v28 = v36;
      uint64_t v27 = v37;
      id v29 = *(void (**)(char *, void, uint64_t))(v36 + 104);
      double v33 = v24;
      NSString v30 = v35;
      v29(v35, enum case for Calendar.Component.day(_:), v37);
      uint64_t v42 = v23;
      Calendar.dateInterval(of:for:)();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
      v33(v4, v40);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v38, v41);
      uint64_t v19 = v34;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v21 = (uint64_t *)&unk_1007FC470;
    uint64_t v22 = (uint64_t)v7;
  }
  sub_10001457C(v22, v21);
  uint64_t v25 = type metadata accessor for DateInterval();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 1, 1, v25);
LABEL_7:
  uint64_t v31 = v19 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_dateInterval;
  swift_beginAccess();
  sub_100062788((uint64_t)v18, v31);
  swift_endAccess();
  sub_100035CFC();
  sub_10001457C((uint64_t)v18, &qword_1007F9BE8);
  return swift_release();
}

void sub_10005FEBC(uint64_t a1)
{
  [v1 loadViewIfNeeded];
  *(void *)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate + 8] = &off_100797B58;
  swift_unknownObjectWeakAssign();
  v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasPerformedInitialFetch] = 1;

  sub_1001C736C(a1, 0);
}

id sub_10005FF3C()
{
  id v0 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v4[4] = sub_100060000;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1003657F0;
  v4[3] = &unk_100797C98;
  uint64_t v1 = _Block_copy(v4);
  id v2 = [v0 initWithSectionProvider:v1];
  _Block_release(v1);
  swift_release();
  return v2;
}

id sub_100060000()
{
  id v0 = self;
  id v1 = [v0 fractionalWidthDimension:1.0];
  if (qword_1007F73C0 != -1) {
    swift_once();
  }
  id v2 = [v0 estimatedDimension:*(double *)&qword_10083D9D0];
  id v3 = [self sizeWithWidthDimension:v1 heightDimension:v2];

  id v4 = [self itemWithLayoutSize:v3];
  uint64_t v5 = self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1006D6D00;
  *(void *)(v6 + 32) = v4;
  specialized Array._endMutation()();
  sub_10001B284(0, &qword_100807690);
  id v7 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v5 horizontalGroupWithLayoutSize:v3 subitems:isa];

  id v10 = [self sectionWithGroup:v9];
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  [v10 setInterGroupSpacing:*(double *)&qword_10083D8A0];
  if (qword_1007F72F0 != -1) {
    swift_once();
  }
  [v10 setContentInsets:*(double *)&qword_10083D8E8, *(double *)&qword_10083D8F0, *(double *)&qword_10083D8F8, *(double *)&qword_10083D900];

  return v10;
}

uint64_t sub_10006028C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_100010218(&qword_1007FAA60);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v36 = (char *)&v29 - v7;
  uint64_t v8 = sub_100010218(&qword_1008026B0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v15) {
    return 0;
  }
  uint64_t v30 = v11;
  uint64_t v31 = v4;
  uint64_t v16 = v12;
  swift_allocObject();
  uint64_t v34 = ObjectType;
  swift_unknownObjectWeakInit();
  type metadata accessor for JournalEntryCollectionViewCell();
  sub_10001B284(0, (unint64_t *)&qword_100800A40);
  id v17 = v15;
  char v32 = v14;
  id v33 = v17;
  UICollectionView.CellRegistration.init(handler:)();
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  uint64_t v18 = v36;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  id v29 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v30;
  v19(v29, v14, v30);
  uint64_t v21 = v31;
  uint64_t v22 = v35;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v35, v18, v3);
  unint64_t v23 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v24 = (v9 + *(unsigned __int8 *)(v21 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v23, v29, v20);
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v25 + v24, v22, v3);
  *(void *)(v25 + ((v5 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
  id v26 = objc_allocWithZone((Class)sub_100010218(&qword_1007FAA68));
  uint64_t v27 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v3);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v20);
  return v27;
}

void sub_100060654(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    id v7 = [*(id *)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext) objectWithID:v4];
    type metadata accessor for JournalEntryMO();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      id v23 = v7;
      id v10 = v7;
      id v11 = [v9 managedObjectContext];
      if (!v11) {
        id v11 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      uint64_t v12 = sub_10057F170(v9, 0, 0, v11);
      *(void *)&a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate + 8] = &off_10079D138;
      swift_unknownObjectWeakAssign();
      *(void *)&a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate + 8] = &off_10079D168;
      swift_unknownObjectWeakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (*(void *)&a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView])
      {
        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
      }
      swift_release();
      if (*(void *)&v6[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel])
      {
        swift_retain();
        uint64_t v13 = sub_100035E94();
        swift_release();
        if (v13 == 1)
        {
          a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] = 1;
          [a1 setAccessibilityViewIsModal:1];
        }
      }
      uint64_t v14 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
      *(void *)&a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry] = v12;
      swift_retain_n();
      swift_release();
      sub_1003ED2D4();
      sub_1003EDA5C();
      uint64_t v15 = *(void *)&a1[v14];
      if (v15)
      {
        swift_retain();
        sub_10037A920();
        sub_1003E4374(*(unsigned char *)(v15 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked), 0);
        sub_1003E4104(v15);
        sub_1003EDCCC();
        sub_1003EDF48();
        swift_release();
      }
      swift_release();
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1006D6D00;
      sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
      if (qword_1007F7580 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_1007F7C60;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = (void *)qword_10083E948;
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v12;
      id v21 = v18;
      swift_retain();
      *(void *)(v16 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._endMutation()();
      uint64_t v22 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions;
      *(void *)&a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions] = v16;
      swift_bridgeObjectRelease();
      *(void *)(*(void *)&a1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_chinView]
                + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_optionalActions) = *(void *)&a1[v22];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1003EA544();
      swift_release();
      id v7 = v23;
    }
  }
}

void sub_100060B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = swift_weakLoadStrong();

    if (v9)
    {
      uint64_t v10 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
      type metadata accessor for MainActor();
      swift_retain();
      swift_retain();
      uint64_t v11 = static MainActor.shared.getter();
      uint64_t v12 = (void *)swift_allocObject();
      v12[2] = v11;
      v12[3] = &protocol witness table for MainActor;
      v12[4] = v9;
      v12[5] = a3;
      sub_100328A8C((uint64_t)v6, (uint64_t)&unk_1007FAA78, (uint64_t)v12);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_100060CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  uint64_t v6 = type metadata accessor for UUID();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v5[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[12] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[13] = v8;
  v5[14] = v7;
  return _swift_task_switch(sub_100060DD4, v8, v7);
}

uint64_t sub_100060DD4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7] + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_10001B220(v4, v1, &qword_100800950);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[11];
  if (v5)
  {
    sub_10001457C(v0[11], &qword_100800950);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v10 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v11 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 16))(v9, v0[11], v11);
    sub_10001457C(v6, &qword_100800950);
    uint64_t v7 = UUID.uuidString.getter();
    uint64_t v8 = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v0[15] = v8;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[16] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100060F64;
  return sub_100057384(v7, v8);
}

uint64_t sub_100060F64(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 136) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  return _swift_task_switch(sub_1000610B0, v4, v3);
}

uint64_t sub_1000610B0()
{
  char v1 = *(unsigned char *)(v0 + 136);
  uint64_t v2 = *(unsigned char **)(v0 + 40);
  swift_release();
  unsigned char *v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100061138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 16) == 2)
  {
    uint64_t v4 = *(void **)a3;
    uint64_t v3 = *(void **)(a3 + 8);
    type metadata accessor for JournalEntryCollectionViewCell();
    sub_10001B284(0, (unint64_t *)&qword_100800A40);
    id v5 = v4;
    uint64_t v6 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    sub_100062C10(v4, v3, 2);
  }
  else
  {
    if (qword_1007F6AE8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100026A54(v7, (uint64_t)qword_10083D088);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "InsightsEntriesViewController - Unhandled cell type", v10, 2u);
      swift_slowDealloc();
    }

    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  }
  return v6;
}

uint64_t sub_1000612F8()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for UIBackgroundConfiguration();
  __chkstk_darwin(v2 - 8);
  type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v3 = swift_allocBox();
  static UIContentUnavailableConfiguration.empty()();
  if (qword_1007F7910 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  UIContentUnavailableConfiguration.text.setter();
  if (qword_1007F7918 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  UIContentUnavailableConfiguration.secondaryText.setter();
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10083D8A0;
  id v5 = (void (*)(void *, void))UIContentUnavailableConfiguration.directionalLayoutMargins.modify();
  *(void *)(v6 + 8) = v4;
  v5(aBlock, 0);
  uint64_t v7 = (void (*)(void *, void))UIContentUnavailableConfiguration.directionalLayoutMargins.modify();
  *(void *)(v8 + 24) = v4;
  v7(aBlock, 0);
  static UIBackgroundConfiguration.clear()();
  UIContentUnavailableConfiguration.background.setter();
  os_log_type_t v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  *(void *)(v10 + 24) = v3;
  aBlock[4] = sub_100062E4C;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100797CE8;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v1;
  swift_retain();
  swift_release();
  [v9 animateWithDuration:0 delay:v11 options:0 animations:0.44 completion:0.0];
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_1000615A4()
{
  uint64_t v0 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v1 = swift_projectBox();
  swift_beginAccess();
  v4[3] = v0;
  v4[4] = (uint64_t)&protocol witness table for UIContentUnavailableConfiguration;
  uint64_t v2 = sub_100062E54(v4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16))(v2, v1, v0);
  return UIViewController.contentUnavailableConfiguration.setter();
}

uint64_t sub_10006164C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v29 - v13;
  uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FF070);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DateComponents();
  uint64_t v19 = *(void *)(v18 - 8);
  __n128 v20 = __chkstk_darwin(v18);
  v29[0] = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_7;
  }
  id v22 = [*(id *)(a1 + 32) entryDate:v20.n128_f64[0]];
  if (v22)
  {
    id v23 = v22;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }
  sub_100062DA4((uint64_t)v11, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5))
  {
    sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v19 + 56))(v17, 1, 1, v18, v20);
    return sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FF070);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v14, v5);
  sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
  static Calendar.current.getter();
  if (qword_1007F7ED0 != -1) {
    swift_once();
  }
  Calendar.dateComponents(_:from:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v31);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    return sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FF070);
  }
  uint64_t v25 = v29[0];
  (*(void (**)(void, char *, uint64_t))(v19 + 32))(v29[0], v17, v18);
  uint64_t v26 = v29[1] + OBJC_IVAR____TtC7Journal29InsightsEntriesViewController_insightsEntriesDelegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(v25, ObjectType, v27);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v25, v18);
}

id sub_100061B10(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC7Journal29InsightsEntriesViewController_insightsEntriesDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC7Journal29InsightsEntriesViewController____lazy_storage___model] = 0;
  uint64_t v6 = &v3[OBJC_IVAR____TtC7Journal29InsightsEntriesViewController_currentDate];
  uint64_t v7 = type metadata accessor for DateComponents();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  if (a2)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for InsightsEntriesViewController();
  [super initWithNibName:v8 bundle:a3];

  return v9;
}

uint64_t sub_100061D3C()
{
  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal29InsightsEntriesViewController_insightsEntriesDelegate);
  swift_release();
  return sub_10001457C(v0 + OBJC_IVAR____TtC7Journal29InsightsEntriesViewController_currentDate, (uint64_t *)&unk_1007FF070);
}

id sub_100061D88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InsightsEntriesViewController();
  return [super dealloc];
}

uint64_t sub_100061E18()
{
  return type metadata accessor for InsightsEntriesViewController();
}

uint64_t type metadata accessor for InsightsEntriesViewController()
{
  uint64_t result = qword_1007FAA38;
  if (!qword_1007FAA38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100061E6C()
{
  sub_100061F10();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100061F10()
{
  if (!qword_1007FAA48)
  {
    type metadata accessor for DateComponents();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, &qword_1007FAA48);
    }
  }
}

uint64_t sub_100061F68(uint64_t a1, char a2)
{
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    type metadata accessor for MainActor();
    swift_retain();
    id v11 = v2;
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = &protocol witness table for MainActor;
    *(void *)(v13 + 32) = v9;
    *(void *)(v13 + 40) = v11;
    *(void *)(v13 + 48) = a1;
    *(unsigned char *)(v13 + 56) = a2 & 1;
    sub_100328A60((uint64_t)v7, (uint64_t)&unk_1007FAA58, v13);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000620E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 88) = a7;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 16) = a4;
  *(void *)(v7 + 40) = type metadata accessor for CanvasStartingState();
  *(void *)(v7 + 48) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 56) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 72) = v8;
  return _swift_task_switch(sub_1000621B0, v9, v8);
}

uint64_t sub_1000621B0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  int v2 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  uint64_t v6 = (uint64_t (**)(uint64_t))(v3
                                        + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC7Journal28JournalNavigationCoordinator_canvasWillDismissWithSavedEntry);
  *uint64_t v6 = sub_100062708;
  v6[1] = (uint64_t (*)(uint64_t))v5;
  id v8 = v4;
  sub_10001ABB8(v7);
  uint64_t v9 = type metadata accessor for WidgetFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  if (v2 == 1)
  {
    uint64_t v12 = (void *)(v10 + *(int *)(v11 + 20));
    *uint64_t v12 = 0;
    v12[1] = 0;
    uint64_t v13 = v10 + *(int *)(v11 + 24);
    uint64_t v14 = type metadata accessor for Date();
    char v15 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    uint64_t v16 = v10 + *(int *)(v11 + 24);
    uint64_t v17 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = (void *)(v10 + *(int *)(v11 + 20));
    *uint64_t v18 = 0;
    v18[1] = 0;
    char v15 = -2;
  }
  uint64_t v19 = *(void *)(v0 + 32);
  *(unsigned char *)(*(void *)(v0 + 48) + *(int *)(*(void *)(v0 + 40) + 28)) = v15;
  __n128 v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v20;
  *__n128 v20 = v0;
  v20[1] = sub_1000623C4;
  uint64_t v21 = *(void *)(v0 + 48);
  return sub_100059E88(v19, v21);
}

uint64_t sub_1000623C4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_10006272C(v2);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100062508, v4, v3);
}

uint64_t sub_100062508()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100062578()
{
  return UIViewController.contentUnavailableConfiguration.setter();
}

uint64_t sub_1000625A8()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000625F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_10002C194;
  return sub_1000620E0(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000626D0()
{
  return swift_deallocObject();
}

uint64_t sub_100062708(uint64_t a1)
{
  return sub_10006164C(a1);
}

uint64_t sub_10006272C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CanvasStartingState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100062788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000627F0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100062828(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
}

void sub_100062830(void *a1)
{
  if (qword_1007F6AE8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_10083D088);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Empty cell dequeued in InsightsEntriesViewController! This should not happen. Please debug me.", v5, 2u);
    swift_slowDealloc();
  }

  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [a1 heightAnchor];
  id v7 = [v6 constraintEqualToConstant:0.0];

  [v7 setActive:1];
}

uint64_t sub_10006298C()
{
  uint64_t v1 = sub_100010218(&qword_1008026B0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_100010218(&qword_1007FAA60);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_100062AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100010218(&qword_1008026B0);
  sub_100010218(&qword_1007FAA60);

  return sub_100061138(a1, a2, a3);
}

void sub_100062C10(void *a1, id a2, char a3)
{
  if (a3 == 4)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if (a3 != 2)
  {
    if (a3 != 1) {
      return;
    }
    goto LABEL_4;
  }
}

uint64_t sub_100062C3C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100062C7C(uint64_t a1)
{
  sub_100060B34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100062C84()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100062CCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_100060CAC(a1, v4, v5, v7, v6);
}

uint64_t sub_100062D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100062D9C()
{
  return swift_release();
}

uint64_t sub_100062DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100062E0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100062E4C()
{
  return sub_1000615A4();
}

uint64_t *sub_100062E54(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100062EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a3 + 8))(a1, 0, a2, a3);
}

id sub_100062EE4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)UIDatePicker) init];
  [v4 setPreferredDatePickerStyle:3];
  [v4 setDatePickerMode:1];
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setMaximumDate:isa];

  uint64_t v6 = self;
  id v7 = v4;
  id v8 = [v6 systemIndigoColor];
  [v7 setTintColor:v8];

  return v7;
}

void sub_100063088()
{
  uint64_t v1 = v0;
  uint64_t v26 = type metadata accessor for IndexSet();
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for EditDateViewController();
  v27.receiver = v0;
  v27.super_class = v12;
  [super viewDidLoad];
  id v13 = [v0 navigationController];
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = [v13 view];

    if (!v15)
    {
LABEL_10:
      __break(1u);
      return;
    }
    id v16 = [self tertiarySystemGroupedBackgroundColor];
    [v15 setBackgroundColor:v16];
  }
  id v17 = [v1 view:v26];
  if (!v17)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v18 = v17;
  [v17 setAccessibilityViewIsModal:1];

  sub_100063428();
  uint64_t v19 = (uint64_t)&v1[OBJC_IVAR____TtC7Journal22EditDateViewController_preselectedDate];
  swift_beginAccess();
  sub_10001B220(v19, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    __n128 v20 = *(void **)&v1[OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker];
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    [v20 setDate:isa animated:1];

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_10006A384();
  id v22 = *(void **)&v1[OBJC_IVAR____TtC7Journal22EditDateViewController_tableView];
  IndexSet.init(integer:)();
  IndexSet._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v26);
  [v22 reloadSections:v25 withRowAnimation:100];
}

void sub_100063428()
{
  uint64_t v1 = v0;
  id v2 = [v0 navigationItem];
  if (qword_1007F74F8 != -1) {
    swift_once();
  }
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setTitle:v3];

  if (qword_1007F7470 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for EditDateViewController();
  uint64_t v34 = v4;
  v33[0] = v1;
  swift_bridgeObjectRetain();
  id v5 = v1;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v7 = sub_10002E0BC(v33, v4);
    uint64_t v8 = *(void *)(v4 - 8);
    __n128 v9 = __chkstk_darwin(v7);
    uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v4);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v33);
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = objc_allocWithZone((Class)UIBarButtonItem);
  uint64_t v14 = &selRef_drawMapRect_zoomScale_inContext_;
  id v15 = [v13 initWithTitle:v6 style:0 target:v12 action:@"cancelTapped:" v33[0]];

  swift_unknownObjectRelease();
  id v16 = [v5 navigationItem];
  [v16 setLeftBarButtonItem:v15];

  if (qword_1007F7480 != -1) {
    swift_once();
  }
  uint64_t v34 = v4;
  v33[0] = v5;
  id v17 = (char *)v5;
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v19 = sub_10002E0BC(v33, v4);
    uint64_t v20 = *(void *)(v4 - 8);
    __n128 v21 = __chkstk_darwin(v19);
    uint64_t v23 = (char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v20 + 16))(v23, v21);
    uint64_t v24 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v4);
    uint64_t v14 = &selRef_drawMapRect_zoomScale_inContext_;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v33);
  }
  else
  {
    uint64_t v24 = 0;
  }
  id v25 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:v14[393] target:v18 action:@"doneTapped:"];

  swift_unknownObjectRelease();
  id v26 = [v17 navigationItem];
  [v26 setRightBarButtonItem:v25];

  objc_super v27 = *(void **)&v17[OBJC_IVAR____TtC7Journal22EditDateViewController_tableView];
  [v27 setDelegate:v17];
  [v27 setDataSource:v17];
  type metadata accessor for SuggestedDateCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v29 = String._bridgeToObjectiveC()();
  [v27 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v29];

  id v30 = [v17 view];
  if (v30)
  {
    uint64_t v31 = v30;
    [v30 addSubview:v27];

    sub_1001DCF60(0.0);
    swift_bridgeObjectRelease();
    char v32 = *(void **)&v17[OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker];
    [v32 addTarget:v17 action:"datePickerValueChanged:" forControlEvents:4096];
    [v32 setDatePickerMode:1];
  }
  else
  {
    __break(1u);
  }
}

id sub_1000639F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditDateViewController();
  return [super dealloc];
}

uint64_t sub_100063AC0()
{
  return type metadata accessor for EditDateViewController();
}

uint64_t type metadata accessor for EditDateViewController()
{
  uint64_t result = qword_1007FAAD0;
  if (!qword_1007FAAD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100063B14()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100063D6C()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider) + 24);
  if (!v1) {
    return;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    BOOL v7 = __OFSUB__(v6, 1);
    unint64_t v3 = v6 - 1;
    if (v7) {
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_23;
    }
  }
  else
  {
    unint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v3 = v2 - 1;
    swift_bridgeObjectRetain();
  }
  if ((v3 & 0x8000000000000000) == 0 && v3 < v2)
  {
    if ((v1 & 0xC000000000000001) == 0)
    {
      if (v3 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
        swift_retain();
        goto LABEL_9;
      }
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
LABEL_23:
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates))
    {
      id v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal22EditDateViewController_tableView);
      sub_100010218((uint64_t *)&unk_1007FABC0);
      type metadata accessor for IndexPath();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
      IndexPath.init(item:section:)();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v5 reconfigureRowsAtIndexPaths:isa];
      swift_release();
    }
    else
    {
      swift_release();
    }
    return;
  }

  swift_bridgeObjectRelease();
}

unint64_t sub_100064198(char *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  BOOL v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = IndexPath.section.getter();
  if (v8 > 1)
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((*((unsigned char *)&off_100791D68 + v8 + 32) & 1) == 0)
  {
    a1 = (char *)[objc_allocWithZone((Class)UITableViewCell) init];
    [a1 setSelectionStyle:0];
    id v18 = [a1 contentView];
    [v18 addSubview:*(void *)(v3 + OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker)];

    sub_1001DCF60(0.0);
    swift_bridgeObjectRelease();
    return (unint64_t)a1;
  }
  NSString v9 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v11 = [a1 dequeueReusableCellWithIdentifier:v9 forIndexPath:isa];

  type metadata accessor for SuggestedDateCell();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider);
    uint64_t v13 = *(void *)(v2 + 24);
    if (!v13)
    {
      id v20 = [objc_allocWithZone((Class)UITableViewCell) init];

      return (unint64_t)v20;
    }
    a1 = (char *)v12;
    swift_bridgeObjectRetain();
    unint64_t result = IndexPath.row.getter();
    if ((v13 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v15 = *(void *)(v13 + 8 * result + 32);
        swift_retain();
LABEL_9:
        swift_bridgeObjectRelease();
        *(void *)&a1[OBJC_IVAR____TtC7Journal17SuggestedDateCell_delegate + 8] = &off_100797D10;
        swift_unknownObjectWeakAssign();
        id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                    + OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker), "date"));
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v17 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 0, 1, v17);
        sub_1003179A0(v15, v2, (uint64_t)v7);
        swift_release();
        sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
        return (unint64_t)a1;
      }
      __break(1u);
      return result;
    }
LABEL_18:
    uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }

  id v19 = objc_allocWithZone((Class)UITableViewCell);

  return (unint64_t)[v19 init];
}

uint64_t sub_1000646E0(uint64_t a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FABA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FABB0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - v14;
  sub_10001B220(a1, (uint64_t)v5, &qword_1007FABA8);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_100804070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16) == 1) {
    return sub_10001457C((uint64_t)v5, &qword_1007FABA8);
  }
  uint64_t v18 = *(int *)(v16 + 48);
  uint64_t v46 = v1;
  uint64_t v47 = v15;
  char v19 = v5[v18];
  uint64_t v20 = v10;
  uint64_t v48 = v9;
  uint64_t v21 = *(int *)(v6 + 48);
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v22 = v10 + 32;
  uint64_t v23 = v24;
  v24((uint64_t)v8, v5, v48);
  v8[v21] = v19;
  uint64_t v25 = v46;
  id v26 = v47;
  uint64_t v27 = v48;
  int v28 = v8[*(int *)(v6 + 48)];
  v24((uint64_t)v47, v8, v48);
  unint64_t v29 = *(void *)(*(void *)(v25 + OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider) + 24);
  if (v29)
  {
    int v45 = v28;
    id v30 = *(void **)(v25 + OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker);
    swift_bridgeObjectRetain();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    [v30 setDate:isa animated:1];

    uint64_t v44 = (void (*)(uint64_t, char *, uint64_t))v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v12, v26, v27);
    type metadata accessor for SuggestedDateItem(0);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType;
    *(unsigned char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
    uint64_t v34 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates;
    *(unsigned char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
    v23(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date, v12, v27);
    *(unsigned char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type) = v45;
    *(unsigned char *)(v32 + v33) = 3;
    uint64_t v35 = v46;
    *(unsigned char *)(v32 + v34) = 0;
    *(void *)(v35 + OBJC_IVAR____TtC7Journal22EditDateViewController_selectedDateItem) = v32;
    uint64_t result = swift_release();
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      BOOL v43 = __OFSUB__(v42, 1);
      unint64_t v37 = v42 - 1;
      if (v43)
      {
LABEL_21:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      unint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v36 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v36 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v37 = v36 - 1;
    }
    uint64_t v23 = v44;
    uint64_t v22 = v48;
    if ((v37 & 0x8000000000000000) != 0 || v37 >= v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v33 = (uint64_t)v47;
    if ((v29 & 0xC000000000000001) == 0)
    {
      if (v37 < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v38 = *(void *)(v29 + 8 * v37 + 32);
        swift_retain();
LABEL_11:
        swift_bridgeObjectRelease();
        uint64_t v39 = v38 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
        swift_beginAccess();
        (*((void (**)(uint64_t, uint64_t, uint64_t))v23 + 3))(v39, v33, v22);
        swift_endAccess();
        swift_release();
LABEL_13:
        uint64_t v40 = *(void **)(v35 + OBJC_IVAR____TtC7Journal22EditDateViewController_tableView);
        sub_100010218((uint64_t *)&unk_1007FABC0);
        type metadata accessor for IndexPath();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
        IndexPath.init(item:section:)();
        Class v41 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v40 reconfigureRowsAtIndexPaths:v41];

        return (*((uint64_t (**)(char *, uint64_t))v23 + 1))(v47, v22);
      }
      __break(1u);
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v38 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v26, v27);
}

id sub_100064C64(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)&v1[OBJC_IVAR____TtC7Journal22EditDateViewController_preselectedDate];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v5, 1, 1, v6);
  *(void *)&v1[OBJC_IVAR____TtC7Journal22EditDateViewController_selectedDateItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal22EditDateViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC7Journal22EditDateViewController_tableView;
  id v10 = objc_allocWithZone((Class)UITableView);
  uint64_t v11 = v1;
  *(void *)&v1[v9] = [v10 initWithFrame:2 style:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker;
  *(void *)&v11[v12] = sub_100062EE4();
  uint64_t v13 = v19;
  uint64_t v14 = v19 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, v14, v6);
  v8((uint64_t)v4, 0, 1, v6);
  swift_beginAccess();
  sub_100064EB8((uint64_t)v4, v5);
  swift_endAccess();
  type metadata accessor for DatePickerDataProvider();
  uint64_t v15 = (void *)swift_allocObject();
  v15[4] = 0;
  v15[5] = 0;
  v15[2] = v13;
  v15[3] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider] = v15;
  swift_retain();

  uint64_t v16 = (objc_class *)type metadata accessor for EditDateViewController();
  v20.receiver = v11;
  v20.super_class = v16;
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_100064EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100064F20()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Journal22EditDateViewController_preselectedDate];
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC7Journal22EditDateViewController_selectedDateItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal22EditDateViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC7Journal22EditDateViewController_tableView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UITableView) initWithFrame:2 style:0.0];
  uint64_t v4 = OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker;
  *(void *)&v0[v4] = sub_100062EE4();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10006503C()
{
  uint64_t v1 = sub_100010218(&qword_1007FABA8);
  __chkstk_darwin(v1 - 8);
  uint64_t v51 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v44 - v4;
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  __n128 v17 = __chkstk_darwin(v14);
  uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC7Journal22EditDateViewController_selectedDateItem);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v11, 1, 1, v12, v17);
    goto LABEL_6;
  }
  uint64_t v49 = v16;
  uint64_t v50 = (char *)&v44 - v15;
  uint64_t v19 = v18 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
  swift_beginAccess();
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v48(v11, v19, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  objc_super v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v20(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
    goto LABEL_10;
  }
  int v45 = v5;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v46(v50, v11, v12);
  uint64_t v21 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type);
  uint64_t v47 = v0;
  uint64_t v22 = v0 + OBJC_IVAR____TtC7Journal22EditDateViewController_preselectedDate;
  swift_beginAccess();
  sub_10001B220(v22, (uint64_t)v8, (uint64_t *)&unk_1007FC470);
  if (v20(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
    sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FC470);
LABEL_9:
    uint64_t v0 = v47;
LABEL_10:
    uint64_t v26 = v0 + OBJC_IVAR____TtC7Journal22EditDateViewController_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v28 = *(void *)(v26 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = sub_100010218((uint64_t *)&unk_100804070);
      uint64_t v31 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v51, 1, 1, v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 8))(v31, 0, ObjectType, v28);
      swift_unknownObjectRelease();
      return sub_10001457C(v31, &qword_1007FABA8);
    }
    return result;
  }
  uint64_t v23 = v49;
  v46(v49, v8, v12);
  sub_100065D60();
  uint64_t v24 = v50;
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v25((uint64_t)v23, v12);
    v25((uint64_t)v24, v12);
    goto LABEL_9;
  }
  uint64_t v32 = v47 + OBJC_IVAR____TtC7Journal22EditDateViewController_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v33 = *(void *)(v32 + 8);
    uint64_t v34 = sub_100010218((uint64_t *)&unk_100804070);
    uint64_t v35 = *(int *)(v34 + 48);
    uint64_t v36 = (uint64_t)v45;
    v48(v45, (uint64_t)v24, v12);
    *(unsigned char *)(v36 + v35) = v21;
    uint64_t v37 = v36;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v36, 0, 1, v34);
    switch(v21)
    {
      case 1:
      case 2:
      case 3:
      case 4:
        char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        char v42 = 0;
        uint64_t v38 = v49;
        if (v41) {
          goto LABEL_18;
        }
        break;
      default:
        swift_bridgeObjectRelease();
        uint64_t v38 = v49;
LABEL_18:
        char v42 = sub_100070E90();
        break;
    }
    uint64_t v43 = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 8))(v37, v42 & 1, v43, v33);
    swift_unknownObjectRelease();
    sub_10001457C(v37, &qword_1007FABA8);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v39((uint64_t)v38, v12);
    uint64_t v40 = v50;
  }
  else
  {
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v39((uint64_t)v23, v12);
    uint64_t v40 = v24;
  }
  return ((uint64_t (*)(char *, uint64_t))v39)(v40, v12);
}

void sub_1000656BC()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = __chkstk_darwin(v1).n128_u64[0];
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker), "date", v3));
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  type metadata accessor for SuggestedDateItem(0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
  uint64_t v9 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v7 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date, v5, v1);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type) = 3;
  *(unsigned char *)(v7 + v8) = 3;
  *(unsigned char *)(v7 + v9) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22EditDateViewController_selectedDateItem) = v7;
  swift_release();
  sub_100063D6C();
}

uint64_t sub_100065830(unint64_t a1)
{
  if (a1 > 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*((unsigned char *)&off_100791CF0 + a1 + 32))
  {
    if (qword_1007F78C0 == -1)
    {
LABEL_4:
      uint64_t v1 = &xmmword_10083E328;
      return *(void *)v1;
    }
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1007F78B8 != -1) {
    swift_once();
  }
  uint64_t v1 = &xmmword_10083E318;
  return *(void *)v1;
}

unint64_t sub_1000658DC(unint64_t result)
{
  if (result > 1)
  {
    __break(1u);
  }
  else
  {
    if (*((unsigned char *)&off_100791D18 + result + 32) != 1) {
      return 0;
    }
    uint64_t v2 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider) + 32);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_100065948(unint64_t a1)
{
  if (a1 > 1)
  {
    __break(1u);
  }
  else
  {
    if (*((unsigned char *)&off_100791D40 + a1 + 32) != 1) {
      return 1;
    }
    unint64_t v2 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider) + 24);
    if (!v2) {
      return 0;
    }
    if (!(v2 >> 62)) {
      return *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1000659EC(unint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = IndexPath.section.getter();
  if (result > 1)
  {
    __break(1u);
  }
  else
  {
    if (*((unsigned char *)&off_100791D90 + result + 32) != 1) {
      return result;
    }
    unint64_t v2 = *(void *)(*(void *)(v4 + OBJC_IVAR____TtC7Journal22EditDateViewController_dataProvider) + 24);
    if (!v2) {
      return result;
    }
    swift_bridgeObjectRetain();
    unint64_t result = IndexPath.row.getter();
    a1 = result;
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    if (!(v2 >> 62))
    {
      unint64_t v11 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
LABEL_6:
  if ((a1 & 0x8000000000000000) == 0 && a1 < v11)
  {
    if ((v2 & 0xC000000000000001) == 0)
    {
      if (a1 >= *(void *)(v3 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = *(void *)(v2 + 8 * a1 + 32);
      swift_retain();
      goto LABEL_11;
    }
LABEL_23:
    uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v12 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates))
    {
      return swift_release();
    }
    else
    {
      uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtC7Journal22EditDateViewController_datePicker);
      uint64_t v14 = v12 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
      swift_beginAccess();
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v15(v9, v14, v6);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      [v13 setDate:isa animated:1];

      v15(v9, v14, v6);
      LOBYTE(v14) = *(unsigned char *)(v12 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type);
      type metadata accessor for SuggestedDateItem(0);
      uint64_t v17 = swift_allocObject();
      uint64_t v18 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType;
      *(unsigned char *)(v17 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
      uint64_t v19 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates;
      *(unsigned char *)(v17 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date, v9, v6);
      *(unsigned char *)(v17 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type) = v14;
      *(unsigned char *)(v17 + v18) = 3;
      *(unsigned char *)(v17 + v19) = 0;
      *(void *)(v4 + OBJC_IVAR____TtC7Journal22EditDateViewController_selectedDateItem) = v17;
      swift_release();
      sub_100063D6C();
      return swift_release();
    }
  }

  return swift_bridgeObjectRelease();
}

unint64_t sub_100065D60()
{
  unint64_t result = qword_1007FABD0;
  if (!qword_1007FABD0)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FABD0);
  }
  return result;
}

uint64_t sub_100065DB8()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)((swift_isaMask & *v0) + 0x208)
                                       + **(int **)((swift_isaMask & *v0) + 0x208));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100065ECC;
  return v4(1);
}

uint64_t sub_100065ECC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100065FC8, 0, 0);
}

uint64_t sub_100065FC8()
{
  (*(void (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x288))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100066060()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *v0) + 0x208)
                                      + **(int **)((swift_isaMask & *v0) + 0x208));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100066174;
  return v4(0);
}

uint64_t sub_100066174()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100066440, 0, 0);
}

uint64_t sub_100066270()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_100065DB8();
}

uint64_t sub_1000662FC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_100066060();
}

uint64_t sub_100066388()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10002C194;
  return sub_100065DB8();
}

id sub_100066414()
{
  uint64_t v0 = (void *)Journaling.deinit();

  return v0;
}

char *sub_100066444(void *a1)
{
  uint64_t v105 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v111 = (char *)v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007F9F68);
  __chkstk_darwin(v6 - 8);
  uint64_t v108 = (uint64_t)v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  v103[1] = (char *)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v103[2] = (char *)v103 - v11;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  unint64_t v109 = (char *)v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v112 = (char *)v103 - v15;
  __chkstk_darwin(v16);
  uint64_t v106 = (uint64_t)v103 - v17;
  __chkstk_darwin(v18);
  uint64_t v107 = (uint64_t)v103 - v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v103 - v21;
  __chkstk_darwin(v23);
  uint64_t v113 = (char *)v103 - v24;
  uint64_t v25 = OBJC_IVAR____TtC7Journal18FullScreenLinkView_dateLabel;
  id v26 = objc_allocWithZone((Class)UILabel);
  uint64_t v27 = v1;
  *(void *)&v1[v25] = [v26 init];
  id v28 = objc_allocWithZone((Class)type metadata accessor for LPLinkAssetView());
  uint64_t v115 = a1;
  *(void *)&v27[OBJC_IVAR____TtC7Journal18FullScreenLinkView_linkView] = sub_1006488D0(v115);

  unint64_t v29 = (objc_class *)type metadata accessor for FullScreenLinkView();
  v118.receiver = v27;
  v118.super_class = v29;
  id v30 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v31 = objc_allocWithZone((Class)UIStackView);
  uint64_t v116 = (char *)v30;
  uint64_t v32 = (char *)[v31 init];
  [v32 setAxis:1];
  [v32 setAlignment:3];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  [v32 setSpacing:*(double *)&qword_10083D908];
  [v116 addSubview:v32];
  id v33 = [v32 superview];
  uint64_t v34 = v8;
  uint64_t v35 = (uint64_t)v22;
  if (v33)
  {
    uint64_t v36 = v33;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v37 = [v32 centerYAnchor];
    id v38 = [v36 centerYAnchor];
    id v39 = [v37 constraintEqualToAnchor:v38];

    [v39 setConstant:0.0];
    if (v39)
    {
      id v40 = v39;
      [v40 setActive:1];
    }
    uint64_t v8 = v34;
  }
  if (qword_1007F7300 != -1) {
    swift_once();
  }
  double v41 = *(double *)&qword_10083D910;
  id v42 = [v32 superview];
  if (v42)
  {
    uint64_t v43 = v42;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v44 = [v32 leadingAnchor];
    id v45 = [v43 leadingAnchor];
    id v46 = [v44 constraintEqualToAnchor:v45];

    [v46 setConstant:v41];
    if (v46)
    {
      id v47 = v46;
      [v47 setActive:1];
    }
    uint64_t v8 = v34;
  }
  double v48 = *(double *)&qword_10083D910;
  id v49 = [v32 superview];
  uint64_t v50 = (uint64_t)v111;
  if (v49)
  {
    uint64_t v51 = v49;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v52 = [v32 trailingAnchor];
    id v53 = [v51 trailingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    [v54 setConstant:-v48];
    if (v54)
    {
      id v55 = v54;
      [v55 setActive:1];
    }
    uint64_t v8 = v34;
  }
  uint64_t v56 = OBJC_IVAR____TtC7Journal18FullScreenLinkView_linkView;
  id v57 = [*(id *)&v116[OBJC_IVAR____TtC7Journal18FullScreenLinkView_linkView] layer];
  if (qword_1007F7CA0 != -1) {
    swift_once();
  }
  v117[0] = xmmword_10083E9C0;
  v117[1] = *(_OWORD *)&qword_10083E9D0;
  v117[2] = xmmword_10083E9E0;
  v117[3] = *(_OWORD *)&qword_10083E9F0;
  [v57 setCornerRadii:v117];

  uint64_t v110 = v56;
  long long v58 = *(void **)&v116[v56];
  [v32 addArrangedSubview:v58];
  id v59 = [v58 widthAnchor];
  id v60 = [v32 widthAnchor];
  id v61 = [v59 constraintEqualToAnchor:v60];

  [v61 setActive:1];
  _s9LinkAssetCMa(0);
  uint64_t v62 = swift_dynamicCastClass();
  uint64_t v63 = (uint64_t)v112;
  uint64_t v64 = (uint64_t)v113;
  if (v62)
  {
    uint64_t v65 = v115;
    uint64_t v66 = v108;
    sub_1003F35A4(v108);

    uint64_t v67 = _s9LinkAssetC8LinkDataVMa(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v66, 1, v67) == 1)
    {
      sub_10001457C(v66, &qword_1007F9F68);
      uint64_t v68 = v107;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v107, 1, 1, v114);
    }
    else
    {
      uint64_t v69 = v66 + *(int *)(v67 + 24);
      uint64_t v68 = v107;
      sub_100045944(v69, v107);
      sub_10006745C(v66, _s9LinkAssetC8LinkDataVMa);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v68, 1, v114) != 1)
      {
        uint64_t v78 = v68;
        uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
        uint64_t v80 = &v120;
        goto LABEL_37;
      }
    }
    sub_10001457C(v68, (uint64_t *)&unk_1007FC470);
  }
  _s20ThirdPartyMediaAssetCMa(0);
  if (!swift_dynamicCastClass()) {
    goto LABEL_29;
  }
  uint64_t v70 = v115;
  sub_1003F37CC(v50);

  uint64_t v71 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48))(v50, 1, v71) != 1)
  {
    uint64_t v72 = v106;
    sub_100045944(v50 + *(int *)(v71 + 40), v106);
    sub_10006745C(v50, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v72, 1, v114) == 1) {
      goto LABEL_28;
    }
    uint64_t v78 = v72;
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    uint64_t v80 = &v119;
LABEL_37:
    uint64_t v81 = *(v80 - 32);
    uint64_t v82 = v114;
    v79(v81, v78, v114);
    v79(v35, v81, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v82);
    goto LABEL_38;
  }
  sub_10001457C(v50, &qword_1007F9DD8);
  uint64_t v72 = v106;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v106, 1, 1, v114);
LABEL_28:
  sub_10001457C(v72, (uint64_t *)&unk_1007FC470);
LABEL_29:
  unint64_t v73 = *(void **)&v115[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (!v73)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v35, 1, 1, v114);
LABEL_38:
    p_info = &OBJC_METACLASS____TtC7Journal10Journaling.info;
    goto LABEL_39;
  }
  id v74 = [v73 createdDate];
  p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtC7Journal10Journaling + 32);
  if (v74)
  {
    uint64_t v76 = v74;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v77 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v63, v77, 1, v114);
  sub_100062DA4(v63, v35);
LABEL_39:
  uint64_t v83 = (uint64_t)v109;
  sub_100062DA4(v35, v64);
  uint64_t v84 = p_info[387];
  uint64_t v85 = *(void **)((char *)&v84->flags + (void)v116);
  sub_100045944(v64, v83);
  uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v87 = v86(v83, 1, v114);
  id v88 = v85;
  if (v87 == 1)
  {
    sub_10001457C(v83, (uint64_t *)&unk_1007FC470);
    NSString v89 = 0;
  }
  else
  {
    unint64_t v112 = v32;
    uint64_t v90 = (uint64_t)v104;
    static Date.FormatStyle.TimeStyle.shortened.getter();
    static FormatStyleCapitalizationContext.standalone.getter();
    static Locale.autoupdatingCurrent.getter();
    static Calendar.autoupdatingCurrent.getter();
    static TimeZone.autoupdatingCurrent.getter();
    static Date.now.getter();
    sub_100067404();
    Date.formatted<A>(_:)();
    uint64_t v91 = v114;
    uint64_t v32 = v112;
    sub_10006745C(v90, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v83, v91);
    NSString v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v88 setText:v89];

  uint64_t v92 = v116;
  uint64_t v93 = *(void **)((char *)&v84->flags + (void)v116);
  uint64_t v94 = (uint64_t)v113;
  [v93 setHidden:v86((uint64_t)v113, 1, v114) == 1];
  uint64_t v95 = self;
  id v96 = v93;
  id v97 = [v95 secondaryLabelColor];
  [v96 setTextColor:v97];

  uint64_t v98 = qword_1007F7290;
  id v99 = *(id *)((char *)&v84->flags + (void)v92);
  if (v98 != -1) {
    swift_once();
  }
  [v99 setFont:qword_10083D858];

  uint64_t v100 = v116;
  uint64_t v101 = *(void **)((char *)&v84->flags + (void)v116);
  [v101 setAdjustsFontForContentSizeCategory:1];
  [v101 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [v101 setAdjustsFontSizeToFitWidth:1];
  [v101 setLineBreakMode:0];
  [v101 setNumberOfLines:0];
  [v32 addArrangedSubview:v101];
  sub_1005412A4(*(void **)&v100[v110]);

  sub_10001457C(v94, (uint64_t *)&unk_1007FC470);
  return v100;
}

id sub_100067360()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenLinkView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenLinkView()
{
  return self;
}

unint64_t sub_100067404()
{
  unint64_t result = qword_1007F8F38;
  if (!qword_1007F8F38)
  {
    _s23YearAdaptiveFormatStyleVMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F8F38);
  }
  return result;
}

uint64_t sub_10006745C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100067550(char a1)
{
  if (a1)
  {
    uint64_t v3 = (void *)sub_1001EA8CC(a1);
    FilterOption.description.getter(a1);
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [self tokenWithIcon:v3 text:v4];

    [v5 setRepresentedObject:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();
    id v6 = [v1 searchBar];
    id v7 = [v6 searchTextField];

    id v8 = v5;
    id v9 = [v7 tokens];
    sub_100068578();
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 setTokens:isa];
  }
}

id sub_1000677B0(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC7Journal23JournalSearchController_searchDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v6 = &v3[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchText];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0xE000000000000000;
  *(void *)&v3[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchTokens] = _swiftEmptyArrayStorage;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for JournalSearchController();
  id v8 = [super initWithNibName:v7 bundle:a3];

  return v8;
}

id sub_100067964()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalSearchController();
  [super dealloc];
}

uint64_t type metadata accessor for JournalSearchController()
{
  return self;
}

uint64_t sub_100067A1C(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  *(void *)&double v4 = __chkstk_darwin(v3 - 8).n128_u64[0];
  id v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 searchBar];
  id v8 = [v7 text];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  id v12 = [a1 searchBar];
  id v13 = [v12 searchTextField];

  id v14 = [v13 tokens];
  sub_100068578();
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1005A86F4(v9, v11);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  v56[0] = 12369903;
  uint64_t v19 = static String._uncheckedFromUTF8(_:)();
  if (v18)
  {
    if (v16 == v19 && v18 == v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v22 = HIBYTE(v11) & 0xF;
  }
  else {
    uint64_t v22 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v22)
  {
LABEL_16:
    uint64_t v23 = (uint64_t *)&v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchText];
    if (v9 == *(void *)&v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchText]
      && v11 == *(void *)&v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchText + 8]
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchTokens];
      swift_bridgeObjectRetain();
      unsigned __int8 v25 = sub_1004B8718(v15, v24);
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_20;
      }
    }
    *uint64_t v23 = v9;
    v23[1] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchTokens] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v26 = &v1[OBJC_IVAR____TtC7Journal23JournalSearchController_searchDelegate];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v51 = v9;
      unint64_t v52 = v11;
      uint64_t v48 = *((void *)v26 + 1);
      uint64_t v49 = Strong;
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v28 = result;
      }
      else
      {
        uint64_t v28 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
      }
      id v53 = v6;
      id v54 = v1;
      uint64_t v50 = v22;
      if (v28)
      {
        if (v28 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v30 = 0;
        id v31 = _swiftEmptyArrayStorage;
        while (1)
        {
          if ((v15 & 0xC000000000000001) != 0) {
            id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v32 = *(id *)(v15 + 8 * v30 + 32);
          }
          id v33 = v32;
          if ([v32 representedObject])
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v55, 0, sizeof(v55));
          }
          sub_1000685B8((uint64_t)v55, (uint64_t)v56);
          if (v56[3])
          {
            if (swift_dynamicCast()) {
              goto LABEL_40;
            }
          }
          else
          {
            sub_10001B418((uint64_t)v56);
          }
          char v57 = 12;
LABEL_40:

          char v34 = v57;
          if (v57 != 12)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v31 = sub_1002A5EEC(0, v31[2] + 1, 1, v31);
            }
            unint64_t v36 = v31[2];
            unint64_t v35 = v31[3];
            if (v36 >= v35 >> 1) {
              id v31 = sub_1002A5EEC((void *)(v35 > 1), v36 + 1, 1, v31);
            }
            v31[2] = v36 + 1;
            *((unsigned char *)v31 + v36 + 32) = v34;
          }
          if (v28 == ++v30) {
            goto LABEL_49;
          }
        }
      }
      id v31 = _swiftEmptyArrayStorage;
LABEL_49:
      swift_bridgeObjectRelease();
      uint64_t ObjectType = swift_getObjectType();
      swift_bridgeObjectRelease();
      uint64_t v9 = v51;
      unint64_t v11 = v52;
      (*(void (**)(void *, uint64_t, unint64_t, uint64_t))(v48 + 8))(v31, v51, v52, ObjectType);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      id v6 = v53;
      uint64_t v1 = v54;
      if (!v50) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (!v22) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v38 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v6, 1, 1, v38);
    type metadata accessor for MainActor();
    id v39 = v1;
    uint64_t v40 = static MainActor.shared.getter();
    double v41 = (void *)swift_allocObject();
    v41[2] = v40;
    v41[3] = &protocol witness table for MainActor;
    v41[4] = v9;
    v41[5] = v11;
    v41[6] = v39;
    sub_100328A60((uint64_t)v6, (uint64_t)&unk_1007FAD60, (uint64_t)v41);
    return swift_release();
  }
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v42) {
      goto LABEL_16;
    }
  }
  else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = &v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchText];
  *(void *)uint64_t v43 = 0;
  *((void *)v43 + 1) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  *(void *)&v1[OBJC_IVAR____TtC7Journal23JournalSearchController_currentSearchTokens] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v44 = &v1[OBJC_IVAR____TtC7Journal23JournalSearchController_searchDelegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v45 = *((void *)v44 + 1);
    uint64_t v46 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v45 + 32))(v46, v45);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000680A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_100068144, v8, v7);
}

uint64_t sub_100068144()
{
  if (qword_1007F6948 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_100068210;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return sub_1000689EC(v3, v2);
}

uint64_t sub_100068210(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_100068338, v4, v3);
}

uint64_t sub_100068338()
{
  uint64_t v1 = v0[4];
  swift_release();
  uint64_t v2 = v1 + OBJC_IVAR____TtC7Journal23JournalSearchController_searchDelegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = v0[9];
    uint64_t v5 = v0[2];
    uint64_t v4 = v0[3];
    uint64_t v6 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v5, v4, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

unint64_t sub_100068578()
{
  unint64_t result = qword_1007FA9E8;
  if (!qword_1007FA9E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007FA9E8);
  }
  return result;
}

uint64_t sub_1000685B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FAD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100068620()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100068668(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1000680A8(a1, v4, v5, v6, v7, v8);
}

uint64_t type metadata accessor for ImageDownloader()
{
  return self;
}

uint64_t sub_100068754()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FAE10);
  sub_100026A54(v0, (uint64_t)qword_1007FAE10);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

id sub_100068850()
{
  uint64_t v0 = (objc_class *)type metadata accessor for JournalSpotlightManager();
  id v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  uint64_t v2 = qword_1007F6D38;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  v1[15] = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  swift_release();
  v4.receiver = v1;
  v4.super_class = v0;
  id result = [super init];
  qword_10083CEA8 = (uint64_t)result;
  return result;
}

id sub_100068924()
{
  id v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  uint64_t v2 = qword_1007F6D38;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  v1[15] = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  swift_release();
  v4.receiver = v1;
  v4.super_class = v0;
  return [super init];
}

uint64_t sub_1000689EC(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  sub_100010218((uint64_t *)&unk_100800A60);
  v3[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CSSearchQuery.Results.Item();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v3[17] = v6;
  v3[18] = *(void *)(v6 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CSSearchQuery.Results();
  v3[20] = v7;
  v3[21] = *(void *)(v7 - 8);
  v3[22] = swift_task_alloc();
  return _swift_task_switch(sub_100068C04, v2, 0);
}

uint64_t sub_100068C04()
{
  id v1 = (void *)v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  [*(id *)(v2 + 112) cancel];
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_100069C80((uint64_t)&off_100791E68, v3, v1);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v0[3] = v4;
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  id v5 = objc_allocWithZone((Class)CSSearchQuery);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithQueryString:v6 queryContext:0];
  v0[23] = v7;

  uint64_t v8 = *(void **)(v2 + 112);
  *(void *)(v2 + 112) = v7;
  id v9 = v7;

  CSSearchQuery.results.getter();
  id v12 = (uint64_t (__cdecl *)())((char *)&dword_1008077B8 + dword_1008077B8);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[24] = v10;
  void *v10 = v0;
  v10[1] = sub_100068DD4;
  return v12();
}

uint64_t sub_100068DD4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[25] = a1;
  v4[26] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[22];
  uint64_t v6 = v3[21];
  uint64_t v7 = v3[20];
  uint64_t v8 = v3[8];
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v1) {
    id v9 = sub_100069514;
  }
  else {
    id v9 = sub_100068F58;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_100068F58()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[15];
    char v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    id v32 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v33 = *(void *)(v3 + 72);
    uint64_t v30 = v0[11];
    id v31 = (void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    swift_bridgeObjectRetain();
    unint64_t v35 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = v0[16];
      uint64_t v6 = v0[14];
      uint64_t v8 = v0[9];
      uint64_t v7 = v0[10];
      v34(v5, v4, v6);
      id v9 = (void *)CSSearchQuery.Results.Item.item.getter();
      id v10 = [v9 uniqueIdentifier];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      URL.init(string:)();
      swift_bridgeObjectRelease();
      (*v32)(v5, v6);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v8, 1, v7) == 1)
      {
        sub_100052EAC(v0[9]);
      }
      else
      {
        uint64_t v12 = v0[12];
        uint64_t v11 = v0[13];
        uint64_t v13 = v0[10];
        id v14 = *v31;
        (*v31)(v11, v0[9], v13);
        v14(v12, v11, v13);
        unint64_t v15 = (unint64_t)v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v15 = sub_1002A59DC(0, v35[2] + 1, 1, (unint64_t)v35);
        }
        unint64_t v17 = *(void *)(v15 + 16);
        unint64_t v16 = *(void *)(v15 + 24);
        if (v17 >= v16 >> 1) {
          unint64_t v15 = sub_1002A59DC(v16 > 1, v17 + 1, 1, v15);
        }
        uint64_t v18 = v0[12];
        uint64_t v19 = v0[10];
        *(void *)(v15 + 16) = v17 + 1;
        unint64_t v35 = (void *)v15;
        v14(v15+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v17, v18, v19);
      }
      v4 += v33;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  uint64_t v21 = v0[18];
  uint64_t v22 = v0[19];
  uint64_t v23 = v0[17];
  uint64_t v24 = v0[8];
  uint64_t v25 = swift_allocObject();
  v0[27] = v25;
  *(void *)(v25 + 16) = v20;
  *(void *)(v25 + 24) = v24;
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v22, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v23);
  swift_retain();
  id v26 = (void *)swift_task_alloc();
  v0[28] = v26;
  uint64_t v27 = sub_100010218(&qword_1007FAE58);
  void *v26 = v0;
  v26[1] = sub_1000692CC;
  uint64_t v28 = v0[19];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 5, v28, sub_100069DFC, v25, v27);
}

uint64_t sub_1000692CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  uint64_t v3 = *(void *)(*(void *)v0 + 136);
  uint64_t v4 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10006945C, v4, 0);
}

uint64_t sub_10006945C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100069514()
{
  if (qword_1007F6940 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1007FAE10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in getEntryIdsForSearchText %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void *))(v0 + 8);
  return v7(_swiftEmptyArrayStorage);
}

void sub_100069760(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  id v5 = *(id *)(a2 + 120);
  unint64_t v6 = sub_1000698E4(a1, v5);

  *a3 = v6;
}

uint64_t sub_100069874()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for JournalSpotlightManager()
{
  return self;
}

uint64_t sub_1000698D8()
{
  return v0;
}

unint64_t sub_1000698E4(uint64_t a1, void *a2)
{
  id v28 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 16);
  v27[2] = a1;
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v11 = v4 + 16;
    unint64_t v35 = v12;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v30 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v31 = v14;
    unint64_t v29 = (void (**)(char *, uint64_t))(v11 - 8);
    swift_bridgeObjectRetain();
    char v34 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 40);
    v27[1] = (v11 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v32 = v11;
    while (1)
    {
      v35(v9, v13, v3);
      unint64_t v15 = *v34;
      (*v34)(v9, 0, 1, v3);
      if ((*v33)(v9, 1, v3) == 1) {
        goto LABEL_18;
      }
      (*v30)(v6, v9, v3);
      uint64_t v16 = URL.scheme.getter();
      if (!v17) {
        goto LABEL_3;
      }
      if (v16 == 0x616465726F632D78 && v17 == 0xEA00000000006174)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0) {
          goto LABEL_3;
        }
      }
      id v19 = [v28 persistentStoreCoordinator];
      if (v19)
      {
        uint64_t v21 = v19;
        URL._bridgeToObjectiveC()(v20);
        uint64_t v23 = v22;
        id v24 = [v21 managedObjectIDForURIRepresentation:v22];

        (*v29)(v6, v3);
        if (v24)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        goto LABEL_4;
      }
LABEL_3:
      (*v29)(v6, v3);
LABEL_4:
      v13 += v31;
      if (!--v10)
      {
        v15(v9, 1, 1, v3);
        goto LABEL_18;
      }
    }
  }
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  swift_bridgeObjectRetain();
  v25(v9, 1, 1, v3);
LABEL_18:
  swift_bridgeObjectRelease();
  return v36;
}

void *sub_100069C80(uint64_t a1, uint64_t a2, void *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_100095B64(0, v3, 0);
    unint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v15 = *(v6 - 1);
      uint64_t v16 = *v6;
      swift_bridgeObjectRetain_n();
      v7._uint64_t countAndFlagsBits = 0x22203D3D20;
      v7._object = (void *)0xE500000000000000;
      String.append(_:)(v7);
      v8._uint64_t countAndFlagsBits = a2;
      v8._object = a3;
      String.append(_:)(v8);
      v9._uint64_t countAndFlagsBits = 0x74647763222ALL;
      v9._object = (void *)0xE600000000000000;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100095B64(v10 > 1, v11 + 1, 1);
      }
      v6 += 2;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v15;
      v12[5] = v16;
      --v3;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100069DBC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_100069DFC(unint64_t *a1@<X8>)
{
  sub_100069760(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_100069E18(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC7Journal15CanvasPhotoView_sizeType] = 4;
  *(void *)&v4[OBJC_IVAR____TtC7Journal15CanvasPhotoView_fallbackView] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for CanvasPhotoView();
  [super initWithFrame:a1, a2, a3, a4];
  [v9 setContentMode:2];
  id v10 = [v9 layer];
  [v10 setCornerRadius:7.0];

  [v9 setClipsToBounds:1];
  return v9;
}

id sub_100069FB0(void *a1)
{
  id v3 = [v1 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setImage:a1];
  [v3 setIsAccessibilityElement:1];
  UIAccessibilityTraits v4 = UIAccessibilityTraitImage;
  id v5 = v3;
  unint64_t v6 = (unint64_t)[v5 accessibilityTraits];
  if ((v4 & ~v6) != 0) {
    UIAccessibilityTraits v7 = v4;
  }
  else {
    UIAccessibilityTraits v7 = 0;
  }
  [v5 setAccessibilityTraits:v7 | v6];

  [v5 setAccessibilityIgnoresInvertColors:1];
  return v5;
}

id sub_10006A0F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasPhotoView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasPhotoView()
{
  return self;
}

Swift::Int sub_10006A160(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for Date();
  sub_1000733C4((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_10006A204(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Date();
  sub_1000733C4((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_10006A290(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for Date();
  sub_1000733C4((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

BOOL sub_10006A330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static Date.== infix(_:_:)() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

void sub_10006A384()
{
  uint64_t v1 = *(void (**)(char *, uint64_t))(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0;
    char v9 = 3;
    uint64_t v3 = swift_retain();
    sub_10006A5A0(v3);
    uint64_t v4 = sub_10006A8D4((uint64_t)v1);
    uint64_t v5 = sub_10006AC7C(v1, &v9);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v4)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v5)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_release();
    swift_release();
    swift_release();
    *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if (sub_10006A8D4((uint64_t)v1)) {
      swift_release();
    }
    swift_beginAccess();
    uint64_t v6 = sub_100072C00();
    uint64_t v8 = v7;
    swift_release();
    *(void *)(v2 + 32) = v6;
    *(void *)(v2 + 40) = v8;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10006A5A0(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v11 = &v18[-v10];
  swift_allocObject();
  swift_weakInit();
  NSManagedObjectContext.performAndWait<A>(_:)();
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FC470);
    uint64_t v12 = a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v12, v5);
    type metadata accessor for SuggestedDateItem(0);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = (unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
    uint64_t v15 = (unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date, v8, v5);
  }
  else
  {
    uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
    v16(v11, v4, v5);
    v16(v8, v11, v5);
    type metadata accessor for SuggestedDateItem(0);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = (unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
    uint64_t v15 = (unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
    v16((unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date), v8, v5);
  }
  *(unsigned char *)(v13 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type) = 2;
  *uint64_t v14 = 3;
  *uint64_t v15 = 0;
  return v13;
}

uint64_t sub_10006A8D4(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v11 = &v27[-v10];
  __chkstk_darwin(v12);
  uint64_t v14 = &v27[-v13];
  __chkstk_darwin(v15);
  uint64_t v17 = &v27[-v16];
  uint64_t v18 = a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleDate;
  swift_beginAccess();
  sub_100045944(v18, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    id v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
    v19(v17, v4, v5);
    sub_1002AA5EC((uint64_t)v14);
    uint64_t v20 = sub_10006A5A0(a1) + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v11, v20, v5);
    swift_release();
    sub_1002AA5EC((uint64_t)v8);
    uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v21(v11, v5);
    sub_1000733C4((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
    char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
    v21(v8, v5);
    v21(v14, v5);
    if ((v22 & 1) == 0)
    {
      v19(v14, v17, v5);
      type metadata accessor for SuggestedDateItem(0);
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType;
      *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
      uint64_t v25 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates;
      *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
      v19((unsigned char *)(v23 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date), v14, v5);
      *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type) = 0;
      *(unsigned char *)(v23 + v24) = 3;
      *(unsigned char *)(v23 + v25) = 0;
      return v23;
    }
    v21(v17, v5);
  }
  return 0;
}

uint64_t sub_10006AC7C(void (*a1)(char *, uint64_t), char *a2)
{
  uint64_t v114 = a2;
  uint64_t v3 = type metadata accessor for DatePickerDataProvider.MediaDate();
  uint64_t v125 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v123 = (uint64_t)v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v124 = (char *)v95 - v6;
  uint64_t v119 = type metadata accessor for Calendar.Component();
  uint64_t v122 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  objc_super v118 = (char *)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for Calendar();
  uint64_t v120 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FB060);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  uint64_t v115 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v95 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v95 - v22;
  __chkstk_darwin(v24);
  id v26 = (char *)v95 - v25;
  uint64_t v121 = sub_10006B86C((uint64_t)a1);
  sub_1003F1FA4(v121, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v11, 1, v3) == 1)
  {
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FB060);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_4:
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v16, (uint64_t *)&unk_1007FC470);
    return 0;
  }
  uint64_t v110 = v3;
  unint64_t v109 = v20;
  uint64_t v111 = a1;
  uint64_t v113 = v26;
  unint64_t v112 = v23;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v16, v11, v17);
  sub_100073288((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v28(v16, 0, 1, v17);
  unint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v30 = v29(v16, 1, v17);
  uint64_t v31 = v121;
  if (v30 == 1) {
    goto LABEL_4;
  }
  uint64_t v103 = v18 + 56;
  uint64_t v101 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
  uint64_t v102 = v18 + 48;
  uint64_t v104 = v28;
  char v34 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  uint64_t v106 = v18 + 32;
  uint64_t v105 = v34;
  v34(v113, (uint64_t)v16, v17);
  unint64_t v35 = v116;
  static Calendar.current.getter();
  unint64_t v36 = (void (*)(char *, uint64_t, uint64_t))v27;
  uint64_t v37 = sub_10006A5A0((uint64_t)v111) + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
  swift_beginAccess();
  uint64_t v38 = v112;
  uint64_t v39 = v37;
  uint64_t v40 = v18;
  uint64_t v108 = v18 + 16;
  uint64_t v107 = v36;
  v36(v112, v39, v17);
  swift_release();
  uint64_t v41 = v122;
  uint64_t v42 = *(void (**)(void))(v122 + 104);
  uint64_t v43 = v118;
  unsigned int v98 = enum case for Calendar.Component.day(_:);
  uint64_t v44 = v119;
  uint64_t v99 = v122 + 104;
  id v97 = (void (*)(char *, void, uint64_t))v42;
  v42(v118);
  char v45 = Calendar.isDate(_:equalTo:toGranularity:)();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v47 = v43;
  uint64_t v48 = v35;
  uint64_t v122 = v41 + 8;
  id v96 = v46;
  v46(v47, v44);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v50 = v40 + 8;
  uint64_t v49 = v51;
  v51(v38, v17);
  uint64_t v52 = v120 + 8;
  id v53 = *(void (**)(char *, uint64_t))(v120 + 8);
  uint64_t v54 = v117;
  v53(v48, v117);
  if (v45)
  {
    v49(v113, v17);
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v100 = v17;
  uint64_t v55 = sub_10006A8D4((uint64_t)v111);
  v95[1] = v50;
  v95[0] = v49;
  if (!v55)
  {
    uint64_t v57 = (uint64_t)v115;
    uint64_t v58 = v100;
    v104(v115, 1, 1, v100);
    uint64_t v60 = (uint64_t)v124;
    goto LABEL_15;
  }
  uint64_t v111 = v53;
  uint64_t v56 = v55 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date;
  swift_beginAccess();
  uint64_t v57 = (uint64_t)v115;
  uint64_t v58 = v100;
  v107(v115, v56, v100);
  swift_release();
  v104((char *)v57, 0, 1, v58);
  int v59 = v101(v57, 1, v58);
  uint64_t v60 = (uint64_t)v124;
  if (v59 == 1)
  {
LABEL_15:
    sub_10001457C(v57, (uint64_t *)&unk_1007FC470);
    uint64_t v68 = v112;
    uint64_t v66 = v113;
    uint64_t v69 = v110;
    goto LABEL_16;
  }
  id v61 = v109;
  v105(v109, v57, v58);
  static Calendar.current.getter();
  uint64_t v63 = v118;
  uint64_t v62 = v119;
  v97(v118, v98, v119);
  uint64_t v120 = v52;
  uint64_t v64 = v62;
  uint64_t v65 = v48;
  uint64_t v66 = v113;
  char v67 = Calendar.isDate(_:equalTo:toGranularity:)();
  v96(v63, v64);
  v111(v65, v54);
  ((void (*)(char *, uint64_t))v95[0])(v61, v58);
  uint64_t v68 = v112;
  uint64_t v69 = v110;
  if (v67)
  {
    ((void (*)(char *, uint64_t))v95[0])(v66, v58);
    goto LABEL_9;
  }
LABEL_16:
  int64_t v70 = *(void *)(v31 + 16);
  uint64_t v71 = _swiftEmptyArrayStorage;
  if (!v70)
  {
LABEL_28:
    BOOL v85 = sub_100018A20(0, (uint64_t)v71);
    BOOL v86 = sub_100018A20(1, (uint64_t)v71);
    swift_bridgeObjectRelease();
    if (v86) {
      char v87 = 2;
    }
    else {
      char v87 = 0;
    }
    if (v86) {
      char v88 = 1;
    }
    else {
      char v88 = 3;
    }
    if (v85) {
      char v89 = v87;
    }
    else {
      char v89 = v88;
    }
    uint64_t v90 = v114;
    swift_beginAccess();
    *uint64_t v90 = v89;
    v107(v68, (uint64_t)v66, v58);
    unint64_t v91 = *(void *)(v31 + 16);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v95[0])(v66, v58);
    BOOL v92 = v91 > 1;
    type metadata accessor for SuggestedDateItem(0);
    uint64_t v32 = swift_allocObject();
    uint64_t v93 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType;
    *(unsigned char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_mediaType) = 3;
    uint64_t v94 = OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates;
    *(unsigned char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_hasMultipleDates) = 0;
    v105((char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_date), (uint64_t)v68, v58);
    *(unsigned char *)(v32 + OBJC_IVAR____TtC7Journal17SuggestedDateItem_type) = 1;
    *(unsigned char *)(v32 + v93) = v89;
    *(unsigned char *)(v32 + v94) = v92;
    return v32;
  }
  uint64_t v126 = _swiftEmptyArrayStorage;
  sub_100095CB8(0, v70, 0);
  uint64_t result = sub_100237318(v31);
  uint64_t v72 = result;
  uint64_t v74 = v73;
  char v76 = v75 & 1;
  uint64_t v122 = v31 + 56;
  while ((v72 & 0x8000000000000000) == 0 && v72 < 1 << *(unsigned char *)(v31 + 32))
  {
    if (((*(void *)(v122 + (((unint64_t)v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v72) & 1) == 0) {
      goto LABEL_39;
    }
    if (*(_DWORD *)(v31 + 36) != v74) {
      goto LABEL_40;
    }
    sub_1000732E8(*(void *)(v31 + 48) + *(void *)(v125 + 72) * v72, v60, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
    uint64_t v77 = v60;
    uint64_t v78 = v123;
    sub_100073350(v77, v123, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
    uint64_t v79 = v69;
    char v80 = *(unsigned char *)(v78 + *(int *)(v69 + 20));
    sub_100073288(v78, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
    uint64_t v71 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100095CB8(0, v71[2] + 1, 1);
      uint64_t v71 = v126;
    }
    unint64_t v82 = v71[2];
    unint64_t v81 = v71[3];
    if (v82 >= v81 >> 1)
    {
      sub_100095CB8(v81 > 1, v82 + 1, 1);
      uint64_t v71 = v126;
    }
    v71[2] = v82 + 1;
    *((unsigned char *)v71 + v82 + 32) = v80;
    uint64_t result = sub_1002373BC(v72, v74, v76 & 1, v31);
    uint64_t v72 = result;
    uint64_t v74 = v83;
    char v76 = v84 & 1;
    --v70;
    uint64_t v69 = v79;
    uint64_t v60 = (uint64_t)v124;
    if (!v70)
    {
      sub_1000733B8(result, v83, v84 & 1);
      uint64_t v58 = v100;
      uint64_t v68 = v112;
      uint64_t v66 = v113;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10006B86C(uint64_t a1)
{
  uint64_t v231 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v231);
  v230 = (uint64_t *)((char *)&v227 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v229 = sub_100010218(&qword_1007F9E10);
  unint64_t v294 = *(void *)(v229 - 8);
  __chkstk_darwin(v229);
  uint64_t v4 = (char *)&v227 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v236);
  v235 = (uint64_t *)((char *)&v227 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v234 = sub_100010218((uint64_t *)&unk_100804090);
  uint64_t v6 = *(void *)(v234 - 8);
  __chkstk_darwin(v234);
  uint64_t v262 = (uint64_t)&v227 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = type metadata accessor for Calendar();
  uint64_t v8 = *(void *)(v282 - 8);
  __chkstk_darwin(v282);
  v281 = (char *)&v227 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v280 = type metadata accessor for DateComponents();
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v280 - 8);
  __chkstk_darwin(v280);
  v247 = (char *)&v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v253 = (char *)&v227 - v13;
  __chkstk_darwin(v14);
  v258 = (char *)&v227 - v15;
  unint64_t v16 = type metadata accessor for DatePickerDataProvider.MediaDate();
  uint64_t v291 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v244 = (char *)&v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v233 = (char *)&v227 - v19;
  __chkstk_darwin(v20);
  uint64_t v242 = (uint64_t)&v227 - v21;
  __chkstk_darwin(v22);
  uint64_t v296 = (uint64_t)&v227 - v23;
  __chkstk_darwin(v24);
  v250 = (char *)&v227 - v25;
  __chkstk_darwin(v26);
  v238 = (char *)&v227 - v27;
  __chkstk_darwin(v28);
  uint64_t v248 = (uint64_t)&v227 - v29;
  __chkstk_darwin(v30);
  uint64_t v297 = (uint64_t)&v227 - v31;
  __chkstk_darwin(v32);
  v255 = (char *)&v227 - v33;
  __chkstk_darwin(v34);
  v243 = (char *)&v227 - v35;
  __chkstk_darwin(v36);
  uint64_t v254 = (uint64_t)&v227 - v37;
  __chkstk_darwin(v38);
  uint64_t v298 = (uint64_t)&v227 - v39;
  uint64_t v241 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v241);
  v240 = (uint64_t *)((char *)&v227 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v239 = sub_100010218((uint64_t *)&unk_100804080);
  uint64_t v41 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v239 - 8);
  __chkstk_darwin(v239);
  uint64_t v268 = (uint64_t)&v227 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v43 - 8);
  uint64_t v246 = (uint64_t)&v227 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v245 = (char *)&v227 - v46;
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v227 - v48;
  __chkstk_darwin(v50);
  v288 = (char *)&v227 - v51;
  __chkstk_darwin(v52);
  uint64_t v252 = (uint64_t)&v227 - v53;
  __chkstk_darwin(v54);
  v251 = (char *)&v227 - v55;
  __chkstk_darwin(v56);
  uint64_t v58 = (uint64_t)&v227 - v57;
  __chkstk_darwin(v59);
  uint64_t v261 = (uint64_t)&v227 - v60;
  __chkstk_darwin(v61);
  uint64_t v257 = (uint64_t)&v227 - v62;
  __chkstk_darwin(v63);
  v256 = (char *)&v227 - v64;
  __chkstk_darwin(v65);
  uint64_t v267 = (uint64_t)&v227 - v66;
  __chkstk_darwin(v67);
  uint64_t v266 = (uint64_t)&v227 - v68;
  uint64_t v295 = type metadata accessor for Date();
  unint64_t v69 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  v263 = (char *)&v227 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  v269 = (char *)&v227 - v72;
  __chkstk_darwin(v73);
  v284 = (char *)&v227 - v74;
  char v75 = (uint64_t *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  uint64_t v76 = *v75;
  unint64_t v77 = (unint64_t)*v75 >> 62;
  uint64_t v290 = *v75;
  if (v77)
  {
LABEL_135:
    v299 = (void *)v6;
    swift_bridgeObjectRetain_n();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)v299;
    swift_bridgeObjectRelease();
    if (v78) {
      goto LABEL_3;
    }
LABEL_136:
    v299 = &_swiftEmptySetSingleton;
LABEL_137:
    swift_bridgeObjectRelease();
    return (uint64_t)v299;
  }
  uint64_t v78 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v78) {
    goto LABEL_136;
  }
LABEL_3:
  unint64_t v287 = v290 & 0xC000000000000001;
  uint64_t v260 = v290 & 0xFFFFFFFFFFFFFF8;
  uint64_t v259 = v290 + 32;
  v237 = v41 + 7;
  uint64_t v79 = v6;
  uint64_t v6 = v69 + 48;
  v285 = (void (**)(uint64_t, uint64_t, unint64_t))(v69 + 32);
  v289 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56);
  unsigned int v279 = enum case for Calendar.Component.year(_:);
  unsigned int v278 = enum case for Calendar.Component.month(_:);
  v277 = (void (**)(char *, uint64_t))(v8 + 8);
  unsigned int v276 = enum case for Calendar.Component.day(_:);
  v272 = (void (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 8);
  v270 = (void (**)(void, uint64_t))(v69 + 8);
  unint64_t v69 = 0;
  v232 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
  v299 = &_swiftEmptySetSingleton;
  CGRect v228 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v294 + 56);
  long long v249 = xmmword_1006D6A80;
  long long v275 = xmmword_1006D7C30;
  v274 = v4;
  v273 = (char *)v16;
  v271 = v49;
  uint64_t v8 = (uint64_t)v288;
  uint64_t v283 = v58;
  unint64_t v16 = v295;
  uint64_t v286 = v78;
  v293 = (uint64_t *)v6;
  while (1)
  {
    if (v287)
    {
      char v80 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v69 >= *(void *)(v260 + 16)) {
        goto LABEL_131;
      }
      char v80 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*(id *)(v259 + 8 * v69);
    }
    uint64_t v41 = v80;
    BOOL v81 = __OFADD__(v69++, 1);
    if (v81)
    {
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    unint64_t v294 = v69;
    _s10PhotoAssetCMa(0);
    uint64_t v82 = swift_dynamicCastClass();
    if (v82) {
      break;
    }
LABEL_27:
    _s14LivePhotoAssetCMa(0);
    uint64_t v107 = swift_dynamicCastClass();
    if (!v107) {
      goto LABEL_66;
    }
    uint64_t v108 = v107;
    uint64_t v109 = OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
    if (*(void *)(v107 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
    {
      uint64_t v110 = v41;
    }
    else
    {
      uint64_t v131 = *(void **)(v107 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v131)
      {
        uint64_t v132 = v41;
        id v133 = [v131 assetMetaData];
        if (v133)
        {
          uint64_t v134 = v133;
          uint64_t v135 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v137 = v136;

          CGFloat v138 = v235;
          uint64_t *v235 = v135;
          v138[1] = v137;
          uint64_t v58 = v283;
          swift_storeEnumTagMultiPayload();
          sub_100010218(&qword_1007F99C0);
          uint64_t v139 = swift_allocObject();
          (*v232)(v139 + *(void *)(*(void *)v139 + 104), 1, 1, v234);
          *(_OWORD *)(v139 + *(void *)(*(void *)v139 + 112)) = v249;
          uint64_t v140 = (uint64_t)v138;
          uint64_t v6 = (uint64_t)v293;
          sub_10002C4EC(v140, v139 + *(void *)(*(void *)v139 + 120), (uint64_t *)&unk_10080F2B0);
          *(void *)(v108 + v109) = v139;
          swift_release();
        }
        if (!*(void *)(v108 + v109))
        {
LABEL_61:
          uint64_t v153 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
          uint64_t v141 = v262;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v262, 1, 1, v153);
LABEL_62:
          sub_10001457C(v141, (uint64_t *)&unk_100804090);
          unint64_t v16 = v295;
          (*v289)(v58, 1, 1, v295);
LABEL_63:
          uint64_t v154 = v108 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
          swift_beginAccess();
          uint64_t v155 = v154;
          uint64_t v143 = v261;
          sub_100045944(v155, v261);
          sub_10001457C(v58, (uint64_t *)&unk_1007FC470);
          uint64_t isUniquelyReferenced_nonNull_native = *(void *)v6;
          uint64_t v6 = v6 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          goto LABEL_64;
        }
      }
      else
      {
        uint64_t v152 = v41;
        if (!*(void *)(v108 + v109)) {
          goto LABEL_61;
        }
      }
    }
    swift_retain();
    uint64_t v141 = v262;
    sub_1000398E0(v262);
    swift_release();
    uint64_t v142 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 48))(v141, 1, v142) == 1) {
      goto LABEL_62;
    }
    sub_100045944(v141 + *(int *)(v142 + 20), v58);
    sub_100073288(v141, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t isUniquelyReferenced_nonNull_native = *(void *)v6;
    unint64_t v16 = v295;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v6)(v58, 1, v295) == 1) {
      goto LABEL_63;
    }
    uint64_t v6 = v6 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    uint64_t v143 = v261;
    (*v285)(v261, v58, v16);
    (*v289)(v143, 0, 1, v16);
LABEL_64:
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))isUniquelyReferenced_nonNull_native)(v143, 1, v16) != 1)
    {
      v292 = v41;
      v264 = *v285;
      v264((uint64_t)v269, v143, v16);
      uint64_t v160 = v281;
      static Calendar.current.getter();
      sub_100010218(&qword_1007FB058);
      v265 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native;
      uint64_t v161 = type metadata accessor for Calendar.Component();
      uint64_t v162 = *(void *)(v161 - 8);
      uint64_t v163 = *(void *)(v162 + 72);
      unint64_t v164 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
      uint64_t v165 = swift_allocObject();
      *(_OWORD *)(v165 + 16) = v275;
      unint64_t v166 = v165 + v164;
      uint64_t v167 = *(void (**)(unint64_t, void, uint64_t))(v162 + 104);
      v167(v166, v279, v161);
      v167(v166 + v163, v278, v161);
      v167(v166 + 2 * v163, v276, v161);
      sub_1000F5AEC(v165);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      double v168 = v253;
      Calendar.dateComponents(_:from:)();
      swift_bridgeObjectRelease();
      double v169 = *v277;
      uint64_t v170 = v282;
      (*v277)(v160, v282);
      static Calendar.current.getter();
      uint64_t v58 = (uint64_t)v251;
      Calendar.date(from:)();
      uint64_t v171 = v170;
      uint64_t v172 = v295;
      v169(v160, v171);
      uint64_t v173 = v252;
      sub_100045944(v58, v252);
      if (v265(v173, 1, v172) == 1) {
        goto LABEL_139;
      }
      sub_10001457C(v58, (uint64_t *)&unk_1007FC470);
      (*v272)(v168, v280);
      uint64_t v174 = v297;
      v264(v297, v173, v172);
      uint64_t v49 = v273;
      uint64_t v175 = *((int *)v273 + 5);
      *(unsigned char *)(v174 + v175) = 0;
      uint64_t v176 = v299;
      Hasher.init(_seed:)();
      sub_1000733C4((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
      swift_bridgeObjectRetain();
      dispatch thunk of Hashable.hash(into:)();
      Hasher._combine(_:)(0);
      Swift::Int v177 = Hasher._finalize()();
      uint64_t v178 = -1 << *((unsigned char *)v176 + 32);
      unint64_t v16 = v177 & ~v178;
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v176 + 7);
      uint64_t v179 = (uint64_t)v250;
      if ((*(void *)((char *)v176 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
      {
        uint64_t v58 = ~v178;
        uint64_t v6 = *(void *)(v291 + 72);
        uint64_t v4 = v274;
        uint64_t v41 = v292;
        while (1)
        {
          sub_1000732E8(v299[6] + v6 * v16, v179, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
          if ((static Date.== infix(_:_:)() & 1) != 0
            && *(unsigned __int8 *)(v179 + *((int *)v49 + 5)) == *(unsigned __int8 *)(v297 + v175))
          {
            break;
          }
          sub_100073288(v179, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
          unint64_t v16 = (v16 + 1) & v58;
          if (((*(void *)(isUniquelyReferenced_nonNull_native + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            goto LABEL_84;
          }
        }
        sub_100073288(v179, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v4 = v274;
LABEL_84:
        uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v299;
        swift_bridgeObjectRelease();
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v8 = v248;
        sub_1000732E8(v297, v248, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
        v301 = v41;
        if ((unint64_t)v41[3] <= (unint64_t)v41[2])
        {
          uint64_t v6 = (uint64_t)v238;
          if (isUniquelyReferenced_nonNull_native) {
            sub_10054F5AC();
          }
          else {
            sub_100557008();
          }
          uint64_t v41 = v301;
          Hasher.init(_seed:)();
          dispatch thunk of Hashable.hash(into:)();
          uint64_t v191 = *((int *)v49 + 5);
          Hasher._combine(_:)(*(unsigned __int8 *)(v8 + v191));
          Swift::Int v192 = Hasher._finalize()();
          uint64_t v193 = -1 << *((unsigned char *)v41 + 32);
          unint64_t v16 = v192 & ~v193;
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v41 + 7);
          if ((*(unint64_t *)((char *)v41 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
          {
            uint64_t v194 = ~v193;
            uint64_t v58 = *(void *)(v291 + 72);
            do
            {
              sub_1000732E8((uint64_t)v41[6] + v58 * v16, v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
              if ((static Date.== infix(_:_:)() & 1) != 0
                && *(unsigned __int8 *)(v6 + *((int *)v49 + 5)) == *(unsigned __int8 *)(v8 + v191))
              {
                goto LABEL_141;
              }
              sub_100073288(v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
              unint64_t v16 = (v16 + 1) & v194;
            }
            while (((*(void *)(isUniquelyReferenced_nonNull_native + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
          }
        }
        else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v301;
          sub_1005551D4();
        }
        unint64_t v69 = (unint64_t)v301;
        *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v301
                                                                  + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)
                                                                  + 56) = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(unint64_t *)((char *)v301 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) | (1 << v16));
        sub_100073350(v8, *(void *)(v69 + 48) + *(void *)(v291 + 72) * v16, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
        uint64_t v195 = *(void *)(v69 + 16);
        BOOL v81 = __OFADD__(v195, 1);
        uint64_t v196 = v195 + 1;
        if (v81) {
          goto LABEL_133;
        }
        v299 = (void *)v69;
        *(void *)(v69 + 16) = v196;
        swift_bridgeObjectRelease();
        uint64_t v41 = v292;
      }
      sub_100073288(v297, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);

      uint64_t v150 = *v270;
      uint64_t v151 = (uint64_t *)&v300;
      goto LABEL_128;
    }

    sub_10001457C(v143, (uint64_t *)&unk_1007FC470);
    uint64_t v6 = (uint64_t)v293;
LABEL_66:
    _s10VideoAssetCMa(0);
    uint64_t v156 = swift_dynamicCastClass();
    if (v156)
    {
      uint64_t v157 = v156;
      uint64_t v158 = OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
      if (*(void *)(v156 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
      {
        uint64_t v159 = v41;
        goto LABEL_80;
      }
      id v180 = *(void **)(v156 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v180)
      {
        v181 = v41;
        id v182 = [v180 assetMetaData];
        if (v182)
        {
          v183 = v182;
          uint64_t v184 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v186 = v185;

          uint64_t v187 = v230;
          uint64_t *v230 = v184;
          v187[1] = v186;
          unint64_t v16 = v295;
          uint64_t v58 = v283;
          swift_storeEnumTagMultiPayload();
          sub_100010218((uint64_t *)&unk_10080F2D0);
          uint64_t v188 = swift_allocObject();
          (*v228)(v188 + *(void *)(*(void *)v188 + 104), 1, 1, v229);
          *(_OWORD *)(v188 + *(void *)(*(void *)v188 + 112)) = v249;
          uint64_t v189 = (uint64_t)v187;
          uint64_t v6 = (uint64_t)v293;
          sub_10002C4EC(v189, v188 + *(void *)(*(void *)v188 + 120), (uint64_t *)&unk_10080F2A0);
          *(void *)(v157 + v158) = v188;
          swift_release();
        }
        if (*(void *)(v157 + v158))
        {
LABEL_80:
          swift_retain();
          sub_100039C14((uint64_t)v4);
          swift_release();
          uint64_t v190 = _s10VideoAssetC9VideoDataVMa(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v190 - 8) + 48))(v4, 1, v190) != 1)
          {
            sub_100045944((uint64_t)&v4[*(int *)(v190 + 20)], (uint64_t)v49);
            sub_100073288((uint64_t)v4, _s10VideoAssetC9VideoDataVMa);
            uint64_t isUniquelyReferenced_nonNull_native = *(void *)v6;
            if ((*(unsigned int (**)(char *, uint64_t, unint64_t))v6)(v49, 1, v16) != 1)
            {
              uint64_t v6 = v6 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
              (*v285)(v8, (uint64_t)v49, v16);
              (*v289)(v8, 0, 1, v16);
              goto LABEL_103;
            }
LABEL_102:
            uint64_t v199 = v157 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
            swift_beginAccess();
            sub_100045944(v199, v8);
            sub_10001457C((uint64_t)v49, (uint64_t *)&unk_1007FC470);
            uint64_t isUniquelyReferenced_nonNull_native = *(void *)v6;
            uint64_t v6 = v6 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
LABEL_103:
            unint64_t v69 = v294;
            if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))isUniquelyReferenced_nonNull_native)(v8, 1, v16) == 1)
            {

              sub_10001457C(v8, (uint64_t *)&unk_1007FC470);
LABEL_129:
              uint64_t v6 = (uint64_t)v293;
              goto LABEL_5;
            }
            v292 = v41;
            v264 = *v285;
            v264((uint64_t)v263, v8, v16);
            uint64_t v200 = v281;
            static Calendar.current.getter();
            sub_100010218(&qword_1007FB058);
            v265 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native;
            uint64_t v201 = type metadata accessor for Calendar.Component();
            uint64_t v202 = *(void *)(v201 - 8);
            uint64_t v203 = *(void *)(v202 + 72);
            unint64_t v204 = (*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80);
            uint64_t v205 = swift_allocObject();
            *(_OWORD *)(v205 + 16) = v275;
            unint64_t v206 = v205 + v204;
            uint64_t v207 = *(void (**)(unint64_t, void, uint64_t))(v202 + 104);
            v207(v206, v279, v201);
            v207(v206 + v203, v278, v201);
            v207(v206 + 2 * v203, v276, v201);
            sub_1000F5AEC(v205);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            int v208 = v247;
            Calendar.dateComponents(_:from:)();
            swift_bridgeObjectRelease();
            int v209 = *v277;
            uint64_t v210 = v282;
            (*v277)(v200, v282);
            static Calendar.current.getter();
            uint64_t v58 = (uint64_t)v245;
            Calendar.date(from:)();
            uint64_t v211 = v210;
            uint64_t v212 = v295;
            v209(v200, v211);
            uint64_t v213 = v246;
            sub_100045944(v58, v246);
            if (v265(v213, 1, v212) == 1) {
              goto LABEL_140;
            }
            sub_10001457C(v58, (uint64_t *)&unk_1007FC470);
            (*v272)(v208, v280);
            uint64_t v214 = v296;
            v264(v296, v213, v212);
            uint64_t v49 = v273;
            uint64_t v215 = *((int *)v273 + 5);
            *(unsigned char *)(v214 + v215) = 1;
            os_log_t v216 = v299;
            Hasher.init(_seed:)();
            sub_1000733C4((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
            swift_bridgeObjectRetain();
            dispatch thunk of Hashable.hash(into:)();
            Hasher._combine(_:)(1uLL);
            Swift::Int v217 = Hasher._finalize()();
            uint64_t v218 = -1 << *((unsigned char *)v216 + 32);
            unint64_t v16 = v217 & ~v218;
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v216 + 7);
            uint64_t v219 = (uint64_t)v244;
            if ((*(void *)((char *)v216 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
            {
              uint64_t v58 = ~v218;
              uint64_t v6 = *(void *)(v291 + 72);
              uint64_t v4 = v274;
              uint64_t v41 = v292;
              while (1)
              {
                sub_1000732E8(v299[6] + v6 * v16, v219, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
                if ((static Date.== infix(_:_:)() & 1) != 0
                  && *(unsigned __int8 *)(v219 + *((int *)v49 + 5)) == *(unsigned __int8 *)(v296 + v215))
                {
                  break;
                }
                sub_100073288(v219, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
                unint64_t v16 = (v16 + 1) & v58;
                if (((*(void *)(isUniquelyReferenced_nonNull_native + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
                  goto LABEL_113;
                }
              }
              sub_100073288(v219, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v4 = v274;
LABEL_113:
              uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v299;
              swift_bridgeObjectRelease();
              uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v8 = v242;
              sub_1000732E8(v296, v242, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
              v301 = v41;
              if ((unint64_t)v41[3] <= (unint64_t)v41[2])
              {
                uint64_t v6 = (uint64_t)v233;
                if (isUniquelyReferenced_nonNull_native) {
                  sub_10054F5AC();
                }
                else {
                  sub_100557008();
                }
                uint64_t v41 = v301;
                Hasher.init(_seed:)();
                dispatch thunk of Hashable.hash(into:)();
                uint64_t v220 = *((int *)v49 + 5);
                Hasher._combine(_:)(*(unsigned __int8 *)(v8 + v220));
                Swift::Int v221 = Hasher._finalize()();
                uint64_t v222 = -1 << *((unsigned char *)v41 + 32);
                unint64_t v16 = v221 & ~v222;
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v41 + 7);
                if ((*(unint64_t *)((char *)v41 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
                {
                  uint64_t v223 = ~v222;
                  uint64_t v58 = *(void *)(v291 + 72);
                  do
                  {
                    sub_1000732E8((uint64_t)v41[6] + v58 * v16, v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
                    if ((static Date.== infix(_:_:)() & 1) != 0
                      && *(unsigned __int8 *)(v6 + *((int *)v49 + 5)) == *(unsigned __int8 *)(v8 + v220))
                    {
                      goto LABEL_141;
                    }
                    sub_100073288(v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
                    unint64_t v16 = (v16 + 1) & v223;
                  }
                  while (((*(void *)(isUniquelyReferenced_nonNull_native + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
                }
              }
              else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v301;
                sub_1005551D4();
              }
              unint64_t v69 = (unint64_t)v301;
              *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v301
                                                                        + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)
                                                                        + 56) = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(unint64_t *)((char *)v301 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) | (1 << v16));
              sub_100073350(v8, *(void *)(v69 + 48) + *(void *)(v291 + 72) * v16, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
              uint64_t v224 = *(void *)(v69 + 16);
              BOOL v81 = __OFADD__(v224, 1);
              uint64_t v225 = v224 + 1;
              if (v81) {
                goto LABEL_134;
              }
              v299 = (void *)v69;
              *(void *)(v69 + 16) = v225;
              swift_bridgeObjectRelease();
              uint64_t v41 = v292;
            }
            sub_100073288(v296, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);

            uint64_t v150 = *v270;
            uint64_t v151 = &v295;
LABEL_128:
            unint64_t v16 = v295;
            v150(*(v151 - 32), v295);
            uint64_t v49 = v271;
            uint64_t v8 = (uint64_t)v288;
            uint64_t v58 = v283;
            unint64_t v69 = v294;
            goto LABEL_129;
          }
LABEL_101:
          sub_10001457C((uint64_t)v4, &qword_1007F9E10);
          (*v289)((uint64_t)v49, 1, 1, v16);
          goto LABEL_102;
        }
      }
      else
      {
        uint64_t v197 = v41;
        if (*(void *)(v157 + v158)) {
          goto LABEL_80;
        }
      }
      uint64_t v198 = _s10VideoAssetC9VideoDataVMa(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 56))(v4, 1, 1, v198);
      goto LABEL_101;
    }

    unint64_t v69 = v294;
LABEL_5:
    if (v69 == v286) {
      goto LABEL_137;
    }
  }
  uint64_t v83 = v82;
  char v84 = v49;
  BOOL v85 = v4;
  uint64_t v86 = OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
  uint64_t v87 = v6 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (*(void *)(v82 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
  {
    char v88 = v41;
    goto LABEL_18;
  }
  char v89 = *(void **)(v82 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (!v89)
  {
    uint64_t v103 = v41;
    if (*(void *)(v83 + v86)) {
      goto LABEL_18;
    }
LABEL_22:
    uint64_t v104 = _s10PhotoAssetC9PhotoDataVMa(0);
    uint64_t v99 = v268;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v268, 1, 1, v104);
    goto LABEL_23;
  }
  uint64_t v90 = v41;
  id v91 = [v89 assetMetaData];
  if (v91)
  {
    BOOL v92 = v91;
    uint64_t v93 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v95 = v94;

    id v96 = v240;
    uint64_t *v240 = v93;
    v96[1] = v95;
    uint64_t v58 = v283;
    swift_storeEnumTagMultiPayload();
    sub_100010218((uint64_t *)&unk_10080F2E0);
    uint64_t v97 = swift_allocObject();
    (*v237)(v97 + *(void *)(*(void *)v97 + 104), 1, 1, v239);
    *(_OWORD *)(v97 + *(void *)(*(void *)v97 + 112)) = v249;
    uint64_t v98 = (uint64_t)v96;
    uint64_t v6 = (uint64_t)v293;
    sub_10002C4EC(v98, v97 + *(void *)(*(void *)v97 + 120), (uint64_t *)&unk_10080F2C0);
    *(void *)(v83 + v86) = v97;
    swift_release();
  }
  if (!*(void *)(v83 + v86)) {
    goto LABEL_22;
  }
LABEL_18:
  swift_retain();
  uint64_t v99 = v268;
  sub_1000395AC(v268);
  swift_release();
  uint64_t v100 = _s10PhotoAssetC9PhotoDataVMa(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 48))(v99, 1, v100) == 1)
  {
LABEL_23:
    sub_10001457C(v99, (uint64_t *)&unk_100804080);
    uint64_t isUniquelyReferenced_nonNull_native = v267;
    unint64_t v16 = v295;
    (*v289)(v267, 1, 1, v295);
    goto LABEL_24;
  }
  uint64_t v101 = v99 + *(int *)(v100 + 20);
  uint64_t isUniquelyReferenced_nonNull_native = v267;
  sub_100045944(v101, v267);
  sub_100073288(v99, _s10PhotoAssetC9PhotoDataVMa);
  uint64_t v6 = *(void *)v6;
  unint64_t v16 = v295;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v6)(isUniquelyReferenced_nonNull_native, 1, v295) != 1)
  {
    uint64_t v102 = v266;
    (*v285)(v266, isUniquelyReferenced_nonNull_native, v16);
    (*v289)(v102, 0, 1, v16);
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v105 = v83 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  uint64_t v106 = v105;
  uint64_t v102 = v266;
  sub_100045944(v106, v266);
  sub_10001457C(isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_1007FC470);
  uint64_t v6 = *v293;
LABEL_25:
  if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v6)(v102, 1, v16) == 1)
  {

    sub_10001457C(v102, (uint64_t *)&unk_1007FC470);
    uint64_t v6 = (uint64_t)v293;
    uint64_t v4 = v85;
    uint64_t v49 = v84;
    uint64_t v8 = (uint64_t)v288;
    goto LABEL_27;
  }
  v292 = v41;
  v264 = *v285;
  v264((uint64_t)v284, v102, v16);
  v265 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v87;
  uint64_t v111 = v281;
  static Calendar.current.getter();
  sub_100010218(&qword_1007FB058);
  uint64_t v112 = type metadata accessor for Calendar.Component();
  uint64_t v113 = *(void *)(v112 - 8);
  uint64_t v114 = *(void *)(v113 + 72);
  unint64_t v115 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
  uint64_t v116 = swift_allocObject();
  *(_OWORD *)(v116 + 16) = v275;
  unint64_t v117 = v116 + v115;
  objc_super v118 = *(void (**)(unint64_t, void, uint64_t))(v113 + 104);
  v118(v117, v279, v112);
  v118(v117 + v114, v278, v112);
  v118(v117 + 2 * v114, v276, v112);
  sub_1000F5AEC(v116);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v119 = v258;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v120 = *v277;
  uint64_t v121 = v282;
  (*v277)(v111, v282);
  static Calendar.current.getter();
  uint64_t v58 = (uint64_t)v256;
  Calendar.date(from:)();
  uint64_t v122 = v121;
  uint64_t v123 = v295;
  v120(v111, v122);
  uint64_t v124 = v257;
  sub_100045944(v58, v257);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v6)(v124, 1, v123) != 1)
  {
    sub_10001457C(v58, (uint64_t *)&unk_1007FC470);
    (*v272)(v119, v280);
    uint64_t v125 = v298;
    v264(v298, v124, v123);
    uint64_t v49 = v273;
    uint64_t v126 = *((int *)v273 + 5);
    *(unsigned char *)(v125 + v126) = 0;
    unint64_t v127 = v299;
    Hasher.init(_seed:)();
    sub_1000733C4((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
    swift_bridgeObjectRetain();
    dispatch thunk of Hashable.hash(into:)();
    Hasher._combine(_:)(0);
    Swift::Int v128 = Hasher._finalize()();
    uint64_t v129 = -1 << *((unsigned char *)v127 + 32);
    unint64_t v16 = v128 & ~v129;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v127 + 7);
    uint64_t v130 = (uint64_t)v255;
    if ((*(void *)((char *)v127 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
    {
      uint64_t v58 = ~v129;
      uint64_t v6 = *(void *)(v291 + 72);
      uint64_t v4 = v274;
      uint64_t v41 = v292;
      while (1)
      {
        sub_1000732E8(v299[6] + v6 * v16, v130, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
        if ((static Date.== infix(_:_:)() & 1) != 0
          && *(unsigned __int8 *)(v130 + *((int *)v49 + 5)) == *(unsigned __int8 *)(v298 + v126))
        {
          break;
        }
        sub_100073288(v130, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
        unint64_t v16 = (v16 + 1) & v58;
        if (((*(void *)(isUniquelyReferenced_nonNull_native + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_45;
        }
      }
      sub_100073288(v130, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = v274;
LABEL_45:
      uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v299;
      swift_bridgeObjectRelease();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v8 = v254;
      sub_1000732E8(v298, v254, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
      v301 = v41;
      if ((unint64_t)v41[3] <= (unint64_t)v41[2])
      {
        uint64_t v6 = (uint64_t)v243;
        if (isUniquelyReferenced_nonNull_native) {
          sub_10054F5AC();
        }
        else {
          sub_100557008();
        }
        uint64_t v41 = v301;
        Hasher.init(_seed:)();
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v144 = *((int *)v49 + 5);
        Hasher._combine(_:)(*(unsigned __int8 *)(v8 + v144));
        Swift::Int v145 = Hasher._finalize()();
        uint64_t v146 = -1 << *((unsigned char *)v41 + 32);
        unint64_t v16 = v145 & ~v146;
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v41 + 7);
        if ((*(unint64_t *)((char *)v41 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
        {
          uint64_t v147 = ~v146;
          uint64_t v58 = *(void *)(v291 + 72);
          do
          {
            sub_1000732E8((uint64_t)v41[6] + v58 * v16, v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
            if ((static Date.== infix(_:_:)() & 1) != 0
              && *(unsigned __int8 *)(v6 + *((int *)v49 + 5)) == *(unsigned __int8 *)(v8 + v144))
            {
              goto LABEL_141;
            }
            sub_100073288(v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
            unint64_t v16 = (v16 + 1) & v147;
          }
          while (((*(void *)(isUniquelyReferenced_nonNull_native + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
        }
      }
      else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v301;
        sub_1005551D4();
      }
      unint64_t v69 = (unint64_t)v301;
      *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v301 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(unint64_t *)((char *)v301 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) | (1 << v16));
      sub_100073350(v8, *(void *)(v69 + 48) + *(void *)(v291 + 72) * v16, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
      uint64_t v148 = *(void *)(v69 + 16);
      BOOL v81 = __OFADD__(v148, 1);
      uint64_t v149 = v148 + 1;
      if (v81) {
        goto LABEL_132;
      }
      v299 = (void *)v69;
      *(void *)(v69 + 16) = v149;
      swift_bridgeObjectRelease();
      uint64_t v41 = v292;
    }
    sub_100073288(v298, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);

    uint64_t v150 = *v270;
    uint64_t v151 = (uint64_t *)&v302;
    goto LABEL_128;
  }
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  sub_100073288(v6, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10006E300(uint64_t (*a1)(void, __n128), uint64_t a2)
{
  uint64_t v275 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v274 = *(void *)(v275 - 8);
  __chkstk_darwin(v275);
  v272 = (char *)&v261 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = type metadata accessor for DispatchQoS();
  uint64_t v271 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  v270 = (char *)&v261 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v269);
  uint64_t v268 = (uint64_t *)((char *)&v261 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v267 = sub_100010218(&qword_1007F9E10);
  v337 = *(char **)(v267 - 8);
  __chkstk_darwin(v267);
  uint64_t v9 = (char *)&v261 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v278);
  v277 = (uint64_t *)((char *)&v261 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v276 = sub_100010218((uint64_t *)&unk_100804090);
  uint64_t v11 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  uint64_t v308 = (uint64_t)&v261 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v320 = type metadata accessor for Calendar();
  uint64_t v336 = *(void *)(v320 - 8);
  __chkstk_darwin(v320);
  v319 = (char *)&v261 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v318 = type metadata accessor for DateComponents();
  v335 = *(unsigned int (***)(void, void, void))(v318 - 8);
  __chkstk_darwin(v318);
  uint64_t v286 = (char *)&v261 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v292 = (char *)&v261 - v16;
  __chkstk_darwin(v17);
  v299 = (char *)&v261 - v18;
  uint64_t v281 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v281);
  uint64_t v280 = (uint64_t *)((char *)&v261 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v279 = sub_100010218((uint64_t *)&unk_100804080);
  uint64_t v20 = *(void *)(v279 - 8);
  __chkstk_darwin(v279);
  v323 = (char *)&v261 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v22 - 8);
  uint64_t v285 = (uint64_t)&v261 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v284 = (char *)&v261 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v261 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v261 - v30;
  __chkstk_darwin(v32);
  uint64_t v291 = (uint64_t)&v261 - v33;
  __chkstk_darwin(v34);
  uint64_t v290 = (char *)&v261 - v35;
  __chkstk_darwin(v36);
  uint64_t v307 = (uint64_t)&v261 - v37;
  __chkstk_darwin(v38);
  uint64_t v305 = (uint64_t)&v261 - v39;
  __chkstk_darwin(v40);
  uint64_t v298 = (uint64_t)&v261 - v41;
  __chkstk_darwin(v42);
  uint64_t v297 = (char *)&v261 - v43;
  __chkstk_darwin(v44);
  uint64_t v311 = (uint64_t)&v261 - v45;
  __chkstk_darwin(v46);
  v310 = (char *)&v261 - v47;
  uint64_t v48 = type metadata accessor for Date();
  uint64_t v303 = *(void *)(v48 - 8);
  uint64_t v49 = *(void *)(v303 + 64);
  __chkstk_darwin(v48);
  uint64_t v283 = (char *)&v261 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v282 = (uint64_t)&v261 - v51;
  __chkstk_darwin(v52);
  __chkstk_darwin(v53);
  v289 = (char *)&v261 - v54;
  __chkstk_darwin(v55);
  uint64_t v288 = (uint64_t)&v261 - v56;
  __chkstk_darwin(v57);
  v306 = (char *)&v261 - v58;
  __chkstk_darwin(v59);
  char v300 = (char *)&v261 - v60;
  __chkstk_darwin(v61);
  uint64_t v296 = (char *)&v261 - v62;
  __chkstk_darwin(v63);
  uint64_t v295 = (uint64_t)&v261 - v64;
  __n128 v67 = __chkstk_darwin(v65);
  unint64_t v69 = (char *)&v261 - v68;
  uint64_t v70 = *(void *)(v2 + 16);
  if (!v70) {
    return a1(0, v67);
  }
  v325 = v69;
  v304 = v66;
  v264 = a1;
  uint64_t v302 = swift_allocObject();
  *(void *)(v302 + 16) = _swiftEmptyArrayStorage;
  swift_retain();
  dispatch_group_t v301 = dispatch_group_create();
  aBlock[9] = &_swiftEmptySetSingleton;
  uint64_t v265 = v70;
  uint64_t v71 = (uint64_t *)(v70 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  uint64_t v72 = *v71;
  unint64_t v73 = (unint64_t)*v71 >> 62;
  uint64_t v321 = *v71;
  if (v73)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_4;
    }
LABEL_85:
    swift_bridgeObjectRelease();
LABEL_86:
    v253 = v264;
    swift_bridgeObjectRelease();
    sub_10001FB8C();
    uint64_t v254 = (void *)static OS_dispatch_queue.main.getter();
    v255 = (void *)swift_allocObject();
    v255[2] = v302;
    v255[3] = v253;
    v255[4] = a2;
    aBlock[4] = sub_100073098;
    aBlock[5] = v255;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_100797E68;
    v256 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v257 = v270;
    static DispatchQoS.unspecified.getter();
    v338 = _swiftEmptyArrayStorage;
    sub_1000733C4((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    v258 = v272;
    uint64_t v259 = v275;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v260 = v301;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v256);

    swift_release();
    (*(void (**)(char *, uint64_t))(v274 + 8))(v258, v259);
    (*(void (**)(char *, uint64_t))(v271 + 8))(v257, v273);
    swift_release();
    return swift_release();
  }
  uint64_t v74 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t result = v74;
  if (!v74) {
    goto LABEL_85;
  }
LABEL_4:
  if (result >= 1)
  {
    uint64_t v76 = 0;
    unint64_t v327 = v321 & 0xC000000000000001;
    uint64_t v266 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v77 = v321;
    uint64_t v78 = v11;
    uint64_t v79 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48);
    v333 = (void (**)(uint64_t, uint64_t, uint64_t))(v303 + 32);
    v330 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56);
    unsigned int v317 = enum case for Calendar.Component.year(_:);
    v316 = (void (**)(char *, uint64_t))(v336 + 8);
    unsigned int v315 = enum case for Calendar.Component.month(_:);
    v312 = (void (**)(char *, uint64_t))(v335 + 1);
    v328 = (void (**)(uint64_t, uint64_t))(v303 + 8);
    unsigned int v314 = enum case for Calendar.Component.day(_:);
    uint64_t v294 = v303 + 16;
    uint64_t v293 = v49 + 7;
    v263 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
    uint64_t v262 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v337 + 56);
    long long v287 = xmmword_1006D6A80;
    long long v313 = xmmword_1006D7C30;
    uint64_t v261 = a2;
    v324 = v9;
    uint64_t v80 = (uint64_t)v323;
    v329 = v28;
    v332 = v31;
    uint64_t v331 = v48;
    v335 = (unsigned int (**)(void, void, void))(v303 + 48);
    uint64_t v326 = result;
    while (1)
    {
      uint64_t v336 = v76;
      if (v327) {
        BOOL v81 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        BOOL v81 = (char *)*(id *)(v77 + 8 * v76 + 32);
      }
      uint64_t v82 = v81;
      _s10PhotoAssetCMa(0);
      uint64_t v83 = swift_dynamicCastClass();
      v337 = v82;
      if (!v83) {
        goto LABEL_27;
      }
      uint64_t v84 = OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
      uint64_t v85 = *(void *)(v83 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata);
      uint64_t v86 = (unint64_t)v79 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      uint64_t v334 = v83;
      if (v85)
      {
        uint64_t v87 = v82;
      }
      else
      {
        char v88 = *(void **)(v83 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
        if (v88)
        {
          char v89 = v82;
          id v90 = [v88 assetMetaData];
          if (v90)
          {
            id v91 = v90;
            uint64_t v92 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v94 = v93;

            uint64_t v95 = (uint64_t)v280;
            *uint64_t v280 = v92;
            *(void *)(v95 + 8) = v94;
            uint64_t v9 = v324;
            uint64_t v28 = v329;
            swift_storeEnumTagMultiPayload();
            sub_100010218((uint64_t *)&unk_10080F2E0);
            uint64_t v96 = swift_allocObject();
            (*v266)(v96 + *(void *)(*(void *)v96 + 104), 1, 1, v279);
            *(_OWORD *)(v96 + *(void *)(*(void *)v96 + 112)) = v287;
            sub_10002C4EC(v95, v96 + *(void *)(*(void *)v96 + 120), (uint64_t *)&unk_10080F2C0);
            *(void *)(v334 + v84) = v96;
            swift_release();
          }
        }
        else
        {
          uint64_t v97 = v82;
        }
        if (!*(void *)(v334 + v84))
        {
          uint64_t v103 = _s10PhotoAssetC9PhotoDataVMa(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v80, 1, 1, v103);
          uint64_t v100 = v311;
          uint64_t v101 = (uint64_t)v310;
LABEL_23:
          sub_10001457C(v80, (uint64_t *)&unk_100804080);
          (*v330)(v100, 1, 1, v48);
LABEL_24:
          uint64_t v104 = v334 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
          swift_beginAccess();
          sub_100045944(v104, v101);
          sub_10001457C(v100, (uint64_t *)&unk_1007FC470);
          uint64_t v102 = *v335;
          goto LABEL_25;
        }
      }
      swift_retain();
      sub_1000395AC(v80);
      swift_release();
      uint64_t v98 = _s10PhotoAssetC9PhotoDataVMa(0);
      int v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v80, 1, v98);
      uint64_t v100 = v311;
      uint64_t v101 = (uint64_t)v310;
      if (v99 == 1) {
        goto LABEL_23;
      }
      sub_100045944(v80 + *(int *)(v98 + 20), v311);
      sub_100073288(v80, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v102 = *v79;
      if (v102(v100, 1, v48) == 1) {
        goto LABEL_24;
      }
      (*v333)(v101, v100, v48);
      (*v330)(v101, 0, 1, v48);
LABEL_25:
      uint64_t v105 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v86;
      if (v102(v101, 1, v48) != 1)
      {
        v322 = *v333;
        v322((uint64_t)v325, v101, v48);
        uint64_t v110 = v319;
        static Calendar.current.getter();
        sub_100010218(&qword_1007FB058);
        uint64_t v111 = type metadata accessor for Calendar.Component();
        uint64_t v112 = *(void *)(v111 - 8);
        uint64_t v113 = *(void *)(v112 + 72);
        unint64_t v114 = (*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
        uint64_t v115 = swift_allocObject();
        *(_OWORD *)(v115 + 16) = v313;
        unint64_t v116 = v115 + v114;
        v309 = v105;
        unint64_t v117 = *(void (**)(unint64_t, void, uint64_t))(v112 + 104);
        v117(v116, v317, v111);
        v117(v116 + v113, v315, v111);
        v117(v116 + 2 * v113, v314, v111);
        sub_1000F5AEC(v115);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        objc_super v118 = v299;
        Calendar.dateComponents(_:from:)();
        swift_bridgeObjectRelease();
        uint64_t v119 = *v316;
        uint64_t v120 = v320;
        (*v316)(v110, v320);
        static Calendar.current.getter();
        uint64_t v121 = (uint64_t)v297;
        Calendar.date(from:)();
        v119(v110, v120);
        uint64_t v122 = v331;
        uint64_t v123 = v298;
        sub_100045944(v121, v298);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v102)(v123, 1, v122);
        if (result == 1) {
          goto LABEL_88;
        }
        sub_10001457C(v121, (uint64_t *)&unk_1007FC470);
        (*v312)(v118, v318);
        uint64_t v124 = v296;
        v322((uint64_t)v296, v123, v122);
        uint64_t v125 = v295;
        char v126 = sub_10054C06C(v295, v124);
        unint64_t v127 = *v328;
        (*v328)(v125, v122);
        uint64_t v28 = v329;
        if (v126)
        {
          dispatch_group_t v128 = v301;
          dispatch_group_enter(v301);
          uint64_t v129 = v303;
          uint64_t v130 = v300;
          uint64_t v131 = v325;
          (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v300, v325, v122);
          unint64_t v132 = (*(unsigned __int8 *)(v129 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
          unint64_t v133 = (v293 + v132) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v134 = swift_allocObject();
          *(void *)(v134 + 16) = v128;
          v322(v134 + v132, (uint64_t)v130, v122);
          uint64_t v48 = v122;
          *(void *)(v134 + v133) = v302;
          uint64_t v135 = qword_1007F6A58;
          uint64_t v136 = v128;
          swift_retain();
          uint64_t v80 = (uint64_t)v323;
          if (v135 != -1) {
            swift_once();
          }
          uint64_t v137 = (void *)qword_10083CF60;
          uint64_t v138 = swift_allocObject();
          *(void *)(v138 + 16) = sub_1000730C0;
          *(void *)(v138 + 24) = v134;
          uint64_t v139 = self;
          swift_retain();
          id v140 = [v139 currentTraitCollection];
          sub_10017D574(4, 0, 1, v137, v140, (uint64_t)sub_100073468, v138);
          uint64_t v141 = v337;

          swift_release();
          swift_release();

          v127((uint64_t)v131, v48);
          goto LABEL_78;
        }
        v127((uint64_t)v325, v122);
        uint64_t v152 = v337;

        uint64_t v9 = v324;
        uint64_t v80 = (uint64_t)v323;
        uint64_t v48 = v122;
        goto LABEL_79;
      }
      uint64_t v82 = v337;

      sub_10001457C(v101, (uint64_t *)&unk_1007FC470);
      uint64_t v31 = v332;
      uint64_t v79 = v335;
LABEL_27:
      _s14LivePhotoAssetCMa(0);
      uint64_t v106 = swift_dynamicCastClass();
      if (!v106) {
        goto LABEL_49;
      }
      uint64_t v107 = OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
      uint64_t v108 = *(void *)(v106 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata);
      uint64_t v334 = v106;
      if (v108)
      {
        uint64_t v109 = v337;
      }
      else
      {
        uint64_t v142 = *(void **)(v106 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
        if (v142)
        {
          uint64_t v143 = v337;
          id v144 = [v142 assetMetaData];
          if (v144)
          {
            Swift::Int v145 = v144;
            uint64_t v146 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v148 = v147;

            uint64_t v149 = v277;
            uint64_t *v277 = v146;
            v149[1] = v148;
            uint64_t v9 = v324;
            uint64_t v31 = v332;
            swift_storeEnumTagMultiPayload();
            sub_100010218(&qword_1007F99C0);
            uint64_t v150 = swift_allocObject();
            (*v263)(v150 + *(void *)(*(void *)v150 + 104), 1, 1, v276);
            *(_OWORD *)(v150 + *(void *)(*(void *)v150 + 112)) = v287;
            uint64_t v151 = (uint64_t)v149;
            uint64_t v79 = v335;
            sub_10002C4EC(v151, v150 + *(void *)(*(void *)v150 + 120), (uint64_t *)&unk_10080F2B0);
            *(void *)(v334 + v107) = v150;
            swift_release();
          }
        }
        else
        {
          uint64_t v153 = v337;
        }
        if (!*(void *)(v334 + v107))
        {
          uint64_t v164 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
          uint64_t v154 = v308;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v308, 1, 1, v164);
LABEL_45:
          sub_10001457C(v154, (uint64_t *)&unk_100804090);
          uint64_t v159 = v307;
          (*v330)(v307, 1, 1, v48);
LABEL_46:
          uint64_t v165 = v334 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
          swift_beginAccess();
          uint64_t v166 = v165;
          uint64_t v161 = v305;
          sub_100045944(v166, v305);
          sub_10001457C(v159, (uint64_t *)&unk_1007FC470);
          uint64_t v160 = *v79;
          goto LABEL_47;
        }
      }
      swift_retain();
      uint64_t v154 = v308;
      sub_1000398E0(v308);
      swift_release();
      uint64_t v155 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 48))(v154, 1, v155) == 1) {
        goto LABEL_45;
      }
      uint64_t v156 = v154 + *(int *)(v155 + 20);
      uint64_t v157 = v307;
      sub_100045944(v156, v307);
      uint64_t v158 = v154;
      uint64_t v159 = v157;
      sub_100073288(v158, _s14LivePhotoAssetC13LivePhotoDataVMa);
      uint64_t v160 = *v79;
      if ((*v79)(v157, 1, v48) == 1) {
        goto LABEL_46;
      }
      uint64_t v161 = v305;
      uint64_t v162 = v159;
      uint64_t v163 = v331;
      (*v333)(v305, v162, v331);
      (*v330)(v161, 0, 1, v163);
LABEL_47:
      uint64_t v48 = v331;
      if (v160(v161, 1, v331) != 1)
      {
        v322 = *v333;
        v322((uint64_t)v306, v161, v48);
        uint64_t v172 = v319;
        static Calendar.current.getter();
        sub_100010218(&qword_1007FB058);
        uint64_t v173 = type metadata accessor for Calendar.Component();
        uint64_t v174 = *(void *)(v173 - 8);
        v309 = v160;
        uint64_t v175 = v174;
        uint64_t v176 = *(void *)(v174 + 72);
        unint64_t v177 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
        uint64_t v178 = swift_allocObject();
        *(_OWORD *)(v178 + 16) = v313;
        unint64_t v179 = v178 + v177;
        id v180 = *(void (**)(unint64_t, void, uint64_t))(v175 + 104);
        v180(v179, v317, v173);
        v180(v179 + v176, v315, v173);
        v180(v179 + 2 * v176, v314, v173);
        v181 = v306;
        sub_1000F5AEC(v178);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        id v182 = v292;
        Calendar.dateComponents(_:from:)();
        swift_bridgeObjectRelease();
        v183 = *v316;
        uint64_t v184 = v320;
        (*v316)(v172, v320);
        static Calendar.current.getter();
        uint64_t v185 = (uint64_t)v290;
        Calendar.date(from:)();
        v183(v172, v184);
        uint64_t v186 = v291;
        sub_100045944(v185, v291);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v309)(v186, 1, v48);
        if (result == 1) {
          goto LABEL_89;
        }
        sub_10001457C(v185, (uint64_t *)&unk_1007FC470);
        (*v312)(v182, v318);
        uint64_t v187 = v289;
        v322((uint64_t)v289, v186, v48);
        uint64_t v188 = v288;
        char v189 = sub_10054C06C(v288, v187);
        uint64_t v190 = *v328;
        (*v328)(v188, v48);
        uint64_t v28 = v329;
        uint64_t v31 = v332;
        if (v189)
        {
          dispatch_group_t v191 = v301;
          dispatch_group_enter(v301);
          uint64_t v192 = v303;
          uint64_t v193 = v300;
          (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v300, v181, v48);
          unint64_t v194 = (*(unsigned __int8 *)(v192 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
          unint64_t v195 = (v293 + v194) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v196 = swift_allocObject();
          *(void *)(v196 + 16) = v191;
          v322(v196 + v194, (uint64_t)v193, v48);
          *(void *)(v196 + v195) = v302;
          uint64_t v197 = qword_1007F6A58;
          uint64_t v198 = v191;
          swift_retain();
          uint64_t v80 = (uint64_t)v323;
          if (v197 != -1) {
            swift_once();
          }
          uint64_t v199 = (void *)qword_10083CF60;
          uint64_t v200 = swift_allocObject();
          *(void *)(v200 + 16) = sub_1000730C0;
          *(void *)(v200 + 24) = v196;
          uint64_t v201 = self;
          swift_retain();
          id v202 = [v201 currentTraitCollection];
          sub_10017D574(4, 0, 1, v199, v202, (uint64_t)sub_100073468, v200);
          uint64_t v203 = v337;

LABEL_76:
          swift_release();
          swift_release();

          v190((uint64_t)v181, v48);
          goto LABEL_78;
        }
        v190((uint64_t)v181, v48);
        uint64_t v214 = v337;

        uint64_t v9 = v324;
        uint64_t v80 = (uint64_t)v323;
        goto LABEL_80;
      }
      uint64_t v82 = v337;

      sub_10001457C(v161, (uint64_t *)&unk_1007FC470);
      uint64_t v79 = v335;
LABEL_49:
      _s10VideoAssetCMa(0);
      uint64_t v167 = swift_dynamicCastClass();
      if (v167)
      {
        uint64_t v168 = OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
        uint64_t v169 = *(void *)(v167 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata);
        uint64_t v334 = v167;
        if (v169)
        {
          uint64_t v170 = v337;
          uint64_t v171 = v337;
          goto LABEL_63;
        }
        unint64_t v204 = *(void **)(v167 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
        if (v204)
        {
          uint64_t v205 = v337;
          id v206 = [v204 assetMetaData];
          if (v206)
          {
            uint64_t v207 = v206;
            uint64_t v208 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v210 = v209;

            uint64_t v211 = v268;
            *uint64_t v268 = v208;
            v211[1] = v210;
            uint64_t v9 = v324;
            uint64_t v31 = v332;
            swift_storeEnumTagMultiPayload();
            sub_100010218((uint64_t *)&unk_10080F2D0);
            uint64_t v212 = swift_allocObject();
            (*v262)(v212 + *(void *)(*(void *)v212 + 104), 1, 1, v267);
            *(_OWORD *)(v212 + *(void *)(*(void *)v212 + 112)) = v287;
            uint64_t v213 = (uint64_t)v211;
            uint64_t v79 = v335;
            sub_10002C4EC(v213, v212 + *(void *)(*(void *)v212 + 120), (uint64_t *)&unk_10080F2A0);
            *(void *)(v334 + v168) = v212;
            swift_release();
          }
        }
        else
        {
          uint64_t v215 = v337;
        }
        uint64_t v216 = *(void *)(v334 + v168);
        uint64_t v170 = v337;
        if (v216)
        {
LABEL_63:
          swift_retain();
          sub_100039C14((uint64_t)v9);
          swift_release();
          uint64_t v217 = _s10VideoAssetC9VideoDataVMa(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v217 - 8) + 48))(v9, 1, v217) != 1)
          {
            sub_100045944((uint64_t)&v9[*(int *)(v217 + 20)], (uint64_t)v28);
            sub_100073288((uint64_t)v9, _s10VideoAssetC9VideoDataVMa);
            uint64_t v218 = *v79;
            if ((*v79)((uint64_t)v28, 1, v48) != 1)
            {
              uint64_t v219 = v331;
              (*v333)((uint64_t)v31, (uint64_t)v28, v331);
              uint64_t v220 = v219;
              uint64_t v170 = v337;
              (*v330)((uint64_t)v31, 0, 1, v220);
              goto LABEL_69;
            }
LABEL_68:
            uint64_t v222 = v334 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
            swift_beginAccess();
            sub_100045944(v222, (uint64_t)v31);
            sub_10001457C((uint64_t)v28, (uint64_t *)&unk_1007FC470);
            uint64_t v218 = *v79;
LABEL_69:
            uint64_t v48 = v331;
            if (v218((uint64_t)v31, 1, v331) == 1)
            {

              sub_10001457C((uint64_t)v31, (uint64_t *)&unk_1007FC470);
LABEL_81:
              uint64_t v79 = v335;
              goto LABEL_7;
            }
            v322 = *v333;
            v322((uint64_t)v304, (uint64_t)v31, v48);
            uint64_t v223 = v319;
            static Calendar.current.getter();
            sub_100010218(&qword_1007FB058);
            uint64_t v224 = type metadata accessor for Calendar.Component();
            v309 = v218;
            uint64_t v225 = v224;
            uint64_t v226 = *(void *)(v224 - 8);
            uint64_t v227 = *(void *)(v226 + 72);
            unint64_t v228 = (*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
            uint64_t v229 = swift_allocObject();
            *(_OWORD *)(v229 + 16) = v313;
            unint64_t v230 = v229 + v228;
            uint64_t v231 = *(void (**)(unint64_t, void, uint64_t))(v226 + 104);
            v231(v230, v317, v225);
            v231(v230 + v227, v315, v225);
            v231(v230 + 2 * v227, v314, v225);
            sub_1000F5AEC(v229);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            v232 = v286;
            Calendar.dateComponents(_:from:)();
            swift_bridgeObjectRelease();
            v233 = *v316;
            uint64_t v234 = v320;
            (*v316)(v223, v320);
            static Calendar.current.getter();
            uint64_t v235 = (uint64_t)v284;
            Calendar.date(from:)();
            v233(v223, v234);
            uint64_t v236 = v285;
            sub_100045944(v235, v285);
            uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v309)(v236, 1, v48);
            if (result == 1) {
              goto LABEL_90;
            }
            sub_10001457C(v235, (uint64_t *)&unk_1007FC470);
            (*v312)(v232, v318);
            v237 = v283;
            v322((uint64_t)v283, v236, v48);
            uint64_t v238 = v282;
            char v239 = sub_10054C06C(v282, v237);
            uint64_t v190 = *v328;
            (*v328)(v238, v48);
            uint64_t v80 = (uint64_t)v323;
            if (v239)
            {
              dispatch_group_t v240 = v301;
              dispatch_group_enter(v301);
              uint64_t v241 = v303;
              uint64_t v242 = v300;
              v181 = v304;
              (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v300, v304, v48);
              unint64_t v243 = (*(unsigned __int8 *)(v241 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v241 + 80);
              unint64_t v244 = (v293 + v243) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v245 = swift_allocObject();
              *(void *)(v245 + 16) = v240;
              v322(v245 + v243, (uint64_t)v242, v48);
              *(void *)(v245 + v244) = v302;
              uint64_t v246 = qword_1007F6A58;
              v247 = v240;
              swift_retain();
              if (v246 != -1) {
                swift_once();
              }
              uint64_t v248 = (void *)qword_10083CF60;
              uint64_t v249 = swift_allocObject();
              *(void *)(v249 + 16) = sub_1000730C0;
              *(void *)(v249 + 24) = v245;
              v250 = self;
              swift_retain();
              id v202 = [v250 currentTraitCollection];
              sub_10017D574(4, 0, 1, v248, v202, (uint64_t)sub_1000730FC, v249);
              v251 = v337;

              goto LABEL_76;
            }
            v190((uint64_t)v304, v48);
            uint64_t v252 = v337;

LABEL_78:
            uint64_t v9 = v324;
            uint64_t v28 = v329;
LABEL_79:
            uint64_t v31 = v332;
LABEL_80:
            uint64_t v77 = v321;
            goto LABEL_81;
          }
        }
        else
        {
          uint64_t v221 = _s10VideoAssetC9VideoDataVMa(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56))(v9, 1, 1, v221);
        }
        sub_10001457C((uint64_t)v9, &qword_1007F9E10);
        (*v330)((uint64_t)v28, 1, 1, v48);
        goto LABEL_68;
      }

LABEL_7:
      uint64_t v76 = v336 + 1;
      if (v326 == v336 + 1)
      {
        swift_bridgeObjectRelease();
        a2 = v261;
        goto LABEL_86;
      }
    }
  }
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
  return result;
}

void sub_100070AC4(void *a1, NSObject *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - v13;
  if (a1)
  {
    uint64_t v15 = (unint64_t *)(a4 + 16);
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, a3, v16);
    *(void *)&v14[*(int *)(v8 + 20)] = a1;
    sub_1000732E8((uint64_t)v14, (uint64_t)v11, type metadata accessor for SuggestedDateItem.PhotoDateItem);
    swift_beginAccess();
    unint64_t v17 = *v15;
    id v18 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v15 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v17 = sub_1002A5EF8(0, *(void *)(v17 + 16) + 1, 1, v17);
      *uint64_t v15 = v17;
    }
    unint64_t v21 = *(void *)(v17 + 16);
    unint64_t v20 = *(void *)(v17 + 24);
    if (v21 >= v20 >> 1)
    {
      unint64_t v17 = sub_1002A5EF8(v20 > 1, v21 + 1, 1, v17);
      *uint64_t v15 = v17;
    }
    *(void *)(v17 + 16) = v21 + 1;
    sub_100073350((uint64_t)v11, v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v21, type metadata accessor for SuggestedDateItem.PhotoDateItem);
    swift_endAccess();
    dispatch_group_leave(a2);
    sub_100073288((uint64_t)v14, type metadata accessor for SuggestedDateItem.PhotoDateItem);
  }
  else
  {
    dispatch_group_leave(a2);
  }
}

uint64_t sub_100070D2C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain_n();
  sub_1000718E4(&v8);
  swift_bridgeObjectRelease();
  uint64_t v5 = v8;
  swift_beginAccess();
  *uint64_t v4 = v5;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  a2(v6);
  return swift_bridgeObjectRelease();
}

void sub_100070E10(void *a1, void (*a2)(void))
{
  if (a1)
  {
    id v4 = a1;
    ((void (*)(void *))a2)(a1);
  }
  else
  {
    a2();
  }
}

uint64_t sub_100070E90()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = qword_1007F6E48;
    swift_retain();
    if (v2 != -1) {
      swift_once();
    }
    if ([(id)qword_10083D3C0 BOOLForKey:@"ALWAYS_USE_MOMENT_DATE"]) {
      goto LABEL_13;
    }
    unint64_t v3 = sub_100072F44()[2];
    swift_bridgeObjectRelease();
    if (v3 > 2) {
      goto LABEL_13;
    }
    id v4 = sub_100072F44();
    uint64_t v5 = sub_100388854((uint64_t)v4);
    swift_bridgeObjectRelease();
    void v29[2] = v5;
    uint64_t v6 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id;
    id v7 = *(id *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
    id v8 = [v7 description];
    Swift::Int v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Int v11 = v10;

    LOBYTE(v7) = sub_10054BEBC(v29, v9, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
LABEL_13:
      swift_release();
    }
    else
    {
      id v12 = *(id *)(v1 + v6);
      id v13 = [v12 description];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      unint64_t v17 = (char *)sub_100072F44();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_1002A54A0(0, *((void *)v17 + 2) + 1, 1, v17);
      }
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      unint64_t v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        uint64_t v28 = sub_1002A54A0((char *)(v18 > 1), v19 + 1, 1, v17);
        unint64_t v20 = v19 + 1;
        unint64_t v17 = v28;
      }
      *((void *)v17 + 2) = v20;
      unint64_t v21 = &v17[16 * v19];
      *((void *)v21 + 4) = v14;
      *((void *)v21 + 5) = v16;
      id v22 = [self standardUserDefaults];
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      NSString v24 = String._bridgeToObjectiveC()();
      [v22 setObject:isa forKey:v24];

      uint64_t v25 = sub_100072F44();
      swift_release();
      uint64_t v26 = v25[2];
      swift_bridgeObjectRelease();
      if (v26 == 3) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100071134()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DatePickerDataProvider()
{
  return self;
}

void *sub_1000711A0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10007126C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000712D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10007134C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000713C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100071444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000714C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000714D4);
}

uint64_t sub_1000714D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100071590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000715A4);
}

uint64_t sub_1000715A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for DatePickerDataProvider.MediaDate()
{
  uint64_t result = qword_1007FB010;
  if (!qword_1007FB010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000716AC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DatePickerDataProvider.MediaDate.MediaType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007180CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatePickerDataProvider.MediaDate.MediaType()
{
  return &type metadata for DatePickerDataProvider.MediaDate.MediaType;
}

unint64_t sub_100071848()
{
  unint64_t result = qword_1007FB048;
  if (!qword_1007FB048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FB048);
  }
  return result;
}

uint64_t sub_10007189C()
{
  return sub_1000733C4(&qword_1007FB050, (void (*)(uint64_t))type metadata accessor for DatePickerDataProvider.MediaDate);
}

void sub_1000718E4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for SuggestedDateItem.PhotoDateItem(0) - 8);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = (void *)sub_1000F3F80(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10007198C(v5);
  *a1 = v3;
}

void sub_10007198C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  __chkstk_darwin(v4);
  uint64_t v128 = (uint64_t)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v139 = (uint64_t)&v122 - v7;
  __chkstk_darwin(v8);
  uint64_t v136 = (uint64_t)&v122 - v9;
  __chkstk_darwin(v10);
  uint64_t v135 = (uint64_t)&v122 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_100072438(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  Swift::Int v124 = v13;
  if (v12 < 2)
  {
    unint64_t v18 = (char *)_swiftEmptyArrayStorage;
    unint64_t v130 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
    uint64_t v123 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_106:
      uint64_t v115 = v18;
      if (v20 >= 2)
      {
        uint64_t v116 = *a1;
        do
        {
          unint64_t v117 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_135;
          }
          if (!v116) {
            goto LABEL_147;
          }
          uint64_t v118 = *(void *)&v115[16 * v117 + 32];
          uint64_t v119 = *(void *)&v115[16 * v20 + 24];
          sub_1000726F4(v116 + *(void *)(v131 + 72) * v118, v116 + *(void *)(v131 + 72) * *(void *)&v115[16 * v20 + 16], v116 + *(void *)(v131 + 72) * v119, v130);
          if (v2) {
            break;
          }
          if (v119 < v118) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1000F1E40((uint64_t)v115);
          }
          if (v117 >= *((void *)v115 + 2)) {
            goto LABEL_137;
          }
          uint64_t v120 = &v115[16 * v117 + 32];
          *(void *)uint64_t v120 = v118;
          *((void *)v120 + 1) = v119;
          unint64_t v121 = *((void *)v115 + 2);
          if (v20 > v121) {
            goto LABEL_138;
          }
          memmove(&v115[16 * v20 + 16], &v115[16 * v20 + 32], 16 * (v121 - v20));
          *((void *)v115 + 2) = v121 - 1;
          unint64_t v20 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v123[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v131 + 80);
    uint64_t v123 = (void *)v16;
    unint64_t v130 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  unint64_t v18 = (char *)_swiftEmptyArrayStorage;
  uint64_t v137 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v129 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v39 = v19 + 1;
      Swift::Int v38 = v19;
      goto LABEL_58;
    }
    uint64_t v126 = v2;
    uint64_t v23 = *a1;
    Swift::Int v24 = *(void *)(v131 + 72);
    uint64_t v25 = v135;
    sub_1000732E8(*a1 + v24 * v22, v135, type metadata accessor for SuggestedDateItem.PhotoDateItem);
    uint64_t v134 = v23;
    Swift::Int v138 = v12;
    uint64_t v26 = v136;
    sub_1000732E8(v23 + v24 * v21, v136, type metadata accessor for SuggestedDateItem.PhotoDateItem);
    int v27 = static Date.> infix(_:_:)();
    uint64_t v28 = v26;
    Swift::Int v29 = v138;
    sub_100073288(v28, type metadata accessor for SuggestedDateItem.PhotoDateItem);
    sub_100073288(v25, type metadata accessor for SuggestedDateItem.PhotoDateItem);
    Swift::Int v30 = v24;
    Swift::Int v140 = v24;
    if (v21 + 2 >= v29)
    {
      Swift::Int v33 = v21 + 2;
      Swift::Int v38 = v129;
      if ((v27 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v125 = v18;
      uint64_t v31 = v24 * v22;
      uint64_t v32 = v134;
      Swift::Int v33 = v21 + 2;
      uint64_t v34 = v30 * (v21 + 2);
      do
      {
        uint64_t v35 = v135;
        sub_1000732E8(v32 + v34, v135, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        uint64_t v36 = v136;
        sub_1000732E8(v32 + v31, v136, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        int v37 = static Date.> infix(_:_:)();
        sub_100073288(v36, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        sub_100073288(v35, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        if ((v27 ^ v37))
        {
          a1 = v137;
          Swift::Int v29 = v138;
          unint64_t v18 = v125;
          Swift::Int v30 = v140;
          Swift::Int v38 = v129;
          if ((v27 & 1) == 0) {
            goto LABEL_37;
          }
          goto LABEL_24;
        }
        Swift::Int v30 = v140;
        v32 += v140;
        ++v33;
        Swift::Int v29 = v138;
      }
      while (v138 != v33);
      Swift::Int v33 = v138;
      a1 = v137;
      unint64_t v18 = v125;
      Swift::Int v38 = v129;
      if ((v27 & 1) == 0)
      {
LABEL_37:
        Swift::Int v39 = v33;
        break;
      }
    }
LABEL_24:
    if (v33 < v38) {
      goto LABEL_141;
    }
    Swift::Int v39 = v33;
    if (v38 >= v33) {
      break;
    }
    uint64_t v125 = v18;
    uint64_t v40 = 0;
    uint64_t v41 = v30 * (v33 - 1);
    Swift::Int v42 = v38;
    Swift::Int v43 = v33 * v30;
    Swift::Int v44 = v42;
    uint64_t v45 = v42 * v30;
    uint64_t v46 = v134;
    do
    {
      if (v44 != v39 + v40 - 1)
      {
        if (!v46) {
          goto LABEL_146;
        }
        sub_100073350(v46 + v45, v128, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        if (v45 < v41 || v46 + v45 >= (unint64_t)(v46 + v43))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v45 != v41)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_100073350(v128, v46 + v41, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        Swift::Int v39 = v33;
        Swift::Int v30 = v140;
      }
      ++v44;
      --v40;
      v41 -= v30;
      v43 -= v30;
      v45 += v30;
    }
    while (v44 < v39 + v40);
    a1 = v137;
    Swift::Int v29 = v138;
    unint64_t v18 = v125;
    uint64_t v2 = v126;
    Swift::Int v38 = v129;
    if (v39 < v138) {
      goto LABEL_41;
    }
LABEL_58:
    if (v39 < v38) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v138 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v18 = sub_1000F1750(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v64 = *((void *)v18 + 2);
    unint64_t v63 = *((void *)v18 + 3);
    unint64_t v20 = v64 + 1;
    if (v64 >= v63 >> 1) {
      unint64_t v18 = sub_1000F1750((char *)(v63 > 1), v64 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v65 = v18 + 32;
    uint64_t v66 = &v18[16 * v64 + 32];
    Swift::Int v67 = v138;
    *(void *)uint64_t v66 = v129;
    *((void *)v66 + 1) = v67;
    if (v64)
    {
      while (1)
      {
        unint64_t v68 = v20 - 1;
        if (v20 >= 4)
        {
          unint64_t v73 = &v65[16 * v20];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_123;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_124;
          }
          unint64_t v80 = v20 - 2;
          BOOL v81 = &v65[16 * v20 - 32];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_126;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_129;
          }
          if (v85 >= v76)
          {
            uint64_t v103 = &v65[16 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_133;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v97 = *((void *)v18 + 4);
            uint64_t v98 = *((void *)v18 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_89;
          }
          uint64_t v70 = *((void *)v18 + 4);
          uint64_t v69 = *((void *)v18 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_125;
        }
        unint64_t v80 = v20 - 2;
        uint64_t v86 = &v65[16 * v20 - 32];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_128;
        }
        uint64_t v92 = &v65[16 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_131;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_132;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_95:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v91) {
          goto LABEL_127;
        }
        int v99 = &v65[16 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_130;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v108 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v109 = v18;
        uint64_t v110 = &v65[16 * v107];
        uint64_t v111 = *(void *)v110;
        uint64_t v112 = &v65[16 * v68];
        uint64_t v113 = *((void *)v112 + 1);
        sub_1000726F4(v108 + *(void *)(v131 + 72) * *(void *)v110, v108 + *(void *)(v131 + 72) * *(void *)v112, v108 + *(void *)(v131 + 72) * v113, v130);
        if (v2) {
          goto LABEL_117;
        }
        if (v113 < v111) {
          goto LABEL_120;
        }
        if (v68 > *((void *)v109 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v110 = v111;
        *(void *)&v65[16 * v107 + 8] = v113;
        unint64_t v114 = *((void *)v109 + 2);
        if (v68 >= v114) {
          goto LABEL_122;
        }
        unint64_t v18 = v109;
        unint64_t v20 = v114 - 1;
        memmove(&v65[16 * v68], v112 + 16, 16 * (v114 - 1 - v68));
        *((void *)v109 + 2) = v114 - 1;
        a1 = v137;
        if (v114 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v12 = a1[1];
    Swift::Int v19 = v138;
    if (v138 >= v12) {
      goto LABEL_106;
    }
  }
  uint64_t v2 = v126;
  if (v39 >= v29) {
    goto LABEL_58;
  }
LABEL_41:
  if (__OFSUB__(v39, v38)) {
    goto LABEL_139;
  }
  if (v39 - v38 >= v124) {
    goto LABEL_58;
  }
  if (__OFADD__(v38, v124)) {
    goto LABEL_142;
  }
  if (v38 + v124 >= v29) {
    Swift::Int v47 = v29;
  }
  else {
    Swift::Int v47 = v38 + v124;
  }
  if (v47 >= v38)
  {
    if (v39 != v47)
    {
      uint64_t v125 = v18;
      uint64_t v126 = v2;
      uint64_t v48 = *(void *)(v131 + 72);
      uint64_t v49 = v48 * (v39 - 1);
      uint64_t v133 = v48;
      Swift::Int v50 = v39 * v48;
      Swift::Int v127 = v47;
      do
      {
        uint64_t v52 = 0;
        Swift::Int v138 = v39;
        uint64_t v134 = v50;
        while (1)
        {
          Swift::Int v140 = v38;
          uint64_t v53 = *a1;
          uint64_t v54 = v50 + v52 + *a1;
          uint64_t v55 = v135;
          sub_1000732E8(v54, v135, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          uint64_t v56 = v49;
          uint64_t v57 = v49 + v52 + v53;
          uint64_t v58 = v136;
          sub_1000732E8(v57, v136, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          char v59 = static Date.> infix(_:_:)();
          sub_100073288(v58, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          sub_100073288(v55, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          if ((v59 & 1) == 0) {
            break;
          }
          uint64_t v60 = *a1;
          if (!*a1) {
            goto LABEL_144;
          }
          Swift::Int v50 = v134;
          uint64_t v49 = v56;
          uint64_t v61 = v60 + v56 + v52;
          sub_100073350(v60 + v134 + v52, v139, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          swift_arrayInitWithTakeFrontToBack();
          sub_100073350(v139, v61, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          v52 -= v133;
          Swift::Int v38 = v140 + 1;
          a1 = v137;
          Swift::Int v51 = v138;
          if (v138 == v140 + 1) {
            goto LABEL_51;
          }
        }
        Swift::Int v51 = v138;
        uint64_t v49 = v56;
        Swift::Int v50 = v134;
LABEL_51:
        Swift::Int v39 = v51 + 1;
        v49 += v133;
        v50 += v133;
        Swift::Int v38 = v129;
      }
      while (v39 != v127);
      Swift::Int v39 = v127;
      unint64_t v18 = v125;
      uint64_t v2 = v126;
    }
    goto LABEL_58;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100072438(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - v9;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      unint64_t v18 = a4;
      uint64_t v19 = *a4;
      sub_1000732E8(v30 + v16 + v19, (uint64_t)v14, type metadata accessor for SuggestedDateItem.PhotoDateItem);
      sub_1000732E8(v31 + v16 + v19, (uint64_t)v10, type metadata accessor for SuggestedDateItem.PhotoDateItem);
      char v20 = static Date.> infix(_:_:)();
      sub_100073288((uint64_t)v10, type metadata accessor for SuggestedDateItem.PhotoDateItem);
      a4 = v18;
      sub_100073288((uint64_t)v14, type metadata accessor for SuggestedDateItem.PhotoDateItem);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *v18;
      if (!*v18) {
        break;
      }
      uint64_t v22 = v21 + v31 + v16;
      sub_100073350(v21 + v30 + v16, v29, type metadata accessor for SuggestedDateItem.PhotoDateItem);
      swift_arrayInitWithTakeFrontToBack();
      sub_100073350(v29, v22, type metadata accessor for SuggestedDateItem.PhotoDateItem);
      v16 -= v27;
      ++v17;
      a4 = v18;
      if (v28 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1000726F4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for SuggestedDateItem.PhotoDateItem(0);
  __chkstk_darwin(v44);
  uint64_t v45 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_1000732E8(v26 + v28, (uint64_t)v11, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v45;
          sub_1000732E8(a2 + v28, v45, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          char v34 = static Date.> infix(_:_:)();
          uint64_t v35 = v33;
          uint64_t v11 = (char *)v32;
          sub_100073288(v35, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          sub_100073288(v32, type metadata accessor for SuggestedDateItem.PhotoDateItem);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1000732E8(a2, (uint64_t)v11, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        uint64_t v21 = v45;
        sub_1000732E8(a4, v45, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        char v22 = static Date.> infix(_:_:)();
        sub_100073288(v21, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        sub_100073288((uint64_t)v11, type metadata accessor for SuggestedDateItem.PhotoDateItem);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_1000F1A7C(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100072C00()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

void *sub_100072F44()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 arrayForKey:v1];

  if (!v2
    || (uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v2,
        uint64_t v4 = sub_1000E5150(v3),
        swift_bridgeObjectRelease(),
        !v4))
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_100073020()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100073058()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100073098()
{
  return sub_100070D2C(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1000730A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000730B4()
{
  return swift_release();
}

uint64_t sub_1000730C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1000730FC(void *a1)
{
  sub_100070E10(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_10007310C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1000731F4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_100070AC4(a1, *(NSObject **)(v1 + 16), v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100073288(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000732E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100073350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000733B8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000733C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007340C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100073444@<X0>(uint64_t a1@<X8>)
{
  return sub_100583F04(a1);
}

uint64_t type metadata accessor for ConfigurableConstants()
{
  return self;
}

uint64_t sub_100073494()
{
  return swift_initClassMetadata2();
}

void sub_100073504(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_100073A8C();
}

double sub_10007352C(double a1, double a2)
{
  [v2 frame];
  double v5 = 0.0;
  if (v6 > a2)
  {
    [v2 frame];
    double v5 = (v7 - a2) * 0.5;
  }
  [v2 frame];
  if (v8 > a1) {
    [v2 frame];
  }
  return v5;
}

uint64_t sub_1000735D4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
}

void sub_100073610(void *a1)
{
  id v1 = a1;
  sub_1000735D4();
}

id sub_100073658(void *a1)
{
  id v3 = *(void **)(v1 + qword_1007FB108);
  [v3 zoomScale];
  double v5 = 1.0;
  if (v6 == 1.0)
  {
    [a1 locationInView:*(void *)(v1 + qword_1007FB128)];
    double v8 = v7;
    double v10 = v9;
    [v3 frame];
    double v12 = v11 / 3.0;
    [v3 frame];
    double v14 = v8 - v12 * 0.5;
    double v5 = v10 - v13 / 3.0 * 0.5;
    uint64_t v15 = "zoomToRect:animated:";
    uint64_t v16 = v3;
    double v4 = v12;
  }
  else
  {
    uint64_t v15 = "setZoomScale:animated:";
    double v14 = 1.0;
    uint64_t v16 = v3;
  }
  return [v16 v15:1 v14:v5 v4];
}

void sub_100073778(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100073658(v4);
}

uint64_t sub_1000737E0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  char v9 = sub_100073B2C(v7);

  return v9 & 1;
}

id sub_100073840()
{
  uint64_t v0 = (void *)sub_100073BA0();

  return v0;
}

uint64_t sub_100073874(void *a1)
{
  [a1 contentSize];
  [a1 setContentInset:sub_10007352C(v3, v4)];
  id v5 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120);

  return v5();
}

void sub_100073908(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100073874(v4);
}

void sub_100073970()
{
}

id sub_100073998()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenZoomableMediaAssetView();
  [super dealloc];
}

void sub_1000739F4(uint64_t a1)
{
  sub_100021D58(*(void **)(a1 + qword_1007FB120), *(void **)(a1 + qword_1007FB120 + 8));
  objc_super v2 = *(void **)(a1 + qword_1007FB128);
}

uint64_t type metadata accessor for FullScreenZoomableMediaAssetView()
{
  return sub_100073C20();
}

void sub_100073A8C()
{
  *(void *)&v0[qword_1007FB110] = 0;
  *(void *)&v0[qword_1007FB118] = 0;
  uint64_t v1 = &v0[qword_1007FB120];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  objc_super v2 = &v0[qword_1007FB130];
  *(void *)objc_super v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100073B2C(void *a1)
{
  objc_super v2 = *(void **)(v1 + qword_1007FB110);
  if (!v2) {
    return 0;
  }
  sub_100073BE0();
  id v4 = v2;
  id v5 = a1;
  char v6 = static NSObject.== infix(_:_:)();

  return v6 & 1;
}

uint64_t sub_100073BA0()
{
  return *(void *)(v0 + qword_1007FB128);
}

void sub_100073BB0()
{
}

unint64_t sub_100073BE0()
{
  unint64_t result = qword_10080C350;
  if (!qword_10080C350)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080C350);
  }
  return result;
}

uint64_t sub_100073C20()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100073C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a1;
  uint64_t v22 = a4;
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v19 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  char v20 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FA5C0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  double v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  id v23 = *(id *)(a2 + OBJC_IVAR____TtC7Journal30RandomAudioRecordingsGenerator_synthesizer);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + v14 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v13, v11, v8);
  *(void *)(v16 + v14) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, v20, v19);
  aBlock[4] = sub_100074830;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007453C;
  aBlock[3] = &unk_1007980B0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v23 writeUtterance:v24 toBufferCallback:v17];
  _Block_release(v17);
  return swift_release();
}

void sub_100073F20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v46 = a1;
    if ([v12 frameLength])
    {
      unint64_t v13 = (void **)(a3 + 16);
      swift_beginAccess();
      if (!*(void *)(a3 + 16))
      {
        sub_100010218((uint64_t *)&unk_1007FC0F0);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1006D6280;
        uint64_t v50 = 0x73676E6974746553;
        unint64_t v51 = 0xEA0000000000203ALL;
        id v27 = [v12 format];
        id v28 = [v27 settings];
        uint64_t v45 = a4;
        id v29 = v28;

        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
        v30._uint64_t countAndFlagsBits = Dictionary.description.getter();
        String.append(_:)(v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v50;
        unint64_t v32 = v51;
        *(void *)(v26 + 56) = &type metadata for String;
        *(void *)(v26 + 32) = v31;
        *(void *)(v26 + 40) = v32;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v45, v7);
        id v33 = [v12 format];
        id v34 = [v33 settings];

        uint64_t v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
        id v36 = objc_allocWithZone((Class)AVAudioFile);
        id v37 = sub_100074930((uint64_t)v10, v35, 3, 0);
        swift_beginAccess();
        unint64_t v38 = *v13;
        *unint64_t v13 = v37;
      }
      swift_beginAccess();
      unint64_t v14 = *v13;
      if (*v13)
      {
        id v48 = 0;
        id v15 = v14;
        if ([v15 writeFromBuffer:v12 error:&v48])
        {
          id v16 = v48;
        }
        else
        {
          id v39 = v48;
          uint64_t v40 = _convertNSErrorToError(_:)();

          swift_willThrow();
          sub_100010218((uint64_t *)&unk_1007FC0F0);
          uint64_t v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = xmmword_1006D6280;
          id v48 = 0;
          unint64_t v49 = 0xE000000000000000;
          _StringGuts.grow(_:)(40);
          v42._uint64_t countAndFlagsBits = 0x1000000000000026;
          v42._object = (void *)0x80000001006896B0;
          String.append(_:)(v42);
          uint64_t v47 = v40;
          sub_100010218((uint64_t *)&unk_1007FC0D0);
          _print_unlocked<A, B>(_:_:)();
          id v43 = v48;
          unint64_t v44 = v49;
          *(void *)(v41 + 56) = &type metadata for String;
          *(void *)(v41 + 32) = v43;
          *(void *)(v41 + 40) = v44;
          print(_:separator:terminator:)();
          swift_bridgeObjectRelease();

          swift_errorRelease();
        }
      }
      else
      {
      }
    }
    else
    {
      sub_100010218(&qword_1007FA5C0);
      CheckedContinuation.resume(returning:)();
      id v25 = v46;
    }
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1006D6280;
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    uint64_t v52 = 0x100000000000001ELL;
    unint64_t v53 = 0x8000000100689690;
    id v18 = [a1 description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    v22._uint64_t countAndFlagsBits = v19;
    v22._object = v21;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    uint64_t v23 = v52;
    unint64_t v24 = v53;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 32) = v23;
    *(void *)(v17 + 40) = v24;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
  }
}

void sub_10007453C(uint64_t a1, void *a2)
{
  double v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_100074628()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RandomAudioRecordingsGenerator();
  return [super dealloc];
}

uint64_t type metadata accessor for RandomAudioRecordingsGenerator()
{
  return self;
}

uint64_t sub_100074690()
{
  return swift_deallocObject();
}

uint64_t sub_1000746C8()
{
  uint64_t v1 = sub_100010218(&qword_1007FA5C0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_100074830(void *a1)
{
  uint64_t v3 = *(void *)(sub_100010218(&qword_1007FA5C0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_100073F20(a1, v1 + v4, v7, v8);
}

uint64_t sub_100074918(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100074928()
{
  return swift_release();
}

id sub_100074930(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v10 = v9;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = 0;
  id v12 = [v5 initForWriting:v10 settings:isa commonFormat:a3 interleaved:a4 & 1 error:&v20];

  id v13 = v20;
  if (v12)
  {
    uint64_t v14 = type metadata accessor for URL();
    id v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    id v16 = v13;
    v15(a1, v14);
  }
  else
  {
    id v17 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  }
  return v12;
}

unint64_t sub_100074AC8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10007AEE8(*a1);
  *a2 = result;
  return result;
}

void sub_100074AF4(void *a1@<X8>)
{
  *a1 = *v1;
}

id sub_100074B00()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator____lazy_storage___pickerPresentationHandler;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator____lazy_storage___pickerPresentationHandler);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator____lazy_storage___pickerPresentationHandler);
  }
  else
  {
    unint64_t v4 = (objc_class *)type metadata accessor for PickerPresentationHandler();
    unint64_t v5 = (char *)objc_allocWithZone(v4);
    *(void *)&v5[OBJC_IVAR____TtC7JournalP33_5C692566AD29E277CBCA17308A33F5D425PickerPresentationHandler_coordinator] = v0;
    swift_unownedRetain();
    v10.receiver = v5;
    v10.super_class = v4;
    [super init];
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_100074BA0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v1 = 0.0;
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong view];

    if (!v3)
    {
      __break(1u);
      goto LABEL_12;
    }
    id v4 = [v3 window];

    if (v4)
    {
      [v4 frame];
      double v6 = v5;
      [v4 safeAreaInsets];
      double v8 = v6 - v7;
      [v4 safeAreaInsets];
      double v10 = v9;

      double v1 = v8 - v10 + -10.0;
    }
  }
  uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v11) {
    return;
  }
  id v12 = v11;
  id v13 = [v11 view];

  if (!v13)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v14 = [v13 window];

  if (v14)
  {
    [v14 safeAreaInsets];

    if (v1 > 0.0) {
      sub_100074EA8(0);
    }
  }
}

void sub_100074D14(void (*a1)(void), uint64_t a2)
{
  sub_10007549C(1);
  double v5 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
  swift_retain();
  v5(1);
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v7 = Strong;
    [Strong becomeFirstResponder];
  }
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    double v9 = (void *)v8;
    swift_unknownObjectWeakAssign();
    id v10 = [v9 sheetPresentationController];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 setDelegate:0];
    }
    v13[4] = a1;
    v13[5] = a2;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    void v13[2] = sub_10017D530;
    _DWORD v13[3] = &unk_1007985F0;
    id v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
    [v9 dismissViewControllerAnimated:1 completion:v12];
    _Block_release(v12);
  }
  else
  {
    a1();
  }
}

void sub_100074EA8(void *a1)
{
  if (a1)
  {
    [a1 maximumDetentValue];
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v6 = Strong;
      id v7 = [Strong view];

      if (!v7)
      {
LABEL_13:
        __break(1u);
        return;
      }
      id v8 = [v7 window];

      if (v8)
      {
        [v8 frame];
        [v8 safeAreaInsets];
        [v8 safeAreaInsets];
      }
    }
  }
  double v1 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  id v3 = [v1 view];

  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v4 = [v3 window];

  if (v4)
  {
    [v4 safeAreaInsets];
  }
}

void sub_100075050(char a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (!v2) {
    return;
  }
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
  if (!v3) {
    return;
  }
  BOOL v4 = a1 != 2;
  BOOL v5 = a1 == 2;
  id v20 = v2;
  id v6 = v3;
  [v20 setActive:v5];
  [v6 setActive:v4];
  double v7 = 0.0;
  switch(v8)
  {
    case 1:
      double bottom = *(double *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_lastReportedKeyboardHeight);
      if (bottom > 0.0) {
        goto LABEL_15;
      }
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (!Strong)
      {
        double bottom = UIEdgeInsetsZero.bottom;
        goto LABEL_15;
      }
      id v16 = Strong;
      id v17 = [Strong view];

      if (v17)
      {
        [v17 safeAreaInsets];
        double bottom = v18;

LABEL_15:
        double v7 = -2.0 - bottom;
        goto LABEL_16;
      }
      goto LABEL_20;
    case 2:
      goto LABEL_16;
    case 3:
      sub_100074BA0();
      double v7 = -2.0 - v19;
      goto LABEL_16;
    default:
      double v9 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v9)
      {
        id v10 = v9;
        id v11 = [v9 view];

        if (!v11)
        {
          __break(1u);
LABEL_20:
          __break(1u);
          JUMPOUT(0x100075260);
        }
        [v11 safeAreaInsets];
        double v13 = v12;

        double v7 = -v13;
      }
      else
      {
        double v7 = -UIEdgeInsetsZero.bottom;
      }
LABEL_16:
      [v6 setConstant:v7];

      return;
  }
}

void sub_100075270()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong frame];
  }
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) - 2 >= 2)
  {
    if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl)) {
      goto LABEL_12;
    }
    if (*(double *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_lastReportedKeyboardHeight) <= 0.0) {
      goto LABEL_12;
    }
    id v6 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v6) {
      goto LABEL_12;
    }
    double v7 = v6;
    id v5 = [v6 view];

    if (v5) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  sub_100074BA0();
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    BOOL v4 = v3;
    id v5 = [v3 view];

    if (v5)
    {
LABEL_6:
      [v5 safeAreaInsets];

      goto LABEL_12;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
LABEL_12:
  int v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    double v9 = v8;
    [v8 contentInset];
    [v9 setContentInset:];
  }
  id v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    id v11 = v10;
    [v10 verticalScrollIndicatorInsets];
    [v11 setVerticalScrollIndicatorInsets];
  }
}

void sub_10007549C(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) = 0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_20:
    if ((a1 & 1) == 0) {
      goto LABEL_24;
    }
LABEL_21:
    id v16 = self;
    unint64_t v24 = sub_10007B968;
    uint64_t v25 = v1;
    CATransform3D aBlock = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    Swift::String v22 = sub_10017D530;
    uint64_t v23 = &unk_1007985A0;
    id v17 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_release();
    unint64_t v24 = sub_10007B970;
    uint64_t v25 = v1;
    CATransform3D aBlock = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    Swift::String v22 = sub_1001C7318;
    uint64_t v23 = &unk_1007985C8;
    double v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v16 animateWithDuration:0 delay:v17 options:v18 animations:0.2 completion:0.0];
    _Block_release(v18);
    _Block_release(v17);
    swift_release_n();
    return;
  }
  BOOL v4 = Strong;
  id v5 = [Strong items];
  if (!v5)
  {

    goto LABEL_20;
  }
  id v6 = v5;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_23:

    swift_bridgeObjectRelease();
    if ((a1 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_5:
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  double v19 = v4;
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v7 + 8 * i + 32);
    }
    id v10 = v11;
    id v12 = [v11 customView:v19];
    if (v12)
    {
      id v13 = v12;
      self;
      uint64_t v14 = swift_dynamicCastObjCClass();
      if (v14)
      {
        id v15 = (void *)v14;
        id v13 = v13;
        [v15 setSelected:0];
        if ([v15 tag] == (id)9) {
          [v15 setEnabled:0];
        }

        id v10 = v13;
      }

      id v10 = v13;
    }
  }
  swift_bridgeObjectRelease();
  if (a1) {
    goto LABEL_21;
  }
LABEL_24:
  sub_100075050(0);

  sub_100075270();
}

void sub_10007582C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (v1)
  {
    uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
    if (v2)
    {
      id v3 = v2;
      id v4 = v1;
      [v4 setActive:0];
      [v3 setActive:1];
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v6 = Strong;
        id v7 = [Strong view];

        if (!v7)
        {
LABEL_15:
          __break(1u);
          return;
        }
        [v7 safeAreaInsets];
        double bottom = v8;
      }
      else
      {
        double bottom = UIEdgeInsetsZero.bottom;
      }
      [v3 setConstant:-bottom];
    }
  }
  id v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v10) {
    return;
  }
  id v11 = v10;
  id v12 = [v10 view];

  if (!v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  [v12 layoutIfNeeded];
}

id sub_1000759B8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v11 = (void *)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
  *id v11 = a5;
  v11[1] = a6;
  swift_retain();
  swift_release();
  if (!a4)
  {
    double v18 = (id *)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
    unint64_t v24 = *(void **)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
    *(void *)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint) = 0;

    id v23 = 0;
    goto LABEL_6;
  }
  id v12 = [a4 bottomAnchor];
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v14 = result;
  id v15 = [result keyboardLayoutGuide];

  id v16 = [v15 topAnchor];
  id v17 = [v12 constraintEqualToAnchor:v16 constant:-2.0];

  double v18 = (id *)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  double v19 = *(void **)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  *(void *)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint) = v17;

  id v20 = [a4 bottomAnchor];
  id result = [a1 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v21 = result;
  id v22 = [result bottomAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
LABEL_6:
  uint64_t v25 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint;
  uint64_t v26 = *(void **)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
  *(void *)(v6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint) = v23;

  if (*v18) {
    [*v18 setActive:0];
  }
  id result = *(id *)(v6 + v25);
  if (result)
  {
    return [result setActive:1];
  }
  return result;
}

void sub_100075C38()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 addObserver:v0 selector:"keyboardWillShow:" name:UIKeyboardWillShowNotification object:0];

  id v3 = [v1 defaultCenter];
  [v3 addObserver:v0 selector:"keyboardDidShow" name:UIKeyboardDidShowNotification object:0];

  id v4 = [v1 defaultCenter];
  [v4 addObserver:v0 selector:"keyboardDidHide" name:UIKeyboardDidHideNotification object:0];

  id v5 = [v1 defaultCenter];
  [v5 addObserver:v0 selector:"textViewDidBeginEditing:" name:UITextViewTextDidBeginEditingNotification object:0];
}

void sub_100075D90()
{
  uint64_t v1 = v0;
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "textViewWillBeginEditing - Changing to keyboard constraint.", v4, 2u);
    swift_slowDealloc();
  }

  id v5 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (v5)
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
    if (v6)
    {
      id v8 = v5;
      id v7 = v6;
      [v8 setActive:1];
      [v7 setActive:0];
      [v7 setConstant:0.0];
    }
  }
}

void sub_100075ECC()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) != 1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      unsigned __int8 v7 = [Strong isFirstResponder];

      if (v7) {
        goto LABEL_6;
      }
    }
    id v8 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      double v9 = v8;
      unsigned int v10 = [v8 isFirstResponder];

      if (v10)
      {
LABEL_6:
        id v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          id v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "keyboardDidBeginEditing - Hardware keyboard detected!", v13, 2u);
          swift_slowDealloc();
        }

        long long v20 = 0u;
        long long v21 = 0u;
        sub_100010218(&qword_1007FB618);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1006D6280;
        v19[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
        void v19[2] = v15;
        id v16 = UIKeyboardWillShowNotification;
        AnyHashable.init<A>(_:)();
        type metadata accessor for CGRect(0);
        *(void *)(inited + 96) = v17;
        uint64_t v18 = swift_allocObject();
        *(void *)(inited + 72) = v18;
        *(_OWORD *)(v18 + 16) = 0u;
        *(_OWORD *)(v18 + 32) = 0u;
        sub_100396738(inited);
        Notification.init(name:object:userInfo:)();
        sub_100076238();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        sub_100076C54();
      }
    }
  }
}

void sub_100076238()
{
  uint64_t v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    long long v68 = 0u;
    long long v69 = 0u;
LABEL_21:
    sub_10001457C((uint64_t)&v68, &qword_1007FAD50);
    return;
  }
  uint64_t v3 = v2;
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v4;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_10001B738((uint64_t)&aBlock), (v6 & 1) != 0))
  {
    sub_10001B648(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)&aBlock);
  if (!*((void *)&v69 + 1)) {
    goto LABEL_21;
  }
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  unsigned __int8 v7 = v63;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (v9 = Strong, unsigned __int8 v10 = [Strong isFirstResponder], v9, (v10 & 1) == 0))
  {
    id v11 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v11) {
      return;
    }
    os_log_type_t v12 = v11;
    unsigned int v13 = [v11 isFirstResponder];

    if (!v13) {
      return;
    }
  }
  char v14 = *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_lastReportedKeyboardHeight) = v7;
  uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v15 || (id v16 = v15, v17 = [v15 isEditing], v16, !v17))
  {
    uint64_t v31 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v31) {
      goto LABEL_57;
    }
    unint64_t v32 = v31;
    unsigned int v33 = [v31 isEditing];

    if (!v33) {
      goto LABEL_57;
    }
    id v34 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v34) {
      goto LABEL_57;
    }
    double v19 = v34;
    id v35 = [v34 items];
    if (v35)
    {
      id v36 = v35;
      sub_10001B284(0, (unint64_t *)&qword_100803F80);
      unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v37 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v38) {
          goto LABEL_56;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v38) {
          goto LABEL_56;
        }
      }
      uint64_t v58 = v19;
      char v59 = v14;
      if (v38 >= 1)
      {
        for (uint64_t i = 0; i != v38; ++i)
        {
          if ((v37 & 0xC000000000000001) != 0) {
            id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v41 = *(id *)(v37 + 8 * i + 32);
          }
          uint64_t v40 = v41;
          id v42 = [v41 customView:v58];
          if (v42)
          {
            id v43 = v42;
            self;
            uint64_t v44 = swift_dynamicCastObjCClass();
            if (v44)
            {
              uint64_t v45 = (void *)v44;
              id v43 = v43;
              [v45 setSelected:[v45 tag] == 1];
              if ([v45 tag] == (id)9) {
                [v45 setEnabled:1];
              }

              uint64_t v40 = v43;
            }

            uint64_t v40 = v43;
          }
        }
        goto LABEL_51;
      }
LABEL_66:
      __break(1u);
      return;
    }
LABEL_52:

    goto LABEL_57;
  }
  uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    double v19 = v18;
    id v20 = [v18 items];
    if (v20)
    {
      long long v21 = v20;
      sub_10001B284(0, (unint64_t *)&qword_100803F80);
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v23)
        {
LABEL_18:
          uint64_t v58 = v19;
          char v59 = v14;
          if (v23 >= 1)
          {
            for (uint64_t j = 0; j != v23; ++j)
            {
              if ((v22 & 0xC000000000000001) != 0) {
                id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v26 = *(id *)(v22 + 8 * j + 32);
              }
              uint64_t v25 = v26;
              id v27 = [v26 customView:v58];
              if (v27)
              {
                id v28 = v27;
                self;
                uint64_t v29 = swift_dynamicCastObjCClass();
                if (v29)
                {
                  Swift::String v30 = (void *)v29;
                  id v28 = v28;
                  [v30 setSelected:[v30 tag] == 0];
                  if ([v30 tag] == (id)9) {
                    [v30 setEnabled:0];
                  }

                  uint64_t v25 = v28;
                }

                uint64_t v25 = v28;
              }
            }
LABEL_51:

            swift_bridgeObjectRelease();
            char v14 = v59;
            goto LABEL_57;
          }
          __break(1u);
          goto LABEL_66;
        }
      }
LABEL_56:

      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
    goto LABEL_52;
  }
LABEL_57:
  id v46 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
  swift_retain();
  v46(1);
  swift_release();
  uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v47)
  {
    id v48 = v47;
    id v49 = [v47 sheetPresentationController];
    if (v49)
    {
      uint64_t v50 = v49;
      [v49 setDelegate:0];
    }
    unint64_t v64 = (void (*)())AudioRecordingActivityState.hash(into:);
    uint64_t v65 = 0;
    CATransform3D aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    uint64_t v62 = sub_10017D530;
    unint64_t v63 = &unk_100798500;
    unint64_t v51 = _Block_copy(&aBlock);
    swift_release();
    [v48 dismissViewControllerAnimated:1 completion:v51];
    _Block_release(v51);
  }
  swift_unknownObjectWeakAssign();
  if ((v14 & 0xFE) == 2)
  {
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "keyboardWillShow - Animating bottom constraint to keyboard constant.", v54, 2u);
      swift_slowDealloc();
    }

    uint64_t v55 = self;
    unint64_t v64 = sub_10007B950;
    uint64_t v65 = v1;
    CATransform3D aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    uint64_t v62 = sub_10017D530;
    unint64_t v63 = &unk_100798528;
    uint64_t v56 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_release();
    unint64_t v64 = (void (*)())AudioRecordingActivityState.hash(into:);
    uint64_t v65 = 0;
    CATransform3D aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    uint64_t v62 = sub_1001C7318;
    unint64_t v63 = &unk_100798550;
    uint64_t v57 = _Block_copy(&aBlock);
    swift_release();
    [v55 animateWithDuration:0 delay:v56 options:v57 animations:0.2 completion:0.0];
    _Block_release(v57);
    _Block_release(v56);
    swift_release();
  }
}

void sub_100076A50(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (v1)
  {
    uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
    if (v2)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 setActive:1];
      [v4 setActive:0];
      [v4 setConstant:0.0];
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v6 = Strong;
    id v7 = [Strong view];

    if (v7)
    {
      [v7 layoutIfNeeded];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100076C54()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) == 1)
  {
    uint64_t v1 = v0;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v3 = Strong;
      unsigned __int8 v4 = [Strong isFirstResponder];

      if (v4) {
        goto LABEL_6;
      }
    }
    unint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      char v6 = v5;
      unsigned int v7 = [v5 isFirstResponder];

      if (v7)
      {
LABEL_6:
        id v8 = Logger.logObject.getter();
        os_log_type_t v9 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v8, v9))
        {
          unsigned __int8 v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned __int8 v10 = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "keyboardDidShow - Changing to keyboard constraint.", v10, 2u);
          swift_slowDealloc();
        }

        id v11 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
        if (v11)
        {
          os_log_type_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
          if (v12)
          {
            id v13 = v11;
            id v14 = v12;
            [v13 setActive:1];
            [v14 setActive:0];
            [v14 setConstant:0.0];
          }
        }
        sub_100075270();
        uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
        id v16 = v15;
        if (v15)
        {
          id v17 = [v15 presentedViewController];

          if (v17)
          {
            self;
            id v16 = (void *)swift_dynamicCastObjCClass();
            if (!v16) {
          }
            }
          else
          {
            id v16 = 0;
          }
        }

        uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v18)
        {
          double v19 = v18;
          id v20 = [v18 items];

          if (v20)
          {
            sub_10001B284(0, (unint64_t *)&qword_100803F80);
            unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v21 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
              if (v22) {
                goto LABEL_20;
              }
            }
            else
            {
              uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v22)
              {
LABEL_20:
                if (v22 < 1)
                {
                  __break(1u);
                  return;
                }
                for (uint64_t i = 0; i != v22; ++i)
                {
                  if ((v21 & 0xC000000000000001) != 0) {
                    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v24 = *(id *)(v21 + 8 * i + 32);
                  }
                  uint64_t v25 = v24;
                  [v24 setIsAccessibilityElement:v16 == 0];
                }
              }
            }
            swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
}

void sub_100076F80()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) != 1) {
    return;
  }
  uint64_t v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "keyboardDidHide", v5, 2u);
    swift_slowDealloc();
  }

  sub_100075050(0);
  *(unsigned char *)(v2 + v1) = 0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v7 = Strong;
    id v8 = [Strong items];
    if (v8)
    {
      os_log_type_t v9 = v8;
      sub_10001B284(0, (unint64_t *)&qword_100803F80);
      unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
LABEL_8:
          if (v11 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v14 = *(id *)(v10 + 8 * i + 32);
            }
            id v13 = v14;
            id v15 = [v14 customView];
            if (v15)
            {
              id v16 = v15;
              self;
              uint64_t v17 = swift_dynamicCastObjCClass();
              if (v17)
              {
                uint64_t v18 = (void *)v17;
                id v16 = v16;
                [v18 setSelected:0];
                if ([v18 tag] == (id)9) {
                  [v18 setEnabled:0];
                }

                id v13 = v16;
              }

              id v13 = v16;
            }
          }
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
LABEL_25:

  sub_100075270();
}

uint64_t sub_100077254(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

void sub_100077298(void *a1, char a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t v10 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl;
  char v11 = a2;
  if (*(unsigned char *)(a6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) != 2)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (!Strong) {
      goto LABEL_18;
    }
    char v11 = a2;
    if (*(unsigned char *)(a6 + v10) != 2)
    {
      id v14 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v14)
      {
        id v15 = v14;
        uint64_t v16 = v10;
        char v17 = a4;
        id v18 = [v14 sheetPresentationController];

        if (v18)
        {

          char v11 = a2;
        }
        else
        {
          char v11 = 0;
        }
        a4 = v17;
        uint64_t v10 = v16;
      }
      else
      {
        char v11 = 0;
      }
    }
  }
  a5 = v11 ^ 1;
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (v19)
  {
    id v20 = (void *)v19;
    swift_unknownObjectWeakAssign();
    if ((v11 & 1) == 0) {
      sub_10007549C(1);
    }
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a6;
    *(void *)(v21 + 24) = a1;
    *(unsigned char *)(v21 + 32) = a2 & 1;
    *(unsigned char *)(v21 + 33) = a3 & 1;
    *(unsigned char *)(v21 + 34) = a5 & 1;
    *(void *)(v21 + 40) = AudioRecordingActivityState.hash(into:);
    *(void *)(v21 + 48) = 0;
    swift_retain();
    id v22 = a1;
    id v23 = [v20 sheetPresentationController];
    if (v23)
    {
      id v24 = v23;
      [v23 setDelegate:0];
    }
    uint64_t v90 = (void (*)())sub_10007B2DC;
    char v91 = (void *)v21;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v87 = 1107296256;
    uint64_t v88 = sub_10017D530;
    BOOL v89 = &unk_100798208;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v20 dismissViewControllerAnimated:a5 & 1 completion:v25];
    _Block_release(v25);

    swift_release();
    return;
  }
  if (*(unsigned char *)(a6 + v10) == 2)
  {
    id v26 = *(void (**)(void))(a6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
    swift_retain();
    v26(a5 & 1);
    swift_release();
  }
LABEL_18:
  if ((a2 & 1) == 0)
  {
    id v28 = a1;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      char v82 = a4;
      uint64_t v85 = a1;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315138;
      swift_getObjectType();
      uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      unsigned int v33 = NSStringFromClass(ObjCClassFromMetadata);
      char v34 = a5;
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      uint64_t v38 = v35;
      a5 = v34;
      sub_10011EA98(v38, v37, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      a4 = v82;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "presentPicker - Presenting %s w/o picker presentation. Clearing focus.", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v85;
      swift_slowDealloc();
    }
    else
    {
    }
    sub_10007549C(a5 & 1);
    if ((a4 & 1) == 0) {
      goto LABEL_47;
    }
    goto LABEL_49;
  }
  BOOL v27 = UIAccessibilityIsVoiceOverRunning() || UIAccessibilityIsSwitchControlRunning();
  uint64_t v81 = v10;
  [a1 setModalInPresentation:v27];
  id v39 = [a1 sheetPresentationController];
  if (!v39)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v40 = v39;
  id v41 = a1;
  id v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  BOOL v80 = v27;
  if (os_log_type_enabled(v42, v43))
  {
    char v83 = a4;
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315138;
    buf = v44;
    swift_getObjectType();
    uint64_t v45 = (objc_class *)swift_getObjCClassFromMetadata();
    id v46 = NSStringFromClass(v45);
    uint64_t v47 = v40;
    id v48 = a1;
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v51 = v50;

    uint64_t v52 = v49;
    a1 = v48;
    uint64_t v40 = v47;
    sub_10011EA98(v52, v51, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "presentPicker - Presenting %s w/ picker presentation.", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v83;
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FB5F0);
  NSString v53 = String._bridgeToObjectiveC()();
  swift_retain();
  uint64_t v54 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)();

  swift_release();
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  if (a3)
  {
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1006D6D10;
    *(void *)(v55 + 32) = v54;
    uint64_t v56 = self;
    id v57 = v54;
    *(void *)(v55 + 40) = [v56 largeDetent];
    uint64_t aBlock = v55;
    specialized Array._endMutation()();
  }
  else
  {
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_1006D6D00;
    *(void *)(v58 + 32) = v54;
    uint64_t aBlock = v58;
    specialized Array._endMutation()();
    id v59 = v54;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v40 setDetents:isa];

  id v61 = [v54 identifier];
  [v40 setLargestUndimmedDetentIdentifier:v61];

  [v40 setPrefersGrabberVisible:!v80];
  id v62 = sub_100074B00();
  [v40 setDelegate:v62];

  *(unsigned char *)(a6 + v81) = 3;
  unint64_t v63 = *(void **)(a6 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (!v63)
  {

    goto LABEL_43;
  }
  id v64 = v63;
  if (([v64 isActive] & 1) == 0)
  {

LABEL_43:
    if ((a4 & 1) == 0) {
      goto LABEL_47;
    }
    goto LABEL_49;
  }
  uint64_t v65 = (void *)swift_unknownObjectWeakLoadStrong();
  char v71 = 1;
  if (!v65
    || (uint64_t v66 = v65, v67 = [v65 isFirstResponder], v66, (v67 & 1) == 0))
  {
    long long v68 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v68
      || (long long v69 = v68, v70 = [v68 isFirstResponder], v69, (v70 & 1) == 0))
    {
      char v71 = 0;
    }
  }
  sub_100075050(v71);

  if ((a4 & 1) == 0)
  {
LABEL_47:
    char v72 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v72)
    {
      unint64_t v73 = v72;
      [v72 becomeFirstResponder];
    }
  }
LABEL_49:
  swift_unknownObjectWeakAssign();
  uint64_t v74 = swift_unknownObjectWeakLoadStrong();
  if (v74)
  {
    uint64_t v75 = (void *)v74;
    uint64_t v76 = (void *)swift_allocObject();
    v76[2] = AudioRecordingActivityState.hash(into:);
    v76[3] = 0;
    v76[4] = a1;
    uint64_t v90 = sub_10007B2C8;
    char v91 = v76;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v87 = 1107296256;
    uint64_t v88 = sub_10017D530;
    BOOL v89 = &unk_1007981B8;
    uint64_t v77 = _Block_copy(&aBlock);
    id v78 = a1;
    swift_release();
    [v75 presentViewController:v78 animated:a5 & 1 completion:v77];
    _Block_release(v77);
  }
}

void sub_100077C8C(void *a1, char a2, char a3, char a4, char a5, void (*a6)(void), uint64_t a7)
{
  id v8 = v7;
  uint64_t v89 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl;
  int v14 = v7[OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl];
  LOBYTE(v7) = a2;
  if (v14 != 2)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (!Strong) {
      goto LABEL_16;
    }
    LOBYTE(v7) = a2;
    if (v8[v89] != 2)
    {
      char v17 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v17)
      {
        id v18 = v17;
        unsigned int v7 = (unsigned __int8 *)[v17 sheetPresentationController];

        if (v7)
        {

          LOBYTE(v7) = a2;
        }
      }
      else
      {
        LOBYTE(v7) = 0;
      }
    }
  }
  a5 = v7 ^ 1;
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (!v19)
  {
    if (v8[v89] == 2)
    {
      id v26 = *(void (**)(void))&v8[OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet];
      swift_retain();
      v26((v7 ^ 1) & 1);
      swift_release();
    }
LABEL_16:
    if (a2)
    {
      BOOL v27 = UIAccessibilityIsVoiceOverRunning() || UIAccessibilityIsSwitchControlRunning();
      char buf = a5;
      [a1 setModalInPresentation:v27];
      id v86 = [a1 sheetPresentationController];
      if (!v86)
      {
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      id v41 = a1;
      id v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      BOOL v82 = v27;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v84 = a6;
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 136315138;
        BOOL v80 = v44;
        swift_getObjectType();
        uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
        id v46 = NSStringFromClass(ObjCClassFromMetadata);
        uint64_t v47 = a1;
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v50 = v49;

        uint64_t v51 = v48;
        a1 = v47;
        sub_10011EA98(v51, v50, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        a6 = v84;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "presentPicker - Presenting %s w/ picker presentation.", v80, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      a5 = buf;
      sub_10001B284(0, (unint64_t *)&qword_1007FB5F0);
      NSString v52 = String._bridgeToObjectiveC()();
      swift_retain();
      NSString v53 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)();

      swift_release();
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      if (a3)
      {
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_1006D6D10;
        *(void *)(v54 + 32) = v53;
        uint64_t v55 = self;
        id v56 = v53;
        *(void *)(v54 + 40) = [v55 largeDetent];
        uint64_t aBlock = v54;
        specialized Array._endMutation()();
      }
      else
      {
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_1006D6D00;
        *(void *)(v57 + 32) = v53;
        uint64_t aBlock = v57;
        specialized Array._endMutation()();
        id v58 = v53;
      }
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v86 setDetents:isa];

      id v60 = [v53 identifier];
      [v86 setLargestUndimmedDetentIdentifier:v60];

      [v86 setPrefersGrabberVisible:!v82];
      id v61 = sub_100074B00();
      [v86 setDelegate:v61];

      v8[v89] = 3;
      id v62 = *(void **)&v8[OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint];
      if (v62)
      {
        id v63 = v62;
        if ([v63 isActive])
        {
          char v90 = a4;
          id v64 = a6;
          uint64_t v65 = (void *)swift_unknownObjectWeakLoadStrong();
          char v71 = 1;
          if (!v65
            || (uint64_t v66 = v65,
                unsigned __int8 v67 = [v65 isFirstResponder],
                v66,
                (v67 & 1) == 0))
          {
            long long v68 = (void *)swift_unknownObjectWeakLoadStrong();
            if (!v68
              || (long long v69 = v68,
                  unsigned __int8 v70 = [v68 isFirstResponder],
                  v69,
                  (v70 & 1) == 0))
            {
              char v71 = 0;
            }
          }
          sub_100075050(v71);

          a6 = v64;
          a5 = buf;
          if ((v90 & 1) == 0)
          {
LABEL_45:
            char v72 = (void *)swift_unknownObjectWeakLoadStrong();
            if (v72)
            {
              unint64_t v73 = v72;
              [v72 becomeFirstResponder];
            }
          }
        }
        else
        {

          if ((a4 & 1) == 0) {
            goto LABEL_45;
          }
        }
      }
      else
      {

        if ((a4 & 1) == 0) {
          goto LABEL_45;
        }
      }
    }
    else
    {
      id v28 = a1;
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      loga = v29;
      if (os_log_type_enabled(v29, v30))
      {
        char v83 = a6;
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315138;
        swift_getObjectType();
        unint64_t v32 = (objc_class *)swift_getObjCClassFromMetadata();
        os_log_type_t type = v30;
        char v33 = a4;
        char v34 = NSStringFromClass(v32);
        char v35 = a5;
        uint64_t v36 = a7;
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v39 = v38;

        a4 = v33;
        uint64_t v40 = v37;
        a7 = v36;
        a5 = v35;
        sub_10011EA98(v40, v39, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        a6 = v83;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, loga, type, "presentPicker - Presenting %s w/o picker presentation. Clearing focus.", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_10007549C(a5 & 1);
      if ((a4 & 1) == 0) {
        goto LABEL_45;
      }
    }
    swift_unknownObjectWeakAssign();
    uint64_t v74 = swift_unknownObjectWeakLoadStrong();
    if (v74)
    {
      uint64_t v75 = (void *)v74;
      uint64_t v76 = (void *)swift_allocObject();
      v76[2] = a6;
      v76[3] = a7;
      v76[4] = a1;
      uint64_t v95 = sub_10007BA24;
      BOOL v96 = v76;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v92 = 1107296256;
      uint64_t v93 = sub_10017D530;
      uint64_t v94 = &unk_100798488;
      uint64_t v77 = _Block_copy(&aBlock);
      char v78 = a5;
      id v79 = a1;
      swift_retain();
      swift_release();
      [v75 presentViewController:v79 animated:v78 & 1 completion:v77];
      _Block_release(v77);
    }
    else
    {
      a6();
    }
    return;
  }
  id v20 = (void *)v19;
  swift_unknownObjectWeakAssign();
  if ((v7 & 1) == 0) {
    sub_10007549C(1);
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v8;
  *(void *)(v21 + 24) = a1;
  *(unsigned char *)(v21 + 32) = a2 & 1;
  *(unsigned char *)(v21 + 33) = a3 & 1;
  *(unsigned char *)(v21 + 34) = a5 & 1;
  *(void *)(v21 + 40) = a6;
  *(void *)(v21 + 48) = a7;
  swift_retain();
  id v22 = a1;
  swift_retain();
  id v23 = [v20 sheetPresentationController];
  if (v23)
  {
    id v24 = v23;
    [v23 setDelegate:0];
  }
  uint64_t v95 = sub_10007B2DC;
  BOOL v96 = (void *)v21;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v92 = 1107296256;
  uint64_t v93 = sub_10017D530;
  uint64_t v94 = &unk_1007984D8;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v20 dismissViewControllerAnimated:a5 & 1 completion:v25];
  _Block_release(v25);

  swift_release();
}

void sub_1000786DC(void (*a1)(void), uint64_t a2, void *a3)
{
  a1();
  UIAccessibilityNotifications v4 = UIAccessibilityLayoutChangedNotification;
  id v5 = [a3 view];
  UIAccessibilityPostNotification(v4, v5);
}

uint64_t sub_100078758(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) != 2)
  {
    uint64_t v3 = v1;
    char v4 = result;
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unsigned int v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "willPresentSuggestionPicker", v7, 2u);
      swift_slowDealloc();
    }

    id v8 = *(void **)(v3 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
    if (v8)
    {
      id v9 = v8;
      if ([v9 isActive]
        && ([v9 constant], double v11 = v10, sub_100074BA0(), v11 == -v12))
      {
      }
      else
      {
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        char v19 = 1;
        if (!Strong
          || (int v14 = Strong,
              unsigned __int8 v15 = [Strong isFirstResponder],
              v14,
              (v15 & 1) == 0))
        {
          uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();
          if (!v16
            || (char v17 = v16,
                unsigned __int8 v18 = [v16 isFirstResponder],
                v17,
                (v18 & 1) == 0))
          {
            char v19 = 0;
          }
        }
        sub_100075050(v19);
        id v20 = self;
        char v34 = (double (*)(double, double))sub_10007B828;
        uint64_t v35 = v3;
        os_log_type_t v30 = _NSConcreteStackBlock;
        uint64_t v31 = 1107296256;
        unint64_t v32 = sub_10017D530;
        char v33 = &unk_100798410;
        uint64_t v21 = _Block_copy(&v30);
        swift_retain_n();
        swift_release();
        char v34 = (double (*)(double, double))sub_10007B830;
        uint64_t v35 = v3;
        os_log_type_t v30 = _NSConcreteStackBlock;
        uint64_t v31 = 1107296256;
        unint64_t v32 = sub_1001C7318;
        char v33 = &unk_100798438;
        id v22 = _Block_copy(&v30);
        swift_retain();
        swift_release();
        [v20 animateWithDuration:0 delay:v21 options:v22 animations:0.2 completion:0.0];
        _Block_release(v22);
        _Block_release(v21);

        swift_release_n();
      }
    }
    *(unsigned char *)(v3 + v2) = 2;
    id v23 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v23)
    {
      id v24 = v23;
      [v23 becomeFirstResponder];
    }
    uint64_t v25 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v25)
    {
      id v26 = v25;
      id v27 = [v25 sheetPresentationController];
      if (v27)
      {
        id v28 = v27;
        [v27 setDelegate:0];
      }
      char v34 = AudioRecordingActivityState.hash(into:);
      uint64_t v35 = 0;
      os_log_type_t v30 = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      unint64_t v32 = sub_10017D530;
      char v33 = &unk_1007983E8;
      uint64_t v29 = _Block_copy(&v30);
      swift_release();
      [v26 dismissViewControllerAnimated:v4 & 1 completion:v29];
      _Block_release(v29);
    }
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

void sub_100078B50(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (v1)
  {
    uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
    if (v2)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 setActive:0];
      [v4 setActive:1];
      sub_100074BA0();
      [v4 setConstant:-2.0 - v5];
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v7 = Strong;
    id v8 = [Strong view];

    if (v8)
    {
      [v8 layoutIfNeeded];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100078C70(char a1, uint64_t a2)
{
  if ((a1 & 1) != 0 && (*(unsigned char *)(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) & 0xFE) == 2)
  {
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      id v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "pickerDidPresent", v4, 2u);
      swift_slowDealloc();
    }

    sub_100075270();
  }
}

void sub_100078D34(char a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
  sub_10007549C(a1);
  if (v4 == 2)
  {
    double v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unsigned int v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "dismissPicker - Dismissing suggestion sheet.", v7, 2u);
      swift_slowDealloc();
    }

    id v8 = *(void (**)(void))(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
    swift_retain();
    v8(a1 & 1);
    swift_release();
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v10 = Strong;
      double v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        id v13 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)id v13 = 136315138;
        swift_getObjectType();
        uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
        unsigned __int8 v15 = NSStringFromClass(ObjCClassFromMetadata);
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v18 = v17;

        sub_10011EA98(v16, v18, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "dismissPicker - Dismissing %s.", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      swift_unknownObjectWeakAssign();
      id v19 = [v10 sheetPresentationController];
      if (v19)
      {
        id v20 = v19;
        [v19 setDelegate:0];
      }
      aBlock[4] = (uint64_t)AudioRecordingActivityState.hash(into:);
      aBlock[5] = 0;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10017D530;
      aBlock[3] = (uint64_t)&unk_100798280;
      uint64_t v21 = _Block_copy(aBlock);
      swift_release();
      [v10 dismissViewControllerAnimated:a1 & 1 completion:v21];
      _Block_release(v21);
    }
  }
}

void sub_1000790A4(char a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v4 = v3;
  int v8 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
  sub_10007549C(a1);
  if (v8 == 2)
  {
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      double v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "dismissPicker - Dismissing suggestion sheet.", v11, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v12 = *(void (**)(void))(v4 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
    swift_retain();
    v12(a1 & 1);
    uint64_t Strong = (void *)swift_release();
    goto LABEL_8;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_8:
    a2(Strong);
    return;
  }
  id v14 = Strong;
  unsigned __int8 v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v17 = 136315138;
    char buf = v17;
    swift_getObjectType();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    id v19 = a2;
    id v20 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    a2 = v19;
    sub_10011EA98(v21, v23, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "dismissPicker - Dismissing %s.", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_unknownObjectWeakAssign();
  id v24 = [v14 sheetPresentationController];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 setDelegate:0];
  }
  aBlock[4] = (uint64_t)a2;
  aBlock[5] = a3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10017D530;
  aBlock[3] = (uint64_t)&unk_1007983C0;
  id v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v14 dismissViewControllerAnimated:a1 & 1 completion:v26];
  _Block_release(v26);
}

uint64_t sub_100079410()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_100079508()
{
  sub_100079410();

  return swift_deallocClassInstance();
}

uint64_t sub_100079560()
{
  return type metadata accessor for CanvasLayoutCoordinator();
}

uint64_t type metadata accessor for CanvasLayoutCoordinator()
{
  uint64_t result = qword_1007FB270;
  if (!qword_1007FB270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000795B4()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100079694()
{
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator____lazy_storage___pickerPresentationHandler) = 0;
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
  *uint64_t v3 = AudioRecordingActivityState.hash(into:);
  v3[1] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_lastReportedKeyboardHeight) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) = 0;
  return v0;
}

void sub_10007981C()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong transitionCoordinator];

    if (v4)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) == 3)
      {
        double v5 = Logger.logObject.getter();
        os_log_type_t v6 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v5, v6))
        {
          unsigned int v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned int v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, v6, "pickerWillPresent - Animating bottom constraint to picker constant.", v7, 2u);
          swift_slowDealloc();
        }

        uint64_t v8 = swift_allocObject();
        swift_weakInit();
        os_log_type_t v16 = sub_10007B818;
        uint64_t v17 = v8;
        os_log_type_t v12 = _NSConcreteStackBlock;
        uint64_t v13 = 1107296256;
        id v14 = sub_1005C49E0;
        unsigned __int8 v15 = &unk_100798370;
        id v9 = _Block_copy(&v12);
        swift_release();
        uint64_t v10 = swift_allocObject();
        swift_weakInit();
        os_log_type_t v16 = sub_10007B820;
        uint64_t v17 = v10;
        os_log_type_t v12 = _NSConcreteStackBlock;
        uint64_t v13 = 1107296256;
        id v14 = sub_1005C49E0;
        unsigned __int8 v15 = &unk_100798398;
        double v11 = _Block_copy(&v12);
        swift_release();
        [v4 animateAlongsideTransition:v9 completion:v11];
        _Block_release(v11);
        _Block_release(v9);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_100079A90()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void **)(Strong + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
    if (v1
      && (id v2 = *(void **)(Strong + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint)) != 0)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 setActive:0];
      [v4 setActive:1];
      sub_100074BA0();
      [v4 setConstant:-2.0 - v5];
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    os_log_type_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (v6)
    {
      id v7 = [v6 view];

      if (v7)
      {
        [v7 layoutIfNeeded];
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_100079BF8(void *a1)
{
  uint64_t result = (uint64_t)[a1 isCancelled];
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      if ((*(unsigned char *)(result + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) & 0xFE) == 2)
      {
        id v2 = Logger.logObject.getter();
        os_log_type_t v3 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v2, v3))
        {
          id v4 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v4 = 0;
          _os_log_impl((void *)&_mh_execute_header, v2, v3, "pickerDidPresent", v4, 2u);
          swift_slowDealloc();
        }

        sub_100075270();
      }
      return swift_release();
    }
  }
  return result;
}

void sub_100079D00()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v3 = Strong;
    id v4 = [Strong transitionCoordinator];

    if (v4)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) == 3)
      {
        double v5 = Logger.logObject.getter();
        os_log_type_t v6 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v5, v6))
        {
          id v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, v6, "pickerDismissGestureStarted", v7, 2u);
          swift_slowDealloc();
        }

        *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) = 1;
        unsigned __int8 v15 = (uint64_t (*)(void *))AudioRecordingActivityState.hash(into:);
        uint64_t v16 = 0;
        double v11 = _NSConcreteStackBlock;
        uint64_t v12 = 1107296256;
        uint64_t v13 = sub_1005C49E0;
        id v14 = &unk_1007982F8;
        uint64_t v8 = _Block_copy(&v11);
        uint64_t v9 = swift_allocObject();
        swift_weakInit();
        unsigned __int8 v15 = sub_10007B810;
        uint64_t v16 = v9;
        double v11 = _NSConcreteStackBlock;
        uint64_t v12 = 1107296256;
        uint64_t v13 = sub_1005C49E0;
        id v14 = &unk_100798348;
        uint64_t v10 = _Block_copy(&v11);
        swift_release();
        [v4 animateAlongsideTransition:v8 completion:v10];
        _Block_release(v10);
        _Block_release(v8);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_100079F58(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100079FC8([a1 isCancelled] ^ 1);
    return swift_release();
  }
  return result;
}

void sub_100079FC8(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) == 3)
  {
    uint64_t v3 = v1;
    uint64_t v4 = OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_isTrackingPickerDismissGesture;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) == 1)
    {
      os_log_type_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 67109120;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "pickerDismissGestureEnded didDismiss=%{BOOL}d", v8, 8u);
        swift_slowDealloc();
      }

      *(unsigned char *)(v3 + v4) = 0;
      if (a1)
      {
        *(unsigned char *)(v3 + v2) = 0;
        swift_unknownObjectWeakAssign();
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v10 = Strong;
          id v11 = [Strong items];
          if (v11)
          {
            uint64_t v12 = v11;
            sub_10001B284(0, (unint64_t *)&qword_100803F80);
            unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v13 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v14) {
                goto LABEL_10;
              }
            }
            else
            {
              uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v14)
              {
LABEL_10:
                unint64_t v22 = v10;
                if (v14 < 1)
                {
                  __break(1u);
                  return;
                }
                for (uint64_t i = 0; i != v14; ++i)
                {
                  if ((v13 & 0xC000000000000001) != 0) {
                    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v17 = *(id *)(v13 + 8 * i + 32);
                  }
                  uint64_t v16 = v17;
                  id v18 = [v17 customView:v22];
                  if (v18)
                  {
                    id v19 = v18;
                    self;
                    uint64_t v20 = swift_dynamicCastObjCClass();
                    if (v20)
                    {
                      uint64_t v21 = (void *)v20;
                      id v19 = v19;
                      [v21 setSelected:0];
                      if ([v21 tag] == (id)9) {
                        [v21 setEnabled:0];
                      }

                      uint64_t v16 = v19;
                    }

                    uint64_t v16 = v19;
                  }
                }
                goto LABEL_26;
              }
            }

LABEL_26:
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
LABEL_27:
        sub_100075050(0);
        sub_100075270();
      }
    }
  }
}

void sub_10007A2B8(double a1, double a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = Strong;
    id v6 = [Strong presentingViewController];

    if (v6)
    {
      id v7 = [v6 view];

      if (!v7)
      {
        __break(1u);
        return;
      }
      id v20 = [v7 window];

      uint64_t v8 = v20;
      if (v20)
      {
        uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_toolbarBottomConstraint);
        if (!v9
          || *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl) != 3
          || *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) != 1
          || (~*(void *)&a2 & 0x7FF0000000000000) == 0 && (*(void *)&a2 & 0xFFFFFFFFFFFFFLL) != 0)
        {
LABEL_17:

          return;
        }
        id v19 = v9;
        [v20 frame];
        double v11 = v10 - a2;
        sub_100074BA0();
        if (v12 < v11) {
          double v11 = v12;
        }
        [v20 safeAreaInsets];
        if (v11 > v13) {
          double v14 = v11;
        }
        else {
          double v14 = v13;
        }
        [v19 constant];
        if (v15 == -v14)
        {

          uint64_t v8 = v19;
          goto LABEL_17;
        }
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v16, v17))
        {
          id v18 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v18 = 134217984;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "pickerFrameChanged %f", v18, 0xCu);
          swift_slowDealloc();
        }

        [v19 setConstant:-v14];
      }
    }
  }
}

uint64_t sub_10007A620(uint64_t a1, void *a2)
{
  swift_unownedRetainStrong();
  [a2 _currentPresentedViewFrame];
  sub_10007A2B8(v3, v4);
  return swift_release();
}

id sub_10007A70C(void *a1)
{
  id result = [a1 selectedDetentIdentifier];
  if (result)
  {
    uint64_t v2 = result;
    swift_unownedRetainStrong();
    if (swift_unknownObjectWeakLoadStrong()
      && (sub_10001B284(0, (unint64_t *)&qword_1008068F0),
          sub_100010218(&qword_1007FB610),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v12 + 1))
      {
        uint64_t v3 = *sub_10002E0BC(&v11, *((uint64_t *)&v12 + 1));
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v6 = v5;
        if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v9 & 1) == 0)
          {
            uint64_t v10 = OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_searchBar;
            if ([*(id *)(v3 + OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_searchBar) isFirstResponder])[*(id *)(v3 + v10) resignFirstResponder]; {
          }
            }
        }
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v11);
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v13 = 0;
      long long v11 = 0u;
      long long v12 = 0u;
    }
    sub_10001457C((uint64_t)&v11, (uint64_t *)&unk_1007FB600);
LABEL_14:

    return (id)swift_release();
  }
  return result;
}

id sub_10007A94C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PickerPresentationHandler();
  return [super dealloc];
}

uint64_t type metadata accessor for PickerPresentationHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CanvasLayoutCoordinator.ControlType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007AA84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasLayoutCoordinator.ControlType()
{
  return &type metadata for CanvasLayoutCoordinator.ControlType;
}

unint64_t sub_10007AAC0()
{
  unint64_t result = qword_1007FB5E8;
  if (!qword_1007FB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FB5E8);
  }
  return result;
}

void sub_10007AB14(char a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  int v9 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
  id v10 = a4;
  sub_10007549C(a1);
  if (v9 == 2)
  {
    long long v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "dismissPicker - Dismissing suggestion sheet.", v13, 2u);
      swift_slowDealloc();
    }

    double v14 = *(void (**)(void))(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
    swift_retain();
    v14(a1 & 1);
    swift_release();
    goto LABEL_8;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_8:
    sub_1002296BC(a3 & 1, v10);
    swift_release();
    return;
  }
  id v16 = Strong;
  os_log_type_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    char buf = v19;
    swift_getObjectType();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v21 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;

    sub_10011EA98(v22, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "dismissPicker - Dismissing %s.", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_unknownObjectWeakAssign();
  id v25 = [v16 sheetPresentationController];
  if (v25)
  {
    id v26 = v25;
    [v25 setDelegate:0];
  }
  aBlock[4] = (uint64_t)sub_10007B318;
  aBlock[5] = v8;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10017D530;
  aBlock[3] = (uint64_t)&unk_100798258;
  id v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 dismissViewControllerAnimated:a1 & 1 completion:v27];
  _Block_release(v27);
  swift_release();
}

unint64_t sub_10007AEE8(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

void sub_10007AEF8(char a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
  swift_retain();
  sub_10007549C(a1);
  if (v6 == 2)
  {
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      int v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "dismissPicker - Dismissing suggestion sheet.", v9, 2u);
      swift_slowDealloc();
    }

    id v10 = *(void (**)(void))(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
    swift_retain();
    v10(a1 & 1);
    swift_release();
    goto LABEL_8;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_8:
    sub_1002270D0();
    swift_release();
    return;
  }
  id v12 = Strong;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)double v15 = 136315138;
    char buf = v15;
    swift_getObjectType();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    os_log_type_t v17 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    sub_10011EA98(v18, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "dismissPicker - Dismissing %s.", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_unknownObjectWeakAssign();
  id v21 = [v12 sheetPresentationController];
  if (v21)
  {
    uint64_t v22 = v21;
    [v21 setDelegate:0];
  }
  aBlock[4] = (uint64_t)sub_10007B2A4;
  aBlock[5] = a3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10017D530;
  aBlock[3] = (uint64_t)&unk_100798168;
  unint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v12 dismissViewControllerAnimated:a1 & 1 completion:v23];
  _Block_release(v23);
  swift_release();
}

void sub_10007B2A4()
{
}

uint64_t sub_10007B2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007B2BC()
{
  return swift_release();
}

void sub_10007B2C8()
{
  sub_1000786DC(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10007B2E0()
{
  return swift_deallocObject();
}

void sub_10007B318()
{
  sub_1002296BC(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10007B324(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  int v7 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
  id v8 = a3;
  sub_10007549C(a1);
  if (v7 == 2)
  {
    int v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      long long v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "dismissPicker - Dismissing suggestion sheet.", v11, 2u);
      swift_slowDealloc();
    }

    id v12 = *(void (**)(void))(a2 + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_dismissSuggestionSheet);
    swift_retain();
    v12(a1 & 1);
    swift_release();
    goto LABEL_8;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_8:
    unint64_t v23 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v23)
    {
      id v28 = v23;
      if (![v23 isFirstResponder]
        && ([v28 canBecomeFirstResponder] & 1) != 0)
      {
        [v28 becomeFirstResponder];
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    return;
  }
  id v14 = Strong;
  double v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v17 = 136315138;
    char buf = v17;
    swift_getObjectType();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    unint64_t v19 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    sub_10011EA98(v20, v22, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "dismissPicker - Dismissing %s.", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_unknownObjectWeakAssign();
  id v24 = [v14 sheetPresentationController];
  if (v24)
  {
    id v25 = v24;
    [v24 setDelegate:0];
  }
  aBlock[4] = (uint64_t)sub_10007B7B4;
  aBlock[5] = v6;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10017D530;
  aBlock[3] = (uint64_t)&unk_1007982D0;
  id v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v14 dismissViewControllerAnimated:a1 & 1 completion:v26];
  _Block_release(v26);
  swift_release();
}

uint64_t sub_10007B77C()
{
  return swift_deallocObject();
}

void sub_10007B7B4()
{
}

uint64_t sub_10007B7BC()
{
  return sub_10007A620(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10007B7D8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10007B810(void *a1)
{
  return sub_100079F58(a1);
}

void sub_10007B818()
{
}

uint64_t sub_10007B820(void *a1)
{
  return sub_100079BF8(a1);
}

void sub_10007B828()
{
  sub_100078B50(v0);
}

void sub_10007B830(char a1)
{
  sub_100078C70(a1, v1);
}

uint64_t sub_10007B83C()
{
  swift_release();

  return swift_deallocObject();
}

double sub_10007B87C(void *a1)
{
  [a1 maximumDetentValue];
  double v3 = v2;
  sub_100074EA8(a1);
  return v3 * v4;
}

uint64_t sub_10007B8CC()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_10007B914()
{
  sub_100077C8C(*(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned char *)(v0 + 33), 0, *(unsigned char *)(v0 + 34), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

void sub_10007B950()
{
  sub_100076A50(v0);
}

uint64_t sub_10007B958()
{
  return swift_deallocObject();
}

void sub_10007B968()
{
  sub_10007582C(v0);
}

void sub_10007B970(char a1)
{
  if (a1) {
    sub_100075270();
  }
}

uint64_t sub_10007BA28()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FB6E0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007FB6E0);
  if (qword_1007F7D68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC38);
  double v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_10007BAF0()
{
  _s14DataAggregatorCMa(0);
  swift_allocObject();
  unint64_t result = sub_10007BB30();
  qword_10083CEC0 = (uint64_t)result;
  return result;
}

void *sub_10007BB30()
{
  uint64_t v1 = v0;
  uint64_t v30 = *v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FB8B8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1007FB8C0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v5;
  char v33 = v4;
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    double v15 = (void *)sub_1000F5838((unint64_t)&_swiftEmptyArrayStorage);
  }
  else {
    double v15 = &_swiftEmptySetSingleton;
  }
  v1[2] = v15;
  v1[3] = 0;
  *((unsigned char *)v1 + 32) = 0;
  os_log_type_t v16 = (char *)v1 + OBJC_IVAR____TtCC7Journal10Journaling14DataAggregator__recentPlaces;
  char v34 = &_swiftEmptyArrayStorage;
  sub_100010218(&qword_1007FB748);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v14, v11);
  os_log_type_t v17 = (char *)v1 + OBJC_IVAR____TtCC7Journal10Journaling14DataAggregator__assetTypeCount;
  char v34 = &_swiftEmptyDictionarySingleton;
  sub_100010218((uint64_t *)&unk_1007FB758);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  id v18 = [self defaultCenter];
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v19 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  uint64_t v20 = v29;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v30;
  *(void *)(v21 + 16) = v1;
  *(void *)(v21 + 24) = v22;
  sub_100080288(&qword_1007FB8C8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  swift_retain();
  uint64_t v23 = v32;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v23);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v24 = type metadata accessor for TaskPriority();
  uint64_t v25 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v33, 1, 1, v24);
  type metadata accessor for MainActor();
  uint64_t v26 = static MainActor.shared.getter();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = &protocol witness table for MainActor;
  sub_100328A60(v25, (uint64_t)&unk_1007FB8D8, v27);
  swift_release();
  return v1;
}

void sub_10007C060(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082180();
  if (v6)
  {
    if (*(void *)(a2 + 24))
    {
      *(unsigned char *)(a2 + 32) = 1;
    }
    else
    {
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
      type metadata accessor for MainActor();
      uint64_t v8 = static MainActor.shared.getter();
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      *(void *)(v9 + 24) = &protocol witness table for MainActor;
      sub_100328A60((uint64_t)v5, (uint64_t)&unk_1007FB8F8, v9);
      swift_release();
      os_log_type_t v10 = self;
      aBlock[4] = sub_100082BEC;
      aBlock[5] = a2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10007453C;
      aBlock[3] = &unk_100798730;
      uint64_t v11 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v12 = [v10 scheduledTimerWithTimeInterval:0 repeats:v11 block:10.0];
      _Block_release(v11);
      uint64_t v13 = *(void **)(a2 + 24);
      *(void *)(a2 + 24) = v12;
    }
  }
}

uint64_t sub_10007C258()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_10007C2EC, v2, v1);
}

uint64_t sub_10007C2EC()
{
  if (qword_1007F6958 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_10007C3B0;
  return sub_10007C4D0();
}

uint64_t sub_10007C3B0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 24);
  return _swift_task_switch(sub_100082D50, v3, v2);
}

uint64_t sub_10007C4D0()
{
  v1[10] = v0;
  v1[11] = *v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[15] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[16] = v4;
  v1[17] = v3;
  return _swift_task_switch(sub_10007C5EC, v4, v3);
}

uint64_t sub_10007C5EC()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D2F8;
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v30 = *(void *)(v0 + 112);
    uint64_t v27 = *(void *)(v0 + 88);
    uint64_t v28 = *(void *)(v0 + 104);
    uint64_t v26 = swift_allocObject();
    *(void *)(v0 + 144) = v26;
    *(void *)(v26 + 16) = 0;
    uint64_t v2 = swift_allocObject();
    *(void *)(v0 + 152) = v2;
    *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
    uint64_t v3 = swift_allocObject();
    *(void *)(v0 + 160) = v3;
    *(void *)(v3 + 16) = &_swiftEmptyDictionarySingleton;
    *(CFAbsoluteTime *)(v0 + 168) = CFAbsoluteTimeGetCurrent();
    id v25 = [*(id *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
    *(void *)(v0 + 176) = v25;
    id v4 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 initWithEntityName:v5];
    *(void *)(v0 + 184) = v6;

    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
    sub_10001B284(0, (unint64_t *)&qword_100800A30);
    *(void *)(v7 + 32) = NSPredicate.init(format:_:)();
    *(void *)(v7 + 40) = NSPredicate.init(format:_:)();
    specialized Array._endMutation()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v9 = [self andPredicateWithSubpredicates:isa];

    [v6 setPredicate:v9];
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1006D6D00;
    id v11 = objc_allocWithZone((Class)NSSortDescriptor);
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v11 initWithKey:v12 ascending:0];

    *(void *)(v10 + 32) = v13;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_10080F990);
    Class v14 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 setSortDescriptors:v14];

    double v15 = (void *)swift_allocObject();
    *(void *)(v0 + 192) = v15;
    v15[2] = v25;
    v15[3] = v6;
    v15[4] = v3;
    v15[5] = v2;
    v15[6] = v26;
    v15[7] = v27;
    (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v30, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v29);
    v25;
    id v16 = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    os_log_type_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v17;
    *os_log_type_t v17 = v0;
    v17[1] = sub_10007CB70;
    uint64_t v18 = *(void *)(v0 + 112);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v17, v18, sub_100082028, v15, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    if (qword_1007F6950 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100026A54(v19, (uint64_t)qword_1007FB6E0);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Returning early from DataAggregator.updateData() because isProtectedDataAvailable == false. Most likely because the device is locked.", v22, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_10007CB70()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v5 = *(void *)(*v1 + 96);
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 136);
  uint64_t v7 = *(void *)(v2 + 128);
  return _swift_task_switch(sub_10007CD18, v7, v6);
}

uint64_t sub_10007CD18()
{
  NSString v12 = v0;
  uint64_t v1 = *((void *)v0 + 26);
  uint64_t v2 = *((void *)v0 + 19);
  swift_release();
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100081644(v3);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *((void *)v0 + 8) = v4;
  swift_retain();
  static Published.subscript.setter();
  swift_beginAccess();
  id v11 = *(void **)(v2 + 16);
  swift_bridgeObjectRetain_n();
  sub_1000803CC(&v11);
  if (v1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v6 = (void *)*((void *)v0 + 22);
    uint64_t v7 = (void *)*((void *)v0 + 23);
    double v8 = v0[21];
    swift_bridgeObjectRelease();
    uint64_t v9 = v11;
    swift_getKeyPath();
    swift_getKeyPath();
    *((void *)v0 + 9) = v9;
    swift_retain();
    static Published.subscript.setter();

    sub_10007E6F0(v8);
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))*((void *)v0 + 1);
    return v10();
  }
}

uint64_t sub_10007CF3C(uint64_t a1, uint64_t a2)
{
  return sub_1002D7240((uint64_t)sub_100082C0C, a2);
}

void sub_10007CFAC(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = 0;

  if (*(unsigned char *)(a1 + 32) == 1)
  {
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    type metadata accessor for MainActor();
    uint64_t v7 = static MainActor.shared.getter();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = &protocol witness table for MainActor;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_1007FB908, v8);
    swift_release();
  }
}

uint64_t sub_10007D0DC()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_10007D170, v2, v1);
}

uint64_t sub_10007D170()
{
  if (qword_1007F6958 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_10007D234;
  return sub_10007C4D0();
}

uint64_t sub_10007D234()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 24);
  return _swift_task_switch(sub_10007D354, v3, v2);
}

uint64_t sub_10007D354()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007D3B4()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14DataAggregator__recentPlaces;
  uint64_t v3 = sub_100010218(&qword_1007FB8C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14DataAggregator__assetTypeCount;
  uint64_t v5 = sub_100010218(&qword_1007FB8B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocClassInstance();
}

uint64_t sub_10007D4E8()
{
  return _s14DataAggregatorCMa(0);
}

uint64_t _s14DataAggregatorCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1007FB730);
}

void sub_10007D510()
{
  sub_10007D61C(319, &qword_1007FB740, &qword_1007FB748);
  if (v0 <= 0x3F)
  {
    sub_10007D61C(319, &qword_1007FB750, (uint64_t *)&unk_1007FB758);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10007D61C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100014440(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_10007D66C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    NSString v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    __dst = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    Class v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    id v15 = v12;
    if (v14(v13, 1, v7))
    {
      uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)__dst, (uint64_t *)v13, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (uint64_t *)((char *)a1 + v18);
    os_log_type_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (uint64_t *)((char *)a1 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[9];
    uint64_t v27 = a3[10];
    uint64_t v28 = (uint64_t *)((char *)a1 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = *(void **)((char *)a2 + v27);
    *(uint64_t *)((char *)a1 + v27) = (uint64_t)v31;
    uint64_t v32 = a3[11];
    uint64_t v33 = a3[12];
    char v34 = *(void **)((char *)a2 + v32);
    *(uint64_t *)((char *)a1 + v32) = (uint64_t)v34;
    uint64_t v35 = *(void **)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + v33) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = v31;
    id v37 = v34;
    id v38 = v35;
  }
  return a1;
}

void sub_10007D89C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);

  uint64_t v7 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v8 = *(void **)(a1 + a2[12]);
}

char *sub_10007D9E8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  __dst = &a1[v10];
  NSString v12 = &a2[v10];
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  id v14 = v11;
  if (v13(v12, 1, v6))
  {
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v8(__dst, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  os_log_type_t v21 = &a1[v17];
  uint64_t v22 = &a2[v17];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)os_log_type_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = *(void **)&a2[v25];
  *(void *)&a1[v25] = v29;
  uint64_t v30 = a3[11];
  uint64_t v31 = a3[12];
  uint64_t v32 = *(void **)&a2[v30];
  *(void *)&a1[v30] = v32;
  uint64_t v33 = *(void **)&a2[v31];
  *(void *)&a1[v31] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v29;
  id v35 = v32;
  id v36 = v33;
  return a1;
}

uint64_t sub_10007DBC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  id v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v41(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)(a2 + v8);
  uint64_t v10 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  id v11 = v9;

  uint64_t v12 = a3[6];
  uint64_t v13 = (const void *)(a2 + v12);
  id v14 = *(uint64_t (**)(void))(v7 + 48);
  id v42 = (void *)(a1 + v12);
  int v15 = v14();
  int v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v14)(v13, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v42, v13, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v42, 0, 1, v6);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8) + 64);
    uint64_t v18 = v42;
  }
  else
  {
    if (!v16)
    {
      v41((uint64_t)v42, (uint64_t)v13, v6);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v42, v6);
    size_t v17 = *(void *)(*(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8) + 64);
    uint64_t v18 = v42;
  }
  memcpy(v18, v13, v17);
LABEL_9:
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  os_log_type_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = *(void **)(a1 + v28);
  uint64_t v30 = *(void **)(a2 + v28);
  *(void *)(a1 + v28) = v30;
  id v31 = v30;

  uint64_t v32 = a3[11];
  uint64_t v33 = *(void **)(a1 + v32);
  id v34 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v34;
  id v35 = v34;

  uint64_t v36 = a3[12];
  id v37 = *(void **)(a1 + v36);
  id v38 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v38;
  id v39 = v38;

  return a1;
}

char *sub_10007DE9C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  return a1;
}

uint64_t sub_10007E030(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  id v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v39(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  uint64_t v10 = a3[6];
  id v11 = (const void *)(a2 + v10);
  uint64_t v12 = *(uint64_t (**)(void))(v7 + 48);
  uint64_t v40 = (void *)(a1 + v10);
  int v13 = v12();
  int v14 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v12)(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v40, v11, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v40, 0, 1, v6);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8) + 64);
    int v16 = v40;
  }
  else
  {
    if (!v14)
    {
      v39((uint64_t)v40, (uint64_t)v11, v6);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v40, v6);
    size_t v15 = *(void *)(*(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8) + 64);
    int v16 = v40;
  }
  memcpy(v16, v11, v15);
LABEL_9:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[10];
  uint64_t v33 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);

  uint64_t v34 = a3[11];
  id v35 = *(void **)(a1 + v34);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);

  uint64_t v36 = a3[12];
  id v37 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);

  return a1;
}

uint64_t sub_10007E2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007E2D8);
}

uint64_t sub_10007E2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10007E408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007E41C);
}

uint64_t sub_10007E41C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t _s14DataAggregatorC5PlaceVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1007FB850);
}

void sub_10007E56C()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100033618();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10007E65C()
{
  return sub_10007E684();
}

uint64_t sub_10007E670()
{
  return sub_10007E684();
}

uint64_t sub_10007E684()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_10007E6F0(double a1)
{
  _StringGuts.grow(_:)(87);
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  v2._uint64_t countAndFlagsBits = 0xD000000000000025;
  v2._object = (void *)0x8000000100689A40;
  String.append(_:)(v2);
  swift_beginAccess();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x2C73746573736120;
  v4._object = (void *)0xE900000000000020;
  String.append(_:)(v4);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x8000000100689A70;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v6);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6280;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(void *)(v7 + 56) = &type metadata for Double;
  *(void *)(v7 + 64) = &protocol witness table for Double;
  *(CFAbsoluteTime *)(v7 + 32) = Current - a1;
  v9._uint64_t countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x73646E6F63657320;
  v10._object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  uint64_t v12 = v17;
  unint64_t v11 = v18;
  if (qword_1007F6950 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100026A54(v13, (uint64_t)qword_1007FB6E0);
  swift_bridgeObjectRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    int v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)int v16 = 136315138;
    swift_bridgeObjectRetain();
    sub_10011EA98(v12, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_10007EA78(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v161 = a5;
  uint64_t v167 = a4;
  uint64_t v170 = a3;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v157 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v156 = (char *)&v133 - v8;
  uint64_t v160 = type metadata accessor for Date();
  unint64_t v166 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v155 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v133 - v11;
  uint64_t v13 = _s14DataAggregatorC5PlaceVMa(0);
  uint64_t v159 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  os_log_type_t v15 = (char *)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v133 - v17;
  uint64_t v19 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v23 = v171;
  unint64_t v24 = NSManagedObjectContext.fetch<A>(_:)();
  if (v23)
  {
    if (qword_1007F6950 == -1) {
      goto LABEL_3;
    }
    goto LABEL_87;
  }
  unint64_t v31 = v166;
  uint64_t v165 = (uint64_t *)v22;
  uint64_t v151 = v20;
  uint64_t v164 = (int *)v19;
  uint64_t v154 = v18;
  uint64_t v168 = v15;
  uint64_t v169 = v13;
  uint64_t v153 = v12;
  uint64_t v32 = v161;
  unint64_t v33 = v24;
  unint64_t v152 = v24 >> 62;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v34 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v35 = v31;
  uint64_t v36 = v167;
  if (v34)
  {
    uint64_t v148 = 0;
    uint64_t v163 = v170 + 16;
    uint64_t v37 = v167 + 16;
    unint64_t v171 = v33 & 0xC000000000000001;
    swift_beginAccess();
    unint64_t v38 = 0;
    uint64_t v167 = v33 & 0xFFFFFFFFFFFFFF8;
    unint64_t v166 = v33 + 32;
    uint64_t v150 = (void (**)(void))(v35 + 32);
    uint64_t v147 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    Swift::Int v138 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    *(void *)&long long v39 = 138412290;
    long long v139 = v39;
    uint64_t v162 = (unint64_t *)(v36 + 16);
    uint64_t v149 = v34;
    while (1)
    {
      if (v171)
      {
        id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v38 >= *(void *)(v167 + 16)) {
          goto LABEL_85;
        }
        id v40 = *(id *)(v166 + 8 * v38);
      }
      id v41 = v40;
      if (__OFADD__(v38++, 1))
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        swift_once();
LABEL_3:
        uint64_t v25 = type metadata accessor for Logger();
        sub_100026A54(v25, (uint64_t)qword_1007FB6E0);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v29 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 138412290;
          swift_errorRetain();
          uint64_t v30 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v174[3] = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v29 = v30;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "DataAggregator updateRecentPlaces fetch error: %@", v28, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        return;
      }
      id v43 = [v40 assetType];
      if (!v43) {
        goto LABEL_32;
      }
      uint64_t v44 = v43;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v45 = sub_100044D84();
      int v46 = v45;
      uint64_t v47 = v45;
      id v48 = [v41 entry];
      if (v48)
      {
        unint64_t v49 = v48;
        id v50 = [v48 objectID];

        if (v50)
        {
          uint64_t v51 = (uint64_t *)v163;
          swift_beginAccess();
          uint64_t v52 = *v51;
          if (*(void *)(v52 + 16) && (unint64_t v53 = sub_10001B8AC(v47), (v54 & 1) != 0))
          {
            uint64_t v55 = *(void **)(*(void *)(v52 + 56) + 8 * v53);
            swift_endAccess();
            uint64_t v173 = v55;
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_endAccess();
            uint64_t v173 = &_swiftEmptySetSingleton;
          }
          id v56 = v50;
          sub_10054C390(v174, v56);

          uint64_t v57 = (uint64_t)v173;
          id v58 = (uint64_t *)v163;
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v172 = *v58;
          *id v58 = 0x8000000000000000;
          sub_1005992B8(v57, v47, isUniquelyReferenced_nonNull_native);
          *id v58 = v172;
          swift_bridgeObjectRelease();
          swift_endAccess();

          uint64_t v37 = (uint64_t)v162;
        }
      }
      if (*(void *)(*(void *)v37 + 16) <= 0x13uLL)
      {
        switch(v46)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 16:
          case 17:
          case 18:
          case 19:
          case 20:
            char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v60 & 1) == 0) {
              goto LABEL_32;
            }
            break;
          case 8:
            swift_bridgeObjectRelease();
            break;
          default:
            goto LABEL_32;
        }
        id v61 = sub_10017E76C();
        _s16MultiPinMapAssetCMa();
        uint64_t v62 = swift_dynamicCastClass();
        if (v62)
        {
          if (!*(void *)(v62 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
          {
            id v122 = v61;
LABEL_70:
            if (qword_1007F6950 != -1) {
              swift_once();
            }
            uint64_t v123 = type metadata accessor for Logger();
            sub_100026A54(v123, (uint64_t)qword_1007FB6E0);
            id v124 = v41;
            uint64_t v125 = Logger.logObject.getter();
            os_log_type_t v126 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v125, v126))
            {
              uint64_t v127 = swift_slowAlloc();
              uint64_t v128 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v127 = v139;
              id v129 = [v124 objectID];
              *(void *)(v127 + 4) = v129;
              void *v128 = v129;

              _os_log_impl((void *)&_mh_execute_header, v125, v126, "DataAggregator multiPinMap object is missing visitsData. Skipping location. AssetMO.objectID: %@", (uint8_t *)v127, 0xCu);
              sub_100010218((uint64_t *)&unk_1007FC430);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            uint64_t v34 = v149;
            uint64_t v37 = (uint64_t)v162;
            goto LABEL_33;
          }
          id v134 = v61;
          swift_retain();
          uint64_t v63 = sub_100039114();
          swift_release();
          if (v63 == 1) {
            goto LABEL_70;
          }
          uint64_t v64 = swift_bridgeObjectRetain();
          sub_10003F810(v64);
          if (!v63) {
            goto LABEL_70;
          }
          uint64_t v65 = *(void *)(v63 + 16);
          uint64_t v66 = v151;
          uint64_t v37 = (uint64_t)v162;
          if (v65)
          {
            unint64_t v158 = v63 + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
            swift_beginAccess();
            swift_beginAccess();
            unint64_t v67 = 0;
            unint64_t v137 = v33;
            uint64_t v136 = v63;
            uint64_t v135 = v65;
            while (1)
            {
              if (v67 >= *(void *)(v63 + 16)) {
                goto LABEL_86;
              }
              uint64_t v68 = (uint64_t)v165;
              sub_1000820B8(v158 + *(void *)(v66 + 72) * v67, (uint64_t)v165, _s10VisitAssetC9VisitDataVMa);
              uint64_t v69 = v68 + v164[10];
              if (*(unsigned char *)(v69 + 8) & 1) != 0 || (uint64_t v70 = v68 + v164[11], (*(unsigned char *)(v70 + 8)))
              {
                sub_100082120(v68, _s10VisitAssetC9VisitDataVMa);
                goto LABEL_36;
              }
              uint64_t v170 = (char *)[objc_allocWithZone((Class)CLLocation) initWithLatitude:*(double *)v69 longitude:*(double *)v70];
              uint64_t v71 = *(void *)v37;
              uint64_t v72 = *(void *)(*(void *)v37 + 16);
              if (!v72) {
                break;
              }
              uint64_t v73 = v159;
              uint64_t v74 = v71
                  + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
              swift_bridgeObjectRetain();
              uint64_t v75 = *(void *)(v73 + 72);
              while (1)
              {
                uint64_t v76 = (uint64_t)v168;
                sub_1000820B8(v74, (uint64_t)v168, _s14DataAggregatorC5PlaceVMa);
                [*(id *)(v76 + *(int *)(v169 + 20)) distanceFromLocation:v170];
                double v78 = v77;
                sub_100082120(v76, _s14DataAggregatorC5PlaceVMa);
                if (v78 <= 10.0) {
                  break;
                }
                v74 += v75;
                if (!--v72)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_45;
                }
              }

              swift_bridgeObjectRelease();
LABEL_65:
              uint64_t v37 = (uint64_t)v162;
              unint64_t v119 = *(void *)(*v162 + 16);
              sub_100082120((uint64_t)v165, _s10VisitAssetC9VisitDataVMa);
              BOOL v120 = v119 > 0x13;
              unint64_t v33 = v137;
              uint64_t v66 = v151;
              uint64_t v63 = v136;
              uint64_t v65 = v135;
              if (v120)
              {

                id v131 = v134;
                swift_bridgeObjectRelease();
                goto LABEL_77;
              }
LABEL_36:
              if (++v67 == v65) {
                goto LABEL_76;
              }
            }
LABEL_45:
            id v79 = [v41 createdDate];
            if (v79)
            {
              BOOL v80 = v79;
              uint64_t v81 = v155;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              BOOL v82 = *v150;
              uint64_t v83 = (uint64_t)v156;
              uint64_t v84 = v160;
              ((void (*)(char *, char *, uint64_t))*v150)(v156, v81, v160);
              (*v147)(v83, 0, 1, v84);
              if ((*v138)(v83, 1, v84) != 1)
              {
                ((void (*)(char *, uint64_t, uint64_t))v82)(v153, v83, v160);
LABEL_51:
                uint64_t v85 = v165;
                uint64_t v86 = v157;
                sub_100045944((uint64_t)v165 + v164[7], v157);
                uint64_t v87 = v85[1];
                uint64_t v142 = *v85;
                uint64_t v88 = v85[5];
                uint64_t v144 = v85[4];
                uint64_t v89 = v85[3];
                uint64_t v146 = v85[2];
                uint64_t v145 = v89;
                swift_bridgeObjectRetain();
                uint64_t v143 = v87;
                swift_bridgeObjectRetain();
                uint64_t v90 = v88;
                swift_bridgeObjectRetain();
                id v91 = [v41 entry];
                if (v91)
                {
                  uint64_t v92 = v91;
                  id v140 = [v91 objectID];
                }
                else
                {
                  id v140 = 0;
                }
                uint64_t v93 = v164;
                uint64_t v94 = (uint64_t)v165;
                uint64_t v95 = (char *)v165 + v164[12];
                unint64_t v96 = *((void *)v95 + 1);
                if (v96 >> 60 == 15)
                {
                  uint64_t v141 = 0;
                }
                else
                {
                  uint64_t v97 = *(void *)v95;
                  sub_100040D64(*(void *)v95, *((void *)v95 + 1));
                  uint64_t v141 = sub_10003F8F4(v97, v96);
                  sub_100040DBC(v97, v96);
                  uint64_t v94 = (uint64_t)v165;
                  uint64_t v93 = v164;
                }
                uint64_t v98 = v94 + v93[13];
                unint64_t v99 = *(void *)(v98 + 8);
                if (v99 >> 60 == 15)
                {
                  uint64_t v100 = 0;
                }
                else
                {
                  uint64_t v101 = *(void *)v98;
                  sub_100040D64(*(void *)v98, *(void *)(v98 + 8));
                  uint64_t v100 = sub_10003F8E0(v101, v99);
                  sub_100040DBC(v101, v99);
                }
                uint64_t v102 = (uint64_t)v154;
                (*v150)();
                uint64_t v103 = (int *)v169;
                uint64_t v104 = v170;
                *(void *)(v102 + *(int *)(v169 + 20)) = v170;
                uint64_t v105 = v86;
                uint64_t v106 = v103;
                sub_100062DA4(v105, v102 + v103[6]);
                unint64_t v107 = (void *)(v102 + v106[7]);
                uint64_t v108 = v143;
                *unint64_t v107 = v142;
                v107[1] = v108;
                uint64_t v109 = (void *)(v102 + v106[8]);
                *uint64_t v109 = v144;
                v109[1] = v90;
                uint64_t v110 = (void *)(v102 + v106[9]);
                uint64_t v111 = v145;
                void *v110 = v146;
                v110[1] = v111;
                *(void *)(v102 + v106[10]) = v140;
                *(void *)(v102 + v106[11]) = v141;
                *(void *)(v102 + v106[12]) = v100;
                uint64_t v112 = v162;
                swift_beginAccess();
                unint64_t v113 = *v112;
                unint64_t v114 = v104;
                char v115 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v112 = v113;
                if ((v115 & 1) == 0)
                {
                  unint64_t v113 = sub_1002A5F2C(0, *(void *)(v113 + 16) + 1, 1, v113);
                  *uint64_t v112 = v113;
                }
                unint64_t v117 = *(void *)(v113 + 16);
                unint64_t v116 = *(void *)(v113 + 24);
                uint64_t v118 = v159;
                if (v117 >= v116 >> 1)
                {
                  uint64_t v121 = sub_1002A5F2C(v116 > 1, v117 + 1, 1, v113);
                  uint64_t v118 = v159;
                  unint64_t v113 = v121;
                  *uint64_t v162 = v121;
                }
                *(void *)(v113 + 16) = v117 + 1;
                sub_100082054((uint64_t)v154, v113+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(void *)(v118 + 72) * v117);
                swift_endAccess();

                goto LABEL_65;
              }
            }
            else
            {
              uint64_t v83 = (uint64_t)v156;
              (*v147)((uint64_t)v156, 1, 1, v160);
            }
            Date.init()();
            sub_10001457C(v83, (uint64_t *)&unk_1007FC470);
            goto LABEL_51;
          }
LABEL_76:

          id v130 = v134;
          swift_bridgeObjectRelease();

LABEL_77:
          uint64_t v34 = v149;
        }
        else
        {
        }
      }
      else
      {
LABEL_32:
      }
LABEL_33:
      if (v38 == v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = v161;
        goto LABEL_80;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_80:
  if (v152)
  {
    swift_bridgeObjectRetain();
    uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v132 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v32 + 16) = v132;
}

void sub_10007FE00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080288((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v9 = (int *)_s14DataAggregatorC5PlaceVMa(0);
  id v10 = *(id *)(v0 + v9[5]);
  NSObject.hash(into:)();

  sub_100045944(v1 + v9[6], (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(void *)(v1 + v9[7] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v1 + v9[8] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v1 + v9[9] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v11 = *(void **)(v1 + v9[10]);
  if (v11)
  {
    Hasher._combine(_:)(1u);
    id v12 = v11;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v13 = *(void **)(v1 + v9[11]);
  if (v13)
  {
    Hasher._combine(_:)(1u);
    id v14 = v13;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  os_log_type_t v15 = *(void **)(v1 + v9[12]);
  if (v15)
  {
    Hasher._combine(_:)(1u);
    id v16 = v15;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1000801BC()
{
  return Hasher._finalize()();
}

Swift::Int sub_100080200()
{
  return Hasher._finalize()();
}

uint64_t sub_100080240()
{
  return sub_100080288(&qword_1007FB8A8, (void (*)(uint64_t))_s14DataAggregatorC5PlaceVMa);
}

uint64_t sub_100080288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000802D0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100080350()
{
  return static Published.subscript.setter();
}

void sub_1000803CC(void **a1)
{
  uint64_t v2 = *(void *)(_s14DataAggregatorC5PlaceVMa(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000F3F94(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100080474(v5);
  *a1 = v3;
}

void sub_100080474(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v127 = _s14DataAggregatorC5PlaceVMa(0);
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v122 = (uint64_t)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v132 = (uint64_t)&v118 - v6;
  __chkstk_darwin(v7);
  uint64_t v129 = (uint64_t)&v118 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v118 - v10;
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_145;
    }
    if (v12) {
      sub_100080EE8(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_153;
  }
  Swift::Int v119 = v13;
  if (v12 < 2)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v124 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      uint64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_110:
      uint64_t v118 = v18;
      if (v21 >= 2)
      {
        uint64_t v112 = *a1;
        do
        {
          unint64_t v113 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_140;
          }
          if (!v112) {
            goto LABEL_152;
          }
          uint64_t v114 = *(void *)&v20[16 * v113 + 32];
          uint64_t v115 = *(void *)&v20[16 * v21 + 24];
          sub_100081168(v112 + *(void *)(v125 + 72) * v114, v112 + *(void *)(v125 + 72) * *(void *)&v20[16 * v21 + 16], v112 + *(void *)(v125 + 72) * v115, v124);
          if (v2) {
            break;
          }
          if (v115 < v114) {
            goto LABEL_141;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_1000F1E40((uint64_t)v20);
          }
          if (v113 >= *((void *)v20 + 2)) {
            goto LABEL_142;
          }
          unint64_t v116 = &v20[16 * v113 + 32];
          *(void *)unint64_t v116 = v114;
          *((void *)v116 + 1) = v115;
          unint64_t v117 = *((void *)v20 + 2);
          if (v21 > v117) {
            goto LABEL_143;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v117 - v21));
          *((void *)v20 + 2) = v117 - 1;
          unint64_t v21 = v117 - 1;
        }
        while (v117 > 2);
      }
LABEL_121:
      swift_bridgeObjectRelease();
      v118[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v118 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v125 + 80);
    uint64_t v118 = (void *)v16;
    unint64_t v124 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  id v131 = a1;
  while (1)
  {
    Swift::Int v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v123 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v37 = v19 + 1;
      goto LABEL_61;
    }
    uint64_t v126 = v2;
    uint64_t v24 = *a1;
    uint64_t v25 = *(void *)(v125 + 72);
    sub_1000820B8(*a1 + v25 * v23, (uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
    Swift::Int v133 = v12;
    uint64_t v26 = v129;
    sub_1000820B8(v24 + v25 * v22, v129, _s14DataAggregatorC5PlaceVMa);
    uint64_t v130 = Date.compare(_:)();
    uint64_t v27 = v26;
    Swift::Int v28 = v133;
    sub_100082120(v27, _s14DataAggregatorC5PlaceVMa);
    sub_100082120((uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
    Swift::Int v29 = v22 + 2;
    uint64_t v128 = v24;
    uint64_t v134 = v25;
    if (v22 + 2 >= v28)
    {
      Swift::Int v32 = v22 + 2;
      uint64_t v2 = v126;
    }
    else
    {
      BOOL v120 = v20;
      uint64_t v30 = v25 * v23;
      uint64_t v31 = v24;
      Swift::Int v32 = v22 + 2;
      uint64_t v33 = v25 * v29;
      while (1)
      {
        int v34 = v130 == 1;
        sub_1000820B8(v31 + v33, (uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
        uint64_t v35 = v129;
        sub_1000820B8(v31 + v30, v129, _s14DataAggregatorC5PlaceVMa);
        int v36 = Date.compare(_:)() != 1;
        sub_100082120(v35, _s14DataAggregatorC5PlaceVMa);
        sub_100082120((uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
        if (v34 == v36) {
          break;
        }
        v31 += v134;
        if (v133 == ++v32)
        {
          Swift::Int v28 = v133;
          Swift::Int v32 = v133;
          a1 = v131;
          uint64_t v20 = v120;
          uint64_t v2 = v126;
          goto LABEL_25;
        }
      }
      a1 = v131;
      uint64_t v20 = v120;
      uint64_t v2 = v126;
      Swift::Int v28 = v133;
LABEL_25:
      uint64_t v24 = v128;
    }
    if (v130 != 1)
    {
      uint64_t v37 = v32;
      Swift::Int v22 = v123;
      if (v37 < v28) {
        goto LABEL_44;
      }
      goto LABEL_61;
    }
    if (v32 < v123) {
      goto LABEL_146;
    }
    uint64_t v37 = v32;
    if (v123 < v32) {
      break;
    }
    Swift::Int v22 = v123;
    if (v37 < v28) {
      goto LABEL_44;
    }
LABEL_61:
    if (v37 < v22) {
      goto LABEL_139;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v130 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1000F1750(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v60 = *((void *)v20 + 2);
    unint64_t v59 = *((void *)v20 + 3);
    unint64_t v21 = v60 + 1;
    if (v60 >= v59 >> 1) {
      uint64_t v20 = sub_1000F1750((char *)(v59 > 1), v60 + 1, 1, v20);
    }
    uint64_t v126 = v2;
    *((void *)v20 + 2) = v21;
    id v61 = v20 + 32;
    uint64_t v62 = &v20[16 * v60 + 32];
    uint64_t v63 = v130;
    *(void *)uint64_t v62 = v123;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v69 = &v61[16 * v21];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_128;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_129;
          }
          unint64_t v76 = v21 - 2;
          double v77 = &v61[16 * v21 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_131;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_134;
          }
          if (v81 >= v72)
          {
            unint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_138;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_98;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v93 = *((void *)v20 + 4);
            uint64_t v94 = *((void *)v20 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_92;
          }
          uint64_t v66 = *((void *)v20 + 4);
          uint64_t v65 = *((void *)v20 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_130;
        }
        unint64_t v76 = v21 - 2;
        BOOL v82 = &v61[16 * v21 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_133;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_136;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_137;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_98:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_100;
        }
LABEL_92:
        if (v87) {
          goto LABEL_132;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_135;
        }
        if (v98 < v86) {
          goto LABEL_15;
        }
LABEL_100:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v21)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        uint64_t v104 = *a1;
        if (!*a1) {
          goto LABEL_150;
        }
        uint64_t v105 = v20;
        uint64_t v106 = &v61[16 * v103];
        uint64_t v107 = *(void *)v106;
        uint64_t v108 = &v61[16 * v64];
        uint64_t v109 = *((void *)v108 + 1);
        uint64_t v110 = v126;
        sub_100081168(v104 + *(void *)(v125 + 72) * *(void *)v106, v104 + *(void *)(v125 + 72) * *(void *)v108, v104 + *(void *)(v125 + 72) * v109, v124);
        uint64_t v126 = v110;
        if (v110) {
          goto LABEL_121;
        }
        if (v109 < v107) {
          goto LABEL_125;
        }
        if (v64 > *((void *)v105 + 2)) {
          goto LABEL_126;
        }
        *(void *)uint64_t v106 = v107;
        *(void *)&v61[16 * v103 + 8] = v109;
        unint64_t v111 = *((void *)v105 + 2);
        if (v64 >= v111) {
          goto LABEL_127;
        }
        uint64_t v20 = v105;
        unint64_t v21 = v111 - 1;
        memmove(&v61[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((void *)v105 + 2) = v111 - 1;
        a1 = v131;
        if (v111 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v130;
    uint64_t v2 = v126;
    if (v130 >= v12)
    {
      unint64_t v18 = v118;
      goto LABEL_110;
    }
  }
  uint64_t v126 = v2;
  BOOL v120 = v20;
  uint64_t v38 = 0;
  uint64_t v39 = v134 * (v32 - 1);
  Swift::Int v40 = v32 * v134;
  uint64_t v41 = v123;
  uint64_t v42 = v123 * v134;
  uint64_t v43 = v134;
  do
  {
    if (v41 != v37 + v38 - 1)
    {
      if (!v24) {
        goto LABEL_151;
      }
      uint64_t v130 = v24 + v39;
      sub_100082054(v24 + v42, v122);
      if (v42 < v39 || v24 + v42 >= (unint64_t)(v24 + v40))
      {
        uint64_t v44 = v130;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        uint64_t v44 = v130;
        if (v42 != v39) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      sub_100082054(v122, v44);
      uint64_t v37 = v32;
      uint64_t v24 = v128;
      uint64_t v43 = v134;
    }
    ++v41;
    --v38;
    v39 -= v43;
    v40 -= v43;
    v42 += v43;
  }
  while (v41 < v37 + v38);
  a1 = v131;
  uint64_t v20 = v120;
  uint64_t v2 = v126;
  Swift::Int v22 = v123;
  Swift::Int v28 = v133;
  if (v37 >= v133) {
    goto LABEL_61;
  }
LABEL_44:
  if (__OFSUB__(v37, v22)) {
    goto LABEL_144;
  }
  if (v37 - v22 >= v119) {
    goto LABEL_61;
  }
  if (__OFADD__(v22, v119)) {
    goto LABEL_147;
  }
  if (v22 + v119 >= v28) {
    Swift::Int v45 = v28;
  }
  else {
    Swift::Int v45 = v22 + v119;
  }
  if (v45 >= v22)
  {
    if (v37 != v45)
    {
      BOOL v120 = v20;
      uint64_t v121 = v45;
      uint64_t v126 = v2;
      uint64_t v46 = *(void *)(v125 + 72);
      uint64_t v47 = v46 * (v37 - 1);
      uint64_t v128 = v46;
      uint64_t v134 = v37 * v46;
      do
      {
        uint64_t v49 = 0;
        uint64_t v130 = v37;
        while (1)
        {
          Swift::Int v133 = v22;
          id v50 = v131;
          uint64_t v51 = *v131;
          sub_1000820B8(v134 + v49 + *v131, (uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
          uint64_t v52 = v47;
          uint64_t v53 = v47 + v49 + v51;
          uint64_t v54 = v129;
          sub_1000820B8(v53, v129, _s14DataAggregatorC5PlaceVMa);
          uint64_t v55 = Date.compare(_:)();
          sub_100082120(v54, _s14DataAggregatorC5PlaceVMa);
          sub_100082120((uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
          if (v55 != 1) {
            break;
          }
          uint64_t v56 = *v50;
          if (!*v50) {
            goto LABEL_149;
          }
          uint64_t v47 = v52;
          uint64_t v57 = v56 + v52 + v49;
          sub_100082054(v56 + v134 + v49, v132);
          swift_arrayInitWithTakeFrontToBack();
          sub_100082054(v132, v57);
          v49 -= v128;
          Swift::Int v22 = v133 + 1;
          uint64_t v48 = v130;
          if (v130 == v133 + 1) {
            goto LABEL_54;
          }
        }
        uint64_t v48 = v130;
        uint64_t v47 = v52;
LABEL_54:
        uint64_t v37 = v48 + 1;
        v47 += v128;
        v134 += v128;
        Swift::Int v22 = v123;
      }
      while (v37 != v121);
      uint64_t v37 = v121;
      uint64_t v2 = v126;
      a1 = v131;
      uint64_t v20 = v120;
    }
    goto LABEL_61;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100080EE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = _s14DataAggregatorC5PlaceVMa(0);
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - v9;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1000820B8(v30 + v16 + *a4, (uint64_t)v14, _s14DataAggregatorC5PlaceVMa);
      sub_1000820B8(v31 + v16 + v18, (uint64_t)v10, _s14DataAggregatorC5PlaceVMa);
      uint64_t v20 = Date.compare(_:)();
      sub_100082120((uint64_t)v10, _s14DataAggregatorC5PlaceVMa);
      sub_100082120((uint64_t)v14, _s14DataAggregatorC5PlaceVMa);
      if (v20 != 1)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v16;
      sub_100082054(v21 + v30 + v16, v29);
      swift_arrayInitWithTakeFrontToBack();
      sub_100082054(v29, v22);
      v16 -= v27;
      ++v17;
      a4 = v19;
      if (v28 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100081168(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v41 = _s14DataAggregatorC5PlaceVMa(0);
  __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v45 = a1;
  unint64_t v44 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v43 = a4 + v18;
      unint64_t v45 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v39 = a4;
        unint64_t v40 = a1;
        do
        {
          unint64_t v28 = a3 - v13;
          sub_1000820B8(v26 - v13, (uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
          unint64_t v29 = a2 - v13;
          unint64_t v30 = a3;
          uint64_t v31 = v42;
          sub_1000820B8(a2 - v13, v42, _s14DataAggregatorC5PlaceVMa);
          uint64_t v32 = Date.compare(_:)();
          sub_100082120(v31, _s14DataAggregatorC5PlaceVMa);
          sub_100082120((uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
          if (v32 == 1)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v34 = v39;
              unint64_t v35 = v40;
            }
            else
            {
              BOOL v33 = v30 == a2;
              unint64_t v34 = v39;
              unint64_t v35 = v40;
              if (!v33) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v45 -= v13;
          }
          else
          {
            unint64_t v36 = v43;
            v43 -= v13;
            if (v30 < v36 || v28 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v34 = v39;
              unint64_t v35 = v40;
            }
            else
            {
              unint64_t v35 = v40;
              if (v30 != v36) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
              unint64_t v34 = v39;
            }
          }
          unint64_t v26 = v43;
          if (v43 <= v34) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v35);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v43 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1000820B8(a2, (uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
        uint64_t v21 = v42;
        sub_1000820B8(a4, v42, _s14DataAggregatorC5PlaceVMa);
        uint64_t v22 = Date.compare(_:)();
        sub_100082120(v21, _s14DataAggregatorC5PlaceVMa);
        sub_100082120((uint64_t)v11, _s14DataAggregatorC5PlaceVMa);
        unint64_t v23 = v45;
        if (v22 == 1)
        {
          unint64_t v24 = a2 + v13;
          if (v45 < a2 || v45 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v44 + v13;
          if (v45 < v44 || v45 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v44 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v45 = v23 + v13;
        a4 = v44;
        if (v44 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_1000F1A94(&v45, &v44, (uint64_t *)&v43);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100081644(uint64_t a1)
{
  sub_100010218(&qword_1007FB8E8);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v21 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v22 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    char v15 = *(unsigned char *)(*(void *)(a1 + 48) + i);
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    if ((v16 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = __CocoaSet.count.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(v3[6] + i) = v15;
    *(void *)(v3[7] + 8 * i) = v17;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v3[2] = v20;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_27;
    }
    if (v12 >= v22) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v21 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v22) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v21 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v22) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v21 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v22) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v21 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v22) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v21 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10008185C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - v15;
  __chkstk_darwin(v17);
  BOOL v19 = (char *)&v70 - v18;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v74 = v7;
  uint64_t v75 = v5;
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  uint64_t v20 = _s14DataAggregatorC5PlaceVMa(0);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v21 = *(int *)(v20 + 24);
  uint64_t v72 = a1;
  sub_100045944(a1 + v21, (uint64_t)v19);
  uint64_t v71 = (int *)v20;
  uint64_t v22 = *(int *)(v20 + 24);
  uint64_t v73 = a2;
  sub_100045944(a2 + v22, (uint64_t)v16);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100045944((uint64_t)v19, (uint64_t)v10);
  sub_100045944((uint64_t)v16, v23);
  uint64_t v24 = v75;
  unint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  if (v25((uint64_t)v10, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v16, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v19, (uint64_t *)&unk_1007FC470);
    if (v25(v23, 1, v4) == 1)
    {
      sub_10001457C((uint64_t)v10, (uint64_t *)&unk_1007FC470);
      goto LABEL_12;
    }
LABEL_8:
    sub_10001457C((uint64_t)v10, &qword_1007FB8B0);
    return 0;
  }
  sub_100045944((uint64_t)v10, (uint64_t)v13);
  if (v25(v23, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v16, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v19, (uint64_t *)&unk_1007FC470);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v4);
    goto LABEL_8;
  }
  uint64_t v27 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v74, v23, v4);
  sub_100080288((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
  char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v29 = *(void (**)(char *, uint64_t))(v24 + 8);
  v29(v27, v4);
  sub_10001457C((uint64_t)v16, (uint64_t *)&unk_1007FC470);
  sub_10001457C((uint64_t)v19, (uint64_t *)&unk_1007FC470);
  v29(v13, v4);
  sub_10001457C((uint64_t)v10, (uint64_t *)&unk_1007FC470);
  if ((v28 & 1) == 0) {
    return 0;
  }
LABEL_12:
  uint64_t v31 = v71;
  uint64_t v30 = v72;
  uint64_t v32 = v71[7];
  BOOL v33 = (void *)(v72 + v32);
  uint64_t v34 = *(void *)(v72 + v32 + 8);
  uint64_t v35 = v73;
  unint64_t v36 = (void *)(v73 + v32);
  uint64_t v37 = v36[1];
  if (v34)
  {
    if (!v37) {
      return 0;
    }
    if (*v33 != *v36 || v34 != v37)
    {
      char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v38 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v37)
  {
    return 0;
  }
  uint64_t v39 = v31[8];
  unint64_t v40 = (void *)(v30 + v39);
  uint64_t v41 = *(void *)(v30 + v39 + 8);
  uint64_t v42 = (void *)(v35 + v39);
  uint64_t v43 = v42[1];
  if (v41)
  {
    if (!v43) {
      return 0;
    }
    if (*v40 != *v42 || v41 != v43)
    {
      char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v44 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v43)
  {
    return 0;
  }
  uint64_t v45 = v31[9];
  uint64_t v46 = (void *)(v30 + v45);
  uint64_t v47 = *(void *)(v30 + v45 + 8);
  uint64_t v48 = (void *)(v35 + v45);
  uint64_t v49 = v48[1];
  if (!v47)
  {
    if (v49) {
      return 0;
    }
LABEL_33:
    uint64_t v51 = v31[10];
    uint64_t v52 = v35;
    uint64_t v53 = *(void **)(v30 + v51);
    uint64_t v54 = *(void **)(v52 + v51);
    if (v53)
    {
      if (!v54) {
        return 0;
      }
      sub_10001B284(0, (unint64_t *)&qword_100800A40);
      id v55 = v54;
      id v56 = v53;
      char v57 = static NSObject.== infix(_:_:)();

      if ((v57 & 1) == 0) {
        return 0;
      }
    }
    else if (v54)
    {
      return 0;
    }
    uint64_t v58 = v31[11];
    unint64_t v59 = *(void **)(v72 + v58);
    unint64_t v60 = *(void **)(v73 + v58);
    if (v59)
    {
      if (v60)
      {
        sub_10001B284(0, (unint64_t *)&qword_10080F260);
        id v61 = v60;
        id v62 = v59;
        char v63 = static NSObject.== infix(_:_:)();

        if (v63)
        {
LABEL_43:
          uint64_t v64 = v31[12];
          uint64_t v65 = *(void **)(v72 + v64);
          uint64_t v66 = *(void **)(v73 + v64);
          if (v65)
          {
            if (v66)
            {
              sub_10001B284(0, (unint64_t *)&unk_10080F270);
              id v67 = v66;
              id v68 = v65;
              char v69 = static NSObject.== infix(_:_:)();

              if (v69) {
                return 1;
              }
            }
          }
          else if (!v66)
          {
            return 1;
          }
        }
      }
    }
    else if (!v60)
    {
      goto LABEL_43;
    }
    return 0;
  }
  if (!v49) {
    return 0;
  }
  if (*v46 == *v48 && v47 == v49) {
    goto LABEL_33;
  }
  char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v50) {
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_100081E9C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100081ED4(uint64_t a1)
{
  sub_10007C060(a1, *(void *)(v1 + 16));
}

uint64_t sub_100081EDC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_10007C258();
}

uint64_t sub_100081F88()
{
  return swift_deallocObject();
}

uint64_t sub_100081F98()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100081FD0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100082028()
{
  sub_10007EA78(*(void *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100082054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14DataAggregatorC5PlaceVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000820B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100082120(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100082180()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0) {
    return;
  }
  uint64_t v1 = v0;
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v2;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v3 = sub_10001B738((uint64_t)v74), (v4 & 1) != 0))
  {
    sub_10001B648(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v71);
  }
  else
  {
    long long v71 = 0u;
    long long v72 = 0u;
  }
  sub_10001DF0C((uint64_t)v74);
  if (!*((void *)&v72 + 1))
  {
    sub_10001457C((uint64_t)&v71, &qword_1007FAD50);
    goto LABEL_40;
  }
  sub_100010218(&qword_1007FB910);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v66;
    if ((v66 & 0xC000000000000001) != 0)
    {
      __CocoaSet.makeIterator()();
      sub_10001B284(0, &qword_1008113A0);
      sub_100082CD4();
      Set.Iterator.init(_cocoa:)();
      uint64_t v5 = v66;
      uint64_t v61 = v67;
      uint64_t v6 = v68;
      uint64_t v7 = v69;
      unint64_t v8 = v70;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = -1 << *(unsigned char *)(v66 + 32);
      uint64_t v61 = v66 + 56;
      uint64_t v6 = ~v9;
      uint64_t v10 = -v9;
      if (v10 < 64) {
        uint64_t v11 = ~(-1 << v10);
      }
      else {
        uint64_t v11 = -1;
      }
      unint64_t v8 = v11 & *(void *)(v66 + 56);
    }
    int64_t v12 = (unint64_t)(v6 + 64) >> 6;
    while (1)
    {
      uint64_t v13 = v7;
      if (v5 < 0)
      {
        uint64_t v16 = __CocoaSet.Iterator.next()();
        if (!v16) {
          goto LABEL_39;
        }
        *(void *)&long long v71 = v16;
        sub_10001B284(0, &qword_1008113A0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v17 = (id)v74[0];
        swift_unknownObjectRelease();
        if (!v17) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v8)
        {
          unint64_t v14 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          unint64_t v15 = v14 | (v7 << 6);
        }
        else
        {
          int64_t v18 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
            return;
          }
          if (v18 >= v12) {
            goto LABEL_39;
          }
          unint64_t v19 = *(void *)(v61 + 8 * v18);
          ++v7;
          if (!v19)
          {
            uint64_t v7 = v13 + 2;
            if (v13 + 2 >= v12) {
              goto LABEL_39;
            }
            unint64_t v19 = *(void *)(v61 + 8 * v7);
            if (!v19)
            {
              uint64_t v7 = v13 + 3;
              if (v13 + 3 >= v12) {
                goto LABEL_39;
              }
              unint64_t v19 = *(void *)(v61 + 8 * v7);
              if (!v19)
              {
                uint64_t v7 = v13 + 4;
                if (v13 + 4 >= v12) {
                  goto LABEL_39;
                }
                unint64_t v19 = *(void *)(v61 + 8 * v7);
                if (!v19)
                {
                  uint64_t v20 = v13 + 5;
                  while (v12 != v20)
                  {
                    unint64_t v19 = *(void *)(v61 + 8 * v20++);
                    if (v19)
                    {
                      uint64_t v7 = v20 - 1;
                      goto LABEL_35;
                    }
                  }
LABEL_39:
                  sub_100082D3C();
                  break;
                }
              }
            }
          }
LABEL_35:
          unint64_t v8 = (v19 - 1) & v19;
          unint64_t v15 = __clz(__rbit64(v19)) + (v7 << 6);
        }
        id v17 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
        if (!v17) {
          goto LABEL_39;
        }
      }
      type metadata accessor for JournalEntryAssetMO();
      uint64_t v21 = swift_dynamicCastClass();

      if (v21)
      {
LABEL_76:
        swift_bridgeObjectRelease();
LABEL_117:
        sub_100082D3C();
        return;
      }
    }
  }
LABEL_40:
  *(void *)&long long v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v64 + 1) = v22;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v23 = sub_10001B738((uint64_t)v74), (v24 & 1) != 0))
  {
    sub_10001B648(*(void *)(v1 + 56) + 32 * v23, (uint64_t)&v71);
  }
  else
  {
    long long v71 = 0u;
    long long v72 = 0u;
  }
  sub_10001DF0C((uint64_t)v74);
  if (*((void *)&v72 + 1))
  {
    sub_100010218(&qword_1007FB910);
    if (swift_dynamicCast())
    {
      uint64_t v25 = v64;
      if ((v64 & 0xC000000000000001) != 0)
      {
        __CocoaSet.makeIterator()();
        sub_10001B284(0, &qword_1008113A0);
        sub_100082CD4();
        Set.Iterator.init(_cocoa:)();
        uint64_t v62 = *((void *)&v71 + 1);
        uint64_t v25 = v71;
        uint64_t v27 = *((void *)&v72 + 1);
        uint64_t v26 = v72;
        unint64_t v28 = v73;
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v29 = -1 << *(unsigned char *)(v64 + 32);
        uint64_t v62 = v64 + 56;
        uint64_t v26 = ~v29;
        uint64_t v30 = -v29;
        if (v30 < 64) {
          uint64_t v31 = ~(-1 << v30);
        }
        else {
          uint64_t v31 = -1;
        }
        unint64_t v28 = v31 & *(void *)(v64 + 56);
      }
      int64_t v32 = (unint64_t)(v26 + 64) >> 6;
      while (1)
      {
        uint64_t v33 = v27;
        if (v25 < 0)
        {
          uint64_t v36 = __CocoaSet.Iterator.next()();
          if (!v36) {
            goto LABEL_77;
          }
          *(void *)&long long v64 = v36;
          sub_10001B284(0, &qword_1008113A0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v37 = (id)v74[0];
          swift_unknownObjectRelease();
          if (!v37) {
            goto LABEL_77;
          }
        }
        else
        {
          if (v28)
          {
            unint64_t v34 = __clz(__rbit64(v28));
            v28 &= v28 - 1;
            unint64_t v35 = v34 | (v27 << 6);
          }
          else
          {
            int64_t v38 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_121;
            }
            if (v38 >= v32)
            {
LABEL_77:
              sub_100082D3C();
              break;
            }
            unint64_t v39 = *(void *)(v62 + 8 * v38);
            ++v27;
            if (!v39)
            {
              uint64_t v27 = v33 + 2;
              if (v33 + 2 >= v32) {
                goto LABEL_77;
              }
              unint64_t v39 = *(void *)(v62 + 8 * v27);
              if (!v39)
              {
                uint64_t v27 = v33 + 3;
                if (v33 + 3 >= v32) {
                  goto LABEL_77;
                }
                unint64_t v39 = *(void *)(v62 + 8 * v27);
                if (!v39)
                {
                  uint64_t v27 = v33 + 4;
                  if (v33 + 4 >= v32) {
                    goto LABEL_77;
                  }
                  unint64_t v39 = *(void *)(v62 + 8 * v27);
                  if (!v39)
                  {
                    uint64_t v40 = v33 + 5;
                    do
                    {
                      if (v32 == v40) {
                        goto LABEL_77;
                      }
                      unint64_t v39 = *(void *)(v62 + 8 * v40++);
                    }
                    while (!v39);
                    uint64_t v27 = v40 - 1;
                  }
                }
              }
            }
            unint64_t v28 = (v39 - 1) & v39;
            unint64_t v35 = __clz(__rbit64(v39)) + (v27 << 6);
          }
          id v37 = *(id *)(*(void *)(v25 + 48) + 8 * v35);
          if (!v37) {
            goto LABEL_77;
          }
        }
        type metadata accessor for JournalEntryAssetMO();
        uint64_t v41 = swift_dynamicCastClass();

        if (v41) {
          goto LABEL_76;
        }
      }
    }
  }
  else
  {
    sub_10001457C((uint64_t)&v71, &qword_1007FAD50);
  }
  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v42 = sub_10001B738((uint64_t)v74), (v43 & 1) != 0))
  {
    sub_10001B648(*(void *)(v1 + 56) + 32 * v42, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)v74);
  if (!*((void *)&v65 + 1))
  {
    sub_10001457C((uint64_t)&v64, &qword_1007FAD50);
    return;
  }
  sub_100010218(&qword_1007FB910);
  if (swift_dynamicCast())
  {
    uint64_t v44 = v63;
    if ((v63 & 0xC000000000000001) != 0)
    {
      __CocoaSet.makeIterator()();
      sub_10001B284(0, &qword_1008113A0);
      sub_100082CD4();
      Set.Iterator.init(_cocoa:)();
      uint64_t v44 = v74[0];
      uint64_t v45 = v74[1];
      uint64_t v46 = v74[2];
      uint64_t v47 = v74[3];
      unint64_t v48 = v74[4];
    }
    else
    {
      uint64_t v47 = 0;
      uint64_t v49 = -1 << *(unsigned char *)(v63 + 32);
      uint64_t v45 = v63 + 56;
      uint64_t v46 = ~v49;
      uint64_t v50 = -v49;
      if (v50 < 64) {
        uint64_t v51 = ~(-1 << v50);
      }
      else {
        uint64_t v51 = -1;
      }
      unint64_t v48 = v51 & *(void *)(v63 + 56);
    }
    int64_t v52 = (unint64_t)(v46 + 64) >> 6;
    while (1)
    {
      uint64_t v53 = v47;
      if (v44 < 0)
      {
        if (!__CocoaSet.Iterator.next()()) {
          goto LABEL_118;
        }
        sub_10001B284(0, &qword_1008113A0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v56 = (id)v64;
        swift_unknownObjectRelease();
      }
      else
      {
        if (v48)
        {
          unint64_t v54 = __clz(__rbit64(v48));
          v48 &= v48 - 1;
          unint64_t v55 = v54 | (v47 << 6);
        }
        else
        {
          int64_t v57 = v47 + 1;
          if (__OFADD__(v47, 1)) {
            goto LABEL_122;
          }
          if (v57 >= v52) {
            goto LABEL_118;
          }
          unint64_t v58 = *(void *)(v45 + 8 * v57);
          ++v47;
          if (!v58)
          {
            uint64_t v47 = v53 + 2;
            if (v53 + 2 >= v52) {
              goto LABEL_118;
            }
            unint64_t v58 = *(void *)(v45 + 8 * v47);
            if (!v58)
            {
              uint64_t v47 = v53 + 3;
              if (v53 + 3 >= v52) {
                goto LABEL_118;
              }
              unint64_t v58 = *(void *)(v45 + 8 * v47);
              if (!v58)
              {
                uint64_t v47 = v53 + 4;
                if (v53 + 4 >= v52) {
                  goto LABEL_118;
                }
                unint64_t v58 = *(void *)(v45 + 8 * v47);
                if (!v58)
                {
                  uint64_t v59 = v53 + 5;
                  while (v52 != v59)
                  {
                    unint64_t v58 = *(void *)(v45 + 8 * v59++);
                    if (v58)
                    {
                      uint64_t v47 = v59 - 1;
                      goto LABEL_110;
                    }
                  }
LABEL_118:
                  sub_100082D3C();
                  return;
                }
              }
            }
          }
LABEL_110:
          unint64_t v48 = (v58 - 1) & v58;
          unint64_t v55 = __clz(__rbit64(v58)) + (v47 << 6);
        }
        id v56 = *(id *)(*(void *)(v44 + 48) + 8 * v55);
      }
      if (!v56) {
        goto LABEL_118;
      }
      type metadata accessor for JournalEntryAssetMO();
      if (swift_dynamicCastClass())
      {

        goto LABEL_117;
      }
      type metadata accessor for JournalEntryMO();
      uint64_t v60 = swift_dynamicCastClass();

      if (v60) {
        goto LABEL_117;
      }
    }
  }
}

uint64_t sub_100082B08()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100082B40()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_10007C258();
}

uint64_t sub_100082BEC(uint64_t a1)
{
  return sub_10007CF3C(a1, v1);
}

uint64_t sub_100082BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100082C04()
{
  return swift_release();
}

void sub_100082C0C()
{
  sub_10007CFAC(v0);
}

uint64_t sub_100082C28()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10002C194;
  return sub_10007D0DC();
}

unint64_t sub_100082CD4()
{
  unint64_t result = qword_1007FC480;
  if (!qword_1007FC480)
  {
    sub_10001B284(255, &qword_1008113A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC480);
  }
  return result;
}

uint64_t sub_100082D3C()
{
  return swift_release();
}

uint64_t sub_100082D54(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for MainActor();
  v2[5] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[6] = v4;
  v2[7] = v3;
  return _swift_task_switch(sub_100082DF0, v4, v3);
}

uint64_t sub_100082DF0()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1;
  if (!v1)
  {
    id v15 = [self sharedApplication];
    id v16 = [v15 connectedScenes];
    sub_10001B284(0, (unint64_t *)&qword_10080CF00);
    sub_1000872E4();
    uint64_t v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v18 = (void *)sub_1003F1F90(v17);
    swift_bridgeObjectRelease();
    if (v18)
    {
      self;
      uint64_t v2 = (void *)swift_dynamicCastObjCClass();

      if (v2)
      {
        uint64_t v1 = (void *)v0[2];
        goto LABEL_2;
      }
    }
    else
    {

      uint64_t v2 = 0;
    }
LABEL_27:
    v0[8] = v2;
    uint64_t v24 = v0[3];
    uint64_t v25 = static MainActor.shared.getter();
    v0[9] = v25;
    uint64_t v26 = swift_task_alloc();
    v0[10] = v26;
    *(void *)(v26 + 16) = v24;
    uint64_t v27 = (void *)swift_task_alloc();
    v0[11] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_100083228;
    unint64_t v28 = &type metadata for Bool;
    uint64_t v29 = &protocol witness table for MainActor;
    uint64_t v30 = &unk_1007FBAE8;
    uint64_t v31 = v0 + 12;
    int64_t v32 = &type metadata for Bool;
    uint64_t v33 = v25;
    uint64_t v34 = v26;
    unint64_t v35 = &type metadata for Bool;
    return withTaskGroup<A, B>(of:returning:isolation:body:)(v31, v28, v32, v33, v29, v30, v34, v35);
  }
LABEL_2:
  id v3 = v1;
  if ([v2 activationState]) {
    goto LABEL_27;
  }
  id v4 = [v2 windows];
  sub_10001B284(0, &qword_1007FBAF0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v6 = (char *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  uint64_t v6 = *(char **)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_5:
  unint64_t v7 = 0;
  unint64_t v8 = v5 & 0xC000000000000001;
  while (1)
  {
    if (v8)
    {
      swift_bridgeObjectRetain();
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v10 = *(void **)(v5 + 8 * v7 + 32);
      swift_bridgeObjectRetain();
      id v9 = v10;
    }
    uint64_t v11 = v9;
    id v12 = [v9 rootViewController];
    if (v12) {
      break;
    }
LABEL_12:

    swift_bridgeObjectRelease();
    unint64_t v14 = (char *)(v7 + 1);
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    ++v7;
    if (v14 == v6) {
      goto LABEL_14;
    }
  }
  uint64_t v13 = v12;
  type metadata accessor for AppSecureAccessViewController();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_12;
  }

  swift_bridgeObjectRelease();
  if (v8)
  {
    id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_24;
  }
  if (v7 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_37;
  }
  id v19 = *(id *)(v5 + 8 * v7 + 32);
LABEL_24:
  unint64_t v7 = (unint64_t)v19;
  uint64_t v20 = (char *)[v19 rootViewController];
  if (!v20) {
    goto LABEL_38;
  }
  uint64_t v6 = v20;
  uint64_t v21 = swift_dynamicCastClass();
  if (!v21)
  {
LABEL_37:

LABEL_38:
    __break(1u);
    return withTaskGroup<A, B>(of:returning:isolation:body:)(v31, v28, v32, v33, v29, v30, v34, v35);
  }
  uint64_t v22 = v21;

  swift_bridgeObjectRelease();
  int v23 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state);

  if (v23) {
    goto LABEL_27;
  }

  swift_release();
  uint64_t v36 = (uint64_t (*)(uint64_t))v0[1];
  return v36(1);
}

uint64_t sub_100083228()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100083388, v3, v2);
}

uint64_t sub_100083388()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();

  uint64_t v2 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

NSString sub_1000833F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083CEC8 = (uint64_t)result;
  return result;
}

void sub_10008342C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_100812AD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window;
  if (!*(void *)(v2 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window))
  {
    id v8 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:a1];
    uint64_t v9 = v2 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_logger;
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    sub_100086F30((uint64_t)v6, 0xD000000000000012, 0x8000000100689DA0);
    int v13 = v12 & 1;
    sub_10001457C((uint64_t)v6, &qword_100812AD0);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_isNewAppLaunch) = 1;
    unint64_t v14 = (objc_class *)type metadata accessor for AppSecureAccessViewController();
    id v15 = objc_allocWithZone(v14);
    *(void *)&v15[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_gradient] = 0;
    *(void *)&v15[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_traitChangeRegistration] = 0;
    v15[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state] = v13 ^ 1;
    id v16 = &v15[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_onAuthenticate];
    *id v16 = sub_10008790C;
    v16[1] = v2;
    v29.receiver = v15;
    v29.super_class = v14;
    swift_retain();
    id v17 = [super initWithNibName:0 bundle:0];
    [v8 setRootViewController:v17];

    type metadata accessor for Level(0);
    UIWindowLevel v27 = UIWindowLevelAlert;
    v26[1] = 0x4000000000000000;
    sub_1000875CC((unint64_t *)&qword_1007FBB68, type metadata accessor for Level);
    static _UIKitNumericRawRepresentable.+ infix(_:_:)();
    [v8 setWindowLevel:v28];
    int64_t v18 = *(void **)(v2 + v7);
    *(void *)(v2 + v7) = v8;
    id v19 = v8;

    [v19 makeKeyWindow];
    [v19 setHidden:0];
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      double v28 = *(double *)&v23;
      if (v13) {
        uint64_t v24 = 0x45534C4146;
      }
      else {
        uint64_t v24 = 1163219540;
      }
      if (v13) {
        unint64_t v25 = 0xE500000000000000;
      }
      else {
        unint64_t v25 = 0xE400000000000000;
      }
      UIWindowLevel v27 = COERCE_DOUBLE(sub_10011EA98(v24, v25, (uint64_t *)&v28));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "sceneWillConnectTo: lockEnabled=%s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_100083830()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100812AD0);
  *(void *)&double v3 = __chkstk_darwin(v2 - 8).n128_u64[0];
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window);
  if (v6)
  {
    id v7 = [v6 rootViewController:v3];
    if (v7)
    {
      id v8 = v7;
      type metadata accessor for AppSecureAccessViewController();
      uint64_t v9 = swift_dynamicCastClass();
      if (v9)
      {
        uint64_t v10 = (unsigned __int8 *)v9;
        uint64_t v11 = OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext;
        [*(id *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext) invalidate];
        char v12 = *(void **)(v1 + v11);
        *(void *)(v1 + v11) = 0;

        uint64_t v13 = v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_logger;
        uint64_t v14 = type metadata accessor for Logger();
        uint64_t v15 = *(void *)(v14 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v5, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v5, 0, 1, v14);
        sub_100086F30((uint64_t)v5, 0xD000000000000017, 0x8000000100689CF0);
        char v17 = v16;
        int v18 = (v16 & 1) == 0;
        sub_10001457C((uint64_t)v5, &qword_100812AD0);
        uint64_t v19 = OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state;
        int v20 = v10[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state];
        id v21 = v8;
        if (v20 == v18)
        {
          sub_1005C95E8(v17 & 1);
        }
        else
        {
          id v25 = [v10 view];

          if (!v25)
          {
LABEL_22:

            _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
            return;
          }
          v10[v19] = v18;
          id v26 = v21;
          sub_1005C96C8(v10, v18);
          sub_1005C95E8(v17 & 1);
        }
        uint64_t v27 = v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp;
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp + 8))
        {
          *(void *)uint64_t v27 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
          *(unsigned char *)(v27 + 8) = 0;
        }
        swift_retain();
        double v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v28, v29))
        {
          swift_release();
          goto LABEL_20;
        }
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 134217984;
        if ((*(unsigned char *)(v27 + 8) & 1) == 0)
        {
          uint64_t v31 = v30;
          v32[1] = *(os_log_t *)v27;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "sceneDidEnterBackground: backgroundedAt=%llu", v31, 0xCu);
          swift_slowDealloc();
LABEL_20:

          return;
        }
        swift_release();
        __break(1u);
        goto LABEL_22;
      }
    }
  }
  v32[0] = (os_log_t)Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v32[0], v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32[0], v22, "sceneDidEnterBackground: Attempted to process scene event before window was ready!", v23, 2u);
    swift_slowDealloc();
  }
  os_log_t v24 = v32[0];
}

void sub_100083C5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100812AD0);
  *(void *)&double v3 = __chkstk_darwin(v2 - 8).n128_u64[0];
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window);
  if (!v6 || (id v7 = objc_msgSend(v6, "rootViewController", v3)) == 0)
  {
LABEL_9:
    os_log_t v43 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v14, "sceneDidBecomeActive: Attempted to process scene event before window was ready!", v15, 2u);
      swift_slowDealloc();
    }
    goto LABEL_11;
  }
  id v8 = v7;
  type metadata accessor for AppSecureAccessViewController();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {

    goto LABEL_9;
  }
  uint64_t v10 = (unsigned __int8 *)v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_logger;
  if ((*(unsigned char *)(v9 + OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state) & 0xFE) != 2)
  {
    uint64_t v17 = type metadata accessor for Logger();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v5, v11, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v17);
    sub_100086F30((uint64_t)v5, 0xD000000000000014, 0x8000000100689CD0);
    LOBYTE(v17) = v19;
    sub_10001457C((uint64_t)v5, &qword_100812AD0);
    if (v17)
    {
      os_log_type_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        os_log_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "sceneDidBecomeActive: Tracking result - Not tracking", v24, 2u);
        swift_slowDealloc();
      }

LABEL_34:
      sub_100084F90();
    }
    else
    {
      BOOL v45 = 0;
      uint64_t v20 = sub_10035EE44();
      unint64_t v21 = 60;
      switch(v20)
      {
        case 1:
          uint64_t v20 = 60;
          goto LABEL_22;
        case 2:
          uint64_t v20 = 300;
          goto LABEL_22;
        case 3:
          uint64_t v20 = 900;
          goto LABEL_22;
        case 4:
          goto LABEL_23;
        default:
LABEL_22:
          unint64_t v21 = v20;
LABEL_23:
          id v25 = self;
          NSString v26 = String._bridgeToObjectiveC()();
          id v27 = [v25 applicationWithBundleIdentifier:v26];

          LODWORD(v26) = [v27 isLocked];
          if (v26)
          {
            BOOL v45 = 0;
            double v28 = Logger.logObject.getter();
            os_log_type_t v29 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v28, v29))
            {
              uint64_t v30 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v30 = 134217984;
              unint64_t v44 = v21;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              uint64_t v31 = "sceneDidBecomeActive: Tracking result - secondsLimit=%llu Protected Apps enforcement detected, isLocked=FALSE";
LABEL_29:
              int64_t v32 = v28;
              os_log_type_t v33 = v29;
              uint64_t v34 = v30;
              uint32_t v35 = 12;
LABEL_30:
              _os_log_impl((void *)&_mh_execute_header, v32, v33, v31, v34, v35);
              swift_slowDealloc();
              goto LABEL_31;
            }
            goto LABEL_31;
          }
          if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_isNewAppLaunch) == 1)
          {
            BOOL v45 = 1;
            double v28 = Logger.logObject.getter();
            os_log_type_t v29 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v28, v29))
            {
              uint64_t v30 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v30 = 134217984;
              unint64_t v44 = v21;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              uint64_t v31 = "sceneDidBecomeActive: Tracking result - secondsLimit=%llu First launch detected, isLocked=TRUE";
              goto LABEL_29;
            }
LABEL_31:

            goto LABEL_32;
          }
          if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp + 8) & 1) == 0)
          {
            unint64_t v36 = *(void *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp);
            __uint64_t v37 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
            __uint64_t v38 = v37 - v36;
            if (v37 < v36)
            {
              __break(1u);
              JUMPOUT(0x1000842FCLL);
            }
            unint64_t v39 = v38 / 0x3B9ACA00;
            BOOL v45 = v38 / 0x3B9ACA00 >= v21;
            double v28 = Logger.logObject.getter();
            os_log_type_t v40 = static os_log_type_t.default.getter();
            if (!os_log_type_enabled(v28, v40)) {
              goto LABEL_31;
            }
            uint64_t v41 = swift_slowAlloc();
            *(_DWORD *)uint64_t v41 = 134218496;
            unint64_t v44 = v21;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v41 + 12) = 2048;
            unint64_t v44 = v39;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v41 + 22) = 1024;
            LODWORD(v44) = v39 >= v21;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v31 = "sceneDidBecomeActive: Tracking result - secondsLimit=%llu secondsElapsed=%llu isLocked=%{BOOL}d";
            int64_t v32 = v28;
            os_log_type_t v33 = v40;
            uint64_t v34 = (uint8_t *)v41;
            uint32_t v35 = 28;
            goto LABEL_30;
          }
LABEL_32:
          swift_beginAccess();
          if (!v45) {
            goto LABEL_34;
          }
          swift_retain();
          sub_1005CA384(2u, 1, v10, v1);
          swift_release();
          break;
      }
    }

    return;
  }
  os_log_t v43 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v12, "sceneDidBecomeActive: Lock already enforced.", v13, 2u);
    swift_slowDealloc();
  }

LABEL_11:
  os_log_t v16 = v43;
}

void sub_100084310()
{
}

uint64_t sub_100084334(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_100010218(&qword_100812AD0);
  __chkstk_darwin(v10 - 8);
  os_log_type_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  os_log_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a3, (uint64_t)v12, &qword_100812AD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_10001457C((uint64_t)v12, &qword_100812AD0);
  }
  uint64_t v26 = a1;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (a5)
  {
    uint64_t v27 = a4;
    unint64_t v28 = a5;
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = 8250;
    v18._object = (void *)0xE200000000000000;
    String.append(_:)(v18);
    uint64_t v20 = v27;
    unint64_t v19 = v28;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v23 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10011EA98(v20, v19, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10011EA98(v26, a2, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_100084684()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext;
  if (*(void *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext))
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "onAuthenticateRequested: Attempted to authenticate when there was already another active auth attempt.", v4, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)LAContext) init];
    uint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v7 = v5;

    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "onAuthenticateRequested: Starting new auth attempt...", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = [self mainBundle];
    v19._uint64_t countAndFlagsBits = 0xD000000000000054;
    v19._object = (void *)0x8000000100689C70;
    v12._object = (void *)0x8000000100689C50;
    v12._uint64_t countAndFlagsBits = 0xD000000000000013;
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v19);

    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100087884;
    aBlock[5] = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003DFC24;
    aBlock[3] = &unk_100798820;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 evaluatePolicy:2 localizedReason:v14 reply:v15];
    _Block_release(v15);
  }
}

uint64_t sub_10008494C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  id v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  Swift::String v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_1000878E4;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100798870;
  NSString v14 = _Block_copy(aBlock);
  swift_retain();
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000875CC((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v16[0]);
  return swift_release();
}

void sub_100084C38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext;
  if (*(void *)(v1 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext))
  {
    uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window);
    if (v5)
    {
      id v6 = [v5 rootViewController];
      if (v6)
      {
        id v20 = v6;
        type metadata accessor for AppSecureAccessViewController();
        uint64_t v7 = swift_dynamicCastClass();
        if (v7)
        {
          id v8 = (unsigned __int8 *)v7;
          uint64_t v9 = *(void **)(v2 + v3);
          *(void *)(v2 + v3) = 0;

          if (a1
            && (uint64_t v22 = a1,
                swift_errorRetain(),
                sub_100010218((uint64_t *)&unk_1007FC0D0),
                type metadata accessor for LAError(0),
                (swift_dynamicCast() & 1) != 0))
          {
            id v10 = v21;
            id v11 = Logger.logObject.getter();
            os_log_type_t v12 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v11, v12))
            {
              uint64_t v13 = (uint8_t *)swift_slowAlloc();
              NSString v14 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v13 = 138412290;
              id v19 = v10;
              id v15 = v10;
              uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *NSString v14 = v22;

              id v10 = v19;
              _os_log_impl((void *)&_mh_execute_header, v11, v12, "onAuthenticateComplete: Attempt failed w/ error - %@", v13, 0xCu);
              sub_100010218((uint64_t *)&unk_1007FC430);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            sub_1000875CC(&qword_1007F89E0, type metadata accessor for LAError);
            _BridgedStoredNSError.code.getter();
            if (v22 == -9)
            {

              return;
            }
            sub_1005C8E5C(3u, 1, v8);
          }
          else
          {
            os_log_t v16 = Logger.logObject.getter();
            os_log_type_t v17 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v16, v17))
            {
              Swift::String v18 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)Swift::String v18 = 0;
              _os_log_impl((void *)&_mh_execute_header, v16, v17, "onAuthenticateComplete: Attempt succeeded!", v18, 2u);
              swift_slowDealloc();
            }

            sub_100084F90();
          }
        }
        else
        {
        }
      }
    }
  }
}

uint64_t sub_100084F90()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  uint64_t v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v6 = __chkstk_darwin(v5);
  id v8 = &v26[-v7];
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v9(&v26[-v7], v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_logger, v1, v6);
  id v10 = *(void **)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window);
  if (v10)
  {
    id v11 = v10;
    id v12 = [v11 rootViewController];
    if (v12)
    {
      uint64_t v13 = v12;
      type metadata accessor for AppSecureAccessViewController();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        uint64_t v28 = v14;
        int v15 = 1;
        if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_isNewAppLaunch) & 1) == 0) {
          int v15 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp + 8) ^ 1;
        }
        int v27 = v15;
        *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_isNewAppLaunch) = 0;
        uint64_t v16 = v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp;
        *(void *)uint64_t v16 = 0;
        *(unsigned char *)(v16 + 8) = 1;
        ((void (*)(unsigned char *, unsigned char *, uint64_t))v9)(v4, v8, v1);
        unint64_t v17 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        unint64_t v18 = (v3 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v11;
        (*(void (**)(unint64_t, unsigned char *, uint64_t))(v2 + 32))(v19 + v17, v4, v1);
        unint64_t v20 = v19 + v18;
        *(void *)unint64_t v20 = v0;
        *(unsigned char *)(v20 + 8) = v27 & 1;
        id v21 = v11;
        swift_retain();
        sub_1005C920C(0, 1, sub_1000877EC, v19);

        swift_release();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v8, v1);
      }
    }
    else
    {
      uint64_t v13 = v11;
    }
  }
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "onAppUnlocked: Attempted to advertise app unlock before window was ready!", v24, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v8, v1);
}

void sub_10008528C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6 = [a1 windowScene];
  if (v6 && (v7 = v6, id v8 = [v6 activationState], v7, !v8))
  {
    uint64_t v12 = OBJC_IVAR____TtC7Journal22AppSecureAccessManager_unlockRequestedWhileWindowInactive;
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_unlockRequestedWhileWindowInactive) & 1) != 0
      || (a4 & 1) != 0)
    {
      swift_retain();
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 67109376;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        *(_WORD *)(v15 + 8) = 1024;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "onAppUnlocked: Advertising unlock! (deferred=%{BOOL}d current=%{BOOL}d)", (uint8_t *)v15, 0xEu);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }

      id v16 = [self defaultCenter];
      if (qword_1007F6960 != -1) {
        swift_once();
      }
      [v16 postNotificationName:qword_10083CEC8 object:0];
    }
    *(unsigned char *)(a3 + v12) = 0;
  }
  else
  {
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "onAppUnlocked: Unlock requested while window still inactive, made note of unlock request.", v11, 2u);
      swift_slowDealloc();
    }

    *(unsigned char *)(a3 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_unlockRequestedWhileWindowInactive) = 1;
  }
}

uint64_t sub_1000854E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  sub_100010218(&qword_1007FBAF8);
  v3[8] = swift_task_alloc();
  uint64_t v4 = sub_100010218(&qword_1007FBB00);
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_100010218(&qword_1007FBB08);
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  sub_100010218(&qword_1007FA1D0);
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for MainActor();
  v3[17] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[18] = v7;
  v3[19] = v6;
  return _swift_task_switch(sub_1000856A4, v7, v6);
}

uint64_t sub_1000856A4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = (void *)v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = type metadata accessor for TaskPriority();
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v1, 1, 1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  void v9[3] = 0;
  void v9[4] = v6;
  sub_100085FE4(v1, (uint64_t)&unk_1007FBB18, (uint64_t)v9);
  sub_10001457C(v1, &qword_1007FA1D0);
  v8(v1, 1, 1, v7);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  sub_100085FE4(v1, (uint64_t)&unk_1007FBB28, v10);
  sub_10001457C(v1, &qword_1007FA1D0);
  v0[2] = *v5;
  sub_100010218(&qword_1007FBB30);
  sub_100014488(&qword_1007FBB38, &qword_1007FBB30);
  AsyncPrefixSequence.init(_:count:)();
  AsyncPrefixSequence.base.getter();
  TaskGroup.makeAsyncIterator()();
  AsyncPrefixSequence.count.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  AsyncPrefixSequence.Iterator.init(_:count:)();
  uint64_t v11 = static MainActor.shared.getter();
  v0[20] = v11;
  os_log_type_t v14 = (char *)&dword_1007FBB40 + dword_1007FBB40;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100085964;
  return ((uint64_t (*)(uint64_t, void *, void *))v14)(v11, &protocol witness table for MainActor, v0 + 4);
}

uint64_t sub_100085964(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 176) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  return _swift_task_switch(sub_100085AB0, v4, v3);
}

uint64_t sub_100085AB0()
{
  int v1 = *(unsigned __int8 *)(v0 + 176);
  swift_release();
  if (v1 == 2)
  {
    char v2 = 0;
  }
  else
  {
    char v2 = *(unsigned char *)(v0 + 176) & 1;
    TaskGroup.cancelAll()();
  }
  uint64_t v3 = *(unsigned char **)(v0 + 40);
  (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100085B9C(uint64_t a1)
{
  v1[3] = a1;
  sub_100010218(&qword_100806050);
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_100085C8C, 0, 0);
}

uint64_t sub_100085C8C()
{
  id v1 = [self defaultCenter];
  if (qword_1007F6960 != -1) {
    swift_once();
  }
  NSNotificationCenter.notifications(named:object:)();

  NSNotificationCenter.Notifications.makeAsyncIterator()();
  uint64_t v2 = sub_1000875CC(&qword_1007FBB50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100085DE8;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_100085DE8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100087910;
  }
  else {
    uint64_t v2 = sub_100085EFC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100085EFC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
  uint64_t v2 = type metadata accessor for Notification();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    char v3 = 0;
  }
  else
  {
    sub_10001457C(*(void *)(v0 + 32), &qword_100806050);
    char v3 = 1;
  }
  **(unsigned char **)(v0 + 24) = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100085FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v10, &qword_1007FA1D0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001457C((uint64_t)v10, &qword_1007FA1D0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  unint64_t v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    unint64_t v18 = v21;
    void v21[2] = v13;
    void v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1000861E8(uint64_t a1)
{
  v1[3] = a1;
  sub_100010218(&qword_100806050);
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000862D8, 0, 0);
}

uint64_t sub_1000862D8()
{
  id v1 = [self defaultCenter];
  NSNotificationCenter.notifications(named:object:)();

  NSNotificationCenter.Notifications.makeAsyncIterator()();
  uint64_t v2 = sub_1000875CC(&qword_1007FBB50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  char v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *char v3 = v0;
  v3[1] = sub_100086408;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_100086408()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000865F8;
  }
  else {
    uint64_t v2 = sub_10008651C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008651C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
  uint64_t v2 = type metadata accessor for Notification();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) != 1) {
    sub_10001457C(*(void *)(v0 + 32), &qword_100806050);
  }
  **(unsigned char **)(v0 + 24) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  char v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000865F8()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_10008667C(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  if (a1)
  {
    swift_getObjectType();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v3[13] = v4;
  v3[14] = v6;
  return _swift_task_switch(sub_10008671C, v4, v6);
}

uint64_t sub_10008671C()
{
  sub_100010218(&qword_1007FBB08);
  if (AsyncPrefixSequence.Iterator.remaining.getter())
  {
    uint64_t v1 = (void (*)(void *, void))AsyncPrefixSequence.Iterator.remaining.modify();
    --*v2;
    v1(v0 + 2, 0);
    v0[15] = AsyncPrefixSequence.Iterator.baseIterator.modify();
    sub_100010218(&qword_1007FBAF8);
    sub_100014488(&qword_1007FBB48, &qword_1007FBAF8);
    char v3 = (void *)swift_task_alloc();
    v0[16] = v3;
    *char v3 = v0;
    v3[1] = sub_1000868BC;
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[11];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0 + 17, v4, v5);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(2);
  }
}

uint64_t sub_1000868BC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100086A00;
  }
  else
  {
    (*(void (**)(void))(v2 + 120))();
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_1000869E4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000869E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t sub_100086A00()
{
  (*(void (**)(void))(v0 + 120))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100086A74()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100086B34()
{
  return type metadata accessor for AppSecureAccessManager();
}

uint64_t type metadata accessor for AppSecureAccessManager()
{
  uint64_t result = qword_1007FB968;
  if (!qword_1007FB968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100086B88()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100086C38()
{
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_window) = 0;
  uint64_t v3 = v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_backgroundedAtNanoStamp;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_activeAuthContext) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_unlockRequestedWhileWindowInactive) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal22AppSecureAccessManager_isNewAppLaunch) = 0;
  return v0;
}

uint64_t sub_100086D3C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100086E1C;
  return v5(v2 + 32);
}

uint64_t sub_100086E1C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

id sub_100086F30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100812AD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v8, &qword_100812AD0);
  if (sub_10035EE44() == 4)
  {
    sub_100084334(0xD00000000000002ALL, 0x8000000100689B80, (uint64_t)v8, a2, a3);
    sub_10001457C((uint64_t)v8, &qword_100812AD0);
    return 0;
  }
  id v9 = [objc_allocWithZone((Class)LAContext) init];
  if (![v9 canEvaluatePolicy:2 error:0])
  {
    sub_100084334(0xD00000000000002ELL, 0x8000000100689BB0, (uint64_t)v8, a2, a3);
    sub_10001457C((uint64_t)v8, &qword_100812AD0);
    [v9 invalidate];

    return 0;
  }
  if ([v9 canEvaluatePolicy:1 error:0])
  {
    id v10 = [v9 biometryType];
    uint64_t v11 = (void *)0xE700000000000000;
    uint64_t v12 = 0x4449636974706FLL;
    switch((unint64_t)v10)
    {
      case 0uLL:
        uint64_t v11 = (void *)0xE400000000000000;
        uint64_t v12 = 1701736302;
        break;
      case 1uLL:
        uint64_t v12 = 0x44496863756F74;
        break;
      case 2uLL:
        uint64_t v11 = (void *)0xE600000000000000;
        uint64_t v12 = 0x444965636166;
        break;
      case 4uLL:
        break;
      default:
        v18[0] = 0;
        v18[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(16);
        swift_bridgeObjectRelease();
        strcpy((char *)v18, "unrecognized(");
        HIWORD(v18[1]) = -4864;
        v17[1] = v10;
        v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v14);
        swift_bridgeObjectRelease();
        v15._uint64_t countAndFlagsBits = 41;
        v15._object = (void *)0xE100000000000000;
        String.append(_:)(v15);
        uint64_t v12 = v18[0];
        uint64_t v11 = (void *)v18[1];
        break;
    }
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    v18[0] = 0x797274656D6F6962;
    v18[1] = 0xEF3D6B6365686320;
    v16._uint64_t countAndFlagsBits = v12;
    v16._object = v11;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    sub_100084334(v18[0], v18[1], (uint64_t)v8, a2, a3);
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v8, &qword_100812AD0);
    [v9 invalidate];
  }
  else
  {
    sub_100084334(0xD000000000000034, 0x8000000100689BE0, (uint64_t)v8, a2, a3);
    sub_10001457C((uint64_t)v8, &qword_100812AD0);
    [v9 invalidate];

    return 0;
  }
  return v10;
}

unint64_t sub_1000872E4()
{
  unint64_t result = qword_100804000;
  if (!qword_100804000)
  {
    sub_10001B284(255, (unint64_t *)&qword_10080CF00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100804000);
  }
  return result;
}

uint64_t sub_10008734C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100052588;
  return sub_1000854E4(a1, a2, v6);
}

uint64_t sub_1000873FC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100087434(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100052588;
  return sub_100085B9C(a1);
}

uint64_t sub_1000874E8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100087520(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10002C194;
  return sub_1000861E8(a1);
}

uint64_t sub_1000875CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100087614()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10008764C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002C194;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1007FBB58 + dword_1007FBB58);
  return v6(a1, v4);
}

uint64_t sub_100087704()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1000877EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Logger() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  sub_10008528C(v3, v4, v6, v7);
}

uint64_t sub_100087884(uint64_t a1, uint64_t a2)
{
  return sub_10008494C(a1, a2, v2);
}

uint64_t sub_10008788C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008789C()
{
  return swift_release();
}

uint64_t sub_1000878A4()
{
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

void sub_1000878E4()
{
  sub_100084C38(*(void *)(v0 + 24));
}

uint64_t sub_10008791C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100087990()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

char *sub_100087A04(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_100010218(&qword_1007FBC00);
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for UIView.Invalidations.Layout();
  __chkstk_darwin(v45);
  uint64_t v11 = sub_100010218(&qword_1007FBC08);
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ColorResource();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView;
  id v18 = objc_allocWithZone((Class)UIView);
  uint64_t v19 = v4;
  *(void *)&v4[v17] = [v18 init];
  uint64_t v20 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_fillView;
  *(void *)&v19[v20] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v21 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView;
  *(void *)&v19[v21] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v22 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView__fillColor;
  sub_100088B50();
  if (qword_1007F7F38 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100026A54(v13, (uint64_t)qword_10083EEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v23, v13);
  id v50 = (id)UIColor.init(resource:)();
  id v24 = v50;
  UIView.Invalidations.Layout.init()();
  sub_100088B90();
  uint64_t v25 = v42;
  UIView.Invalidating.init(wrappedValue:_:)();

  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v19[v22], v25, v44);
  uint64_t v26 = &v19[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView__colorVariant];
  LOBYTE(v50) = 3;
  UIView.Invalidations.Layout.init()();
  sub_100010218(&qword_1007FBBE8);
  sub_100088C78();
  int v27 = v46;
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v26, v27, v48);

  uint64_t v28 = (objc_class *)type metadata accessor for ThirdPartyMediaColorEffectView();
  v49.receiver = v19;
  v49.super_class = v28;
  uint64_t v29 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v30 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_fillView;
  uint64_t v31 = *(void **)&v29[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_fillView];
  int64_t v32 = v29;
  id v33 = v31;
  [v32 bounds];
  [v33 setFrame:];

  uint64_t v34 = *(void **)&v29[v30];
  [v34 setAutoresizingMask:18];
  [v34 setContentMode:2];
  [v32 addSubview:v34];
  uint64_t v35 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView;
  id v36 = *(id *)&v32[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView];
  [v32 bounds];
  [v36 setFrame:];

  __uint64_t v37 = *(void **)&v32[v35];
  [v37 setAutoresizingMask:18];
  [v32 addSubview:v37];
  uint64_t v38 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView;
  id v39 = *(id *)&v32[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView];
  [v32 bounds];
  [v39 setFrame:];

  os_log_type_t v40 = *(void **)&v32[v38];
  [v40 setAutoresizingMask:18];
  [v32 addSubview:v40];

  return v32;
}

uint64_t sub_100087F6C(void *a1)
{
  uint64_t v2 = v1;
  id v38 = a1;
  uint64_t v3 = sub_100010218(&qword_1007FBC00);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  __chkstk_darwin(v3);
  __uint64_t v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for UIView.Invalidations.Layout();
  __chkstk_darwin(v34);
  uint64_t v5 = sub_100010218(&qword_1007FBC08);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  __chkstk_darwin(v5);
  int64_t v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorResource();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView;
  id v12 = objc_allocWithZone((Class)UIView);
  uint64_t v13 = v2;
  id v14 = [v12 init];
  id v39 = v2;
  uint64_t v33 = v11;
  *(void *)&v2[v11] = v14;
  uint64_t v15 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_fillView;
  id v16 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v31 = v15;
  *(void *)&v13[v15] = v16;
  uint64_t v17 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView;
  *(void *)&v13[v17] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v18 = OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView__fillColor;
  sub_100088B50();
  if (qword_1007F7F38 != -1) {
    swift_once();
  }
  uint64_t v19 = &v13[v18];
  uint64_t v20 = sub_100026A54(v7, (uint64_t)qword_10083EEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
  id v43 = (id)UIColor.init(resource:)();
  id v21 = v43;
  UIView.Invalidations.Layout.init()();
  sub_100088B90();
  uint64_t v22 = v32;
  UIView.Invalidating.init(wrappedValue:_:)();

  uint64_t v24 = v35;
  uint64_t v23 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v19, v22, v36);
  uint64_t v25 = &v13[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView__colorVariant];
  char v42 = 3;
  UIView.Invalidations.Layout.init()();
  sub_100010218(&qword_1007FBBE8);
  sub_100088C78();
  uint64_t v26 = v37;
  UIView.Invalidating.init(wrappedValue:_:)();

  uint64_t v28 = v40;
  uint64_t v27 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v25, v26, v41);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);

  type metadata accessor for ThirdPartyMediaColorEffectView();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_100088430()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for ThirdPartyMediaColorEffectView();
  [super layoutSubviews];
  unsigned __int8 v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_fillView];
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  [v1 setBackgroundColor:v18];

  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  switch((char)v18)
  {
    case 1:
      goto LABEL_4;
    case 2:
      goto LABEL_5;
    case 3:
      swift_getKeyPath();
      swift_getKeyPath();
      static UIView.Invalidating.subscript.getter();
      swift_release();
      swift_release();
      id v7 = [v18 CGColor];
      UISColorLuminance();
      double v9 = v8;

      if (v9 <= 0.1)
      {
LABEL_5:
        [v0 setOverrideUserInterfaceStyle:2];
        id v14 = *(void **)&v0[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView];
        id v15 = [self systemWhiteColor];
        id v16 = [v15 colorWithAlphaComponent:0.13];

        [v14 setBackgroundColor:v16];
        id v13 = [v14 layer];
      }
      else
      {
LABEL_4:
        [v0 setOverrideUserInterfaceStyle:2];
        uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView];
        id v11 = [self systemBlackColor];
        id v12 = [v11 colorWithAlphaComponent:0.6];

        [v10 setBackgroundColor:v12];
        id v13 = [v10 layer];
      }
      id v5 = v13;
      [v5 setCompositingFilter:0];
      uint64_t v6 = &kCAFilterPlusL;
      break;
    default:
      [v0 setOverrideUserInterfaceStyle:1];
      uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_overlayView];
      id v3 = [self systemWhiteColor];
      id v4 = [v3 colorWithAlphaComponent:0.78];

      [v2 setBackgroundColor:v4];
      id v5 = [v2 layer];
      [v5 setCompositingFilter:kCAFilterPlusL];
      uint64_t v6 = &kCAFilterPlusD;
      break;
  }

  id v17 = [*(id *)&v0[OBJC_IVAR____TtC7Journal30ThirdPartyMediaColorEffectView_contentView] layer];
  [v17 setCompositingFilter:*v6];
}

id sub_10008886C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThirdPartyMediaColorEffectView();
  return [super dealloc];
}

uint64_t sub_100088990()
{
  return type metadata accessor for ThirdPartyMediaColorEffectView();
}

uint64_t type metadata accessor for ThirdPartyMediaColorEffectView()
{
  uint64_t result = qword_1007FBBC0;
  if (!qword_1007FBBC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000889E4()
{
  sub_100088AC4();
  if (v0 <= 0x3F)
  {
    sub_100088BE8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100088AC4()
{
  if (!qword_1007FBBD0)
  {
    sub_100088B50();
    type metadata accessor for UIView.Invalidations.Layout();
    sub_100088B90();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007FBBD0);
    }
  }
}

unint64_t sub_100088B50()
{
  unint64_t result = qword_1007FC140;
  if (!qword_1007FC140)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007FC140);
  }
  return result;
}

unint64_t sub_100088B90()
{
  unint64_t result = qword_1007FBBD8;
  if (!qword_1007FBBD8)
  {
    sub_100088B50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBBD8);
  }
  return result;
}

void sub_100088BE8()
{
  if (!qword_1007FBBE0)
  {
    sub_100014440(&qword_1007FBBE8);
    type metadata accessor for UIView.Invalidations.Layout();
    sub_100088C78();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007FBBE0);
    }
  }
}

unint64_t sub_100088C78()
{
  unint64_t result = qword_1007FBBF0;
  if (!qword_1007FBBF0)
  {
    sub_100014440(&qword_1007FBBE8);
    sub_100088CEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBBF0);
  }
  return result;
}

unint64_t sub_100088CEC()
{
  unint64_t result = qword_1007FBBF8;
  if (!qword_1007FBBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBBF8);
  }
  return result;
}

uint64_t sub_100088F58()
{
  uint64_t v1 = self;
  id v2 = [v1 clearColor];
  [v0 setBackgroundColor:v2];

  [v0 setScrollEnabled:0];
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v3 = [v0 textContainer];
  [v3 setLineFragmentPadding:0.0];

  [v0 setAllowsEditingTextAttributes:0];
  id v4 = [v0 _placeholderLabel];
  if (v4)
  {
    id v5 = v4;
    [v4 setIsAccessibilityElement:0];
  }
  if (qword_1007F7A80 != -1) {
    swift_once();
  }
  NSString v6 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityLabel:v6];

  id v7 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline compatibleWithTraitCollection:0];
  id v19 = v7;
  long long v17 = xmmword_100791F68;
  char v18 = 0;
  sub_10021B55C(&v19, (uint64_t *)&v17, &v16);

  double v8 = v16;
  id v9 = [self fontWithDescriptor:v16 size:0.0];

  [v0 setFont:v9];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v10 = [v1 labelColor];
  [v0 setTextColor:v10];

  if (qword_1007F7568 != -1) {
    swift_once();
  }
  id v11 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithString:v12 attributes:0];

  [v0 setAttributedPlaceholder:v13];
  [v0 setPasteDelegate:v0];
  sub_100010218(&qword_1007FBD30);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1006D6270;
  *(void *)(v14 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v14 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v14 + 48) = type metadata accessor for UITraitLegibilityWeight();
  *(void *)(v14 + 56) = &protocol witness table for UITraitLegibilityWeight;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1000892FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  if (a2)
  {
    sub_100014344();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for CanvasMomentsTitleView();
  [super setMarkedText:v8 selectedRange:a3];
}

id sub_10008953C@<X0>(void *a1@<X8>)
{
  if ([v1 isFirstResponder])
  {
    a1[3] = type metadata accessor for CanvasMomentsTitleView();
    *a1 = v4;
    return v4;
  }
  else
  {
    v6.receiver = v4;
    v6.super_class = (Class)type metadata accessor for CanvasMomentsTitleView();
    if (objc_msgSendSuper2(&v6, "_accessibilityResponderElement"))
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_1000685B8((uint64_t)v5, (uint64_t)v7);
    return (id)sub_1000685B8((uint64_t)v7, (uint64_t)a1);
  }
}

id sub_100089748()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasMomentsTitleView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasMomentsTitleView()
{
  return self;
}

void sub_1000897B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      uint64_t v15 = v14;
      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      uint64_t v21 = v7;
      swift_unknownObjectRetain();
      uint64_t v20 = static OS_dispatch_queue.main.getter();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      long long v17 = (void *)swift_allocObject();
      void v17[2] = v16;
      v17[3] = v15;
      v17[4] = a4;
      aBlock[4] = sub_100089F44;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      aBlock[3] = &unk_100798938;
      char v18 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10004F6A0();
      sub_100010218(&qword_100804DB0);
      sub_10001B1BC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v19 = (void *)v20;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v18);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
}

void sub_100089AB4(uint64_t a1, void *a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = [a2 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v15 = sub_100014344();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone((Class)NSAttributedString);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v10 = [v8 initWithString:v9];

    id v11 = [v6 traitCollection];
    id v12 = v10;
    id v13 = [v6 font];
    uint64_t v14 = (void *)sub_100020C00(v11, v10, v13, 0.0);

    if (v14)
    {
      [a3 setAttributedStringResult:v14];
    }
  }
}

void sub_100089CF4(void *a1)
{
  id v3 = [a1 itemProvider];
  sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unsigned int v5 = [v3 canLoadObjectOfClass:ObjCClassFromMetadata];

  if (v5)
  {
    id v6 = [a1 itemProvider];
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = a1;
    v11[4] = sub_100089EA4;
    v11[5] = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1005A8848;
    v11[3] = &unk_1007988C0;
    id v8 = _Block_copy(v11);
    id v9 = v1;
    swift_unknownObjectRetain();
    swift_release();
    id v10 = [v6 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v8];
    _Block_release(v8);
  }
}

uint64_t sub_100089E64()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_100089EA4(uint64_t a1, uint64_t a2)
{
  sub_1000897B0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100089EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100089EBC()
{
  return swift_release();
}

uint64_t sub_100089EC4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100089EFC()
{
  swift_release();

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_100089F44()
{
  sub_100089AB4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_100089F5C()
{
  unint64_t result = qword_1007FBD38;
  if (!qword_1007FBD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD38);
  }
  return result;
}

unint64_t sub_100089FB4()
{
  unint64_t result = qword_1007FBD40;
  if (!qword_1007FBD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD40);
  }
  return result;
}

unint64_t sub_10008A00C()
{
  unint64_t result = qword_1007FBD48;
  if (!qword_1007FBD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD48);
  }
  return result;
}

unint64_t sub_10008A064()
{
  unint64_t result = qword_1007FBD50;
  if (!qword_1007FBD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD50);
  }
  return result;
}

uint64_t sub_10008A0B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008A0D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008A124(uint64_t a1)
{
  v1[3] = a1;
  v1[4] = type metadata accessor for AppLaunchAction();
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10008A248, v4, v3);
}

uint64_t sub_10008A248()
{
  swift_release();
  if (qword_1007F6DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D360;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    v0[2] = v3;
    char v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(ObjectType);
    swift_unknownObjectRelease();
    if (v6)
    {
      sub_10008A900();
      swift_allocError();
      unsigned char *v7 = 3;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      id v8 = (uint64_t (*)(void))v0[1];
      goto LABEL_14;
    }
  }
  UUID.init()();
  UUID.uuidString.getter();
  id v9 = [self sharedApplication];
  id v10 = [v9 connectedScenes];
  sub_10008A864();
  sub_1000872E4();
  uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v12 = (void *)sub_1003F1F90(v11);
  swift_bridgeObjectRelease();
  if (v12)
  {
    self;
    uint64_t v13 = swift_dynamicCastObjCClass();
    if (v13)
    {
      uint64_t v14 = (void *)v13;

      if ([v14 delegate])
      {
        type metadata accessor for SceneDelegate();
        if (swift_dynamicCastClass())
        {
          uint64_t v15 = v0[5];
          uint64_t v16 = type metadata accessor for WidgetFamily();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
          long long v17 = (int *)type metadata accessor for CanvasStartingState();
          uint64_t v18 = v15 + v17[6];
          uint64_t v19 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
          uint64_t v20 = (void *)(v15 + v17[5]);
          *uint64_t v20 = 0;
          v20[1] = 0;
          *(unsigned char *)(v15 + v17[7]) = 33;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRelease();
          sub_100356004(v15);
          swift_unknownObjectRelease();

          sub_10008A8A4(v15);
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v22 = v0[7];
  uint64_t v21 = v0[8];
  uint64_t v23 = v0[6];
  static IntentResult.result<>()();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
LABEL_14:
  return v8();
}

uint64_t sub_10008A5F0(uint64_t a1)
{
  unint64_t v2 = sub_10008A954();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t static AudioRecordingActivityState.__derived_struct_equals(_:_:)()
{
  return 1;
}

uint64_t sub_10008A644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  uint64_t v3 = type metadata accessor for IntentAuthenticationPolicy();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_10008A6C4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10002C194;
  return sub_10008A124(a1);
}

uint64_t sub_10008A75C(uint64_t a1)
{
  unint64_t v2 = sub_100089FB4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10008A79C()
{
  unint64_t result = qword_1007FBD60;
  if (!qword_1007FBD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD60);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateEntryAudioIntent()
{
  return &type metadata for CreateEntryAudioIntent;
}

unint64_t sub_10008A808()
{
  unint64_t result = qword_1007FBD68;
  if (!qword_1007FBD68)
  {
    sub_100014440(&qword_1007FBD70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD68);
  }
  return result;
}

unint64_t sub_10008A864()
{
  unint64_t result = qword_10080CF00;
  if (!qword_10080CF00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080CF00);
  }
  return result;
}

uint64_t sub_10008A8A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008A900()
{
  unint64_t result = qword_1007FBD80;
  if (!qword_1007FBD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD80);
  }
  return result;
}

unint64_t sub_10008A954()
{
  unint64_t result = qword_1007FBD88;
  if (!qword_1007FBD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBD88);
  }
  return result;
}

__n128 initializeWithCopy for EntriesAdminBatchSettings(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EntriesAdminBatchSettings(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EntriesAdminBatchSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntriesAdminBatchSettings()
{
  return &type metadata for EntriesAdminBatchSettings;
}

uint64_t sub_10008AA70()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 28));
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    BOOL v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      id v5 = (id)HKUILocalizedStringForStateOfMindLabel();
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v4 = sub_1002A54A0(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1) {
        BOOL v4 = sub_1002A54A0((char *)(v9 > 1), v10 + 1, 1, v4);
      }
      ++v3;
      *((void *)v4 + 2) = v10 + 1;
      uint64_t v11 = &v4[16 * v10];
      *((void *)v11 + 4) = v6;
      *((void *)v11 + 5) = v8;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    BOOL v4 = (char *)_swiftEmptyArrayStorage;
  }
  if (*((void *)v4 + 2) < 3uLL)
  {
    if (qword_1007F7468 != -1) {
      swift_once();
    }
    sub_100010218(&qword_100800A70);
    sub_1000245BC();
    uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v13 = *((void *)v4 + 4);
    uint64_t v12 = *((void *)v4 + 5);
    uint64_t v15 = *((void *)v4 + 6);
    uint64_t v14 = *((void *)v4 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_1007F75C0 != -1) {
      swift_once();
    }
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1006D6270;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v17 = sub_10001B2C0();
    *(void *)(v16 + 32) = v13;
    *(void *)(v16 + 40) = v12;
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v17;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 72) = v15;
    *(void *)(v16 + 80) = v14;
    uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    return v18;
  }
}

uint64_t sub_10008ACF8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 32));
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    BOOL v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      HKStateOfMindDomainFromAssociation();
      id v5 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v4 = sub_1002A54A0(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1) {
        BOOL v4 = sub_1002A54A0((char *)(v9 > 1), v10 + 1, 1, v4);
      }
      ++v3;
      *((void *)v4 + 2) = v10 + 1;
      uint64_t v11 = &v4[16 * v10];
      *((void *)v11 + 4) = v6;
      *((void *)v11 + 5) = v8;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    BOOL v4 = (char *)_swiftEmptyArrayStorage;
  }
  if (*((void *)v4 + 2) < 3uLL)
  {
    if (qword_1007F7468 != -1) {
      swift_once();
    }
    sub_100010218(&qword_100800A70);
    sub_1000245BC();
    uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v13 = *((void *)v4 + 4);
    uint64_t v12 = *((void *)v4 + 5);
    uint64_t v15 = *((void *)v4 + 6);
    uint64_t v14 = *((void *)v4 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_1007F75C0 != -1) {
      swift_once();
    }
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1006D6270;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v17 = sub_10001B2C0();
    *(void *)(v16 + 32) = v13;
    *(void *)(v16 + 40) = v12;
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v17;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 72) = v15;
    *(void *)(v16 + 80) = v14;
    uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    return v18;
  }
}

uint64_t sub_10008AF84()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 28));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = 0;
      BOOL v4 = (char *)_swiftEmptyArrayStorage;
      do
      {
        id v5 = (id)HKUILocalizedStringForStateOfMindLabel();
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v7;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v4 = sub_1002A54A0(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v10 = *((void *)v4 + 2);
        unint64_t v9 = *((void *)v4 + 3);
        if (v10 >= v9 >> 1) {
          BOOL v4 = sub_1002A54A0((char *)(v9 > 1), v10 + 1, 1, v4);
        }
        ++v3;
        *((void *)v4 + 2) = v10 + 1;
        uint64_t v11 = &v4[16 * v10];
        *((void *)v11 + 4) = v6;
        *((void *)v11 + 5) = v8;
      }
      while (v2 != v3);
      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_1007F7468 != -1) {
    swift_once();
  }
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10008B130()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 32));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = 0;
      BOOL v4 = (char *)_swiftEmptyArrayStorage;
      do
      {
        HKStateOfMindDomainFromAssociation();
        id v5 = (id)HKUILocalizedStringForStateOfMindDomain();
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v7;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v4 = sub_1002A54A0(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v10 = *((void *)v4 + 2);
        unint64_t v9 = *((void *)v4 + 3);
        if (v10 >= v9 >> 1) {
          BOOL v4 = sub_1002A54A0((char *)(v9 > 1), v10 + 1, 1, v4);
        }
        ++v3;
        *((void *)v4 + 2) = v10 + 1;
        uint64_t v11 = &v4[16 * v10];
        *((void *)v11 + 4) = v6;
        *((void *)v11 + 5) = v8;
      }
      while (v2 != v3);
      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_1007F7468 != -1) {
    swift_once();
  }
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_10008B2E4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 40));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    sub_10001B284(0, (unint64_t *)&unk_10080E940);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = (unint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      unint64_t v4 = *v3;
      if (*v3 >> 60 == 15) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = *(v3 - 1);
      }
      if (*v3 >> 60 == 15) {
        unint64_t v7 = 0xC000000000000000;
      }
      else {
        unint64_t v7 = *v3;
      }
      sub_100040F10(*(v3 - 1), *v3);
      sub_100040F10(v5, v4);
      uint64_t v8 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      sub_100040DD0(v6, v7);
      if (v8)
      {
        id v9 = [v8 CGColor];

        sub_100040DBC(v5, v4);
        if (v9)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      else
      {
        sub_100040DBC(v5, v4);
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return &_swiftEmptyArrayStorage;
}

void *sub_10008B6D4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 44));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    sub_10001B284(0, (unint64_t *)&unk_10080E940);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = (unint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      unint64_t v4 = *v3;
      if (*v3 >> 60 == 15) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = *(v3 - 1);
      }
      if (*v3 >> 60 == 15) {
        unint64_t v7 = 0xC000000000000000;
      }
      else {
        unint64_t v7 = *v3;
      }
      sub_100040F10(*(v3 - 1), *v3);
      sub_100040F10(v5, v4);
      uint64_t v8 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      sub_100040DD0(v6, v7);
      if (v8)
      {
        id v9 = [v8 CGColor];

        sub_100040DBC(v5, v4);
        if (v9)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      else
      {
        sub_100040DBC(v5, v4);
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10008BAC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  *(void *)&double v9 = __chkstk_darwin(v8 - 8).n128_u64[0];
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &selRef_drawMapRect_zoomScale_inContext_;
  char v87 = a1;
  uint64_t v88 = a2;
  uint64_t v85 = v5;
  uint64_t v86 = v4;
  uint64_t v84 = v7;
  if (a1)
  {
    id v13 = [a1 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 0, 1, v14);
    uint64_t v15 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
    sub_10002C4EC((uint64_t)v11, (uint64_t)a2 + v15[5], (uint64_t *)&unk_1007FC470);
    id v16 = [a1 reflectiveInterval];
    unint64_t v17 = (char *)a2 + v15[6];
    *(void *)unint64_t v17 = v16;
    v17[8] = 0;
    id v18 = a1;
    uint64_t v19 = HKStateOfMind.labels.getter();

    int64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v89 = _swiftEmptyArrayStorage;
      sub_100095D00(0, v20, 0);
      uint64_t v21 = 0;
      uint64_t v22 = v89;
      unint64_t v23 = *((void *)v89 + 2);
      do
      {
        double v24 = *(double *)(v19 + 8 * v21 + 32);
        uint64_t v89 = v22;
        unint64_t v25 = *((void *)v22 + 3);
        if (v23 >= v25 >> 1)
        {
          sub_100095D00(v25 > 1, v23 + 1, 1);
          uint64_t v22 = v89;
        }
        ++v21;
        *((void *)v22 + 2) = v23 + 1;
        v22[v23++ + 4] = v24;
      }
      while (v20 != v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = _swiftEmptyArrayStorage;
    }
    *(uint64_t *)((char *)v88 + v15[7]) = (uint64_t)v22;
    id v30 = v18;
    uint64_t v31 = HKStateOfMind.associations.getter();

    int64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      uint64_t v89 = _swiftEmptyArrayStorage;
      sub_100095D00(0, v32, 0);
      uint64_t v33 = 0;
      uint64_t v34 = v89;
      unint64_t v35 = *((void *)v89 + 2);
      do
      {
        double v36 = *(double *)(v31 + 8 * v33 + 32);
        uint64_t v89 = v34;
        unint64_t v37 = *((void *)v34 + 3);
        if (v35 >= v37 >> 1)
        {
          sub_100095D00(v37 > 1, v35 + 1, 1);
          uint64_t v34 = v89;
        }
        ++v33;
        *((void *)v34 + 2) = v35 + 1;
        v34[v35++ + 4] = v36;
      }
      while (v32 != v33);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = _swiftEmptyArrayStorage;
    }
    a2 = v88;
    *(uint64_t *)((char *)v88 + v15[8]) = (uint64_t)v34;
    id v38 = [v30 valenceClassification];
    id v39 = (char *)a2 + v15[9];
    *(void *)id v39 = v38;
    v39[8] = 0;
    uint64_t v12 = &selRef_drawMapRect_zoomScale_inContext_;
    [v30 valence];
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
    uint64_t v27 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
    sub_10002C4EC((uint64_t)v11, (uint64_t)a2 + v27[5], (uint64_t *)&unk_1007FC470);
    uint64_t v28 = (char *)a2 + v27[6];
    *(void *)uint64_t v28 = 0;
    v28[8] = 1;
    *(uint64_t *)((char *)a2 + v27[7]) = 0;
    *(uint64_t *)((char *)a2 + v27[8]) = 0;
    uint64_t v29 = (char *)a2 + v27[9];
    *(void *)uint64_t v29 = 0;
    v29[8] = 1;
  }
  sub_10001B284(0, (unint64_t *)&unk_100812C20);
  uint64_t v40 = (void *)static CAGradientLayer.gradientLayerForValence(_:style:)();
  id v41 = [v40 colors];

  if (v41)
  {
    uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v43 = (unint64_t)sub_1000E5298(v42);
    swift_bridgeObjectRelease();
    uint64_t v44 = v87;
    if (!v87) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  unint64_t v43 = 0;
  uint64_t v44 = v87;
  if (v87) {
LABEL_20:
  }
    [v44 v12[506]];
LABEL_22:
  uint64_t v45 = (void *)static CAGradientLayer.gradientLayerForValence(_:style:)();
  id v46 = [v45 colors];

  if (v46)
  {
    uint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v48 = (unint64_t)sub_1000E5298(v47);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v48 = 0;
  }
  objc_super v49 = _swiftEmptyArrayStorage;
  if (!v43) {
    goto LABEL_39;
  }
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v50) {
      goto LABEL_28;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  uint64_t v50 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v50) {
    goto LABEL_38;
  }
LABEL_28:
  uint64_t v89 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100095CE0(0, v50 & ~(v50 >> 63), 0);
  if (v50 < 0)
  {
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v83 = (void *)v48;
  uint64_t v52 = 0;
  objc_super v49 = v89;
  do
  {
    if ((v43 & 0xC000000000000001) != 0) {
      id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v53 = *(id *)(v43 + 8 * v52 + 32);
    }
    unint64_t v54 = v53;
    id v55 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v53];
    uint64_t v56 = sub_10008C30C();
    uint64_t v58 = v57;

    uint64_t v89 = v49;
    unint64_t v60 = *((void *)v49 + 2);
    unint64_t v59 = *((void *)v49 + 3);
    if (v60 >= v59 >> 1)
    {
      sub_100095CE0(v59 > 1, v60 + 1, 1);
      objc_super v49 = v89;
    }
    ++v52;
    *((void *)v49 + 2) = v60 + 1;
    uint64_t v61 = &v49[2 * v60];
    *((void *)v61 + 4) = v56;
    *((void *)v61 + 5) = v58;
  }
  while (v50 != v52);
  swift_bridgeObjectRelease();
  uint64_t v44 = v87;
  a2 = v88;
  unint64_t v48 = (unint64_t)v83;
LABEL_39:
  uint64_t result = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v62 = result;
  *(uint64_t *)((char *)a2 + *(int *)(result + 40)) = (uint64_t)v49;
  uint64_t v63 = _swiftEmptyArrayStorage;
  if (v48)
  {
    if (v48 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v64)
      {
LABEL_42:
        uint64_t v89 = _swiftEmptyArrayStorage;
        uint64_t result = sub_100095CE0(0, v64 & ~(v64 >> 63), 0);
        if ((v64 & 0x8000000000000000) == 0)
        {
          uint64_t v83 = (void *)v62;
          uint64_t v65 = 0;
          uint64_t v63 = v89;
          unint64_t v66 = v48;
          unint64_t v67 = v48 & 0xC000000000000001;
          do
          {
            if (v67) {
              id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v68 = *(id *)(v66 + 8 * v65 + 32);
            }
            uint64_t v69 = v68;
            id v70 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v68];
            uint64_t v71 = sub_10008C30C();
            uint64_t v73 = v72;

            uint64_t v89 = v63;
            unint64_t v75 = *((void *)v63 + 2);
            unint64_t v74 = *((void *)v63 + 3);
            if (v75 >= v74 >> 1)
            {
              sub_100095CE0(v74 > 1, v75 + 1, 1);
              uint64_t v63 = v89;
            }
            ++v65;
            *((void *)v63 + 2) = v75 + 1;
            unint64_t v76 = &v63[2 * v75];
            *((void *)v76 + 4) = v71;
            *((void *)v76 + 5) = v73;
          }
          while (v64 != v65);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v44 = v87;
          a2 = v88;
          uint64_t v62 = (uint64_t)v83;
          goto LABEL_53;
        }
LABEL_58:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v64 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v64) {
        goto LABEL_42;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
LABEL_53:
  *(uint64_t *)((char *)a2 + *(int *)(v62 + 44)) = (uint64_t)v63;
  if (v44)
  {
    id v77 = [v44 UUID];
    uint64_t v78 = v84;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v79 = UUID.uuidString.getter();
    uint64_t v81 = v80;

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v78, v86);
  }
  else
  {
    uint64_t v79 = 0;
    uint64_t v81 = 0;
  }
  *a2 = v79;
  a2[1] = v81;
  return result;
}

uint64_t sub_10008C30C()
{
  id v15 = 0;
  id v1 = [self archivedDataWithRootObject:v0 requiringSecureCoding:1 error:&v15];
  id v2 = v15;
  if (v1)
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6CB0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_1008058D8);
    id v6 = v0;
    swift_errorRetain();
    id v7 = v6;
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412546;
      id v15 = v7;
      id v12 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v7;

      *(_WORD *)(v10 + 12) = 2112;
      swift_errorRetain();
      id v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v15 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v11[1] = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error converting %@ to Data: %@", (uint8_t *)v10, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  return v3;
}

uint64_t sub_10008C5D0()
{
  return sub_10008C30C();
}

unint64_t sub_10008C628(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x736E69616D6F64;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10008C704(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1007FBF08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100090C9C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    os_log_type_t v9 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
    LOBYTE(v13) = 1;
    type metadata accessor for Date();
    sub_10008F3BC(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    sub_100010218(&qword_10080A1D0);
    sub_100090D80(&qword_1007FBF10);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v12 = 6;
    sub_100010218(&qword_1007FBEE8);
    sub_100090E20(&qword_1007FBF18, &qword_1007FBEE8, (void (*)(void))sub_100090DE4);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10008CAAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FBED0);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  os_log_type_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
  __chkstk_darwin(v10);
  char v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  id v30 = a1;
  sub_10002E0BC(a1, v13);
  sub_100090C9C();
  uint64_t v14 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v30);
  }
  uint64_t v15 = (uint64_t)v6;
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  LOBYTE(v32) = 0;
  *char v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v18;
  type metadata accessor for Date();
  LOBYTE(v32) = 1;
  sub_10008F3BC(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC(v15, (uint64_t)v12 + v10[5], (uint64_t *)&unk_1007FC470);
  LOBYTE(v32) = 2;
  uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int64_t v20 = (char *)v12 + v10[6];
  *(void *)int64_t v20 = v19;
  v20[8] = v21 & 1;
  sub_100010218(&qword_10080A1D0);
  char v31 = 3;
  sub_100090D80(&qword_1007FBEE0);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(uint64_t *)((char *)v12 + v10[7]) = v32;
  char v31 = 4;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(uint64_t *)((char *)v12 + v10[8]) = v32;
  LOBYTE(v32) = 5;
  uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  unint64_t v23 = (char *)v12 + v10[9];
  *(void *)unint64_t v23 = v22;
  v23[8] = v24 & 1;
  sub_100010218(&qword_1007FBEE8);
  char v31 = 6;
  sub_100090E20(&qword_1007FBEF0, &qword_1007FBEE8, (void (*)(void))sub_100090CF0);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(uint64_t *)((char *)v12 + v10[10]) = v32;
  char v31 = 7;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  *(uint64_t *)((char *)v12 + v10[11]) = v32;
  sub_100090BD0((uint64_t)v12, v27);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v30);
  return sub_100090B74((uint64_t)v12);
}

unint64_t sub_10008D06C()
{
  return sub_10008C628(*v0);
}

uint64_t sub_10008D074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10008F404(a1, a2);
  *a3 = result;
  return result;
}

void sub_10008D09C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10008D0A8(uint64_t a1)
{
  unint64_t v2 = sub_100090C9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008D0E4(uint64_t a1)
{
  unint64_t v2 = sub_100090C9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10008D120@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10008CAAC(a1, a2);
}

uint64_t sub_10008D138(void *a1)
{
  return sub_10008C704(a1);
}

uint64_t sub_10008D150()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_7;
  }
  swift_retain();
  sub_100039278((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_7:
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_100807640);
    return 0;
  }
  sub_100090C34((uint64_t)v3, (uint64_t)v7, _s16StateOfMindAssetC15StateOfMindDataVMa);
  if (v7[*(int *)(v4 + 36) + 8] & 1) != 0 || (v7[*(int *)(v4 + 24) + 8])
  {
    uint64_t v8 = 0;
  }
  else
  {
    HKStateOfMindReflectiveIntervalFromKind();
    id v9 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_100090B74((uint64_t)v7);
  return v8;
}

uint64_t sub_10008D358(int a1, char a2, id a3)
{
  BOOL v5 = [a3 userInterfaceStyle] != (id)1;
  uint64_t v6 = v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id;

  return sub_1003209E8(v6, v5, 0, 1, 0, 1, a2);
}

uint64_t sub_10008D3C4()
{
  return swift_release();
}

id sub_10008D3D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StateOfMindAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10008D41C()
{
  return _s16StateOfMindAssetCMa(0);
}

uint64_t _s16StateOfMindAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1007FBDB8);
}

uint64_t sub_10008D444()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_10008D488(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v20 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10008D684(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_10008D778(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v18 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10008D924(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10008DB6C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v16 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  return a1;
}

void *sub_10008DCEC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10008DEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008DF10);
}

uint64_t sub_10008DF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10008DFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008DFEC);
}

uint64_t sub_10008DFEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t _s16StateOfMindAssetC15StateOfMindDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1007FBE20);
}

void sub_10008E0D0()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10008E190()
{
  return swift_retain();
}

uint64_t sub_10008E1A0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata) = a1;
  return swift_release();
}

void *sub_10008E1B8()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_6;
  }
  swift_retain();
  sub_100039278((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_100807640);
    return _swiftEmptyArrayStorage;
  }
  sub_100090C34((uint64_t)v3, (uint64_t)v8, _s16StateOfMindAssetC15StateOfMindDataVMa);
  id v9 = [self mainScreen];
  id v10 = [v9 traitCollection];

  id v11 = [v10 userInterfaceStyle];
  if (v11 == (id)1) {
    unint64_t v12 = sub_10008B2E4();
  }
  else {
    unint64_t v12 = sub_10008B6D4();
  }
  if (v12) {
    int v13 = v12;
  }
  else {
    int v13 = _swiftEmptyArrayStorage;
  }
  sub_100090B74((uint64_t)v8);
  return v13;
}

uint64_t sub_10008E3E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v30 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v29 - v9;
  id v11 = [self mainBundle];
  v31._uint64_t countAndFlagsBits = 0x100000000000005ALL;
  v31._object = (void *)0x8000000100689FB0;
  v12._object = (void *)0x8000000100689F70;
  v12._uint64_t countAndFlagsBits = 0x1000000000000035;
  v13._uint64_t countAndFlagsBits = 0x402520B7C2204025;
  v13._object = (void *)0xA800000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v31);

  uint64_t v14 = sub_10008E7B4();
  if (v15)
  {
    uint64_t v16 = v14;
    unint64_t v17 = v15;
    uint64_t v18 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v18 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (v18 && *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
    {
      swift_retain();
      sub_100039278((uint64_t)v10);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v10, 1, v2))
      {
        sub_10001457C((uint64_t)v10, (uint64_t *)&unk_100807640);
      }
      else
      {
        sub_100090BD0((uint64_t)v10, (uint64_t)v4);
        sub_10001457C((uint64_t)v10, (uint64_t *)&unk_100807640);
        uint64_t v22 = sub_10008ACF8();
        unint64_t v24 = v23;
        sub_100090B74((uint64_t)v4);
        uint64_t v25 = HIBYTE(v24) & 0xF;
        if ((v24 & 0x2000000000000000) == 0) {
          uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
        }
        if (v25)
        {
          sub_100010218((uint64_t *)&unk_100806070);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_1006D6270;
          *(void *)(v26 + 56) = &type metadata for String;
          unint64_t v27 = sub_10001B2C0();
          *(void *)(v26 + 32) = v16;
          *(void *)(v26 + 40) = v17;
          *(void *)(v26 + 96) = &type metadata for String;
          *(void *)(v26 + 104) = v27;
          *(void *)(v26 + 64) = v27;
          *(void *)(v26 + 72) = v22;
          *(void *)(v26 + 80) = v24;
          uint64_t v21 = static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v21;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_10008E7B4();
  if (v20) {
    return v19;
  }
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata);
  if (v21)
  {
    swift_retain();
    sub_100039278((uint64_t)v7);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v2))
    {
      sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100807640);
      return 0;
    }
    else
    {
      sub_100090BD0((uint64_t)v7, (uint64_t)v4);
      sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100807640);
      uint64_t v21 = sub_10008ACF8();
      sub_100090B74((uint64_t)v4);
    }
  }
  return v21;
}

uint64_t sub_10008E7B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata;
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata);
  if (!v16) {
    return v16;
  }
  swift_retain();
  sub_100039278((uint64_t)v14);
  swift_release();
  unint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v17(v14, 1, v2))
  {
    sub_10001457C((uint64_t)v14, (uint64_t *)&unk_100807640);
    uint64_t v16 = *(void *)(v1 + v15);
    if (!v16) {
      return v16;
    }
  }
  else
  {
    sub_100090BD0((uint64_t)v14, (uint64_t)v8);
    sub_10001457C((uint64_t)v14, (uint64_t *)&unk_100807640);
    uint64_t v16 = sub_10008AA70();
    uint64_t v19 = v18;
    sub_100090B74((uint64_t)v8);
    if (v16) {
      BOOL v20 = 0;
    }
    else {
      BOOL v20 = v19 == 0xE000000000000000;
    }
    if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v1 + v15);
    if (!v16) {
      return v16;
    }
  }
  swift_retain();
  sub_100039278((uint64_t)v11);
  swift_release();
  if (v17(v11, 1, v2))
  {
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_100807640);
    return 0;
  }
  else
  {
    sub_100090BD0((uint64_t)v11, (uint64_t)v5);
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_100807640);
    if (v5[*(int *)(v2 + 36) + 8] & 1) != 0 || (v5[*(int *)(v2 + 24) + 8])
    {
      uint64_t v16 = 0;
    }
    else
    {
      HKStateOfMindReflectiveIntervalFromKind();
      id v22 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_100090B74((uint64_t)v5);
  }
  return v16;
}

uint64_t sub_10008EAB0()
{
  uint64_t v1 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata);
  if (v8)
  {
    swift_retain();
    sub_100039278((uint64_t)v7);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100807640);
      return 0;
    }
    else
    {
      sub_100090BD0((uint64_t)v7, (uint64_t)v4);
      sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100807640);
      uint64_t v8 = sub_10008ACF8();
      sub_100090B74((uint64_t)v4);
    }
  }
  return v8;
}

uint64_t sub_10008EC40()
{
  uint64_t v1 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  __chkstk_darwin(v1);
  uint64_t v28 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, 1, 1, v15, v17);
    goto LABEL_6;
  }
  swift_retain();
  sub_100039278((uint64_t)v14);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    BOOL v20 = (uint64_t *)&unk_100807640;
    uint64_t v21 = (uint64_t)v14;
    goto LABEL_7;
  }
  sub_100090C34((uint64_t)v14, (uint64_t)v19, _s16StateOfMindAssetC15StateOfMindDataVMa);
  sub_100045944((uint64_t)&v19[*(int *)(v15 + 20)], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100090B74((uint64_t)v19);
    BOOL v20 = (uint64_t *)&unk_1007FC470;
    uint64_t v21 = (uint64_t)v7;
LABEL_7:
    sub_10001457C(v21, v20);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  unint64_t v24 = &v19[*(int *)(v15 + 24)];
  if (v24[8] != 1 && *(void *)v24 == 1)
  {
    static Date.FormatStyle.DateStyle.omitted.getter();
    uint64_t v25 = v28;
    static Date.FormatStyle.TimeStyle.shortened.getter();
    uint64_t v22 = Date.formatted(date:time:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v29);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_100090B74((uint64_t)v19);
    return v22;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_100090B74((uint64_t)v19);
  return 0;
}

uint64_t sub_10008F0EC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10008F10C, 0, 0);
}

uint64_t sub_10008F10C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    uint64_t v1 = [(id)v1 userInterfaceStyle] != (id)1;
  }
  id v2 = sub_10017EB14(v1, 0, 4);
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10008F190()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1007FBEC0 + dword_1007FBEC0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10008F230;
  return v3();
}

uint64_t sub_10008F230(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_10008F32C()
{
  return sub_10008F3BC(&qword_1007F9D80, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_10008F374()
{
  return sub_10008F3BC(&qword_1007FBE80, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_10008F3BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F404(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000010068A010
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010068A030 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E69616D6F64 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010068A050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010068A070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010068A090)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

char *sub_10008F704(int a1, void *a2, void *a3)
{
  uint64_t v69 = a3;
  id v66 = a2;
  LODWORD(v64) = a1;
  uint64_t v67 = sub_100010218(&qword_1007F9D70);
  __chkstk_darwin(v67);
  uint64_t v68 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v65 = (uint64_t *)((char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v61);
  uint64_t v62 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = (void *)type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale();
  uint64_t v7 = *(v63 - 1);
  __chkstk_darwin(v63);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StateOfMindVisualization.ValenceImageProvider();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  __n128 v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  BOOL v20 = (char *)&v59 - v19;
  UUID.init()();
  uint64_t v21 = (char *)objc_allocWithZone((Class)_s16StateOfMindAssetCMa(0));
  *(void *)&v21[OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata] = 0;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  uint64_t v22 = (char *)sub_1001817C4((uint64_t)v17, 15, v64);
  uint64_t v23 = v69;
  unint64_t v24 = v22;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v64 = v14;
  unint64_t v60 = v25;
  v25(v20, v14);
  uint64_t v26 = v24;
  if (v23) {
    [v23 valence];
  }
  (*(void (**)(char *, void, void *))(v7 + 104))(v9, enum case for StateOfMindVisualization.ValenceImageProvider.ImageScale.confirmationView(_:), v63);
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)();
  uint64_t v27 = (void *)StateOfMindVisualization.ValenceImageProvider.uiImage.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v28 = [v27 imageAsset];
  if (v28)
  {
    uint64_t v29 = v28;
    id v30 = [self traitCollectionWithUserInterfaceStyle:1];
    id v31 = [v29 imageWithTraitCollection:v30];

    if (v31)
    {
      uint64_t v32 = (uint64_t)v62;
      *uint64_t v62 = v31;
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v24;
      uint64_t v63 = v31;
      UUID.init()();
      uint64_t v34 = UUID.uuidString.getter();
      uint64_t v36 = v35;
      v60(v20, v64);
      type metadata accessor for AssetAttachment(0);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = 0;
      sub_100090C34(v32, v37 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
      id v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
      *id v38 = v34;
      v38[1] = v36;
      id v39 = &v33[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v39 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
    }
  }
  id v40 = [v27 imageAsset];
  if (v40)
  {
    id v41 = v40;
    id v42 = [self traitCollectionWithUserInterfaceStyle:2];
    id v43 = [v41 imageWithTraitCollection:v42];

    if (v43)
    {
      uint64_t v44 = (uint64_t)v62;
      *uint64_t v62 = v43;
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v24;
      id v46 = v43;
      UUID.init()();
      uint64_t v47 = UUID.uuidString.getter();
      uint64_t v49 = v48;
      v60(v20, v64);
      type metadata accessor for AssetAttachment(0);
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = 1;
      sub_100090C34(v44, v50 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
      uint64_t v51 = (uint64_t *)(v50 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
      *uint64_t v51 = v47;
      v51[1] = v49;
      uint64_t v52 = &v45[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v52 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
    }
  }
  id v53 = v65;
  sub_10008BAC4(v69, v65);

  uint64_t v54 = v68;
  sub_100090C34((uint64_t)v53, v68, _s16StateOfMindAssetC15StateOfMindDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007FBEC8);
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = v55 + *(void *)(*(void *)v55 + 104);
  uint64_t v57 = sub_100010218((uint64_t *)&unk_100807640);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
  *(_OWORD *)(v55 + *(void *)(*(void *)v55 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v54, v55 + *(void *)(*(void *)v55 + 120), &qword_1007F9D70);
  *(void *)&v24[OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata] = v55;

  swift_release();
  return v24;
}

void *sub_10008FF38(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, void (*a9)(char *, uint64_t), uint64_t a10, void *a11, char a12, uint64_t a13, uint64_t a14)
{
  int v97 = a8;
  uint64_t v96 = a7;
  uint64_t v107 = a6;
  id v108 = a3;
  uint64_t v98 = a4;
  uint64_t v99 = a5;
  uint64_t v100 = sub_100010218(&qword_1007F9D70);
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v17 - 8);
  uint64_t v106 = (uint64_t)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v20);
  unint64_t v103 = (uint64_t *)((char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  id v28 = (char *)&v91 - v27;
  UUID.init()();
  *(void *)((char *)objc_allocWithZone((Class)_s16StateOfMindAssetCMa(0))
            + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata) = 0;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v28, v22);
  uint64_t v29 = (char *)sub_1001817C4((uint64_t)v25, 15, a1);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v31 = v23 + 8;
  id v30 = v32;
  v32(v28, v22);
  uint64_t v105 = v29;
  id v102 = a2;
  uint64_t v94 = v20;
  BOOL v92 = v32;
  if (a2)
  {
    *unint64_t v103 = a2;
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v29;
    id v34 = a2;
    UUID.init()();
    uint64_t v35 = UUID.uuidString.getter();
    uint64_t v37 = v36;
    uint64_t v104 = v22;
    uint64_t v91 = v31;
    v30(v28, v22);
    type metadata accessor for AssetAttachment(0);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = 0;
    id v39 = v103;
    sub_100090C34((uint64_t)v103, v38 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    id v40 = (uint64_t *)(v38 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
    *id v40 = v35;
    v40[1] = v37;
    id v41 = &v33[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v41 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    uint64_t v22 = v104;
    uint64_t v29 = v105;
  }
  else
  {
    id v42 = v29;
    id v39 = v103;
  }
  uint64_t v104 = a14;
  if (v108)
  {
    id v43 = v108;
    *id v39 = v108;
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = v29;
    id v45 = v43;
    UUID.init()();
    uint64_t v46 = UUID.uuidString.getter();
    uint64_t v48 = v47;
    v92(v28, v22);
    type metadata accessor for AssetAttachment(0);
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = 1;
    sub_100090C34((uint64_t)v39, v49 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    uint64_t v50 = (uint64_t *)(v49 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
    *uint64_t v50 = v46;
    v50[1] = v48;
    uint64_t v51 = &v44[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v51 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  sub_100045944(v107, v106);
  int64_t v52 = *(void *)(a13 + 16);
  if (v52)
  {
    uint64_t v109 = _swiftEmptyArrayStorage;
    sub_100095CE0(0, v52, 0);
    uint64_t v53 = 0;
    uint64_t v54 = v109;
    do
    {
      uint64_t v55 = *(void **)(a13 + 8 * v53 + 32);
      if (v55)
      {
        id v56 = v55;
        uint64_t v57 = sub_10008C30C();
        unint64_t v59 = v58;
      }
      else
      {
        uint64_t v57 = 0;
        unint64_t v59 = 0xF000000000000000;
      }
      uint64_t v109 = v54;
      unint64_t v61 = *((void *)v54 + 2);
      unint64_t v60 = *((void *)v54 + 3);
      if (v61 >= v60 >> 1)
      {
        sub_100095CE0(v60 > 1, v61 + 1, 1);
        uint64_t v54 = v109;
      }
      ++v53;
      *((void *)v54 + 2) = v61 + 1;
      uint64_t v62 = &v54[2 * v61];
      *((void *)v62 + 4) = v57;
      *((void *)v62 + 5) = v59;
    }
    while (v52 != v53);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = _swiftEmptyArrayStorage;
  }
  uint64_t v64 = a10;
  uint64_t v63 = a11;
  uint64_t v65 = a9;
  uint64_t v66 = v104;
  int64_t v67 = *(void *)(v104 + 16);
  if (v67)
  {
    BOOL v92 = a9;
    uint64_t v94 = a10;
    unint64_t v103 = a11;
    uint64_t v109 = _swiftEmptyArrayStorage;
    sub_100095CE0(0, v67, 0);
    uint64_t v68 = v109;
    uint64_t v69 = (void **)(v66 + 32);
    do
    {
      uint64_t v71 = *v69++;
      id v70 = v71;
      if (v71)
      {
        id v72 = v70;
        uint64_t v73 = sub_10008C30C();
        unint64_t v75 = v74;
      }
      else
      {
        uint64_t v73 = 0;
        unint64_t v75 = 0xF000000000000000;
      }
      uint64_t v109 = v68;
      unint64_t v77 = *((void *)v68 + 2);
      unint64_t v76 = *((void *)v68 + 3);
      if (v77 >= v76 >> 1)
      {
        sub_100095CE0(v76 > 1, v77 + 1, 1);
        uint64_t v68 = v109;
      }
      *((void *)v68 + 2) = v77 + 1;
      uint64_t v78 = &v68[2 * v77];
      *((void *)v78 + 4) = v73;
      *((void *)v78 + 5) = v75;
      --v67;
    }
    while (v67);

    uint64_t v63 = v103;
    uint64_t v64 = v94;
    uint64_t v65 = v92;
  }
  else
  {

    uint64_t v68 = _swiftEmptyArrayStorage;
  }
  sub_10001457C(v107, (uint64_t *)&unk_1007FC470);
  swift_bridgeObjectRelease();
  uint64_t v79 = (int *)v95;
  uint64_t v80 = v93;
  sub_10002C4EC(v106, (uint64_t)&v93[*(int *)(v95 + 20)], (uint64_t *)&unk_1007FC470);
  uint64_t v81 = (char *)v80 + v79[6];
  *(void *)uint64_t v81 = v96;
  v81[8] = v97 & 1;
  *(void *)((char *)v80 + v79[7]) = v65;
  *(void *)((char *)v80 + v79[8]) = v64;
  uint64_t v82 = (char *)v80 + v79[9];
  *(void *)uint64_t v82 = v63;
  v82[8] = a12 & 1;
  *(void *)((char *)v80 + v79[11]) = v68;
  *(void *)((char *)v80 + v79[10]) = v54;
  uint64_t v83 = v99;
  void *v80 = v98;
  v80[1] = v83;
  uint64_t v84 = (uint64_t)v80;
  uint64_t v85 = v101;
  sub_100090C34(v84, v101, _s16StateOfMindAssetC15StateOfMindDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007FBEC8);
  uint64_t v86 = swift_allocObject();
  uint64_t v87 = v86 + *(void *)(*(void *)v86 + 104);
  uint64_t v88 = sub_100010218((uint64_t *)&unk_100807640);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 1, 1, v88);
  *(_OWORD *)(v86 + *(void *)(*(void *)v86 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v85, v86 + *(void *)(*(void *)v86 + 120), &qword_1007F9D70);
  uint64_t v89 = v105;
  *(void *)&v105[OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata] = v86;

  swift_release();
  return v89;
}

uint64_t sub_1000907EC()
{
  v1[2] = v0;
  sub_100010218((uint64_t *)&unk_100807640);
  v1[3] = swift_task_alloc();
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_1000908DC, 0, 0);
}

uint64_t sub_1000908DC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  if (*(void *)(v0[2] + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    swift_retain();
    sub_100039278(v1);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
    {
      sub_100090C34(v0[3], v0[6], _s16StateOfMindAssetC15StateOfMindDataVMa);
      id v4 = [self mainScreen];
      id v5 = [v4 traitCollection];

      id v6 = [v5 userInterfaceStyle];
      if (v6 == (id)1)
      {
        uint64_t result = (uint64_t)sub_10008B2E4();
        unint64_t v8 = result;
        if (!result) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_10008B6D4();
        unint64_t v8 = result;
        if (!result) {
          goto LABEL_17;
        }
      }
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_11;
        }
      }
      else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_11:
        if ((v8 & 0xC000000000000001) != 0)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          id v10 = *(id *)(v8 + 32);
        }
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        GenericGraCGFloat y = v11;
        CGColorRef v13 = GenericGray;
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
LABEL_17:
      GenericGraCGFloat y = CGColorCreateGenericGray(0.0, 0.0);
      CGColorRef v13 = 0;
LABEL_18:
      uint64_t v15 = v0[6];
      id v9 = [objc_allocWithZone((Class)UIColor) initWithCGColor:GenericGray];

      sub_100090B74(v15);
      goto LABEL_19;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(v0[3], 1, 1, v0[4]);
  }
  sub_10001457C(v0[3], (uint64_t *)&unk_100807640);
  id v9 = [self systemBackgroundColor];
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(id))v0[1];
  return v16(v9);
}

uint64_t sub_100090B74(uint64_t a1)
{
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100090BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100090C34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100090C9C()
{
  unint64_t result = qword_1007FBED8;
  if (!qword_1007FBED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBED8);
  }
  return result;
}

uint64_t sub_100090CF0()
{
  return sub_100090E20(&qword_1007FBEF8, &qword_1007FC120, (void (*)(void))sub_100090D2C);
}

unint64_t sub_100090D2C()
{
  unint64_t result = qword_1007FBF00;
  if (!qword_1007FBF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBF00);
  }
  return result;
}

uint64_t sub_100090D80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(&qword_10080A1D0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100090DE4()
{
  return sub_100090E20(&qword_1007FBF20, &qword_1007FC120, (void (*)(void))sub_100090E8C);
}

uint64_t sub_100090E20(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100090E8C()
{
  unint64_t result = qword_10080E9E0;
  if (!qword_10080E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080E9E0);
  }
  return result;
}

uint64_t _s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009103CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOMa()
{
  return &_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysON;
}

unint64_t sub_100091078()
{
  unint64_t result = qword_1007FBF28;
  if (!qword_1007FBF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBF28);
  }
  return result;
}

unint64_t sub_1000910D0()
{
  unint64_t result = qword_1007FBF30;
  if (!qword_1007FBF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBF30);
  }
  return result;
}

unint64_t sub_100091128()
{
  unint64_t result = qword_1007FBF38;
  if (!qword_1007FBF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FBF38);
  }
  return result;
}

id sub_100091460()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JurassicNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for JurassicNavigationController()
{
  return self;
}

id sub_1000914B8()
{
  type metadata accessor for JournalFitnessUIFormattingManager();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  id result = [objc_allocWithZone((Class)FIUIFormattingManager) init];
  *(void *)(v0 + 112) = result;
  qword_10083CEE0 = v0;
  return result;
}

uint64_t sub_100091510()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for JournalFitnessUIFormattingManager()
{
  return self;
}

uint64_t sub_100091570(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int v3 = &_swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  CGColorRef v13 = &_swiftEmptyArrayStorage;
  uint64_t result = sub_100095B44(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        int v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095B44(0, v3[2] + 1, 1);
          int v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_100095B44(v6 > 1, v7 + 1, 1);
          int v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_10002102C(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      int v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        int v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095B44(0, v3[2] + 1, 1);
          int v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_100095B44(v10 > 1, v11 + 1, 1);
          int v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_10002102C(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_1000917A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      UUID._bridgeToObjectiveC()();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += v6;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000918A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_100095B44(0, v6, 0);
    id v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v15 = v9;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v11 = *(void *)(v8 + 56);
    do
    {
      v15(v5, v10, v2);
      swift_dynamicCast();
      unint64_t v7 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100095B44(0, v7[2] + 1, 1);
        unint64_t v7 = v17;
      }
      unint64_t v13 = v7[2];
      unint64_t v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_100095B44(v12 > 1, v13 + 1, 1);
        unint64_t v7 = v17;
      }
      v7[2] = v13 + 1;
      sub_10002102C(&v16, &v7[4 * v13 + 4]);
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_100091A74(unint64_t a1)
{
  return sub_100091AD4(a1, (uint64_t (*)(void))type metadata accessor for JournalEntryMO, (uint64_t)&off_1007A69B8);
}

uint64_t sub_100091A94(unint64_t a1)
{
  return sub_100091AD4(a1, (uint64_t (*)(void))type metadata accessor for JournalEntryAssetMO, (uint64_t)&off_1007A69E0);
}

uint64_t sub_100091AB4(unint64_t a1)
{
  return sub_100091AD4(a1, (uint64_t (*)(void))type metadata accessor for JournalEntryAssetFileAttachmentMO, (uint64_t)&off_1007A6A08);
}

uint64_t sub_100091AD4(unint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100095EF4(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v7 = v21;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v21 = v7;
        unint64_t v12 = *((void *)v7 + 2);
        unint64_t v11 = *((void *)v7 + 3);
        if (v12 >= v11 >> 1)
        {
          sub_100095EF4(v11 > 1, v12 + 1, 1);
          unint64_t v7 = v21;
        }
        ++v9;
        uint64_t v19 = a2(0);
        uint64_t v20 = a3;
        *(void *)&long long v18 = v10;
        *((void *)v7 + 2) = v12 + 1;
        sub_10001B3BC(&v18, (uint64_t)&v7[5 * v12 + 4]);
      }
      while (v6 != v9);
    }
    else
    {
      unint64_t v13 = (void **)(a1 + 32);
      do
      {
        uint64_t v14 = *v13;
        uint64_t v21 = v7;
        unint64_t v15 = *((void *)v7 + 2);
        unint64_t v16 = *((void *)v7 + 3);
        id v17 = v14;
        if (v15 >= v16 >> 1)
        {
          sub_100095EF4(v16 > 1, v15 + 1, 1);
          unint64_t v7 = v21;
        }
        uint64_t v19 = a2(0);
        uint64_t v20 = a3;
        *(void *)&long long v18 = v17;
        *((void *)v7 + 2) = v15 + 1;
        sub_10001B3BC(&v18, (uint64_t)&v7[5 * v15 + 4]);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100091CA0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  unint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100095B44(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_10001B284(0, (unint64_t *)&qword_1007F9110);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095B44(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *((void *)v3 + 2);
        unint64_t v6 = *((void *)v3 + 3);
        if (v7 >= v6 >> 1)
        {
          sub_100095B44(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *((void *)v3 + 2) = v7 + 1;
        sub_10002102C(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_10001B284(0, (unint64_t *)&qword_1007F9110);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095B44(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *((void *)v3 + 2);
        unint64_t v10 = *((void *)v3 + 3);
        if (v11 >= v10 >> 1)
        {
          sub_100095B44(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *((void *)v3 + 2) = v11 + 1;
        sub_10002102C(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

double *sub_100091F04(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t result = (double *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = 0;
        do
        {
          uint64_t v5 = v4 + 1;
          unint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          sub_10001B284(0, (unint64_t *)&qword_1007FC140);
          id v6 = v10;
          sub_100010218(&qword_1007FC148);
          swift_dynamicCast();
          swift_unknownObjectRelease();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        unint64_t v7 = (void **)(a1 + 32);
        sub_10001B284(0, (unint64_t *)&qword_1007FC140);
        do
        {
          uint64_t v8 = *v7++;
          id v9 = v8;
          sub_100010218(&qword_1007FC148);
          swift_dynamicCast();

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v2;
        }
        while (v2);
      }
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_100092114()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FC020);
  sub_100026A54(v0, (uint64_t)qword_1007FC020);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100092208(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 64) = a2;
  *(void *)(v4 + 16) = a1;
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v4 + 40) = swift_task_alloc();
  *(void *)(v4 + 48) = type metadata accessor for MainActor();
  *(void *)(v4 + 56) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000922DC, v6, v5);
}

uint64_t sub_1000922DC()
{
  unint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  swift_unknownObjectWeakAssign();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    id v2 = *(char **)(v0 + 32);
    uint64_t v3 = OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask;
    uint64_t v4 = v2;
    if (*(void *)&v2[OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask])
    {
      if (qword_1007F6970 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_100026A54(v5, (uint64_t)qword_1007FC020);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "ExportManager.printEntries previous currentExportTask is not nil. This is unexpected.", v8, 2u);
        swift_slowDealloc();
      }

      if (*(void *)&v2[v3])
      {
        swift_retain();
        Task.cancel()();
        swift_release();
      }
      *(void *)&v2[v3] = 0;
      swift_release();
      uint64_t v4 = *(void **)(v0 + 32);
    }
    uint64_t v9 = *(void *)(v0 + 40);
    char v10 = *(unsigned char *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 16);
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    swift_bridgeObjectRetain();
    id v13 = v4;
    uint64_t v14 = static MainActor.shared.getter();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = &protocol witness table for MainActor;
    *(unsigned char *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v13;
    *(void *)(v15 + 48) = v11;
    *(void *)&v2[v3] = sub_100328A60(v9, (uint64_t)&unk_1007FC0B0, v15);
    swift_release();
    goto LABEL_18;
  }
  if (qword_1007F6970 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100026A54(v17, (uint64_t)qword_1007FC020);
  long long v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "ExportManager.printEntries requested entries array is empty.", v20, 2u);
    swift_slowDealloc();
  }

LABEL_18:
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100092654(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 112) = a5;
  *(void *)(v6 + 120) = a6;
  *(unsigned char *)(v6 + 396) = a4;
  uint64_t v7 = type metadata accessor for CancellationError();
  *(void *)(v6 + 128) = v7;
  *(void *)(v6 + 136) = *(void *)(v7 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  *(void *)(v6 + 152) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC0C0);
  *(void *)(v6 + 160) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  *(void *)(v6 + 168) = v8;
  *(void *)(v6 + 176) = *(void *)(v8 - 8);
  *(void *)(v6 + 184) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL.DirectoryHint();
  *(void *)(v6 + 192) = v9;
  *(void *)(v6 + 200) = *(void *)(v9 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  *(void *)(v6 + 216) = v10;
  *(void *)(v6 + 224) = *(void *)(v10 - 8);
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 240) = swift_task_alloc();
  *(void *)(v6 + 248) = swift_task_alloc();
  *(void *)(v6 + 256) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ExportOptions();
  *(void *)(v6 + 264) = v11;
  *(void *)(v6 + 272) = *(void *)(v11 - 8);
  *(void *)(v6 + 280) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 288) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 296) = v13;
  *(void *)(v6 + 304) = v12;
  return _swift_task_switch(sub_100092944, v13, v12);
}

uint64_t sub_100092944()
{
  uint64_t v44 = v0;
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  if (qword_10083D468)
  {
    uint64_t v1 = *(void *)(v0 + 240);
    uint64_t v2 = *(void *)(v0 + 216);
    uint64_t v3 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 192);
    sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v1);
    unsigned int v39 = enum case for URL.DirectoryHint.inferFromPath(_:);
    (*(void (**)(uint64_t))(v5 + 104))(v4);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  else
  {
    static URL.temporaryDirectory.getter();
    unsigned int v39 = enum case for URL.DirectoryHint.inferFromPath(_:);
  }
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v8 = *(int **)(v0 + 264);
  uint64_t v35 = *(void *)(v0 + 256);
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v33 = *(void *)(v0 + 192);
  uint64_t v34 = *(void *)(v0 + 208);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v40 = *(void *)(v0 + 160);
  uint64_t v41 = *(void *)(v0 + 112);
  uint64_t v42 = *(void *)(v0 + 272);
  char v38 = *(unsigned char *)(v0 + 396);
  strcpy((char *)v43, "PrintExport-");
  BYTE5(v43[1]) = 0;
  HIWORD(v43[1]) = -5120;
  UUID.init()();
  uint64_t v14 = UUID.uuidString.getter();
  uint64_t v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  v17._uint64_t countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = v43[1];
  *(void *)(v0 + 64) = v43[0];
  *(void *)(v0 + 72) = v18;
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v34, v39, v33);
  sub_100014344();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v33);
  swift_bridgeObjectRelease();
  os_log_type_t v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v0 + 312) = v19;
  *(void *)(v0 + 320) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v19(v36, v37);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  *(void *)(v0 + 328) = v20;
  *(void *)(v0 + 336) = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v20(v7, v35, v37);
  uint64_t v21 = v8[5];
  *(_DWORD *)(v0 + 392) = v21;
  *(unsigned char *)(v7 + v21) = v38;
  *(unsigned char *)(v7 + v8[6]) = 1;
  uint64_t v22 = (void *)(v7 + v8[7]);
  *uint64_t v22 = 0xD000000000000013;
  v22[1] = 0x800000010068A1B0;
  uint64_t v23 = (void *)(v7 + v8[8]);
  *uint64_t v23 = 0x73656972746E45;
  v23[1] = 0xE700000000000000;
  uint64_t v24 = (void *)(v7 + v8[9]);
  *uint64_t v24 = 0x656372756F736552;
  v24[1] = 0xE900000000000073;
  uint64_t v25 = v7 + v8[10];
  strcpy((char *)v25, "Journal.html");
  *(unsigned char *)(v25 + 13) = 0;
  *(_WORD *)(v25 + 14) = -5120;
  uint64_t v26 = (void *)(v7 + v8[11]);
  void *v26 = 0xD000000000000017;
  v26[1] = 0x800000010068A1D0;
  *(int64x2_t *)(v7 + v8[12]) = vdupq_n_s64(0x406F400000000000uLL);
  uint64_t v27 = v8[13];
  *(void *)(v7 + v27) = [objc_allocWithZone((Class)NSProgress) init];
  sub_100095A1C(v7, v40);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v42 + 56))(v40, 0, 1, v8);
  uint64_t v28 = v41 + OBJC_IVAR____TtC7Journal13ExportManager_currentExportOptions;
  swift_beginAccess();
  sub_100095A80(v40, v28);
  swift_endAccess();
  static Task<>.checkCancellation()();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1000931C4;
  uint64_t v30 = *(void *)(v0 + 280);
  uint64_t v31 = *(void *)(v0 + 120);
  return sub_1000941C0(v31, v30);
}

uint64_t sub_1000931C4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 352) = a1;
  *(void *)(v4 + 360) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 304);
  uint64_t v6 = *(void *)(v3 + 296);
  if (v1) {
    uint64_t v7 = sub_100093DBC;
  }
  else {
    uint64_t v7 = sub_100093308;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100093308()
{
  uint64_t v24 = v0;
  if (qword_1007F6970 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1007FC020);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 104) = sub_10011EA98(v5, v7, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Print content created: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void **)(*(void *)(v0 + 112) + OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController);
  *(void *)(v0 + 368) = v8;
  if (v8)
  {
    v8;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v9;
    void *v9 = v0;
    v9[1] = sub_1000937D4;
    return sub_10022C5A8(1);
  }
  uint64_t v11 = *(void *)(v0 + 280);
  if (*(unsigned __int8 *)(v11 + *(int *)(v0 + 392)) - 2 < 2)
  {
    uint64_t v12 = *(void *)(v0 + 352);
    swift_release();
    sub_100094EC4(v12);
    swift_bridgeObjectRelease();
    sub_100095AE8(v11);
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  if (!*(unsigned char *)(v11 + *(int *)(v0 + 392)))
  {
    sub_100095AE8(*(void *)(v0 + 280));
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v0 + 352);
  if (*(void *)(v13 + 16))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 224) + 16))(*(void *)(v0 + 152), v13+ ((*(unsigned __int8 *)(*(void *)(v0 + 224) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 224) + 80)), *(void *)(v0 + 216));
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 1;
  }
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v16 = *(void *)(v0 + 224);
  uint64_t v17 = *(void *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17, v14, 1, v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) == 1)
  {
    uint64_t v18 = *(void *)(v0 + 152);
    sub_100095AE8(*(void *)(v0 + 280));
    swift_release();
    sub_100052EAC(v18);
    goto LABEL_19;
  }
  (*(void (**)(void, void, void))(v0 + 328))(*(void *)(v0 + 232), *(void *)(v0 + 152), *(void *)(v0 + 216));
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_100093B94;
  uint64_t v21 = *(void *)(v0 + 280);
  uint64_t v22 = *(void *)(v0 + 232);
  return sub_1000948A0(v22, v21);
}

uint64_t sub_1000937D4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 304);
  uint64_t v3 = *(void *)(v1 + 296);
  return _swift_task_switch(sub_1000938F4, v3, v2);
}

uint64_t sub_1000938F4()
{
  uint64_t v1 = *(void *)(v0 + 280);
  if (*(unsigned __int8 *)(v1 + *(int *)(v0 + 392)) - 2 < 2)
  {
    uint64_t v2 = *(void *)(v0 + 352);
    swift_release();
    sub_100094EC4(v2);
    swift_bridgeObjectRelease();
    sub_100095AE8(v1);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  if (!*(unsigned char *)(v1 + *(int *)(v0 + 392)))
  {
    sub_100095AE8(*(void *)(v0 + 280));
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(v0 + 352);
  if (*(void *)(v3 + 16))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 224) + 16))(*(void *)(v0 + 152), v3+ ((*(unsigned __int8 *)(*(void *)(v0 + 224) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 224) + 80)), *(void *)(v0 + 216));
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, v4, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    uint64_t v8 = *(void *)(v0 + 152);
    sub_100095AE8(*(void *)(v0 + 280));
    swift_release();
    sub_100052EAC(v8);
    goto LABEL_10;
  }
  (*(void (**)(void, void, void))(v0 + 328))(*(void *)(v0 + 232), *(void *)(v0 + 152), *(void *)(v0 + 216));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100093B94;
  uint64_t v12 = *(void *)(v0 + 280);
  uint64_t v13 = *(void *)(v0 + 232);
  return sub_1000948A0(v13, v12);
}

uint64_t sub_100093B94()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 304);
  uint64_t v3 = *(void *)(v1 + 296);
  return _swift_task_switch(sub_100093CB4, v3, v2);
}

uint64_t sub_100093CB4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[27];
  swift_release();
  v1(v3, v4);
  sub_100095AE8(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100093DBC()
{
  swift_release();
  v0[11] = v0[45];
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    if (qword_1007F6970 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100026A54(v1, (uint64_t)qword_1007FC020);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "ExportManager.printEntries print was canceled", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[35];
    uint64_t v7 = v0[17];
    uint64_t v6 = v0[18];
    uint64_t v8 = v0[16];

    sub_100505804();
    sub_100095AE8(v5);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    if (qword_1007F6970 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_1007FC020);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      v0[12] = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ExportManager.printEntries print failed: %@", v12, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v15 = v0[35];

    sub_100505804();
    swift_getErrorValue();
    uint64_t v16 = Error.localizedDescription.getter();
    sub_100095130(v16, v17);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    sub_100095AE8(v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1000941C0(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  type metadata accessor for MainActor();
  v3[13] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[14] = v5;
  v3[15] = v4;
  return _swift_task_switch(sub_10009425C, v5, v4);
}

uint64_t sub_10009425C()
{
  type metadata accessor for JurassicAlertController();
  id v1 = [self mainBundle];
  v26._object = (void *)0x800000010068A230;
  v2._uint64_t countAndFlagsBits = 0x6E69726170657250;
  v2._object = (void *)0xAC000000A680E267;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v26);

  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v4 message:0 preferredStyle:1];
  v0[8].receiver = v5;

  if (qword_1007F7470 != -1) {
    swift_once();
  }
  Class super_class = v0[5].super_class;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[3].receiver = sub_100096228;
  v0[3].Class super_class = (Class)v7;
  v0[1].receiver = _NSConcreteStackBlock;
  v0[1].Class super_class = (Class)1107296256;
  v0[2].receiver = sub_10007453C;
  v0[2].Class super_class = (Class)&unk_100798B80;
  uint64_t v9 = _Block_copy(&v0[1]);
  swift_release();
  id v10 = [self actionWithTitle:v8 style:1 handler:v9];
  _Block_release(v9);

  swift_release();
  [v5 addAction:v10];

  os_log_type_t v11 = *(void **)((char *)super_class + *(int *)(type metadata accessor for ExportOptions() + 52));
  uint64_t v12 = (objc_class *)type metadata accessor for AlertProgressContentViewController();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC7JournalP33_C0870F0871EA99EA9E6D05F47CB4490834AlertProgressContentViewController_progress] = v11;
  v0[4].receiver = v13;
  v0[4].Class super_class = v12;
  id v14 = v11;
  id v15 = [super initWithNibName:0 bundle:0];
  [v15 preferredContentSize];
  [v15 setPreferredContentSize:];
  [v5 setContentViewController:v15];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    [Strong presentViewController:v5 animated:1 completion:0];
  }
  receiver = (char *)v0[6].receiver;
  os_log_type_t v19 = *(void **)&receiver[OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController];
  *(void *)&receiver[OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController] = v5;
  v5;

  static Task<>.checkCancellation()();
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100811218 + dword_100811218);
  uint64_t v20 = (objc_class *)swift_task_alloc();
  v0[8].Class super_class = v20;
  *(void *)uint64_t v20 = v0;
  *((void *)v20 + 1) = sub_100094698;
  uint64_t v22 = (uint64_t)v0[5].receiver;
  uint64_t v21 = (uint64_t)v0[5].super_class;
  return v24(v22, v21);
}

uint64_t sub_100094698(uint64_t a1)
{
  NSString v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[14];
    uint64_t v6 = v4[15];
    uint64_t v7 = sub_100094834;
  }
  else
  {
    v4[19] = a1;
    uint64_t v5 = v4[14];
    uint64_t v6 = v4[15];
    uint64_t v7 = sub_1000947C0;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1000947C0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 152);
  return v1(v2);
}

uint64_t sub_100094834()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000948A0(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = type metadata accessor for URL.DirectoryHint();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[13] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[14] = v7;
  v3[15] = v6;
  return _swift_task_switch(sub_1000949F4, v7, v6);
}

uint64_t sub_1000949F4()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  v0[16] = [objc_allocWithZone((Class)type metadata accessor for PrintableHTMLContentController()) init];
  uint64_t v5 = (void *)(v4 + *(int *)(type metadata accessor for ExportOptions() + 28));
  uint64_t v6 = v5[1];
  v0[2] = *v5;
  v0[3] = v6;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for URL.DirectoryHint.inferFromPath(_:), v3);
  sub_100014344();
  swift_bridgeObjectRetain();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[17] = v7;
  void *v7 = v0;
  v7[1] = sub_100094B74;
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[4];
  return sub_10022B114(v9, v8);
}

uint64_t sub_100094B74(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 144) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 120);
  uint64_t v7 = *(void *)(v2 + 112);
  return _swift_task_switch(sub_100094D00, v7, v6);
}

uint64_t sub_100094D00()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[16];
  uint64_t v3 = v0[6];
  swift_release();
  id v4 = [objc_allocWithZone((Class)UIPrintInteractionController) init];
  id v5 = [self printInfo];
  [v5 setOutputType:0];
  [v4 setDelegate:v3];
  [v4 setPrintInfo:v5];
  id v6 = objc_allocWithZone((Class)type metadata accessor for JournalPrintPageRenderer());
  id v7 = v1;
  id v8 = [v6 init];
  id v9 = [v7 viewPrintFormatter];
  [v8 addPrintFormatter:v9 startingAtPageAtIndex:0];

  [v4 setPrintPageRenderer:v8];
  [v4 presentAnimated:1 completionHandler:0];

  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_100094EC4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [objc_allocWithZone((Class)UIPrintInteractionController) init];
  id v8 = [self printInfo];
  [v8 setOutputType:0];
  [v7 setDelegate:v2];
  [v7 setPrintInfo:v8];
  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v6, a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    uint64_t v12 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      URL._bridgeToObjectiveC()(v11);
      uint64_t v12 = v13;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    }
    [v7 setPrintingItem:v12];
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1000918A4(a1);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 setPrintingItems:isa];
  }
  [v7 presentAnimated:1 completionHandler:0];
}

uint64_t sub_100095130(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = v17;
  _OWORD v12[2] = v11;
  v12[3] = v13;
  v12[4] = a2;
  aBlock[4] = sub_100098370;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_100798BD0;
  id v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  os_log_type_t v19 = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  swift_release();
  return swift_release();
}

void sub_100095404()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask);
    swift_retain();

    if (v2)
    {
      Task.cancel()();
      swift_release();
    }
  }
}

void sub_10009549C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    uint64_t v7 = *(void **)(Strong + OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController);
    id v8 = v7;

    if (v7)
    {
      uint64_t v9 = swift_allocObject();
      swift_beginAccess();
      uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      uint64_t v11 = (void *)swift_allocObject();
      v11[2] = a2;
      v11[3] = a3;
      v11[4] = v9;
      v13[4] = sub_1000983BC;
      v13[5] = v11;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256;
      void v13[2] = sub_10017D530;
      _DWORD v13[3] = &unk_100798C20;
      uint64_t v12 = _Block_copy(v13);
      swift_bridgeObjectRetain();
      swift_release();
      [v8 dismissViewControllerAnimated:1 completion:v12];
      _Block_release(v12);
    }
  }
}

void sub_100095624(uint64_t a1, uint64_t a2)
{
  id v3 = [self mainBundle];
  v14._object = (void *)0xEC00000064656C69;
  v4._uint64_t countAndFlagsBits = 0x616620746E697250;
  v4._object = (void *)0xEC00000064656C69;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0x616620746E697250;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v14);

  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  type metadata accessor for JurassicAlertController();
  id v8 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v6 message:v7 preferredStyle:1];

  if (qword_1007F7478 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self actionWithTitle:v9 style:0 handler:0];

  [v8 addAction:v10];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v13)
    {
      [v13 presentViewController:v8 animated:1 completion:0];
    }
  }
}

uint64_t sub_10009590C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100095954(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 32);
  NSString v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_100092654(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_100095A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExportOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100095A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100095AE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExportOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100095B44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096080(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095B64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096248(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095B84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000963B4(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095BA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_10080A130, (uint64_t (*)(void))&type metadata accessor for UUID);
  *id v3 = result;
  return result;
}

uint64_t sub_100095BE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096514(a1, a2, a3, *v3);
  *id v3 = result;
  return result;
}

uint64_t sub_100095C00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096674(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095C20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, &qword_1007FC260, type metadata accessor for AssetAttachment.AssetType);
  *id v3 = result;
  return result;
}

uint64_t sub_100095C5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1007FC190, (uint64_t (*)(void))&type metadata accessor for Date);
  *id v3 = result;
  return result;
}

uint64_t sub_100095C98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096984(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095CB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000978D0(a1, a2, a3, *v3, &qword_1007FC258);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095CE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096B40(a1, a2, a3, *v3);
  *id v3 = (double *)result;
  return result;
}

uint64_t sub_100095D00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096CCC(a1, a2, a3, *v3);
  *id v3 = result;
  return result;
}

uint64_t sub_100095D20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096E2C(a1, a2, a3, *v3);
  *id v3 = result;
  return result;
}

uint64_t sub_100095D40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, &qword_1007FC178, _s10RoutePointVMa);
  *id v3 = result;
  return result;
}

uint64_t sub_100095D7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096FA4(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095D9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, &qword_1007FC1B8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
  *id v3 = result;
  return result;
}

uint64_t sub_100095DD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097144(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095DF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097470(a1, a2, a3, *v3, &qword_1007FC1A8);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095E20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000972CC(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095E40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, &qword_1007FC1F0, type metadata accessor for InsightsDataManager.TopAssetCategory);
  *id v3 = result;
  return result;
}

uint64_t sub_100095E7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097D48(a1, a2, a3, (void *)*v3, &qword_1007FC1E0, &qword_1007FC1E8);
  *id v3 = result;
  return result;
}

uint64_t sub_100095EAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097470(a1, a2, a3, *v3, &qword_1007FC238);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095ED4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000975CC(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095EF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009772C(a1, a2, a3, *v3);
  *id v3 = (double *)result;
  return result;
}

uint64_t sub_100095F14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, &qword_1007FC1A0, type metadata accessor for Loc);
  *id v3 = result;
  return result;
}

uint64_t sub_100095F50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000978D0(a1, a2, a3, *v3, &qword_1007FC220);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100095F78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097A30(a1, a2, a3, *v3);
  *id v3 = (double *)result;
  return result;
}

uint64_t sub_100095F98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1007FABC0, (uint64_t (*)(void))&type metadata accessor for IndexPath);
  *id v3 = result;
  return result;
}

uint64_t sub_100095FD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097BBC(a1, a2, a3, *v3);
  *id v3 = (double *)result;
  return result;
}

uint64_t sub_100095FF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097D48(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1007FC200, &qword_100800950);
  *id v3 = result;
  return result;
}

uint64_t sub_100096024(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100097F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1007FC270, (uint64_t (*)(void))type metadata accessor for InsightsMosaicLayout.Row);
  *id v3 = result;
  return result;
}

uint64_t sub_100096060(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000981D0(a1, a2, a3, *v3);
  *id v3 = result;
  return result;
}

uint64_t sub_100096080(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000961F0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100096228()
{
}

uint64_t sub_100096230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100096240()
{
  return swift_release();
}

uint64_t sub_100096248(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC170);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000963B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC210);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096514(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC160);
    id v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  Swift::String v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096674(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC188);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000967D4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097F88(a1, a2, a3, a4, (uint64_t *)&unk_1007FC190, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1000967F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC1D8);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096978(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000978D0(a1, a2, a3, a4, &qword_1007FC1C0);
}

uint64_t sub_100096984(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC218);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096B00(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097F88(a1, a2, a3, a4, &qword_1007FC250, type metadata accessor for SuggestedDateItem.PhotoDateItem);
}

uint64_t sub_100096B20(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097F88(a1, a2, a3, a4, &qword_1007FC180, _s14DataAggregatorC5PlaceVMa);
}

uint64_t sub_100096B40(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC118);
    id v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100010218(&qword_1007FC120);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096CCC(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC110);
    id v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (char *)(v10 + 4);
  unint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096E2C(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC168);
    id v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  unint64_t v13 = (char *)(a4 + 32);
  size_t v14 = 80 * v8;
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100096FA4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC248);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100097110(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097D48(a1, a2, a3, a4, &qword_1007FC100, &qword_1007FC108);
}

uint64_t sub_100097124(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097F88(a1, a2, a3, a4, &qword_1007FC1B8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_100097144(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC1B0);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000972CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC1F8);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100097450(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097F88(a1, a2, a3, a4, &qword_1007FC1F0, type metadata accessor for InsightsDataManager.TopAssetCategory);
}

uint64_t sub_100097470(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_100010218(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000975CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC240);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009772C(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC228);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_100010218(&qword_1007FC230);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000978D0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_100010218(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100097A1C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100097D48(a1, a2, a3, a4, &qword_1007FC150, &qword_1007FC158);
}

uint64_t sub_100097A30(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC128);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100010218((uint64_t *)&unk_1007FC130);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100097BBC(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC1C8);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_100010218(&qword_1007FC1D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100097D48(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100010218(a5);
  uint64_t v13 = *(void *)(sub_100010218(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100010218(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100097F88(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100010218(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000981D0(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100010218(&qword_1007FC268);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100098330()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100098370()
{
  sub_10009549C(v0[2], v0[3], v0[4]);
}

uint64_t sub_10009837C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1000983BC()
{
  sub_100095624(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1000983D8()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1000C8C00(v0);
}

double sub_10009841C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_100010218(&qword_1007F9E20);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 64) = a1;
  *(void *)(v8 + 72) = a2;
  *(void *)(v8 + 80) = a3;
  *(unsigned char *)(v8 + 88) = a4;
  *(unsigned char *)(v8 + 89) = HIBYTE(a4) & 1;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 16) = 2;
  *(unsigned char *)(v8 + 40) = 0;
  double result = 0.0;
  *(_OWORD *)(v8 + 48) = xmmword_1006D6A80;
  return result;
}

void sub_100098498()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
  {
    swift_retain();
    unint64_t v6 = sub_100039114();
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    int v12 = v11;
    swift_release();
    if (v6 >= 2)
    {
      uint64_t v13 = *(void *)(v6 + 16);
      if (v13)
      {
        uint64_t v32 = v8;
        uint64_t v33 = v10;
        int v34 = v12;
        uint64_t v35 = v0;
        id v37 = self;
        uint64_t v14 = *(unsigned __int8 *)(v3 + 80);
        unint64_t v31 = v6;
        uint64_t v15 = v6 + ((v14 + 32) & ~v14);
        uint64_t v16 = _swiftEmptyArrayStorage;
        uint64_t v36 = *(void *)(v3 + 72);
        while (1)
        {
          sub_10003F820(v15, (uint64_t)v5);
          uint64_t v18 = *v5;
          uint64_t v19 = (void *)v5[1];
          swift_bridgeObjectRetain();
          sub_10003F884((uint64_t)v5);
          id v20 = [v37 mainBundle];
          v38._object = (void *)0x800000010068A2A0;
          v21._uint64_t countAndFlagsBits = 1802661719;
          v21._object = (void *)0xE400000000000000;
          v22._uint64_t countAndFlagsBits = 0;
          v22._object = (void *)0xE000000000000000;
          v38._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
          Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v38);

          if (!v19) {
            break;
          }
          if (v18 == v23._countAndFlagsBits && v19 == v23._object)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v25 & 1) == 0) {
              goto LABEL_15;
            }
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_1002A5B20(0, v16[2] + 1, 1, v16);
          }
          unint64_t v27 = v16[2];
          unint64_t v29 = v16[3];
          unint64_t v28 = v27 + 1;
          char v17 = 1;
          if (v27 >= v29 >> 1) {
            uint64_t v16 = sub_1002A5B20((void *)(v29 > 1), v27 + 1, 1, v16);
          }
LABEL_6:
          void v16[2] = v28;
          *((unsigned char *)v16 + v27 + 32) = v17;
          v15 += v36;
          if (!--v13)
          {
            sub_10003F810(v31);
            uint64_t v1 = v35;
            goto LABEL_26;
          }
        }
        swift_bridgeObjectRelease();
LABEL_15:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1002A5B20(0, v16[2] + 1, 1, v16);
        }
        unint64_t v27 = v16[2];
        unint64_t v26 = v16[3];
        unint64_t v28 = v27 + 1;
        if (v27 >= v26 >> 1) {
          uint64_t v16 = sub_1002A5B20((void *)(v26 > 1), v27 + 1, 1, v16);
        }
        char v17 = 0;
        goto LABEL_6;
      }
      sub_10003F810(v6);
      uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_26:
      *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_isWorkArray) = v16;
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000987F4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  if (qword_1007F6978 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10083CEE8;
  return _swift_task_switch(sub_10009888C, v3, 0);
}

uint64_t sub_10009888C()
{
  if (!v0[2]) {
    goto LABEL_17;
  }
  uint64_t v1 = v0[3];
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    || (swift_retain(), uint64_t v3 = (double *)sub_100039114(), swift_release(), v3 == (double *)1)
    || (uint64_t v4 = swift_bridgeObjectRetain(), sub_10003F810(v4), !v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t result = sub_1000C8C00(v5);
  uint64_t v7 = v3;
  if (*(void *)(v1 + v2))
  {
    swift_retain();
    uint64_t v8 = sub_100039114();
    unsigned __int8 v10 = v9;
    uint64_t result = swift_release();
    if (v8 == 1)
    {
      uint64_t v11 = 2;
      if (!*(void *)(v1 + v2)) {
        goto LABEL_14;
      }
LABEL_12:
      swift_retain();
      uint64_t v12 = sub_100039114();
      uint64_t v14 = v13;
      char v16 = v15;
      uint64_t result = swift_release();
      if (v12 != 1)
      {
        uint64_t result = sub_10003F810(v12);
        if ((v16 & 1) == 0) {
          goto LABEL_15;
        }
      }
      goto LABEL_14;
    }
    uint64_t result = sub_10003F810(v8);
    uint64_t v11 = v10;
    if (*(void *)(v1 + v2)) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v11 = 2;
  }
LABEL_14:
  uint64_t v14 = 0;
LABEL_15:
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return result;
  }
  sub_100010218(&qword_1007F9E20);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 64) = v7;
  *(void *)(v17 + 72) = v11;
  *(void *)(v17 + 80) = v14 + 1;
  *(_WORD *)(v17 + 88) = 256;
  *(void *)(v17 + 24) = 0;
  *(void *)(v17 + 32) = 0;
  *(void *)(v17 + 16) = 2;
  *(unsigned char *)(v17 + 40) = 0;
  *(_OWORD *)(v17 + 48) = xmmword_1006D6A80;
  *(void *)(v1 + v2) = v17;
  swift_release();
  sub_100098498();
LABEL_17:
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100098ABC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  if (qword_1007F6978 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10083CEE8;
  return _swift_task_switch(sub_100098B80, v3, 0);
}

uint64_t sub_100098B80()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    || (swift_retain(), uint64_t v3 = (double *)sub_100039114(), swift_release(), v3 == (double *)1)
    || (uint64_t v4 = swift_bridgeObjectRetain(), sub_10003F810(v4), !v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v5 = v0[2];
  sub_100010218(&qword_10080F280);
  uint64_t v6 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
  sub_10003F820(v5, v8 + v7);
  sub_1000C8C00(v8);
  unsigned __int8 v9 = v3;
  if (!*(void *)(v1 + v2))
  {
    uint64_t v13 = 2;
    goto LABEL_13;
  }
  swift_retain();
  uint64_t v10 = sub_100039114();
  unsigned __int8 v12 = v11;
  swift_release();
  if (v10 != 1)
  {
    sub_10003F810(v10);
    uint64_t v13 = v12;
    if (*(void *)(v1 + v2)) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v16 = 0;
    goto LABEL_14;
  }
  uint64_t v13 = 2;
  if (!*(void *)(v1 + v2)) {
    goto LABEL_13;
  }
LABEL_11:
  swift_retain();
  uint64_t v14 = sub_100039114();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  if (v14 == 1) {
    goto LABEL_13;
  }
  sub_10003F810(v14);
  if (v18) {
    goto LABEL_13;
  }
LABEL_14:
  if (__OFADD__(v16, 1)) {
    __break(1u);
  }
  sub_100010218(&qword_1007F9E20);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 64) = v9;
  *(void *)(v19 + 72) = v13;
  *(void *)(v19 + 80) = v16 + 1;
  *(_WORD *)(v19 + 88) = 256;
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = 2;
  *(unsigned char *)(v19 + 40) = 0;
  *(_OWORD *)(v19 + 48) = xmmword_1006D6A80;
  *(void *)(v1 + v2) = v19;
  swift_release();
  sub_100098498();
  id v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100098E64(double a1, double a2)
{
  *(void *)(v3 + 32) = v2;
  *(double *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a2;
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = *(void *)(v4 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  *(void *)(v3 + 64) = swift_task_alloc();
  uint64_t v5 = sub_100010218(&qword_1007FC338);
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = *(void *)(v5 - 8);
  *(void *)(v3 + 88) = swift_task_alloc();
  sub_100010218(&qword_1007FC340);
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = swift_task_alloc();
  if (qword_1007F6978 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10083CEE8;
  return _swift_task_switch(sub_10009900C, v6, 0);
}

uint64_t sub_10009900C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    && (swift_retain(), unint64_t v3 = sub_100039114(), v5 = v4, v7 = v6, v43 = v8, swift_release(), v3 >= 2))
  {
    uint64_t v41 = v7;
    unsigned __int8 v42 = v5;
    uint64_t v39 = v2;
    uint64_t v40 = v1;
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v47 = *(void *)(v0 + 72);
    unint64_t v48 = v3;
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v45 = *(void *)(v0 + 48);
    unint64_t v11 = *(void *)(v3 + 16);
    unsigned __int8 v12 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v13 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v15 = 0;
    uint64_t v44 = v12;
    while (1)
    {
      if (v15 == v11)
      {
        (*v12)(*(unint64_t **)(v0 + 96), 1, 1, *(void *)(v0 + 72));
        unint64_t v15 = v11;
      }
      else
      {
        if (v15 >= *(void *)(v3 + 16))
        {
          __break(1u);
          goto LABEL_27;
        }
        uint64_t v16 = *(unint64_t **)(v0 + 96);
        uint64_t v46 = *(void *)(v0 + 72);
        uint64_t v17 = v3
            + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
            + *(void *)(v45 + 72) * v15;
        uint64_t v18 = v10;
        unint64_t v19 = v3;
        uint64_t v20 = *(void *)(v0 + 88) + *(int *)(v47 + 48);
        sub_10003F820(v17, v20);
        uint64_t v21 = *(int *)(v47 + 48);
        *uint64_t v16 = v15;
        uint64_t v22 = v20;
        unint64_t v3 = v19;
        uint64_t v10 = v18;
        unsigned __int8 v12 = v44;
        sub_10009C54C(v22, (uint64_t)v16 + v21);
        (*v44)(v16, 0, 1, v46);
        ++v15;
      }
      uint64_t v23 = *(void *)(v0 + 104);
      uint64_t v24 = *(void *)(v0 + 72);
      sub_10002C4EC(*(void *)(v0 + 96), v23, &qword_1007FC340);
      if ((*v13)(v23, 1, v24) == 1) {
        break;
      }
      char v25 = *(unint64_t **)(v0 + 104);
      uint64_t v26 = *(void *)(v0 + 64);
      unint64_t v27 = *v25;
      sub_10009C54C((uint64_t)v25 + *(int *)(v47 + 48), v26);
      uint64_t v28 = v26 + *(int *)(v10 + 40);
      uint64_t v29 = *(void *)(v0 + 64);
      if ((*(unsigned char *)(v28 + 8) & 1) == 0)
      {
        uint64_t v30 = v29 + *(int *)(v10 + 44);
        if ((*(unsigned char *)(v30 + 8) & 1) == 0
          && *(double *)v28 == *(double *)(v0 + 16)
          && *(double *)v30 == *(double *)(v0 + 24))
        {
          unint64_t v32 = v3;
          uint64_t v33 = *(void *)(v0 + 56);
          sub_10035F9F4(v27, v33);
          uint64_t v34 = v33;
          unint64_t v3 = v32;
          sub_10003F884(v34);
          sub_100098498();
          sub_10003F884(v29);
          break;
        }
      }
      uint64_t result = sub_10003F884(*(void *)(v0 + 64));
    }
    uint64_t result = sub_10003F810(v3);
    if (v43) {
      uint64_t v35 = 0;
    }
    else {
      uint64_t v35 = v41;
    }
    uint64_t v36 = v35 + 1;
    if (!__OFADD__(v35, 1))
    {
      sub_100010218(&qword_1007F9E20);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 64) = v48;
      *(void *)(v37 + 72) = v42;
      *(void *)(v37 + 80) = v36;
      *(_WORD *)(v37 + 88) = 256;
      *(void *)(v37 + 24) = 0;
      *(void *)(v37 + 32) = 0;
      *(void *)(v37 + 16) = 2;
      *(unsigned char *)(v37 + 40) = 0;
      *(_OWORD *)(v37 + 48) = xmmword_1006D6A80;
      *(void *)(v40 + v39) = v37;
      swift_release();
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  return result;
}

uint64_t sub_10009937C(uint64_t a1, double a2, double a3)
{
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = v3;
  *(double *)(v4 + 16) = a2;
  *(double *)(v4 + 24) = a3;
  sub_100010218(&qword_1007F9F50);
  *(void *)(v4 + 48) = swift_task_alloc();
  uint64_t v5 = _s10VisitAssetC9VisitDataVMa(0);
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = *(void *)(v5 - 8);
  *(void *)(v4 + 72) = swift_task_alloc();
  return _swift_task_switch(sub_100099470, 0, 0);
}

uint64_t sub_100099470()
{
  uint64_t v1 = *((void *)v0 + 7);
  uint64_t v2 = *((void *)v0 + 8);
  uint64_t v3 = *((void *)v0 + 6);
  if (*(void *)(*((void *)v0 + 4) + OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata))
  {
    swift_retain();
    sub_10003C3B8(v3);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
    {
      sub_10009C54C(*((void *)v0 + 6), *((void *)v0 + 9));
      uint64_t v4 = (void *)swift_task_alloc();
      *((void *)v0 + 10) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_100099610;
      uint64_t v5 = *((void *)v0 + 9);
      return sub_100098ABC(v5);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v2 + 56))(*((void *)v0 + 6), 1, 1, *((void *)v0 + 7));
  }
  sub_10009C490(*((void *)v0 + 6));
  uint64_t v7 = (void *)swift_task_alloc();
  *((void *)v0 + 11) = v7;
  void *v7 = v0;
  v7[1] = sub_1000997A8;
  double v8 = v0[2];
  double v9 = v0[3];
  return sub_100098E64(v8, v9);
}

uint64_t sub_100099610()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10009970C, 0, 0);
}

uint64_t sub_10009970C()
{
  sub_10003F884(*((void *)v0 + 9));
  uint64_t v1 = (void *)swift_task_alloc();
  *((void *)v0 + 11) = v1;
  void *v1 = v0;
  v1[1] = sub_1000997A8;
  double v2 = v0[2];
  double v3 = v0[3];
  return sub_100098E64(v2, v3);
}

uint64_t sub_1000997A8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000998A4, 0, 0);
}

uint64_t sub_1000998A4()
{
  uint64_t v1 = (void *)v0[5];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[12] = v7;
    void *v7 = v0;
    v7[1] = sub_100099A18;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    double v9 = (void *)swift_task_alloc();
    v0[13] = v9;
    void *v9 = v0;
    v9[1] = sub_100099BC0;
    return v10();
  }
}

uint64_t sub_100099A18()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100099B14, 0, 0);
}

uint64_t sub_100099B14()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  void *v1 = v0;
  v1[1] = sub_100099BC0;
  return v3();
}

uint64_t sub_100099BC0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100099CBC, 0, 0);
}

uint64_t sub_100099CBC()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v2 object:isa];

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100099E0C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 32) = a1;
  *(double *)(v5 + 16) = a3;
  *(double *)(v5 + 24) = a4;
  uint64_t v6 = _s10VisitAssetC9VisitDataVMa(0);
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  *(void *)(v5 + 80) = swift_task_alloc();
  *(void *)(v5 + 88) = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_1007FC338);
  *(void *)(v5 + 96) = v7;
  *(void *)(v5 + 104) = *(void *)(v7 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  sub_100010218(&qword_1007FC340);
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = swift_task_alloc();
  sub_100010218(&qword_1007F9F50);
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = swift_task_alloc();
  *(void *)(v5 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_100099FDC, 0, 0);
}

uint64_t sub_100099FDC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(*(void *)(v0 + 64) + 56);
  v84(*(void *)(v0 + 152), 1, 1, *(int **)(v0 + 56));
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    || (swift_retain(), unint64_t v3 = sub_100039114(), v5 = v4, v7 = v6, v83 = v8, swift_release(), v3 < 2))
  {
LABEL_21:
    uint64_t v35 = *(void *)(v0 + 136);
    uint64_t v36 = *(void *)(v0 + 56);
    uint64_t v37 = *(void *)(v0 + 64);
    sub_10001B220(*(void *)(v0 + 152), v35, &qword_1007F9F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      sub_10009C490(*(void *)(v0 + 152));
      sub_10009C490(*(void *)(v0 + 136));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      Swift::String v38 = *(uint64_t (**)(void))(v0 + 8);
      return v38();
    }
    else
    {
      sub_10009C54C(*(void *)(v0 + 136), *(void *)(v0 + 72));
      uint64_t v39 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v39;
      *uint64_t v39 = v0;
      v39[1] = sub_10009A6F4;
      uint64_t v40 = *(void *)(v0 + 72);
      return sub_100098ABC(v40);
    }
  }
  uint64_t v81 = v7;
  unsigned __int8 v82 = v5;
  uint64_t v79 = v2;
  uint64_t v80 = v1;
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v85 = *(void *)(v0 + 64);
  unint64_t v90 = v3;
  unint64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = (void (**)(void, void, void, void))(v9 + 56);
  uint64_t v14 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  uint64_t v87 = v11;
  for (i = v12; ; unint64_t v12 = i)
  {
    if (v16 == v12)
    {
      (*v13)(*(void *)(v0 + 120), 1, 1, *(void *)(v0 + 96));
    }
    else
    {
      if (v16 >= *(void *)(v3 + 16))
      {
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v17 = *(unint64_t **)(v0 + 120);
      uint64_t v18 = *(void *)(v0 + 96);
      unint64_t v12 = v16 + 1;
      uint64_t v19 = v3
          + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))
          + *(void *)(v85 + 72) * v16;
      unint64_t v20 = v3;
      uint64_t v21 = *(void *)(v0 + 112) + *(int *)(v10 + 48);
      sub_10003F820(v19, v21);
      uint64_t v22 = (uint64_t)v17 + *(int *)(v10 + 48);
      *uint64_t v17 = v16;
      uint64_t v23 = v21;
      unint64_t v3 = v20;
      uint64_t v11 = v87;
      sub_10009C54C(v23, v22);
      (*v13)(v17, 0, 1, v18);
    }
    unint64_t v16 = v12;
    uint64_t v24 = *(void *)(v0 + 128);
    uint64_t v25 = *(void *)(v0 + 96);
    sub_10002C4EC(*(void *)(v0 + 120), v24, &qword_1007FC340);
    if ((*v14)(v24, 1, v25) == 1)
    {
      sub_10003F810(v3);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    uint64_t v26 = *(unint64_t **)(v0 + 128);
    uint64_t v27 = *(void *)(v0 + 88);
    unint64_t v28 = *v26;
    sub_10009C54C((uint64_t)v26 + *(int *)(v10 + 48), v27);
    uint64_t v29 = v27 + *(int *)(v11 + 40);
    uint64_t v30 = *(void *)(v0 + 88);
    if ((*(unsigned char *)(v29 + 8) & 1) == 0)
    {
      uint64_t v31 = v30 + *(int *)(v11 + 44);
      if ((*(unsigned char *)(v31 + 8) & 1) == 0
        && *(double *)v29 == *(double *)(v0 + 16)
        && *(double *)v31 == *(double *)(v0 + 24))
      {
        break;
      }
    }
    uint64_t result = sub_10003F884(v30);
  }
  uint64_t v89 = v3;
  if (!*(void *)(v80 + v79)) {
    goto LABEL_32;
  }
  swift_retain();
  uint64_t v33 = sub_100039114();
  swift_release();
  if (v33 == 1)
  {
    sub_10009C490(*(void *)(v0 + 152));
    uint64_t v34 = 1;
    sub_10003F810(1);
    goto LABEL_33;
  }
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t result = sub_10003F810(v41);
  if (!v33)
  {
LABEL_32:
    sub_10009C490(*(void *)(v0 + 152));
    uint64_t v34 = 1;
    goto LABEL_33;
  }
  if ((v28 & 0x8000000000000000) != 0) {
    goto LABEL_40;
  }
  if (v28 >= *(void *)(v33 + 16)) {
    goto LABEL_41;
  }
  uint64_t v42 = *(void *)(v0 + 152);
  sub_10003F820(v33+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v28, *(void *)(v0 + 144));
  swift_bridgeObjectRelease();
  sub_10009C490(v42);
  uint64_t v34 = 0;
LABEL_33:
  uint64_t v43 = *(void *)(v0 + 144);
  uint64_t v44 = *(void **)(v0 + 152);
  uint64_t v45 = *(void **)(v0 + 88);
  uint64_t v86 = *(void *)(v0 + 80);
  uint64_t v46 = *(int **)(v0 + 56);
  uint64_t v77 = *(void *)(v0 + 32);
  uint64_t v78 = *(void *)(v0 + 40);
  v84(v43, v34, 1, v46);
  sub_10002C4EC(v43, (uint64_t)v44, &qword_1007F9F50);
  sub_10009C490((uint64_t)v44);
  uint64_t v47 = v45[3];
  uint64_t v48 = v45[5];
  uint64_t v75 = v45[4];
  uint64_t v76 = v45[2];
  sub_10001B220((uint64_t)v45 + v46[7], (uint64_t)v44 + v46[7], (uint64_t *)&unk_1007FC470);
  sub_10001B220((uint64_t)v45 + v46[8], (uint64_t)v44 + v46[8], (uint64_t *)&unk_1007FC470);
  sub_10001B220((uint64_t)v45 + v46[9], (uint64_t)v44 + v46[9], (uint64_t *)&unk_1007FC470);
  double v49 = *(double *)v29;
  char v50 = *(unsigned char *)(v29 + 8);
  double v51 = *(double *)v31;
  char v52 = *(unsigned char *)(v31 + 8);
  uint64_t v53 = (void *)((char *)v45 + v46[12]);
  uint64_t v54 = *v53;
  unint64_t v55 = v53[1];
  id v56 = (void *)((char *)v45 + v46[13]);
  unint64_t v57 = v56[1];
  uint64_t v74 = *v56;
  uint64_t v58 = *v56;
  LOBYTE(v56) = *((unsigned char *)v45 + v46[14]);
  unint64_t v59 = (char *)v45 + v46[15];
  uint64_t v60 = *(void *)v59;
  LOBYTE(v59) = v59[8];
  unint64_t v61 = (char *)v45 + v46[16];
  uint64_t v62 = *(void *)v61;
  LOBYTE(v61) = v61[8];
  *uint64_t v44 = v77;
  v44[1] = v78;
  v44[2] = v76;
  v44[3] = v47;
  v44[4] = v75;
  v44[5] = v48;
  uint64_t v63 = (double *)((char *)v44 + *(int *)(v87 + 40));
  double *v63 = v49;
  *((unsigned char *)v63 + 8) = v50;
  uint64_t v64 = (double *)((char *)v44 + *(int *)(v87 + 44));
  *uint64_t v64 = v51;
  *((unsigned char *)v64 + 8) = v52;
  uint64_t v65 = (void *)((char *)v44 + v46[12]);
  *uint64_t v65 = v54;
  v65[1] = v55;
  uint64_t v66 = (void *)((char *)v44 + v46[13]);
  *uint64_t v66 = v58;
  v66[1] = v57;
  unint64_t v67 = v57;
  *((unsigned char *)v44 + v46[14]) = (_BYTE)v56;
  uint64_t v68 = (char *)v44 + v46[15];
  *(void *)uint64_t v68 = v60;
  v68[8] = (char)v59;
  uint64_t v69 = (char *)v44 + v46[16];
  *(void *)uint64_t v69 = v62;
  v69[8] = (char)v61;
  v84((uint64_t)v44, 0, 1, v46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100040F10(v54, v55);
  sub_100040F10(v74, v67);
  sub_10035F9F4(v28, v86);
  sub_10003F884(v86);
  uint64_t result = sub_10003F810(v89);
  if (v83) {
    uint64_t v70 = 0;
  }
  else {
    uint64_t v70 = v81;
  }
  uint64_t v71 = v70 + 1;
  if (!__OFADD__(v70, 1))
  {
    uint64_t v72 = *(void *)(v0 + 88);
    sub_100010218(&qword_1007F9E20);
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 64) = v90;
    *(void *)(v73 + 72) = v82;
    *(void *)(v73 + 80) = v71;
    *(_WORD *)(v73 + 88) = 256;
    *(void *)(v73 + 24) = 0;
    *(void *)(v73 + 32) = 0;
    *(void *)(v73 + 16) = 2;
    *(unsigned char *)(v73 + 40) = 0;
    *(_OWORD *)(v73 + 48) = xmmword_1006D6A80;
    *(void *)(v80 + v79) = v73;
    swift_release();
    sub_10003F884(v72);
    goto LABEL_21;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10009A6F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10009A7F0, 0, 0);
}

uint64_t sub_10009A7F0()
{
  uint64_t v1 = (void *)v0[6];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    unsigned __int8 v4 = v1;
  }
  else {
    unsigned __int8 v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[21] = v7;
    void *v7 = v0;
    v7[1] = sub_10009A964;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[22] = v9;
    void *v9 = v0;
    v9[1] = sub_10009AB0C;
    return v10();
  }
}

uint64_t sub_10009A964()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10009AA60, 0, 0);
}

uint64_t sub_10009AA60()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = sub_10009AB0C;
  return v3();
}

uint64_t sub_10009AB0C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10009AC08, 0, 0);
}

uint64_t sub_10009AC08()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(v0[6] + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  sub_10003F884(v2);
  sub_10009C490(v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10009ADC0(uint64_t a1)
{
  uint64_t v3 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v3 - 8);
  unsigned __int8 v5 = (char *)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v134 = (uint64_t)v126 - v7;
  __chkstk_darwin(v8);
  uint64_t v135 = (void *)((char *)v126 - v9);
  uint64_t v10 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v136 = *((void *)v10 - 1);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001E9D8C(a1);
  uint64_t v137 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  uint64_t v138 = v1;
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_7;
  }
  char v14 = v13;
  swift_retain();
  uint64_t v15 = sub_100039114();
  swift_release();
  if (v15 == 1) {
    goto LABEL_7;
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_10003F810(v16);
  if (!v15) {
    goto LABEL_7;
  }
  unint64_t v130 = v15;
  unint64_t v17 = *(void *)(v15 + 16);
  if (v17 < 2 || (v14 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    goto LABEL_8;
  }
  v126[0] = v5;
  unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage;
  unsigned __int8 v5 = (char *)(v130 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)));
  uint64_t v26 = *(char **)(v136 + 72);
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  *(void *)&long long v28 = 136315394;
  long long v127 = v28;
  v126[1] = (char *)&type metadata for Any + 8;
  id v131 = v10;
  uint64_t v132 = v26;
  do
  {
    sub_10003F820((uint64_t)v5, (uint64_t)v12);
    uint64_t v30 = (uint64_t *)&v12[v10[13]];
    unint64_t v31 = v30[1];
    if (v31 >> 60 == 15) {
      goto LABEL_17;
    }
    unint64_t v32 = v10;
    uint64_t v33 = *v30;
    sub_10001B284(0, (unint64_t *)&unk_10080F270);
    sub_10001B284(0, (unint64_t *)&unk_10080E940);
    sub_100040F10(v33, v31);
    uint64_t v29 = v27;
    uint64_t v34 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    sub_100040DBC(v33, v31);
    uint64_t v26 = v132;
    if (!v34)
    {
      uint64_t v10 = v32;
LABEL_17:
      sub_10003F884((uint64_t)v12);
      uint64_t v29 = v27;
      goto LABEL_18;
    }
    id v35 = [v34 placemark];

    sub_10003F884((uint64_t)v12);
    uint64_t v10 = v32;
    if (v35)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v26 = v132;
    }
LABEL_18:
    unsigned __int8 v5 = &v26[(void)v5];
    uint64_t v27 = v29;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  unint64_t v36 = v139;
  swift_bridgeObjectRelease();
  unint64_t v37 = v36 >> 62;
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    Swift::Int v133 = (unint64_t *)(v36 >> 62);
    if (!v38) {
      goto LABEL_71;
    }
LABEL_28:
    if (v38 >= 1)
    {
      uint64_t v39 = 0;
      uint64_t v40 = (char *)_swiftEmptyArrayStorage;
      do
      {
        if ((v36 & 0xC000000000000001) != 0) {
          uint64_t v41 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v41 = (char *)*(id *)(v36 + 8 * v39 + 32);
        }
        uint64_t v26 = v41;
        id v42 = [v41 country];
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v46 = v45;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v40 = sub_1002A54A0(0, *((void *)v40 + 2) + 1, 1, v40);
          }
          unint64_t v17 = *((void *)v40 + 2);
          unint64_t v47 = *((void *)v40 + 3);
          uint64_t v26 = (char *)(v17 + 1);
          if (v17 >= v47 >> 1) {
            uint64_t v40 = sub_1002A54A0((char *)(v47 > 1), v17 + 1, 1, v40);
          }
          *((void *)v40 + 2) = v26;
          uint64_t v48 = &v40[16 * v17];
          *((void *)v48 + 4) = v44;
          *((void *)v48 + 5) = v46;
        }
        else
        {
        }
        ++v39;
      }
      while (v38 != v39);
      goto LABEL_72;
    }
    __break(1u);
LABEL_175:
    __break(1u);
    __break(1u);
    goto LABEL_176;
  }
  uint64_t v38 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  Swift::Int v133 = 0;
  if (v38) {
    goto LABEL_28;
  }
LABEL_71:
  uint64_t v40 = (char *)_swiftEmptyArrayStorage;
LABEL_72:
  swift_bridgeObjectRelease();
  unint64_t v67 = (unint64_t *)*((void *)v40 + 2);
  if (v133)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v68 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unsigned __int8 v5 = (char *)v126[0];
  uint64_t v10 = v131;
  if (v67 != (unint64_t *)v68) {
    goto LABEL_91;
  }
  Swift::Int v133 = v67;
  unint64_t v139 = (unint64_t)v40;
  uint64_t v69 = sub_100010218(&qword_100800A70);
  unint64_t v70 = sub_10009C4F0();
  unint64_t v37 = (unint64_t)&v139;
  uint64_t v132 = (char *)v69;
  unint64_t v130 = v70;
  uint64_t v71 = (void *)Collection<>.uniqued()();
  swift_bridgeObjectRelease();
  uint64_t v72 = v71[2];
  if (!v72) {
    goto LABEL_91;
  }
  if (v72 != 1)
  {
    unint64_t v17 = v71[4];
    unint64_t v31 = v71[5];
    uint64_t v26 = (char *)v71[6];
    unint64_t v37 = v71[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = (int *)&unk_1006D6000;
    uint64_t v38 = (uint64_t)&type metadata for String;
    if (v72 == 2)
    {
      if (qword_1007F7610 == -1) {
        goto LABEL_97;
      }
    }
    else if (qword_1007F7608 == -1)
    {
LABEL_97:
      sub_100010218((uint64_t *)&unk_100806070);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = *((_OWORD *)v10 + 39);
      *(void *)(v81 + 56) = v38;
      unint64_t v82 = sub_10001B2C0();
      *(void *)(v81 + 32) = v17;
      *(void *)(v81 + 40) = v31;
      *(void *)(v81 + 96) = v38;
      *(void *)(v81 + 104) = v82;
      *(void *)(v81 + 64) = v82;
      *(void *)(v81 + 72) = v26;
      *(void *)(v81 + 80) = v37;
      uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
      unint64_t v19 = v83;
      swift_bridgeObjectRelease();
      uint64_t v10 = v131;
      goto LABEL_8;
    }
LABEL_176:
    swift_once();
    goto LABEL_97;
  }
  if (v38)
  {
    unint64_t v129 = (unint64_t)v71;
    swift_bridgeObjectRetain();
    unint64_t v37 = 0;
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v73 = *(id *)(v36 + 8 * v37 + 32);
      }
      unint64_t v17 = (unint64_t)v73;
      id v74 = [v73 administrativeArea];
      if (v74)
      {
        uint64_t v75 = v74;
        uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v77;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = (unint64_t)sub_1002A54A0(0, *(void *)(v31 + 16) + 1, 1, (char *)v31);
        }
        unint64_t v79 = *(void *)(v31 + 16);
        unint64_t v78 = *(void *)(v31 + 24);
        unint64_t v17 = v79 + 1;
        if (v79 >= v78 >> 1) {
          unint64_t v31 = (unint64_t)sub_1002A54A0((char *)(v78 > 1), v79 + 1, 1, (char *)v31);
        }
        *(void *)(v31 + 16) = v17;
        unint64_t v80 = v31 + 16 * v79;
        *(void *)(v80 + 32) = v76;
        *(void *)(v80 + 40) = v26;
      }
      else
      {
      }
      ++v37;
      uint64_t v10 = v131;
    }
    while (v38 != v37);
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = (char *)v126[0];
    uint64_t v71 = (void *)v129;
  }
  else
  {
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (*(unint64_t **)(v31 + 16) != v133)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v71[2])
    {
      uint64_t v18 = v71[4];
      unint64_t v19 = v71[5];
      swift_bridgeObjectRetain();
      goto LABEL_118;
    }
    goto LABEL_175;
  }
  unint64_t v139 = v31;
  unint64_t v37 = (unint64_t)&v139;
  uint64_t v84 = (void *)Collection<>.uniqued()();
  swift_bridgeObjectRelease();
  if (!v84[2])
  {
    unint64_t v31 = (unint64_t)v84;
    goto LABEL_116;
  }
  unint64_t v129 = v84[2];
  swift_bridgeObjectRelease();
  unint64_t v85 = v84[2];
  if (v85 > 1)
  {
    unint64_t v17 = v84[4];
    uint64_t v96 = (unint64_t *)v84[5];
    unint64_t v31 = v84[6];
    int v97 = (void *)v84[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v129 >= 3)
    {
      if (qword_1007F7608 == -1) {
        goto LABEL_149;
      }
      goto LABEL_179;
    }
    if (v129 == 2)
    {
      if (qword_1007F7610 == -1)
      {
LABEL_149:
        sub_100010218((uint64_t *)&unk_100806070);
        uint64_t v112 = swift_allocObject();
        *(_OWORD *)(v112 + 16) = xmmword_1006D6270;
        *(void *)(v112 + 56) = &type metadata for String;
        unint64_t v113 = sub_10001B2C0();
        *(void *)(v112 + 32) = v17;
        *(void *)(v112 + 40) = v96;
        *(void *)(v112 + 96) = &type metadata for String;
        *(void *)(v112 + 104) = v113;
        *(void *)(v112 + 64) = v113;
        *(void *)(v112 + 72) = v31;
        *(void *)(v112 + 80) = v97;
        uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
        unint64_t v19 = v114;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
LABEL_179:
      swift_once();
      goto LABEL_149;
    }
LABEL_91:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v128 = v84;
  *(void *)&long long v127 = v85;
  if (v38)
  {
    swift_bridgeObjectRetain();
    uint64_t v86 = 0;
    uint64_t v87 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v88 = *(id *)(v36 + 8 * v86 + 32);
      }
      unint64_t v31 = (unint64_t)v88;
      id v89 = [v88 subLocality];
      if (v89)
      {
        unint64_t v90 = v89;
        uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v93 = v92;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v87 = sub_1002A54A0(0, *((void *)v87 + 2) + 1, 1, v87);
        }
        unint64_t v17 = *((void *)v87 + 2);
        unint64_t v94 = *((void *)v87 + 3);
        unint64_t v31 = v17 + 1;
        if (v17 >= v94 >> 1) {
          uint64_t v87 = sub_1002A54A0((char *)(v94 > 1), v17 + 1, 1, v87);
        }
        *((void *)v87 + 2) = v31;
        uint64_t v95 = &v87[16 * v17];
        *((void *)v95 + 4) = v91;
        *((void *)v95 + 5) = v93;
      }
      else
      {
      }
      ++v86;
    }
    while (v38 != v86);
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = (char *)v126[0];
    uint64_t v10 = v131;
  }
  else
  {
    uint64_t v87 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v98 = v133;
  if (*((unint64_t **)v87 + 2) != v133) {
    goto LABEL_128;
  }
  unint64_t v139 = (unint64_t)v87;
  uint64_t v99 = (void *)Collection<>.uniqued()();
  swift_bridgeObjectRelease();
  if (v99[2] != 1)
  {
    uint64_t v98 = v133;
LABEL_128:
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_bridgeObjectRetain();
      uint64_t v100 = 0;
      uint64_t v101 = (char *)_swiftEmptyArrayStorage;
      do
      {
        if ((v36 & 0xC000000000000001) != 0) {
          id v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v102 = *(id *)(v36 + 8 * v100 + 32);
        }
        unint64_t v31 = (unint64_t)v102;
        id v103 = [v102 locality];
        if (v103)
        {
          uint64_t v104 = v103;
          uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v107 = v106;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v101 = sub_1002A54A0(0, *((void *)v101 + 2) + 1, 1, v101);
          }
          unint64_t v17 = *((void *)v101 + 2);
          unint64_t v108 = *((void *)v101 + 3);
          unint64_t v31 = v17 + 1;
          if (v17 >= v108 >> 1) {
            uint64_t v101 = sub_1002A54A0((char *)(v108 > 1), v17 + 1, 1, v101);
          }
          *((void *)v101 + 2) = v31;
          uint64_t v109 = &v101[16 * v17];
          *((void *)v109 + 4) = v105;
          *((void *)v109 + 5) = v107;
        }
        else
        {
        }
        ++v100;
      }
      while (v38 != v100);
      swift_bridgeObjectRelease();
      unsigned __int8 v5 = (char *)v126[0];
      uint64_t v10 = v131;
      uint64_t v98 = v133;
    }
    else
    {
      uint64_t v101 = (char *)_swiftEmptyArrayStorage;
    }
    if (*((unint64_t **)v101 + 2) == v98)
    {
      unint64_t v139 = (unint64_t)v101;
      unint64_t v31 = v130;
      uint64_t v110 = Collection<>.uniqued()();
      swift_bridgeObjectRelease();
      if (*(void *)(v110 + 16) == 1)
      {
        unint64_t v139 = v110;
        unint64_t v111 = (void *)Collection<>.uniqued()();
        swift_bridgeObjectRelease();
        if (v111[2])
        {
          uint64_t v18 = v111[4];
          unint64_t v19 = v111[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
      }
    }
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_bridgeObjectRetain();
      uint64_t v115 = 0;
      unint64_t v116 = (char *)_swiftEmptyArrayStorage;
      do
      {
        if ((v36 & 0xC000000000000001) != 0) {
          id v117 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v117 = *(id *)(v36 + 8 * v115 + 32);
        }
        unint64_t v31 = (unint64_t)v117;
        id v118 = [v117 subAdministrativeArea];
        if (v118)
        {
          Swift::Int v119 = v118;
          uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v122 = v121;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v116 = sub_1002A54A0(0, *((void *)v116 + 2) + 1, 1, v116);
          }
          unint64_t v17 = *((void *)v116 + 2);
          unint64_t v123 = *((void *)v116 + 3);
          unint64_t v31 = v17 + 1;
          if (v17 >= v123 >> 1) {
            unint64_t v116 = sub_1002A54A0((char *)(v123 > 1), v17 + 1, 1, v116);
          }
          *((void *)v116 + 2) = v31;
          unint64_t v124 = &v116[16 * v17];
          *((void *)v124 + 4) = v120;
          *((void *)v124 + 5) = v122;
        }
        else
        {
        }
        ++v115;
      }
      while (v38 != v115);
      swift_bridgeObjectRelease();
      unsigned __int8 v5 = (char *)v126[0];
      uint64_t v10 = v131;
    }
    else
    {
      unint64_t v116 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v96 = (unint64_t *)*((void *)v116 + 2);
    swift_bridgeObjectRelease();
    if (v96 == v133)
    {
      unint64_t v139 = (unint64_t)v116;
      uint64_t v96 = &v139;
      uint64_t v125 = (void *)Collection<>.uniqued()();
      swift_bridgeObjectRelease();
      if (v125[2] == 1)
      {
        uint64_t v18 = v125[4];
        unint64_t v19 = v125[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    if (!(void)v127) {
      goto LABEL_6;
    }
    int v97 = v128;
    if (v128[2])
    {
      uint64_t v18 = v128[4];
      unint64_t v19 = v128[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v129 == 1) {
        goto LABEL_8;
      }
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_179;
  }
  uint64_t v18 = v99[4];
  unint64_t v19 = v99[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_118:
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20)
  {
    swift_bridgeObjectRelease();
    if (!*(void *)(v138 + v137)) {
      goto LABEL_68;
    }
    swift_retain();
    uint64_t v21 = sub_100039114();
    swift_release();
    if (v21 == 1) {
      goto LABEL_45;
    }
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_10003F810(v22);
    if (!v21) {
      goto LABEL_45;
    }
    if (*(void *)(v21 + 16))
    {
      uint64_t v24 = v135;
      uint64_t v23 = v136;
      sub_10003F820(v21 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), (uint64_t)v135);
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v25 = 1;
      uint64_t v24 = v135;
      uint64_t v23 = v136;
    }
    (*(void (**)(uint64_t *, uint64_t, uint64_t, int *))(v23 + 56))(v24, v25, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v23 + 48))(v24, 1, v10) == 1)
    {
      sub_10009C490((uint64_t)v24);
      goto LABEL_45;
    }
    uint64_t v18 = *v24;
    uint64_t v49 = v24[1];
    swift_bridgeObjectRetain();
    sub_10003F884((uint64_t)v24);
    if (!v49)
    {
LABEL_45:
      if (*(void *)(v138 + v137))
      {
        swift_retain();
        uint64_t v50 = sub_100039114();
        swift_release();
        if (v50 != 1)
        {
          uint64_t v51 = swift_bridgeObjectRetain();
          sub_10003F810(v51);
          if (v50)
          {
            if (*(void *)(v50 + 16))
            {
              uint64_t v52 = v136;
              uint64_t v53 = v134;
              sub_10003F820(v50 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), v134);
              uint64_t v54 = 0;
            }
            else
            {
              uint64_t v54 = 1;
              uint64_t v52 = v136;
              uint64_t v53 = v134;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v52 + 56))(v53, v54, 1, v10);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v52 + 48))(v53, 1, v10) == 1)
            {
              sub_10009C490(v53);
              goto LABEL_58;
            }
            uint64_t v55 = v53 + v10[13];
            unint64_t v56 = *(void *)(v55 + 8);
            if (v56 >> 60 == 15)
            {
              sub_10003F884(v53);
              goto LABEL_58;
            }
            uint64_t v57 = *(void *)v55;
            sub_100040D64(*(void *)v55, *(void *)(v55 + 8));
            uint64_t v58 = (void *)sub_10003F8E0(v57, v56);
            sub_100040DBC(v57, v56);
            sub_10003F884(v53);
            if (v58)
            {
              id v59 = [v58 placemark];

              id v60 = [v59 name];
              if (v60)
              {
                uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                swift_bridgeObjectRelease();

                return v18;
              }
            }
          }
        }
LABEL_58:
        if (*(void *)(v138 + v137))
        {
          swift_retain();
          uint64_t v61 = sub_100039114();
          swift_release();
          if (v61 != 1)
          {
            uint64_t v62 = swift_bridgeObjectRetain();
            sub_10003F810(v62);
            if (v61)
            {
              if (*(void *)(v61 + 16))
              {
                uint64_t v63 = v136;
                sub_10003F820(v61 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), (uint64_t)v5);
                uint64_t v64 = 0;
              }
              else
              {
                uint64_t v64 = 1;
                uint64_t v63 = v136;
              }
              (*(void (**)(char *, uint64_t, uint64_t, int *))(v63 + 56))(v5, v64, 1, v10);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v5, 1, v10) == 1)
              {
                sub_10009C490((uint64_t)v5);
              }
              else
              {
                uint64_t v18 = *((void *)v5 + 2);
                uint64_t v65 = *((void *)v5 + 3);
                swift_bridgeObjectRetain();
                sub_10003F884((uint64_t)v5);
                if (v65)
                {
                  swift_bridgeObjectRelease();
                  return v18;
                }
              }
            }
          }
        }
      }
LABEL_68:
      swift_bridgeObjectRelease_n();
      return 32;
    }
  }
  return v18;
}

uint64_t sub_10009C268()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for MapAssetCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_10009C2BC()
{
  type metadata accessor for MapAssetCRUDActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_10083CEE8 = v0;
  return result;
}

uint64_t sub_10009C2F8(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10009C3B0(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v2 = (double *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      *((void *)v2 + 2) = a1;
    }
    else
    {
      uint64_t v2 = _swiftEmptyArrayStorage;
    }
    _s10VisitAssetC9VisitDataVMa(0);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_10009C490(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9F50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10009C4F0()
{
  unint64_t result = qword_1007FC328;
  if (!qword_1007FC328)
  {
    sub_100014440(&qword_100800A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1007FC328);
  }
  return result;
}

uint64_t sub_10009C54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009C5B0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FC360);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007FC360);
  if (qword_1007F7D30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB90);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10009C760(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v310 = a3;
  id v311 = a4;
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  uint64_t v296 = &v290[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v302 = &v290[-v11];
  __chkstk_darwin(v12);
  uint64_t v303 = &v290[-v13];
  uint64_t v305 = type metadata accessor for Date();
  v309 = *(void **)(v305 - 8);
  __chkstk_darwin(v305);
  uint64_t v15 = &v290[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v294 = &v290[-v17];
  __chkstk_darwin(v18);
  uint64_t v20 = &v290[-v19];
  __chkstk_darwin(v21);
  v299 = (uint64_t *)&v290[-v22];
  __chkstk_darwin(v23);
  uint64_t v25 = &v290[-v24];
  __chkstk_darwin(v26);
  v304 = &v290[-v27];
  __chkstk_darwin(v28);
  uint64_t v297 = &v290[-v29];
  __chkstk_darwin(v30);
  uint64_t v298 = &v290[-v31];
  uint64_t v33 = CKRecord.recordType.getter();
  uint64_t v34 = v32;
  uint64_t v308 = a1;
  v306 = a5;
  if (v33 == 0x456C616E72756F4ALL && v32 == 0xEC0000007972746ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v292 = v15;
    if (qword_1007F6980 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    uint64_t v36 = sub_100026A54(v35, (uint64_t)qword_1007FC360);
    unint64_t v37 = a2;
    uint64_t v307 = (uint8_t *)v36;
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    BOOL v40 = os_log_type_enabled(v38, v39);
    v312 = v37;
    uint64_t v295 = v25;
    uint64_t v293 = v20;
    if (v40)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136446210;
      v314[0] = v42;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v313 = sub_10011EA98(v43, v44, v314);
      unint64_t v37 = v312;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "%{public}s (didFetch) - RECORD_TYPE_JOURNAL_ENTRY", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v45 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
    id v46 = *(id *)&v37[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
    uint64_t v48 = (uint64_t)v310;
    uint64_t v47 = (uint64_t)v311;
    os_log_t v301 = (os_log_t)sub_10056A2E0((uint64_t)v310, (uint64_t)v311, a5);

    uint64_t v300 = v45;
    id v49 = *(id *)&v37[v45];
    id v50 = [a5 updatedObjects];
    sub_10001B284(0, &qword_1008113A0);
    sub_100082CD4();
    uint64_t v51 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    sub_1002A3DE4(v51, v48, v47);
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v53)
    {
      type metadata accessor for JournalEntryMO();
      uint64_t v54 = swift_dynamicCastClass();
      if (v54)
      {
        id v55 = (id)v54;

        unint64_t v56 = v304;
        goto LABEL_24;
      }
    }
    id v66 = [a5 insertedObjects];
    uint64_t v67 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v68 = (uint64_t)v311;
    swift_bridgeObjectRetain();
    sub_1002A3DE4(v67, (uint64_t)v310, v68);
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v56 = v304;
    if (v70)
    {
      type metadata accessor for JournalEntryMO();
      id v55 = (id)swift_dynamicCastClass();

      if (!v55) {
    }
      }
    else
    {

      id v55 = 0;
    }
LABEL_24:
    uint64_t v71 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
    id v72 = [a1 encryptedValues];
    NSString v73 = String._bridgeToObjectiveC()();
    id v74 = [v72 objectForKeyedSubscript:v73];
    swift_unknownObjectRelease();

    if (v74)
    {
      v314[0] = (uint64_t)v74;
      sub_100010218((uint64_t *)&unk_1008060F0);
      if (swift_dynamicCast())
      {
        uint64_t v75 = v56;
        __int16 v76 = v313;
        uint64_t v77 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v77, v78))
        {
          unint64_t v79 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v79 = 33554688;
          uint64_t v71 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
          LOWORD(v314[0]) = v76;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "(didFetch) (record.textLength) == %hd", v79, 6u);
          swift_slowDealloc();
        }

        unint64_t v56 = v75;
      }
    }
    id v80 = [a1 encryptedValues];
    NSString v81 = String._bridgeToObjectiveC()();
    id v82 = [v80 objectForKeyedSubscript:v81];
    swift_unknownObjectRelease();

    id v311 = v55;
    if (v82)
    {
      v314[0] = (uint64_t)v82;
      sub_100010218((uint64_t *)&unk_1008060F0);
      uint64_t v83 = (uint64_t)v303;
      uint64_t v84 = v305;
      int v85 = swift_dynamicCast();
      uint64_t v86 = v309;
      uint64_t v87 = (unsigned char *)v309[7];
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v87)(v83, v85 ^ 1u, 1, v84);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86[6])(v83, 1, v84) != 1)
      {
        id v88 = v298;
        ((void (*)(NSObject *, uint64_t, uint64_t))v86[4])(v298, v83, v84);
        id v89 = (void (*)(NSObject *, NSObject *, uint64_t))v86[2];
        unint64_t v90 = v297;
        v89(v297, v88, v84);
        v89(v56, v88, v84);
        uint64_t v91 = Logger.logObject.getter();
        os_log_type_t v92 = static os_log_type_t.default.getter();
        int v93 = v92;
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v94 = swift_slowAlloc();
          id v310 = (id)swift_slowAlloc();
          v314[0] = (uint64_t)v310;
          *(_DWORD *)uint64_t v94 = 136315394;
          v304 = v91;
          id v95 = [objc_allocWithZone((Class)NSDateFormatter) init];
          NSString v96 = String._bridgeToObjectiveC()();
          int v291 = v93;
          int v97 = v96;
          [v95 setDateFormat:v96];

          Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v99 = [v95 stringFromDate:isa];

          uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v303 = v87;
          unint64_t v102 = v101;

          uint64_t v313 = sub_10011EA98(v100, v102, v314);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          id v103 = (void (*)(NSObject *, uint64_t))v309[1];
          v103(v90, v84);
          *(_WORD *)(v94 + 12) = 2080;
          sub_1000AC2BC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
          uint64_t v104 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v313 = sub_10011EA98(v104, v105, v314);
          id v55 = v311;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v103(v56, v84);
          uint64_t v106 = v304;
          _os_log_impl((void *)&_mh_execute_header, v304, (os_log_type_t)v291, "(didFetch) (record.updatedDate) == %s  %s", (uint8_t *)v94, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v86 = v309;
          swift_slowDealloc();

          v103(v88, v84);
          uint64_t v87 = v303;
          uint64_t v71 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        }
        else
        {

          uint64_t v109 = (void (*)(NSObject *, uint64_t))v86[1];
          v109(v56, v84);
          v109(v90, v84);
          v109(v88, v84);
        }
        unint64_t v37 = v312;
        os_log_t v107 = v301;
        if (!v301) {
          goto LABEL_38;
        }
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v86 = v309;
      uint64_t v87 = (unsigned char *)v309[7];
      uint64_t v83 = (uint64_t)v303;
      uint64_t v84 = v305;
      ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v87)(v303, 1, 1, v305);
    }
    sub_1000AC7D4(v83);
    os_log_t v107 = v301;
    if (!v301)
    {
LABEL_38:
      if (v55)
      {
        os_log_t v108 = (os_log_t)v55;
        os_log_t v107 = 0;
LABEL_40:
        v304 = v107;
        id v310 = v108;
        id v110 = [v108 updatedDate];
        if (v110)
        {
          unint64_t v111 = v110;
          uint64_t v112 = v299;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v113 = (void (*)(unsigned char *, uint64_t *, uint64_t))v86[4];
          uint64_t v114 = (uint64_t)v302;
          v113(v302, v112, v84);
          uint64_t v303 = v87;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v87)(v114, 0, 1, v84);
          uint64_t v115 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v86[6];
          if (v115(v114, 1, v84) != 1)
          {
            v113(v295, (uint64_t *)v114, v84);
            id v116 = [v308 v71[36]];
            uint64_t v117 = v84;
            NSString v118 = String._bridgeToObjectiveC()();
            id v119 = [v116 objectForKeyedSubscript:v118];
            swift_unknownObjectRelease();

            if (v119)
            {
              v314[0] = (uint64_t)v119;
              sub_100010218((uint64_t *)&unk_1008060F0);
              uint64_t v114 = (uint64_t)v296;
              int v120 = swift_dynamicCast();
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v303)(v114, v120 ^ 1u, 1, v117);
              uint64_t v121 = v117;
              if (v115(v114, 1, v117) != 1)
              {
                uint64_t v122 = v293;
                v113(v293, (uint64_t *)v114, v117);
                unint64_t v123 = v309;
                unint64_t v124 = (void (*)(unsigned char *, unsigned char *, uint64_t))v309[2];
                uint64_t v125 = v294;
                uint64_t v126 = v295;
                v124(v294, v295, v117);
                long long v127 = v292;
                v124(v292, v122, v117);
                uint64_t v128 = v312;
                unint64_t v129 = Logger.logObject.getter();
                os_log_type_t v130 = static os_log_type_t.default.getter();
                int v131 = v130;
                if (os_log_type_enabled(v129, v130))
                {
                  uint64_t v132 = swift_slowAlloc();
                  uint64_t v303 = (unsigned char *)swift_slowAlloc();
                  v314[0] = (uint64_t)v303;
                  *(_DWORD *)uint64_t v132 = 136446722;
                  LODWORD(v302) = v131;
                  type metadata accessor for UUID();
                  sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v133 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v313 = sub_10011EA98(v133, v134, v314);
                  v299 = v314;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v132 + 12) = 2080;
                  id v135 = [objc_allocWithZone((Class)NSDateFormatter) init];
                  NSString v136 = String._bridgeToObjectiveC()();
                  [v135 setDateFormat:v136];

                  Class v137 = Date._bridgeToObjectiveC()().super.isa;
                  uint64_t v138 = v125;
                  id v139 = [v135 stringFromDate:v137];

                  uint64_t v140 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  os_log_t v301 = v129;
                  unint64_t v142 = v141;

                  uint64_t v313 = sub_10011EA98(v140, v142, v314);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  uint64_t v143 = (void (*)(unsigned char *, uint64_t))v309[1];
                  v143(v138, v305);
                  *(_WORD *)(v132 + 22) = 2080;
                  id v144 = [objc_allocWithZone((Class)NSDateFormatter) init];
                  NSString v145 = String._bridgeToObjectiveC()();
                  [v144 setDateFormat:v145];

                  uint64_t v146 = v128;
                  uint64_t v147 = v292;
                  Class v148 = Date._bridgeToObjectiveC()().super.isa;
                  id v149 = [v144 stringFromDate:v148];

                  uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v152 = v151;

                  uint64_t v313 = sub_10011EA98(v150, v152, v314);
                  uint64_t v121 = v305;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  uint64_t v153 = v147;
                  uint64_t v128 = v146;
                  v143(v153, v121);
                  uint64_t v126 = v295;
                  unint64_t v129 = v301;
                  _os_log_impl((void *)&_mh_execute_header, v301, (os_log_type_t)v302, "%{public}s (didFetch) Comparing local and remote dates local:%s remote:%s", (uint8_t *)v132, 0x20u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v122 = v293;
                  swift_slowDealloc();
                }
                else
                {

                  uint64_t v143 = (void (*)(unsigned char *, uint64_t))v123[1];
                  v143(v125, v121);
                  v143(v127, v121);
                }

                if (static Date.> infix(_:_:)())
                {
                  uint64_t v216 = v128;
                  uint64_t v217 = Logger.logObject.getter();
                  os_log_type_t v218 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v217, v218))
                  {
                    uint64_t v219 = (uint8_t *)swift_slowAlloc();
                    uint64_t v220 = swift_slowAlloc();
                    *(_DWORD *)uint64_t v219 = 136446210;
                    v314[0] = v220;
                    uint64_t v307 = v219 + 4;
                    type metadata accessor for UUID();
                    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                    uint64_t v221 = dispatch thunk of CustomStringConvertible.description.getter();
                    uint64_t v313 = sub_10011EA98(v221, v222, v314);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();

                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, v217, v218, "%{public}s (didFetch) Conflict Detected. Local change is newer than remote", v219, 0xCu);
                    swift_arrayDestroy();
                    uint64_t v122 = v293;
                    swift_slowDealloc();
                    uint64_t v126 = v295;
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                  unint64_t v243 = v308;
                  uint64_t v244 = v300;
                  id v245 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
                  [v243 encodeSystemFieldsWithCoder:v245];
                  id v246 = [v245 encodedData];
                  uint64_t v247 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v249 = v248;

                  Class v250 = Data._bridgeToObjectiveC()().super.isa;
                  sub_100040DD0(v247, v249);
                  id v251 = v310;
                  [v310 setRecordSystemFields:v250];

                  [v251 setIsUploadedToCloud:0];
                  id v252 = *(id *)&v312[v244];
                  sub_1004D1B10();

                  uint64_t v253 = v305;
                  v143(v122, v305);
                  v143(v126, v253);
                  return;
                }
                v143(v122, v121);
                v143(v126, v121);
                goto LABEL_56;
              }
            }
            else
            {
              uint64_t v114 = (uint64_t)v296;
              ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v303)(v296, 1, 1, v117);
              uint64_t v121 = v117;
            }
            ((void (*)(unsigned char *, uint64_t))v309[1])(v295, v121);
          }
        }
        else
        {
          uint64_t v114 = (uint64_t)v302;
          ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v87)(v302, 1, 1, v84);
        }
        sub_1000AC7D4(v114);
LABEL_56:
        uint64_t v172 = v312;
        uint64_t v173 = Logger.logObject.getter();
        os_log_type_t v174 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v173, v174))
        {
          uint64_t v175 = (uint8_t *)swift_slowAlloc();
          uint64_t v176 = swift_slowAlloc();
          *(_DWORD *)uint64_t v175 = 136446210;
          v314[0] = v176;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v177 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v313 = sub_10011EA98(v177, v178, v314);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v173, v174, "%{public}s (didFetch) Changed JournalEntry, updating...", v175, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        unint64_t v179 = v308;
        uint64_t v180 = v300;
        id v182 = v310;
        id v181 = v311;
        v183 = v304;
        uint64_t v184 = v312;
        id v185 = *(id *)&v312[v300];
        sub_10056989C(v179, v306, 0);

        id v186 = *(id *)&v184[v180];
        sub_1004D1B10();

        return;
      }
      uint64_t v154 = v37;
      uint64_t v155 = Logger.logObject.getter();
      os_log_type_t v156 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v155, v156))
      {
        uint64_t v157 = (uint8_t *)swift_slowAlloc();
        uint64_t v158 = swift_slowAlloc();
        *(_DWORD *)uint64_t v157 = 136446210;
        v314[0] = v158;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v159 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v313 = sub_10011EA98(v159, v160, v314);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v155, v156, "%{public}s (didFetch) New JournalEntry, creating...", v157, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v187 = v300;

      uint64_t v188 = *(void **)&v312[v187];
LABEL_120:
      id v288 = v188;
      sub_1004D1B10();

      return;
    }
LABEL_35:
    os_log_t v108 = v107;
    goto LABEL_40;
  }
  if (v33 == 0xD000000000000011 && v34 == 0x800000010068A500
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F6980 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    uint64_t v58 = sub_100026A54(v57, (uint64_t)qword_1007FC360);
    id v59 = a2;
    uint64_t v307 = (uint8_t *)v58;
    id v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136446210;
      v314[0] = v63;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v313 = sub_10011EA98(v64, v65, v314);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "%{public}s (didFetch) - RECORD_TYPE_JOURNAL_ENTRY_ASSET", v62, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v161 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
    id v162 = *(id *)&v59[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
    uint64_t v164 = (uint64_t)v310;
    uint64_t v163 = (uint64_t)v311;
    v312 = (char *)sub_1004ECAB0((uint64_t)v310, (uint64_t)v311, a5);

    v309 = (void *)v161;
    id v165 = *(id *)&v59[v161];
    id v166 = [a5 updatedObjects];
    sub_10001B284(0, &qword_1008113A0);
    sub_100082CD4();
    uint64_t v167 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    sub_1002A43F8(v167, v164, v163);
    uint64_t v169 = v168;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v169)
    {
      type metadata accessor for JournalEntryAssetMO();
      uint64_t v170 = swift_dynamicCastClass();
      if (v170)
      {
        uint64_t v171 = v170;

        goto LABEL_70;
      }
    }
    id v189 = [a5 insertedObjects];
    uint64_t v190 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v191 = (uint64_t)v311;
    swift_bridgeObjectRetain();
    sub_1002A43F8(v190, (uint64_t)v310, v191);
    uint64_t v193 = v192;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v193)
    {
      type metadata accessor for JournalEntryAssetMO();
      uint64_t v171 = swift_dynamicCastClass();

      unint64_t v194 = (unint64_t)v312;
      if (!v171) {

      }
      goto LABEL_71;
    }

    uint64_t v171 = 0;
LABEL_70:
    unint64_t v194 = (unint64_t)v312;
LABEL_71:
    unint64_t v195 = v59;
    uint64_t v196 = Logger.logObject.getter();
    os_log_type_t v197 = static os_log_type_t.default.getter();
    BOOL v198 = os_log_type_enabled(v196, v197);
    if (v171 | v194)
    {
      if (v198)
      {
        uint64_t v199 = (uint8_t *)swift_slowAlloc();
        uint64_t v200 = swift_slowAlloc();
        *(_DWORD *)uint64_t v199 = 136446210;
        v314[0] = v200;
        id v311 = v199 + 4;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        unint64_t v194 = (unint64_t)v312;
        uint64_t v201 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v313 = sub_10011EA98(v201, v202, v314);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v196, v197, "%{public}s (didFetch) Changed JournalEntryAsset, updating...", v199, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v207 = v309;
      id v208 = *(id *)((char *)v309 + (void)v59);
      sub_1004EC844(v308, v306);

      id v209 = *(id *)((char *)v207 + (void)v59);
      sub_1004D1B10();

      if (v194)
      {
        uint64_t v210 = (void *)v194;
      }
      else
      {
        if (!v171) {
          return;
        }
        uint64_t v171 = (uint64_t)(id)v171;
        unint64_t v194 = 0;
        uint64_t v210 = (void *)v171;
      }
      id v211 = (id)v194;
      sub_1005C397C();

      return;
    }
    if (v198)
    {
      uint64_t v203 = (uint8_t *)swift_slowAlloc();
      uint64_t v204 = swift_slowAlloc();
      *(_DWORD *)uint64_t v203 = 136446210;
      v314[0] = v204;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v205 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v313 = sub_10011EA98(v205, v206, v314);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v196, v197, "%{public}s (didFetch) New JournalEntryAsset, creating...", v203, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v212 = (char *)v308;
    uint64_t v213 = v309;
    id v214 = *(id *)((char *)v309 + (void)v59);
    uint64_t v215 = sub_1004ECD3C(v212, (uint64_t)v306);
    goto LABEL_119;
  }
  if (v33 == 0xD00000000000001FLL && v34 == 0x800000010068A520)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v223 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v223 & 1) == 0)
    {
      if (qword_1007F6980 != -1) {
        swift_once();
      }
      uint64_t v254 = type metadata accessor for Logger();
      sub_100026A54(v254, (uint64_t)qword_1007FC360);
      id v255 = a2;
      id v256 = a1;
      v312 = (char *)v255;
      id v257 = v256;
      v258 = Logger.logObject.getter();
      os_log_type_t v259 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v258, v259))
      {
        uint64_t v260 = swift_slowAlloc();
        v314[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v260 = 136446466;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v261 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v313 = sub_10011EA98(v261, v262, v314);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v260 + 12) = 2080;
        uint64_t v263 = CKRecord.recordType.getter();
        uint64_t v313 = sub_10011EA98(v263, v264, v314);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v258, v259, "%{public}s (didFetch) Unhandled Record Type %s", (uint8_t *)v260, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v289 = v312;
      }
      return;
    }
  }
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v224 = type metadata accessor for Logger();
  uint64_t v225 = sub_100026A54(v224, (uint64_t)qword_1007FC360);
  id v59 = a2;
  uint64_t v307 = (uint8_t *)v225;
  uint64_t v226 = Logger.logObject.getter();
  os_log_type_t v227 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v226, v227))
  {
    unint64_t v228 = (uint8_t *)swift_slowAlloc();
    uint64_t v229 = swift_slowAlloc();
    *(_DWORD *)unint64_t v228 = 136446210;
    v314[0] = v229;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v230 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v313 = sub_10011EA98(v230, v231, v314);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v226, v227, "%{public}s (didFetch) - RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT", v228, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v232 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
  id v233 = *(id *)&v59[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
  uint64_t v235 = (uint64_t)v310;
  uint64_t v234 = (uint64_t)v311;
  v312 = (char *)sub_10052C08C((uint64_t)v310, (uint64_t)v311, a5);

  v309 = (void *)v232;
  id v236 = *(id *)&v59[v232];
  id v237 = [a5 updatedObjects];
  sub_10001B284(0, &qword_1008113A0);
  sub_100082CD4();
  uint64_t v238 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  sub_1002A4424(v238, v235, v234);
  dispatch_group_t v240 = v239;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v240)
  {
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    uint64_t v241 = swift_dynamicCastClass();
    if (v241)
    {
      uint64_t v242 = v241;

      goto LABEL_109;
    }
  }
  id v265 = [a5 insertedObjects];
  uint64_t v266 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v267 = (uint64_t)v311;
  swift_bridgeObjectRetain();
  sub_1002A4424(v266, (uint64_t)v310, v267);
  uint64_t v269 = v268;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v269)
  {
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    uint64_t v242 = swift_dynamicCastClass();

    unint64_t v270 = (unint64_t)v312;
    if (!v242) {

    }
    goto LABEL_110;
  }

  uint64_t v242 = 0;
LABEL_109:
  unint64_t v270 = (unint64_t)v312;
LABEL_110:
  uint64_t v271 = v59;
  v272 = Logger.logObject.getter();
  os_log_type_t v273 = static os_log_type_t.default.getter();
  BOOL v274 = os_log_type_enabled(v272, v273);
  if (!(v242 | v270))
  {
    if (v274)
    {
      uint64_t v279 = (uint8_t *)swift_slowAlloc();
      uint64_t v280 = swift_slowAlloc();
      *(_DWORD *)uint64_t v279 = 136446210;
      v314[0] = v280;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v281 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v313 = sub_10011EA98(v281, v282, v314);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v272, v273, "%{public}s (didFetch) New JournalEntryAssetFileAttachment, creating...", v279, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    long long v287 = v308;
    uint64_t v213 = v309;
    id v214 = *(id *)((char *)v309 + (void)v59);
    uint64_t v215 = sub_10052C318(v287, (uint64_t)v306);
LABEL_119:

    uint64_t v188 = *(void **)((char *)v213 + (void)v59);
    goto LABEL_120;
  }
  if (v274)
  {
    uint64_t v275 = (uint8_t *)swift_slowAlloc();
    uint64_t v276 = swift_slowAlloc();
    *(_DWORD *)uint64_t v275 = 136446210;
    v314[0] = v276;
    id v311 = v275 + 4;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v277 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v313 = sub_10011EA98(v277, v278, v314);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v272, v273, "%{public}s (didFetch) Changed JournalEntryAssetFileAttachment, updating...", v275, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v270 = (unint64_t)v312;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v283 = v308;
  v284 = v309;
  id v285 = *(id *)((char *)v309 + (void)v59);
  sub_10052BE20(v283, v306);

  id v286 = *(id *)((char *)v284 + (void)v59);
  sub_1004D1B10();
}

void sub_10009F0F4(uint64_t a1@<X1>, unint64_t a2@<X2>, BOOL *a3@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = (void *)Strong;
  if (Strong)
  {
    uint64_t v8 = (char *)*(id *)(Strong + OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_cloudKitStack);

    uint64_t v9 = (uint64_t *)&v8[OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata];
    uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata];
    unint64_t v11 = *(void *)&v8[OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata + 8];
    uint64_t *v9 = a1;
    v9[1] = a2;
    sub_100040D64(a1, a2);
    sub_100040DBC(v10, v11);
  }
  *a3 = v7 == 0;
}

void sub_10009F260(void *a1, void *a2, uint64_t a3)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_1007FC360);
  id v8 = a2;
  id v9 = v3;
  swift_errorRetain();
  id v10 = v8;
  id v11 = v9;
  swift_errorRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  uint64_t v14 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v25 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446978;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2112;
    id v18 = [v10 recordID];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v18;

    *(_WORD *)(v15 + 22) = 2080;
    id v19 = [v10 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v20 = static String._fromSubstring(_:)();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_10011EA98(v20, v22, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2112;
    swift_errorRetain();
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v24[1] = v26;
    uint64_t v14 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s (failedToSave) recordID:%@ record:%s error:%@", (uint8_t *)v15, 0x2Au);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v25;
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  id v23 = [v10 v14[28]];
  sub_10009F690(a1, v23, a3, v11);
}

void sub_10009F690(void *a1, void *a2, uint64_t a3, void *a4)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_1007FC360);
  id v8 = a4;
  swift_errorRetain();
  id v9 = v8;
  swift_errorRetain();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    aBlock._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v161 = sub_10011EA98(v13, v14, &aBlock._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *((_WORD *)v4 + 6) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v161 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s [iclouderror] %@", v4, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  aBlock._uint64_t countAndFlagsBits = a3;
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v16 = (void *)v161;
    aBlock._uint64_t countAndFlagsBits = v161;
    sub_1000AC2BC((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);
    _BridgedStoredNSError.code.getter();
    switch(v161)
    {
      case 1:
      case 2:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 12:
      case 13:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 27:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 100:
      case 111:
      case 113:
      case 114:
      case 115:
      case 124:
      case 130:
      case 131:
      case 132:
      case 140:
      case 150:
      case 160:
      case 161:
        id v17 = v9;
        id v18 = v16;
        id v19 = v17;
        uint64_t v20 = v18;
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          aBlock._uint64_t countAndFlagsBits = swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 136446466;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v161 = sub_10011EA98(v24, v25, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          uint64_t v160 = (uint64_t)v20;
          _BridgedStoredNSError.code.getter();

          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21, v22, "%{public}s [iclouderror] unhandled %ld", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          goto LABEL_10;
        }

        goto LABEL_12;
      case 3:
        id v26 = [self defaultCenter];
        if (qword_1007F6E70 != -1) {
          swift_once();
        }
        [v26 postNotificationName:qword_10083D3F8 object:0];

        id v27 = v9;
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v20, v28)) {
          goto LABEL_39;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136446210;
        aBlock._uint64_t countAndFlagsBits = v30;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v160 = sub_10011EA98(v31, v32, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        uint64_t v33 = "%{public}s [iclouderror] networkUnavailable";
        goto LABEL_22;
      case 4:
        id v34 = [self defaultCenter];
        if (qword_1007F6E70 != -1) {
          swift_once();
        }
        [v34 postNotificationName:qword_10083D3F8 object:0];

        id v27 = v9;
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v20, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          uint64_t v35 = swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v35;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v36, v37, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          uint64_t v33 = "%{public}s [iclouderror] networkFailure";
LABEL_22:
          _os_log_impl((void *)&_mh_execute_header, v20, v28, v33, v29, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

LABEL_12:
        }
        else
        {
LABEL_39:
        }
        break;
      case 11:
        id v38 = v9;
        os_log_type_t v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v42;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v43, v44, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s [iclouderror] unknownItem", v41, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v95 = *(void *)(qword_10083D2F8 + 16);
        uint64_t v96 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        if (*(void *)(v95 + OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription))
        {
          swift_retain();
          AnyCancellable.cancel()();
          swift_release();
          uint64_t v95 = *(void *)(qword_10083D2F8 + 16);
          uint64_t v96 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        }
        *(void *)(v95 + v96) = 0;
        swift_release();
        NSString v136 = a1;
        [a1 setAutomaticSyncingEnabled:0];
        uint64_t v137 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v138 = (void *)swift_allocObject();
        v138[2] = v137;
        v138[3] = AudioRecordingActivityState.hash(into:);
        id v139 = a2;
        v138[4] = 0;
        v138[5] = a2;
        uint64_t v158 = sub_1000AC834;
        uint64_t v159 = v138;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        uint64_t v140 = &unk_100799008;
        goto LABEL_80;
      case 14:
        id v45 = v9;
        id v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v49;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v50, v51, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s [iclouderror] serverRecordChanged", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v97 = *(void *)(qword_10083D2F8 + 16);
        uint64_t v98 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        if (*(void *)(v97 + OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription))
        {
          swift_retain();
          AnyCancellable.cancel()();
          swift_release();
          uint64_t v97 = *(void *)(qword_10083D2F8 + 16);
          uint64_t v98 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        }
        *(void *)(v97 + v98) = 0;
        swift_release();
        NSString v136 = a1;
        [a1 setAutomaticSyncingEnabled:0];
        uint64_t v141 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v142 = (void *)swift_allocObject();
        v142[2] = v141;
        v142[3] = AudioRecordingActivityState.hash(into:);
        id v139 = a2;
        v142[4] = 0;
        v142[5] = a2;
        uint64_t v158 = sub_1000AC838;
        uint64_t v159 = v142;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        uint64_t v140 = &unk_100799058;
LABEL_80:
        v157._uint64_t countAndFlagsBits = (uint64_t)sub_10017D530;
        v157._object = v140;
        uint64_t v143 = _Block_copy(&aBlock);
        id v144 = v139;
        swift_release();
        [v136 cancelOperationsWithCompletionHandler:v143];

        _Block_release(v143);
        return;
      case 25:
        id v52 = v9;
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v53, v54))
        {
          id v55 = (uint8_t *)swift_slowAlloc();
          uint64_t v56 = swift_slowAlloc();
          *(_DWORD *)id v55 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v56;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v57, v58, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "%{public}s [iclouderror] quotaExceeded", v55, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (byte_1007F9FB9) {
          goto LABEL_76;
        }
        id v99 = self;
        id v100 = [v99 mainBundle];
        v162._object = (void *)0x800000010068A460;
        v101._uint64_t countAndFlagsBits = 0x78452061746F7551;
        v101._object = (void *)0xEE00646564656563;
        v102._uint64_t countAndFlagsBits = 0;
        v102._object = (void *)0xE000000000000000;
        v162._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
        Swift::String v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v101, (Swift::String_optional)0, (NSBundle)v100, v102, v162);

        id v104 = [v99 mainBundle];
        v105._uint64_t countAndFlagsBits = 0xD000000000000024;
        v163._object = (void *)0x800000010068A4B0;
        v105._object = (void *)0x800000010068A480;
        v106._uint64_t countAndFlagsBits = 0;
        v106._object = (void *)0xE000000000000000;
        v163._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
        Swift::String v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v163);

        id v108 = [self defaultCenter];
        if (qword_1007F6E60 != -1) {
          swift_once();
        }
        uint64_t v109 = qword_10083D3E8;
        Swift::String aBlock = v103;
        Swift::String v157 = v107;
        LOBYTE(v158) = 0;
        goto LABEL_85;
      case 26:
        id v59 = v9;
        id v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          *(_DWORD *)uint64_t v62 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v63;
          uint64_t v4 = v62 + 4;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v64, v65, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "%{public}s [iclouderror] zoneNotFound", v62, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v110 = qword_10083D2F8;
        if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1) {
          goto LABEL_76;
        }
        *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
        unint64_t v111 = *(void **)(*(void *)(v110 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
        uint64_t v112 = swift_allocObject();
        swift_weakInit();
        uint64_t v67 = swift_allocObject();
        v67[2].Class isa = (Class)v112;
        v67[3].Class isa = (Class)AudioRecordingActivityState.hash(into:);
        v67[4].Class isa = 0;
        uint64_t v113 = swift_allocObject();
        *(void *)(v113 + 16) = sub_1000AC8A4;
        *(void *)(v113 + 24) = v67;
        uint64_t v158 = sub_10001B3DC;
        uint64_t v159 = (void *)v113;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        v157._uint64_t countAndFlagsBits = (uint64_t)sub_1003F44E4;
        v157._object = &unk_1007990D0;
        uint64_t v114 = _Block_copy(&aBlock);
        id v115 = v111;
        swift_retain();
        swift_release();
        [v115 performBlockAndWait:v114];

        _Block_release(v114);
        uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0) {
          return;
        }
        __break(1u);
LABEL_61:

LABEL_62:
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v116 = qword_10083D2F8;
        if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1)
        {
LABEL_76:
        }
        else
        {
          *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
          uint64_t v117 = *(void **)(*(void *)(v116 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
          uint64_t v118 = swift_allocObject();
          swift_weakInit();
          uint64_t v20 = swift_allocObject();
          v20[2].Class isa = (Class)v118;
          v20[3].Class isa = (Class)AudioRecordingActivityState.hash(into:);
          v20[4].Class isa = 0;
          uint64_t v119 = swift_allocObject();
          *(void *)(v119 + 16) = sub_1000AC8A4;
          *(void *)(v119 + 24) = v20;
          uint64_t v158 = sub_10001B3DC;
          uint64_t v159 = (void *)v119;
          aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
          aBlock._object = (void *)1107296256;
          v157._uint64_t countAndFlagsBits = (uint64_t)sub_1003F44E4;
          v157._object = &unk_100798FB8;
          int v120 = _Block_copy(&aBlock);
          id v121 = v117;
          swift_retain();
          swift_release();
          [v121 performBlockAndWait:v120];

          _Block_release(v120);
          uint64_t v21 = swift_isEscapingClosureAtFileLocation();

          swift_release();
          swift_release();
          if (v21)
          {
            __break(1u);
LABEL_67:
          }
        }
        return;
      case 28:
        uint64_t isEscapingClosureAtFileLocation = (uint64_t)v9;
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v67, v68)) {
          goto LABEL_61;
        }
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        *(_DWORD *)uint64_t v69 = 136446210;
        aBlock._uint64_t countAndFlagsBits = v70;
        uint64_t v4 = v69 + 4;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v160 = sub_10011EA98(v71, v72, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "%{public}s [iclouderror] userDeletedZone", v69, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_62;
      case 110:
        id v81 = v9;
        id v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = (uint8_t *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          *(_DWORD *)uint64_t v84 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v85;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v86, v87, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v82, v83, "%{public}s [iclouderrorPrivate] manateeUnavailable", v84, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (byte_1007F9FB8) {
          goto LABEL_76;
        }
        v157._object = &type metadata for AppleAccountFeature;
        uint64_t v158 = (uint64_t (*)())sub_1000AC304();
        char v122 = isFeatureEnabled(_:)();
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
        id v123 = [self mainBundle];
        if (v122)
        {
          unint64_t v124 = 0xD000000000000040;
          unint64_t v153 = 0x800000010068A360;
          uint64_t v125 = "Journal requires an Apple Account with two-factor authentication";
        }
        else
        {
          unint64_t v124 = 0xD00000000000003BLL;
          unint64_t v153 = 0x800000010068A360;
          uint64_t v125 = "Journal requires an Apple ID with two-factor authentication";
        }
        unint64_t v145 = (unint64_t)(v125 - 32) | 0x8000000000000000;
        v146._uint64_t countAndFlagsBits = 0;
        v146._object = (void *)0xE000000000000000;
        unint64_t v147 = 0xD00000000000001ALL;
        Swift::String v148 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v124, (Swift::String_optional)0, (NSBundle)v123, v146, *(Swift::String *)(&v153 - 1));

        id v149 = [self mainBundle];
        v164._uint64_t countAndFlagsBits = 0xD000000000000019;
        v150._uint64_t countAndFlagsBits = 0xD000000000000062;
        v164._object = (void *)0x800000010068A3F0;
        v150._object = (void *)0x800000010068A380;
        v151._uint64_t countAndFlagsBits = 0;
        v151._object = (void *)0xE000000000000000;
        Swift::String v152 = NSLocalizedString(_:tableName:bundle:value:comment:)(v150, (Swift::String_optional)0, (NSBundle)v149, v151, v164);

        id v108 = [self defaultCenter];
        if (qword_1007F6E60 != -1) {
          swift_once();
        }
        uint64_t v109 = qword_10083D3E8;
        Swift::String aBlock = v148;
        Swift::String v157 = v152;
        LOBYTE(v158) = 1;
LABEL_85:
        [v108 postNotificationName:v109 object:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];

        swift_unknownObjectRelease();
        return;
      case 112:
        id v88 = v9;
        id v89 = Logger.logObject.getter();
        os_log_type_t v90 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v92;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v93, v94, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "%{public}s [iclouderrorPrivate] manateeIdentityLost", v91, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v126 = qword_10083D2F8;
        if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 2) {
          goto LABEL_76;
        }
        *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 2;
        uint64_t v127 = *(void *)(v126 + 24);
        id v128 = [self standardUserDefaults];
        NSString v129 = String._bridgeToObjectiveC()();
        [v128 removeObjectForKey:v129];

        uint64_t v130 = *(void *)(v127 + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata);
        unint64_t v131 = *(void *)(v127 + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata + 8);
        *(_OWORD *)(v127 + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata) = xmmword_1006D8770;
        sub_100040DBC(v130, v131);
        sub_1002A0B3C();
        uint64_t v132 = (void *)swift_allocObject();
        v132[2] = v126;
        v132[3] = AudioRecordingActivityState.hash(into:);
        v132[4] = 0;
        swift_retain();
        sub_1005B6774();
        sub_1005B6790();
        sub_1005B6900();
        [*(id *)(v126 + 32) setAutomaticSyncingEnabled:0];
        uint64_t v133 = *(void **)(v126 + 32);
        uint64_t v134 = swift_allocObject();
        *(void *)(v134 + 16) = v126;
        *(_OWORD *)(v134 + 24) = xmmword_1006D8770;
        *(void *)(v134 + 40) = sub_1000AC8A8;
        *(void *)(v134 + 48) = v132;
        uint64_t v158 = sub_1000AC36C;
        uint64_t v159 = (void *)v134;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        v157._uint64_t countAndFlagsBits = (uint64_t)sub_10017D530;
        v157._object = &unk_100798F40;
        id v135 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v20 = v133;
        swift_retain();
        swift_release();
        [v20 cancelOperationsWithCompletionHandler:v135];
        _Block_release(v135);

        swift_release();
        goto LABEL_12;
      default:
        id v73 = v9;
        id v74 = v16;
        uint64_t v4 = (uint8_t *)v73;
        uint64_t v20 = v74;
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v75 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled((os_log_t)v21, v75)) {
          goto LABEL_67;
        }
        uint64_t v76 = swift_slowAlloc();
        aBlock._uint64_t countAndFlagsBits = swift_slowAlloc();
        *(_DWORD *)uint64_t v76 = 136446466;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v160 = sub_10011EA98(v77, v78, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v76 + 12) = 2080;
        uint64_t v160 = (uint64_t)v20;
        sub_1000AC2BC(&qword_1007F88C0, type metadata accessor for CKError);
        uint64_t v79 = Error.localizedDescription.getter();
        uint64_t v160 = sub_10011EA98(v79, v80, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21, v75, "%{public}s [iclouderror] unhandled %s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
LABEL_10:
        swift_slowDealloc();
        swift_slowDealloc();

        return;
    }
  }
}

void sub_1000A19B8(void *a1, void *a2, uint64_t a3, void *a4)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_1007FC360);
  id v8 = a4;
  swift_errorRetain();
  id v9 = v8;
  swift_errorRetain();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    aBlock._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v161 = sub_10011EA98(v13, v14, &aBlock._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *((_WORD *)v4 + 6) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v161 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s [iclouderror] %@", v4, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  aBlock._uint64_t countAndFlagsBits = a3;
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v16 = (void *)v161;
    aBlock._uint64_t countAndFlagsBits = v161;
    sub_1000AC2BC((unint64_t *)&qword_1007FC440, type metadata accessor for CKError);
    _BridgedStoredNSError.code.getter();
    switch(v161)
    {
      case 1:
      case 2:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 12:
      case 13:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 27:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 100:
      case 111:
      case 113:
      case 114:
      case 115:
      case 124:
      case 130:
      case 131:
      case 132:
      case 140:
      case 150:
      case 160:
      case 161:
        id v17 = v9;
        id v18 = v16;
        id v19 = v17;
        uint64_t v20 = v18;
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          aBlock._uint64_t countAndFlagsBits = swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 136446466;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v161 = sub_10011EA98(v24, v25, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          uint64_t v160 = (uint64_t)v20;
          _BridgedStoredNSError.code.getter();

          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21, v22, "%{public}s [iclouderror] unhandled %ld", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          goto LABEL_10;
        }

        goto LABEL_12;
      case 3:
        id v26 = [self defaultCenter];
        if (qword_1007F6E70 != -1) {
          swift_once();
        }
        [v26 postNotificationName:qword_10083D3F8 object:0];

        id v27 = v9;
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v20, v28)) {
          goto LABEL_39;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136446210;
        aBlock._uint64_t countAndFlagsBits = v30;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v160 = sub_10011EA98(v31, v32, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        uint64_t v33 = "%{public}s [iclouderror] networkUnavailable";
        goto LABEL_22;
      case 4:
        id v34 = [self defaultCenter];
        if (qword_1007F6E70 != -1) {
          swift_once();
        }
        [v34 postNotificationName:qword_10083D3F8 object:0];

        id v27 = v9;
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v20, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          uint64_t v35 = swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v35;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v36, v37, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          uint64_t v33 = "%{public}s [iclouderror] networkFailure";
LABEL_22:
          _os_log_impl((void *)&_mh_execute_header, v20, v28, v33, v29, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

LABEL_12:
        }
        else
        {
LABEL_39:
        }
        break;
      case 11:
        id v38 = v9;
        os_log_type_t v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v42;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v43, v44, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s [iclouderror] unknownItem", v41, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v95 = *(void *)(qword_10083D2F8 + 16);
        uint64_t v96 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        if (*(void *)(v95 + OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription))
        {
          swift_retain();
          AnyCancellable.cancel()();
          swift_release();
          uint64_t v95 = *(void *)(qword_10083D2F8 + 16);
          uint64_t v96 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        }
        *(void *)(v95 + v96) = 0;
        swift_release();
        NSString v136 = a1;
        [a1 setAutomaticSyncingEnabled:0];
        uint64_t v137 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v138 = (void *)swift_allocObject();
        v138[2] = v137;
        v138[3] = AudioRecordingActivityState.hash(into:);
        id v139 = a2;
        v138[4] = 0;
        v138[5] = a2;
        unint64_t v158 = (unint64_t)sub_1000AC430;
        uint64_t v159 = v138;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        uint64_t v140 = &unk_100798DB0;
        goto LABEL_80;
      case 14:
        id v45 = v9;
        id v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v49;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v50, v51, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s [iclouderror] serverRecordChanged", v48, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v97 = *(void *)(qword_10083D2F8 + 16);
        uint64_t v98 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        if (*(void *)(v97 + OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription))
        {
          swift_retain();
          AnyCancellable.cancel()();
          swift_release();
          uint64_t v97 = *(void *)(qword_10083D2F8 + 16);
          uint64_t v98 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
        }
        *(void *)(v97 + v98) = 0;
        swift_release();
        NSString v136 = a1;
        [a1 setAutomaticSyncingEnabled:0];
        uint64_t v141 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v142 = (void *)swift_allocObject();
        v142[2] = v141;
        v142[3] = AudioRecordingActivityState.hash(into:);
        id v139 = a2;
        v142[4] = 0;
        v142[5] = a2;
        unint64_t v158 = (unint64_t)sub_1000AC484;
        uint64_t v159 = v142;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        uint64_t v140 = &unk_100798E00;
LABEL_80:
        v157._uint64_t countAndFlagsBits = (uint64_t)sub_10017D530;
        v157._object = v140;
        uint64_t v143 = _Block_copy(&aBlock);
        id v144 = v139;
        swift_release();
        [v136 cancelOperationsWithCompletionHandler:v143];

        _Block_release(v143);
        return;
      case 25:
        id v52 = v9;
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v53, v54))
        {
          id v55 = (uint8_t *)swift_slowAlloc();
          uint64_t v56 = swift_slowAlloc();
          *(_DWORD *)id v55 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v56;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v57, v58, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "%{public}s [iclouderror] quotaExceeded", v55, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (byte_1007F9FB9) {
          goto LABEL_76;
        }
        id v99 = self;
        id v100 = [v99 mainBundle];
        v162._object = (void *)0x800000010068A460;
        v101._uint64_t countAndFlagsBits = 0x78452061746F7551;
        v101._object = (void *)0xEE00646564656563;
        v102._uint64_t countAndFlagsBits = 0;
        v102._object = (void *)0xE000000000000000;
        v162._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
        Swift::String v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v101, (Swift::String_optional)0, (NSBundle)v100, v102, v162);

        id v104 = [v99 mainBundle];
        v105._uint64_t countAndFlagsBits = 0xD000000000000024;
        v163._object = (void *)0x800000010068A4B0;
        v105._object = (void *)0x800000010068A480;
        v106._uint64_t countAndFlagsBits = 0;
        v106._object = (void *)0xE000000000000000;
        v163._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
        Swift::String v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v163);

        id v108 = [self defaultCenter];
        if (qword_1007F6E60 != -1) {
          swift_once();
        }
        uint64_t v109 = qword_10083D3E8;
        Swift::String aBlock = v103;
        Swift::String v157 = v107;
        LOBYTE(v158) = 0;
        goto LABEL_85;
      case 26:
        id v59 = v9;
        id v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          *(_DWORD *)uint64_t v62 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v63;
          uint64_t v4 = v62 + 4;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v64, v65, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "%{public}s [iclouderror] zoneNotFound", v62, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v110 = qword_10083D2F8;
        if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1) {
          goto LABEL_76;
        }
        *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
        unint64_t v111 = *(void **)(*(void *)(v110 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
        uint64_t v112 = swift_allocObject();
        swift_weakInit();
        uint64_t v67 = swift_allocObject();
        v67[2].Class isa = (Class)v112;
        v67[3].Class isa = (Class)AudioRecordingActivityState.hash(into:);
        v67[4].Class isa = 0;
        uint64_t v113 = swift_allocObject();
        *(void *)(v113 + 16) = sub_1000AC8A4;
        *(void *)(v113 + 24) = v67;
        unint64_t v158 = (unint64_t)sub_10001B3DC;
        uint64_t v159 = (void *)v113;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        v157._uint64_t countAndFlagsBits = (uint64_t)sub_1003F44E4;
        v157._object = &unk_100798E78;
        uint64_t v114 = _Block_copy(&aBlock);
        id v115 = v111;
        swift_retain();
        swift_release();
        [v115 performBlockAndWait:v114];

        _Block_release(v114);
        uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0) {
          return;
        }
        __break(1u);
LABEL_61:

LABEL_62:
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v116 = qword_10083D2F8;
        if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1)
        {
LABEL_76:
        }
        else
        {
          *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
          uint64_t v117 = *(void **)(*(void *)(v116 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
          uint64_t v118 = swift_allocObject();
          swift_weakInit();
          uint64_t v20 = swift_allocObject();
          v20[2].Class isa = (Class)v118;
          v20[3].Class isa = (Class)AudioRecordingActivityState.hash(into:);
          v20[4].Class isa = 0;
          uint64_t v119 = swift_allocObject();
          *(void *)(v119 + 16) = sub_1000AC3D8;
          *(void *)(v119 + 24) = v20;
          unint64_t v158 = (unint64_t)sub_10001AC84;
          uint64_t v159 = (void *)v119;
          aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
          aBlock._object = (void *)1107296256;
          v157._uint64_t countAndFlagsBits = (uint64_t)sub_1003F44E4;
          v157._object = &unk_100798D38;
          int v120 = _Block_copy(&aBlock);
          id v121 = v117;
          swift_retain();
          swift_release();
          [v121 performBlockAndWait:v120];

          _Block_release(v120);
          uint64_t v21 = swift_isEscapingClosureAtFileLocation();

          swift_release();
          swift_release();
          if (v21)
          {
            __break(1u);
LABEL_67:
          }
        }
        return;
      case 28:
        uint64_t isEscapingClosureAtFileLocation = (uint64_t)v9;
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v67, v68)) {
          goto LABEL_61;
        }
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        *(_DWORD *)uint64_t v69 = 136446210;
        aBlock._uint64_t countAndFlagsBits = v70;
        uint64_t v4 = v69 + 4;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v160 = sub_10011EA98(v71, v72, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "%{public}s [iclouderror] userDeletedZone", v69, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_62;
      case 110:
        id v81 = v9;
        id v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = (uint8_t *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          *(_DWORD *)uint64_t v84 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v85;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v86, v87, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v82, v83, "%{public}s [iclouderrorPrivate] manateeUnavailable", v84, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (byte_1007F9FB8) {
          goto LABEL_76;
        }
        v157._object = &type metadata for AppleAccountFeature;
        unint64_t v158 = sub_1000AC304();
        char v122 = isFeatureEnabled(_:)();
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
        id v123 = [self mainBundle];
        if (v122)
        {
          unint64_t v124 = 0xD000000000000040;
          unint64_t v153 = 0x800000010068A360;
          uint64_t v125 = "Journal requires an Apple Account with two-factor authentication";
        }
        else
        {
          unint64_t v124 = 0xD00000000000003BLL;
          unint64_t v153 = 0x800000010068A360;
          uint64_t v125 = "Journal requires an Apple ID with two-factor authentication";
        }
        unint64_t v145 = (unint64_t)(v125 - 32) | 0x8000000000000000;
        v146._uint64_t countAndFlagsBits = 0;
        v146._object = (void *)0xE000000000000000;
        unint64_t v147 = 0xD00000000000001ALL;
        Swift::String v148 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v124, (Swift::String_optional)0, (NSBundle)v123, v146, *(Swift::String *)(&v153 - 1));

        id v149 = [self mainBundle];
        v164._uint64_t countAndFlagsBits = 0xD000000000000019;
        v150._uint64_t countAndFlagsBits = 0xD000000000000062;
        v164._object = (void *)0x800000010068A3F0;
        v150._object = (void *)0x800000010068A380;
        v151._uint64_t countAndFlagsBits = 0;
        v151._object = (void *)0xE000000000000000;
        Swift::String v152 = NSLocalizedString(_:tableName:bundle:value:comment:)(v150, (Swift::String_optional)0, (NSBundle)v149, v151, v164);

        id v108 = [self defaultCenter];
        if (qword_1007F6E60 != -1) {
          swift_once();
        }
        uint64_t v109 = qword_10083D3E8;
        Swift::String aBlock = v148;
        Swift::String v157 = v152;
        LOBYTE(v158) = 1;
LABEL_85:
        [v108 postNotificationName:v109 object:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];

        swift_unknownObjectRelease();
        return;
      case 112:
        id v88 = v9;
        id v89 = Logger.logObject.getter();
        os_log_type_t v90 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = 136446210;
          aBlock._uint64_t countAndFlagsBits = v92;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v160 = sub_10011EA98(v93, v94, &aBlock._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "%{public}s [iclouderrorPrivate] manateeIdentityLost", v91, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        uint64_t v126 = qword_10083D2F8;
        if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 2) {
          goto LABEL_76;
        }
        *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 2;
        uint64_t v127 = *(void *)(v126 + 24);
        id v128 = [self standardUserDefaults];
        NSString v129 = String._bridgeToObjectiveC()();
        [v128 removeObjectForKey:v129];

        uint64_t v130 = *(void *)(v127 + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata);
        unint64_t v131 = *(void *)(v127 + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata + 8);
        *(_OWORD *)(v127 + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata) = xmmword_1006D8770;
        sub_100040DBC(v130, v131);
        sub_1002A0B3C();
        uint64_t v132 = (void *)swift_allocObject();
        v132[2] = v126;
        v132[3] = AudioRecordingActivityState.hash(into:);
        v132[4] = 0;
        swift_retain();
        sub_1005B6774();
        sub_1005B6790();
        sub_1005B6900();
        [*(id *)(v126 + 32) setAutomaticSyncingEnabled:0];
        uint64_t v133 = *(void **)(v126 + 32);
        uint64_t v134 = swift_allocObject();
        *(void *)(v134 + 16) = v126;
        *(_OWORD *)(v134 + 24) = xmmword_1006D8770;
        *(void *)(v134 + 40) = sub_1000AC35C;
        *(void *)(v134 + 48) = v132;
        unint64_t v158 = (unint64_t)sub_1000AC36C;
        uint64_t v159 = (void *)v134;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        v157._uint64_t countAndFlagsBits = (uint64_t)sub_10017D530;
        v157._object = &unk_100798C98;
        id v135 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v20 = v133;
        swift_retain();
        swift_release();
        [v20 cancelOperationsWithCompletionHandler:v135];
        _Block_release(v135);

        swift_release();
        goto LABEL_12;
      default:
        id v73 = v9;
        id v74 = v16;
        uint64_t v4 = (uint8_t *)v73;
        uint64_t v20 = v74;
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v75 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled((os_log_t)v21, v75)) {
          goto LABEL_67;
        }
        uint64_t v76 = swift_slowAlloc();
        aBlock._uint64_t countAndFlagsBits = swift_slowAlloc();
        *(_DWORD *)uint64_t v76 = 136446466;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v160 = sub_10011EA98(v77, v78, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v76 + 12) = 2080;
        uint64_t v160 = (uint64_t)v20;
        sub_1000AC2BC(&qword_1007F88C0, type metadata accessor for CKError);
        uint64_t v79 = Error.localizedDescription.getter();
        uint64_t v160 = sub_10011EA98(v79, v80, &aBlock._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21, v75, "%{public}s [iclouderror] unhandled %s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
LABEL_10:
        swift_slowDealloc();
        swift_slowDealloc();

        return;
    }
  }
}

void sub_1000A3D70(void *a1, void *a2, uint64_t a3)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_1007FC360);
  id v8 = v3;
  id v9 = a2;
  swift_errorRetain();
  id v10 = v8;
  id v11 = v9;
  swift_errorRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446722;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v16, v17, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2112;
    os_log_type_t type = v13;
    id v18 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v11;

    *(_WORD *)(v14 + 22) = 2112;
    swift_errorRetain();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v15[1] = v20;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, type, "%{public}s (failedToDeleteRecordWith) recordID:%@ error: %@", (uint8_t *)v14, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1000A19B8(a1, v11, a3, v10);
}

void sub_1000A43A8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    if ((sub_1001FE410() & 1) == 0)
    {
      if (qword_1007F6980 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100026A54(v15, (uint64_t)qword_1007FC360);
      id v8 = v6;
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        id v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)id v18 = 136446210;
        uint64_t v75 = v19;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
        sub_10011EA98(v20, v21, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s (accountChangedFromUserRecordID) Sync Interruption in accountChangedFromUserRecordID", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }

      goto LABEL_35;
    }
    if (a2)
    {
      if (!a3)
      {
        if (qword_1007F6980 != -1) {
          swift_once();
        }
        uint64_t v7 = type metadata accessor for Logger();
        sub_100026A54(v7, (uint64_t)qword_1007FC360);
        id v8 = v6;
        id v9 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v9, v10))
        {
          id v11 = (uint8_t *)swift_slowAlloc();
          uint64_t v12 = swift_slowAlloc();
          *(_DWORD *)id v11 = 136446210;
          uint64_t v75 = v12;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
          sub_10011EA98(v13, v14, &v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s (accountChangedFromUserRecordID) User is Logged OUT", v11, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_10020B09C(0, 0, 0, 0);
LABEL_35:

        return;
      }
    }
    else if (!a3)
    {

      return;
    }
    uint64_t v22 = qword_1007F6980;
    id v23 = a3;
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100026A54(v24, (uint64_t)qword_1007FC360);
    unint64_t v25 = v6;
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v28 = 136446210;
      uint64_t v75 = v29;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v30, v31, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s (accountChangedFromUserRecordID) User is Logged in", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v32 = *(id *)&v25[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
    uint64_t v33 = sub_1002A17A4();
    uint64_t v35 = v34;

    if (v35)
    {
      id v36 = [v23 recordName];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      if (v33 == v37 && v35 == v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v47)
      {
LABEL_29:
        uint64_t v48 = v25;
        uint64_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v49, v50))
        {
          unint64_t v51 = (uint8_t *)swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          *(_DWORD *)unint64_t v51 = 136446210;
          uint64_t v75 = v52;
          type metadata accessor for UUID();
          sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
          sub_10011EA98(v53, v54, &v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "%{public}s (accountChangedFromUserRecordID) Metadata is from the same user.", v51, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_43;
      }
      uint64_t v62 = v25;
      uint64_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        unint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        *(_DWORD *)unint64_t v65 = 136446210;
        uint64_t v75 = v66;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
        sub_10011EA98(v67, v68, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "%{public}s (accountChangedFromUserRecordID) Metadata is from different User", v65, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v69 = [v23 recordName];
      uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v72 = v71;

      uint64_t v59 = v70;
      uint64_t v60 = v72;
      char v61 = 1;
    }
    else
    {
      os_log_type_t v40 = v25;
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136446210;
        uint64_t v75 = v44;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
        sub_10011EA98(v45, v46, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "%{public}s (accountChangedFromUserRecordID) No userID registered", v43, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v55 = [v23 recordName];
      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v57;

      uint64_t v59 = v56;
      uint64_t v60 = v58;
      char v61 = 0;
    }
    sub_10020B09C(v59, v60, 1, v61);
    swift_bridgeObjectRelease();
LABEL_43:
    id v73 = *(void (**)(uint64_t))&v25[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_handleData];
    if (v73)
    {
      uint64_t v74 = swift_retain();
      v73(v74);

      sub_10001ABB8((uint64_t)v73);
    }
    else
    {
    }
  }
}

id sub_1000A5068()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for JurassicSyncEngineDataSource();
  return [super dealloc];
}

uint64_t sub_1000A5144()
{
  return type metadata accessor for JurassicSyncEngineDataSource();
}

uint64_t type metadata accessor for JurassicSyncEngineDataSource()
{
  uint64_t result = qword_1007FC3B8;
  if (!qword_1007FC3B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A5198()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000A52A0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, void *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a2();
  }
  uint64_t v13 = (void *)Strong;
  unint64_t v14 = *(void **)(Strong + OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_cloudKitStack);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v13;
  v15[3] = a2;
  v15[4] = a3;
  id v16 = v14;
  id v17 = v13;
  swift_retain();
  a7(a4, a6, v15);

  return swift_release();
}

uint64_t sub_1000A5394(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4, const char *a5)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100026A54(v8, (uint64_t)qword_1007FC360);
  id v9 = a2;
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a5, (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v15 = *(id *)(qword_10083D2F8 + 16);
  sub_1004D1D60();

  return a3();
}

id sub_1000A5624(void *a1, void *a2)
{
  unsigned __int8 v5 = &v2[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_handleData];
  *(void *)unsigned __int8 v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = v2;
  UUID.init()();
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_1007FC360);
  id v8 = a1;
  id v9 = a2;
  os_log_type_t v10 = v6;
  id v11 = v8;
  id v12 = v9;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446722;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v16, v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2112;
    id v18 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v11;

    *(_WORD *)(v15 + 22) = 2112;
    id v19 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v24[1] = v12;

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s -> JurassicSyncEngineDataSource init with %@ and %@", (uint8_t *)v15, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  *(void *)&v10[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack] = v11;
  *(void *)&v10[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_cloudKitStack] = v12;
  id v20 = v11;
  id v21 = v12;

  uint64_t v22 = (objc_class *)type metadata accessor for JurassicSyncEngineDataSource();
  v26.receiver = v10;
  v26.Class super_class = v22;
  return [super init];
}

void *sub_1000A596C(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v190 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v193 = (char *)&v183 - v6;
  uint64_t v194 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v187 = (char *)&v183 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v183 - v10;
  __chkstk_darwin(v12);
  uint64_t v188 = (char *)&v183 - v13;
  __chkstk_darwin(v14);
  uint64_t v191 = (char *)&v183 - v15;
  __chkstk_darwin(v16);
  id v18 = (char *)&v183 - v17;
  __chkstk_darwin(v19);
  uint64_t v192 = (char *)&v183 - v20;
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_100026A54(v21, (uint64_t)qword_1007FC360);
  id v23 = v1;
  id v24 = a1;
  id v25 = v23;
  id v26 = v24;
  uint64_t v196 = v22;
  os_log_type_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v195 = v7;
  id v186 = v11;
  id v189 = v18;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    unint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v185 = swift_slowAlloc();
    BOOL v198 = (char *)v185;
    *(_DWORD *)uint64_t v30 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v197 = sub_10011EA98(v32, v33, (uint64_t *)&v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2112;
    uint64_t v197 = (uint64_t)v26;
    id v34 = v25;
    id v35 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v31 = v26;

    id v25 = v34;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s (recordToSaveFor) recordID:%@", (uint8_t *)v30, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) != 1)
  {
    id v64 = v25;
    unint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136446210;
      BOOL v198 = (char *)v68;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v197 = sub_10011EA98(v69, v70, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "%{public}s (recordToSaveFor) isProtectedDataAvailable false", v67, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  id v36 = v25;
  uint64_t v37 = *(char **)(qword_10083D2F8 + 16);
  id v38 = [*(id *)&v37[OBJC_IVAR____TtC7Journal13CoreDataStack_container] newBackgroundContext];
  uint64_t v39 = v37;
  id v40 = [v26 recordName];
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;

  uint64_t v44 = (void *)sub_10029C49C(v41, v43, v38);
  swift_bridgeObjectRelease();
  if (v44)
  {
    id v45 = v36;
    id v46 = v26;
    id v47 = v44;
    id v48 = v45;
    id v49 = v46;
    id v50 = v47;
    unint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.default.getter();
    int v53 = v52;
    BOOL v54 = os_log_type_enabled(v51, v52);
    uint64_t v185 = (uint64_t)v44;
    if (v54)
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = (char *)swift_slowAlloc();
      uint64_t v187 = v56;
      uint64_t v190 = (char *)swift_slowAlloc();
      BOOL v198 = v190;
      *(_DWORD *)uint64_t v55 = 136446722;
      LODWORD(v188) = v53;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v197 = sub_10011EA98(v57, v58, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2112;
      uint64_t v197 = (uint64_t)v49;
      id v59 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v56 = v49;

      *(_WORD *)(v55 + 22) = 2080;
      id v186 = (char *)(v55 + 24);
      id v60 = [v50 debugDescription];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10055A870(1000);
      uint64_t v44 = (void *)v185;
      swift_bridgeObjectRelease();
      uint64_t v61 = static String._fromSubstring(_:)();
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      uint64_t v197 = sub_10011EA98(v61, v63, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v188, "%{public}s (recordToSaveFor) contextBackground type: JournalEntry recordID:%@ record:%s", (uint8_t *)v55, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v97 = v195;
    id v98 = [v50 encryptedValues];
    NSString v99 = String._bridgeToObjectiveC()();
    id v100 = (char *)[v98 objectForKeyedSubscript:v99];
    swift_unknownObjectRelease();

    if (v100)
    {
      BOOL v198 = v100;
      sub_100010218((uint64_t *)&unk_1008060F0);
      if (swift_dynamicCast())
      {
        __int16 v101 = v197;
        Swift::String v102 = Logger.logObject.getter();
        os_log_type_t v103 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v102, v103))
        {
          id v104 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v104 = 33554688;
          LOWORD(v198) = v101;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v102, v103, "(recordToSaveFor) contextBackground (record.textLength) == %hd", v104, 6u);
          swift_slowDealloc();
        }

        uint64_t v44 = (void *)v185;
      }
    }
    id v105 = [v50 encryptedValues];
    NSString v106 = String._bridgeToObjectiveC()();
    Swift::String v107 = (char *)[v105 objectForKeyedSubscript:v106];
    swift_unknownObjectRelease();

    if (v107)
    {
      BOOL v198 = v107;
      sub_100010218((uint64_t *)&unk_1008060F0);
      id v108 = v193;
      uint64_t v109 = v194;
      int v110 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v108, v110 ^ 1u, 1, v109);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v108, 1, v109) != 1)
      {
        unint64_t v111 = v192;
        (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v192, v108, v109);
        uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
        uint64_t v113 = v189;
        v112(v189, v111, v109);
        uint64_t v114 = v191;
        v112(v191, v111, v109);
        id v115 = Logger.logObject.getter();
        os_log_type_t v116 = static os_log_type_t.default.getter();
        int v117 = v116;
        if (os_log_type_enabled(v115, v116))
        {
          uint64_t v118 = swift_slowAlloc();
          uint64_t v196 = swift_slowAlloc();
          BOOL v198 = (char *)v196;
          *(_DWORD *)uint64_t v118 = 136315394;
          id v119 = [objc_allocWithZone((Class)NSDateFormatter) init];
          NSString v120 = String._bridgeToObjectiveC()();
          LODWORD(v193) = v117;
          id v121 = v120;
          [v119 setDateFormat:v120];

          Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v123 = [v119 stringFromDate:isa];
          id v184 = v38;
          id v124 = v123;

          uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v127 = v126;

          uint64_t v197 = sub_10011EA98(v125, v127, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          id v128 = *(void (**)(char *, uint64_t))(v97 + 8);
          v128(v113, v109);
          *(_WORD *)(v118 + 12) = 2080;
          sub_1000AC2BC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
          NSString v129 = v191;
          uint64_t v130 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v197 = sub_10011EA98(v130, v131, (uint64_t *)&v198);
          uint64_t v44 = (void *)v185;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v128(v129, v109);
          _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v193, "(recordToSaveFor) contextBackground (record.updatedDate) == %s  %s", (uint8_t *)v118, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v128(v192, v109);
        }
        else
        {

          uint64_t v180 = *(void (**)(char *, uint64_t))(v97 + 8);
          v180(v114, v109);
          v180(v113, v109);
          v180(v111, v109);
        }
        return v44;
      }
    }
    else
    {
      id v108 = v193;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v193, 1, 1, v194);
    }
LABEL_45:

    sub_1000AC7D4((uint64_t)v108);
    return v44;
  }
  uint64_t v71 = *(char **)(qword_10083D2F8 + 16);
  uint64_t v72 = (char *)*(id *)&v71[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  id v73 = v71;
  id v74 = [v26 recordName];
  uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v77 = v76;

  uint64_t v193 = v72;
  uint64_t v44 = (void *)sub_10029C49C(v75, v77, v72);

  swift_bridgeObjectRelease();
  if (!v44)
  {
    id v132 = v36;
    id v133 = v26;
    id v134 = v132;
    id v135 = v133;
    NSString v136 = Logger.logObject.getter();
    os_log_type_t v137 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v136, v137))
    {
      uint64_t v138 = swift_slowAlloc();
      BOOL v198 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v138 = 136446466;
      id v184 = v38;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v197 = sub_10011EA98(v139, v140, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 12) = 2080;
      id v141 = [v135 recordName];
      uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v144 = v143;

      uint64_t v197 = sub_10011EA98(v142, v144, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "%{public}s (recordToSaveFor) unable to get an object from database with id:%s", (uint8_t *)v138, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  id v184 = v38;
  id v78 = v36;
  id v79 = v26;
  id v80 = v44;
  id v81 = v78;
  id v82 = v79;
  id v83 = v80;
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.default.getter();
  int v86 = v85;
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v87 = swift_slowAlloc();
    uint64_t v185 = (uint64_t)v44;
    uint64_t v88 = v87;
    id v89 = (char *)swift_slowAlloc();
    id v189 = v89;
    uint64_t v192 = (char *)swift_slowAlloc();
    BOOL v198 = v192;
    *(_DWORD *)uint64_t v88 = 136446722;
    LODWORD(v191) = v86;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v197 = sub_10011EA98(v90, v91, (uint64_t *)&v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 12) = 2112;
    uint64_t v197 = (uint64_t)v82;
    id v92 = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)id v89 = v82;

    *(_WORD *)(v88 + 22) = 2080;
    id v93 = [v83 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v94 = static String._fromSubstring(_:)();
    unint64_t v96 = v95;
    swift_bridgeObjectRelease();
    uint64_t v197 = sub_10011EA98(v94, v96, (uint64_t *)&v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v191, "%{public}s (recordToSaveFor) contextPrivate type: JournalEntry recordID:%@ record:%s", (uint8_t *)v88, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v44 = (void *)v185;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v145 = v195;
  id v146 = [v83 encryptedValues];
  NSString v147 = String._bridgeToObjectiveC()();
  Swift::String v148 = (char *)[v146 objectForKeyedSubscript:v147];
  swift_unknownObjectRelease();

  id v38 = v184;
  if (v148)
  {
    BOOL v198 = v148;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      id v149 = v44;
      __int16 v150 = v197;
      Swift::String v151 = Logger.logObject.getter();
      os_log_type_t v152 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v151, v152))
      {
        unint64_t v153 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v153 = 33554688;
        id v38 = v184;
        LOWORD(v198) = v150;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v151, v152, "(recordToSaveFor) contextPrivate (record.textLength) == %hd", v153, 6u);
        swift_slowDealloc();
      }

      uint64_t v44 = v149;
    }
  }
  id v154 = [v83 encryptedValues];
  NSString v155 = String._bridgeToObjectiveC()();
  os_log_type_t v156 = (char *)[v154 objectForKeyedSubscript:v155];
  swift_unknownObjectRelease();

  if (!v156)
  {
    id v108 = v190;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v145 + 56))(v190, 1, 1, v194);
    goto LABEL_44;
  }
  BOOL v198 = v156;
  sub_100010218((uint64_t *)&unk_1008060F0);
  id v108 = v190;
  uint64_t v157 = v194;
  int v158 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v108, v158 ^ 1u, 1, v157);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v108, 1, v157) == 1)
  {
LABEL_44:

    goto LABEL_45;
  }
  uint64_t v159 = v188;
  (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v188, v108, v157);
  uint64_t v160 = *(void (**)(char *, char *, uint64_t))(v145 + 16);
  uint64_t v161 = v186;
  v160(v186, v159, v157);
  Swift::String v162 = v187;
  v160(v187, v159, v157);
  Swift::String v163 = Logger.logObject.getter();
  os_log_type_t v164 = static os_log_type_t.default.getter();
  int v165 = v164;
  if (os_log_type_enabled(v163, v164))
  {
    uint64_t v166 = swift_slowAlloc();
    uint64_t v196 = swift_slowAlloc();
    BOOL v198 = (char *)v196;
    *(_DWORD *)uint64_t v166 = 136315394;
    id v167 = [objc_allocWithZone((Class)NSDateFormatter) init];
    uint64_t v185 = (uint64_t)v44;
    uint64_t v168 = v167;
    NSString v169 = String._bridgeToObjectiveC()();
    LODWORD(v192) = v165;
    uint64_t v170 = v169;
    [v168 setDateFormat:v169];

    Class v171 = Date._bridgeToObjectiveC()().super.isa;
    id v172 = [v168 stringFromDate:v171];

    uint64_t v173 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v175 = v174;

    uint64_t v197 = sub_10011EA98(v173, v175, (uint64_t *)&v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v176 = *(void (**)(char *, uint64_t))(v145 + 8);
    v176(v161, v157);
    *(_WORD *)(v166 + 12) = 2080;
    sub_1000AC2BC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v177 = v187;
    uint64_t v178 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v197 = sub_10011EA98(v178, v179, (uint64_t *)&v198);
    uint64_t v44 = (void *)v185;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v176(v177, v157);
    _os_log_impl((void *)&_mh_execute_header, v163, (os_log_type_t)v192, "(recordToSaveFor) contextPrivate (record.updatedDate) == %s  %s", (uint8_t *)v166, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v176(v188, v157);
  }
  else
  {

    id v182 = *(void (**)(char *, uint64_t))(v145 + 8);
    v182(v162, v157);
    v182(v161, v157);
    v182(v159, v157);
  }
  return v44;
}

void sub_1000A735C(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  os_log_t v156 = (os_log_t)((char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v157 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v7 = (char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v150 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v150 - v12;
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_100026A54(v14, (uint64_t)qword_1007FC360);
  id v16 = a1;
  id v17 = v1;
  id v18 = v16;
  id v19 = v17;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  int v22 = v21;
  BOOL v23 = os_log_type_enabled(v20, v21);
  uint64_t v158 = v5;
  uint64_t v159 = v15;
  id v154 = v7;
  NSString v155 = v13;
  unint64_t v153 = v10;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    id v25 = (void *)swift_slowAlloc();
    Swift::String v151 = v25;
    uint64_t v160 = (char *)swift_slowAlloc();
    v161[0] = (uint64_t)v160;
    *(_DWORD *)uint64_t v24 = 136446722;
    LODWORD(v152) = v22;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v162 = sub_10011EA98(v26, v27, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2112;
    id v28 = [v18 recordID];
    uint64_t v162 = (uint64_t)v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v25 = v28;

    *(_WORD *)(v24 + 22) = 2080;
    id v29 = [v18 debugDescription:v24 + 24];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v30 = static String._fromSubstring(_:)();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v162 = sub_10011EA98(v30, v32, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v152, "%{public}s (didSave) recordID:%@ record:%s", (uint8_t *)v24, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v33 = v18;
  id v34 = v19;
  id v35 = v33;
  uint64_t v160 = (char *)v34;
  id v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136446466;
    id v39 = v160;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    v161[0] = sub_10011EA98(v40, v41, &v162);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    id v42 = [v35 recordChangeTag];
    if (v42)
    {
      uint64_t v43 = v42;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v45;
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v46 = 0;
    }
    v161[0] = v44;
    v161[1] = v46;
    sub_100010218(&qword_100803920);
    uint64_t v48 = String.init<A>(describing:)();
    v161[0] = sub_10011EA98(v48, v49, &v162);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s (didSave) record change tag: %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v47 = v160;
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    uint64_t v50 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
    id v51 = objc_retain(*(id *)(*(void *)&v160[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack]
                            + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate));
    uint64_t v53 = CKRecord.recordType.getter();
    uint64_t v54 = v52;
    os_log_type_t v152 = v35;
    if (v53 == 0x456C616E72756F4ALL && v52 == 0xEC0000007972746ELL
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v62 = v160;
      unint64_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        Swift::String v151 = (void *)v50;
        os_log_type_t v66 = (uint8_t *)v65;
        uint64_t v67 = swift_slowAlloc();
        id v150 = v51;
        *(_DWORD *)os_log_type_t v66 = 136446210;
        v161[0] = v67;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v162 = sub_10011EA98(v68, v69, v161);
        id v51 = v150;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "%{public}s (didSave) - RECORD_TYPE_JOURNAL_ENTRY", v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v50 = (uint64_t)v151;
        swift_slowDealloc();
      }
      else
      {
      }
      id v70 = *(id *)&v160[v50];
      uint64_t v71 = v152;
      sub_10056989C(v152, v51, 1);

      id v72 = [v71 encryptedValues];
      NSString v73 = String._bridgeToObjectiveC()();
      id v74 = [v72 objectForKeyedSubscript:v73];
      swift_unknownObjectRelease();

      if (v74)
      {
        v161[0] = (uint64_t)v74;
        sub_100010218((uint64_t *)&unk_1008060F0);
        if (swift_dynamicCast())
        {
          uint64_t v75 = v71;
          uint64_t v76 = v50;
          __int16 v77 = v162;
          id v78 = Logger.logObject.getter();
          os_log_type_t v79 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v78, v79))
          {
            id v80 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)id v80 = 33554688;
            LOWORD(v161[0]) = v77;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v78, v79, "(didSave) (record.textLength) == %hd", v80, 6u);
            swift_slowDealloc();
          }

          uint64_t v50 = v76;
          uint64_t v71 = v75;
        }
      }
      id v81 = [v71 encryptedValues];
      NSString v82 = String._bridgeToObjectiveC()();
      id v83 = [v81 objectForKeyedSubscript:v82];
      swift_unknownObjectRelease();

      if (v83)
      {
        v161[0] = (uint64_t)v83;
        sub_100010218((uint64_t *)&unk_1008060F0);
        os_log_t v84 = v156;
        uint64_t v85 = v157;
        int v86 = swift_dynamicCast();
        uint64_t v87 = v158;
        (*(void (**)(os_log_t, void, uint64_t, uint64_t))(v158 + 56))(v84, v86 ^ 1u, 1, v85);
        if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v87 + 48))(v84, 1, v85) != 1)
        {
          Swift::String v151 = (void *)v50;
          uint64_t v88 = v155;
          (*(void (**)(char *, os_log_t, uint64_t))(v87 + 32))(v155, v84, v85);
          id v89 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
          uint64_t v90 = v153;
          v89(v153, v88, v85);
          unint64_t v91 = v154;
          v89(v154, v88, v85);
          id v92 = Logger.logObject.getter();
          os_log_type_t v93 = static os_log_type_t.default.getter();
          int v94 = v93;
          if (os_log_type_enabled(v92, v93))
          {
            uint64_t v95 = swift_slowAlloc();
            uint64_t v159 = swift_slowAlloc();
            v161[0] = v159;
            *(_DWORD *)uint64_t v95 = 136315394;
            id v150 = v51;
            id v96 = [objc_allocWithZone((Class)NSDateFormatter) init];
            os_log_t v156 = v92;
            uint64_t v97 = v96;
            NSString v98 = String._bridgeToObjectiveC()();
            LODWORD(v152) = v94;
            NSString v99 = v98;
            [v97 setDateFormat:v98];

            Class isa = Date._bridgeToObjectiveC()().super.isa;
            id v101 = [v97 stringFromDate:isa];

            uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v104 = v103;

            uint64_t v162 = sub_10011EA98(v102, v104, v161);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            id v105 = *(void (**)(char *, uint64_t))(v158 + 8);
            v105(v90, v85);
            *(_WORD *)(v95 + 12) = 2080;
            sub_1000AC2BC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v106 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v162 = sub_10011EA98(v106, v107, v161);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v105(v91, v85);
            os_log_t v108 = v156;
            _os_log_impl((void *)&_mh_execute_header, v156, (os_log_type_t)v152, "(didSave) (record.updatedDate) == %s  %s", (uint8_t *)v95, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v105(v88, v85);
            id v51 = v150;
          }
          else
          {

            int v117 = *(void (**)(char *, uint64_t))(v87 + 8);
            v117(v91, v85);
            v117(v90, v85);
            v117(v88, v85);
          }
          uint64_t v50 = (uint64_t)v151;
          goto LABEL_43;
        }
      }
      else
      {
        os_log_t v84 = v156;
        (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v156, 1, 1, v157);
      }
      sub_1000AC7D4((uint64_t)v84);
LABEL_43:
      id v118 = *(id *)&v160[v50];
      sub_1004D1B10();

LABEL_47:
      return;
    }
    if (v53 == 0xD000000000000011 && v54 == 0x800000010068A500
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v109 = v160;
      int v110 = Logger.logObject.getter();
      os_log_type_t v111 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v112 = swift_slowAlloc();
        Swift::String v151 = (void *)v50;
        uint64_t v113 = (uint8_t *)v112;
        uint64_t v114 = swift_slowAlloc();
        id v150 = v51;
        *(_DWORD *)uint64_t v113 = 136446210;
        v161[0] = v114;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v115 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v162 = sub_10011EA98(v115, v116, v161);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v110, v111, "%{public}s (didSave) - RECORD_TYPE_JOURNAL_ENTRY_ASSET", v113, 0xCu);
        swift_arrayDestroy();
        id v51 = v150;
        swift_slowDealloc();
        uint64_t v50 = (uint64_t)v151;
        swift_slowDealloc();
      }
      else
      {
      }
      id v119 = v160;
      id v120 = *(id *)&v160[v50];
      id v121 = v152;
      sub_1004EC844(v152, v51);

      id v122 = *(id *)&v119[v50];
      sub_1004D1B10();

      id v123 = [v121 recordID];
      id v124 = [v123 recordName];
LABEL_46:
      id v125 = v124;

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000C7848();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    if (v53 == 0xD00000000000001FLL && v54 == 0x800000010068A520)
    {
      swift_bridgeObjectRelease();
LABEL_52:
      unint64_t v127 = v160;
      id v128 = Logger.logObject.getter();
      os_log_type_t v129 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v128, v129))
      {
        uint64_t v130 = swift_slowAlloc();
        Swift::String v151 = (void *)v50;
        unint64_t v131 = (uint8_t *)v130;
        uint64_t v132 = swift_slowAlloc();
        id v150 = v51;
        *(_DWORD *)unint64_t v131 = 136446210;
        v161[0] = v132;
        type metadata accessor for UUID();
        sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v133 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v162 = sub_10011EA98(v133, v134, v161);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v128, v129, "%{public}s (didSave) - RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT", v131, 0xCu);
        swift_arrayDestroy();
        id v51 = v150;
        swift_slowDealloc();
        uint64_t v50 = (uint64_t)v151;
        swift_slowDealloc();
      }
      else
      {
      }
      id v135 = v160;
      id v136 = *(id *)&v160[v50];
      os_log_type_t v137 = v152;
      sub_10052BE20(v152, v51);

      id v138 = *(id *)&v135[v50];
      sub_1004D1B10();

      id v123 = [v137 recordID];
      id v124 = [v123 recordName];
      goto LABEL_46;
    }
    char v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v126) {
      goto LABEL_52;
    }
    id v139 = v35;
    unint64_t v140 = v160;
    id v141 = v139;
    uint64_t v142 = v140;
    unint64_t v143 = Logger.logObject.getter();
    os_log_type_t v144 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v143, v144))
    {

      goto LABEL_47;
    }
    uint64_t v145 = swift_slowAlloc();
    v161[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v145 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v146 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v162 = sub_10011EA98(v146, v147, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v145 + 12) = 2080;
    uint64_t v148 = CKRecord.recordType.getter();
    uint64_t v162 = sub_10011EA98(v148, v149, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v143, v144, "%{public}s (didSave) Unhandled Record Type %s", (uint8_t *)v145, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v55 = v160;
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      unint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)unint64_t v58 = 136446210;
      v161[0] = v59;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v162 = sub_10011EA98(v60, v61, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%{public}s (didSave) isProtectedDataAvailable false", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000A8A5C(void *a1)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007FC360);
  id v4 = a1;
  id v5 = v1;
  id v6 = v4;
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446722;
    type metadata accessor for UUID();
    os_log_type_t type = v9;
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v61 = sub_10011EA98(v11, v12, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    id v13 = [v6 recordID];
    uint64_t v61 = (uint64_t)v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v53 = v13;

    *(_WORD *)(v10 + 22) = 2080;
    id v14 = [v6 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v15 = static String._fromSubstring(_:)();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_10011EA98(v15, v17, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, type, "%{public}s (didFetch)  recordID: %@ record: %s", (uint8_t *)v10, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v18 = v6;
  id v19 = v7;
  id v20 = v18;
  os_log_type_t v21 = (char *)v19;
  int v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t aBlock = sub_10011EA98(v25, v26, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    id v27 = [v20 recordChangeTag];
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;
    }
    else
    {
      uint64_t v29 = 0;
      uint64_t v31 = 0;
    }
    uint64_t aBlock = v29;
    uint64_t v56 = v31;
    sub_100010218(&qword_100803920);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10011EA98(v32, v33, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s (didFetch) record change tag: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    id v34 = objc_retain(*(id *)(*(void *)&v21[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack]
                            + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate));
    id v35 = [v20 recordID];
    id v36 = [v35 recordName];

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = v20;
    v40[3] = v21;
    v40[4] = v37;
    v40[5] = v39;
    v40[6] = v34;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_1000AC794;
    *(void *)(v41 + 24) = v40;
    uint64_t v59 = sub_10001B3DC;
    uint64_t v60 = v41;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v56 = 1107296256;
    os_log_type_t v57 = sub_1003F44E4;
    unint64_t v58 = &unk_1007992B0;
    id v42 = _Block_copy(&aBlock);
    id v43 = v20;
    uint64_t v44 = v21;
    id v45 = v34;
    swift_retain();
    swift_release();
    [v45 performBlockAndWait:v42];

    _Block_release(v42);
    LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v45 & 1) == 0) {
      return;
    }
    __break(1u);
  }
  uint64_t v46 = v21;
  id v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    unint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(_DWORD *)unint64_t v49 = 136446210;
    uint64_t aBlock = v50;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v61 = sub_10011EA98(v51, v52, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%{public}s (didFetch) isProtectedDataAvailable false", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000A9360(void *a1)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007FC360);
  id v4 = v1;
  id v5 = a1;
  id v6 = (char *)v4;
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v36 = sub_10011EA98(v12, v13, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    uint64_t v36 = (uint64_t)v7;
    id v14 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (didDeleteRecordWith) recordID:%@", (uint8_t *)v10, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    uint64_t v15 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
    id v16 = *(id *)&v6[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
    id v17 = [v7 recordName];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    id v21 = *(id *)(*(void *)&v6[v15] + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    LOBYTE(v18) = sub_10029DFD0(v18, v20);

    swift_bridgeObjectRelease();
    if (v18)
    {
      id v22 = *(id *)&v6[v15];
      sub_1004D1B10();
    }
    else
    {
      id v30 = *(id *)&v6[v15];
      id v31 = [v7 recordName];
      Swift::Int v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::Int v34 = v33;

      swift_beginAccess();
      sub_10054BEBC(&v36, v32, v34);
      swift_endAccess();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    os_log_type_t v23 = v6;
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)unint64_t v26 = 136446210;
      v35[0] = v27;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v36 = sub_10011EA98(v28, v29, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s (didDeleteRecordWith) isProtectedDataAvailable false", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000A98DC(uint64_t a1, unint64_t a2)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_1007FC360);
  id v6 = v2;
  sub_100040D64(a1, a2);
  id v7 = v6;
  sub_100040D64(a1, a2);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v11, v12, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    sub_100040D64(a1, a2);
    uint64_t v13 = Data.description.getter();
    unint64_t v15 = v14;
    sub_100040DD0(a1, a2);
    sub_10011EA98(v13, v15, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100040DD0(a1, a2);
    sub_100040DD0(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (didUpdateMetadata) didUpdateMetadata: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100040DD0(a1, a2);
    sub_100040DD0(a1, a2);
  }

  id v16 = v7;
  sub_100040D64(a1, a2);
  id v17 = (char *)v16;
  sub_100040D64(a1, a2);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v21, v22, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    sub_100040D64(a1, a2);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v24 = [(objc_class *)isa description];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    sub_100040DD0(a1, a2);
    sub_10011EA98(v25, v27, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100040DD0(a1, a2);
    sub_100040DD0(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s (didUpdateMetadata) MetadataPrint: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100040DD0(a1, a2);
    sub_100040DD0(a1, a2);
  }

  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    uint64_t v28 = *(void **)(*(void *)&v17[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack]
                   + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    swift_allocObject();
    uint64_t v29 = swift_unknownObjectWeakInit();
    __chkstk_darwin(v29);
    id v30 = v28;
    sub_100010218((uint64_t *)&unk_1007FC460);
    NSManagedObjectContext.performAndWait<A>(_:)();

    swift_release();
  }
  else
  {
    id v31 = v17;
    Swift::Int v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      Swift::Int v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)Swift::Int v34 = 136446210;
      uint64_t v38 = v35;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v36, v37, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s (didUpdateMetadata) isProtectedDataAvailable false", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000AA060(void *a1)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007FC360);
  id v4 = v1;
  id v5 = a1;
  swift_bridgeObjectRetain_n();
  id v6 = (char *)v4;
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446722;
    v38[0] = v37;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_10011EA98(v11, v12, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    uint64_t v39 = (uint64_t)v7;
    id v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v36 = v7;

    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v14 = String.debugDescription.getter();
    uint64_t v39 = sub_10011EA98(v14, v15, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (recordWithIDWasDeleted) recordID:%@ type: %s", (uint8_t *)v10, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    uint64_t v16 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
    id v17 = *(id *)&v6[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
    id v18 = [v7 recordName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    id v22 = *(id *)(*(void *)&v6[v16] + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    LOBYTE(v19) = sub_10029DFD0(v19, v21);

    swift_bridgeObjectRelease();
    if (v19)
    {
      id v23 = *(id *)&v6[v16];
      sub_1004D1B10();
    }
    else
    {
      id v31 = *(id *)&v6[v16];
      id v32 = [v7 recordName];
      Swift::Int v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::Int v35 = v34;

      swift_beginAccess();
      sub_10054BEBC(&v39, v33, v35);
      swift_endAccess();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v24 = v6;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)unint64_t v27 = 136446210;
      v38[0] = v28;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v39 = sub_10011EA98(v29, v30, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s (recordWithIDWasDeleted) isProtectedDataAvailable false", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000AA64C(void *a1)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007FC360);
  id v4 = v1;
  id v5 = a1;
  id v14 = v4;
  id v6 = v5;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v13 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v10 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s (zoneWithIDChanged) zoneID:%@", (uint8_t *)v9, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000AA914(void *a1)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007FC360);
  id v4 = v1;
  id v5 = a1;
  id v6 = v4;
  id v7 = v5;
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    id v14 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (zoneWithIDWasDeleted) zoneID:%@", (uint8_t *)v10, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_10083D2F8;
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) != 1)
  {
    *(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
    uint64_t v16 = *(void **)(*(void *)(v15 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    id v18 = (void *)swift_allocObject();
    uint64_t v18[2] = v17;
    v18[3] = AudioRecordingActivityState.hash(into:);
    v18[4] = 0;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1000AC8A4;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = (uint64_t)sub_10001B3DC;
    aBlock[5] = v19;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1003F44E4;
    aBlock[3] = (uint64_t)&unk_100799238;
    unint64_t v20 = _Block_copy(aBlock);
    id v21 = v16;
    swift_retain();
    swift_release();
    [v21 performBlockAndWait:v20];

    _Block_release(v20);
    LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v20) {
      __break(1u);
    }
  }
}

void sub_1000AAD68(void *a1)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_1007FC360);
  id v4 = v1;
  id v5 = a1;
  id v6 = (char *)v4;
  id v7 = v5;
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    id v14 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (zoneWithIDWasPurged) zoneID:%@", (uint8_t *)v10, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v15 = qword_1007F6D38;
  id v16 = objc_retain(*(id *)(*(void *)&v6[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack]
                          + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate));
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_10083D2F8;
  sub_10047B4D0(v16);
  uint64_t v18 = *(void *)(v17 + 16);
  sub_1002A0B3C();
  sub_1002A10D0(0, 0);
  sub_10029BA60(v16);
  if (*(unsigned char *)(v17 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1)
  {
  }
  else
  {
    *(unsigned char *)(v17 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
    uint64_t v19 = *(void **)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    id v21 = (void *)swift_allocObject();
    void v21[2] = v20;
    void v21[3] = AudioRecordingActivityState.hash(into:);
    void v21[4] = 0;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1000AC8A4;
    *(void *)(v22 + 24) = v21;
    aBlock[4] = (uint64_t)sub_10001B3DC;
    aBlock[5] = v22;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1003F44E4;
    aBlock[3] = (uint64_t)&unk_1007991C0;
    id v23 = _Block_copy(aBlock);
    id v24 = v19;
    swift_retain();
    swift_release();
    [v24 performBlockAndWait:v23];

    _Block_release(v23);
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if (v23) {
      __break(1u);
    }
  }
}

void sub_1000AB20C()
{
  byte_10083D318 = 0;
  sub_1002D1C64();
  sub_1005B6774();
  sub_1005B6790();
  sub_1005B6900();
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    type metadata accessor for CloudKitStack();
    sub_1001F5034();
    sub_1002C9DC8();
  }
  else
  {
    if (qword_1007F6980 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100026A54(v1, (uint64_t)qword_1007FC360);
    id v8 = v0;
    objc_super v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      id v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)id v4 = 136446210;
      uint64_t v9 = v5;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v6, v7, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s (syncEngineDidEndFetchingChanges) isProtectedDataAvailable false", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000AB4B4(void *a1, void *a2)
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_1007FC360);
  id v6 = v2;
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  uint64_t v75 = a2;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    aBlock[0] = v10;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_10011EA98(v11, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s (accountChangedFromUserRecordID)", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v13 = a1;
  id v14 = v6;
  id v15 = v13;
  id v16 = v14;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  id v72 = a1;
  id v74 = v15;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446723;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_10011EA98(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2160;
    uint64_t v77 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 22) = 2081;
    if (a1)
    {
      uint64_t v22 = v74;
      id v23 = [v74 recordName];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0x7974706D65;
      unint64_t v26 = 0xE500000000000000;
      uint64_t v22 = v74;
    }
    uint64_t v77 = sub_10011EA98(v24, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s (accountChangedFromUserRecordID) oldUserRecordID:%{private,mask.hash}s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v27 = v75;
  id v28 = v75;
  id v29 = v16;
  id v30 = v28;
  id v31 = (char *)v29;
  id v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  id v73 = v30;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446723;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_10011EA98(v35, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2160;
    uint64_t v77 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v34 + 22) = 2081;
    if (v75)
    {
      uint64_t v37 = v30;
      id v38 = [v30 recordName];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = 0x7974706D65;
      unint64_t v41 = 0xE500000000000000;
      uint64_t v37 = v30;
    }
    uint64_t v77 = sub_10011EA98(v39, v41, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s (accountChangedFromUserRecordID) newUserRecordID:%{private,mask.hash}s", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v27 = v75;
  }
  else
  {
  }
  uint64_t v42 = OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack;
  id v43 = *(char **)&v31[OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_coreDataStack];
  uint64_t v44 = *(void **)&v43[OBJC_IVAR____TtC7Journal13CoreDataStack_container];
  id v45 = v43;
  id v46 = [v44 viewContext];
  id v47 = [v46 persistentStoreCoordinator];

  if (!v47) {
    goto LABEL_30;
  }
  id v48 = [v47 persistentStores];
  sub_10001B284(0, &qword_1008038C0);
  unint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v49 >> 62))
  {
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

    if (v50) {
      goto LABEL_21;
    }
LABEL_30:

    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();

  swift_bridgeObjectRelease_n();
  if (!v68) {
    goto LABEL_30;
  }
LABEL_21:
  int v51 = v45[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess];

  if (v51 == 1)
  {
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
    {
      unint64_t v52 = *(void **)(*(void *)&v31[v42] + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
      uint64_t v53 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v53;
      v54[3] = v72;
      v54[4] = v27;
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = sub_1000AC6A0;
      *(void *)(v55 + 24) = v54;
      aBlock[4] = (uint64_t)sub_10001B3DC;
      aBlock[5] = v55;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1003F44E4;
      aBlock[3] = (uint64_t)&unk_100799148;
      uint64_t v56 = _Block_copy(aBlock);
      id v57 = v74;
      id v58 = v73;
      id v59 = v52;
      swift_retain();
      swift_release();
      [v59 performBlockAndWait:v56];

      _Block_release(v56);
      LOBYTE(v56) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((v56 & 1) == 0) {
        return;
      }
      __break(1u);
    }
    uint64_t v60 = v31;
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      unint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(_DWORD *)unint64_t v63 = 136446210;
      aBlock[0] = v64;
      type metadata accessor for UUID();
      sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v77 = sub_10011EA98(v65, v66, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v67 = "%{public}s (accountChangedFromUserRecordID) isProtectedDataAvailable false";
LABEL_33:
      _os_log_impl((void *)&_mh_execute_header, v61, v62, v67, v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v60 = v31;
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v61, v62))
  {
    unint64_t v63 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(_DWORD *)unint64_t v63 = 136446210;
    aBlock[0] = v69;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_10011EA98(v70, v71, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    uint64_t v67 = "%{public}s (accountChangedFromUserRecordID) Database is not open, not ready to sync";
    goto LABEL_33;
  }
LABEL_34:
}

uint64_t sub_1000AC0C0()
{
  if (qword_1007F6980 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1007FC360);
  id v2 = v0;
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v10 = v6;
    type metadata accessor for UUID();
    sub_1000AC2BC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s (shouldFetchAssetContentsFor) shouldFetchAssets:false", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1000AC2BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000AC304()
{
  unint64_t result = qword_1007FC450;
  if (!qword_1007FC450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC450);
  }
  return result;
}

uint64_t sub_1000AC35C()
{
  return sub_10021221C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000AC36C()
{
  return sub_1000AC7AC((uint64_t (*)(void, void, void, void, void))sub_100209D78);
}

uint64_t sub_1000AC384(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000AC394()
{
  return swift_release();
}

uint64_t sub_1000AC39C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1000AC3D8()
{
  return sub_100211AC4(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000AC3E4()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC3F4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1000AC430()
{
  return sub_1000A52A0(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), (uint64_t)&unk_100798ED8, (uint64_t)sub_1000AC558, (void (*)(uint64_t, uint64_t, void *))sub_1004B6700);
}

uint64_t sub_1000AC484()
{
  return sub_1000A52A0(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), (uint64_t)&unk_100798EB0, (uint64_t)sub_1000AC4EC, (void (*)(uint64_t, uint64_t, void *))sub_10033AD58);
}

uint64_t sub_1000AC4D8()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC4EC(uint64_t a1)
{
  return sub_1000A5394(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32), "%{public}s [iclouderror] serverRecordChanged conflict resolved:%{BOOL}d");
}

uint64_t sub_1000AC518()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000AC558(uint64_t a1)
{
  return sub_1000A5394(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32), "%{public}s [iclouderror] unknownItem resolved:%{BOOL}d");
}

uint64_t sub_1000AC588()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_100040DD0(*(void *)(v0 + 24), v1);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000AC5E4()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC5FC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000AC648()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC658()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1000AC6A0()
{
  sub_1000A43A8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000AC6AC()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC6C0()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC6D4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000AC714()
{
  return swift_deallocObject();
}

void sub_1000AC724(BOOL *a1@<X8>)
{
  sub_10009F0F4(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1000AC744()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000AC794()
{
  return sub_1000AC7AC((uint64_t (*)(void, void, void, void, void))sub_10009C760);
}

uint64_t sub_1000AC7AC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1000AC7C4()
{
  return swift_deallocObject();
}

uint64_t sub_1000AC7D4(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AC8AC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FC4A0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007FC4A0);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000AC974(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  id v59 = a6;
  uint64_t v56 = a4;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v13 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  char v14 = static NSObject.== infix(_:_:)();

  if (v14) {
    uint64_t v15 = 0x4365746176697270;
  }
  else {
    uint64_t v15 = 0x746E6F436E69616DLL;
  }
  if (v14) {
    unint64_t v16 = 0xEE00747865746E6FLL;
  }
  else {
    unint64_t v16 = 0xEB00000000747865;
  }
  id v17 = *(id *)(qword_10083D2F8 + 16);
  os_log_type_t v18 = (void *)sub_10056A2E0(a2, a3, a1);

  if (v18)
  {
    id v19 = v18;
    id v20 = [v19 text];
    if (v20)
    {
      unint64_t v21 = v20;
      uint64_t v53 = v12;
      uint64_t v55 = a1;
      uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      if (qword_1007F6988 != -1) {
        swift_once();
      }
      unint64_t v52 = a5;
      uint64_t v25 = type metadata accessor for Logger();
      sub_100026A54(v25, (uint64_t)qword_1007FC4A0);
      sub_100040D64(v22, v24);
      sub_100040D64(v22, v24);
      swift_bridgeObjectRetain();
      unint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.default.getter();
      BOOL v28 = os_log_type_enabled(v26, v27);
      uint64_t v54 = v22;
      if (v28)
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        v60[0] = v51;
        *(_DWORD *)uint64_t v29 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_10011EA98(v15, v16, v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v61 = (uint64_t)sub_100041F24(v22, v24);
        sub_100010218(&qword_1007FC4B8);
        uint64_t v30 = String.init<A>(describing:)();
        uint64_t v61 = sub_10011EA98(v30, v31, v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100040DD0(v22, v24);
        unint64_t v32 = v24;
        sub_100040DD0(v22, v24);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s text: %s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_100040DD0(v22, v24);
        unint64_t v32 = v24;
        sub_100040DD0(v22, v24);
      }

      v60[0] = 2960685;
      v60[1] = 0xE300000000000000;
      v37._uint64_t countAndFlagsBits = v56;
      v37._object = v52;
      String.append(_:)(v37);
      id v38 = objc_allocWithZone((Class)NSAttributedString);
      NSString v39 = String._bridgeToObjectiveC()();
      id v40 = [v38 initWithString:v39];
      swift_bridgeObjectRelease();

      uint64_t v41 = sub_10004243C();
      unint64_t v43 = v42;

      uint64_t v44 = v55;
      id v45 = v53;
      if (v43 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100040DBC(v41, v43);
      }
      uint64_t v47 = v54;
      [v19 setText:isa];

      Date.init()();
      Class v48 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v58);
      [v19 setUpdatedDate:v48];

      [v19 setIsUploadedToCloud:0];
      id v49 = *(id *)(qword_10083D2F8 + 16);
      sub_10029BA60(v44);

      sub_100040DD0(v47, v32);
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1007F6988 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_100026A54(v33, (uint64_t)qword_1007FC4A0);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Unable to find journal entry from to simulate", v36, 2u);
    swift_slowDealloc();
  }

LABEL_26:
  uint64_t v50 = v59;
  *id v59 = 0;
  v50[1] = 0;
}

uint64_t sub_1000ACFB8(uint64_t a1)
{
  uint64_t v2 = UUID.uuidString.getter();
  if (qword_1007F6D38 != -1) {
    uint64_t v2 = swift_once();
  }
  __chkstk_darwin(v2);
  id v4 = v3;
  sub_100010218(&qword_100803920);
  NSManagedObjectContext.performAndWait<A>(_:)();
  swift_bridgeObjectRelease();

  swift_beginAccess();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  return swift_bridgeObjectRelease();
}

unint64_t sub_1000AD100(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v67 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v66 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  __chkstk_darwin(v8);
  unint64_t v63 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v10 - 8);
  id v74 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v75 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v72 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v13;
  __chkstk_darwin(v14);
  id v73 = (char *)&v60 - v15;
  if (qword_1007F6988 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100026A54(v16, (uint64_t)qword_1007FC4A0);
  id v17 = a1;
  os_log_type_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v70 = v3;
  uint64_t v71 = v2;
  uint64_t v68 = v5;
  uint64_t v69 = v6;
  if (v20)
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v61 = v12;
    aBlock[0] = v22;
    *(_DWORD *)unint64_t v21 = 136315138;
    id v23 = [v17 debugDescription];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    uint64_t v76 = (double *)sub_10011EA98(v24, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Simulation Merge Conflict with entry: %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v61;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(void *)(v27 + 24) = 0;
  id v28 = [v17 id];
  if (!v28)
  {
    uint64_t v31 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, 1, 1, v12);
    goto LABEL_11;
  }
  uint64_t v29 = v28;
  uint64_t v30 = v72;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = (uint64_t)v74;
  uint64_t v32 = v75;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v33(v74, v30, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v31, 0, 1, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v31, 1, v12) == 1)
  {
LABEL_11:
    sub_1000ADA74(v31);
    unint64_t v49 = 0xD00000000000002FLL;
    goto LABEL_16;
  }
  uint64_t v34 = v73;
  v33(v73, (char *)v31, v12);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  id v74 = (char *)(v27 + 16);
  uint64_t v35 = v64;
  unint64_t v36 = v30;
  Swift::String v37 = v63;
  uint64_t v38 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, enum case for DispatchQoS.QoSClass.background(_:), v65);
  uint64_t v61 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
  uint64_t v39 = v75 + 16;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v36, v34, v12);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 64) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 64);
  unint64_t v41 = (v62 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v27;
  v33((char *)(v42 + v40), v36, v12);
  unint64_t v43 = v42 + v41;
  strcpy((char *)(v42 + v41), "priv22222222");
  *(unsigned char *)(v43 + 13) = 0;
  *(_WORD *)(v43 + 14) = -5120;
  aBlock[4] = (uint64_t)sub_1000ADBC0;
  aBlock[5] = v42;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10017D530;
  aBlock[3] = (uint64_t)&unk_100799328;
  uint64_t v44 = _Block_copy(aBlock);
  swift_retain();
  id v45 = v66;
  static DispatchQoS.unspecified.getter();
  uint64_t v76 = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  id v46 = v68;
  uint64_t v47 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  Class v48 = (void *)v61;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v44);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v69);
  swift_release();
  swift_beginAccess();
  if (*(void *)(v27 + 24))
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v12);
  }
  else
  {
    uint64_t v50 = v73;
    uint64_t v51 = UUID.uuidString.getter();
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    if (qword_1007F6D38 != -1) {
      uint64_t v51 = swift_once();
    }
    __chkstk_darwin(v51);
    *(&v60 - 6) = (uint64_t)v55;
    *(&v60 - 5) = v52;
    *(&v60 - 4) = v54;
    *(&v60 - 3) = 0x313131316E69616DLL;
    *(&v60 - 2) = 0xEA00000000003131;
    id v56 = v55;
    sub_100010218(&qword_100803920);
    NSManagedObjectContext.performAndWait<A>(_:)();
    swift_bridgeObjectRelease();

    uint64_t v57 = v76;
    uint64_t v58 = v77;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v50, v12);
    *(void *)(v27 + 16) = v57;
    *(void *)(v27 + 24) = v58;
    swift_bridgeObjectRelease();
  }
  unint64_t v49 = *(void *)(v27 + 16);
  swift_bridgeObjectRetain();
LABEL_16:
  swift_release();
  return v49;
}

uint64_t sub_1000ADA3C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000ADA74(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100800950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000ADAD4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000ADBC0()
{
  type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 + 16);

  return sub_1000ACFB8(v1);
}

uint64_t sub_1000ADC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000ADC64()
{
  return swift_release();
}

void sub_1000ADC6C(void *a1@<X8>)
{
}

void sub_1000ADC84(void *a1@<X8>)
{
  sub_1000AC974(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), a1);
}

id sub_1000ADD8C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_minimumSyncTimeBeforeShowing] = 0x4000000000000000;
  v1[OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_hasStoppedSyncing] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_loadingIndicator;
  id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 initWithActivityIndicatorStyle:100];

  v10.receiver = v5;
  v10.Class super_class = (Class)type metadata accessor for CloudSyncLoadingView();
  id v6 = [super initWithCoder:a1];
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    sub_1000ADE80();
  }
  return v7;
}

void sub_1000ADE80()
{
  uint64_t v1 = v0;
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_loadingIndicator]];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  uint64_t v2 = self;
  id v3 = [v2 defaultCenter];
  if (qword_1007F6E68 != -1) {
    swift_once();
  }
  [v3 addObserver:v1 selector:"syncEngineSyncStart:" name:qword_10083D3F0 object:0];

  id v4 = [v2 defaultCenter];
  id v5 = v4;
  if (qword_1007F6E70 != -1)
  {
    swift_once();
    id v4 = v5;
  }
  [v4 addObserver:v1 selector:"syncEngineSyncEnd:" name:qword_10083D3F8 object:0];
}

id sub_1000ADFF0()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  uint64_t v3 = qword_1007F6E68;
  id v4 = v0;
  if (v3 != -1) {
    swift_once();
  }
  [v2 removeObserver:v4 name:qword_10083D3F0 object:0];

  id v5 = [v1 defaultCenter];
  uint64_t v6 = qword_1007F6E70;
  id v7 = v4;
  if (v6 != -1) {
    swift_once();
  }
  [v5 removeObserver:v7 name:qword_10083D3F8 object:0];

  v9.receiver = v7;
  v9.Class super_class = (Class)type metadata accessor for CloudSyncLoadingView();
  return [super dealloc];
}

uint64_t sub_1000AE170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000AE208, v6, v5);
}

uint64_t sub_1000AE208()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (unsigned char *)Strong;
    uint64_t v3 = OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_hasStoppedSyncing;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_hasStoppedSyncing) = 0;
    uint64_t v4 = *(void **)(Strong + OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_loadingIndicator);
    if (([v4 isAnimating] & 1) == 0 && (v2[v3] & 1) == 0) {
      [v4 startAnimating];
    }
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000AE304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 72) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000AE39C, v6, v5);
}

uint64_t sub_1000AE39C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_hasStoppedSyncing] = 1;
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC7Journal20CloudSyncLoadingView_loadingIndicator);

    [v4 stopAnimating];
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000AE4BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  objc_super v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Notification();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  id v16 = a1;
  swift_retain();
  uint64_t v17 = static MainActor.shared.getter();
  os_log_type_t v18 = (void *)swift_allocObject();
  uint64_t v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v15;
  swift_release();
  sub_100328A60((uint64_t)v9, a5, (uint64_t)v18);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t type metadata accessor for CloudSyncLoadingView()
{
  return self;
}

uint64_t sub_1000AE6EC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1000AE728(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1000AE304(a1, v4, v5, v6);
}

uint64_t sub_1000AE7E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100052588;
  return sub_1000AE170(a1, v4, v5, v6);
}

uint64_t sub_1000AE894()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000AE8CC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FC520);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007FC520);
  if (qword_1007F7DB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED28);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for PersistentCache()
{
  return sub_100073C20();
}

unint64_t sub_1000AE9AC(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 2:
      unint64_t result = 0x614E747369747261;
      break;
    case 3:
      unint64_t result = 1735290739;
      break;
    case 4:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AEAAC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1007FC730);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_1000B16F8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = _s10MusicAssetC9MusicDataVMa(0);
    v11[14] = 1;
    type metadata accessor for URL();
    sub_1000B0D8C(&qword_1007FC738, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[11] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[10] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[9] = 6;
    type metadata accessor for Date();
    sub_1000B0D8C(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[8] = *(unsigned char *)(v3 + *(int *)(v9 + 44));
    v11[7] = 7;
    sub_1000B1860();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AEDE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100010218(&qword_1007FC710);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = _s10MusicAssetC9MusicDataVMa(0);
  __chkstk_darwin(v37);
  uint64_t v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v38 = a1;
  sub_10002E0BC(a1, v15);
  sub_1000B16F8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v38);
  }
  uint64_t v16 = (uint64_t)v6;
  uint64_t v17 = v10;
  char v47 = 0;
  *uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  v14[1] = v18;
  type metadata accessor for URL();
  char v46 = 1;
  sub_1000B0D8C(&qword_1007FC720, (void (*)(uint64_t))&type metadata accessor for URL);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  os_log_type_t v19 = (int *)v37;
  sub_10002C4EC((uint64_t)v9, (uint64_t)v14 + *(int *)(v37 + 20), (uint64_t *)&unk_100800A60);
  char v45 = 2;
  uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  unint64_t v21 = (uint64_t *)((char *)v14 + v19[6]);
  *unint64_t v21 = v20;
  v21[1] = v22;
  char v44 = 3;
  uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v24 = (uint64_t *)((char *)v14 + v19[7]);
  *uint64_t v24 = v23;
  v24[1] = v25;
  char v43 = 4;
  uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v27 = (uint64_t)v38;
  id v28 = (uint64_t *)((char *)v14 + v19[8]);
  *id v28 = v26;
  v28[1] = v29;
  char v42 = 5;
  uint64_t v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v34 = 0;
  uint64_t v31 = (char *)v14 + v19[9];
  *(void *)uint64_t v31 = v30;
  v31[8] = v32 & 1;
  type metadata accessor for Date();
  char v41 = 6;
  sub_1000B0D8C(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC(v16, (uint64_t)v14 + v19[10], (uint64_t *)&unk_1007FC470);
  char v39 = 7;
  sub_1000B174C();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v36);
  *((unsigned char *)v14 + v19[11]) = v40;
  sub_1000B17A0((uint64_t)v14, v35);
  _s7Journal19DynamicWaveformViewVwxx_0(v27);
  return sub_1000B1804((uint64_t)v14);
}

unint64_t sub_1000AF478()
{
  return sub_1000AE9AC(*v0);
}

uint64_t sub_1000AF480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B0DD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AF4A8(uint64_t a1)
{
  unint64_t v2 = sub_1000B16F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AF4E4(uint64_t a1)
{
  unint64_t v2 = sub_1000B16F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AF520@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AEDE8(a1, a2);
}

uint64_t sub_1000AF538(void *a1)
{
  return sub_1000AEAAC(a1);
}

uint64_t sub_1000AF550()
{
  uint64_t v1 = sub_100010218(&qword_1007F9E58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = (int *)_s10MusicAssetC9MusicDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_5;
  }
  swift_retain();
  sub_100039F48((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10001457C((uint64_t)v3, &qword_1007F9E58);
    return 0;
  }
  sub_1000B1690((uint64_t)v3, (uint64_t)v8, _s10MusicAssetC9MusicDataVMa);
  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D7C30;
  uint64_t v10 = &v8[v4[7]];
  uint64_t v11 = v10[1];
  *(void *)(inited + 32) = *v10;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = &v8[v4[8]];
  uint64_t v13 = v12[1];
  *(void *)(inited + 48) = *v12;
  *(void *)(inited + 56) = v13;
  uint64_t v14 = &v8[v4[6]];
  uint64_t v15 = v14[1];
  *(void *)(inited + 64) = *v14;
  *(void *)(inited + 72) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10023DA38(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  sub_1000B1804((uint64_t)v8);
  return v16;
}

uint64_t sub_1000AF7AC()
{
  return swift_release();
}

id sub_1000AF7BC()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)_s10MusicAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000AF804()
{
  return _s10MusicAssetCMa(0);
}

uint64_t _s10MusicAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1007FC610);
}

uint64_t sub_1000AF82C()
{
  return swift_updateClassMetadata2();
}

void *sub_1000AF870(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_100800A60);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)((char *)v4 + v16);
    os_log_type_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    unint64_t v21 = (void *)((char *)v4 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *unint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    void *v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v4 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[10];
    __dst = (char *)v4 + v31;
    char v32 = (char *)a2 + v31;
    uint64_t v33 = type metadata accessor for Date();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v32, 1, v33))
    {
      uint64_t v35 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t sub_1000AFB58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_1000AFCEC(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  os_log_type_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (char *)a1 + v22;
  uint64_t v27 = (char *)a2 + v22;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[10];
  __dst = (char *)a1 + v28;
  uint64_t v29 = (char *)a2 + v28;
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v30 - 8);
  char v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    uint64_t v33 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_1000AFF84(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  os_log_type_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *os_log_type_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v36 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *sub_1000B0304(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_1000B0544(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v31;
  int v34 = (char *)a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  int v35 = (char *)a1 + v32;
  uint64_t v36 = (char *)a2 + v32;
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v38 = *(void *)(v37 - 8);
  char v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_12;
  }
  if (v41)
  {
LABEL_12:
    uint64_t v42 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1000B0880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B0894);
}

uint64_t sub_1000B0894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000B09C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B09DC);
}

uint64_t sub_1000B09DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s10MusicAssetC9MusicDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1007FC678);
}

void sub_1000B0B30()
{
  sub_1000B0C5C(319, (unint64_t *)&qword_1007F9270, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_1000B0C5C(319, (unint64_t *)&qword_1007FAAE0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000B0C5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000B0CB0()
{
  return swift_retain();
}

uint64_t sub_1000B0CC0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000B0CD8()
{
  return sub_1000AF550();
}

uint64_t sub_1000B0CFC()
{
  return sub_1000B0D8C(&qword_1007F9E60, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_1000B0D44()
{
  return sub_1000B0D8C(&qword_1007FC6C8, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_1000B0D8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B0DD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010068A640 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

char *sub_1000B1130(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, unsigned __int8 a15)
{
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v58 = a2;
  LODWORD(v57) = a1;
  int v71 = a15;
  uint64_t v68 = a8;
  uint64_t v69 = a14;
  int v67 = a13;
  uint64_t v65 = a12;
  uint64_t v66 = a7;
  uint64_t v63 = a11;
  uint64_t v64 = a6;
  uint64_t v61 = a9;
  uint64_t v62 = a10;
  uint64_t v70 = sub_100010218(&qword_1007F9E48);
  __chkstk_darwin(v70);
  uint64_t v72 = (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)_s10MusicAssetC9MusicDataVMa(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (uint64_t *)((char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v55 - v28;
  UUID.init()();
  uint64_t v30 = (char *)objc_allocWithZone((Class)_s10MusicAssetCMa(0));
  *(void *)&v30[OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata] = 0;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, v29, v23);
  uint64_t v31 = a5;
  uint64_t v32 = (char *)sub_1001817C4((uint64_t)v26, 3, (char)v57);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v24 + 8);
  v33(v29, v23);
  if (v31)
  {
    *uint64_t v22 = v31;
    swift_storeEnumTagMultiPayload();
    id v56 = v32;
    id v57 = v31;
    UUID.init()();
    uint64_t v34 = UUID.uuidString.getter();
    uint64_t v36 = v35;
    v33(v29, v23);
    type metadata accessor for AssetAttachment(0);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = 0;
    sub_1000B1690((uint64_t)v22, v37 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    uint64_t v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
    *uint64_t v38 = v34;
    v38[1] = v36;
    char v39 = &v56[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v39 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
    int v40 = v32;
  }
  uint64_t v42 = v59;
  uint64_t v41 = v60;
  *uint64_t v19 = v58;
  v19[1] = v42;
  sub_10002C4EC(v41, (uint64_t)v19 + v17[5], (uint64_t *)&unk_100800A60);
  char v43 = (void *)((char *)v19 + v17[6]);
  uint64_t v44 = v66;
  void *v43 = v64;
  v43[1] = v44;
  char v45 = (void *)((char *)v19 + v17[7]);
  uint64_t v46 = v61;
  *char v45 = v68;
  v45[1] = v46;
  char v47 = (void *)((char *)v19 + v17[8]);
  uint64_t v48 = v63;
  *char v47 = v62;
  v47[1] = v48;
  unint64_t v49 = (char *)v19 + v17[9];
  *(void *)unint64_t v49 = v65;
  v49[8] = v67 & 1;
  sub_10002C4EC(v69, (uint64_t)v19 + v17[10], (uint64_t *)&unk_1007FC470);
  *((unsigned char *)v19 + v17[11]) = v71;
  uint64_t v50 = v72;
  sub_1000B1690((uint64_t)v19, v72, _s10MusicAssetC9MusicDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007FC708);
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = v51 + *(void *)(*(void *)v51 + 104);
  uint64_t v53 = sub_100010218(&qword_1007F9E58);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
  *(_OWORD *)(v51 + *(void *)(*(void *)v51 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v50, v51 + *(void *)(*(void *)v51 + 120), &qword_1007F9E48);
  *(void *)&v32[OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata] = v51;

  swift_release();
  return v32;
}

uint64_t sub_1000B1690(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000B16F8()
{
  unint64_t result = qword_1007FC718;
  if (!qword_1007FC718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC718);
  }
  return result;
}

unint64_t sub_1000B174C()
{
  unint64_t result = qword_1007FC728;
  if (!qword_1007FC728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC728);
  }
  return result;
}

uint64_t sub_1000B17A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1804(uint64_t a1)
{
  uint64_t v2 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000B1860()
{
  unint64_t result = qword_1007FC740;
  if (!qword_1007FC740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC740);
  }
  return result;
}

unsigned char *_s10MusicAssetC9MusicDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B1980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10MusicAssetC9MusicDataV10CodingKeysOMa()
{
  return &_s10MusicAssetC9MusicDataV10CodingKeysON;
}

unint64_t sub_1000B19BC()
{
  unint64_t result = qword_1007FC748;
  if (!qword_1007FC748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC748);
  }
  return result;
}

unint64_t sub_1000B1A14()
{
  unint64_t result = qword_1007FC750;
  if (!qword_1007FC750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC750);
  }
  return result;
}

unint64_t sub_1000B1A6C()
{
  unint64_t result = qword_1007FC758;
  if (!qword_1007FC758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC758);
  }
  return result;
}

uint64_t sub_1000B1AC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStackConfiguration()
{
  return self;
}

uint64_t sub_1000B1B34()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self mainBundle];
  id v6 = [v5 bundleURL];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = *(void *)(v0 + 24);
  v10[0] = *(void *)(v0 + 16);
  v10[1] = v7;
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = 0x646D6F6D2ELL;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1000B1C94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v16 - v11;
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  if (qword_10083D468)
  {
    sub_1004FD498(qword_10083D460, (void *)qword_10083D468, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    static URL.libraryDirectory.getter();
  }
  uint64_t v13 = *(void *)(v1 + 40);
  v16[0] = *(void *)(v1 + 32);
  v16[1] = v13;
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = 0x6574696C71732ELL;
  v14._object = (void *)0xE700000000000000;
  String.append(_:)(v14);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_1000B1F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_1000B1F34()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000B2004(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_1000B2160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1000B2204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1000B22AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1000B2354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1000B23FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1000B24A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1000B269C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1000B2968);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for InsightsSection()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000B29A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B29F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_1000B2A28(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unsigned int v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  unsigned int v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    int v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t sub_1000B2BEC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = a1[3];
  sub_100014440(&qword_1007F9640);
  type metadata accessor for ModifiedContent();
  sub_100014440(&qword_1007FC8A0);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v4 = type metadata accessor for ModifiedContent();
  uint64_t v34 = a1[5];
  uint64_t v5 = v34;
  uint64_t v35 = sub_100014488(&qword_1007F9638, &qword_1007F9640);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = &protocol witness table for _FlexFrameLayout;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = &protocol witness table for _PaddingLayout;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = &protocol witness table for _PaddingLayout;
  uint64_t v24 = v4;
  uint64_t v25 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v6 = a1[2];
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v7 = type metadata accessor for VStack();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned int v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v17 - v12;
  static HorizontalAlignment.leading.getter();
  uint64_t v19 = v6;
  uint64_t v20 = v3;
  uint64_t v21 = a1[4];
  uint64_t v22 = v5;
  uint64_t v23 = v17;
  VStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  unint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v13, v10, v7);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v14(v18, v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v7);
}

uint64_t sub_1000B2F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v89 = a4;
  uint64_t v88 = a2;
  uint64_t v90 = a1;
  uint64_t v86 = a6;
  uint64_t v83 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v85 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  os_log_t v84 = (char *)v58 - v10;
  NSString v82 = (uint64_t (*)(char *, uint64_t))type metadata accessor for AccessibilityTraits();
  uint64_t v81 = *((void *)v82 - 1);
  __chkstk_darwin(v82);
  id v80 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014440(&qword_1007F9640);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v76 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v72 = (char *)v58 - v13;
  sub_100014440(&qword_1007FC8A0);
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v79 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v70 = (char *)v58 - v15;
  uint64_t v60 = v14;
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v78 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v74 = (char *)v58 - v17;
  uint64_t v63 = v16;
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v77 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v73 = (char *)v58 - v19;
  uint64_t v65 = v18;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v75 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  int v71 = (char *)v58 - v21;
  uint64_t v22 = sub_100014488(&qword_1007F9638, &qword_1007F9640);
  uint64_t v107 = a5;
  uint64_t v108 = v22;
  uint64_t WitnessTable = swift_getWitnessTable();
  v58[1] = WitnessTable;
  uint64_t v24 = sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
  uint64_t v105 = WitnessTable;
  uint64_t v106 = v24;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v103 = v59;
  unint64_t v104 = &protocol witness table for _FlexFrameLayout;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v101 = v62;
  uint64_t v102 = &protocol witness table for _PaddingLayout;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v99 = v64;
  id v100 = &protocol witness table for _PaddingLayout;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v95 = v20;
  uint64_t v96 = v66;
  int v67 = &opaque type descriptor for <<opaque return type of View.unredacted()>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v69 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v27 = (char *)v58 - v26;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v68 = type metadata accessor for ModifiedContent();
  uint64_t v91 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v61 = (char *)v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v87 = (char *)v58 - v30;
  uint64_t v95 = v88;
  uint64_t v96 = a3;
  uint64_t v97 = v89;
  uint64_t v98 = a5;
  type metadata accessor for InsightsSection();
  static Font.subheadline.getter();
  Font.bold()();
  swift_release();
  uint64_t v31 = v72;
  View.font(_:)();
  swift_release();
  LODWORD(v95) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v32 = v70;
  View.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v31, v12);
  static Alignment.leading.getter();
  uint64_t v33 = v60;
  uint64_t v34 = v74;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v32, v33);
  static Edge.Set.top.getter();
  uint64_t v35 = v73;
  uint64_t v36 = v63;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v34, v36);
  static Edge.Set.bottom.getter();
  uint64_t v37 = v71;
  uint64_t v38 = v65;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v35, v38);
  uint64_t v39 = v66;
  View.unredacted()();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v20);
  int v40 = v80;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v95 = v20;
  uint64_t v96 = v39;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v42 = v61;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t (*)(char *, uint64_t)))(v81 + 8))(v40, v82);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v27, OpaqueTypeMetadata2);
  unint64_t v43 = sub_1000B3AF4();
  void v94[2] = OpaqueTypeConformance2;
  v94[3] = v43;
  uint64_t v44 = v68;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v45 = v91;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  char v47 = v87;
  v46(v87, v42, v44);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t))(v45 + 8);
  uint64_t v91 = v45 + 8;
  NSString v82 = v48;
  unint64_t v49 = v42;
  v48(v42, v44);
  uint64_t v50 = v83;
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  uint64_t v52 = v84;
  uint64_t v53 = v88;
  v51(v84, v90, v88);
  v46(v49, v47, v44);
  uint64_t v95 = (uint64_t)v49;
  uint64_t v54 = v85;
  v51(v85, (uint64_t)v52, v53);
  uint64_t v96 = (uint64_t)v54;
  v94[0] = v44;
  v94[1] = v53;
  uint64_t v92 = v81;
  uint64_t v93 = v89;
  sub_1000B2A28((uint64_t)&v95, 2uLL, (uint64_t)v94);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v50 + 8);
  v55(v52, v53);
  id v56 = v82;
  v82(v87, v44);
  v55(v54, v53);
  return v56(v49, v44);
}

uint64_t sub_1000B3AE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B2F9C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_1000B3AF4()
{
  unint64_t result = qword_1007F96A0;
  if (!qword_1007F96A0)
  {
    type metadata accessor for AccessibilityAttachmentModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F96A0);
  }
  return result;
}

uint64_t sub_1000B3B4C()
{
  return swift_getWitnessTable();
}

unint64_t sub_1000B3DB0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return v1;
  }
  swift_bridgeObjectRetain();
  unint64_t result = sub_1000CDA14(v1);
  if (result < v1)
  {
    unint64_t v1 = *(void *)(a1 + 16 * result + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B3E20()
{
  return 2;
}

void *sub_1000B3E28()
{
  unint64_t v1 = sub_1000B40F4(*v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000B3E60(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1000CAB98(a1, a2, a3, *v3);
}

uint64_t sub_1000B3E68()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

unint64_t sub_1000B3E8C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000B3DB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000B3EBC()
{
  unint64_t result = qword_1007FC8B0;
  if (!qword_1007FC8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC8B0);
  }
  return result;
}

uint64_t sub_1000B3F10(uint64_t result, uint64_t a2)
{
  if (result >= 1)
  {
    if (result == 1)
    {
LABEL_4:
      sub_100010218(&qword_100800A70);
      sub_1000245BC();
      uint64_t v2 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      return v2;
    }
    uint64_t v3 = result;
    unint64_t v4 = *(void *)(a2 + 16);
    uint64_t v14 = a2 + 32;
    uint64_t v5 = _swiftEmptyArrayStorage;
    uint64_t v6 = 1;
    while (v6 != v3)
    {
      swift_bridgeObjectRetain();
      unint64_t result = swift_stdlib_random();
      uint64_t v7 = (0 * (unsigned __int128)v4) >> 64;
      if (-(uint64_t)v4 % v4)
      {
        while (1)
          swift_stdlib_random();
      }
      if (v7 >= (uint64_t)v4) {
        goto LABEL_16;
      }
      uint64_t v8 = (uint64_t *)(v14 + 16 * v7);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_1002A54A0(0, *((void *)v5 + 2) + 1, 1, (char *)v5);
        uint64_t v5 = (double *)result;
      }
      unint64_t v12 = *((void *)v5 + 2);
      unint64_t v11 = *((void *)v5 + 3);
      if (v12 >= v11 >> 1)
      {
        unint64_t result = (uint64_t)sub_1002A54A0((char *)(v11 > 1), v12 + 1, 1, (char *)v5);
        uint64_t v5 = (double *)result;
      }
      ++v6;
      *((void *)v5 + 2) = v12 + 1;
      uint64_t v13 = &v5[2 * v12];
      *((void *)v13 + 4) = v10;
      *((void *)v13 + 5) = v9;
      if (v6 == v3) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1000B40F4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = _swiftEmptyArrayStorage;
  uint64_t v6 = &_swiftEmptyArrayStorage[4];
  uint64_t v22 = v3;
  while (1)
  {
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_stdlib_random();
    uint64_t v7 = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
    if (v7 >= (uint64_t)v1) {
      break;
    }
    uint64_t v8 = (uint64_t *)(v3 + 16 * v7);
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRelease();
    if (!v4)
    {
      unint64_t v11 = v5[3];
      if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_24;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if (v12 <= 1) {
        uint64_t v13 = 1;
      }
      else {
        uint64_t v13 = v12;
      }
      sub_100010218(&qword_1007FC170);
      uint64_t v14 = (void *)swift_allocObject();
      int64_t v15 = j__malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 17;
      }
      uint64_t v17 = v16 >> 4;
      v14[2] = v13;
      v14[3] = 2 * (v16 >> 4);
      unint64_t v18 = (unint64_t)(v14 + 4);
      uint64_t v19 = v5[3] >> 1;
      if (v5[2])
      {
        uint64_t v20 = v5 + 4;
        if (v14 != v5 || v18 >= (unint64_t)v20 + 16 * v19) {
          memmove(v14 + 4, v20, 16 * v19);
        }
        objc_super v5[2] = 0;
      }
      uint64_t v6 = (void *)(v18 + 16 * v19);
      uint64_t v4 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      unint64_t result = (void *)swift_release();
      uint64_t v5 = v14;
      uint64_t v3 = v22;
    }
    if (__OFSUB__(v4--, 1)) {
      goto LABEL_23;
    }
    *uint64_t v6 = v10;
    v6[1] = v9;
    v6 += 2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1000B42C0(uint64_t a1)
{
  uint64_t v156 = sub_100010218(&qword_1007FC8B8);
  uint64_t v136 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v162 = (uint64_t)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_1007FC8C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v152 = (uint64_t)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v134 - v6);
  __chkstk_darwin(v8);
  id v139 = (char *)&v134 - v9;
  __chkstk_darwin(v10);
  unint64_t v153 = (char *)&v134 - v11;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  id v138 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v145 = (char *)&v134 - v15;
  uint64_t v159 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v158 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1007FC8C8);
  __chkstk_darwin(v18);
  uint64_t v157 = (uint64_t *)((char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v20);
  uint64_t v146 = (uint64_t)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100010218(&qword_1007FC8D0);
  __chkstk_darwin(v154);
  uint64_t v23 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100010218(&qword_1007FC8D8);
  __chkstk_darwin(v151);
  uint64_t v161 = (uint64_t)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = v20;
  uint64_t v25 = *(void *)(a1 + *(int *)(v20 + 32));
  uint64_t v26 = sub_100650E60(v25);
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  uint64_t v31 = sub_100650F04(v26, v27, v29 & 1, 1 << *(unsigned char *)(v25 + 32), *(_DWORD *)(v25 + 36), 0);
  sub_1000733B8(v26, v28, v30);
  uint64_t v155 = v16;
  uint64_t v137 = v18;
  if (v31 <= 0)
  {
    uint64_t v39 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v160 = _swiftEmptyArrayStorage;
    unint64_t v37 = _swiftEmptyArrayStorage[3];
    uint64_t v135 = v39;
    uint64_t v140 = (v39 + 32) & ~v39;
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1007FC190);
    uint64_t v32 = *(void *)(v16 + 72);
    uint64_t v33 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v34 = (v33 + 32) & ~v33;
    uint64_t v160 = (unint64_t *)swift_allocObject();
    uint64_t result = j__malloc_size(v160);
    if (!v32) {
      goto LABEL_91;
    }
    if (result - v34 == 0x8000000000000000 && v32 == -1) {
      goto LABEL_93;
    }
    uint64_t v135 = v33;
    uint64_t v140 = (v33 + 32) & ~v33;
    unint64_t v37 = 2 * ((result - v34) / v32);
    uint64_t v38 = v160;
    v160[2] = v31;
    uint64_t v38[3] = v37;
  }
  sub_10001B220(a1, (uint64_t)v23, &qword_1007FC8D0);
  uint64_t v40 = v146;
  sub_10002C4EC((uint64_t)v23, v146, (uint64_t *)&unk_1007FF080);
  uint64_t v41 = v157;
  sub_10001B220(v40, (uint64_t)v157, (uint64_t *)&unk_1007FF080);
  uint64_t v42 = sub_100650E60(*(void *)(v40 + *(int *)(v147 + 32)));
  uint64_t v44 = v43;
  char v46 = v45;
  sub_10001457C(v40, (uint64_t *)&unk_1007FF080);
  char v47 = (char *)v41 + *(int *)(v137 + 36);
  *(void *)char v47 = v42;
  *((void *)v47 + 1) = v44;
  v47[16] = v46 & 1;
  uint64_t v48 = v161;
  uint64_t result = sub_10002C4EC((uint64_t)v41, v161, &qword_1007FC8C8);
  long long v49 = *(_OWORD *)&v23[*(int *)(v154 + 44)];
  uint64_t v154 = v48 + *(int *)(v151 + 44);
  *(_OWORD *)uint64_t v154 = v49;
  uint64_t v50 = v156;
  uint64_t v51 = (uint64_t)v145;
  if ((v31 & 0x8000000000000000) == 0)
  {
    uint64_t v52 = (void *)v31;
    uint64_t v53 = (char *)v160 + v140;
    uint64_t v54 = (char *)(v37 >> 1);
    uint64_t v55 = v155;
    if (v31)
    {
      uint64_t v56 = v161 + *(int *)(v137 + 36);
      unint64_t v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56);
      os_log_type_t v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
      id v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))*(int *)(v147 + 32);
      uint64_t v148 = (char *)(v136 + 56);
      unint64_t v149 = v57;
      uint64_t v142 = (uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
      uint64_t v141 = v155 + 32;
      v54 -= v31;
      id v150 = v7;
      uint64_t v58 = v138;
      uint64_t v151 = v56;
      do
      {
        if (!v52) {
          goto LABEL_75;
        }
        if (*(unsigned char *)(v56 + 16)) {
          goto LABEL_94;
        }
        uint64_t v59 = *(uint64_t *)((char *)v149 + v161);
        if (*(_DWORD *)(v59 + 36) != *(_DWORD *)(v56 + 8)) {
          goto LABEL_76;
        }
        uint64_t v60 = *(void *)v56;
        uint64_t v61 = 1 << *(unsigned char *)(v59 + 32);
        uint64_t v157 = v52;
        if (v60 == v61)
        {
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))v148)(v7, 1, 1, v50);
        }
        else
        {
          if (v60 < 0 || v60 >= v61) {
            goto LABEL_84;
          }
          if (((*(void *)(v59 + 8 * ((unint64_t)v60 >> 6) + 64) >> v60) & 1) == 0)
          {
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          uint64_t v62 = *(void *)(*(void *)(v59 + 48) + 8 * v60);
          uint64_t v63 = (void *)(v162 + *(int *)(v50 + 48));
          uint64_t v64 = (uint64_t *)(*(void *)(v59 + 56) + 32 * v60);
          uint64_t v65 = *v64;
          uint64_t v66 = v64[1];
          uint64_t v67 = v50;
          uint64_t v68 = v64[2];
          uint64_t v69 = v64[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v70 = v62;
          uint64_t v71 = v161;
          sub_10066AC8C(v70, v162);
          void *v63 = v65;
          v63[1] = v66;
          v63[2] = v68;
          v63[3] = v69;
          sub_10001B220(v162, (uint64_t)v7, &qword_1007FC8E0);
          uint64_t v72 = (char *)v7 + *(int *)(v67 + 48);
          *(void *)uint64_t v72 = v65;
          *((void *)v72 + 1) = v66;
          *((void *)v72 + 2) = v68;
          *((void *)v72 + 3) = v69;
          swift_bridgeObjectRetain();
          uint64_t v73 = v151;
          swift_bridgeObjectRetain();
          sub_10001457C(v162, &qword_1007FC8B8);
          uint64_t v74 = v146;
          sub_10001B220(v71, v146, (uint64_t *)&unk_1007FF080);
          uint64_t result = *(void *)v73;
          if ((*(void *)v73 & 0x8000000000000000) != 0) {
            goto LABEL_86;
          }
          uint64_t v75 = *(void *)(v74 + *(int *)(v147 + 32));
          if (result >= -(-1 << *(unsigned char *)(v75 + 32))) {
            goto LABEL_86;
          }
          if (((*(void *)(v75 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            goto LABEL_87;
          }
          if (*(_DWORD *)(v75 + 36) != *(_DWORD *)(v73 + 8)) {
            goto LABEL_88;
          }
          uint64_t v76 = _HashTable.occupiedBucket(after:)();
          uint64_t v77 = *(unsigned int *)(v75 + 36);
          *(void *)uint64_t v73 = v76;
          *(void *)(v73 + 8) = v77;
          *(unsigned char *)(v73 + 16) = 0;
          sub_10001457C(v74, (uint64_t *)&unk_1007FF080);
          uint64_t v7 = v150;
          uint64_t v50 = v156;
          (*(void (**)(void, void, uint64_t, uint64_t))v148)(v150, 0, 1, v156);
          uint64_t v51 = (uint64_t)v145;
          uint64_t v55 = v155;
          uint64_t v58 = v138;
        }
        uint64_t v78 = *(void (**)(uint64_t))v154;
        uint64_t v79 = v152;
        sub_10002C4EC((uint64_t)v7, v152, &qword_1007FC8C0);
        uint64_t v80 = 1;
        uint64_t v81 = v79;
        uint64_t v82 = v50;
        if ((*v144)(v81, 1, v50) != 1)
        {
          uint64_t v83 = v162;
          sub_10002C4EC(v152, v162, &qword_1007FC8B8);
          v78(v83);
          sub_10001457C(v83, &qword_1007FC8B8);
          uint64_t v80 = 0;
        }
        uint64_t v84 = v159;
        (*v143)(v58, v80, 1, v159);
        uint64_t result = (*v142)(v58, 1, v84);
        if (result == 1) {
          goto LABEL_95;
        }
        uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(v53, v58, v84);
        v53 += *(void *)(v55 + 72);
        uint64_t v52 = (void *)((char *)v157 - 1);
        uint64_t v50 = v82;
        uint64_t v7 = v150;
        uint64_t v56 = v151;
      }
      while (v157 != (void *)1);
    }
    uint64_t v85 = v161 + *(int *)(v137 + 36);
    uint64_t v86 = (uint64_t)v139;
    uint64_t v87 = (uint64_t)v153;
    if ((*(unsigned char *)(v85 + 16) & 1) == 0)
    {
      uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56);
      uint64_t v89 = *(int *)(v147 + 32);
      uint64_t v151 = v136 + 48;
      uint64_t v152 = v89;
      unint64_t v149 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
      id v150 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56);
      uint64_t v157 = (void *)(v155 + 32);
      unint64_t v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 | 7);
      os_log_type_t v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 56);
      while (1)
      {
        uint64_t v90 = *(void *)(v161 + v152);
        if (*(_DWORD *)(v90 + 36) != *(_DWORD *)(v85 + 8))
        {
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        uint64_t v91 = *(void *)v85;
        uint64_t v92 = 1 << *(unsigned char *)(v90 + 32);
        if (*(void *)v85 == v92)
        {
          (*v88)(v87, 1, 1, v50);
        }
        else
        {
          if (v91 < 0 || v91 >= v92) {
            goto LABEL_77;
          }
          if (((*(void *)(v90 + 8 * ((unint64_t)v91 >> 6) + 64) >> v91) & 1) == 0) {
            goto LABEL_78;
          }
          uint64_t v148 = v54;
          uint64_t v93 = *(void *)(*(void *)(v90 + 48) + 8 * v91);
          int v94 = (void *)(v162 + *(int *)(v50 + 48));
          uint64_t v95 = (uint64_t *)(*(void *)(v90 + 56) + 32 * v91);
          uint64_t v96 = v85;
          uint64_t v98 = *v95;
          uint64_t v97 = v95[1];
          uint64_t v99 = v50;
          uint64_t v100 = v87;
          uint64_t v101 = v95[2];
          uint64_t v102 = v95[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v103 = v93;
          uint64_t v104 = v161;
          sub_10066AC8C(v103, v162);
          *int v94 = v98;
          v94[1] = v97;
          void v94[2] = v101;
          v94[3] = v102;
          sub_10001B220(v162, v100, &qword_1007FC8E0);
          uint64_t v105 = (void *)(v100 + *(int *)(v99 + 48));
          *uint64_t v105 = v98;
          v105[1] = v97;
          uint64_t v85 = v96;
          v105[2] = v101;
          v105[3] = v102;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10001457C(v162, &qword_1007FC8B8);
          uint64_t v106 = v146;
          sub_10001B220(v104, v146, (uint64_t *)&unk_1007FF080);
          uint64_t result = *(void *)v96;
          if ((*(void *)v96 & 0x8000000000000000) != 0) {
            goto LABEL_79;
          }
          uint64_t v107 = *(void *)(v106 + *(int *)(v147 + 32));
          if (result >= -(-1 << *(unsigned char *)(v107 + 32))) {
            goto LABEL_79;
          }
          if (((*(void *)(v107 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            goto LABEL_80;
          }
          if (*(_DWORD *)(v107 + 36) != *(_DWORD *)(v96 + 8)) {
            goto LABEL_81;
          }
          uint64_t v108 = _HashTable.occupiedBucket(after:)();
          uint64_t v109 = *(unsigned int *)(v107 + 36);
          *(void *)uint64_t v96 = v108;
          *(void *)(v96 + 8) = v109;
          *(unsigned char *)(v96 + 16) = 0;
          sub_10001457C(v106, (uint64_t *)&unk_1007FF080);
          uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v144;
          uint64_t v87 = (uint64_t)v153;
          uint64_t v50 = v156;
          ((void (*)(char *, void, uint64_t, uint64_t))*v144)(v153, 0, 1, v156);
          uint64_t v86 = (uint64_t)v139;
          uint64_t v51 = (uint64_t)v145;
          uint64_t v54 = v148;
        }
        int v110 = *(void (**)(uint64_t))v154;
        sub_10002C4EC(v87, v86, &qword_1007FC8C0);
        uint64_t v111 = 1;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v151)(v86, 1, v50) != 1)
        {
          uint64_t v112 = v162;
          sub_10002C4EC(v86, v162, &qword_1007FC8B8);
          v110(v112);
          sub_10001457C(v112, &qword_1007FC8B8);
          uint64_t v111 = 0;
        }
        uint64_t v113 = v159;
        (*v150)(v51, v111, 1, v159);
        if ((*v149)(v51, 1, v113) == 1) {
          goto LABEL_69;
        }
        uint64_t v114 = (uint64_t (*)(char *, char *, uint64_t))*v157;
        uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))*v157)(v158, v51, v113);
        if (v54)
        {
          uint64_t v115 = v160;
          uint64_t v87 = (uint64_t)v153;
          BOOL v116 = __OFSUB__(v54--, 1);
          if (v116) {
            goto LABEL_74;
          }
          goto LABEL_67;
        }
        unint64_t v117 = v160[3];
        if ((uint64_t)((v117 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_82;
        }
        int64_t v118 = v117 & 0xFFFFFFFFFFFFFFFELL;
        if (v118 <= 1) {
          uint64_t v119 = 1;
        }
        else {
          uint64_t v119 = v118;
        }
        sub_100010218((uint64_t *)&unk_1007FC190);
        uint64_t v120 = *(void *)(v155 + 72);
        uint64_t v121 = v140;
        uint64_t v115 = (unint64_t *)swift_allocObject();
        uint64_t result = j__malloc_size(v115);
        if (!v120) {
          goto LABEL_83;
        }
        uint64_t v122 = result - v121;
        if (result - v121 == 0x8000000000000000 && v120 == -1) {
          goto LABEL_89;
        }
        uint64_t v124 = v122 / v120;
        v115[2] = v119;
        v115[3] = 2 * (v122 / v120);
        id v125 = (char *)v115 + v121;
        char v126 = v160;
        unint64_t v127 = v160[3] >> 1;
        uint64_t v128 = v127 * v120;
        if (v160[2]) {
          break;
        }
LABEL_66:
        uint64_t v53 = &v125[v128];
        unint64_t v129 = (v124 & 0x7FFFFFFFFFFFFFFFLL) - v127;
        uint64_t result = swift_release();
        uint64_t v87 = (uint64_t)v153;
        uint64_t v113 = v159;
        BOOL v116 = __OFSUB__(v129, 1);
        uint64_t v54 = (char *)(v129 - 1);
        if (v116) {
          goto LABEL_74;
        }
LABEL_67:
        uint64_t result = v114(v53, v158, v113);
        uint64_t v50 = v156;
        v53 += *(void *)(v155 + 72);
        char v130 = *(unsigned char *)(v85 + 16);
        uint64_t v160 = v115;
        if (v130) {
          goto LABEL_68;
        }
      }
      if (v115 < v160 || v125 >= (char *)v160 + v140 + v128)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v115 == v160)
        {
LABEL_65:
          void v126[2] = 0;
          goto LABEL_66;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      char v126 = v160;
      goto LABEL_65;
    }
LABEL_68:
    __break(1u);
LABEL_69:
    sub_10001457C(v161, &qword_1007FC8D8);
    sub_10001457C(v51, (uint64_t *)&unk_1007FC470);
    uint64_t result = (uint64_t)v160;
    unint64_t v131 = v160[3];
    if (v131 < 2) {
      return result;
    }
    unint64_t v132 = v131 >> 1;
    BOOL v116 = __OFSUB__(v132, v54);
    unint64_t v133 = v132 - (void)v54;
    if (!v116)
    {
      v160[2] = v133;
      return result;
    }
    goto LABEL_92;
  }
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for RandomWordGenerator()
{
  return &type metadata for RandomWordGenerator;
}

uint64_t sub_1000B510C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_100010218(&qword_1007FCA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
  uint64_t v6 = (int *)sub_100010218(&qword_1007FCAC8);
  uint64_t v7 = a2 + v6[12];
  uint64_t v8 = a1[1];
  uint64_t v9 = sub_100010218(&qword_1007FCA38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a2 + v6[16];
  uint64_t v11 = a1[2];
  uint64_t v12 = sub_100010218(&qword_1007FCA30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a2 + v6[20];
  uint64_t v14 = a1[3];
  uint64_t v15 = sub_100010218(&qword_1007FCA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a2 + v6[24];
  uint64_t v17 = a1[4];
  uint64_t v18 = sub_100010218(&qword_1007FCA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a2 + v6[28];
  uint64_t v20 = a1[5];
  uint64_t v21 = sub_100010218(&qword_1007FCA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a2 + v6[32];
  uint64_t v23 = a1[6];
  uint64_t v24 = sub_100010218(&qword_1007FCA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = a2 + v6[36];
  uint64_t v26 = a1[7];
  uint64_t v27 = sub_100010218(&qword_1007FCA08);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  uint64_t v29 = a2 + v6[40];
  uint64_t v30 = a1[8];
  uint64_t v31 = sub_100010218(&qword_1007FCA00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  v28(a2 + v6[44], a1[9], v27);
  v28(a2 + v6[48], a1[10], v27);
  uint64_t v32 = a2 + v6[52];
  uint64_t v33 = a1[11];
  uint64_t v34 = sub_100010218(&qword_1007FC9F8);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);

  return v35(v32, v33, v34);
}

uint64_t sub_1000B5490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v18);
  uint64_t v17 = (uint64_t)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v16 = (uint64_t)&v16 - v4;
  uint64_t v5 = self;
  id v6 = [v5 standardUserDefaults];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 integerForKey:v7];

  *a1 = AppStorage.init<A>(wrappedValue:_:store:)();
  id v8 = [v5 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 integerForKey:v9];

  a1[1] = AppStorage.init<A>(wrappedValue:_:store:)();
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10083D3C0;
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 BOOLForKey:v11];

  a1[2] = AppStorage.init<A>(wrappedValue:_:store:)();
  uint64_t v12 = (void *)qword_10083D3C0;
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 BOOLForKey:v13];

  a1[3] = AppStorage.init<A>(wrappedValue:_:store:)();
  char v19 = sub_10035EE44();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000BEED0();
  a1[4] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[5] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[6] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[7] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[8] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[9] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[10] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[11] = AppStorage.init<A>(wrappedValue:_:store:)();
  a1[12] = AppStorage.init<A>(wrappedValue:_:store:)();
  type metadata accessor for AdminMenu();
  type metadata accessor for JournalWidgetBridge();
  uint64_t v14 = v16;
  sub_1002FB2F4(v16);
  sub_10001B220(v14, v17, (uint64_t *)&unk_1007FC470);
  State.init(wrappedValue:)();
  return sub_10001457C(v14, (uint64_t *)&unk_1007FC470);
}

uint64_t sub_1000B5904(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_1007FC9D0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1;
  sub_100010218(&qword_1007FC9E8);
  sub_100014488(&qword_1007FC9F0, &qword_1007FC9E8);
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  sub_100014488(&qword_1007FC9D8, &qword_1007FC9D0);
  View.listStyle<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000B5B2C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v113 = sub_100010218(&qword_1007FC9F8);
  uint64_t v121 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v112 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v111 = (char *)&v83 - v5;
  uint64_t v110 = sub_100010218(&qword_1007FCA00);
  uint64_t v128 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v97 = (uint64_t *)((char *)&v83 - v8);
  uint64_t v9 = sub_100010218(&qword_1007FCA08);
  uint64_t v85 = *(void *)(v9 - 8);
  uint64_t v86 = v9;
  __chkstk_darwin(v9);
  uint64_t v108 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v107 = (char *)&v83 - v12;
  __chkstk_darwin(v13);
  uint64_t v105 = (char *)&v83 - v14;
  __chkstk_darwin(v15);
  uint64_t v84 = (char *)&v83 - v16;
  __chkstk_darwin(v17);
  uint64_t v106 = (char *)&v83 - v18;
  __chkstk_darwin(v19);
  int v94 = (char *)&v83 - v20;
  uint64_t v118 = sub_100010218(&qword_1007FCA10);
  uint64_t v127 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v102 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  unint64_t v117 = (char *)&v83 - v23;
  uint64_t v120 = sub_100010218(&qword_1007FCA18);
  uint64_t v126 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v98 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v115 = (char *)&v83 - v26;
  uint64_t v119 = sub_100010218(&qword_1007FCA20);
  uint64_t v125 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v95 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v114 = (char *)&v83 - v29;
  uint64_t v104 = sub_100010218(&qword_1007FCA28);
  uint64_t v124 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v93 = (char *)&v83 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  BOOL v116 = (char *)&v83 - v32;
  uint64_t v103 = sub_100010218(&qword_1007FCA30);
  uint64_t v123 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v91 = (char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v90 = (char *)&v83 - v35;
  uint64_t v101 = sub_100010218(&qword_1007FCA38);
  uint64_t v122 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v89 = (char *)&v83 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v92 = (char *)&v83 - v38;
  uint64_t v39 = sub_100010218(&qword_1007FCA40);
  uint64_t v99 = *(void *)(v39 - 8);
  uint64_t v100 = v39;
  __chkstk_darwin(v39);
  uint64_t v88 = (char *)&v83 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v96 = (char *)&v83 - v42;
  sub_100010218(&qword_1007FCA48);
  sub_100014488(&qword_1007FCA50, &qword_1007FCA48);
  Section<>.init(content:)();
  long long v133 = xmmword_1006D8BF0;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  uint64_t v132 = a1;
  sub_100010218(&qword_1007FCA58);
  sub_100014488(&qword_1007FCA60, &qword_1007FCA58);
  Section<>.init(header:content:)();
  long long v133 = xmmword_1006D8C00;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  sub_100010218(&qword_1007FCA68);
  sub_100014488(&qword_1007FCA70, &qword_1007FCA68);
  Section<>.init(header:content:)();
  long long v133 = xmmword_1006D8C10;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  uint64_t v131 = a1;
  sub_100010218(&qword_1007FCA78);
  sub_100014488(&qword_1007FCA80, &qword_1007FCA78);
  Section<>.init(header:content:)();
  uint64_t v130 = a1;
  long long v133 = xmmword_1006D8C20;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  unint64_t v144 = 0xD00000000000002CLL;
  unint64_t v145 = 0x800000010068A8B0;
  char v146 = 0;
  uint64_t v147 = _swiftEmptyArrayStorage;
  sub_100010218(&qword_1007FCA88);
  sub_100014488(&qword_1007FCA90, &qword_1007FCA88);
  Section<>.init(header:footer:content:)();
  long long v133 = xmmword_1006D8C30;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  uint64_t v129 = a1;
  sub_100010218(&qword_1007FCA98);
  sub_100014488(&qword_1007FCAA0, &qword_1007FCA98);
  Section<>.init(header:content:)();
  long long v133 = xmmword_1006D8C40;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  sub_100010218(&qword_1007FCAA8);
  sub_100014488(&qword_1007FCAB0, &qword_1007FCAA8);
  Section<>.init(header:content:)();
  long long v133 = xmmword_1006D8C50;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  sub_100010218(&qword_1007FCAB8);
  sub_100014488(&qword_1007FCAC0, &qword_1007FCAB8);
  uint64_t v43 = v94;
  Section<>.init(header:content:)();
  uint64_t v44 = (void (*)(void, void))v97;
  sub_1000BBF08((uint64_t)v97);
  long long v133 = xmmword_1006D8C60;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  Section<>.init(header:content:)();
  *(void *)&long long v133 = 0xD000000000000016;
  *((void *)&v133 + 1) = 0x800000010068A8E0;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  char v45 = v84;
  Section<>.init(header:content:)();
  long long v133 = xmmword_1006D8C70;
  LOBYTE(v134) = 0;
  uint64_t v135 = (char *)_swiftEmptyArrayStorage;
  Section<>.init(header:content:)();
  char v46 = v88;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v88, v96, v100);
  *(void *)&long long v133 = v46;
  char v47 = v89;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v89, v92, v101);
  *((void *)&v133 + 1) = v47;
  uint64_t v48 = v91;
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v91, v90, v103);
  uint64_t v134 = v48;
  long long v49 = v93;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v93, v116, v104);
  uint64_t v135 = v49;
  uint64_t v50 = v95;
  (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v95, v114, v119);
  uint64_t v136 = v50;
  uint64_t v51 = v98;
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v98, v115, v120);
  uint64_t v137 = v51;
  uint64_t v52 = v102;
  (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v102, v117, v118);
  id v138 = v52;
  uint64_t v53 = v85;
  uint64_t v54 = v86;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  uint64_t v56 = v105;
  v55(v105, v43, v86);
  id v139 = v56;
  id v57 = v109;
  uint64_t v58 = v44;
  uint64_t v59 = v110;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v128 + 16))(v109, v58, v110);
  uint64_t v140 = v57;
  uint64_t v61 = v106;
  uint64_t v60 = v107;
  v55(v107, v106, v54);
  uint64_t v141 = v60;
  uint64_t v62 = v108;
  v55(v108, v45, v54);
  uint64_t v142 = v62;
  uint64_t v63 = v121;
  uint64_t v65 = v111;
  uint64_t v64 = v112;
  uint64_t v66 = v113;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v112, v111, v113);
  unint64_t v143 = v64;
  sub_1000B510C((uint64_t *)&v133, (uint64_t)v87);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v121 = v63 + 8;
  uint64_t v87 = v67;
  v67(v65, v66);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v53 + 8);
  v68(v45, v54);
  uint64_t v69 = v54;
  v68(v61, v54);
  uint64_t v70 = *(char **)(v128 + 8);
  v128 += 8;
  uint64_t v111 = v70;
  ((void (*)(uint64_t *, uint64_t))v70)(v97, v59);
  v68(v94, v54);
  uint64_t v71 = *(char **)(v127 + 8);
  v127 += 8;
  uint64_t v106 = v71;
  ((void (*)(char *, uint64_t))v71)(v117, v118);
  uint64_t v72 = *(char **)(v126 + 8);
  v126 += 8;
  unint64_t v117 = v72;
  ((void (*)(char *, uint64_t))v72)(v115, v120);
  uint64_t v73 = *(char **)(v125 + 8);
  v125 += 8;
  uint64_t v115 = v73;
  ((void (*)(char *, uint64_t))v73)(v114, v119);
  uint64_t v74 = *(char **)(v124 + 8);
  v124 += 8;
  uint64_t v114 = v74;
  uint64_t v75 = v104;
  ((void (*)(char *, uint64_t))v74)(v116, v104);
  uint64_t v76 = *(char **)(v123 + 8);
  v123 += 8;
  BOOL v116 = v76;
  uint64_t v77 = v103;
  ((void (*)(char *, uint64_t))v76)(v90, v103);
  uint64_t v78 = *(uint64_t **)(v122 + 8);
  v122 += 8;
  uint64_t v97 = v78;
  uint64_t v79 = v101;
  ((void (*)(char *, uint64_t))v78)(v92, v101);
  uint64_t v80 = v100;
  uint64_t v81 = *(void (**)(char *, uint64_t))(v99 + 8);
  v81(v96, v100);
  v87(v112, v113);
  v68(v108, v69);
  v68(v107, v69);
  ((void (*)(char *, uint64_t))v111)(v109, v110);
  v68(v105, v69);
  ((void (*)(char *, uint64_t))v106)(v102, v118);
  ((void (*)(char *, uint64_t))v117)(v98, v120);
  ((void (*)(char *, uint64_t))v115)(v95, v119);
  ((void (*)(char *, uint64_t))v114)(v93, v75);
  ((void (*)(char *, uint64_t))v116)(v91, v77);
  ((void (*)(char *, uint64_t))v97)(v89, v79);
  return ((uint64_t (*)(char *, uint64_t))v81)(v88, v80);
}

uint64_t sub_1000B6BE8@<X0>(char *a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v92 = sub_100010218(&qword_1007FCC98);
  uint64_t v100 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v85 = (char *)&v54 - v3;
  uint64_t v91 = sub_100010218(&qword_1007FCCA0);
  uint64_t v99 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v87 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v83 = (char *)&v54 - v6;
  uint64_t v90 = sub_100010218(&qword_1007FCCA8);
  uint64_t v98 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v86 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v79 = (char *)&v54 - v9;
  uint64_t v88 = sub_100010218(&qword_1007FCCB0);
  uint64_t v97 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v84 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v75 = (char *)&v54 - v12;
  uint64_t v82 = sub_100010218(&qword_1007FCCB8);
  uint64_t v96 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v81 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v80 = sub_100010218(&qword_1007FCCC0);
  uint64_t v95 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v77 = sub_100010218(&qword_1007FCCC8);
  uint64_t v94 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v74 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v54 - v23;
  uint64_t v72 = sub_100010218(&qword_1007FCCD0);
  uint64_t v93 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v73 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v54 - v27;
  uint64_t v71 = sub_100010218(&qword_1007FCCD8);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v76 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v54 - v31;
  sub_1000C07B8();
  uint64_t v68 = v32;
  NavigationLink.init(destination:label:)();
  sub_1000C080C();
  uint64_t v67 = v28;
  NavigationLink.init(destination:label:)();
  sub_1000C0860();
  uint64_t v66 = v24;
  NavigationLink.init(destination:label:)();
  sub_1000C08B4();
  uint64_t v65 = v20;
  NavigationLink.init(destination:label:)();
  sub_1000C0908();
  uint64_t v64 = v16;
  NavigationLink.init(destination:label:)();
  sub_1000C095C();
  NavigationLink.init(destination:label:)();
  sub_1000C09B0();
  NavigationLink.init(destination:label:)();
  sub_1000C0A04();
  NavigationLink.init(destination:label:)();
  sub_1000C0A58();
  NavigationLink.init(destination:label:)();
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v55(v76, v32, v71);
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  v63(v73, v28, v72);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
  v62(v74, v24, v77);
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v61(v78, v20, v80);
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  v60(v81, v16, v82);
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v59(v84, v75, v88);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  v58(v86, v79, v90);
  id v57 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
  v57(v87, v83, v91);
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v56(v89, v85, v92);
  uint64_t v33 = v69;
  v55(v69, v76, v71);
  uint64_t v34 = (int *)sub_100010218(qword_1007FCD18);
  v63(&v33[v34[12]], v73, v72);
  v62(&v33[v34[16]], v74, v77);
  v61(&v33[v34[20]], v78, v80);
  v60(&v33[v34[24]], v81, v82);
  uint64_t v35 = v88;
  v59(&v33[v34[28]], v84, v88);
  uint64_t v36 = v90;
  v58(&v33[v34[32]], v86, v90);
  uint64_t v37 = v91;
  v57(&v33[v34[36]], v87, v91);
  uint64_t v38 = v92;
  v56(&v33[v34[40]], v89, v92);
  uint64_t v39 = *(char **)(v100 + 8);
  v100 += 8;
  uint64_t v69 = v39;
  ((void (*)(char *, uint64_t))v39)(v85, v38);
  uint64_t v40 = *(char **)(v99 + 8);
  v99 += 8;
  uint64_t v85 = v40;
  ((void (*)(char *, uint64_t))v40)(v83, v37);
  uint64_t v41 = *(char **)(v98 + 8);
  v98 += 8;
  uint64_t v83 = v41;
  ((void (*)(char *, uint64_t))v41)(v79, v36);
  uint64_t v42 = *(char **)(v97 + 8);
  v97 += 8;
  uint64_t v79 = v42;
  ((void (*)(char *, uint64_t))v42)(v75, v35);
  uint64_t v43 = *(char **)(v96 + 8);
  v96 += 8;
  uint64_t v75 = v43;
  uint64_t v44 = v82;
  ((void (*)(char *, uint64_t))v43)(v64, v82);
  char v45 = *(void (**)(char *, uint64_t))(v95 + 8);
  v95 += 8;
  uint64_t v46 = v80;
  v45(v65, v80);
  char v47 = *(void (**)(char *, uint64_t))(v94 + 8);
  v94 += 8;
  uint64_t v48 = v77;
  v47(v66, v77);
  long long v49 = *(void (**)(char *, uint64_t))(v93 + 8);
  v93 += 8;
  uint64_t v50 = v72;
  v49(v67, v72);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v52 = v71;
  v51(v68, v71);
  ((void (*)(char *, uint64_t))v69)(v89, v92);
  ((void (*)(char *, uint64_t))v85)(v87, v91);
  ((void (*)(char *, uint64_t))v83)(v86, v90);
  ((void (*)(char *, uint64_t))v79)(v84, v88);
  ((void (*)(char *, uint64_t))v75)(v81, v44);
  v45(v78, v46);
  v47(v74, v48);
  v49(v73, v50);
  return ((uint64_t (*)(char *, uint64_t))v51)(v76, v52);
}

double sub_1000B79D0@<D0>(uint64_t a1@<X8>)
{
  double result = 2.17971975e243;
  *(_OWORD *)a1 = xmmword_1006D8C80;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_1000B79F0@<D0>(uint64_t a1@<X8>)
{
  double result = 2.87504674e161;
  *(_OWORD *)a1 = xmmword_1006D8C90;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_1000B7A10@<D0>(uint64_t a1@<X8>)
{
  double result = 538416.704;
  *(_OWORD *)a1 = xmmword_1006D8CA0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_1000B7A30@<D0>(uint64_t a1@<X8>)
{
  double result = 7.54781657e106;
  *(_OWORD *)a1 = xmmword_1006D8CB0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

void sub_1000B7A50(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000010;
  *(void *)(a1 + 8) = 0x800000010068AE70;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

double sub_1000B7A80@<D0>(uint64_t a1@<X8>)
{
  double result = 1.42689898e248;
  *(_OWORD *)a1 = xmmword_1006D8CC0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

void sub_1000B7AA0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x800000010068AE50;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

double sub_1000B7AD0@<D0>(uint64_t a1@<X8>)
{
  double result = 8.54519985e194;
  *(_OWORD *)a1 = xmmword_1006D8CD0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_1000B7AF0@<D0>(uint64_t a1@<X8>)
{
  double result = 4.84865695e199;
  *(_OWORD *)a1 = xmmword_1006D8CE0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1000B7B10@<X0>(void *a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v61 = sub_100010218(&qword_1007FCAB8);
  uint64_t v76 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v75 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v73 = (char *)&v57 - v3;
  __chkstk_darwin(v4);
  uint64_t v72 = (char *)&v57 - v5;
  __chkstk_darwin(v6);
  uint64_t v71 = (char *)&v57 - v7;
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)&v57 - v9;
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v57 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v57 - v13;
  __chkstk_darwin(v15);
  uint64_t v74 = (char *)&v57 - v16;
  AppStorage.wrappedValue.getter();
  dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v17 = Text.bold()();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v68 = static Text.+ infix(_:_:)();
  uint64_t v69 = v22;
  uint64_t v70 = v23;
  int v64 = v24 & 1;
  sub_10002B8D0(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  Button.init(action:label:)();
  uint64_t v60 = v14;
  Button.init(action:label:)();
  AppStorage.wrappedValue.getter();
  dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v25 = Text.bold()();
  uint64_t v27 = v26;
  char v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v58 = static Text.+ infix(_:_:)();
  uint64_t v65 = v30;
  uint64_t v59 = v31;
  char v33 = v32 & 1;
  int v63 = v32 & 1;
  sub_10002B8D0(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  uint64_t v34 = v66;
  Button.init(action:label:)();
  uint64_t v35 = v67;
  Button.init(action:label:)();
  char v36 = v64;
  char v78 = v64;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v38 = v71;
  uint64_t v39 = v61;
  v37(v71, v74, v61);
  uint64_t v40 = v72;
  v37(v72, v14, v39);
  char v77 = v33;
  uint64_t v41 = v73;
  v37(v73, v34, v39);
  uint64_t v42 = v75;
  uint64_t v43 = v39;
  v37(v75, v35, v39);
  uint64_t v44 = v62;
  uint64_t v45 = v69;
  *uint64_t v62 = v68;
  v44[1] = v45;
  *((unsigned char *)v44 + 16) = v36;
  v44[3] = v70;
  uint64_t v46 = (int *)sub_100010218(&qword_1007FCC90);
  v37((char *)v44 + v46[12], v38, v43);
  v37((char *)v44 + v46[16], v40, v43);
  char v47 = (char *)v44 + v46[20];
  uint64_t v48 = v58;
  uint64_t v49 = v65;
  *(void *)char v47 = v58;
  *((void *)v47 + 1) = v49;
  v47[16] = v63;
  *((void *)v47 + 3) = v59;
  v37((char *)v44 + v46[24], v41, v43);
  v37((char *)v44 + v46[28], v42, v43);
  uint64_t v50 = v68;
  uint64_t v51 = v69;
  sub_1000C04A4(v68, v69, v36);
  swift_bridgeObjectRetain();
  uint64_t v52 = v48;
  uint64_t v53 = v48;
  uint64_t v54 = v65;
  LOBYTE(v46) = v63;
  sub_1000C04A4(v53, v65, v63);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v50, v51, v36);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v52, v54, (char)v46);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v76 + 8);
  swift_bridgeObjectRetain();
  v55(v67, v43);
  v55(v66, v43);
  sub_10002B8D0(v52, v54, (char)v46);
  swift_bridgeObjectRelease();
  v55(v60, v43);
  v55(v74, v43);
  sub_10002B8D0(v50, v51, v64);
  swift_bridgeObjectRelease();
  v55(v75, v43);
  v55(v73, v43);
  sub_10002B8D0(v52, v54, v77);
  swift_bridgeObjectRelease();
  v55(v72, v43);
  v55(v71, v43);
  sub_10002B8D0(v50, v51, v78);
  return swift_bridgeObjectRelease();
}

void sub_1000B8264()
{
}

uint64_t sub_1000B828C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

void sub_1000B82A8()
{
}

uint64_t sub_1000B82D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

void sub_1000B82EC()
{
}

uint64_t sub_1000B8314@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

void sub_1000B8330()
{
}

uint64_t sub_1000B8358@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

uint64_t sub_1000B8374@<X0>(char *a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_100010218(&qword_1007FCAB8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v38 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v33 - v5;
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v33 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v33 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v33 - v21;
  Button.init(action:label:)();
  uint64_t v35 = v19;
  Button.init(action:label:)();
  uint64_t v34 = v16;
  Button.init(action:label:)();
  uint64_t v23 = v13;
  char v33 = v13;
  Button.init(action:label:)();
  char v24 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v25 = v10;
  char v36 = v10;
  v24(v10, v22, v1);
  uint64_t v26 = v40;
  v24(v40, v19, v1);
  uint64_t v27 = v37;
  v24(v37, v16, v1);
  char v28 = v38;
  v24(v38, v23, v1);
  char v29 = v39;
  v24(v39, v25, v1);
  uint64_t v30 = (int *)sub_100010218(&qword_1007FCC88);
  v24(&v29[v30[12]], v26, v1);
  v24(&v29[v30[16]], v27, v1);
  v24(&v29[v30[20]], v28, v1);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v2 + 8);
  v31(v33, v1);
  v31(v34, v1);
  v31(v35, v1);
  v31(v22, v1);
  v31(v28, v1);
  v31(v27, v1);
  v31(v40, v1);
  return ((uint64_t (*)(char *, uint64_t))v31)(v36, v1);
}

void sub_1000B87EC()
{
  id v0 = [self standardUserDefaults];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setObject:isa forKey:v2];
}

uint64_t sub_1000B88A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

void sub_1000B88BC()
{
  id v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setURL:0 forKey:v2];

  id v3 = [v0 standardUserDefaults];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  NSString v5 = String._bridgeToObjectiveC()();
  [v3 setObject:isa forKey:v5];
}

uint64_t sub_1000B89D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

void sub_1000B89F4()
{
  id v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setInteger:1 forKey:v2];

  id v3 = [v0 standardUserDefaults];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setBool:0 forKey:v4];
}

uint64_t sub_1000B8AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

void sub_1000B8B18()
{
  id v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setInteger:0 forKey:v2];

  id v3 = [v0 standardUserDefaults];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setBool:0 forKey:v4];
}

uint64_t sub_1000B8C20@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

uint64_t sub_1000B8C3C@<X0>(void *a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v46 = sub_100010218(&qword_1007FCAB8);
  uint64_t v50 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v49 = (char *)&v38 - v3;
  AppStorage.wrappedValue.getter();
  uint64_t v4 = Text.bold()();
  uint64_t v6 = v5;
  char v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v48 = static Text.+ infix(_:_:)();
  uint64_t v43 = v9;
  uint64_t v44 = v10;
  int v41 = v11 & 1;
  sub_10002B8D0(v4, v6, v8 & 1);
  swift_bridgeObjectRelease();
  AppStorage.wrappedValue.getter();
  uint64_t v12 = Text.bold()();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = static Text.+ infix(_:_:)();
  uint64_t v38 = v18;
  uint64_t v39 = v17;
  uint64_t v19 = v18;
  uint64_t v47 = v20;
  int v40 = v21 & 1;
  sub_10002B8D0(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  uint64_t v22 = v49;
  Button.init(action:label:)();
  char v23 = v41;
  char v51 = v41;
  char v24 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v25 = v45;
  uint64_t v26 = v22;
  uint64_t v27 = v46;
  v24(v45, v26, v46);
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  uint64_t v30 = v42;
  uint64_t v31 = v43;
  *uint64_t v42 = v48;
  v30[1] = v31;
  *((unsigned char *)v30 + 16) = v23;
  v30[3] = v44;
  v30[4] = v17;
  v30[5] = v19;
  LOBYTE(v19) = v40;
  *((unsigned char *)v30 + 48) = v40;
  v30[7] = v28;
  char v32 = (char *)v30;
  uint64_t v33 = sub_100010218(&qword_1007FCC80);
  v24(&v32[*(int *)(v33 + 64)], v25, v27);
  sub_1000C04A4(v29, v31, v23);
  swift_bridgeObjectRetain();
  uint64_t v34 = v38;
  uint64_t v35 = v39;
  sub_1000C04A4(v39, v38, v19);
  char v36 = *(void (**)(char *, uint64_t))(v50 + 8);
  swift_bridgeObjectRetain();
  v36(v49, v27);
  v36(v25, v27);
  sub_10002B8D0(v35, v34, v19);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v48, v31, v51);
  return swift_bridgeObjectRelease();
}

void sub_1000B9030()
{
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10083D3C0;
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 removeObjectForKey:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 removeObjectForKey:v2];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setInteger:-1 forKey:v3];

  id v4 = [self standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setBool:0 forKey:v5];
}

uint64_t sub_1000B91BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC414(a1);
}

uint64_t sub_1000B91D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v42 = sub_100010218(&qword_1007FCB70);
  uint64_t v47 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v36 - v5;
  __chkstk_darwin(v6);
  char v8 = (char *)&v36 - v7;
  __chkstk_darwin(v9);
  char v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for AdminMenu();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v43 = sub_100010218(&qword_1007FCB80);
  uint64_t v41 = *(void *)(v43 - 8);
  uint64_t v15 = v41;
  __chkstk_darwin(v43);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v36 - v19;
  sub_1000C20D8(a1, (uint64_t)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AdminMenu);
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1000BFEF0((uint64_t)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  uint64_t v48 = a1;
  sub_100010218(&qword_1007FCB88);
  sub_100014488(&qword_1007FCB90, &qword_1007FCB70);
  sub_1000C06E0();
  int v40 = v20;
  DisclosureGroup.init(content:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v38 = v11;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v37 = v8;
  Toggle.init(isOn:label:)();
  char v23 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v39 = v17;
  uint64_t v24 = v43;
  v23(v17, v20, v43);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v26 = v44;
  uint64_t v27 = v42;
  v25(v44, v11, v42);
  uint64_t v28 = v46;
  uint64_t v29 = v8;
  uint64_t v30 = v27;
  v25(v46, v29, v27);
  uint64_t v31 = v45;
  v23(v45, v17, v24);
  uint64_t v32 = sub_100010218(&qword_1007FCBD0);
  v25(&v31[*(int *)(v32 + 48)], v26, v30);
  v25(&v31[*(int *)(v32 + 64)], v28, v30);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v47 + 8);
  v33(v37, v30);
  v33(v38, v30);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v41 + 8);
  v34(v40, v24);
  v33(v28, v30);
  v33(v26, v30);
  return ((uint64_t (*)(char *, uint64_t))v34)(v39, v24);
}

uint64_t sub_1000B9708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_1007FCBA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000B9830(v4);
  AppStorage.wrappedValue.getter();
  char v5 = v10[15];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = (v5 & 1) == 0;
  sub_10001B220((uint64_t)v4, a1, &qword_1007FCBA8);
  char v8 = (uint64_t *)(a1 + *(int *)(sub_100010218(&qword_1007FCB88) + 36));
  *char v8 = KeyPath;
  v8[1] = (uint64_t)sub_10002BD30;
  v8[2] = v7;
  return sub_10001457C((uint64_t)v4, &qword_1007FCBA8);
}

uint64_t sub_1000B9830@<X0>(char *a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v53 = sub_100010218(&qword_1007FCBD8);
  uint64_t v55 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v50 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v52 = (char *)&v34 - v3;
  uint64_t v49 = sub_100010218(&qword_1007FCBE0);
  uint64_t v54 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v46 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v51 = (char *)&v34 - v6;
  uint64_t v41 = sub_100010218(&qword_1007FCBE8);
  uint64_t v48 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v44 = sub_100010218(&qword_1007FCBF0);
  uint64_t v47 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - v13;
  AppStorage.projectedValue.getter();
  sub_100010218(&qword_1007FCBF8);
  sub_100014488(&qword_1007FCC00, &qword_1007FCBF8);
  int v40 = v14;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  sub_100010218(&qword_1007FCC08);
  sub_100014488(&qword_1007FCC10, &qword_1007FCC08);
  uint64_t v39 = v10;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  sub_100010218(&qword_1007FCC18);
  sub_100014488(&qword_1007FCC20, &qword_1007FCC18);
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  sub_100010218(&qword_1007FCC28);
  sub_100014488(&qword_1007FCC30, &qword_1007FCC28);
  Toggle.init(isOn:label:)();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v15 = v43;
  uint64_t v16 = v14;
  uint64_t v17 = v44;
  v35(v43, v16, v44);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v18 = v45;
  uint64_t v19 = v41;
  v38(v45, v10, v41);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v20 = v46;
  v37(v46, v51, v49);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v36(v50, v52, v53);
  unint64_t v21 = v42;
  v35(v42, v15, v17);
  uint64_t v22 = (int *)sub_100010218(&qword_1007FCC38);
  uint64_t v23 = v19;
  v38(&v21[v22[12]], v18, v19);
  uint64_t v24 = v49;
  v37(&v21[v22[16]], v20, v49);
  uint64_t v25 = v50;
  uint64_t v26 = v53;
  v36(&v21[v22[20]], v50, v53);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v55 + 8);
  v55 += 8;
  v27(v52, v26);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v54 + 8);
  v54 += 8;
  uint64_t v29 = v24;
  v28(v51, v24);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v48 + 8);
  v30(v39, v23);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v32 = v44;
  v31(v40, v44);
  v27(v25, v53);
  v28(v46, v29);
  v30(v45, v23);
  return ((uint64_t (*)(char *, uint64_t))v31)(v43, v32);
}