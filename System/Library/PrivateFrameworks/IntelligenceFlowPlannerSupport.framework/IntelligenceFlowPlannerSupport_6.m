uint64_t destroy for TranscriptProtoStatementOutcomeEnum(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  uint64_t vars8;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      v4 = a1 + v3[7];
      v5 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      }
      v6 = a1 + v3[8];
      v7 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v6 + *(int *)(v7 + 28);
        v9 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      v10 = a1 + v3[9];
      v11 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
      {
        v12 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v12))
        {
          v13 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v13))
          {
            swift_bridgeObjectRelease();
            sub_253487D84(*(void *)(v10 + 16), *(void *)(v10 + 24));
            v14 = v10
                + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v15 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
          }
          v16 = v10 + *(int *)(v12 + 20);
          v17 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        }
        v18 = v10 + *(int *)(v11 + 20);
        v19 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      }
      swift_bridgeObjectRelease();
      v20 = v3[11];
      goto LABEL_55;
    case 1:
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      v22 = a1 + *(int *)(v21 + 20);
      v23 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v22, 1, v23))
      {
        v24 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v22, 1, v24))
        {
          swift_bridgeObjectRelease();
          v25 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          v26 = v22 + *(int *)(v25 + 24);
          v27 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v27))
          {
            v28 = v26 + *(int *)(v27 + 20);
            v29 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
          }
          v30 = v22 + *(int *)(v25 + 28);
          v31 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
        }
        v32 = v22 + *(int *)(v23 + 20);
        v33 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      goto LABEL_28;
    case 2:
      swift_bridgeObjectRelease();
      v34 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_54;
    case 3:
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_23;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_55;
    case 5:
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_23:
      v36 = v35;
      v37 = a1 + *(int *)(v35 + 24);
      v38 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v37, 1, v38)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
      }
      v20 = *(int *)(v36 + 28);
      goto LABEL_55;
    case 6:
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      v39 = a1 + *(int *)(v21 + 20);
      v40 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      }
LABEL_28:
      v20 = *(int *)(v21 + 24);
      goto LABEL_55;
    case 7:
      v41 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v41)) {
        goto LABEL_53;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v51 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v51))
        {
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 1)
          {
            v54 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v54))
            {
              v55 = a1 + *(int *)(v54 + 20);
              v56 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
            }
            v53 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            goto LABEL_50;
          }
          if (!v52)
          {
            swift_bridgeObjectRelease();
            v53 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_50:
            v57 = a1 + *(int *)(v53 + 20);
            v58 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
          }
        }
        v43 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
        goto LABEL_52;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v43 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_53;
        }
        v43 = type metadata accessor for TranscriptProtoAppRequirement(0);
      }
LABEL_52:
      v59 = a1 + *(int *)(v43 + 20);
      v60 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
LABEL_53:
      v34 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_54:
      v20 = *(int *)(v34 + 20);
LABEL_55:
      v61 = a1 + v20;
      v62 = sub_253B07160();
      v63 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
      return v63(v61, v62);
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_55;
    case 9:
      v44 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v44))
      {
        v45 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v45))
        {
          v46 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v46))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v47 = a1 + *(int *)(v46 + 28);
            v48 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
          }
        }
        v49 = a1 + *(int *)(v44 + 20);
        v50 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
      }
      v34 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_54;
    case 10:
      swift_bridgeObjectRelease();
      v34 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_54;
    default:
      return result;
  }
}

uint64_t initializeWithCopy for TranscriptProtoStatementOutcomeEnum(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v11 = *(int *)(v10 + 20);
      v12 = (void *)(a1 + v11);
      v13 = (void *)(a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE0480);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v64 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v64))
        {
          uint64_t v65 = sub_253462A5C(&qword_269CE0478);
          memcpy(v12, v13, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          uint64_t v186 = v64;
          uint64_t v94 = v13[1];
          void *v12 = *v13;
          v12[1] = v94;
          *((unsigned char *)v12 + 16) = *((unsigned char *)v13 + 16);
          uint64_t v189 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v95 = *(int *)(v189 + 24);
          __dst = (char *)v12 + v95;
          v96 = (char *)v13 + v95;
          uint64_t v97 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v96, 1, v97))
          {
            uint64_t v98 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dst, v96, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            unsigned char *__dst = *v96;
            uint64_t v119 = *(int *)(v97 + 20);
            v181 = &__dst[v119];
            v120 = &v96[v119];
            uint64_t v121 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v121 - 8) + 16))(v181, v120, v121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v97);
          }
          uint64_t v122 = *(int *)(v189 + 28);
          v123 = (char *)v12 + v122;
          v124 = (char *)v13 + v122;
          uint64_t v125 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v186);
        }
        uint64_t v126 = *(int *)(v14 + 20);
        v127 = (char *)v12 + v126;
        v128 = (char *)v13 + v126;
        uint64_t v129 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      goto LABEL_29;
    case 2u:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_253B07160();
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      goto LABEL_76;
    case 3u:
      uint64_t v22 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v22;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v23 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v24 = *(int *)(v23 + 24);
      v25 = (void *)(a1 + v24);
      v26 = (const void *)(a2 + v24);
      uint64_t v27 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27)) {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 4u:
      uint64_t v29 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v29;
      uint64_t v30 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v30;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      uint64_t v34 = sub_253B07160();
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
      goto LABEL_76;
    case 5u:
      uint64_t v36 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v36;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v23 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v37 = *(int *)(v23 + 24);
      v25 = (void *)(a1 + v37);
      v26 = (const void *)(a2 + v37);
      uint64_t v27 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
      {
LABEL_8:
        uint64_t v28 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
LABEL_25:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
      }
      uint64_t v66 = *(int *)(v23 + 28);
      uint64_t v67 = a1 + v66;
      uint64_t v68 = a2 + v66;
      uint64_t v69 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      goto LABEL_76;
    case 6u:
      uint64_t v38 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v38;
      uint64_t v10 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v39 = *(int *)(v10 + 20);
      v40 = (void *)(a1 + v39);
      v41 = (const void *)(a2 + v39);
      uint64_t v42 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
      {
        uint64_t v43 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
      }
LABEL_29:
      uint64_t v70 = *(int *)(v10 + 24);
      uint64_t v71 = a1 + v70;
      uint64_t v72 = a2 + v70;
      uint64_t v73 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      goto LABEL_76;
    case 7u:
      uint64_t v44 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v44))
      {
        uint64_t v45 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_75;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v101 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v101))
        {
          uint64_t v102 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v102 - 8) + 64));
LABEL_72:
          uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v172 = a1 + v171;
          uint64_t v173 = a2 + v171;
          uint64_t v174 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
          goto LABEL_73;
        }
        int v155 = swift_getEnumCaseMultiPayload();
        if (v155 == 1)
        {
          uint64_t v161 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v161))
          {
            uint64_t v162 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v163 = *(int *)(v161 + 20);
            uint64_t v164 = a1 + v163;
            uint64_t v165 = a2 + v163;
            uint64_t v166 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v161);
          }
          uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v168 = a1 + v167;
          uint64_t v169 = a2 + v167;
          uint64_t v170 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
        }
        else
        {
          if (v155)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v101 - 8) + 64));
LABEL_71:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v101);
            goto LABEL_72;
          }
          uint64_t v156 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v156;
          uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v192 = a1 + v157;
          uint64_t v158 = a2 + v157;
          uint64_t v159 = sub_253B07160();
          v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 16);
          swift_bridgeObjectRetain();
          v160(v192, v158, v159);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_71;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v103 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v104 = a1 + v103;
        uint64_t v105 = a2 + v103;
        uint64_t v106 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v44 - 8) + 64));
          goto LABEL_74;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v76 = a1 + v75;
        uint64_t v77 = a2 + v75;
        uint64_t v78 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
      }
LABEL_73:
      swift_storeEnumTagMultiPayload();
LABEL_74:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v44);
LABEL_75:
      uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v176 = a1 + v175;
      uint64_t v177 = a2 + v175;
      uint64_t v178 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
LABEL_76:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 8u:
      uint64_t v46 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v46;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v48 = a1 + v47;
      uint64_t v49 = a2 + v47;
      uint64_t v50 = sub_253B07160();
      v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v48, v49, v50);
      goto LABEL_76;
    case 9u:
      uint64_t v52 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v52))
      {
        uint64_t v53 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        uint64_t v79 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v79))
        {
          uint64_t v80 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          uint64_t v93 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v93))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            uint64_t v107 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v107;
            uint64_t v108 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v108;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v109 = *(int *)(v93 + 28);
            uint64_t v187 = a2 + v109;
            uint64_t v190 = a1 + v109;
            uint64_t v110 = sub_253B07160();
            __dstb = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstb(v190, v187, v110);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v93);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v79);
        }
        uint64_t v111 = *(int *)(v52 + 20);
        uint64_t v112 = a1 + v111;
        uint64_t v113 = a2 + v111;
        uint64_t v114 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v52);
      }
      uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v116 = a1 + v115;
      uint64_t v117 = a2 + v115;
      uint64_t v118 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
      goto LABEL_76;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v55 = a1 + v54;
      uint64_t v56 = a2 + v54;
      uint64_t v57 = sub_253B07160();
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      goto LABEL_76;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
      v4 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v5 = v4[7];
      v6 = (void *)(a1 + v5);
      v7 = (const void *)(a2 + v5);
      uint64_t v8 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v59 = v4[8];
      v60 = (void *)(a1 + v59);
      v61 = (void *)(a2 + v59);
      uint64_t v62 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_253462A5C(&qword_269CE0450);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        uint64_t v81 = v61[1];
        void *v60 = *v61;
        v60[1] = v81;
        uint64_t v82 = v61[3];
        v60[2] = v61[2];
        v60[3] = v82;
        v188 = v4;
        uint64_t v83 = v61[5];
        v60[4] = v61[4];
        v60[5] = v83;
        uint64_t v84 = *(int *)(v62 + 28);
        __dsta = (char *)v61 + v84;
        v185 = (char *)v60 + v84;
        uint64_t v85 = sub_253B07160();
        v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v4 = v188;
        swift_bridgeObjectRetain();
        v180(v185, __dsta, v85);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
      }
      uint64_t v86 = v4[9];
      v87 = (void *)(a1 + v86);
      v88 = (void *)(a2 + v86);
      uint64_t v89 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89))
      {
        uint64_t v90 = sub_253462A5C(&qword_269CE0468);
        memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        uint64_t v91 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v91))
        {
          uint64_t v92 = sub_253462A5C(&qword_269CE0460);
          memcpy(v87, v88, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v99))
          {
            uint64_t v100 = sub_253462A5C(&qword_269CE0458);
            memcpy(v87, v88, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            uint64_t v130 = v88[1];
            void *v87 = *v88;
            v87[1] = v130;
            v191 = v4;
            uint64_t v131 = v88[2];
            unint64_t v132 = v88[3];
            swift_bridgeObjectRetain();
            sub_25348A9C8(v131, v132);
            v87[2] = v131;
            v87[3] = v132;
            v87[4] = v88[4];
            uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v134 = (char *)v87 + v133;
            v135 = (char *)v88 + v133;
            uint64_t v136 = sub_253B07160();
            v137 = v135;
            v4 = v191;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v137, v136);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v99);
          }
          uint64_t v138 = *(int *)(v91 + 20);
          v139 = (char *)v87 + v138;
          v140 = (char *)v88 + v138;
          uint64_t v141 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v91);
        }
        uint64_t v142 = *(int *)(v89 + 20);
        v143 = (char *)v87 + v142;
        v144 = (char *)v88 + v142;
        uint64_t v145 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
      }
      uint64_t v146 = v4[10];
      v147 = (void *)(a1 + v146);
      v148 = (void *)(a2 + v146);
      uint64_t v149 = v148[1];
      void *v147 = *v148;
      v147[1] = v149;
      uint64_t v150 = v4[11];
      uint64_t v151 = a1 + v150;
      uint64_t v152 = a2 + v150;
      uint64_t v153 = sub_253B07160();
      v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 16);
      swift_bridgeObjectRetain();
      v154(v151, v152, v153);
      goto LABEL_76;
  }
}

uint64_t assignWithCopy for TranscriptProtoStatementOutcomeEnum(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_2536FA73C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v11 = *(int *)(v10 + 20);
      v12 = (void *)(a1 + v11);
      v13 = (void *)(a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE0480);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v59 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v59))
        {
          uint64_t v60 = sub_253462A5C(&qword_269CE0478);
          memcpy(v12, v13, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          uint64_t v172 = v59;
          void *v12 = *v13;
          v12[1] = v13[1];
          *((unsigned char *)v12 + 16) = *((unsigned char *)v13 + 16);
          uint64_t v174 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v86 = *(int *)(v174 + 24);
          __dst = (char *)v12 + v86;
          v87 = (char *)v13 + v86;
          uint64_t v88 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88))
          {
            uint64_t v89 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dst, v87, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            unsigned char *__dst = *v87;
            uint64_t v108 = *(int *)(v88 + 20);
            uint64_t v167 = &__dst[v108];
            uint64_t v109 = &v87[v108];
            uint64_t v110 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v110 - 8) + 16))(v167, v109, v110);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v88);
          }
          uint64_t v111 = *(int *)(v174 + 28);
          uint64_t v112 = (char *)v12 + v111;
          uint64_t v113 = (char *)v13 + v111;
          uint64_t v114 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v172);
        }
        uint64_t v115 = *(int *)(v14 + 20);
        uint64_t v116 = (char *)v12 + v115;
        uint64_t v117 = (char *)v13 + v115;
        uint64_t v118 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      goto LABEL_30;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_253B07160();
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      goto LABEL_77;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v21 = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 16) = v21;
      uint64_t v22 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v23 = *(int *)(v22 + 24);
      uint64_t v24 = (void *)(a1 + v23);
      v25 = (const void *)(a2 + v23);
      uint64_t v26 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26)) {
        goto LABEL_9;
      }
      goto LABEL_26;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v28 = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 24) = v28;
      uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = a2 + v29;
      uint64_t v32 = sub_253B07160();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v30, v31, v32);
      goto LABEL_77;
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v22 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v34 = *(int *)(v22 + 24);
      uint64_t v24 = (void *)(a1 + v34);
      v25 = (const void *)(a2 + v34);
      uint64_t v26 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
      {
LABEL_9:
        uint64_t v27 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
LABEL_26:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
      }
      uint64_t v61 = *(int *)(v22 + 28);
      uint64_t v62 = a1 + v61;
      uint64_t v63 = a2 + v61;
      uint64_t v64 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      goto LABEL_77;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v10 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v35 = *(int *)(v10 + 20);
      uint64_t v36 = (void *)(a1 + v35);
      uint64_t v37 = (const void *)(a2 + v35);
      uint64_t v38 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
      }
LABEL_30:
      uint64_t v65 = *(int *)(v10 + 24);
      uint64_t v66 = a1 + v65;
      uint64_t v67 = a2 + v65;
      uint64_t v68 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
      goto LABEL_77;
    case 7u:
      uint64_t v40 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v40))
      {
        uint64_t v41 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v41 - 8) + 64));
        goto LABEL_76;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v92 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v92))
        {
          uint64_t v93 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v93 - 8) + 64));
LABEL_73:
          uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v158 = a1 + v157;
          uint64_t v159 = a2 + v157;
          uint64_t v160 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
          goto LABEL_74;
        }
        int v142 = swift_getEnumCaseMultiPayload();
        if (v142 == 1)
        {
          uint64_t v147 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v147))
          {
            uint64_t v148 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v148 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v149 = *(int *)(v147 + 20);
            uint64_t v150 = a1 + v149;
            uint64_t v151 = a2 + v149;
            uint64_t v152 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v147);
          }
          uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v154 = a1 + v153;
          uint64_t v155 = a2 + v153;
          uint64_t v156 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
        }
        else
        {
          if (v142)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_72:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v92);
            goto LABEL_73;
          }
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v143 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v177 = a1 + v143;
          uint64_t v144 = a2 + v143;
          uint64_t v145 = sub_253B07160();
          uint64_t v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 16);
          swift_bridgeObjectRetain();
          v146(v177, v144, v145);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_72;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v94 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v95 = a1 + v94;
        uint64_t v96 = a2 + v94;
        uint64_t v97 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v40 - 8) + 64));
          goto LABEL_75;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v71 = a1 + v70;
        uint64_t v72 = a2 + v70;
        uint64_t v73 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      }
LABEL_74:
      swift_storeEnumTagMultiPayload();
LABEL_75:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v40);
LABEL_76:
      uint64_t v161 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v162 = a1 + v161;
      uint64_t v163 = a2 + v161;
      uint64_t v164 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
LABEL_77:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 8u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v43 = a1 + v42;
      uint64_t v44 = a2 + v42;
      uint64_t v45 = sub_253B07160();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
      goto LABEL_77;
    case 9u:
      uint64_t v47 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v47))
      {
        uint64_t v48 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v74 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v74))
        {
          uint64_t v75 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          uint64_t v85 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v85))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v98 = *(int *)(v85 + 28);
            uint64_t v173 = a2 + v98;
            uint64_t v175 = a1 + v98;
            uint64_t v99 = sub_253B07160();
            __dstb = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstb(v175, v173, v99);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v85);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v74);
        }
        uint64_t v100 = *(int *)(v47 + 20);
        uint64_t v101 = a1 + v100;
        uint64_t v102 = a2 + v100;
        uint64_t v103 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v47);
      }
      uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v105 = a1 + v104;
      uint64_t v106 = a2 + v104;
      uint64_t v107 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
      goto LABEL_77;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      uint64_t v52 = sub_253B07160();
      uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
      swift_bridgeObjectRetain();
      v53(v50, v51, v52);
      goto LABEL_77;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
      v4 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v5 = v4[7];
      v6 = (void *)(a1 + v5);
      v7 = (const void *)(a2 + v5);
      uint64_t v8 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v54 = v4[8];
      uint64_t v55 = (void *)(a1 + v54);
      uint64_t v56 = (void *)(a2 + v54);
      uint64_t v57 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v57))
      {
        uint64_t v58 = sub_253462A5C(&qword_269CE0450);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        *uint64_t v55 = *v56;
        v55[1] = v56[1];
        v55[2] = v56[2];
        v55[3] = v56[3];
        v55[4] = v56[4];
        v55[5] = v56[5];
        uint64_t v76 = *(int *)(v57 + 28);
        __dsta = (char *)v56 + v76;
        uint64_t v171 = (char *)v55 + v76;
        uint64_t v77 = sub_253B07160();
        uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v166(v171, __dsta, v77);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v55, 0, 1, v57);
      }
      uint64_t v78 = v4[9];
      uint64_t v79 = (void *)(a1 + v78);
      uint64_t v80 = (void *)(a2 + v78);
      uint64_t v81 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v81))
      {
        uint64_t v82 = sub_253462A5C(&qword_269CE0468);
        memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        uint64_t v83 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v83))
        {
          uint64_t v84 = sub_253462A5C(&qword_269CE0460);
          memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v90 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v90))
          {
            uint64_t v91 = sub_253462A5C(&qword_269CE0458);
            memcpy(v79, v80, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            *uint64_t v79 = *v80;
            v79[1] = v80[1];
            uint64_t v176 = v4;
            uint64_t v119 = v80[2];
            unint64_t v120 = v80[3];
            swift_bridgeObjectRetain();
            sub_25348A9C8(v119, v120);
            v79[2] = v119;
            v79[3] = v120;
            v79[4] = v80[4];
            uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v122 = (char *)v79 + v121;
            v123 = (char *)v80 + v121;
            uint64_t v124 = sub_253B07160();
            uint64_t v125 = v123;
            v4 = v176;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v125, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v90);
          }
          uint64_t v126 = *(int *)(v83 + 20);
          v127 = (char *)v79 + v126;
          v128 = (char *)v80 + v126;
          uint64_t v129 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v83);
        }
        uint64_t v130 = *(int *)(v81 + 20);
        uint64_t v131 = (char *)v79 + v130;
        unint64_t v132 = (char *)v80 + v130;
        uint64_t v133 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v81);
      }
      uint64_t v134 = v4[10];
      v135 = (void *)(a1 + v134);
      uint64_t v136 = (void *)(a2 + v134);
      void *v135 = *v136;
      v135[1] = v136[1];
      uint64_t v137 = v4[11];
      uint64_t v138 = a1 + v137;
      uint64_t v139 = a2 + v137;
      uint64_t v140 = sub_253B07160();
      uint64_t v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 16);
      swift_bridgeObjectRetain();
      v141(v138, v139, v140);
      goto LABEL_77;
  }
}

uint64_t initializeWithTake for TranscriptProtoStatementOutcomeEnum(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v11 = *(int *)(v10 + 20);
      v12 = (unsigned char *)(a1 + v11);
      v13 = (unsigned char *)(a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE0480);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v54 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v54))
        {
          uint64_t v55 = sub_253462A5C(&qword_269CE0478);
          memcpy(v12, v13, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v12 = *(_OWORD *)v13;
          v12[16] = v13[16];
          uint64_t v84 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v85 = *(int *)(v84 + 24);
          uint64_t v162 = v84;
          __dst = &v12[v85];
          uint64_t v86 = &v13[v85];
          uint64_t v87 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87))
          {
            uint64_t v88 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dst, v86, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            unsigned char *__dst = *v86;
            uint64_t v110 = *(int *)(v87 + 20);
            uint64_t v161 = &__dst[v110];
            uint64_t v111 = &v86[v110];
            uint64_t v112 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v112 - 8) + 32))(v161, v111, v112);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v87);
          }
          uint64_t v113 = *(int *)(v162 + 28);
          uint64_t v114 = &v12[v113];
          uint64_t v115 = &v13[v113];
          uint64_t v116 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v54);
        }
        uint64_t v117 = *(int *)(v14 + 20);
        uint64_t v118 = &v12[v117];
        uint64_t v119 = &v13[v117];
        uint64_t v120 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      goto LABEL_29;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      goto LABEL_76;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v20 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v21 = *(int *)(v20 + 24);
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (const void *)(a2 + v21);
      uint64_t v24 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24)) {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v26 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v26;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v28 = a1 + v27;
      uint64_t v29 = a2 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_76;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v20 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v31 = *(int *)(v20 + 24);
      uint64_t v22 = (void *)(a1 + v31);
      uint64_t v23 = (const void *)(a2 + v31);
      uint64_t v24 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
      {
LABEL_8:
        uint64_t v25 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
LABEL_25:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
      }
      uint64_t v56 = *(int *)(v20 + 28);
      uint64_t v57 = a1 + v56;
      uint64_t v58 = a2 + v56;
      uint64_t v59 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_76;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v32 = *(int *)(v10 + 20);
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (const void *)(a2 + v32);
      uint64_t v35 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
      }
LABEL_29:
      uint64_t v60 = *(int *)(v10 + 24);
      uint64_t v61 = a1 + v60;
      uint64_t v62 = a2 + v60;
      uint64_t v63 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      goto LABEL_76;
    case 7u:
      uint64_t v37 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v37))
      {
        uint64_t v38 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_75;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v91 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v91))
        {
          uint64_t v92 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_72:
          uint64_t v152 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v153 = a1 + v152;
          uint64_t v154 = a2 + v152;
          uint64_t v155 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
          goto LABEL_73;
        }
        int v137 = swift_getEnumCaseMultiPayload();
        if (v137 == 1)
        {
          uint64_t v142 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v142))
          {
            uint64_t v143 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v144 = *(int *)(v142 + 20);
            uint64_t v145 = a1 + v144;
            uint64_t v146 = a2 + v144;
            uint64_t v147 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 32))(v145, v146, v147);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v142);
          }
          uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v149 = a1 + v148;
          uint64_t v150 = a2 + v148;
          uint64_t v151 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 32))(v149, v150, v151);
        }
        else
        {
          if (v137)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v91 - 8) + 64));
LABEL_71:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v91);
            goto LABEL_72;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v138 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v139 = a1 + v138;
          uint64_t v140 = a2 + v138;
          uint64_t v141 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_71;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v94 = a1 + v93;
        uint64_t v95 = a2 + v93;
        uint64_t v96 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v37 - 8) + 64));
          goto LABEL_74;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v66 = a1 + v65;
        uint64_t v67 = a2 + v65;
        uint64_t v68 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
      }
LABEL_73:
      swift_storeEnumTagMultiPayload();
LABEL_74:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v37);
LABEL_75:
      uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v157 = a1 + v156;
      uint64_t v158 = a2 + v156;
      uint64_t v159 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 32))(v157, v158, v159);
LABEL_76:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 8u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v40 = a1 + v39;
      uint64_t v41 = a2 + v39;
      uint64_t v42 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      goto LABEL_76;
    case 9u:
      uint64_t v43 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v43))
      {
        uint64_t v44 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        uint64_t v69 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v69))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          uint64_t v83 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v83))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            long long v97 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v97;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v98 = *(int *)(v83 + 28);
            uint64_t v99 = a1 + v98;
            uint64_t v100 = a2 + v98;
            uint64_t v101 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v83);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v69);
        }
        uint64_t v102 = *(int *)(v43 + 20);
        uint64_t v103 = a1 + v102;
        uint64_t v104 = a2 + v102;
        uint64_t v105 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v43);
      }
      uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v107 = a1 + v106;
      uint64_t v108 = a2 + v106;
      uint64_t v109 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
      goto LABEL_76;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v46 = a1 + v45;
      uint64_t v47 = a2 + v45;
      uint64_t v48 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      goto LABEL_76;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
      v4 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v5 = v4[7];
      v6 = (void *)(a1 + v5);
      v7 = (const void *)(a2 + v5);
      uint64_t v8 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v49 = v4[8];
      uint64_t v50 = (_OWORD *)(a1 + v49);
      uint64_t v51 = (_OWORD *)(a2 + v49);
      uint64_t v52 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = sub_253462A5C(&qword_269CE0450);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        long long v71 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v71;
        v50[2] = v51[2];
        uint64_t v72 = *(int *)(v52 + 28);
        uint64_t v73 = (char *)v50 + v72;
        uint64_t v74 = (char *)v51 + v72;
        uint64_t v75 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v76 = v4[9];
      uint64_t v77 = (_OWORD *)(a1 + v76);
      uint64_t v78 = (_OWORD *)(a2 + v76);
      uint64_t v79 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_253462A5C(&qword_269CE0468);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        uint64_t v81 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v81))
        {
          uint64_t v82 = sub_253462A5C(&qword_269CE0460);
          memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v89 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v89))
          {
            uint64_t v90 = sub_253462A5C(&qword_269CE0458);
            memcpy(v77, v78, *(void *)(*(void *)(v90 - 8) + 64));
          }
          else
          {
            long long v121 = v78[1];
            *uint64_t v77 = *v78;
            v77[1] = v121;
            *((void *)v77 + 4) = *((void *)v78 + 4);
            uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v123 = (char *)v77 + v122;
            __dsta = (char *)v78 + v122;
            uint64_t v124 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v123, __dsta, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v89);
          }
          uint64_t v125 = *(int *)(v81 + 20);
          uint64_t v126 = (char *)v77 + v125;
          v127 = (char *)v78 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v81);
        }
        uint64_t v129 = *(int *)(v79 + 20);
        uint64_t v130 = (char *)v77 + v129;
        uint64_t v131 = (char *)v78 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v79);
      }
      *(_OWORD *)(a1 + v4[10]) = *(_OWORD *)(a2 + v4[10]);
      uint64_t v133 = v4[11];
      uint64_t v134 = a1 + v133;
      uint64_t v135 = a2 + v133;
      uint64_t v136 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
      goto LABEL_76;
  }
}

uint64_t assignWithTake for TranscriptProtoStatementOutcomeEnum(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_2536FA73C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v11 = *(int *)(v10 + 20);
      v12 = (unsigned char *)(a1 + v11);
      v13 = (unsigned char *)(a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE0480);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v54 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v54))
        {
          uint64_t v55 = sub_253462A5C(&qword_269CE0478);
          memcpy(v12, v13, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v12 = *(_OWORD *)v13;
          v12[16] = v13[16];
          uint64_t v84 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v85 = *(int *)(v84 + 24);
          uint64_t v162 = v84;
          __dst = &v12[v85];
          uint64_t v86 = &v13[v85];
          uint64_t v87 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87))
          {
            uint64_t v88 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dst, v86, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            unsigned char *__dst = *v86;
            uint64_t v110 = *(int *)(v87 + 20);
            uint64_t v161 = &__dst[v110];
            uint64_t v111 = &v86[v110];
            uint64_t v112 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v112 - 8) + 32))(v161, v111, v112);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v87);
          }
          uint64_t v113 = *(int *)(v162 + 28);
          uint64_t v114 = &v12[v113];
          uint64_t v115 = &v13[v113];
          uint64_t v116 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v54);
        }
        uint64_t v117 = *(int *)(v14 + 20);
        uint64_t v118 = &v12[v117];
        uint64_t v119 = &v13[v117];
        uint64_t v120 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      goto LABEL_30;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      goto LABEL_77;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v20 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v21 = *(int *)(v20 + 24);
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (const void *)(a2 + v21);
      uint64_t v24 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24)) {
        goto LABEL_9;
      }
      goto LABEL_26;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v26 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v26;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v28 = a1 + v27;
      uint64_t v29 = a2 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_77;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v20 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v31 = *(int *)(v20 + 24);
      uint64_t v22 = (void *)(a1 + v31);
      uint64_t v23 = (const void *)(a2 + v31);
      uint64_t v24 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
      {
LABEL_9:
        uint64_t v25 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
LABEL_26:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
      }
      uint64_t v56 = *(int *)(v20 + 28);
      uint64_t v57 = a1 + v56;
      uint64_t v58 = a2 + v56;
      uint64_t v59 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_77;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v32 = *(int *)(v10 + 20);
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (const void *)(a2 + v32);
      uint64_t v35 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
      }
LABEL_30:
      uint64_t v60 = *(int *)(v10 + 24);
      uint64_t v61 = a1 + v60;
      uint64_t v62 = a2 + v60;
      uint64_t v63 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      goto LABEL_77;
    case 7u:
      uint64_t v37 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v37))
      {
        uint64_t v38 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_76;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v91 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v91))
        {
          uint64_t v92 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_73:
          uint64_t v152 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v153 = a1 + v152;
          uint64_t v154 = a2 + v152;
          uint64_t v155 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
          goto LABEL_74;
        }
        int v137 = swift_getEnumCaseMultiPayload();
        if (v137 == 1)
        {
          uint64_t v142 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v142))
          {
            uint64_t v143 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v144 = *(int *)(v142 + 20);
            uint64_t v145 = a1 + v144;
            uint64_t v146 = a2 + v144;
            uint64_t v147 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 32))(v145, v146, v147);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v142);
          }
          uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v149 = a1 + v148;
          uint64_t v150 = a2 + v148;
          uint64_t v151 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 32))(v149, v150, v151);
        }
        else
        {
          if (v137)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v91 - 8) + 64));
LABEL_72:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v91);
            goto LABEL_73;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v138 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v139 = a1 + v138;
          uint64_t v140 = a2 + v138;
          uint64_t v141 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_72;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v94 = a1 + v93;
        uint64_t v95 = a2 + v93;
        uint64_t v96 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v37 - 8) + 64));
          goto LABEL_75;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v66 = a1 + v65;
        uint64_t v67 = a2 + v65;
        uint64_t v68 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
      }
LABEL_74:
      swift_storeEnumTagMultiPayload();
LABEL_75:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v37);
LABEL_76:
      uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v157 = a1 + v156;
      uint64_t v158 = a2 + v156;
      uint64_t v159 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 32))(v157, v158, v159);
LABEL_77:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 8u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v40 = a1 + v39;
      uint64_t v41 = a2 + v39;
      uint64_t v42 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      goto LABEL_77;
    case 9u:
      uint64_t v43 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v43))
      {
        uint64_t v44 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        uint64_t v69 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v69))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          uint64_t v83 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v83))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            long long v97 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v97;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v98 = *(int *)(v83 + 28);
            uint64_t v99 = a1 + v98;
            uint64_t v100 = a2 + v98;
            uint64_t v101 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v83);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v69);
        }
        uint64_t v102 = *(int *)(v43 + 20);
        uint64_t v103 = a1 + v102;
        uint64_t v104 = a2 + v102;
        uint64_t v105 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v43);
      }
      uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v107 = a1 + v106;
      uint64_t v108 = a2 + v106;
      uint64_t v109 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
      goto LABEL_77;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v46 = a1 + v45;
      uint64_t v47 = a2 + v45;
      uint64_t v48 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      goto LABEL_77;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
      v4 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v5 = v4[7];
      v6 = (void *)(a1 + v5);
      v7 = (const void *)(a2 + v5);
      uint64_t v8 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v49 = v4[8];
      uint64_t v50 = (_OWORD *)(a1 + v49);
      uint64_t v51 = (_OWORD *)(a2 + v49);
      uint64_t v52 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = sub_253462A5C(&qword_269CE0450);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        long long v71 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v71;
        v50[2] = v51[2];
        uint64_t v72 = *(int *)(v52 + 28);
        uint64_t v73 = (char *)v50 + v72;
        uint64_t v74 = (char *)v51 + v72;
        uint64_t v75 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v76 = v4[9];
      uint64_t v77 = (_OWORD *)(a1 + v76);
      uint64_t v78 = (_OWORD *)(a2 + v76);
      uint64_t v79 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_253462A5C(&qword_269CE0468);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        uint64_t v81 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v81))
        {
          uint64_t v82 = sub_253462A5C(&qword_269CE0460);
          memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v89 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v89))
          {
            uint64_t v90 = sub_253462A5C(&qword_269CE0458);
            memcpy(v77, v78, *(void *)(*(void *)(v90 - 8) + 64));
          }
          else
          {
            long long v121 = v78[1];
            *uint64_t v77 = *v78;
            v77[1] = v121;
            *((void *)v77 + 4) = *((void *)v78 + 4);
            uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v123 = (char *)v77 + v122;
            __dsta = (char *)v78 + v122;
            uint64_t v124 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v123, __dsta, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v89);
          }
          uint64_t v125 = *(int *)(v81 + 20);
          uint64_t v126 = (char *)v77 + v125;
          v127 = (char *)v78 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v81);
        }
        uint64_t v129 = *(int *)(v79 + 20);
        uint64_t v130 = (char *)v77 + v129;
        uint64_t v131 = (char *)v78 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v79);
      }
      *(_OWORD *)(a1 + v4[10]) = *(_OWORD *)(a2 + v4[10]);
      uint64_t v133 = v4[11];
      uint64_t v134 = a1 + v133;
      uint64_t v135 = a2 + v133;
      uint64_t v136 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
      goto LABEL_77;
  }
}

uint64_t sub_253872418()
{
  uint64_t result = type metadata accessor for TranscriptProtoActionSuccess(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoActionConfirmation(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoParameterNeedsValue(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TranscriptProtoParameterConfirmation(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoParameterDisambiguation(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for TranscriptProtoParameterNotAllowed(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for TranscriptProtoActionRequirement(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for TranscriptProtoToolDisambiguation(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for TranscriptProtoActionFailure(319);
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for TranscriptProtoValueDisambiguation(319);
                      if (v11 <= 0x3F)
                      {
                        swift_initEnumMetadataMultiPayload();
                        return 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterNeedsValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387270C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterNeedsValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253872724);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterNotAllowed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253872750);
}

uint64_t sub_253872750()
{
  return sub_253942490();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterNotAllowed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253872770);
}

void sub_253872770()
{
}

void sub_25387277C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unsigned char *_s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedV6ReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_2534DA378((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_2534DA360((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253872868);
      case 4:
        uint64_t result = (unsigned char *)sub_2534DA368((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_2534DA370(result, a2 + 2);
        break;
    }
  }
  return result;
}

void type metadata accessor for TranscriptProtoParameterNotAllowed.Reason()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterCandidatesNotFound(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    unsigned int v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B08E50();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoParameterCandidatesNotFound(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *initializeWithCopy for TranscriptProtoParameterCandidatesNotFound(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B08E50();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *assignWithCopy for TranscriptProtoParameterCandidatesNotFound(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoParameterCandidatesNotFound(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *assignWithTake for TranscriptProtoParameterCandidatesNotFound(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B08E50();
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterCandidatesNotFound(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253873118);
}

uint64_t sub_253873118()
{
  return sub_25393618C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterCandidatesNotFound(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253873138);
}

void sub_253873138()
{
}

void sub_253873144(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParticipantID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253873180);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParticipantID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253873198);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSpanID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

void *initializeWithCopy for TranscriptProtoSpanID(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for TranscriptProtoSpanID(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *assignWithTake for TranscriptProtoSpanID(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpanID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538733F0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpanID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253873408);
}

uint64_t sub_25387340C()
{
  return sub_25393E9BC();
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoPlan(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = a1 + v8;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v11 = sub_253B07160();
    int v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoPlan(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253873914);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387392C);
}

uint64_t sub_253873930()
{
  return sub_25390696C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRecoverableError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CE1EF0);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        uint64_t v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        uint64_t v27 = (char *)a2 + v15;
        uint64_t v28 = (char *)a1 + v15;
        uint64_t v16 = sub_253B07160();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26(v28, v27, v16);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRecoverableError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v7 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    uint64_t v8 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  uint64_t v11 = sub_253B07160();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

void *initializeWithCopy for TranscriptProtoRecoverableError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1ED8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE1EF0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v25 = (char *)a2 + v13;
      uint64_t v26 = (char *)a1 + v13;
      uint64_t v14 = sub_253B07160();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v26, v25, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

void *assignWithCopy for TranscriptProtoRecoverableError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        uint64_t v39 = (char *)a2 + v15;
        uint64_t v41 = (char *)a1 + v15;
        uint64_t v16 = sub_253B07160();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v41, v39, v16);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_16:
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v14)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
        goto LABEL_16;
      }
      sub_2536FA73C();
    }
    uint64_t v24 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE1ED8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v40 = (char *)a2 + v18;
    uint64_t v42 = (char *)a1 + v18;
    uint64_t v19 = sub_253B07160();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v42, v40, v19);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_17:
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoRecoverableError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1ED8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE1EF0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v12 = (char *)a1 + v11;
      int v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoRecoverableError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        long long v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        a1[2] = a2[2];
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_16:
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v14)
      {
        uint64_t v39 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v39;
        swift_bridgeObjectRelease();
        uint64_t v40 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v40;
        swift_bridgeObjectRelease();
        uint64_t v41 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v41;
        swift_bridgeObjectRelease();
        uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        uint64_t v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        uint64_t v45 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
        goto LABEL_16;
      }
      sub_2536FA73C();
    }
    uint64_t v29 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE1ED8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    a1[2] = a2[2];
    uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_17:
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRecoverableError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253874A70);
}

uint64_t sub_253874A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1ED8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRecoverableError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253874A90);
}

uint64_t sub_253874A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1ED8);
}

void sub_253874A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRecoverableErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_253462A5C(&qword_269CE1EF0);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v21 = (char *)a1 + v12;
      int v13 = (char *)a2 + v12;
      uint64_t v14 = sub_253B07160();
      long long v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v21, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
    }
    uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRecoverableErrorEnum(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v4 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v6 = sub_253B07160();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

void *initializeWithCopy for TranscriptProtoRecoverableErrorEnum(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v18 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v18, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v4);
  }
  uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v14 = (char *)a1 + v13;
  long long v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void *assignWithCopy for TranscriptProtoRecoverableErrorEnum(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  int v5 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v4);
  int v6 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    if (!v6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v11 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v21 = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v21, v8, v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoRecoverableErrorEnum(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v4);
  }
  uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *assignWithTake for TranscriptProtoRecoverableErrorEnum(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  int v5 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v4);
  int v6 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    if (!v6)
    {
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v12 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  long long v7 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v7;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRecoverableErrorEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  return MEMORY[0x270FA0340](a1, a2, v4, sub_25387554C);
}

uint64_t sub_25387554C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1EF0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRecoverableErrorEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_2538755C0);
}

uint64_t sub_2538755C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1EF0);
}

uint64_t sub_2538755CC()
{
  return sub_253860EAC();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPlanGenerationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1EF0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v21 = (char *)a2 + v13;
      uint64_t v22 = (char *)a1 + v13;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v22, v21, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPlanGenerationError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for TranscriptProtoPlanGenerationError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v19 = (char *)a2 + v11;
    uint64_t v20 = (char *)a1 + v11;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v20, v19, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *assignWithCopy for TranscriptProtoPlanGenerationError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v12 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v22 = (char *)a2 + v9;
  uint64_t v23 = (char *)a1 + v9;
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v23, v22, v10);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoPlanGenerationError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *assignWithTake for TranscriptProtoPlanGenerationError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = a2[3];
      a1[2] = a2[2];
      a1[3] = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = a2[5];
      a1[4] = a2[4];
      a1[5] = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CE1EF0);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlanGenerationError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253876018);
}

uint64_t sub_253876018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1EF0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanGenerationError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253876038);
}

uint64_t sub_253876038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1EF0);
}

void sub_253876044(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPlanGenerationErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoPlanGenerationErrorEnum(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v3 = sub_253B07160();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for TranscriptProtoPlanGenerationErrorEnum(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

void *assignWithCopy for TranscriptProtoPlanGenerationErrorEnum(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoPlanGenerationErrorEnum(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for TranscriptProtoPlanGenerationErrorEnum(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlanGenerationErrorEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  return MEMORY[0x270FA0340](a1, a2, v4, sub_25387654C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanGenerationErrorEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_2538765B8);
}

uint64_t sub_2538765BC()
{
  return sub_253860EAC();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlanGenerationModelOutputError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538765E8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanGenerationModelOutputError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253876600);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C98);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C40);
}

uint64_t type metadata accessor for TranscriptProtoQuery(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE4980);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DataEnum))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1F10);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          uint64_t v15 = a2[1];
          *a1 = *a2;
          a1[1] = v15;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B07160();
          uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          break;
        case 2u:
          uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
          {
            uint64_t v22 = sub_253462A5C(&qword_269CE1F30);
            memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
            {
              *a1 = *a2;
              uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
              uint64_t v46 = (char *)a2 + v24;
              __dsta = (char *)a1 + v24;
              uint64_t v25 = sub_253B07160();
              uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
              swift_bridgeObjectRetain();
              v26(__dsta, v46, v25);
            }
            else
            {
              uint64_t v27 = a2[1];
              *a1 = *a2;
              a1[1] = v27;
              *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
              uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
              uint64_t v29 = *(int *)(Predicate + 24);
              __dst = (char *)a1 + v29;
              uint64_t v30 = (char *)a2 + v29;
              uint64_t v31 = sub_253B08E50();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
              {
                uint64_t v32 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v30, v31);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v31);
              }
              uint64_t v33 = *(int *)(Predicate + 28);
              uint64_t v34 = (char *)a1 + v33;
              uint64_t v35 = (char *)a2 + v33;
              uint64_t v36 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
            }
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
          }
          uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          break;
        default:
          *a1 = *a2;
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
          uint64_t v11 = (char *)a1 + v10;
          uint64_t v12 = (char *)a2 + v10;
          uint64_t v13 = sub_253B07160();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v11, v12, v13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DataEnum);
    }
    uint64_t v41 = *(int *)(a3 + 20);
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryData(uint64_t a1, uint64_t a2)
{
  uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, DataEnum))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
        goto LABEL_15;
      case 1u:
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoStringQuery(0);
        goto LABEL_15;
      case 2u:
        uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, Enum)) {
          goto LABEL_14;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        }
        else
        {
          if (EnumCaseMultiPayload) {
            goto LABEL_14;
          }
          swift_bridgeObjectRelease();
          uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
          uint64_t v9 = a1 + *(int *)(Predicate + 24);
          uint64_t v10 = sub_253B08E50();
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          }
          uint64_t v11 = *(int *)(Predicate + 28);
        }
        uint64_t v12 = a1 + v11;
        uint64_t v13 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
LABEL_14:
        uint64_t v5 = type metadata accessor for TranscriptProtoPropertyQuery(0);
LABEL_15:
        uint64_t v14 = a1 + *(int *)(v5 + 20);
        uint64_t v15 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        break;
      default:
        break;
    }
  }
  uint64_t v16 = a1 + *(int *)(a2 + 20);
  uint64_t v17 = sub_253B07160();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

void *initializeWithCopy for TranscriptProtoQueryData(void *a1, void *a2, uint64_t a3)
{
  uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DataEnum))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1F10);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        break;
      case 2u:
        uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            *a1 = *a2;
            uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            uint64_t v44 = (char *)a2 + v22;
            __dsta = (char *)a1 + v22;
            uint64_t v23 = sub_253B07160();
            uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v24(__dsta, v44, v23);
          }
          else
          {
            uint64_t v25 = a2[1];
            *a1 = *a2;
            a1[1] = v25;
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v27 = *(int *)(Predicate + 24);
            __dst = (char *)a1 + v27;
            uint64_t v28 = (char *)a2 + v27;
            uint64_t v29 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
            {
              uint64_t v30 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dst, v28, *(void *)(*(void *)(v30 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v28, v29);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v29);
            }
            uint64_t v31 = *(int *)(Predicate + 28);
            uint64_t v32 = (char *)a1 + v31;
            uint64_t v33 = (char *)a2 + v31;
            uint64_t v34 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
        }
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        break;
      default:
        *a1 = *a2;
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_253B07160();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DataEnum);
  }
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryData(void *a1, void *a2, uint64_t a3)
{
  uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, DataEnum);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DataEnum);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          break;
        case 2u:
          uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
          {
            uint64_t v26 = sub_253462A5C(&qword_269CE1F30);
            memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
            {
              *a1 = *a2;
              uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
              uint64_t v77 = (char *)a1 + v35;
              uint64_t v36 = (char *)a2 + v35;
              uint64_t v37 = sub_253B07160();
              uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
              swift_bridgeObjectRetain();
              v38(v77, v36, v37);
            }
            else
            {
              *a1 = *a2;
              a1[1] = a2[1];
              *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
              uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
              uint64_t v45 = *(int *)(Predicate + 24);
              uint64_t v46 = (char *)a1 + v45;
              uint64_t v47 = (char *)a2 + v45;
              uint64_t v48 = sub_253B08E50();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48))
              {
                uint64_t v49 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v48);
              }
              uint64_t v56 = *(int *)(Predicate + 28);
              uint64_t v57 = (char *)a1 + v56;
              uint64_t v58 = (char *)a2 + v56;
              uint64_t v59 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
            }
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
          }
          uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
          uint64_t v61 = (char *)a1 + v60;
          uint64_t v62 = (char *)a2 + v60;
          uint64_t v63 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
          break;
        default:
          *a1 = *a2;
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          uint64_t v12 = sub_253B07160();
          uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DataEnum);
      goto LABEL_39;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE1F10);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_39;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        break;
      case 2u:
        uint64_t v32 = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v32))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          int v39 = swift_getEnumCaseMultiPayload();
          if (v39 == 2 || v39 == 1)
          {
            *a1 = *a2;
            uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            uint64_t v78 = (char *)a1 + v40;
            uint64_t v41 = (char *)a2 + v40;
            uint64_t v42 = sub_253B07160();
            uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
            swift_bridgeObjectRetain();
            v43(v78, v41, v42);
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            uint64_t v50 = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v51 = *(int *)(v50 + 24);
            uint64_t v52 = (char *)a1 + v51;
            uint64_t v53 = (char *)a2 + v51;
            uint64_t v54 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v54))
            {
              uint64_t v55 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v54);
            }
            uint64_t v64 = *(int *)(v50 + 28);
            uint64_t v65 = (char *)a1 + v64;
            uint64_t v66 = (char *)a2 + v64;
            uint64_t v67 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v32);
        }
        uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v71 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
        break;
      default:
        *a1 = *a2;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_39:
  uint64_t v72 = *(int *)(a3 + 20);
  uint64_t v73 = (char *)a1 + v72;
  uint64_t v74 = (char *)a2 + v72;
  uint64_t v75 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoQueryData(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DataEnum))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1F10);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        break;
      case 2u:
        uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
        {
          uint64_t v17 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[16] = a2[16];
            uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v21 = *(int *)(Predicate + 24);
            uint64_t v22 = &a1[v21];
            uint64_t v23 = &a2[v21];
            uint64_t v24 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
            {
              uint64_t v25 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
            }
            else
            {
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
            }
            uint64_t v19 = *(int *)(Predicate + 28);
          }
          uint64_t v26 = &a1[v19];
          uint64_t v27 = &a2[v19];
          uint64_t v28 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
        }
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        uint64_t v32 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DataEnum);
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoQueryData(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, DataEnum);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DataEnum);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
          uint64_t v19 = &a1[v18];
          uint64_t v20 = &a2[v18];
          uint64_t v21 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          break;
        case 2u:
          uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
          {
            uint64_t v23 = sub_253462A5C(&qword_269CE1F30);
            memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
            {
              *(void *)a1 = *(void *)a2;
              uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
              a1[16] = a2[16];
              uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
              uint64_t v35 = *(int *)(Predicate + 24);
              uint64_t v36 = &a1[v35];
              uint64_t v37 = &a2[v35];
              uint64_t v38 = sub_253B08E50();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
              {
                uint64_t v39 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
              }
              uint64_t v31 = *(int *)(Predicate + 28);
            }
            uint64_t v46 = &a1[v31];
            uint64_t v47 = &a2[v31];
            uint64_t v48 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
          }
          uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
          uint64_t v50 = &a1[v49];
          uint64_t v51 = &a2[v49];
          uint64_t v52 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          break;
        default:
          *(void *)a1 = *(void *)a2;
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
          uint64_t v10 = &a1[v9];
          uint64_t v11 = &a2[v9];
          uint64_t v12 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DataEnum);
      goto LABEL_37;
    }
LABEL_7:
    uint64_t v13 = sub_253462A5C(&qword_269CE1F10);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_37;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        break;
      case 2u:
        uint64_t v28 = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          int v32 = swift_getEnumCaseMultiPayload();
          if (v32 == 2 || v32 == 1)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[16] = a2[16];
            uint64_t v40 = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v41 = *(int *)(v40 + 24);
            uint64_t v42 = &a1[v41];
            uint64_t v43 = &a2[v41];
            uint64_t v44 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44))
            {
              uint64_t v45 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v42, 0, 1, v44);
            }
            uint64_t v33 = *(int *)(v40 + 28);
          }
          uint64_t v53 = &a1[v33];
          uint64_t v54 = &a2[v33];
          uint64_t v55 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v28);
        }
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v57 = &a1[v56];
        uint64_t v58 = &a2[v56];
        uint64_t v59 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_37:
  uint64_t v60 = *(int *)(a3 + 20);
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253878AC8);
}

uint64_t sub_253878AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1F10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253878AE8);
}

uint64_t sub_253878AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1F10);
}

void sub_253878AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDataEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_253B07160();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        break;
      case 2u:
        uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
        {
          uint64_t v19 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            *a1 = *a2;
            uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            uint64_t v41 = (char *)a1 + v21;
            uint64_t v22 = (char *)a2 + v21;
            uint64_t v23 = sub_253B07160();
            uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v24(v41, v22, v23);
          }
          else
          {
            uint64_t v25 = a2[1];
            *a1 = *a2;
            a1[1] = v25;
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v27 = *(int *)(Predicate + 24);
            uint64_t v28 = (char *)a1 + v27;
            uint64_t v29 = (char *)a2 + v27;
            uint64_t v30 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
            {
              uint64_t v31 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
            }
            uint64_t v32 = *(int *)(Predicate + 28);
            uint64_t v33 = (char *)a1 + v32;
            uint64_t v34 = (char *)a2 + v32;
            uint64_t v35 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
        }
        uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        break;
      default:
        *a1 = *a2;
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        int v7 = (char *)a1 + v6;
        int v8 = (char *)a2 + v6;
        uint64_t v9 = sub_253B07160();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryDataEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
      goto LABEL_14;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoStringQuery(0);
      goto LABEL_14;
    case 2:
      uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, Enum)) {
        goto LABEL_13;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        uint64_t v7 = a1 + *(int *)(Predicate + 24);
        uint64_t v8 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        }
        uint64_t v9 = *(int *)(Predicate + 28);
      }
      uint64_t v10 = a1 + v9;
      uint64_t v11 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
LABEL_13:
      uint64_t v3 = type metadata accessor for TranscriptProtoPropertyQuery(0);
LABEL_14:
      uint64_t v12 = a1 + *(int *)(v3 + 20);
      uint64_t v13 = sub_253B07160();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      return v14(v12, v13);
    default:
      return result;
  }
}

void *initializeWithCopy for TranscriptProtoQueryDataEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B07160();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      break;
    case 2u:
      uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
      {
        uint64_t v16 = sub_253462A5C(&qword_269CE1F30);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          *a1 = *a2;
          uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          uint64_t v38 = (char *)a1 + v18;
          uint64_t v19 = (char *)a2 + v18;
          uint64_t v20 = sub_253B07160();
          uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v38, v19, v20);
        }
        else
        {
          uint64_t v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
          uint64_t v24 = *(int *)(Predicate + 24);
          uint64_t v25 = (char *)a1 + v24;
          uint64_t v26 = (char *)a2 + v24;
          uint64_t v27 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
          {
            uint64_t v28 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
          }
          uint64_t v29 = *(int *)(Predicate + 28);
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
      }
      uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      break;
    default:
      *a1 = *a2;
      uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
      int v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_253B07160();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      swift_bridgeObjectRetain();
      v8(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryDataEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
      case 2u:
        uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
        {
          uint64_t v15 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            *a1 = *a2;
            uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            uint64_t v36 = (char *)a1 + v17;
            uint64_t v18 = (char *)a2 + v17;
            uint64_t v19 = sub_253B07160();
            uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v20(v36, v18, v19);
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
            uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v22 = *(int *)(Predicate + 24);
            uint64_t v23 = (char *)a1 + v22;
            uint64_t v24 = (char *)a2 + v22;
            uint64_t v25 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
            {
              uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
            }
            uint64_t v27 = *(int *)(Predicate + 28);
            uint64_t v28 = (char *)a1 + v27;
            uint64_t v29 = (char *)a2 + v27;
            uint64_t v30 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
        }
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        break;
      default:
        *a1 = *a2;
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        int v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_253B07160();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoQueryDataEnum(unsigned char *a1, unsigned char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      break;
    case 2u:
      uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE1F30);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[16] = a2[16];
          uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
          uint64_t v17 = *(int *)(Predicate + 24);
          uint64_t v18 = &a1[v17];
          uint64_t v19 = &a2[v17];
          uint64_t v20 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
          {
            uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
          }
          uint64_t v15 = *(int *)(Predicate + 28);
        }
        uint64_t v22 = &a1[v15];
        uint64_t v23 = &a2[v15];
        uint64_t v24 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
      }
      uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      break;
    default:
      *(void *)a1 = *(void *)a2;
      uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
      int v5 = &a1[v4];
      uint64_t v6 = &a2[v4];
      uint64_t v7 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoQueryDataEnum(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        break;
      case 2u:
        uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
        {
          uint64_t v13 = sub_253462A5C(&qword_269CE1F30);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[16] = a2[16];
            uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v17 = *(int *)(Predicate + 24);
            uint64_t v18 = &a1[v17];
            uint64_t v19 = &a2[v17];
            uint64_t v20 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
            {
              uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
            }
            else
            {
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
            }
            uint64_t v15 = *(int *)(Predicate + 28);
          }
          uint64_t v22 = &a1[v15];
          uint64_t v23 = &a2[v15];
          uint64_t v24 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
        }
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        uint64_t v28 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        int v5 = &a1[v4];
        uint64_t v6 = &a2[v4];
        uint64_t v7 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25387A28C()
{
  uint64_t result = type metadata accessor for TranscriptProtoIdentifierQuery(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoStringQuery(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoPropertyQuery(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStringQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387A3A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStringQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387A3B8);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPropertyQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1F30);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        uint64_t v31 = (char *)a1 + v11;
        uint64_t v12 = (char *)a2 + v11;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v31, v12, v13);
      }
      else
      {
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        uint64_t v17 = *(int *)(Predicate + 24);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        uint64_t v22 = *(int *)(Predicate + 28);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
    }
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPropertyQuery(uint64_t a1, uint64_t a2)
{
  uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, Enum))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v7 = a1 + *(int *)(Predicate + 24);
      uint64_t v8 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
      uint64_t v9 = *(int *)(Predicate + 28);
    }
    uint64_t v10 = a1 + v9;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
LABEL_10:
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

void *initializeWithCopy for TranscriptProtoPropertyQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1F30);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      uint64_t v29 = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_253B07160();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v29, v10, v11);
    }
    else
    {
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v15 = *(int *)(Predicate + 24);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
      }
      uint64_t v20 = *(int *)(Predicate + 28);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
  }
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPropertyQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, Enum);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, Enum);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        uint64_t v46 = a1 + v10;
        uint64_t v11 = a2 + v10;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v46, v11, v12);
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        uint64_t v22 = *(int *)(Predicate + 24);
        uint64_t v23 = (void *)(a1 + v22);
        uint64_t v24 = (const void *)(a2 + v22);
        uint64_t v25 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v33 = *(int *)(Predicate + 28);
        uint64_t v34 = a1 + v33;
        uint64_t v35 = a2 + v33;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, Enum);
      goto LABEL_24;
    }
LABEL_8:
    uint64_t v14 = sub_253462A5C(&qword_269CE1F30);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_24;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    int v15 = swift_getEnumCaseMultiPayload();
    if (v15 == 2 || v15 == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_253B07160();
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v27 = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v28 = *(int *)(v27 + 24);
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (const void *)(a2 + v28);
      uint64_t v31 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v37 = *(int *)(v27 + 28);
      uint64_t v38 = a1 + v37;
      uint64_t v39 = a2 + v37;
      uint64_t v40 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  uint64_t v41 = *(int *)(a3 + 20);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoPropertyQuery(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1F30);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v11 = *(int *)(Predicate + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v9 = *(int *)(Predicate + 28);
    }
    uint64_t v16 = &a1[v9];
    uint64_t v17 = &a2[v9];
    uint64_t v18 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoPropertyQuery(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, Enum);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, Enum);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        uint64_t v18 = *(int *)(Predicate + 24);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
        }
        uint64_t v10 = *(int *)(Predicate + 28);
      }
      uint64_t v29 = &a1[v10];
      uint64_t v30 = &a2[v10];
      uint64_t v31 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, Enum);
      goto LABEL_24;
    }
LABEL_8:
    uint64_t v11 = sub_253462A5C(&qword_269CE1F30);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_24;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2 || v12 == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      uint64_t v23 = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v24 = *(int *)(v23 + 24);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
      }
      uint64_t v32 = *(int *)(v23 + 28);
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v35 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPropertyQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387B730);
}

uint64_t sub_25387B730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1F30);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPropertyQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387B750);
}

uint64_t sub_25387B750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1F30);
}

void sub_25387B75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (uint64_t)a2 + v7;
      uint64_t v10 = sub_253B07160();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
    }
    else
    {
      uint64_t v13 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v13;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v15 = *(int *)(Predicate + 24);
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
      }
      uint64_t v20 = *(int *)(Predicate + 28);
      uint64_t v21 = a1 + v20;
      uint64_t v22 = (uint64_t)a2 + v20;
      uint64_t v23 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPropertyQueryEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
    uint64_t v4 = a1 + *(int *)(Predicate + 24);
    uint64_t v5 = sub_253B08E50();
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    uint64_t v6 = *(int *)(Predicate + 28);
  }
  uint64_t v7 = a1 + v6;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t initializeWithCopy for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    uint64_t v8 = sub_253B07160();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  else
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
    uint64_t v12 = *(int *)(Predicate + 24);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    uint64_t v15 = sub_253B08E50();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v17 = *(int *)(Predicate + 28);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = a2 + v17;
    uint64_t v20 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_253B07160();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v11 = *(int *)(Predicate + 24);
      uint64_t v12 = (void *)(a1 + v11);
      uint64_t v13 = (const void *)(a2 + v11);
      uint64_t v14 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v16 = *(int *)(Predicate + 28);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
    uint64_t v7 = *(int *)(Predicate + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v5 = *(int *)(Predicate + 28);
  }
  uint64_t v12 = a1 + v5;
  uint64_t v13 = a2 + v5;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      uint64_t v7 = *(int *)(Predicate + 24);
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v5 = *(int *)(Predicate + 28);
    }
    uint64_t v12 = a1 + v5;
    uint64_t v13 = a2 + v5;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25387C2B4()
{
  uint64_t result = type metadata accessor for TranscriptProtoQueryPredicate(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoQueryPredicateList(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryPredicateList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387C38C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryPredicateList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387C3A4);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIdentifierQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387C3BC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIdentifierQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387C3D4);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwCP_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2535782A8();
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*(void *)v1);
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 8);
    *(void *)uint64_t v3 = *(void *)v1;
    *(void *)(v3 + 8) = v5;
    *(unsigned char *)(v3 + 16) = *(unsigned char *)(v1 + 16);
    sub_2539450A0();
    sub_253946028();
    if (sub_2539445C8())
    {
      uint64_t v6 = sub_253462A5C(&qword_269CDCBC8);
      uint64_t v7 = sub_25346CB4C(v6);
      sub_253944A48(v7, v9, *(void *)(v8 + 64));
    }
    else
    {
      sub_25347B88C();
      sub_2534B3428();
      v10();
      sub_2539443D0();
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v11 = sub_25354710C();
    v12(v11);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport36TranscriptProtoParameterConfirmationVwxx_0()
{
  sub_253945B3C();
  uint64_t v1 = sub_253945EB4();
  if (!sub_2539443F0(v0))
  {
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  }
  sub_253944D10();
  sub_25346CAF4();
  uint64_t v3 = sub_2539446BC();
  return v4(v3);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwcp_0()
{
  sub_2535B3C98();
  uint64_t v2 = sub_253945C08(v0, v1);
  *((unsigned char *)v2 + 16) = *(unsigned char *)(v3 + 16);
  sub_25394503C();
  sub_253946028();
  if (sub_2539445C8())
  {
    uint64_t v4 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v5 = sub_25346CB4C(v4);
    sub_253944A48(v5, v7, *(void *)(v6 + 64));
  }
  else
  {
    sub_25347B88C();
    sub_2534B3428();
    v8();
    sub_2539443D0();
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v9();
  sub_25346CD04();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwca_0()
{
  sub_2535B3C98();
  uint64_t v3 = v2;
  sub_253944DE8(v4, v2);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 16) = *((unsigned char *)v3 + 16);
  uint64_t v5 = sub_2539450A0();
  int v6 = sub_2539442E4(v5);
  if (!v1)
  {
    sub_2535782A8();
    if (!v8)
    {
      uint64_t v16 = sub_2539458B8();
      v17(v16);
      goto LABEL_7;
    }
    uint64_t v9 = sub_253944FA4();
    v10(v9);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v12 = sub_25346CB4C(v11);
    sub_253944A48(v12, v14, *(void *)(v13 + 64));
    goto LABEL_7;
  }
  sub_25347B88C();
  sub_2534B3428();
  v7();
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v15();
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwtk_0(__n128 *a1, __n128 *a2)
{
  sub_253945880(a1, a2);
  sub_25394503C();
  if (sub_2539445C8())
  {
    uint64_t v3 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v4 = sub_25346CB4C(v3);
    sub_253944A48(v4, v6, *(void *)(v5 + 64));
  }
  else
  {
    sub_25347B88C();
    sub_2534D8E14();
    v7();
    sub_2539443D0();
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v8();
  return v2;
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwta_0()
{
  sub_2535B3C98();
  sub_2539457C8(v3, v4);
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v1 + 16);
  uint64_t v5 = sub_2539450A0();
  int v6 = sub_2539442E4(v5);
  if (!v2)
  {
    sub_2535782A8();
    if (!v8)
    {
      uint64_t v16 = sub_25394589C();
      v17(v16);
      goto LABEL_7;
    }
    uint64_t v9 = sub_253944FA4();
    v10(v9);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v12 = sub_25346CB4C(v11);
    sub_253944A48(v12, v14, *(void *)(v13 + 64));
    goto LABEL_7;
  }
  sub_25347B88C();
  sub_2534D8E14();
  v7();
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v15();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387C930);
}

uint64_t sub_25387C930()
{
  return sub_253942490();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryPredicate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387C950);
}

void sub_25387C950()
{
}

void sub_25387C95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryResults(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387C9A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryResults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387C9B8);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryStep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25387C9E8);
}

uint64_t sub_25387C9E8()
{
  return sub_253903F38();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25387CA08);
}

void sub_25387CA08()
{
}

void sub_25387CA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterQuery(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v6 = a2;
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for TranscriptProtoActionParameterContext(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, (uint64_t)v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE1FA8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v102 = v6;
      uint64_t v13 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v13;
      uint64_t v14 = v10[3];
      v9[2] = v10[2];
      v9[3] = v14;
      uint64_t v15 = v11[6];
      uint64_t v16 = (void *)((char *)v9 + v15);
      uint64_t v17 = (void *)((char *)v10 + v15);
      uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_253462A5C(&qword_26B249528);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
        uint64_t v20 = v17[2];
        v16[1] = v17[1];
        v16[2] = v20;
        uint64_t v21 = *(int *)(v18 + 24);
        uint64_t v94 = (char *)v17 + v21;
        uint64_t v100 = (char *)v16 + v21;
        uint64_t v22 = sub_253B07160();
        __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        __dsta(v100, v94, v22);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
      }
      uint64_t v23 = v11[7];
      uint64_t v24 = (void *)((char *)v9 + v23);
      uint64_t v25 = (void *)((char *)v10 + v23);
      uint64_t v26 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = sub_253462A5C(&qword_269CE0448);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        uint64_t v28 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v28;
        uint64_t v29 = v25[3];
        v24[2] = v25[2];
        v24[3] = v29;
        uint64_t v30 = *(int *)(v26 + 24);
        uint64_t v95 = (char *)v25 + v30;
        uint64_t v101 = (char *)v24 + v30;
        uint64_t v31 = sub_253B07160();
        __dstb = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dstb(v101, v95, v31);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
      }
      int v6 = v102;
      uint64_t v32 = v11[8];
      uint64_t v33 = (char *)v9 + v32;
      uint64_t v34 = (char *)v10 + v32;
      uint64_t v35 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
    }
    uint64_t v36 = a3[6];
    uint64_t v37 = (void *)((char *)v7 + v36);
    uint64_t v38 = (void *)((char *)v6 + v36);
    uint64_t Data = type metadata accessor for TranscriptProtoQueryData(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, Data))
    {
      uint64_t v40 = sub_253462A5C(&qword_269CE1F98);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, DataEnum))
      {
        uint64_t v42 = sub_253462A5C(&qword_269CE1F10);
        memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 3u:
            uint64_t v43 = v38[1];
            *uint64_t v37 = *v38;
            v37[1] = v43;
            uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
            __dstc = (char *)v38 + v44;
            uint64_t v96 = (char *)v37 + v44;
            uint64_t v45 = sub_253B07160();
            uint64_t v103 = v6;
            uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
            swift_bridgeObjectRetain();
            v46(v96, __dstc, v45);
            int v6 = v103;
            break;
          case 2u:
            uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, Enum))
            {
              uint64_t v52 = v6;
              uint64_t v53 = sub_253462A5C(&qword_269CE1F30);
              memcpy(v37, v38, *(void *)(*(void *)(v53 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
              {
                uint64_t v52 = v6;
                *uint64_t v37 = *v38;
                uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
                __dste = (char *)v38 + v55;
                uint64_t v98 = (char *)v37 + v55;
                uint64_t v56 = sub_253B07160();
                uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
                swift_bridgeObjectRetain();
                v86(v98, __dste, v56);
              }
              else
              {
                uint64_t v57 = v38[1];
                *uint64_t v37 = *v38;
                v37[1] = v57;
                *((unsigned char *)v37 + 16) = *((unsigned char *)v38 + 16);
                uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
                uint64_t v59 = *(int *)(Predicate + 24);
                __dst = (char *)v37 + v59;
                uint64_t v99 = Predicate;
                uint64_t v87 = (char *)v38 + v59;
                uint64_t v60 = sub_253B08E50();
                swift_bridgeObjectRetain();
                uint64_t v85 = v60;
                int v61 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v60);
                uint64_t v52 = v6;
                if (v61)
                {
                  uint64_t v62 = sub_253462A5C(&qword_269CDCBC8);
                  memcpy(__dst, v87, *(void *)(*(void *)(v62 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(__dst, v87, v85);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v85);
                }
                uint64_t v63 = *(int *)(v99 + 28);
                uint64_t v64 = (char *)v37 + v63;
                uint64_t v65 = (char *)v38 + v63;
                uint64_t v66 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
              }
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, Enum);
            }
            uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
            uint64_t v68 = (char *)v37 + v67;
            uint64_t v69 = (char *)v38 + v67;
            uint64_t v70 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
            int v6 = v52;
            break;
          default:
            *uint64_t v37 = *v38;
            uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
            __dstd = (char *)v38 + v47;
            long long v97 = (char *)v37 + v47;
            uint64_t v104 = v6;
            uint64_t v48 = sub_253B07160();
            uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v50 = v48;
            int v6 = v104;
            v49(v97, __dstd, v50);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, DataEnum);
      }
      uint64_t v71 = *(int *)(Data + 20);
      uint64_t v72 = (char *)v37 + v71;
      uint64_t v73 = (char *)v38 + v71;
      uint64_t v74 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, Data);
    }
    uint64_t v75 = a3[7];
    uint64_t v76 = a3[8];
    uint64_t v77 = (void *)((char *)v7 + v75);
    uint64_t v78 = (void *)((char *)v6 + v75);
    uint64_t v79 = v78[1];
    *uint64_t v77 = *v78;
    v77[1] = v79;
    uint64_t v80 = (char *)v7 + v76;
    uint64_t v81 = (char *)v6 + v76;
    uint64_t v82 = sub_253B07160();
    uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
    swift_bridgeObjectRetain();
    v83(v80, v81, v82);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoParameterQuery(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = (int *)type metadata accessor for TranscriptProtoActionParameterContext(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, (uint64_t)v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + v5[6];
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 24);
      uint64_t v9 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    uint64_t v10 = v4 + v5[7];
    uint64_t v11 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + *(int *)(v11 + 24);
      uint64_t v13 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v4 + v5[8];
    uint64_t v15 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = a1 + a2[6];
  uint64_t Data = type metadata accessor for TranscriptProtoQueryData(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, Data))
  {
    uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, DataEnum))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v19 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
          goto LABEL_22;
        case 1u:
        case 3u:
          swift_bridgeObjectRelease();
          uint64_t v19 = type metadata accessor for TranscriptProtoStringQuery(0);
          goto LABEL_22;
        case 2u:
          uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, Enum)) {
            goto LABEL_21;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_21;
            }
            swift_bridgeObjectRelease();
            uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v23 = v16 + *(int *)(Predicate + 24);
            uint64_t v24 = sub_253B08E50();
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v24)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
            }
            uint64_t v25 = *(int *)(Predicate + 28);
          }
          uint64_t v26 = v16 + v25;
          uint64_t v27 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
LABEL_21:
          uint64_t v19 = type metadata accessor for TranscriptProtoPropertyQuery(0);
LABEL_22:
          uint64_t v28 = v16 + *(int *)(v19 + 20);
          uint64_t v29 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
          break;
        default:
          break;
      }
    }
    uint64_t v30 = v16 + *(int *)(Data + 20);
    uint64_t v31 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = a1 + a2[8];
  uint64_t v33 = sub_253B07160();
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
  return v34(v32, v33);
}

void *initializeWithCopy for TranscriptProtoParameterQuery(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TranscriptProtoActionParameterContext(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1FA8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v100 = v3;
    uint64_t v11 = v8[1];
    void *v7 = *v8;
    v7[1] = v11;
    uint64_t v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    uint64_t v13 = v9[6];
    uint64_t v14 = (void *)((char *)v7 + v13);
    uint64_t v15 = (void *)((char *)v8 + v13);
    uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_253462A5C(&qword_26B249528);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
      uint64_t v18 = v15[2];
      v14[1] = v15[1];
      v14[2] = v18;
      uint64_t v19 = *(int *)(v16 + 24);
      uint64_t v94 = (char *)v15 + v19;
      uint64_t v96 = (char *)v14 + v19;
      uint64_t v20 = sub_253B07160();
      __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      __dsta(v96, v94, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v21 = v9[7];
    uint64_t v22 = (void *)((char *)v7 + v21);
    uint64_t v23 = (void *)((char *)v8 + v21);
    uint64_t v24 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_253462A5C(&qword_269CE0448);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v26;
      uint64_t v27 = v23[3];
      v22[2] = v23[2];
      v22[3] = v27;
      uint64_t v28 = *(int *)(v24 + 24);
      __dstb = (char *)v23 + v28;
      uint64_t v95 = (char *)v22 + v28;
      uint64_t v29 = sub_253B07160();
      uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v85(v95, __dstb, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
    }
    int v3 = v100;
    uint64_t v30 = v9[8];
    uint64_t v31 = (char *)v7 + v30;
    uint64_t v32 = (char *)v8 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  uint64_t v34 = v3[6];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)v4 + v34);
  uint64_t Data = type metadata accessor for TranscriptProtoQueryData(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, Data))
  {
    uint64_t v38 = sub_253462A5C(&qword_269CE1F98);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, DataEnum))
    {
      uint64_t v40 = sub_253462A5C(&qword_269CE1F10);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          uint64_t v41 = v36[1];
          *uint64_t v35 = *v36;
          v35[1] = v41;
          uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
          uint64_t v101 = (char *)v35 + v42;
          __dstc = (char *)v36 + v42;
          uint64_t v43 = sub_253B07160();
          long long v97 = v4;
          uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v44(v101, __dstc, v43);
          uint64_t v4 = v97;
          break;
        case 2u:
          uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, Enum))
          {
            uint64_t v51 = v3;
            uint64_t v52 = sub_253462A5C(&qword_269CE1F30);
            memcpy(v35, v36, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
            {
              uint64_t v51 = v3;
              *uint64_t v35 = *v36;
              uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
              uint64_t v86 = (char *)v36 + v54;
              __dste = (char *)v35 + v54;
              uint64_t v55 = sub_253B07160();
              uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
              swift_bridgeObjectRetain();
              v83(__dste, v86, v55);
            }
            else
            {
              uint64_t v56 = v36[1];
              *uint64_t v35 = *v36;
              v35[1] = v56;
              *((unsigned char *)v35 + 16) = *((unsigned char *)v36 + 16);
              uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
              uint64_t v57 = *(int *)(Predicate + 24);
              uint64_t v87 = (char *)v36 + v57;
              __dst = (char *)v35 + v57;
              uint64_t v58 = sub_253B08E50();
              swift_bridgeObjectRetain();
              uint64_t v84 = v58;
              int v59 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v58);
              uint64_t v51 = v3;
              if (v59)
              {
                uint64_t v60 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(__dst, v87, *(void *)(*(void *)(v60 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(__dst, v87, v84);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v84);
              }
              uint64_t v61 = *(int *)(Predicate + 28);
              uint64_t v62 = (char *)v35 + v61;
              uint64_t v63 = (char *)v36 + v61;
              uint64_t v64 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
            }
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, Enum);
          }
          uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
          uint64_t v66 = (char *)v35 + v65;
          uint64_t v67 = (char *)v36 + v65;
          uint64_t v68 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
          int v3 = v51;
          break;
        default:
          *uint64_t v35 = *v36;
          uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
          uint64_t v98 = (char *)v35 + v45;
          __dstd = (char *)v36 + v45;
          uint64_t v102 = v3;
          uint64_t v46 = sub_253B07160();
          uint64_t v47 = v4;
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v49 = v46;
          int v3 = v102;
          v48(v98, __dstd, v49);
          uint64_t v4 = v47;
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, DataEnum);
    }
    uint64_t v69 = *(int *)(Data + 20);
    uint64_t v70 = (char *)v35 + v69;
    uint64_t v71 = (char *)v36 + v69;
    uint64_t v72 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, Data);
  }
  uint64_t v73 = v3[7];
  uint64_t v74 = v3[8];
  uint64_t v75 = (void *)((char *)a1 + v73);
  uint64_t v76 = (void *)((char *)v4 + v73);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  uint64_t v78 = (char *)a1 + v74;
  uint64_t v79 = (char *)v4 + v74;
  uint64_t v80 = sub_253B07160();
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
  swift_bridgeObjectRetain();
  v81(v78, v79, v80);
  return a1;
}

void *assignWithCopy for TranscriptProtoParameterQuery(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = (int *)type metadata accessor for TranscriptProtoActionParameterContext(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, (uint64_t)v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    __srca = v4;
    v219 = a3;
    void *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v9[6];
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)v8 + v18;
    uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
    int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v21);
    int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21);
    if (v22)
    {
      if (!v23)
      {
        *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        uint64_t v24 = *(int *)(v21 + 24);
        uint64_t v187 = &v20[v24];
        v197 = &v19[v24];
        uint64_t v25 = sub_253B07160();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v197, v187, v25);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v23)
      {
        *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v88 = *(int *)(v21 + 24);
        uint64_t v89 = &v19[v88];
        uint64_t v90 = &v20[v88];
        uint64_t v91 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
LABEL_19:
        uint64_t v44 = v9[7];
        uint64_t v45 = (void *)((char *)v7 + v44);
        uint64_t v46 = (void *)((char *)v8 + v44);
        uint64_t v47 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        int v48 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v47);
        int v49 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47);
        if (v48)
        {
          if (!v49)
          {
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            v45[2] = v46[2];
            v45[3] = v46[3];
            uint64_t v50 = *(int *)(v47 + 24);
            uint64_t v190 = (char *)v46 + v50;
            v198 = (char *)v45 + v50;
            uint64_t v51 = sub_253B07160();
            uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v52(v198, v190, v51);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
LABEL_25:
            a3 = v219;
            uint64_t v54 = v9[8];
            uint64_t v55 = (char *)v7 + v54;
            uint64_t v56 = (char *)v8 + v54;
            uint64_t v57 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
            uint64_t v4 = __srca;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v49)
          {
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v45[2] = v46[2];
            v45[3] = v46[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v92 = *(int *)(v47 + 24);
            uint64_t v93 = (char *)v45 + v92;
            uint64_t v94 = (char *)v46 + v92;
            uint64_t v95 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 24))(v93, v94, v95);
            goto LABEL_25;
          }
          sub_2536FA73C();
        }
        uint64_t v53 = sub_253462A5C(&qword_269CE0448);
        memcpy(v45, v46, *(void *)(*(void *)(v53 - 8) + 64));
        goto LABEL_25;
      }
      sub_2536FA73C();
    }
    uint64_t v43 = sub_253462A5C(&qword_26B249528);
    memcpy(v19, v20, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v17 = sub_253462A5C(&qword_269CE1FA8);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_26;
  }
  __src = v4;
  v218 = a3;
  void *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  uint64_t v12 = v9[6];
  uint64_t v13 = (void *)((char *)v7 + v12);
  uint64_t v14 = (void *)((char *)v8 + v12);
  uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    v13[1] = v14[1];
    v13[2] = v14[2];
    uint64_t v27 = *(int *)(v15 + 24);
    uint64_t v28 = (char *)v13 + v27;
    v188 = (char *)v14 + v27;
    uint64_t v29 = sub_253B07160();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v28, v188, v29);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v31 = v9[7];
  uint64_t v32 = (void *)((char *)v7 + v31);
  uint64_t v33 = (void *)((char *)v8 + v31);
  uint64_t v34 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_253462A5C(&qword_269CE0448);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    *uint64_t v32 = *v33;
    v32[1] = v33[1];
    v32[2] = v33[2];
    v32[3] = v33[3];
    uint64_t v36 = *(int *)(v34 + 24);
    v182 = (char *)v33 + v36;
    uint64_t v189 = (char *)v32 + v36;
    uint64_t v37 = sub_253B07160();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v189, v182, v37);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
  }
  uint64_t v4 = __src;
  uint64_t v39 = v9[8];
  uint64_t v40 = (char *)v7 + v39;
  uint64_t v41 = (char *)v8 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  a3 = v218;
LABEL_26:
  uint64_t v58 = a3[6];
  int v59 = (void *)((char *)v5 + v58);
  uint64_t v60 = (void *)((char *)v4 + v58);
  uint64_t Data = type metadata accessor for TranscriptProtoQueryData(0);
  int v62 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v59, 1, Data);
  int v63 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, Data);
  if (!v62)
  {
    if (v63)
    {
      sub_2536FA73C();
      goto LABEL_32;
    }
    uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    int v68 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v59, 1, DataEnum);
    int v69 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, DataEnum);
    if (v68)
    {
      if (!v69)
      {
        v220 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 3u:
            *int v59 = *v60;
            v59[1] = v60[1];
            uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
            v191 = (char *)v59 + v70;
            v199 = v5;
            uint64_t v71 = (char *)v60 + v70;
            uint64_t v72 = sub_253B07160();
            __srce = v4;
            uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v74 = v71;
            uint64_t v5 = v199;
            v73(v191, v74, v72);
            uint64_t v4 = __srce;
            break;
          case 2u:
            uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, Enum))
            {
              uint64_t v108 = sub_253462A5C(&qword_269CE1F30);
              memcpy(v59, v60, *(void *)(*(void *)(v108 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
              {
                *int v59 = *v60;
                uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
                __dstb = (char *)v60 + v122;
                v184 = (char *)v59 + v122;
                uint64_t v123 = sub_253B07160();
                __srcj = v4;
                uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
                swift_bridgeObjectRetain();
                v124(v184, __dstb, v123);
                uint64_t v4 = __srcj;
              }
              else
              {
                *int v59 = *v60;
                v59[1] = v60[1];
                *((unsigned char *)v59 + 16) = *((unsigned char *)v60 + 16);
                uint64_t Predicate = (int *)type metadata accessor for TranscriptProtoQueryPredicate(0);
                uint64_t v130 = Predicate[6];
                __srcd = (char *)v59 + v130;
                uint64_t v131 = (char *)v60 + v130;
                uint64_t v132 = sub_253B08E50();
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v131, 1, v132))
                {
                  uint64_t v133 = sub_253462A5C(&qword_269CDCBC8);
                  memcpy(__srcd, v131, *(void *)(*(void *)(v133 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(__srcd, v131, v132);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcd, 0, 1, v132);
                }
                uint64_t v151 = Predicate[7];
                uint64_t v152 = (char *)v59 + v151;
                uint64_t v153 = (char *)v60 + v151;
                uint64_t v154 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v152, v153, v154);
              }
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, Enum);
            }
            uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
            uint64_t v156 = (char *)v59 + v155;
            uint64_t v157 = (char *)v60 + v155;
            uint64_t v158 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
            break;
          default:
            *int v59 = *v60;
            uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
            v203 = v5;
            __srch = (char *)v59 + v102;
            uint64_t v103 = (char *)v60 + v102;
            uint64_t v104 = sub_253B07160();
            uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v106 = v103;
            uint64_t v5 = v203;
            v105(__srch, v106, v104);
            break;
        }
        a3 = v220;
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, DataEnum);
        goto LABEL_87;
      }
    }
    else
    {
      if (!v69)
      {
        if (v5 != v4)
        {
          sub_2536FA73C();
          __srcb = v4;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 3u:
              *int v59 = *v60;
              v59[1] = v60[1];
              uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
              v223 = (char *)v59 + v113;
              v204 = v5;
              uint64_t v114 = (char *)v60 + v113;
              uint64_t v115 = sub_253B07160();
              uint64_t v116 = a3;
              uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v118 = v114;
              uint64_t v5 = v204;
              v117(v223, v118, v115);
              a3 = v116;
              break;
            case 2u:
              uint64_t v119 = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v119))
              {
                uint64_t v120 = sub_253462A5C(&qword_269CE1F30);
                memcpy(v59, v60, *(void *)(*(void *)(v120 - 8) + 64));
              }
              else
              {
                int v127 = swift_getEnumCaseMultiPayload();
                if (v127 == 2 || v127 == 1)
                {
                  *int v59 = *v60;
                  uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
                  v194 = (char *)v60 + v128;
                  v205 = (char *)v59 + v128;
                  uint64_t v129 = sub_253B07160();
                  uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v186(v205, v194, v129);
                }
                else
                {
                  *int v59 = *v60;
                  v59[1] = v60[1];
                  *((unsigned char *)v59 + 16) = *((unsigned char *)v60 + 16);
                  uint64_t v146 = type metadata accessor for TranscriptProtoQueryPredicate(0);
                  uint64_t v147 = *(int *)(v146 + 24);
                  v196 = (char *)v59 + v147;
                  uint64_t v206 = v146;
                  uint64_t v148 = (char *)v60 + v147;
                  uint64_t v149 = sub_253B08E50();
                  swift_bridgeObjectRetain();
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v148, 1, v149))
                  {
                    uint64_t v150 = sub_253462A5C(&qword_269CDCBC8);
                    memcpy(v196, v148, *(void *)(*(void *)(v150 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v196, v148, v149);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v149);
                  }
                  uint64_t v159 = *(int *)(v206 + 28);
                  uint64_t v160 = (char *)v59 + v159;
                  uint64_t v161 = (char *)v60 + v159;
                  uint64_t v162 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
                }
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v119);
              }
              uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
              uint64_t v164 = (char *)v59 + v163;
              uint64_t v165 = (char *)v60 + v163;
              uint64_t v166 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
              break;
            default:
              *int v59 = *v60;
              uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
              v222 = (char *)v59 + v96;
              v202 = v5;
              long long v97 = (char *)v60 + v96;
              uint64_t v98 = sub_253B07160();
              uint64_t v99 = a3;
              uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v101 = v97;
              uint64_t v5 = v202;
              v100(v222, v101, v98);
              a3 = v99;
              break;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = __srcb;
        }
        goto LABEL_87;
      }
      sub_2536FA73C();
    }
    uint64_t v80 = sub_253462A5C(&qword_269CE1F10);
    memcpy(v59, v60, *(void *)(*(void *)(v80 - 8) + 64));
LABEL_87:
    uint64_t v167 = *(int *)(Data + 20);
    uint64_t v168 = (char *)v59 + v167;
    uint64_t v169 = (char *)v60 + v167;
    uint64_t v170 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 24))(v168, v169, v170);
    goto LABEL_88;
  }
  if (v63)
  {
LABEL_32:
    uint64_t v66 = sub_253462A5C(&qword_269CE1F98);
    memcpy(v59, v60, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_88;
  }
  uint64_t v64 = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v64))
  {
    uint64_t v65 = sub_253462A5C(&qword_269CE1F10);
    memcpy(v59, v60, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    v221 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *int v59 = *v60;
        v59[1] = v60[1];
        uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
        uint64_t v192 = (char *)v59 + v75;
        v200 = v5;
        uint64_t v76 = (char *)v60 + v75;
        uint64_t v77 = sub_253B07160();
        __srcf = v4;
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v79 = v76;
        uint64_t v5 = v200;
        v78(v192, v79, v77);
        uint64_t v4 = __srcf;
        break;
      case 2u:
        uint64_t v86 = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v86))
        {
          uint64_t v87 = sub_253462A5C(&qword_269CE1F30);
          memcpy(v59, v60, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          int v109 = swift_getEnumCaseMultiPayload();
          if (v109 == 2 || v109 == 1)
          {
            *int v59 = *v60;
            uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            __dsta = (char *)v60 + v110;
            v183 = (char *)v59 + v110;
            uint64_t v111 = sub_253B07160();
            __srci = v4;
            uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            v112(v183, __dsta, v111);
            uint64_t v4 = __srci;
          }
          else
          {
            *int v59 = *v60;
            v59[1] = v60[1];
            *((unsigned char *)v59 + 16) = *((unsigned char *)v60 + 16);
            v193 = (int *)type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v125 = v193[6];
            __dst = (char *)v59 + v125;
            __srcc = (char *)v60 + v125;
            uint64_t v185 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcc, 1, v185))
            {
              uint64_t v126 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dst, __srcc, *(void *)(*(void *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(__dst, __srcc, v185);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v185);
            }
            uint64_t v134 = v193[7];
            uint64_t v135 = (char *)v59 + v134;
            uint64_t v136 = (char *)v60 + v134;
            uint64_t v137 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v86);
        }
        uint64_t v138 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
        uint64_t v139 = (char *)v59 + v138;
        uint64_t v140 = (char *)v60 + v138;
        uint64_t v141 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
        break;
      default:
        *int v59 = *v60;
        uint64_t v81 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
        v201 = v5;
        __srcg = (char *)v59 + v81;
        uint64_t v82 = (char *)v60 + v81;
        uint64_t v83 = sub_253B07160();
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v85 = v82;
        uint64_t v5 = v201;
        v84(__srcg, v85, v83);
        break;
    }
    a3 = v221;
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v64);
  }
  uint64_t v142 = *(int *)(Data + 20);
  uint64_t v143 = (char *)v59 + v142;
  uint64_t v144 = (char *)v60 + v142;
  uint64_t v145 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, Data);
LABEL_88:
  uint64_t v171 = a3[7];
  uint64_t v172 = (void *)((char *)v5 + v171);
  uint64_t v173 = (void *)((char *)v4 + v171);
  *uint64_t v172 = *v173;
  v172[1] = v173[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v174 = a3[8];
  uint64_t v175 = (char *)v5 + v174;
  uint64_t v176 = (char *)v4 + v174;
  uint64_t v177 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 24))(v175, v176, v177);
  return v5;
}

void *initializeWithTake for TranscriptProtoParameterQuery(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TranscriptProtoActionParameterContext(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1FA8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v8[1];
    _OWORD *v7 = *v8;
    v7[1] = v11;
    uint64_t v12 = v9[6];
    uint64_t v13 = (_DWORD *)((char *)v7 + v12);
    uint64_t v14 = (_DWORD *)((char *)v8 + v12);
    uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_26B249528);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      _DWORD *v13 = *v14;
      *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
      uint64_t v17 = *(int *)(v15 + 24);
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v21 = v9[7];
    int v22 = (_OWORD *)((char *)v7 + v21);
    int v23 = (_OWORD *)((char *)v8 + v21);
    uint64_t v24 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_253462A5C(&qword_269CE0448);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      long long v26 = v23[1];
      *int v22 = *v23;
      v22[1] = v26;
      uint64_t v27 = *(int *)(v24 + 24);
      uint64_t v28 = (char *)v22 + v27;
      uint64_t v29 = (char *)v23 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
    }
    uint64_t v31 = v9[8];
    uint64_t v32 = (char *)v7 + v31;
    uint64_t v33 = (char *)v8 + v31;
    uint64_t v34 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  uint64_t v35 = a3[6];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t Data = type metadata accessor for TranscriptProtoQueryData(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, Data))
  {
    uint64_t v39 = sub_253462A5C(&qword_269CE1F98);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, DataEnum))
    {
      uint64_t v41 = sub_253462A5C(&qword_269CE1F10);
      memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          uint64_t v42 = type metadata accessor for TranscriptProtoStringQuery(0);
          break;
        case 2u:
          uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, Enum))
          {
            uint64_t v44 = sub_253462A5C(&qword_269CE1F30);
            memcpy(v36, v37, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
            {
              *(void *)uint64_t v36 = *(void *)v37;
              uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
            }
            else
            {
              *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
              v36[16] = v37[16];
              uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
              uint64_t v48 = *(int *)(Predicate + 24);
              uint64_t v69 = Predicate;
              __dst = &v36[v48];
              int v49 = &v37[v48];
              uint64_t v50 = sub_253B08E50();
              __src = v49;
              uint64_t v51 = (uint64_t)v49;
              uint64_t v52 = v50;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v51, 1, v50))
              {
                uint64_t v53 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(__dst, __src, *(void *)(*(void *)(v53 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, void *, uint64_t))(*(void *)(v52 - 8) + 32))(__dst, __src, v52);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v52);
              }
              uint64_t v46 = *(int *)(v69 + 28);
            }
            uint64_t v70 = &v37[v46];
            __dsta = &v36[v46];
            uint64_t v54 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 32))(__dsta, v70, v54);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, Enum);
          }
          uint64_t v42 = type metadata accessor for TranscriptProtoPropertyQuery(0);
          break;
        default:
          *(void *)uint64_t v36 = *(void *)v37;
          uint64_t v42 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
          break;
      }
      uint64_t v55 = *(int *)(v42 + 20);
      uint64_t v56 = &v36[v55];
      uint64_t v57 = &v37[v55];
      uint64_t v58 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, DataEnum);
    }
    uint64_t v59 = *(int *)(Data + 20);
    uint64_t v60 = &v36[v59];
    uint64_t v61 = &v37[v59];
    uint64_t v62 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, Data);
  }
  uint64_t v63 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  return a1;
}

void *assignWithTake for TranscriptProtoParameterQuery(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TranscriptProtoActionParameterContext(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, (uint64_t)v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v19 = v8[1];
    void *v7 = *v8;
    v7[1] = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = v8[3];
    v7[2] = v8[2];
    v7[3] = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v9[6];
    int v22 = (char *)v7 + v21;
    int v23 = (char *)v8 + v21;
    uint64_t v24 = type metadata accessor for TranscriptProtoStatementID(0);
    int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v24);
    int v26 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24);
    if (v25)
    {
      if (!v26)
      {
        *(_DWORD *)int v22 = *(_DWORD *)v23;
        *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
        uint64_t v27 = *(int *)(v24 + 24);
        uint64_t v28 = &v22[v27];
        uint64_t v29 = &v23[v27];
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v26)
      {
        *(_DWORD *)int v22 = *(_DWORD *)v23;
        uint64_t v83 = *((void *)v23 + 2);
        *((void *)v22 + 1) = *((void *)v23 + 1);
        *((void *)v22 + 2) = v83;
        swift_bridgeObjectRelease();
        uint64_t v84 = *(int *)(v24 + 24);
        uint64_t v85 = &v22[v84];
        uint64_t v86 = &v23[v84];
        uint64_t v87 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 40))(v85, v86, v87);
LABEL_19:
        uint64_t v50 = v9[7];
        uint64_t v51 = (char *)v7 + v50;
        uint64_t v52 = (char *)v8 + v50;
        uint64_t v53 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v53);
        int v55 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53);
        if (v54)
        {
          if (!v55)
          {
            long long v56 = *((_OWORD *)v52 + 1);
            *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
            *((_OWORD *)v51 + 1) = v56;
            uint64_t v57 = *(int *)(v53 + 24);
            uint64_t v58 = &v51[v57];
            uint64_t v59 = &v52[v57];
            uint64_t v60 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
LABEL_25:
            uint64_t v62 = v9[8];
            uint64_t v63 = (char *)v7 + v62;
            uint64_t v64 = (char *)v8 + v62;
            uint64_t v65 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v55)
          {
            uint64_t v88 = *((void *)v52 + 1);
            *(void *)uint64_t v51 = *(void *)v52;
            *((void *)v51 + 1) = v88;
            swift_bridgeObjectRelease();
            uint64_t v89 = *((void *)v52 + 3);
            *((void *)v51 + 2) = *((void *)v52 + 2);
            *((void *)v51 + 3) = v89;
            swift_bridgeObjectRelease();
            uint64_t v90 = *(int *)(v53 + 24);
            uint64_t v91 = &v51[v90];
            uint64_t v92 = &v52[v90];
            uint64_t v93 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 40))(v91, v92, v93);
            goto LABEL_25;
          }
          sub_2536FA73C();
        }
        uint64_t v61 = sub_253462A5C(&qword_269CE0448);
        memcpy(v51, v52, *(void *)(*(void *)(v61 - 8) + 64));
        goto LABEL_25;
      }
      sub_2536FA73C();
    }
    uint64_t v49 = sub_253462A5C(&qword_26B249528);
    memcpy(v22, v23, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_19;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v18 = sub_253462A5C(&qword_269CE1FA8);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_26;
  }
  long long v12 = *((_OWORD *)v8 + 1);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v12;
  uint64_t v13 = v9[6];
  uint64_t v14 = (_DWORD *)((char *)v7 + v13);
  uint64_t v15 = (_DWORD *)((char *)v8 + v13);
  uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    *(_OWORD *)(v14 + 2) = *(_OWORD *)(v15 + 2);
    uint64_t v31 = *(int *)(v16 + 24);
    uint64_t v32 = (char *)v14 + v31;
    uint64_t v33 = (char *)v15 + v31;
    uint64_t v34 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v35 = v9[7];
  uint64_t v36 = (_OWORD *)((char *)v7 + v35);
  uint64_t v37 = (_OWORD *)((char *)v8 + v35);
  uint64_t v38 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = sub_253462A5C(&qword_269CE0448);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    long long v40 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v40;
    uint64_t v41 = *(int *)(v38 + 24);
    uint64_t v42 = (char *)v36 + v41;
    uint64_t v43 = (char *)v37 + v41;
    uint64_t v44 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
  }
  uint64_t v45 = v9[8];
  uint64_t v46 = (char *)v7 + v45;
  uint64_t v47 = (char *)v8 + v45;
  uint64_t v48 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
LABEL_26:
  uint64_t v66 = a3[6];
  uint64_t v67 = (char *)a1 + v66;
  int v68 = (char *)a2 + v66;
  uint64_t Data = type metadata accessor for TranscriptProtoQueryData(0);
  int v70 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, Data);
  int v71 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, Data);
  if (!v70)
  {
    if (v71)
    {
      sub_2536FA73C();
      goto LABEL_32;
    }
    uint64_t DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    int v76 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, DataEnum);
    int v77 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, DataEnum);
    if (v76)
    {
      if (!v77)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 3u:
            *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
            uint64_t v78 = type metadata accessor for TranscriptProtoStringQuery(0);
            break;
          case 2u:
            uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, Enum))
            {
              uint64_t v99 = sub_253462A5C(&qword_269CE1F30);
              memcpy(v67, v68, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
              {
                *(void *)uint64_t v67 = *(void *)v68;
                uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
              }
              else
              {
                *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
                v67[16] = v68[16];
                uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
                uint64_t v120 = *(int *)(Predicate + 24);
                uint64_t v171 = Predicate;
                __dsta = &v67[v120];
                long long v121 = &v68[v120];
                uint64_t v122 = sub_253B08E50();
                __srca = v121;
                uint64_t v123 = (uint64_t)v121;
                uint64_t v124 = v122;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v123, 1, v122))
                {
                  uint64_t v125 = sub_253462A5C(&qword_269CDCBC8);
                  memcpy(__dsta, __srca, *(void *)(*(void *)(v125 - 8) + 64));
                }
                else
                {
                  (*(void (**)(unsigned char *, void *, uint64_t))(*(void *)(v124 - 8) + 32))(__dsta, __srca, v124);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v124);
                }
                uint64_t v109 = *(int *)(v171 + 28);
              }
              uint64_t v174 = &v68[v109];
              __dstd = &v67[v109];
              uint64_t v142 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v142 - 8) + 32))(__dstd, v174, v142);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, Enum);
            }
            uint64_t v78 = type metadata accessor for TranscriptProtoPropertyQuery(0);
            break;
          default:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v78 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
            break;
        }
        uint64_t v143 = *(int *)(v78 + 20);
        uint64_t v144 = &v67[v143];
        uint64_t v145 = &v68[v143];
        uint64_t v146 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, DataEnum);
        goto LABEL_87;
      }
    }
    else
    {
      if (!v77)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 3u:
              *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
              uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoStringQuery(0) + 20);
              uint64_t v103 = &v67[v102];
              uint64_t v104 = &v68[v102];
              uint64_t v105 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
              break;
            case 2u:
              uint64_t v106 = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v106))
              {
                uint64_t v107 = sub_253462A5C(&qword_269CE1F30);
                memcpy(v67, v68, *(void *)(*(void *)(v107 - 8) + 64));
              }
              else
              {
                int v117 = swift_getEnumCaseMultiPayload();
                if (v117 == 2 || v117 == 1)
                {
                  *(void *)uint64_t v67 = *(void *)v68;
                  uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
                }
                else
                {
                  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
                  v67[16] = v68[16];
                  uint64_t v135 = type metadata accessor for TranscriptProtoQueryPredicate(0);
                  uint64_t v136 = *(int *)(v135 + 24);
                  uint64_t v173 = v135;
                  __dstb = &v67[v136];
                  uint64_t v137 = &v68[v136];
                  uint64_t v138 = sub_253B08E50();
                  __srcb = v137;
                  uint64_t v139 = (uint64_t)v137;
                  uint64_t v140 = v138;
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v139, 1, v138))
                  {
                    uint64_t v141 = sub_253462A5C(&qword_269CDCBC8);
                    memcpy(__dstb, __srcb, *(void *)(*(void *)(v141 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(unsigned char *, void *, uint64_t))(*(void *)(v140 - 8) + 32))(__dstb, __srcb, v140);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v140);
                  }
                  uint64_t v118 = *(int *)(v173 + 28);
                }
                uint64_t v147 = &v67[v118];
                __dste = &v68[v118];
                uint64_t v148 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v148 - 8) + 32))(v147, __dste, v148);
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v106);
              }
              uint64_t v149 = *(int *)(type metadata accessor for TranscriptProtoPropertyQuery(0) + 20);
              uint64_t v150 = &v67[v149];
              uint64_t v151 = &v68[v149];
              uint64_t v152 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v152 - 8) + 32))(v150, v151, v152);
              break;
            default:
              *(void *)uint64_t v67 = *(void *)v68;
              uint64_t v94 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
              uint64_t v95 = &v67[v94];
              uint64_t v96 = &v68[v94];
              uint64_t v97 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_87;
      }
      sub_2536FA73C();
    }
    uint64_t v80 = sub_253462A5C(&qword_269CE1F10);
    memcpy(v67, v68, *(void *)(*(void *)(v80 - 8) + 64));
LABEL_87:
    uint64_t v153 = *(int *)(Data + 20);
    uint64_t v154 = &v67[v153];
    uint64_t v155 = &v68[v153];
    uint64_t v156 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v156 - 8) + 40))(v154, v155, v156);
    goto LABEL_88;
  }
  if (v71)
  {
LABEL_32:
    uint64_t v74 = sub_253462A5C(&qword_269CE1F98);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_88;
  }
  uint64_t v72 = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v72))
  {
    uint64_t v73 = sub_253462A5C(&qword_269CE1F10);
    memcpy(v67, v68, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        uint64_t v79 = type metadata accessor for TranscriptProtoStringQuery(0);
        break;
      case 2u:
        uint64_t v81 = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v81))
        {
          uint64_t v82 = sub_253462A5C(&qword_269CE1F30);
          memcpy(v67, v68, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          int v100 = swift_getEnumCaseMultiPayload();
          if (v100 == 2 || v100 == 1)
          {
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          }
          else
          {
            *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
            v67[16] = v68[16];
            uint64_t v110 = type metadata accessor for TranscriptProtoQueryPredicate(0);
            uint64_t v111 = *(int *)(v110 + 24);
            uint64_t v170 = v110;
            __dst = &v67[v111];
            uint64_t v112 = &v68[v111];
            uint64_t v113 = sub_253B08E50();
            __src = v112;
            uint64_t v114 = (uint64_t)v112;
            uint64_t v115 = v113;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v114, 1, v113))
            {
              uint64_t v116 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dst, __src, *(void *)(*(void *)(v116 - 8) + 64));
            }
            else
            {
              (*(void (**)(unsigned char *, void *, uint64_t))(*(void *)(v115 - 8) + 32))(__dst, __src, v115);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v115);
            }
            uint64_t v101 = *(int *)(v170 + 28);
          }
          uint64_t v172 = &v68[v101];
          __dstc = &v67[v101];
          uint64_t v126 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v126 - 8) + 32))(__dstc, v172, v126);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v81);
        }
        uint64_t v79 = type metadata accessor for TranscriptProtoPropertyQuery(0);
        break;
      default:
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v79 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
        break;
    }
    uint64_t v127 = *(int *)(v79 + 20);
    uint64_t v128 = &v67[v127];
    uint64_t v129 = &v68[v127];
    uint64_t v130 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v72);
  }
  uint64_t v131 = *(int *)(Data + 20);
  uint64_t v132 = &v67[v131];
  uint64_t v133 = &v68[v131];
  uint64_t v134 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, Data);
LABEL_88:
  uint64_t v157 = a3[7];
  uint64_t v158 = (void *)((char *)a1 + v157);
  uint64_t v159 = (void *)((char *)a2 + v157);
  uint64_t v161 = *v159;
  uint64_t v160 = v159[1];
  *uint64_t v158 = v161;
  v158[1] = v160;
  swift_bridgeObjectRelease();
  uint64_t v162 = a3[8];
  uint64_t v163 = (char *)a1 + v162;
  uint64_t v164 = (char *)a2 + v162;
  uint64_t v165 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 40))(v163, v164, v165);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253880E90);
}

uint64_t sub_253880E90()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE1FA8);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CE1F98);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253B07160();
      sub_2535E27E4();
    }
  }
  uint64_t v7 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253880F5C);
}

void sub_253880F5C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE1FA8);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_269CE1F98);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253B07160();
        sub_2535E2830();
      }
    }
    uint64_t v5 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_253881010()
{
  sub_253760A08(319, &qword_26B249BC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249438, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryData);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryStepResults(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    int v10 = (uint64_t *)((char *)a1 + v9);
    int v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_26B249528);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)int v10 = *(_DWORD *)v11;
      uint64_t v14 = v11[2];
      v10[1] = v11[1];
      v10[2] = v14;
      uint64_t v15 = *(int *)(v12 + 24);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v24 = (char *)v11 + v15;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v24, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoQueryStepResults(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  int v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoQueryStepResults(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v22 = (char *)v9 + v13;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v22, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryStepResults(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v9 + 24);
      int v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  int v26 = (char *)v8 + v12;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v13, v26, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoQueryStepResults(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    _DWORD *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for TranscriptProtoQueryStepResults(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v23 = *(void *)(v9 + 16);
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(void *)(v8 + 16) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(int *)(v10 + 24);
      uint64_t v25 = v8 + v24;
      uint64_t v26 = v9 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryStepResults(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253881BB8);
}

uint64_t sub_253881BB8()
{
  return sub_253943610();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryStepResults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253881BD8);
}

void sub_253881BD8()
{
}

void sub_253881BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoResponseDialog(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (char *)a2 + v9;
    int v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoResponseDialog(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for TranscriptProtoResponseDialog(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = sub_253B07160();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

void *assignWithCopy for TranscriptProtoResponseDialog(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoResponseDialog(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *assignWithTake for TranscriptProtoResponseDialog(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseDialog(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538820E8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseDialog(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253882100);
}

uint64_t sub_253882104()
{
  return sub_253904F98();
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoResponseOutput(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v8 = a3[7];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoDialogType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2010);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CE2050);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v18 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v18;
            uint64_t v17 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_13;
          case 2u:
            uint64_t v19 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v19;
            uint64_t v17 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_13;
          case 3u:
          case 4u:
            uint64_t v15 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
            goto LABEL_14;
          case 5u:
            uint64_t v20 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v20;
            uint64_t v17 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_13;
          default:
            uint64_t v16 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v16;
            uint64_t v17 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_13:
            uint64_t v21 = *(int *)(v17 + 20);
            uint64_t v92 = (char *)v10 + v21;
            uint64_t v95 = (char *)v9 + v21;
            uint64_t v22 = sub_253B07160();
            uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
            swift_bridgeObjectRetain();
            v89(v95, v92, v22);
LABEL_14:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v13);
            break;
        }
      }
      uint64_t v23 = *(int *)(v11 + 20);
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v27 = a3[8];
    uint64_t v28 = (void *)(v7 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v27, 1, v11))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CE2010);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_269CE2050);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v36 = v29[1];
            *uint64_t v28 = *v29;
            v28[1] = v36;
            uint64_t v35 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_26;
          case 2u:
            uint64_t v37 = v29[1];
            *uint64_t v28 = *v29;
            v28[1] = v37;
            uint64_t v35 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_26;
          case 3u:
          case 4u:
            uint64_t v33 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
            goto LABEL_27;
          case 5u:
            uint64_t v38 = v29[1];
            *uint64_t v28 = *v29;
            v28[1] = v38;
            uint64_t v35 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_26;
          default:
            uint64_t v34 = v29[1];
            *uint64_t v28 = *v29;
            v28[1] = v34;
            uint64_t v35 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_26:
            uint64_t v39 = *(int *)(v35 + 20);
            uint64_t v93 = (char *)v29 + v39;
            uint64_t v96 = (char *)v28 + v39;
            uint64_t v40 = sub_253B07160();
            uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v90(v96, v93, v40);
LABEL_27:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v31);
            break;
        }
      }
      uint64_t v41 = *(int *)(v11 + 20);
      uint64_t v42 = (char *)v28 + v41;
      uint64_t v43 = (char *)v29 + v41;
      uint64_t v44 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v11);
    }
    uint64_t v45 = a3[9];
    uint64_t v46 = (unsigned char *)(v7 + v45);
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48))
    {
      uint64_t v49 = sub_253462A5C(&qword_269CE2000);
      memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      *uint64_t v46 = *v47;
      uint64_t v50 = *(int *)(v48 + 20);
      uint64_t v51 = &v46[v50];
      uint64_t v52 = &v47[v50];
      uint64_t v53 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v48);
    }
    uint64_t v54 = a3[10];
    int v55 = (void *)(v7 + v54);
    long long v56 = (uint64_t *)((char *)a2 + v54);
    uint64_t v57 = type metadata accessor for TranscriptProtoVisualOutput(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v57))
    {
      uint64_t v58 = sub_253462A5C(&qword_269CE1FF0);
      memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      uint64_t v59 = type metadata accessor for TranscriptProtoVisualOutputType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v59))
      {
        uint64_t v60 = sub_253462A5C(&qword_269CDCC18);
        memcpy(v55, v56, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v63 = v56[1];
            *int v55 = *v56;
            v55[1] = v63;
            uint64_t v62 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_39;
          case 2u:
            uint64_t v65 = *v56;
            unint64_t v66 = v56[1];
            sub_25348A9C8(*v56, v66);
            *int v55 = v65;
            v55[1] = v66;
            uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
            int v68 = (char *)v55 + v67;
            uint64_t v69 = (char *)v56 + v67;
            uint64_t v70 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
            goto LABEL_43;
          case 3u:
            uint64_t v71 = *v56;
            unint64_t v72 = v56[1];
            sub_25348A9C8(*v56, v72);
            *int v55 = v71;
            v55[1] = v72;
            uint64_t v73 = v56[3];
            v55[2] = v56[2];
            v55[3] = v73;
            uint64_t v64 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
            goto LABEL_42;
          default:
            uint64_t v61 = v56[1];
            *int v55 = *v56;
            v55[1] = v61;
            uint64_t v62 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_39:
            uint64_t v64 = *(int *)(v62 + 20);
LABEL_42:
            uint64_t v94 = (char *)v56 + v64;
            uint64_t v97 = (char *)v55 + v64;
            uint64_t v74 = sub_253B07160();
            uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
            swift_bridgeObjectRetain();
            v91(v97, v94, v74);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v55, 0, 1, v59);
            break;
        }
      }
      uint64_t v75 = *(int *)(v57 + 20);
      int v76 = (char *)v55 + v75;
      int v77 = (char *)v56 + v75;
      uint64_t v78 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v55, 0, 1, v57);
    }
    uint64_t v79 = a3[11];
    uint64_t v80 = a3[12];
    uint64_t v81 = (void *)(v7 + v79);
    uint64_t v82 = (uint64_t *)((char *)a2 + v79);
    uint64_t v83 = v82[1];
    *uint64_t v81 = *v82;
    v81[1] = v83;
    uint64_t v84 = v7 + v80;
    uint64_t v85 = (uint64_t)a2 + v80;
    uint64_t v86 = sub_253B07160();
    uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16);
    swift_bridgeObjectRetain();
    v87(v84, v85, v86);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoResponseOutput(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for TranscriptProtoDialogType(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v8 = type metadata accessor for TranscriptProtoStaticText(0);
          goto LABEL_9;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v8 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_9;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v8 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_9;
        case 3u:
        case 4u:
          uint64_t v7 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
          break;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v8 = type metadata accessor for TranscriptProtoCATDialog(0);
LABEL_9:
          uint64_t v9 = v4 + *(int *)(v8 + 20);
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    uint64_t v11 = v4 + *(int *)(v5 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v5))
  {
    uint64_t v14 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v16 = type metadata accessor for TranscriptProtoStaticText(0);
          goto LABEL_19;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v16 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_19;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v16 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_19;
        case 3u:
        case 4u:
          uint64_t v15 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
          break;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v16 = type metadata accessor for TranscriptProtoCATDialog(0);
LABEL_19:
          uint64_t v17 = v13 + *(int *)(v16 + 20);
          uint64_t v18 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          break;
        default:
          break;
      }
    }
    uint64_t v19 = v13 + *(int *)(v5 + 20);
    uint64_t v20 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  uint64_t v21 = a1 + a2[9];
  uint64_t v22 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v21, 1, v22))
  {
    uint64_t v23 = v21 + *(int *)(v22 + 20);
    uint64_t v24 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  }
  uint64_t v25 = a1 + a2[10];
  uint64_t v26 = type metadata accessor for TranscriptProtoVisualOutput(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v25, 1, v26))
  {
    uint64_t v27 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v25, 1, v27))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
          goto LABEL_29;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
          goto LABEL_29;
        case 2u:
          sub_253487D84(*(void *)v25, *(void *)(v25 + 8));
          uint64_t v28 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
LABEL_29:
          uint64_t v29 = *(int *)(v28 + 20);
          goto LABEL_31;
        case 3u:
          sub_253487D84(*(void *)v25, *(void *)(v25 + 8));
          swift_bridgeObjectRelease();
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
LABEL_31:
          uint64_t v30 = v25 + v29;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
          break;
        default:
          break;
      }
    }
    uint64_t v32 = v25 + *(int *)(v26 + 20);
    uint64_t v33 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = a1 + a2[12];
  uint64_t v35 = sub_253B07160();
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8);
  return v36(v34, v35);
}

uint64_t initializeWithCopy for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoDialogType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE2010);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2050);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = v8[1];
          void *v7 = *v8;
          v7[1] = v16;
          uint64_t v15 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_11;
        case 2u:
          uint64_t v17 = v8[1];
          void *v7 = *v8;
          v7[1] = v17;
          uint64_t v15 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_11;
        case 3u:
        case 4u:
          uint64_t v13 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
          goto LABEL_12;
        case 5u:
          uint64_t v18 = v8[1];
          void *v7 = *v8;
          v7[1] = v18;
          uint64_t v15 = type metadata accessor for TranscriptProtoCATDialog(0);
          goto LABEL_11;
        default:
          uint64_t v14 = v8[1];
          void *v7 = *v8;
          v7[1] = v14;
          uint64_t v15 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_11:
          uint64_t v19 = *(int *)(v15 + 20);
          uint64_t v90 = (char *)v8 + v19;
          uint64_t v93 = (char *)v7 + v19;
          uint64_t v20 = sub_253B07160();
          uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v87(v93, v90, v20);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
          break;
      }
    }
    uint64_t v21 = *(int *)(v9 + 20);
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v25, 1, v9))
  {
    uint64_t v28 = sub_253462A5C(&qword_269CE2010);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CE2050);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v34 = v27[1];
          void *v26 = *v27;
          v26[1] = v34;
          uint64_t v33 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_24;
        case 2u:
          uint64_t v35 = v27[1];
          void *v26 = *v27;
          v26[1] = v35;
          uint64_t v33 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_24;
        case 3u:
        case 4u:
          uint64_t v31 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v26, v27, v31);
          goto LABEL_25;
        case 5u:
          uint64_t v36 = v27[1];
          void *v26 = *v27;
          v26[1] = v36;
          uint64_t v33 = type metadata accessor for TranscriptProtoCATDialog(0);
          goto LABEL_24;
        default:
          uint64_t v32 = v27[1];
          void *v26 = *v27;
          v26[1] = v32;
          uint64_t v33 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_24:
          uint64_t v37 = *(int *)(v33 + 20);
          uint64_t v91 = (char *)v27 + v37;
          uint64_t v94 = (char *)v26 + v37;
          uint64_t v38 = sub_253B07160();
          uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v88(v94, v91, v38);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v29);
          break;
      }
    }
    uint64_t v39 = *(int *)(v9 + 20);
    uint64_t v40 = (char *)v26 + v39;
    uint64_t v41 = (char *)v27 + v39;
    uint64_t v42 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v9);
  }
  uint64_t v43 = a3[9];
  uint64_t v44 = (unsigned char *)(a1 + v43);
  uint64_t v45 = (unsigned char *)(a2 + v43);
  uint64_t v46 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
  {
    uint64_t v47 = sub_253462A5C(&qword_269CE2000);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    *uint64_t v44 = *v45;
    uint64_t v48 = *(int *)(v46 + 20);
    uint64_t v49 = &v44[v48];
    uint64_t v50 = &v45[v48];
    uint64_t v51 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
  }
  uint64_t v52 = a3[10];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  uint64_t v55 = type metadata accessor for TranscriptProtoVisualOutput(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v56 = sub_253462A5C(&qword_269CE1FF0);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    uint64_t v57 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v57))
    {
      uint64_t v58 = sub_253462A5C(&qword_269CDCC18);
      memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v61 = v54[1];
          *uint64_t v53 = *v54;
          v53[1] = v61;
          uint64_t v60 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
          goto LABEL_37;
        case 2u:
          uint64_t v63 = *v54;
          unint64_t v64 = v54[1];
          sub_25348A9C8(*v54, v64);
          *uint64_t v53 = v63;
          v53[1] = v64;
          uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
          unint64_t v66 = (char *)v53 + v65;
          uint64_t v67 = (char *)v54 + v65;
          uint64_t v68 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
          goto LABEL_41;
        case 3u:
          uint64_t v69 = *v54;
          unint64_t v70 = v54[1];
          sub_25348A9C8(*v54, v70);
          *uint64_t v53 = v69;
          v53[1] = v70;
          uint64_t v71 = v54[3];
          v53[2] = v54[2];
          v53[3] = v71;
          uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
          goto LABEL_40;
        default:
          uint64_t v59 = v54[1];
          *uint64_t v53 = *v54;
          v53[1] = v59;
          uint64_t v60 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_37:
          uint64_t v62 = *(int *)(v60 + 20);
LABEL_40:
          uint64_t v92 = (char *)v54 + v62;
          uint64_t v95 = (char *)v53 + v62;
          uint64_t v72 = sub_253B07160();
          uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v89(v95, v92, v72);
LABEL_41:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v57);
          break;
      }
    }
    uint64_t v73 = *(int *)(v55 + 20);
    uint64_t v74 = (char *)v53 + v73;
    uint64_t v75 = (char *)v54 + v73;
    uint64_t v76 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
  }
  uint64_t v77 = a3[11];
  uint64_t v78 = a3[12];
  uint64_t v79 = (void *)(a1 + v77);
  uint64_t v80 = (void *)(a2 + v77);
  uint64_t v81 = v80[1];
  *uint64_t v79 = *v80;
  v79[1] = v81;
  uint64_t v82 = a1 + v78;
  uint64_t v83 = a2 + v78;
  uint64_t v84 = sub_253B07160();
  uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16);
  swift_bridgeObjectRetain();
  v85(v82, v83, v84);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoDialogType(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoDialogFormat(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v30 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_31;
          case 2u:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v30 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_31;
          case 3u:
          case 4u:
            uint64_t v18 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v8, v18);
            goto LABEL_32;
          case 5u:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v30 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_31;
          default:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v30 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_31:
            uint64_t v31 = *(int *)(v30 + 20);
            v180 = (char *)v8 + v31;
            v197 = (char *)v7 + v31;
            uint64_t v32 = sub_253B07160();
            uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v163(v197, v180, v32);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
            break;
        }
        goto LABEL_38;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
              v181 = (char *)v8 + v33;
              v198 = (char *)v7 + v33;
              uint64_t v34 = sub_253B07160();
              uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
              swift_bridgeObjectRetain();
              v164(v198, v181, v34);
              break;
            case 2u:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
              v182 = (char *)v8 + v35;
              v199 = (char *)v7 + v35;
              uint64_t v36 = sub_253B07160();
              uint64_t v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
              swift_bridgeObjectRetain();
              v165(v199, v182, v36);
              break;
            case 3u:
            case 4u:
              uint64_t v37 = sub_253B07160();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v7, v8, v37);
              break;
            case 5u:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
              v183 = (char *)v8 + v38;
              v200 = (char *)v7 + v38;
              uint64_t v39 = sub_253B07160();
              uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
              swift_bridgeObjectRetain();
              v166(v200, v183, v39);
              break;
            default:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
              uint64_t v178 = (char *)v8 + v21;
              v195 = (char *)v7 + v21;
              uint64_t v22 = sub_253B07160();
              uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
              swift_bridgeObjectRetain();
              v161(v195, v178, v22);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_38;
      }
      sub_2536FA73C();
    }
    uint64_t v20 = sub_253462A5C(&qword_269CE2050);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_38:
    uint64_t v40 = *(int *)(v9 + 20);
    uint64_t v41 = (char *)v7 + v40;
    uint64_t v42 = (char *)v8 + v40;
    uint64_t v43 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE2010);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_39;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CE2050);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v23 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_24;
      case 2u:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v23 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_24;
      case 3u:
      case 4u:
        uint64_t v19 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v8, v19);
        goto LABEL_25;
      case 5u:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v23 = type metadata accessor for TranscriptProtoCATDialog(0);
        goto LABEL_24;
      default:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v23 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_24:
        uint64_t v24 = *(int *)(v23 + 20);
        v179 = (char *)v8 + v24;
        v196 = (char *)v7 + v24;
        uint64_t v25 = sub_253B07160();
        uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v162(v196, v179, v25);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
        break;
    }
  }
  uint64_t v26 = *(int *)(v9 + 20);
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_39:
  uint64_t v44 = a3[8];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  int v47 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v44, 1, v9);
  int v48 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v9);
  if (!v47)
  {
    if (v48)
    {
      sub_2536FA73C();
      goto LABEL_45;
    }
    uint64_t v52 = type metadata accessor for TranscriptProtoDialogFormat(0);
    int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v52);
    int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v52);
    if (v53)
    {
      if (!v54)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            uint64_t v67 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_69;
          case 2u:
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            uint64_t v67 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_69;
          case 3u:
          case 4u:
            uint64_t v55 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v45, v46, v55);
            goto LABEL_70;
          case 5u:
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            uint64_t v67 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_69;
          default:
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            uint64_t v67 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_69:
            uint64_t v68 = *(int *)(v67 + 20);
            uint64_t v186 = (char *)v46 + v68;
            v203 = (char *)v45 + v68;
            uint64_t v69 = sub_253B07160();
            uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
            swift_bridgeObjectRetain();
            v169(v203, v186, v69);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v52);
            break;
        }
        goto LABEL_76;
      }
    }
    else
    {
      if (!v54)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v45 = *v46;
              v45[1] = v46[1];
              uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
              uint64_t v187 = (char *)v46 + v70;
              v204 = (char *)v45 + v70;
              uint64_t v71 = sub_253B07160();
              uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
              swift_bridgeObjectRetain();
              v170(v204, v187, v71);
              break;
            case 2u:
              *uint64_t v45 = *v46;
              v45[1] = v46[1];
              uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
              v188 = (char *)v46 + v72;
              v205 = (char *)v45 + v72;
              uint64_t v73 = sub_253B07160();
              uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
              swift_bridgeObjectRetain();
              v171(v205, v188, v73);
              break;
            case 3u:
            case 4u:
              uint64_t v74 = sub_253B07160();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v45, v46, v74);
              break;
            case 5u:
              *uint64_t v45 = *v46;
              v45[1] = v46[1];
              uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
              uint64_t v189 = (char *)v46 + v75;
              uint64_t v206 = (char *)v45 + v75;
              uint64_t v76 = sub_253B07160();
              uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
              swift_bridgeObjectRetain();
              v172(v206, v189, v76);
              break;
            default:
              *uint64_t v45 = *v46;
              v45[1] = v46[1];
              uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
              v184 = (char *)v46 + v58;
              v201 = (char *)v45 + v58;
              uint64_t v59 = sub_253B07160();
              uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
              swift_bridgeObjectRetain();
              v167(v201, v184, v59);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_76;
      }
      sub_2536FA73C();
    }
    uint64_t v57 = sub_253462A5C(&qword_269CE2050);
    memcpy(v45, v46, *(void *)(*(void *)(v57 - 8) + 64));
LABEL_76:
    uint64_t v77 = *(int *)(v9 + 20);
    uint64_t v78 = (char *)v45 + v77;
    uint64_t v79 = (char *)v46 + v77;
    uint64_t v80 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
    goto LABEL_77;
  }
  if (v48)
  {
LABEL_45:
    uint64_t v51 = sub_253462A5C(&qword_269CE2010);
    memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_77;
  }
  uint64_t v49 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v49))
  {
    uint64_t v50 = sub_253462A5C(&qword_269CE2050);
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        uint64_t v60 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_62;
      case 2u:
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        uint64_t v60 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_62;
      case 3u:
      case 4u:
        uint64_t v56 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v45, v46, v56);
        goto LABEL_63;
      case 5u:
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        uint64_t v60 = type metadata accessor for TranscriptProtoCATDialog(0);
        goto LABEL_62;
      default:
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        uint64_t v60 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_62:
        uint64_t v61 = *(int *)(v60 + 20);
        uint64_t v185 = (char *)v46 + v61;
        v202 = (char *)v45 + v61;
        uint64_t v62 = sub_253B07160();
        uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v168(v202, v185, v62);
LABEL_63:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v49);
        break;
    }
  }
  uint64_t v63 = *(int *)(v9 + 20);
  unint64_t v64 = (char *)v45 + v63;
  uint64_t v65 = (char *)v46 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v9);
LABEL_77:
  uint64_t v81 = a3[9];
  uint64_t v82 = (unsigned char *)(a1 + v81);
  uint64_t v83 = (unsigned char *)(a2 + v81);
  uint64_t v84 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
  int v85 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v84);
  int v86 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v84);
  if (v85)
  {
    if (!v86)
    {
      *uint64_t v82 = *v83;
      uint64_t v87 = *(int *)(v84 + 20);
      uint64_t v88 = &v82[v87];
      uint64_t v89 = &v83[v87];
      uint64_t v90 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v82, 0, 1, v84);
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (v86)
  {
    sub_2536FA73C();
LABEL_82:
    uint64_t v91 = sub_253462A5C(&qword_269CE2000);
    memcpy(v82, v83, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_83;
  }
  *uint64_t v82 = *v83;
  uint64_t v101 = *(int *)(v84 + 20);
  uint64_t v102 = &v82[v101];
  uint64_t v103 = &v83[v101];
  uint64_t v104 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
LABEL_83:
  uint64_t v92 = a3[10];
  uint64_t v93 = (uint64_t *)(a1 + v92);
  uint64_t v94 = (uint64_t *)(a2 + v92);
  uint64_t v95 = type metadata accessor for TranscriptProtoVisualOutput(0);
  int v96 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v93, 1, v95);
  int v97 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v95);
  if (!v96)
  {
    if (v97)
    {
      sub_2536FA73C();
      goto LABEL_89;
    }
    uint64_t v105 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    int v106 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v93, 1, v105);
    int v107 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v105);
    if (v106)
    {
      if (!v107)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v93 = *v94;
            v93[1] = v94[1];
            uint64_t v108 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_111;
          case 2u:
            uint64_t v128 = *v94;
            unint64_t v129 = v94[1];
            sub_25348A9C8(*v94, v129);
            *uint64_t v93 = v128;
            v93[1] = v129;
            uint64_t v130 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
            uint64_t v131 = (char *)v93 + v130;
            uint64_t v132 = (char *)v94 + v130;
            uint64_t v133 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
            goto LABEL_115;
          case 3u:
            uint64_t v134 = *v94;
            unint64_t v135 = v94[1];
            sub_25348A9C8(*v94, v135);
            *uint64_t v93 = v134;
            v93[1] = v135;
            v93[2] = v94[2];
            v93[3] = v94[3];
            uint64_t v127 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
            goto LABEL_114;
          default:
            *uint64_t v93 = *v94;
            v93[1] = v94[1];
            uint64_t v108 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_111:
            uint64_t v127 = *(int *)(v108 + 20);
LABEL_114:
            uint64_t v192 = (char *)v94 + v127;
            v209 = (char *)v93 + v127;
            uint64_t v136 = sub_253B07160();
            uint64_t v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
            swift_bridgeObjectRetain();
            v175(v209, v192, v136);
LABEL_115:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v105);
            break;
        }
        goto LABEL_120;
      }
    }
    else
    {
      if (!v107)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v93 = *v94;
              v93[1] = v94[1];
              uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0) + 20);
              v193 = (char *)v94 + v137;
              v210 = (char *)v93 + v137;
              uint64_t v138 = sub_253B07160();
              uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
              swift_bridgeObjectRetain();
              v176(v210, v193, v138);
              break;
            case 2u:
              uint64_t v139 = *v94;
              unint64_t v140 = v94[1];
              sub_25348A9C8(*v94, v140);
              *uint64_t v93 = v139;
              v93[1] = v140;
              uint64_t v141 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
              uint64_t v142 = (char *)v93 + v141;
              uint64_t v143 = (char *)v94 + v141;
              uint64_t v144 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
              break;
            case 3u:
              uint64_t v145 = *v94;
              unint64_t v146 = v94[1];
              sub_25348A9C8(*v94, v146);
              *uint64_t v93 = v145;
              v93[1] = v146;
              v93[2] = v94[2];
              v93[3] = v94[3];
              uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
              v194 = (char *)v94 + v147;
              v211 = (char *)v93 + v147;
              uint64_t v148 = sub_253B07160();
              uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
              swift_bridgeObjectRetain();
              v177(v211, v194, v148);
              break;
            default:
              *uint64_t v93 = *v94;
              v93[1] = v94[1];
              uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
              v191 = (char *)v94 + v125;
              v208 = (char *)v93 + v125;
              uint64_t v126 = sub_253B07160();
              uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
              swift_bridgeObjectRetain();
              v174(v208, v191, v126);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_120;
      }
      sub_2536FA73C();
    }
    uint64_t v110 = sub_253462A5C(&qword_269CDCC18);
    memcpy(v93, v94, *(void *)(*(void *)(v110 - 8) + 64));
LABEL_120:
    uint64_t v149 = *(int *)(v95 + 20);
    uint64_t v150 = (char *)v93 + v149;
    uint64_t v151 = (char *)v94 + v149;
    uint64_t v152 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 24))(v150, v151, v152);
    goto LABEL_121;
  }
  if (v97)
  {
LABEL_89:
    uint64_t v100 = sub_253462A5C(&qword_269CE1FF0);
    memcpy(v93, v94, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_121;
  }
  uint64_t v98 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v98))
  {
    uint64_t v99 = sub_253462A5C(&qword_269CDCC18);
    memcpy(v93, v94, *(void *)(*(void *)(v99 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v93 = *v94;
        v93[1] = v94[1];
        uint64_t v109 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_101;
      case 2u:
        uint64_t v112 = *v94;
        unint64_t v113 = v94[1];
        sub_25348A9C8(*v94, v113);
        *uint64_t v93 = v112;
        v93[1] = v113;
        uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
        uint64_t v115 = (char *)v93 + v114;
        uint64_t v116 = (char *)v94 + v114;
        uint64_t v117 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
        goto LABEL_105;
      case 3u:
        uint64_t v118 = *v94;
        unint64_t v119 = v94[1];
        sub_25348A9C8(*v94, v119);
        *uint64_t v93 = v118;
        v93[1] = v119;
        v93[2] = v94[2];
        v93[3] = v94[3];
        uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        goto LABEL_104;
      default:
        *uint64_t v93 = *v94;
        v93[1] = v94[1];
        uint64_t v109 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_101:
        uint64_t v111 = *(int *)(v109 + 20);
LABEL_104:
        uint64_t v190 = (char *)v94 + v111;
        v207 = (char *)v93 + v111;
        uint64_t v120 = sub_253B07160();
        uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
        swift_bridgeObjectRetain();
        v173(v207, v190, v120);
LABEL_105:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v98);
        break;
    }
  }
  uint64_t v121 = *(int *)(v95 + 20);
  uint64_t v122 = (char *)v93 + v121;
  uint64_t v123 = (char *)v94 + v121;
  uint64_t v124 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v95);
LABEL_121:
  uint64_t v153 = a3[11];
  uint64_t v154 = (void *)(a1 + v153);
  uint64_t v155 = (void *)(a2 + v153);
  *uint64_t v154 = *v155;
  v154[1] = v155[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v156 = a3[12];
  uint64_t v157 = a1 + v156;
  uint64_t v158 = a2 + v156;
  uint64_t v159 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 24))(v157, v158, v159);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoDialogType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE2010);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2050);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          _OWORD *v7 = *v8;
          uint64_t v14 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_11;
        case 2u:
          _OWORD *v7 = *v8;
          uint64_t v14 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_11;
        case 3u:
        case 4u:
          uint64_t v13 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
          goto LABEL_12;
        case 5u:
          _OWORD *v7 = *v8;
          uint64_t v14 = type metadata accessor for TranscriptProtoCATDialog(0);
          goto LABEL_11;
        default:
          _OWORD *v7 = *v8;
          uint64_t v14 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_11:
          uint64_t v15 = *(int *)(v14 + 20);
          int v16 = (char *)v7 + v15;
          int v17 = (char *)v8 + v15;
          uint64_t v18 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
          break;
      }
    }
    uint64_t v19 = *(int *)(v9 + 20);
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)v8 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = (_OWORD *)(a1 + v23);
  uint64_t v25 = (_OWORD *)(a2 + v23);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v23, 1, v9))
  {
    uint64_t v26 = sub_253462A5C(&qword_269CE2010);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v27))
    {
      uint64_t v28 = sub_253462A5C(&qword_269CE2050);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v24 = *v25;
          uint64_t v30 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_24;
        case 2u:
          *uint64_t v24 = *v25;
          uint64_t v30 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_24;
        case 3u:
        case 4u:
          uint64_t v29 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v29 - 8) + 32))(v24, v25, v29);
          goto LABEL_25;
        case 5u:
          *uint64_t v24 = *v25;
          uint64_t v30 = type metadata accessor for TranscriptProtoCATDialog(0);
          goto LABEL_24;
        default:
          *uint64_t v24 = *v25;
          uint64_t v30 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_24:
          uint64_t v31 = *(int *)(v30 + 20);
          uint64_t v32 = (char *)v24 + v31;
          uint64_t v33 = (char *)v25 + v31;
          uint64_t v34 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v27);
          break;
      }
    }
    uint64_t v35 = *(int *)(v9 + 20);
    uint64_t v36 = (char *)v24 + v35;
    uint64_t v37 = (char *)v25 + v35;
    uint64_t v38 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v9);
  }
  uint64_t v39 = a3[9];
  uint64_t v40 = (unsigned char *)(a1 + v39);
  uint64_t v41 = (unsigned char *)(a2 + v39);
  uint64_t v42 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
  {
    uint64_t v43 = sub_253462A5C(&qword_269CE2000);
    memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    unsigned char *v40 = *v41;
    uint64_t v44 = *(int *)(v42 + 20);
    uint64_t v45 = &v40[v44];
    uint64_t v46 = &v41[v44];
    uint64_t v47 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
  }
  uint64_t v48 = a3[10];
  uint64_t v49 = (_OWORD *)(a1 + v48);
  uint64_t v50 = (_OWORD *)(a2 + v48);
  uint64_t v51 = type metadata accessor for TranscriptProtoVisualOutput(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51))
  {
    uint64_t v52 = sub_253462A5C(&qword_269CE1FF0);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    uint64_t v53 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v53))
    {
      uint64_t v54 = sub_253462A5C(&qword_269CDCC18);
      memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v49 = *v50;
          uint64_t v55 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
          goto LABEL_38;
        case 2u:
          *uint64_t v49 = *v50;
          uint64_t v55 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
          goto LABEL_38;
        case 3u:
          long long v57 = v50[1];
          *uint64_t v49 = *v50;
          v49[1] = v57;
          uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
          goto LABEL_40;
        default:
          *uint64_t v49 = *v50;
          uint64_t v55 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_38:
          uint64_t v56 = *(int *)(v55 + 20);
LABEL_40:
          uint64_t v58 = (char *)v49 + v56;
          uint64_t v59 = (char *)v50 + v56;
          uint64_t v60 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v53);
          break;
      }
    }
    uint64_t v61 = *(int *)(v51 + 20);
    uint64_t v62 = (char *)v49 + v61;
    uint64_t v63 = (char *)v50 + v61;
    uint64_t v64 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
  }
  uint64_t v65 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v66 = a1 + v65;
  uint64_t v67 = a2 + v65;
  uint64_t v68 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoDialogType(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoDialogFormat(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            _OWORD *v7 = *v8;
            uint64_t v34 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_31;
          case 2u:
            _OWORD *v7 = *v8;
            uint64_t v34 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_31;
          case 3u:
          case 4u:
            uint64_t v18 = sub_253B07160();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
            goto LABEL_32;
          case 5u:
            _OWORD *v7 = *v8;
            uint64_t v34 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_31;
          default:
            _OWORD *v7 = *v8;
            uint64_t v34 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_31:
            uint64_t v35 = *(int *)(v34 + 20);
            uint64_t v36 = (char *)v7 + v35;
            uint64_t v37 = (char *)v8 + v35;
            uint64_t v38 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
            break;
        }
        goto LABEL_38;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              _OWORD *v7 = *v8;
              uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
              uint64_t v40 = (char *)v7 + v39;
              uint64_t v41 = (char *)v8 + v39;
              uint64_t v42 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
              break;
            case 2u:
              _OWORD *v7 = *v8;
              uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
              uint64_t v44 = (char *)v7 + v43;
              uint64_t v45 = (char *)v8 + v43;
              uint64_t v46 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
              break;
            case 3u:
            case 4u:
              uint64_t v47 = sub_253B07160();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v47 - 8) + 32))(v7, v8, v47);
              break;
            case 5u:
              _OWORD *v7 = *v8;
              uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
              uint64_t v49 = (char *)v7 + v48;
              uint64_t v50 = (char *)v8 + v48;
              uint64_t v51 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
              break;
            default:
              _OWORD *v7 = *v8;
              uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
              uint64_t v22 = (char *)v7 + v21;
              uint64_t v23 = (char *)v8 + v21;
              uint64_t v24 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_38;
      }
      sub_2536FA73C();
    }
    uint64_t v20 = sub_253462A5C(&qword_269CE2050);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_38:
    uint64_t v52 = *(int *)(v9 + 20);
    uint64_t v53 = (char *)v7 + v52;
    uint64_t v54 = (char *)v8 + v52;
    uint64_t v55 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 40))(v53, v54, v55);
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE2010);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_39;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CE2050);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        _OWORD *v7 = *v8;
        uint64_t v25 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_24;
      case 2u:
        _OWORD *v7 = *v8;
        uint64_t v25 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_24;
      case 3u:
      case 4u:
        uint64_t v19 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_25;
      case 5u:
        _OWORD *v7 = *v8;
        uint64_t v25 = type metadata accessor for TranscriptProtoCATDialog(0);
        goto LABEL_24;
      default:
        _OWORD *v7 = *v8;
        uint64_t v25 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_24:
        uint64_t v26 = *(int *)(v25 + 20);
        uint64_t v27 = (char *)v7 + v26;
        uint64_t v28 = (char *)v8 + v26;
        uint64_t v29 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
        break;
    }
  }
  uint64_t v30 = *(int *)(v9 + 20);
  uint64_t v31 = (char *)v7 + v30;
  uint64_t v32 = (char *)v8 + v30;
  uint64_t v33 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_39:
  uint64_t v56 = a3[8];
  long long v57 = (_OWORD *)(a1 + v56);
  uint64_t v58 = (_OWORD *)(a2 + v56);
  int v59 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v56, 1, v9);
  int v60 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v9);
  if (!v59)
  {
    if (v60)
    {
      sub_2536FA73C();
      goto LABEL_45;
    }
    uint64_t v64 = type metadata accessor for TranscriptProtoDialogFormat(0);
    int v65 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v64);
    int v66 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v64);
    if (v65)
    {
      if (!v66)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *long long v57 = *v58;
            uint64_t v83 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_69;
          case 2u:
            *long long v57 = *v58;
            uint64_t v83 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_69;
          case 3u:
          case 4u:
            uint64_t v67 = sub_253B07160();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v67 - 8) + 32))(v57, v58, v67);
            goto LABEL_70;
          case 5u:
            *long long v57 = *v58;
            uint64_t v83 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_69;
          default:
            *long long v57 = *v58;
            uint64_t v83 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_69:
            uint64_t v84 = *(int *)(v83 + 20);
            int v85 = (char *)v57 + v84;
            int v86 = (char *)v58 + v84;
            uint64_t v87 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v64);
            break;
        }
        goto LABEL_76;
      }
    }
    else
    {
      if (!v66)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *long long v57 = *v58;
              uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
              uint64_t v89 = (char *)v57 + v88;
              uint64_t v90 = (char *)v58 + v88;
              uint64_t v91 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
              break;
            case 2u:
              *long long v57 = *v58;
              uint64_t v92 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
              uint64_t v93 = (char *)v57 + v92;
              uint64_t v94 = (char *)v58 + v92;
              uint64_t v95 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
              break;
            case 3u:
            case 4u:
              uint64_t v96 = sub_253B07160();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v96 - 8) + 32))(v57, v58, v96);
              break;
            case 5u:
              *long long v57 = *v58;
              uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
              uint64_t v98 = (char *)v57 + v97;
              uint64_t v99 = (char *)v58 + v97;
              uint64_t v100 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
              break;
            default:
              *long long v57 = *v58;
              uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
              uint64_t v71 = (char *)v57 + v70;
              uint64_t v72 = (char *)v58 + v70;
              uint64_t v73 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_76;
      }
      sub_2536FA73C();
    }
    uint64_t v69 = sub_253462A5C(&qword_269CE2050);
    memcpy(v57, v58, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_76:
    uint64_t v101 = *(int *)(v9 + 20);
    uint64_t v102 = (char *)v57 + v101;
    uint64_t v103 = (char *)v58 + v101;
    uint64_t v104 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 40))(v102, v103, v104);
    goto LABEL_77;
  }
  if (v60)
  {
LABEL_45:
    uint64_t v63 = sub_253462A5C(&qword_269CE2010);
    memcpy(v57, v58, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_77;
  }
  uint64_t v61 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v61))
  {
    uint64_t v62 = sub_253462A5C(&qword_269CE2050);
    memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *long long v57 = *v58;
        uint64_t v74 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_62;
      case 2u:
        *long long v57 = *v58;
        uint64_t v74 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_62;
      case 3u:
      case 4u:
        uint64_t v68 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v68 - 8) + 32))(v57, v58, v68);
        goto LABEL_63;
      case 5u:
        *long long v57 = *v58;
        uint64_t v74 = type metadata accessor for TranscriptProtoCATDialog(0);
        goto LABEL_62;
      default:
        *long long v57 = *v58;
        uint64_t v74 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_62:
        uint64_t v75 = *(int *)(v74 + 20);
        uint64_t v76 = (char *)v57 + v75;
        uint64_t v77 = (char *)v58 + v75;
        uint64_t v78 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
LABEL_63:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v61);
        break;
    }
  }
  uint64_t v79 = *(int *)(v9 + 20);
  uint64_t v80 = (char *)v57 + v79;
  uint64_t v81 = (char *)v58 + v79;
  uint64_t v82 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v9);
LABEL_77:
  uint64_t v105 = a3[9];
  int v106 = (unsigned char *)(a1 + v105);
  int v107 = (unsigned char *)(a2 + v105);
  uint64_t v108 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
  int v109 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v106, 1, v108);
  int v110 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v107, 1, v108);
  if (v109)
  {
    if (!v110)
    {
      *int v106 = *v107;
      uint64_t v111 = *(int *)(v108 + 20);
      uint64_t v112 = &v106[v111];
      unint64_t v113 = &v107[v111];
      uint64_t v114 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v106, 0, 1, v108);
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (v110)
  {
    sub_2536FA73C();
LABEL_82:
    uint64_t v115 = sub_253462A5C(&qword_269CE2000);
    memcpy(v106, v107, *(void *)(*(void *)(v115 - 8) + 64));
    goto LABEL_83;
  }
  *int v106 = *v107;
  uint64_t v125 = *(int *)(v108 + 20);
  uint64_t v126 = &v106[v125];
  uint64_t v127 = &v107[v125];
  uint64_t v128 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v128 - 8) + 40))(v126, v127, v128);
LABEL_83:
  uint64_t v116 = a3[10];
  uint64_t v117 = (_OWORD *)(a1 + v116);
  uint64_t v118 = (_OWORD *)(a2 + v116);
  uint64_t v119 = type metadata accessor for TranscriptProtoVisualOutput(0);
  int v120 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v117, 1, v119);
  int v121 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119);
  if (!v120)
  {
    if (v121)
    {
      sub_2536FA73C();
      goto LABEL_89;
    }
    uint64_t v129 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    int v130 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v117, 1, v129);
    int v131 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v129);
    if (v130)
    {
      if (!v131)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v117 = *v118;
            uint64_t v132 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_111;
          case 2u:
            *uint64_t v117 = *v118;
            uint64_t v132 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
            goto LABEL_111;
          case 3u:
            long long v149 = v118[1];
            *uint64_t v117 = *v118;
            v117[1] = v149;
            uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
            goto LABEL_113;
          default:
            *uint64_t v117 = *v118;
            uint64_t v132 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_111:
            uint64_t v148 = *(int *)(v132 + 20);
LABEL_113:
            uint64_t v150 = (char *)v117 + v148;
            uint64_t v151 = (char *)v118 + v148;
            uint64_t v152 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v150, v151, v152);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v117, 0, 1, v129);
            break;
        }
        goto LABEL_118;
      }
    }
    else
    {
      if (!v131)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v117 = *v118;
              uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0) + 20);
              uint64_t v154 = (char *)v117 + v153;
              uint64_t v155 = (char *)v118 + v153;
              uint64_t v156 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
              break;
            case 2u:
              *uint64_t v117 = *v118;
              uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
              uint64_t v158 = (char *)v117 + v157;
              uint64_t v159 = (char *)v118 + v157;
              uint64_t v160 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v158, v159, v160);
              break;
            case 3u:
              long long v161 = v118[1];
              *uint64_t v117 = *v118;
              v117[1] = v161;
              uint64_t v162 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
              uint64_t v163 = (char *)v117 + v162;
              uint64_t v164 = (char *)v118 + v162;
              uint64_t v165 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
              break;
            default:
              *uint64_t v117 = *v118;
              uint64_t v144 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
              uint64_t v145 = (char *)v117 + v144;
              unint64_t v146 = (char *)v118 + v144;
              uint64_t v147 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v145, v146, v147);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_118;
      }
      sub_2536FA73C();
    }
    uint64_t v134 = sub_253462A5C(&qword_269CDCC18);
    memcpy(v117, v118, *(void *)(*(void *)(v134 - 8) + 64));
LABEL_118:
    uint64_t v166 = *(int *)(v119 + 20);
    uint64_t v167 = (char *)v117 + v166;
    uint64_t v168 = (char *)v118 + v166;
    uint64_t v169 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 40))(v167, v168, v169);
    goto LABEL_119;
  }
  if (v121)
  {
LABEL_89:
    uint64_t v124 = sub_253462A5C(&qword_269CE1FF0);
    memcpy(v117, v118, *(void *)(*(void *)(v124 - 8) + 64));
    goto LABEL_119;
  }
  uint64_t v122 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v122))
  {
    uint64_t v123 = sub_253462A5C(&qword_269CDCC18);
    memcpy(v117, v118, *(void *)(*(void *)(v123 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v117 = *v118;
        uint64_t v133 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_102;
      case 2u:
        *uint64_t v117 = *v118;
        uint64_t v133 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
        goto LABEL_102;
      case 3u:
        long long v136 = v118[1];
        *uint64_t v117 = *v118;
        v117[1] = v136;
        uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        goto LABEL_104;
      default:
        *uint64_t v117 = *v118;
        uint64_t v133 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_102:
        uint64_t v135 = *(int *)(v133 + 20);
LABEL_104:
        uint64_t v137 = (char *)v117 + v135;
        uint64_t v138 = (char *)v118 + v135;
        uint64_t v139 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v117, 0, 1, v122);
        break;
    }
  }
  uint64_t v140 = *(int *)(v119 + 20);
  uint64_t v141 = (char *)v117 + v140;
  uint64_t v142 = (char *)v118 + v140;
  uint64_t v143 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v141, v142, v143);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v117, 0, 1, v119);
LABEL_119:
  uint64_t v170 = a3[11];
  uint64_t v171 = (void *)(a1 + v170);
  uint64_t v172 = (uint64_t *)(a2 + v170);
  uint64_t v174 = *v172;
  uint64_t v173 = v172[1];
  *uint64_t v171 = v174;
  v171[1] = v173;
  swift_bridgeObjectRelease();
  uint64_t v175 = a3[12];
  uint64_t v176 = a1 + v175;
  uint64_t v177 = a2 + v175;
  uint64_t v178 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v178 - 8) + 40))(v176, v177, v178);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253887098);
}

uint64_t sub_253887098()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE2010);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253462A5C(&qword_269CE2000);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_253945148();
    }
    else
    {
      sub_253462A5C(&qword_269CE1FF0);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_2539455B8();
      }
      else
      {
        sub_253B07160();
        sub_2539462E4();
      }
    }
  }
  uint64_t v8 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388718C);
}

void sub_25388718C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE2010);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253462A5C(&qword_269CE2000);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_25394519C();
      }
      else
      {
        sub_253462A5C(&qword_269CE1FF0);
        sub_2535782A8();
        if (*(_DWORD *)(v5 + 84) == v0)
        {
          sub_253945614();
        }
        else
        {
          sub_253B07160();
          sub_253946304();
        }
      }
    }
    uint64_t v6 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_253887268()
{
  sub_253760A08(319, &qword_26B2494D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249A40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutputOptions);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249648, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVisualOutputOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253887434);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVisualOutputOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388744C);
}

uint64_t sub_253887450()
{
  return sub_25393E9BC();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoVisualOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCC18);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v12 = a2[1];
          *a1 = *a2;
          a1[1] = v12;
          uint64_t v11 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
          goto LABEL_8;
        case 2u:
          uint64_t v14 = *a2;
          unint64_t v15 = a2[1];
          sub_25348A9C8(*a2, v15);
          *a1 = v14;
          a1[1] = v15;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
          int v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          goto LABEL_12;
        case 3u:
          uint64_t v20 = *a2;
          unint64_t v21 = a2[1];
          sub_25348A9C8(*a2, v21);
          *a1 = v20;
          a1[1] = v21;
          uint64_t v22 = a2[3];
          a1[2] = a2[2];
          a1[3] = v22;
          uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
          goto LABEL_11;
        default:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          uint64_t v11 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_8:
          uint64_t v13 = *(int *)(v11 + 20);
LABEL_11:
          uint64_t v31 = (char *)a1 + v13;
          uint64_t v23 = (char *)a2 + v13;
          uint64_t v24 = sub_253B07160();
          uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          v25(v31, v23, v24);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
          break;
      }
    }
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoVisualOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
        goto LABEL_6;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_6;
      case 2u:
        sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
        uint64_t v5 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
LABEL_6:
        uint64_t v6 = *(int *)(v5 + 20);
        goto LABEL_8;
      case 3u:
        sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
        swift_bridgeObjectRelease();
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
LABEL_8:
        uint64_t v7 = a1 + v6;
        uint64_t v8 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for TranscriptProtoVisualOutput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC18);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v9 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_6;
      case 2u:
        uint64_t v12 = *a2;
        unint64_t v13 = a2[1];
        sub_25348A9C8(*a2, v13);
        *a1 = v12;
        a1[1] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
        unint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        goto LABEL_10;
      case 3u:
        uint64_t v18 = *a2;
        unint64_t v19 = a2[1];
        sub_25348A9C8(*a2, v19);
        *a1 = v18;
        a1[1] = v19;
        uint64_t v20 = a2[3];
        a1[2] = a2[2];
        a1[3] = v20;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        goto LABEL_9;
      default:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_6:
        uint64_t v11 = *(int *)(v9 + 20);
LABEL_9:
        uint64_t v29 = (char *)a1 + v11;
        unint64_t v21 = (char *)a2 + v11;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v29, v21, v22);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        break;
    }
  }
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoVisualOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0) + 20);
          unint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          break;
        case 2u:
          uint64_t v25 = *a2;
          unint64_t v26 = a2[1];
          sub_25348A9C8(*a2, v26);
          *a1 = v25;
          a1[1] = v26;
          uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
          break;
        case 3u:
          uint64_t v31 = *a2;
          unint64_t v32 = a2[1];
          sub_25348A9C8(*a2, v32);
          *a1 = v31;
          a1[1] = v32;
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = (char *)a2 + v33;
          uint64_t v36 = sub_253B07160();
          uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v37(v34, v35, v36);
          break;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          uint64_t v12 = sub_253B07160();
          unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_19;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CDCC18);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_19;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0) + 20);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = sub_253B07160();
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        break;
      case 2u:
        uint64_t v43 = *a2;
        unint64_t v44 = a2[1];
        sub_25348A9C8(*a2, v44);
        *a1 = v43;
        a1[1] = v44;
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        break;
      case 3u:
        uint64_t v49 = *a2;
        unint64_t v50 = a2[1];
        sub_25348A9C8(*a2, v50);
        *a1 = v49;
        a1[1] = v50;
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = sub_253B07160();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v52, v53, v54);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        unint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  uint64_t v56 = *(int *)(a3 + 20);
  long long v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoVisualOutput(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC18);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_7;
      case 2u:
        *a1 = *a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
        goto LABEL_7;
      case 3u:
        long long v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        goto LABEL_9;
      default:
        *a1 = *a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_7:
        uint64_t v9 = *(int *)(v8 + 20);
LABEL_9:
        uint64_t v11 = (char *)a1 + v9;
        uint64_t v12 = (char *)a2 + v9;
        uint64_t v13 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        break;
    }
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoVisualOutput(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v9 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
          goto LABEL_13;
        case 2u:
          *a1 = *a2;
          uint64_t v9 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
          goto LABEL_13;
        case 3u:
          long long v16 = a2[1];
          *a1 = *a2;
          a1[1] = v16;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
          goto LABEL_15;
        default:
          *a1 = *a2;
          uint64_t v9 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_13:
          uint64_t v15 = *(int *)(v9 + 20);
LABEL_15:
          uint64_t v17 = (char *)a1 + v15;
          uint64_t v18 = (char *)a2 + v15;
          uint64_t v19 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          break;
      }
      goto LABEL_20;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CDCC18);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_20;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0) + 20);
        unint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
        uint64_t v25 = (char *)a1 + v24;
        unint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        break;
      case 3u:
        long long v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      default:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_20:
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVisualOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538886C8);
}

uint64_t sub_2538886C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CDCC18);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVisualOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538886E8);
}

uint64_t sub_2538886E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CDCC18);
}

void sub_2538886F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoVisualOutputType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0) + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253B07160();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        break;
      case 2u:
        uint64_t v13 = *a2;
        unint64_t v14 = a2[1];
        sub_25348A9C8(*a2, v14);
        *a1 = v13;
        a1[1] = v14;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
        long long v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        break;
      case 3u:
        uint64_t v19 = *a2;
        unint64_t v20 = a2[1];
        sub_25348A9C8(*a2, v20);
        *a1 = v19;
        a1[1] = v20;
        uint64_t v21 = a2[3];
        a1[2] = a2[2];
        a1[3] = v21;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_253B07160();
        unint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
        int v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253B07160();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoVisualOutputType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
      goto LABEL_5;
    case 2:
      sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
      uint64_t v3 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
LABEL_5:
      uint64_t v4 = *(int *)(v3 + 20);
      goto LABEL_7;
    case 3:
      sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
      swift_bridgeObjectRelease();
      uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
LABEL_7:
      uint64_t v5 = a1 + v4;
      uint64_t v6 = sub_253B07160();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t result = v7(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for TranscriptProtoVisualOutputType(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
      goto LABEL_6;
    case 2u:
      uint64_t v6 = *a2;
      unint64_t v7 = a2[1];
      sub_25348A9C8(*a2, v7);
      *a1 = v6;
      a1[1] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      goto LABEL_8;
    case 3u:
      uint64_t v12 = *a2;
      unint64_t v13 = a2[1];
      sub_25348A9C8(*a2, v13);
      *a1 = v12;
      a1[1] = v13;
      uint64_t v14 = a2[3];
      a1[2] = a2[2];
      a1[3] = v14;
      uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
      goto LABEL_7;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_6:
      uint64_t v15 = *(int *)(v5 + 20);
LABEL_7:
      uint64_t v17 = (char *)a1 + v15;
      uint64_t v18 = (char *)a2 + v15;
      uint64_t v19 = sub_253B07160();
      unint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t *assignWithCopy for TranscriptProtoVisualOutputType(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v4 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_5;
      case 2u:
        uint64_t v6 = *a2;
        unint64_t v7 = a2[1];
        sub_25348A9C8(*a2, v7);
        *a1 = v6;
        a1[1] = v7;
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        goto LABEL_9;
      case 3u:
        uint64_t v12 = *a2;
        unint64_t v13 = a2[1];
        sub_25348A9C8(*a2, v13);
        *a1 = v12;
        a1[1] = v13;
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        goto LABEL_8;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v4 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_5:
        uint64_t v5 = *(int *)(v4 + 20);
LABEL_8:
        uint64_t v14 = (char *)a1 + v5;
        uint64_t v15 = (char *)a2 + v5;
        uint64_t v16 = sub_253B07160();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoVisualOutputType(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v4 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
      goto LABEL_6;
    case 2u:
      *a1 = *a2;
      uint64_t v4 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
      goto LABEL_6;
    case 3u:
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
      goto LABEL_7;
    default:
      *a1 = *a2;
      uint64_t v4 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_6:
      uint64_t v6 = *(int *)(v4 + 20);
LABEL_7:
      unint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

_OWORD *assignWithTake for TranscriptProtoVisualOutputType(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v4 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_6;
      case 2u:
        *a1 = *a2;
        uint64_t v4 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
        goto LABEL_6;
      case 3u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
        goto LABEL_8;
      default:
        *a1 = *a2;
        uint64_t v4 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_6:
        uint64_t v5 = *(int *)(v4 + 20);
LABEL_8:
        unint64_t v7 = (char *)a1 + v5;
        uint64_t v8 = (char *)a2 + v5;
        uint64_t v9 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_2538890E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538506D8(a1, a2, a3, (uint64_t)type metadata accessor for TranscriptProtoLiveActivityOutputPayload, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLiveActivityOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388914C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLiveActivityOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253889164);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInAppResponseOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388917C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInAppResponseOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253889194);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemSnippetOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538891C0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemSnippetOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538891D8);
}

uint64_t sub_2538891DC()
{
  return sub_25393E9BC();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPluginSnippetOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253889214);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPluginSnippetOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388922C);
}

uint64_t sub_253889230()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDialogType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2050);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = a2[1];
          *a1 = *a2;
          a1[1] = v16;
          uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = sub_253B07160();
          uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v18, v19, v20);
          break;
        case 2u:
          uint64_t v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (char *)a2 + v23;
          uint64_t v26 = sub_253B07160();
          uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v24, v25, v26);
          break;
        case 3u:
        case 4u:
          uint64_t v28 = sub_253B07160();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
          break;
        case 5u:
          uint64_t v29 = a2[1];
          *a1 = *a2;
          a1[1] = v29;
          uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = (char *)a2 + v30;
          uint64_t v33 = sub_253B07160();
          uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v31, v32, v33);
          break;
        default:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
          uint64_t v12 = (char *)a1 + v11;
          unint64_t v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B07160();
          uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v35 = *(int *)(a3 + 20);
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoDialogType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoStaticText(0);
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_8;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_8;
      case 3u:
      case 4u:
        uint64_t v5 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        break;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoCATDialog(0);
LABEL_8:
        uint64_t v7 = a1 + *(int *)(v6 + 20);
        uint64_t v8 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for TranscriptProtoDialogType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2050);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
      case 2u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_253B07160();
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        break;
      case 3u:
      case 4u:
        uint64_t v26 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        break;
      case 5u:
        uint64_t v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253B07160();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        break;
      default:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  return a1;
}

void *assignWithCopy for TranscriptProtoDialogType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          break;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
          uint64_t v26 = (char *)a1 + v25;
          uint64_t v27 = (char *)a2 + v25;
          uint64_t v28 = sub_253B07160();
          uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
          break;
        case 3u:
        case 4u:
          uint64_t v30 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
          break;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
          uint64_t v32 = (char *)a1 + v31;
          uint64_t v33 = (char *)a2 + v31;
          uint64_t v34 = sub_253B07160();
          uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          v35(v32, v33, v34);
          break;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          uint64_t v12 = sub_253B07160();
          unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE2050);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_253B07160();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = sub_253B07160();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
        break;
      case 3u:
      case 4u:
        uint64_t v46 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_253B07160();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  uint64_t v52 = *(int *)(a3 + 20);
  uint64_t v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoDialogType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2050);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_9;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_9;
      case 3u:
      case 4u:
        uint64_t v8 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_10;
      case 5u:
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoCATDialog(0);
        goto LABEL_9;
      default:
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_9:
        uint64_t v10 = *(int *)(v9 + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        break;
    }
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoDialogType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v15 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_15;
        case 2u:
          *a1 = *a2;
          uint64_t v15 = type metadata accessor for TranscriptProtoGeneratedText(0);
          goto LABEL_15;
        case 3u:
        case 4u:
          uint64_t v9 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
          goto LABEL_16;
        case 5u:
          *a1 = *a2;
          uint64_t v15 = type metadata accessor for TranscriptProtoCATDialog(0);
          goto LABEL_15;
        default:
          *a1 = *a2;
          uint64_t v15 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_15:
          uint64_t v16 = *(int *)(v15 + 20);
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          break;
      }
      goto LABEL_22;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CE2050);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        break;
      case 3u:
      case 4u:
        uint64_t v28 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      default:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_22:
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDialogType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388A99C);
}

uint64_t sub_25388A99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2050);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDialogType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388A9BC);
}

uint64_t sub_25388A9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2050);
}

void sub_25388A9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDialogFormat(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        break;
      case 2u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        break;
      case 3u:
      case 4u:
        uint64_t v25 = sub_253B07160();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        break;
      case 5u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
        int v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253B07160();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoDialogFormat(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoStaticText(0);
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoSonicText(0);
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoGeneratedText(0);
      goto LABEL_6;
    case 3:
    case 4:
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoCATDialog(0);
LABEL_6:
      a1 += *(int *)(v3 + 20);
LABEL_7:
      uint64_t v4 = sub_253B07160();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(a1, v4);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoDialogFormat(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      break;
    case 2u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      break;
    case 3u:
    case 4u:
      uint64_t v22 = sub_253B07160();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      break;
    case 5u:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_253B07160();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_253B07160();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoDialogFormat(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        break;
      case 3u:
      case 4u:
        uint64_t v19 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_253B07160();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoDialogFormat(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for TranscriptProtoSonicText(0);
      goto LABEL_7;
    case 2u:
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for TranscriptProtoGeneratedText(0);
      goto LABEL_7;
    case 3u:
    case 4u:
      uint64_t v4 = sub_253B07160();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      goto LABEL_8;
    case 5u:
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for TranscriptProtoCATDialog(0);
      goto LABEL_7;
    default:
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_7:
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

_OWORD *assignWithTake for TranscriptProtoDialogFormat(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v5 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_8;
      case 2u:
        *a1 = *a2;
        uint64_t v5 = type metadata accessor for TranscriptProtoGeneratedText(0);
        goto LABEL_8;
      case 3u:
      case 4u:
        uint64_t v4 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        uint64_t v5 = type metadata accessor for TranscriptProtoCATDialog(0);
        goto LABEL_8;
      default:
        *a1 = *a2;
        uint64_t v5 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_8:
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_25388B740()
{
  uint64_t result = type metadata accessor for TranscriptProtoStaticText(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoSonicText(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoGeneratedText(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_253B07160();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoCATDialog(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStaticText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388B8CC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStaticText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388B8E4);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCATDialog(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388B8FC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCATDialog(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388B914);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSonicText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388B92C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSonicText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388B944);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoGeneratedText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388B95C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoGeneratedText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388B974);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUnableToGenerate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C9C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUnableToGenerate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C44);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSuppressed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CA0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSuppressed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C48);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoResponseManifest(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v13;
      uint64_t v14 = v10[3];
      v9[2] = v10[2];
      v9[3] = v14;
      uint64_t v15 = v10[5];
      v9[4] = v10[4];
      v9[5] = v15;
      uint64_t v16 = v10[7];
      v9[6] = v10[6];
      v9[7] = v16;
      uint64_t v17 = *(int *)(v11 + 32);
      uint64_t v84 = (char *)v10 + v17;
      __dsta = (char *)v9 + v17;
      uint64_t v18 = sub_253B07160();
      uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v81(__dsta, v84, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = a3[6];
    uint64_t v20 = (void *)((char *)v7 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v24;
      uint64_t v25 = *(int *)(v22 + 24);
      __dst = (char *)v20 + v25;
      uint64_t v26 = (char *)v21 + v25;
      uint64_t v27 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = sub_253462A5C(&qword_269CE04C0);
        memcpy(__dst, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        unsigned char *__dst = *v26;
        uint64_t v29 = *(int *)(v27 + 20);
        uint64_t v30 = &__dst[v29];
        uint64_t v31 = &v26[v29];
        uint64_t v32 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v27);
      }
      uint64_t v33 = *(int *)(v22 + 28);
      uint64_t v34 = (char *)v20 + v33;
      uint64_t v35 = (char *)v21 + v33;
      uint64_t v36 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v37 = a3[7];
    uint64_t v38 = a3[8];
    uint64_t v39 = (void *)((char *)v7 + v37);
    uint64_t v40 = (void *)((char *)a2 + v37);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = (void *)((char *)v7 + v38);
    uint64_t v43 = (void *)((char *)a2 + v38);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = a3[10];
    *((unsigned char *)v7 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v7 + v45) = *((unsigned char *)a2 + v45);
    uint64_t v46 = a3[11];
    uint64_t v47 = (void *)((char *)v7 + v46);
    uint64_t v48 = (void *)((char *)a2 + v46);
    uint64_t v49 = type metadata accessor for TranscriptProtoUIType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
    {
      uint64_t v50 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      uint64_t v51 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v51))
      {
        uint64_t v52 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v59 = v48[1];
            *uint64_t v47 = *v48;
            v47[1] = v59;
            uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_20;
          case 2u:
            uint64_t v61 = *v48;
            unint64_t v62 = v48[1];
            sub_25348A9C8(*v48, v62);
            *uint64_t v47 = v61;
            v47[1] = v62;
            uint64_t v63 = v48[3];
            v47[2] = v48[2];
            v47[3] = v63;
            uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_20:
            int v86 = (char *)v48 + v60;
            __dstb = (char *)v47 + v60;
            uint64_t v64 = sub_253B07160();
            uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
            swift_bridgeObjectRetain();
            v83(__dstb, v86, v64);
            break;
          case 3u:
            uint64_t v65 = *v48;
            unint64_t v66 = v48[1];
            sub_25348A9C8(*v48, v66);
            *uint64_t v47 = v65;
            v47[1] = v66;
            uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            uint64_t v68 = (char *)v47 + v67;
            uint64_t v69 = (char *)v48 + v67;
            uint64_t v70 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
            break;
          default:
            uint64_t v53 = *v48;
            unint64_t v54 = v48[1];
            sub_25348A9C8(*v48, v54);
            *uint64_t v47 = v53;
            v47[1] = v54;
            uint64_t v55 = v48[3];
            v47[2] = v48[2];
            v47[3] = v55;
            uint64_t v56 = v48[5];
            v47[4] = v48[4];
            v47[5] = v56;
            uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            uint64_t v82 = (char *)v48 + v57;
            int v85 = (char *)v47 + v57;
            uint64_t v58 = sub_253B07160();
            uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v80(v85, v82, v58);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v51);
      }
      uint64_t v71 = *(int *)(v49 + 20);
      uint64_t v72 = (char *)v47 + v71;
      uint64_t v73 = (char *)v48 + v71;
      uint64_t v74 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
    }
    uint64_t v75 = a3[12];
    uint64_t v76 = (char *)v7 + v75;
    uint64_t v77 = (char *)a2 + v75;
    uint64_t v78 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoResponseManifest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TranscriptProtoResponseDialog(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 32);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 24);
    uint64_t v11 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
    {
      uint64_t v12 = v10 + *(int *)(v11 + 20);
      uint64_t v13 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v8 + *(int *)(v9 + 28);
    uint64_t v15 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[11];
  uint64_t v17 = type metadata accessor for TranscriptProtoUIType(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v17))
  {
    uint64_t v18 = type metadata accessor for TranscriptProtoUitype(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v18))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          sub_253487D84(*(void *)v16, *(void *)(v16 + 8));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
          goto LABEL_15;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v20 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
          goto LABEL_14;
        case 2u:
          sub_253487D84(*(void *)v16, *(void *)(v16 + 8));
          swift_bridgeObjectRelease();
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
          goto LABEL_15;
        case 3u:
          sub_253487D84(*(void *)v16, *(void *)(v16 + 8));
          uint64_t v20 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_14:
          uint64_t v19 = *(int *)(v20 + 20);
LABEL_15:
          uint64_t v21 = v16 + v19;
          uint64_t v22 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
          break;
        default:
          break;
      }
    }
    uint64_t v23 = v16 + *(int *)(v17 + 20);
    uint64_t v24 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  }
  uint64_t v25 = a1 + a2[12];
  uint64_t v26 = sub_253B07160();
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
  return v27(v25, v26);
}

void *initializeWithCopy for TranscriptProtoResponseManifest(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = v8[1];
    void *v7 = *v8;
    v7[1] = v11;
    uint64_t v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    uint64_t v13 = v8[5];
    v7[4] = v8[4];
    v7[5] = v13;
    uint64_t v14 = v8[7];
    v7[6] = v8[6];
    v7[7] = v14;
    uint64_t v15 = *(int *)(v9 + 32);
    uint64_t v82 = (char *)v8 + v15;
    int v85 = (char *)v7 + v15;
    uint64_t v16 = sub_253B07160();
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v85, v82, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v17 = v3[6];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_253462A5C(&qword_269CE04C8);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v22;
    uint64_t v23 = *(int *)(v20 + 24);
    __dst = (char *)v18 + v23;
    uint64_t v24 = (char *)v19 + v23;
    uint64_t v25 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_269CE04C0);
      memcpy(__dst, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      unsigned char *__dst = *v24;
      uint64_t v27 = *(int *)(v25 + 20);
      uint64_t v28 = &__dst[v27];
      uint64_t v29 = &v24[v27];
      uint64_t v30 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v25);
    }
    uint64_t v31 = *(int *)(v20 + 28);
    uint64_t v32 = (char *)v18 + v31;
    uint64_t v33 = (char *)v19 + v31;
    uint64_t v34 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v35 = v3[7];
  uint64_t v36 = v3[8];
  uint64_t v37 = (void *)((char *)a1 + v35);
  uint64_t v38 = (void *)((char *)a2 + v35);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = (void *)((char *)a1 + v36);
  uint64_t v41 = (void *)((char *)a2 + v36);
  uint64_t v42 = v41[1];
  void *v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v3[10];
  *((unsigned char *)a1 + v3[9]) = *((unsigned char *)a2 + v3[9]);
  *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  uint64_t v44 = v3[11];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  uint64_t v47 = type metadata accessor for TranscriptProtoUIType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
  {
    uint64_t v48 = sub_253462A5C(&qword_269CE04D0);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    uint64_t v49 = type metadata accessor for TranscriptProtoUitype(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v49))
    {
      uint64_t v50 = sub_253462A5C(&qword_269CDCC08);
      memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v57 = v46[1];
          *uint64_t v45 = *v46;
          v45[1] = v57;
          uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
          goto LABEL_18;
        case 2u:
          uint64_t v59 = *v46;
          unint64_t v60 = v46[1];
          sub_25348A9C8(*v46, v60);
          *uint64_t v45 = v59;
          v45[1] = v60;
          uint64_t v61 = v46[3];
          v45[2] = v46[2];
          v45[3] = v61;
          uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_18:
          uint64_t v84 = (char *)v46 + v58;
          int v86 = (char *)v45 + v58;
          uint64_t v62 = sub_253B07160();
          uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
          __dsta = v3;
          swift_bridgeObjectRetain();
          v81(v86, v84, v62);
          goto LABEL_19;
        case 3u:
          uint64_t v63 = *v46;
          unint64_t v64 = v46[1];
          sub_25348A9C8(*v46, v64);
          *uint64_t v45 = v63;
          v45[1] = v64;
          uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
          unint64_t v66 = (char *)v45 + v65;
          uint64_t v67 = (char *)v46 + v65;
          uint64_t v68 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
          goto LABEL_21;
        default:
          uint64_t v51 = *v46;
          unint64_t v52 = v46[1];
          sub_25348A9C8(*v46, v52);
          *uint64_t v45 = v51;
          v45[1] = v52;
          uint64_t v53 = v46[3];
          v45[2] = v46[2];
          v45[3] = v53;
          uint64_t v54 = v46[5];
          v45[4] = v46[4];
          v45[5] = v54;
          uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
          uint64_t v80 = (char *)v46 + v55;
          uint64_t v83 = (char *)v45 + v55;
          uint64_t v56 = sub_253B07160();
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
          __dsta = v3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v78(v83, v80, v56);
LABEL_19:
          int v3 = __dsta;
LABEL_21:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v49);
          break;
      }
    }
    uint64_t v69 = *(int *)(v47 + 20);
    uint64_t v70 = (char *)v45 + v69;
    uint64_t v71 = (char *)v46 + v69;
    uint64_t v72 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
  }
  uint64_t v73 = v3[12];
  uint64_t v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  uint64_t v76 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
  return a1;
}

void *assignWithCopy for TranscriptProtoResponseManifest(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      void *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      v7[6] = v8[6];
      v7[7] = v8[7];
      uint64_t v12 = *(int *)(v9 + 32);
      uint64_t v155 = (char *)v8 + v12;
      long long v161 = (char *)v7 + v12;
      uint64_t v13 = sub_253B07160();
      uint64_t v14 = v5;
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v161, v155, v13);
      uint64_t v5 = v14;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[6] = v8[6];
  v7[7] = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = *(int *)(v9 + 32);
  uint64_t v30 = (char *)v7 + v29;
  uint64_t v31 = (char *)v8 + v29;
  uint64_t v32 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = (void *)((char *)v5 + v17);
  uint64_t v19 = (void *)((char *)v4 + v17);
  uint64_t v20 = type metadata accessor for TranscriptProtoResponseVisual(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    if (v22)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t v175 = a3;
    *uint64_t v18 = *v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18[1] = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(int *)(v20 + 24);
    uint64_t v34 = (char *)v18 + v33;
    uint64_t v35 = (char *)v19 + v33;
    uint64_t v36 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    int v37 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v36);
    int v38 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36);
    if (v37)
    {
      if (!v38)
      {
        *uint64_t v34 = *v35;
        uint64_t v39 = *(int *)(v36 + 20);
        uint64_t v40 = &v34[v39];
        uint64_t v41 = &v35[v39];
        uint64_t v42 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
LABEL_23:
        a3 = v175;
        uint64_t v52 = *(int *)(v20 + 28);
        uint64_t v53 = (char *)v18 + v52;
        uint64_t v54 = (char *)v19 + v52;
        uint64_t v55 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v38)
      {
        *uint64_t v34 = *v35;
        uint64_t v102 = *(int *)(v36 + 20);
        uint64_t v103 = &v34[v102];
        uint64_t v104 = &v35[v102];
        uint64_t v105 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v105 - 8) + 24))(v103, v104, v105);
        goto LABEL_23;
      }
      sub_2536FA73C();
    }
    uint64_t v51 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v34, v35, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_23;
  }
  if (v22)
  {
LABEL_13:
    uint64_t v28 = sub_253462A5C(&qword_269CE04C8);
    memcpy(v18, v19, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_24;
  }
  uint64_t v174 = a3;
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  uint64_t v23 = *(int *)(v20 + 24);
  uint64_t v24 = (char *)v18 + v23;
  uint64_t v25 = (char *)v19 + v23;
  uint64_t v26 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *uint64_t v24 = *v25;
    uint64_t v43 = *(int *)(v26 + 20);
    uint64_t v44 = &v24[v43];
    uint64_t v45 = &v25[v43];
    uint64_t v46 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v47 = *(int *)(v20 + 28);
  uint64_t v48 = (char *)v18 + v47;
  uint64_t v49 = (char *)v19 + v47;
  uint64_t v50 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
  a3 = v174;
LABEL_24:
  uint64_t v56 = a3[7];
  uint64_t v57 = (void *)((char *)v5 + v56);
  uint64_t v58 = (void *)((char *)v4 + v56);
  *uint64_t v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[8];
  unint64_t v60 = (void *)((char *)v5 + v59);
  uint64_t v61 = (void *)((char *)v4 + v59);
  void *v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + a3[9]) = *((unsigned char *)v4 + a3[9]);
  *((unsigned char *)v5 + a3[10]) = *((unsigned char *)v4 + a3[10]);
  uint64_t v62 = a3[11];
  uint64_t v63 = (void *)((char *)v5 + v62);
  unint64_t v64 = (void *)((char *)v4 + v62);
  uint64_t v65 = type metadata accessor for TranscriptProtoUIType(0);
  int v66 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v65);
  int v67 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v65);
  if (!v66)
  {
    if (v67)
    {
      sub_2536FA73C();
      goto LABEL_30;
    }
    uint64_t v71 = type metadata accessor for TranscriptProtoUitype(0);
    int v72 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v71);
    int v73 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v71);
    if (v72)
    {
      if (!v73)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v63 = *v64;
            v63[1] = v64[1];
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_52;
          case 2u:
            uint64_t v114 = *v64;
            unint64_t v115 = v64[1];
            sub_25348A9C8(*v64, v115);
            *uint64_t v63 = v114;
            v63[1] = v115;
            v63[2] = v64[2];
            v63[3] = v64[3];
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_52:
            uint64_t v160 = (char *)v64 + v113;
            uint64_t v166 = (char *)v63 + v113;
            uint64_t v171 = v4;
            v180 = a3;
            uint64_t v116 = sub_253B07160();
            uint64_t v117 = v5;
            uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v119 = v116;
            uint64_t v4 = v171;
            v118(v166, v160, v119);
            uint64_t v5 = v117;
            a3 = v180;
            break;
          case 3u:
            uint64_t v120 = *v64;
            unint64_t v121 = v64[1];
            sub_25348A9C8(*v64, v121);
            *uint64_t v63 = v120;
            v63[1] = v121;
            uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            uint64_t v123 = (char *)v63 + v122;
            uint64_t v124 = (char *)v64 + v122;
            uint64_t v125 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
            break;
          default:
            uint64_t v74 = *v64;
            unint64_t v75 = v64[1];
            sub_25348A9C8(*v64, v75);
            *uint64_t v63 = v74;
            v63[1] = v75;
            v63[2] = v64[2];
            v63[3] = v64[3];
            v63[4] = v64[4];
            v63[5] = v64[5];
            uint64_t v76 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            uint64_t v156 = (char *)v64 + v76;
            uint64_t v162 = (char *)v63 + v76;
            uint64_t v176 = a3;
            uint64_t v77 = sub_253B07160();
            uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v78 = v77;
            a3 = v176;
            v153(v162, v156, v78);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v71);
        goto LABEL_59;
      }
    }
    else
    {
      if (!v73)
      {
        if (v5 != v4)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v63 = *v64;
              v63[1] = v64[1];
              uint64_t v126 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
              uint64_t v167 = (char *)v64 + v126;
              uint64_t v172 = (char *)v63 + v126;
              v181 = a3;
              uint64_t v127 = sub_253B07160();
              uint64_t v128 = v5;
              uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v130 = v127;
              a3 = v181;
              v129(v172, v167, v130);
              uint64_t v5 = v128;
              break;
            case 2u:
              uint64_t v131 = *v64;
              unint64_t v132 = v64[1];
              sub_25348A9C8(*v64, v132);
              *uint64_t v63 = v131;
              v63[1] = v132;
              v63[2] = v64[2];
              v63[3] = v64[3];
              uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
              uint64_t v168 = (char *)v64 + v133;
              uint64_t v173 = (char *)v63 + v133;
              v182 = a3;
              uint64_t v134 = sub_253B07160();
              uint64_t v135 = v5;
              long long v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v137 = v134;
              a3 = v182;
              v136(v173, v168, v137);
              uint64_t v5 = v135;
              break;
            case 3u:
              uint64_t v138 = *v64;
              unint64_t v139 = v64[1];
              sub_25348A9C8(*v64, v139);
              *uint64_t v63 = v138;
              v63[1] = v139;
              uint64_t v140 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
              uint64_t v141 = (char *)v63 + v140;
              uint64_t v142 = (char *)v64 + v140;
              uint64_t v143 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
              break;
            default:
              uint64_t v106 = *v64;
              unint64_t v107 = v64[1];
              sub_25348A9C8(*v64, v107);
              *uint64_t v63 = v106;
              v63[1] = v107;
              v63[2] = v64[2];
              v63[3] = v64[3];
              v63[4] = v64[4];
              v63[5] = v64[5];
              uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              uint64_t v159 = (char *)v64 + v108;
              uint64_t v165 = (char *)v63 + v108;
              uint64_t v170 = v4;
              v179 = a3;
              uint64_t v109 = sub_253B07160();
              int v110 = v5;
              uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v112 = v109;
              uint64_t v4 = v170;
              v111(v165, v159, v112);
              uint64_t v5 = v110;
              a3 = v179;
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_59;
      }
      sub_2536FA73C();
    }
    uint64_t v84 = sub_253462A5C(&qword_269CDCC08);
    memcpy(v63, v64, *(void *)(*(void *)(v84 - 8) + 64));
LABEL_59:
    uint64_t v144 = *(int *)(v65 + 20);
    uint64_t v145 = (char *)v63 + v144;
    unint64_t v146 = (char *)v64 + v144;
    uint64_t v147 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 24))(v145, v146, v147);
    goto LABEL_60;
  }
  if (v67)
  {
LABEL_30:
    uint64_t v70 = sub_253462A5C(&qword_269CE04D0);
    memcpy(v63, v64, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_60;
  }
  uint64_t v68 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v68))
  {
    uint64_t v69 = sub_253462A5C(&qword_269CDCC08);
    memcpy(v63, v64, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v63 = *v64;
        v63[1] = v64[1];
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
        goto LABEL_42;
      case 2u:
        uint64_t v86 = *v64;
        unint64_t v87 = v64[1];
        sub_25348A9C8(*v64, v87);
        *uint64_t v63 = v86;
        v63[1] = v87;
        v63[2] = v64[2];
        v63[3] = v64[3];
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_42:
        uint64_t v158 = (char *)v64 + v85;
        uint64_t v164 = (char *)v63 + v85;
        uint64_t v169 = v4;
        uint64_t v178 = a3;
        uint64_t v88 = sub_253B07160();
        uint64_t v89 = v5;
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v91 = v88;
        uint64_t v4 = v169;
        v90(v164, v158, v91);
        uint64_t v5 = v89;
        a3 = v178;
        break;
      case 3u:
        uint64_t v92 = *v64;
        unint64_t v93 = v64[1];
        sub_25348A9C8(*v64, v93);
        *uint64_t v63 = v92;
        v63[1] = v93;
        uint64_t v94 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
        uint64_t v95 = (char *)v63 + v94;
        uint64_t v96 = (char *)v64 + v94;
        uint64_t v97 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
        break;
      default:
        uint64_t v79 = *v64;
        unint64_t v80 = v64[1];
        sub_25348A9C8(*v64, v80);
        *uint64_t v63 = v79;
        v63[1] = v80;
        v63[2] = v64[2];
        v63[3] = v64[3];
        v63[4] = v64[4];
        v63[5] = v64[5];
        uint64_t v81 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        uint64_t v157 = (char *)v64 + v81;
        uint64_t v163 = (char *)v63 + v81;
        uint64_t v177 = a3;
        uint64_t v82 = sub_253B07160();
        uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v83 = v82;
        a3 = v177;
        v154(v163, v157, v83);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v68);
  }
  uint64_t v98 = *(int *)(v65 + 20);
  uint64_t v99 = (char *)v63 + v98;
  uint64_t v100 = (char *)v64 + v98;
  uint64_t v101 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v65);
LABEL_60:
  uint64_t v148 = a3[12];
  long long v149 = (char *)v5 + v148;
  uint64_t v150 = (char *)v4 + v148;
  uint64_t v151 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 24))(v149, v150, v151);
  return v5;
}

void *initializeWithTake for TranscriptProtoResponseManifest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v8[1];
    _OWORD *v7 = *v8;
    v7[1] = v11;
    long long v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    uint64_t v13 = *(int *)(v9 + 32);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = (_OWORD *)((char *)a1 + v17);
  uint64_t v19 = (_OWORD *)((char *)a2 + v17);
  uint64_t v20 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_253462A5C(&qword_269CE04C8);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    uint64_t v22 = *(int *)(v20 + 24);
    uint64_t v23 = (char *)v18 + v22;
    uint64_t v24 = (char *)v19 + v22;
    uint64_t v25 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_269CE04C0);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *uint64_t v23 = *v24;
      uint64_t v27 = *(int *)(v25 + 20);
      uint64_t v28 = &v23[v27];
      uint64_t v29 = &v24[v27];
      uint64_t v30 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v31 = *(int *)(v20 + 28);
    uint64_t v32 = (char *)v18 + v31;
    uint64_t v33 = (char *)v19 + v31;
    uint64_t v34 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v35 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
  uint64_t v36 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v37 = a3[11];
  int v38 = (_OWORD *)((char *)a1 + v37);
  uint64_t v39 = (_OWORD *)((char *)a2 + v37);
  uint64_t v40 = type metadata accessor for TranscriptProtoUIType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_253462A5C(&qword_269CE04D0);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = type metadata accessor for TranscriptProtoUitype(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v42))
    {
      uint64_t v43 = sub_253462A5C(&qword_269CDCC08);
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *int v38 = *v39;
          uint64_t v46 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
          goto LABEL_19;
        case 2u:
          long long v47 = v39[1];
          *int v38 = *v39;
          v38[1] = v47;
          uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
          break;
        case 3u:
          *int v38 = *v39;
          uint64_t v46 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_19:
          uint64_t v45 = *(int *)(v46 + 20);
          break;
        default:
          long long v44 = v39[1];
          *int v38 = *v39;
          v38[1] = v44;
          v38[2] = v39[2];
          uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
          break;
      }
      uint64_t v48 = (char *)v38 + v45;
      uint64_t v49 = (char *)v39 + v45;
      uint64_t v50 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v42);
    }
    uint64_t v51 = *(int *)(v40 + 20);
    uint64_t v52 = (char *)v38 + v51;
    uint64_t v53 = (char *)v39 + v51;
    uint64_t v54 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v55 = a3[12];
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

void *assignWithTake for TranscriptProtoResponseManifest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      long long v12 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v12;
      long long v13 = *((_OWORD *)v8 + 3);
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_OWORD *)v7 + 3) = v13;
      uint64_t v14 = *(int *)(v9 + 32);
      uint64_t v15 = (char *)v7 + v14;
      uint64_t v16 = (char *)v8 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v18 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = v8[1];
  void *v7 = *v8;
  v7[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v8[3];
  v7[2] = v8[2];
  v7[3] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = v8[5];
  v7[4] = v8[4];
  v7[5] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = v8[7];
  v7[6] = v8[6];
  v7[7] = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(v9 + 32);
  uint64_t v36 = (char *)v7 + v35;
  uint64_t v37 = (char *)v8 + v35;
  uint64_t v38 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
LABEL_7:
  uint64_t v19 = a3[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = type metadata accessor for TranscriptProtoResponseVisual(0);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (v24)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    *uint64_t v20 = *v21;
    swift_bridgeObjectRelease();
    v20[1] = v21[1];
    swift_bridgeObjectRelease();
    uint64_t v39 = *(int *)(v22 + 24);
    uint64_t v40 = (char *)v20 + v39;
    uint64_t v41 = (char *)v21 + v39;
    uint64_t v42 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    int v43 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v42);
    int v44 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42);
    if (v43)
    {
      if (!v44)
      {
        unsigned char *v40 = *v41;
        uint64_t v45 = *(int *)(v42 + 20);
        uint64_t v46 = &v40[v45];
        long long v47 = &v41[v45];
        uint64_t v48 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
LABEL_23:
        uint64_t v58 = *(int *)(v22 + 28);
        uint64_t v59 = (char *)v20 + v58;
        unint64_t v60 = (char *)v21 + v58;
        uint64_t v61 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v44)
      {
        unsigned char *v40 = *v41;
        uint64_t v99 = *(int *)(v42 + 20);
        uint64_t v100 = &v40[v99];
        uint64_t v101 = &v41[v99];
        uint64_t v102 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v102 - 8) + 40))(v100, v101, v102);
        goto LABEL_23;
      }
      sub_2536FA73C();
    }
    uint64_t v57 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v40, v41, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_23;
  }
  if (v24)
  {
LABEL_13:
    uint64_t v30 = sub_253462A5C(&qword_269CE04C8);
    memcpy(v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_24;
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  uint64_t v25 = *(int *)(v22 + 24);
  uint64_t v26 = (char *)v20 + v25;
  uint64_t v27 = (char *)v21 + v25;
  uint64_t v28 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    unsigned char *v26 = *v27;
    uint64_t v49 = *(int *)(v28 + 20);
    uint64_t v50 = &v26[v49];
    uint64_t v51 = &v27[v49];
    uint64_t v52 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v53 = *(int *)(v22 + 28);
  uint64_t v54 = (char *)v20 + v53;
  uint64_t v55 = (char *)v21 + v53;
  uint64_t v56 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_24:
  uint64_t v62 = a3[7];
  uint64_t v63 = (void *)((char *)a1 + v62);
  unint64_t v64 = (void *)((char *)a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[8];
  uint64_t v68 = (void *)((char *)a1 + v67);
  uint64_t v69 = (void *)((char *)a2 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  *uint64_t v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v72) = *((unsigned char *)a2 + v72);
  uint64_t v73 = a3[11];
  uint64_t v74 = (_OWORD *)((char *)a1 + v73);
  unint64_t v75 = (_OWORD *)((char *)a2 + v73);
  uint64_t v76 = type metadata accessor for TranscriptProtoUIType(0);
  int v77 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v76);
  int v78 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v76);
  if (!v77)
  {
    if (v78)
    {
      sub_2536FA73C();
      goto LABEL_30;
    }
    uint64_t v82 = type metadata accessor for TranscriptProtoUitype(0);
    int v83 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v82);
    int v84 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v82);
    if (v83)
    {
      if (!v84)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v74 = *v75;
            uint64_t v108 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_53;
          case 2u:
            long long v109 = v75[1];
            *uint64_t v74 = *v75;
            v74[1] = v109;
            uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            *uint64_t v74 = *v75;
            uint64_t v108 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_53:
            uint64_t v86 = *(int *)(v108 + 20);
            break;
          default:
            long long v85 = v75[1];
            *uint64_t v74 = *v75;
            v74[1] = v85;
            v74[2] = v75[2];
            uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        int v110 = (char *)v74 + v86;
        uint64_t v111 = (char *)v75 + v86;
        uint64_t v112 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v82);
        goto LABEL_59;
      }
    }
    else
    {
      if (!v84)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v74 = *v75;
              uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
              uint64_t v114 = (char *)v74 + v113;
              unint64_t v115 = (char *)v75 + v113;
              uint64_t v116 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
              break;
            case 2u:
              long long v117 = v75[1];
              *uint64_t v74 = *v75;
              v74[1] = v117;
              uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
              uint64_t v119 = (char *)v74 + v118;
              uint64_t v120 = (char *)v75 + v118;
              uint64_t v121 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v119, v120, v121);
              break;
            case 3u:
              *uint64_t v74 = *v75;
              uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
              uint64_t v123 = (char *)v74 + v122;
              uint64_t v124 = (char *)v75 + v122;
              uint64_t v125 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
              break;
            default:
              long long v103 = v75[1];
              *uint64_t v74 = *v75;
              v74[1] = v103;
              v74[2] = v75[2];
              uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              uint64_t v105 = (char *)v74 + v104;
              uint64_t v106 = (char *)v75 + v104;
              uint64_t v107 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_59;
      }
      sub_2536FA73C();
    }
    uint64_t v89 = sub_253462A5C(&qword_269CDCC08);
    memcpy(v74, v75, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_59:
    uint64_t v126 = *(int *)(v76 + 20);
    uint64_t v127 = (char *)v74 + v126;
    uint64_t v128 = (char *)v75 + v126;
    uint64_t v129 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 40))(v127, v128, v129);
    goto LABEL_60;
  }
  if (v78)
  {
LABEL_30:
    uint64_t v81 = sub_253462A5C(&qword_269CE04D0);
    memcpy(v74, v75, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_60;
  }
  uint64_t v79 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v79))
  {
    uint64_t v80 = sub_253462A5C(&qword_269CDCC08);
    memcpy(v74, v75, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v74 = *v75;
        uint64_t v90 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
        goto LABEL_43;
      case 2u:
        long long v91 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v91;
        uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        break;
      case 3u:
        *uint64_t v74 = *v75;
        uint64_t v90 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_43:
        uint64_t v88 = *(int *)(v90 + 20);
        break;
      default:
        long long v87 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v87;
        v74[2] = v75[2];
        uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        break;
    }
    uint64_t v92 = (char *)v74 + v88;
    unint64_t v93 = (char *)v75 + v88;
    uint64_t v94 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v79);
  }
  uint64_t v95 = *(int *)(v76 + 20);
  uint64_t v96 = (char *)v74 + v95;
  uint64_t v97 = (char *)v75 + v95;
  uint64_t v98 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v76);
LABEL_60:
  uint64_t v130 = a3[12];
  uint64_t v131 = (char *)a1 + v130;
  unint64_t v132 = (char *)a2 + v130;
  uint64_t v133 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 40))(v131, v132, v133);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseManifest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388EC70);
}

uint64_t sub_25388EC70()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE04B8);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CE04C8);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253462A5C(&qword_269CE04D0);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_25394532C();
      }
      else
      {
        sub_253B07160();
        sub_2539462E4();
      }
    }
  }
  uint64_t v8 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseManifest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388ED64);
}

void sub_25388ED64()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE04B8);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_269CE04C8);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253462A5C(&qword_269CE04D0);
        sub_2535782A8();
        if (*(_DWORD *)(v5 + 84) == v0)
        {
          sub_2539453D4();
        }
        else
        {
          sub_253B07160();
          sub_253946304();
        }
      }
    }
    uint64_t v6 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_25388EE40()
{
  sub_253760A08(319, &qword_26B249800, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B2492E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIType);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoResponseParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2 + 2;
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    else
    {
      uint64_t v11 = *(void *)v8;
      sub_25348A9C8(v11, v9);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v9;
    }
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v13 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v13;
    char v14 = *((unsigned char *)a2 + 72);
    uint64_t v15 = *(int *)(a3 + 40);
    uint64_t v16 = (uint64_t)a2 + v15;
    uint64_t v17 = a1 + v15;
    *(unsigned char *)(a1 + 72) = v14;
    uint64_t v18 = sub_253B07160();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v17, v16, v18);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 24);
  if (v4 >> 60 != 15) {
    sub_253487D84(*(void *)(a1 + 16), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  uint64_t v6 = sub_253B07160();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = (_OWORD *)(a2 + 16);
  unint64_t v8 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_25348A9C8(v9, v8);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v8;
  }
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  char v12 = *(unsigned char *)(a2 + 72);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a2 + v13;
  uint64_t v15 = a1 + v13;
  *(unsigned char *)(a1 + 72) = v12;
  uint64_t v16 = sub_253B07160();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v15, v14, v16);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v9 = *v6;
      sub_25348A9C8(*v6, *(void *)(a2 + 24));
      uint64_t v10 = *(void *)(a1 + 16);
      unint64_t v11 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v7;
      sub_253487D84(v10, v11);
      goto LABEL_8;
    }
    sub_2535CF77C(a1 + 16);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v8 = *v6;
  sub_25348A9C8(*v6, *(void *)(a2 + 24));
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v7;
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(a2 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = *(void *)(a2 + 24);
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v7;
      *(void *)(a1 + 24) = v9;
      sub_253487D84(v10, v8);
      goto LABEL_6;
    }
    sub_2535CF77C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25388F624);
}

uint64_t sub_25388F624()
{
  sub_2535E2298();
  if (v1) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  sub_2539455B8();
  uint64_t v4 = sub_2535E22C8(v3);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25388F698);
}

void sub_25388F698()
{
  sub_2535E2244();
  if (v0)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    sub_253945614();
    uint64_t v2 = sub_2535E2234(v1);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_25388F6F4()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoResponseVisual(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE04C0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *unint64_t v9 = *v10;
      uint64_t v13 = *(int *)(v11 + 20);
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoResponseVisual(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoResponseVisual(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for TranscriptProtoResponseVisual(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      unsigned char *v7 = *v8;
      uint64_t v22 = *(int *)(v9 + 20);
      int v23 = &v7[v22];
      int v24 = &v8[v22];
      uint64_t v25 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  unsigned char *v7 = *v8;
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoResponseVisual(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    unsigned char *v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for TranscriptProtoResponseVisual(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      unsigned char *v7 = *v8;
      uint64_t v22 = *(int *)(v9 + 20);
      int v23 = &v7[v22];
      int v24 = &v8[v22];
      uint64_t v25 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  unsigned char *v7 = *v8;
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseVisual(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253890120);
}

uint64_t sub_253890120()
{
  return sub_253943610();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseVisual(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253890140);
}

void sub_253890140()
{
}

void sub_25389014C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseVisualOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253890190);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseVisualOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538901A8);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoUIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoUitype(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCC08);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = a2[1];
          *a1 = *a2;
          a1[1] = v17;
          uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
          goto LABEL_9;
        case 2u:
          uint64_t v19 = *a2;
          unint64_t v20 = a2[1];
          sub_25348A9C8(*a2, v20);
          *a1 = v19;
          a1[1] = v20;
          uint64_t v21 = a2[3];
          a1[2] = a2[2];
          a1[3] = v21;
          uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_9:
          uint64_t v38 = (char *)a1 + v18;
          uint64_t v22 = (char *)a2 + v18;
          uint64_t v23 = sub_253B07160();
          int v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v38, v22, v23);
          break;
        case 3u:
          uint64_t v25 = *a2;
          unint64_t v26 = a2[1];
          sub_25348A9C8(*a2, v26);
          *a1 = v25;
          a1[1] = v26;
          uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
          break;
        default:
          uint64_t v10 = *a2;
          unint64_t v11 = a2[1];
          sub_25348A9C8(*a2, v11);
          *a1 = v10;
          a1[1] = v11;
          uint64_t v12 = a2[3];
          a1[2] = a2[2];
          a1[3] = v12;
          uint64_t v13 = a2[5];
          a1[4] = a2[4];
          a1[5] = v13;
          uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
          uint64_t v36 = (char *)a2 + v14;
          uint64_t v37 = (char *)a1 + v14;
          uint64_t v15 = sub_253B07160();
          uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v16(v37, v36, v15);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v31 = *(int *)(a3 + 20);
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoUIType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoUitype(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
        goto LABEL_7;
      case 2u:
        sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        goto LABEL_8;
      case 3u:
        sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
        uint64_t v6 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_7:
        uint64_t v5 = *(int *)(v6 + 20);
LABEL_8:
        uint64_t v7 = a1 + v5;
        uint64_t v8 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_253B07160();
  unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for TranscriptProtoUIType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
        goto LABEL_7;
      case 2u:
        uint64_t v17 = *a2;
        unint64_t v18 = a2[1];
        sub_25348A9C8(*a2, v18);
        *a1 = v17;
        a1[1] = v18;
        uint64_t v19 = a2[3];
        a1[2] = a2[2];
        a1[3] = v19;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_7:
        uint64_t v36 = (char *)a1 + v16;
        unint64_t v20 = (char *)a2 + v16;
        uint64_t v21 = sub_253B07160();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v36, v20, v21);
        break;
      case 3u:
        uint64_t v23 = *a2;
        unint64_t v24 = a2[1];
        sub_25348A9C8(*a2, v24);
        *a1 = v23;
        a1[1] = v24;
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
        unint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        break;
      default:
        uint64_t v8 = *a2;
        unint64_t v9 = a2[1];
        sub_25348A9C8(*a2, v9);
        *a1 = v8;
        a1[1] = v9;
        uint64_t v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        uint64_t v11 = a2[5];
        a1[4] = a2[4];
        a1[5] = v11;
        uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        uint64_t v34 = (char *)a2 + v12;
        uint64_t v35 = (char *)a1 + v12;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14(v35, v34, v13);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoUIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoUitype(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
          uint64_t v23 = (char *)a1 + v22;
          unint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B07160();
          unint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v23, v24, v25);
          break;
        case 2u:
          uint64_t v27 = *a2;
          unint64_t v28 = a2[1];
          sub_25348A9C8(*a2, v28);
          *a1 = v27;
          a1[1] = v28;
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = sub_253B07160();
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v33(v30, v31, v32);
          break;
        case 3u:
          uint64_t v34 = *a2;
          unint64_t v35 = a2[1];
          sub_25348A9C8(*a2, v35);
          *a1 = v34;
          a1[1] = v35;
          uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
          uint64_t v37 = (char *)a1 + v36;
          uint64_t v38 = (char *)a2 + v36;
          uint64_t v39 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
          break;
        default:
          uint64_t v9 = *a2;
          unint64_t v10 = a2[1];
          sub_25348A9C8(*a2, v10);
          *a1 = v9;
          a1[1] = v10;
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
          uint64_t v63 = (char *)a1 + v11;
          uint64_t v12 = (char *)a2 + v11;
          uint64_t v13 = sub_253B07160();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14(v63, v12, v13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_19;
    }
LABEL_7:
    uint64_t v15 = sub_253462A5C(&qword_269CDCC08);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_19;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        uint64_t v43 = sub_253B07160();
        int v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
        break;
      case 2u:
        uint64_t v45 = *a2;
        unint64_t v46 = a2[1];
        sub_25348A9C8(*a2, v46);
        *a1 = v45;
        a1[1] = v46;
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_253B07160();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        break;
      case 3u:
        uint64_t v52 = *a2;
        unint64_t v53 = a2[1];
        sub_25348A9C8(*a2, v53);
        *a1 = v52;
        a1[1] = v53;
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        break;
      default:
        uint64_t v16 = *a2;
        unint64_t v17 = a2[1];
        sub_25348A9C8(*a2, v17);
        *a1 = v16;
        a1[1] = v17;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        unint64_t v64 = (char *)a1 + v18;
        uint64_t v19 = (char *)a2 + v18;
        uint64_t v20 = sub_253B07160();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21(v64, v19, v20);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  uint64_t v58 = *(int *)(a3 + 20);
  uint64_t v59 = (char *)a1 + v58;
  unint64_t v60 = (char *)a2 + v58;
  uint64_t v61 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoUIType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoUitype(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
        goto LABEL_8;
      case 2u:
        long long v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_8:
        uint64_t v9 = *(int *)(v10 + 20);
        break;
      default:
        long long v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        a1[2] = a2[2];
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        break;
    }
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  unint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoUIType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoUitype(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v17 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
          goto LABEL_14;
        case 2u:
          long long v18 = a2[1];
          *a1 = *a2;
          a1[1] = v18;
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
          break;
        case 3u:
          *a1 = *a2;
          uint64_t v17 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_14:
          uint64_t v10 = *(int *)(v17 + 20);
          break;
        default:
          long long v9 = a2[1];
          *a1 = *a2;
          a1[1] = v9;
          a1[2] = a2[2];
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
          break;
      }
      uint64_t v19 = (char *)a1 + v10;
      uint64_t v20 = (char *)a2 + v10;
      uint64_t v21 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_20;
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CDCC08);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_20;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
        uint64_t v23 = (char *)a1 + v22;
        unint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 2u:
        long long v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        unint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        break;
      default:
        long long v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        a1[2] = a2[2];
        uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_20:
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUIType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538915A4);
}

uint64_t sub_2538915A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CDCC08);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUIType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538915C4);
}

uint64_t sub_2538915C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CDCC08);
}

void sub_2538915D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoUitype(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253B07160();
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        v35(v32, v33, v34);
        break;
      case 2u:
        uint64_t v16 = *a2;
        unint64_t v17 = a2[1];
        sub_25348A9C8(*a2, v17);
        *a1 = v16;
        a1[1] = v17;
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        break;
      case 3u:
        uint64_t v24 = *a2;
        unint64_t v25 = a2[1];
        sub_25348A9C8(*a2, v25);
        *a1 = v24;
        a1[1] = v25;
        uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
        uint64_t v27 = (char *)a1 + v26;
        unint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
        break;
      default:
        uint64_t v6 = *a2;
        unint64_t v7 = a2[1];
        sub_25348A9C8(*a2, v7);
        *a1 = v6;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        uint64_t v9 = a2[5];
        a1[4] = a2[4];
        a1[5] = v9;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        uint64_t v11 = (char *)a1 + v10;
        long long v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoUitype(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
      goto LABEL_6;
    case 2:
      sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
      goto LABEL_7;
    case 3:
      sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
      uint64_t v4 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_6:
      uint64_t v3 = *(int *)(v4 + 20);
LABEL_7:
      uint64_t v5 = a1 + v3;
      uint64_t v6 = sub_253B07160();
      unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t result = v7(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for TranscriptProtoUitype(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
      goto LABEL_6;
    case 2u:
      uint64_t v13 = *a2;
      unint64_t v14 = a2[1];
      sub_25348A9C8(*a2, v14);
      *a1 = v13;
      a1[1] = v14;
      uint64_t v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_6:
      uint64_t v24 = (char *)a1 + v16;
      unint64_t v25 = (char *)a2 + v16;
      uint64_t v26 = sub_253B07160();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      break;
    case 3u:
      uint64_t v17 = *a2;
      unint64_t v18 = a2[1];
      sub_25348A9C8(*a2, v18);
      *a1 = v17;
      a1[1] = v18;
      uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      break;
    default:
      uint64_t v4 = *a2;
      unint64_t v5 = a2[1];
      sub_25348A9C8(*a2, v5);
      *a1 = v4;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      uint64_t v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_253B07160();
      long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoUitype(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
        goto LABEL_6;
      case 2u:
        uint64_t v12 = *a2;
        unint64_t v13 = a2[1];
        sub_25348A9C8(*a2, v13);
        *a1 = v12;
        a1[1] = v13;
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_6:
        unint64_t v14 = (char *)a1 + v11;
        uint64_t v15 = (char *)a2 + v11;
        uint64_t v16 = sub_253B07160();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        break;
      case 3u:
        uint64_t v18 = *a2;
        unint64_t v19 = a2[1];
        sub_25348A9C8(*a2, v19);
        *a1 = v18;
        a1[1] = v19;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        break;
      default:
        uint64_t v4 = *a2;
        unint64_t v5 = a2[1];
        sub_25348A9C8(*a2, v5);
        *a1 = v4;
        a1[1] = v5;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_253B07160();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoUitype(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
      goto LABEL_6;
    case 2u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
      break;
    case 3u:
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_6:
      uint64_t v5 = *(int *)(v7 + 20);
      break;
    default:
      long long v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      a1[2] = a2[2];
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
      break;
  }
  uint64_t v8 = (char *)a1 + v5;
  uint64_t v9 = (char *)a2 + v5;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoUitype(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v6 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
        goto LABEL_7;
      case 2u:
        long long v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v6 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_7:
        uint64_t v5 = *(int *)(v6 + 20);
        break;
      default:
        long long v4 = a2[1];
        *a1 = *a2;
        a1[1] = v4;
        a1[2] = a2[2];
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        break;
    }
    uint64_t v8 = (char *)a1 + v5;
    uint64_t v9 = (char *)a2 + v5;
    uint64_t v10 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253892110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538506D8(a1, a2, a3, (uint64_t)type metadata accessor for TranscriptProtoArchiveViewPayload, type metadata accessor for TranscriptProtoLiveActivityPayload, type metadata accessor for TranscriptProtoPluginSnippetPayload, type metadata accessor for TranscriptProtoControlPayload);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoUILabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoLabel(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCBF8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
      uint64_t v21 = (char *)a1 + v12;
      unint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v21, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoUILabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoLabel(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for TranscriptProtoUILabel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLabel(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBF8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    uint64_t v19 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_253B07160();
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v19, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *assignWithCopy for TranscriptProtoUILabel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLabel(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBF8);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v23 = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  uint64_t v11 = sub_253B07160();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v23, v10, v11);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoUILabel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLabel(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBF8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *assignWithTake for TranscriptProtoUILabel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLabel(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = a2[3];
      a1[2] = a2[2];
      a1[3] = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CDCBF8);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUILabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253892B24);
}

uint64_t sub_253892B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CDCBF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUILabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253892B44);
}

uint64_t sub_253892B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CDCBF8);
}

void sub_253892B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    long long v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoLabel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v3 = sub_253B07160();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for TranscriptProtoLabel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for TranscriptProtoLabel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoLabel(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for TranscriptProtoLabel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  return MEMORY[0x270FA0340](a1, a2, v4, sub_253892FE8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_253893054);
}

uint64_t sub_253893058()
{
  return sub_253860EAC();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUIConfirmationLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253893098);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUIConfirmationLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538930B0);
}

uint64_t sub_2538930B4()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_25348A9C8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[4];
    uint64_t v11 = a2[5];
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    a1[4] = v10;
    a1[5] = v11;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoArchiveViewPayload(uint64_t a1, uint64_t a2)
{
  sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *initializeWithCopy for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25348A9C8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  a1[4] = v9;
  a1[5] = v10;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25348A9C8(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_253487D84(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t *assignWithTake for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_253487D84(v6, v7);
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoArchiveViewPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538934CC);
}

uint64_t sub_2538934CC()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 24));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoArchiveViewPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253893544);
}

void sub_253893544()
{
  sub_2535E2308();
  if (v3)
  {
    *(void *)(v1 + 24) = v0;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_2538935A8()
{
  return sub_253942B08();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLiveActivityPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538935D4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLiveActivityPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538935EC);
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwCP_0()
{
  sub_2535B3C98();
  char v3 = v2;
  uint64_t v5 = v4;
  sub_2535782A8();
  if ((*(_DWORD *)(v6 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v3);
  }
  else
  {
    sub_253946184();
    *uint64_t v5 = v0;
    v5[1] = v1;
    uint64_t v7 = v3[3];
    v5[2] = v3[2];
    v5[3] = v7;
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v9 = *(void (**)(void))(v8 + 16);
    swift_bridgeObjectRetain();
    sub_2534DA5AC();
    sub_253944AE4();
    v9();
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwxx_0(uint64_t *a1)
{
  sub_253946130(a1);
  swift_bridgeObjectRelease();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v1 = sub_2539446BC();
  return v2(v1);
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwcp_0()
{
  sub_2535B3C98();
  sub_253944950(v4, v5);
  *uint64_t v1 = v2;
  v1[1] = v3;
  uint64_t v6 = *(void *)(v0 + 24);
  v1[2] = *(void *)(v0 + 16);
  v1[3] = v6;
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v8 = *(void (**)(void))(v7 + 16);
  swift_bridgeObjectRetain();
  sub_253944AE4();
  v8();
  sub_25346CD04();
}

uint64_t *_s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwca_0(uint64_t a1, uint64_t *a2)
{
  sub_253944950(a1, a2);
  uint64_t v5 = *v2;
  unint64_t v6 = v2[1];
  *uint64_t v2 = v3;
  v2[1] = v4;
  sub_253487D84(v5, v6);
  sub_253945978();
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v7();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwta_0(uint64_t *a1, _OWORD *a2)
{
  sub_253945498(a1, a2);
  sub_253945BD4();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v3();
  return v2;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPluginSnippetPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25389385C);
}

uint64_t sub_253893860()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 24));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 24));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPluginSnippetPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538938D8);
}

void sub_2538938DC()
{
  sub_2535E2244();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 24));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void *_s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwCP_0(void *a1, uint64_t *a2)
{
  sub_2535782A8();
  if ((*(_DWORD *)(v6 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*a2);
  }
  else
  {
    sub_253946184();
    *a1 = v2;
    a1[1] = v3;
    sub_25394426C();
    sub_25346CAF4();
    sub_2534B3428();
    v7();
  }
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwxx_0(uint64_t *a1)
{
  sub_253946130(a1);
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v1 = sub_2539446BC();
  return v2(v1);
}

void *_s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwcp_0(uint64_t a1, uint64_t *a2)
{
  sub_253944950(a1, a2);
  *uint64_t v2 = v3;
  v2[1] = v4;
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2534B3428();
  v5();
  return v2;
}

uint64_t *_s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwca_0(uint64_t a1, uint64_t *a2)
{
  sub_253944950(a1, a2);
  uint64_t v5 = *v2;
  unint64_t v6 = v2[1];
  *uint64_t v2 = v3;
  v2[1] = v4;
  sub_253487D84(v5, v6);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v7();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwta_0(uint64_t *a1, _OWORD *a2)
{
  sub_253945498(a1, a2);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v3();
  return v2;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoControlPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253893B70);
}

uint64_t sub_253893B74(uint64_t a1, int a2)
{
  if (a2 == 12)
  {
    uint64_t v3 = *(void *)(a1 + 8) >> 60;
    if (((4 * v3) & 0xC) != 0) {
      return 16 - ((4 * v3) & 0xC | (v3 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v5 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoControlPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253893C0C);
}

void *sub_253893C10(void *result, uint64_t a2, int a3)
{
  uint64_t v4 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    sub_2535E235C();
    sub_2535E272C();
    return (void *)_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v4 + v6, a2, a2, v5);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolution(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CE2140);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CE2200);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_16:
      uint64_t v24 = *(int *)(v12 + 20);
      uint64_t v25 = &v10[v24];
      uint64_t v26 = &v11[v24];
      uint64_t v27 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_17:
      uint64_t v28 = v6[7];
      uint64_t v29 = (void *)((char *)v4 + v28);
      uint64_t v30 = (void *)((char *)a2 + v28);
      uint64_t v31 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_26B249528);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
        uint64_t v33 = v30[2];
        v29[1] = v30[1];
        v29[2] = v33;
        uint64_t v34 = *(int *)(v31 + 24);
        uint64_t v35 = (char *)v29 + v34;
        __dsta = (char *)v30 + v34;
        uint64_t v36 = sub_253B07160();
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v35, __dsta, v36);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v38 = v6[8];
      uint64_t v39 = (void *)((char *)v4 + v38);
      uint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = sub_253462A5C(&qword_269CE2130);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_35:
        uint64_t v65 = v6[9];
        uint64_t v66 = (char *)v4 + v65;
        uint64_t v67 = (char *)a2 + v65;
        uint64_t v68 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
        return v4;
      }
      uint64_t v43 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v43))
      {
        uint64_t v44 = sub_253462A5C(&qword_269CE2150);
        memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_34:
        uint64_t v61 = *(int *)(v41 + 20);
        uint64_t v62 = (char *)v39 + v61;
        uint64_t v63 = (char *)v40 + v61;
        uint64_t v64 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
        goto LABEL_35;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *uint64_t v39 = *v40;
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v72 = (char *)v40 + v51;
        unint64_t v75 = (char *)v39 + v51;
        uint64_t v52 = sub_253B07160();
        __dstb = v6;
        unint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v75, v72, v52);
        uint64_t v6 = __dstb;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
LABEL_33:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v43);
          goto LABEL_34;
        }
        uint64_t v46 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v46;
        uint64_t v47 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v48 = *(int *)(v47 + 20);
        uint64_t v74 = v47;
        __dst = (void *)((char *)v39 + v48);
        uint64_t v49 = (void *)((char *)v40 + v48);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v31))
        {
          uint64_t v50 = sub_253462A5C(&qword_26B249528);
          memcpy(__dst, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v49;
          uint64_t v54 = v49[2];
          __dst[1] = v49[1];
          __dst[2] = v54;
          uint64_t v55 = *(int *)(v31 + 24);
          uint64_t v71 = (char *)v49 + v55;
          uint64_t v73 = (char *)__dst + v55;
          uint64_t v56 = sub_253B07160();
          uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
          swift_bridgeObjectRetain();
          v70(v73, v71, v56);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v31);
        }
        uint64_t v57 = *(int *)(v74 + 24);
        uint64_t v58 = (char *)v39 + v57;
        uint64_t v59 = (char *)v40 + v57;
        uint64_t v60 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_33;
    }
    int v17 = swift_getEnumCaseMultiPayload();
    switch(v17)
    {
      case 6:
        uint64_t v19 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v10, v11, v19);
        break;
      case 5:
        *uint64_t v10 = *v11;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v21 = &v10[v20];
        uint64_t v22 = &v11[v20];
        uint64_t v23 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        break;
      case 1:
        uint64_t v18 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v11, v18);
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_15;
    }
    swift_storeEnumTagMultiPayload();
LABEL_15:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v15);
    goto LABEL_16;
  }
  uint64_t v14 = *a2;
  void *v4 = *a2;
  uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for TranscriptProtoSystemPromptResolution(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          uint64_t v8 = sub_253B07160();
          goto LABEL_8;
        case 5:
          uint64_t v9 = v4
             + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        case 1:
          uint64_t v8 = sub_253B08E50();
LABEL_8:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
          break;
      }
    }
    uint64_t v11 = v4 + *(int *)(v5 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[7];
  uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = v13 + *(int *)(v14 + 24);
    uint64_t v16 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = a1 + a2[8];
  uint64_t v18 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v19))
    {
      int v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
LABEL_21:
        uint64_t v26 = v17 + v25;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
        goto LABEL_22;
      }
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v22 = v17 + *(int *)(v21 + 20);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v22, 1, v14))
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v22 + *(int *)(v14 + 24);
          uint64_t v24 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        }
        uint64_t v25 = *(int *)(v21 + 24);
        goto LABEL_21;
      }
    }
LABEL_22:
    uint64_t v28 = v17 + *(int *)(v18 + 20);
    uint64_t v29 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  }
  uint64_t v30 = a1 + a2[9];
  uint64_t v31 = sub_253B07160();
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
  return v32(v30, v31);
}

void *initializeWithCopy for TranscriptProtoSystemPromptResolution(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE2140);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  uint64_t v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v13))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v17 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v10, v17);
        break;
      case 5:
        *uint64_t v9 = *v10;
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v19 = &v9[v18];
        int v20 = &v10[v18];
        uint64_t v21 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      case 1:
        uint64_t v16 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v13);
    goto LABEL_14;
  }
  uint64_t v14 = sub_253462A5C(&qword_269CE2200);
  memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_14:
  uint64_t v22 = *(int *)(v11 + 20);
  uint64_t v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  uint64_t v25 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_15:
  uint64_t v26 = v3[7];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v29 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_253462A5C(&qword_26B249528);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    uint64_t v31 = v28[2];
    v27[1] = v28[1];
    v27[2] = v31;
    uint64_t v32 = *(int *)(v29 + 24);
    uint64_t v33 = (char *)v27 + v32;
    __dsta = (char *)v28 + v32;
    uint64_t v34 = sub_253B07160();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v33, __dsta, v34);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v36 = v3[8];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v41 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v41))
    {
      uint64_t v42 = sub_253462A5C(&qword_269CE2150);
      memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_32:
      uint64_t v59 = *(int *)(v39 + 20);
      uint64_t v60 = (char *)v37 + v59;
      uint64_t v61 = (char *)v38 + v59;
      uint64_t v62 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
      goto LABEL_33;
    }
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 1)
    {
      *uint64_t v37 = *v38;
      uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v70 = (char *)v38 + v49;
      uint64_t v73 = (char *)v37 + v49;
      uint64_t v50 = sub_253B07160();
      __dstb = v3;
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      v51(v73, v70, v50);
      uint64_t v3 = __dstb;
    }
    else
    {
      if (v43)
      {
        memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_31:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v41);
        goto LABEL_32;
      }
      uint64_t v44 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v44;
      uint64_t v45 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v46 = *(int *)(v45 + 20);
      uint64_t v72 = v45;
      __dst = (void *)((char *)v37 + v46);
      uint64_t v47 = (void *)((char *)v38 + v46);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v29))
      {
        uint64_t v48 = sub_253462A5C(&qword_26B249528);
        memcpy(__dst, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        *(_DWORD *)__dst = *(_DWORD *)v47;
        uint64_t v52 = v47[2];
        __dst[1] = v47[1];
        __dst[2] = v52;
        uint64_t v53 = *(int *)(v29 + 24);
        uint64_t v69 = (char *)v47 + v53;
        uint64_t v71 = (char *)__dst + v53;
        uint64_t v54 = sub_253B07160();
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v71, v69, v54);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v29);
      }
      uint64_t v55 = *(int *)(v72 + 24);
      uint64_t v56 = (char *)v37 + v55;
      uint64_t v57 = (char *)v38 + v55;
      uint64_t v58 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  uint64_t v40 = sub_253462A5C(&qword_269CE2130);
  memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_33:
  uint64_t v63 = v3[9];
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  return a1;
}

void *assignWithCopy for TranscriptProtoSystemPromptResolution(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE2200);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_27:
        uint64_t v28 = *(int *)(v9 + 20);
        uint64_t v29 = &v7[v28];
        uint64_t v30 = &v8[v28];
        uint64_t v31 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_42;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          uint64_t v23 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v7, v8, v23);
          break;
        case 5:
          unsigned char *v7 = *v8;
          uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v25 = &v7[v24];
          uint64_t v26 = &v8[v24];
          uint64_t v27 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
          break;
        case 1:
          uint64_t v21 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v7, v8, v21);
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_27;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE2140);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      int v18 = swift_getEnumCaseMultiPayload();
      switch(v18)
      {
        case 6:
          uint64_t v34 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16))(v7, v8, v34);
          break;
        case 5:
          unsigned char *v7 = *v8;
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v36 = &v7[v35];
          uint64_t v37 = &v8[v35];
          uint64_t v38 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
          break;
        case 1:
          uint64_t v19 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v8, v19);
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v17)
    {
      if (a1 == a2) {
        goto LABEL_41;
      }
      sub_2536FA73C();
      int v32 = swift_getEnumCaseMultiPayload();
      switch(v32)
      {
        case 6:
          uint64_t v39 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v7, v8, v39);
          break;
        case 5:
          unsigned char *v7 = *v8;
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v41 = &v7[v40];
          uint64_t v42 = &v8[v40];
          uint64_t v43 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
          break;
        case 1:
          uint64_t v33 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v7, v8, v33);
          break;
        default:
          size_t v22 = *(void *)(*(void *)(v15 - 8) + 64);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_2536FA73C();
  }
  size_t v22 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2200) - 8) + 64);
LABEL_21:
  memcpy(v7, v8, v22);
LABEL_41:
  uint64_t v44 = *(int *)(v9 + 20);
  uint64_t v45 = &v7[v44];
  uint64_t v46 = &v8[v44];
  uint64_t v47 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
LABEL_42:
  uint64_t v48 = a3[7];
  uint64_t v49 = (void *)((char *)a1 + v48);
  uint64_t v50 = (void *)((char *)a2 + v48);
  uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
  int v52 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v51);
  int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51);
  if (v52)
  {
    if (!v53)
    {
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      v49[1] = v50[1];
      v49[2] = v50[2];
      uint64_t v54 = *(int *)(v51 + 24);
      uint64_t v55 = (char *)v49 + v54;
      long long v149 = (char *)v50 + v54;
      uint64_t v56 = sub_253B07160();
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      v57(v55, v149, v56);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v53)
  {
    sub_2536FA73C();
LABEL_47:
    uint64_t v58 = sub_253462A5C(&qword_26B249528);
    memcpy(v49, v50, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_48;
  }
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
  v49[1] = v50[1];
  v49[2] = v50[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = *(int *)(v51 + 24);
  uint64_t v69 = (char *)v49 + v68;
  uint64_t v70 = (char *)v50 + v68;
  uint64_t v71 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24))(v69, v70, v71);
LABEL_48:
  uint64_t v59 = a3[8];
  uint64_t v60 = (void *)((char *)a1 + v59);
  uint64_t v61 = (void *)((char *)a2 + v59);
  uint64_t v62 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  int v63 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v62);
  int v64 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62);
  if (!v63)
  {
    if (v64)
    {
      sub_2536FA73C();
      goto LABEL_54;
    }
    uint64_t v72 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    int v73 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v72);
    int v74 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v72);
    if (v73)
    {
      if (!v74)
      {
        int v75 = swift_getEnumCaseMultiPayload();
        if (v75 == 1)
        {
          void *v60 = *v61;
          uint64_t v94 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v141 = (char *)v61 + v94;
          __dstd = (char *)v60 + v94;
          uint64_t v95 = sub_253B07160();
          uint64_t v154 = a3;
          uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v96(__dstd, v141, v95);
          a3 = v154;
        }
        else
        {
          if (v75)
          {
            memcpy(v60, v61, *(void *)(*(void *)(v72 - 8) + 64));
LABEL_87:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v72);
            goto LABEL_88;
          }
          void *v60 = *v61;
          v60[1] = v61[1];
          uint64_t v76 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v77 = *(int *)(v76 + 20);
          __dst = (void *)((char *)v60 + v77);
          uint64_t v150 = v76;
          int v78 = (void *)((char *)v61 + v77);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v51))
          {
            uint64_t v79 = sub_253462A5C(&qword_26B249528);
            memcpy(__dst, v78, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dst = *(_DWORD *)v78;
            __dst[1] = v78[1];
            __dst[2] = v78[2];
            uint64_t v107 = *(int *)(v51 + 24);
            uint64_t v135 = (char *)v78 + v107;
            uint64_t v138 = (char *)__dst + v107;
            uint64_t v108 = sub_253B07160();
            unint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
            swift_bridgeObjectRetain();
            v132(v138, v135, v108);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v51);
          }
          uint64_t v109 = *(int *)(v150 + 24);
          int v110 = (char *)v60 + v109;
          uint64_t v111 = (char *)v61 + v109;
          uint64_t v112 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_87;
      }
    }
    else
    {
      if (!v74)
      {
        if (a1 == a2) {
          goto LABEL_88;
        }
        sub_2536FA73C();
        int v89 = swift_getEnumCaseMultiPayload();
        if (v89 == 1)
        {
          void *v60 = *v61;
          uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v142 = (char *)v61 + v122;
          __dste = (char *)v60 + v122;
          uint64_t v123 = sub_253B07160();
          uint64_t v155 = a3;
          uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
          swift_bridgeObjectRetain();
          v124(__dste, v142, v123);
          a3 = v155;
        }
        else
        {
          if (v89)
          {
            size_t v85 = *(void *)(*(void *)(v72 - 8) + 64);
            goto LABEL_69;
          }
          void *v60 = *v61;
          v60[1] = v61[1];
          uint64_t v90 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v91 = *(int *)(v90 + 20);
          __dstb = (void *)((char *)v60 + v91);
          uint64_t v153 = v90;
          uint64_t v92 = (void *)((char *)v61 + v91);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v51))
          {
            uint64_t v93 = sub_253462A5C(&qword_26B249528);
            memcpy(__dstb, v92, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dstb = *(_DWORD *)v92;
            __dstb[1] = v92[1];
            __dstb[2] = v92[2];
            uint64_t v125 = *(int *)(v51 + 24);
            long long v136 = (char *)v92 + v125;
            unint64_t v139 = (char *)__dstb + v125;
            uint64_t v126 = sub_253B07160();
            uint64_t v133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v133(v139, v136, v126);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v51);
          }
          uint64_t v127 = *(int *)(v153 + 24);
          uint64_t v128 = (char *)v60 + v127;
          uint64_t v129 = (char *)v61 + v127;
          uint64_t v130 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_88;
      }
      sub_2536FA73C();
    }
    size_t v85 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2150) - 8) + 64);
LABEL_69:
    memcpy(v60, v61, v85);
LABEL_88:
    uint64_t v113 = *(int *)(v62 + 20);
    uint64_t v114 = (char *)v60 + v113;
    unint64_t v115 = (char *)v61 + v113;
    uint64_t v116 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 24))(v114, v115, v116);
    goto LABEL_89;
  }
  if (!v64)
  {
    uint64_t v65 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v65))
    {
      uint64_t v66 = sub_253462A5C(&qword_269CE2150);
      memcpy(v60, v61, *(void *)(*(void *)(v66 - 8) + 64));
LABEL_83:
      uint64_t v103 = *(int *)(v62 + 20);
      uint64_t v104 = (char *)v60 + v103;
      uint64_t v105 = (char *)v61 + v103;
      uint64_t v106 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
      goto LABEL_89;
    }
    int v80 = swift_getEnumCaseMultiPayload();
    if (v80 == 1)
    {
      void *v60 = *v61;
      uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v140 = (char *)v61 + v86;
      __dstc = (char *)v60 + v86;
      uint64_t v87 = sub_253B07160();
      uint64_t v152 = a3;
      uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
      swift_bridgeObjectRetain();
      v88(__dstc, v140, v87);
      a3 = v152;
    }
    else
    {
      if (v80)
      {
        memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
LABEL_82:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v65);
        goto LABEL_83;
      }
      void *v60 = *v61;
      v60[1] = v61[1];
      uint64_t v81 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v82 = *(int *)(v81 + 20);
      __dsta = (void *)((char *)v60 + v82);
      uint64_t v151 = v81;
      int v83 = (void *)((char *)v61 + v82);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v51))
      {
        uint64_t v84 = sub_253462A5C(&qword_26B249528);
        memcpy(__dsta, v83, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        *(_DWORD *)__dsta = *(_DWORD *)v83;
        __dsta[1] = v83[1];
        __dsta[2] = v83[2];
        uint64_t v97 = *(int *)(v51 + 24);
        uint64_t v134 = (char *)v83 + v97;
        uint64_t v137 = (char *)__dsta + v97;
        uint64_t v98 = sub_253B07160();
        uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
        swift_bridgeObjectRetain();
        v131(v137, v134, v98);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v51);
      }
      uint64_t v99 = *(int *)(v151 + 24);
      uint64_t v100 = (char *)v60 + v99;
      uint64_t v101 = (char *)v61 + v99;
      uint64_t v102 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_82;
  }
LABEL_54:
  uint64_t v67 = sub_253462A5C(&qword_269CE2130);
  memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
LABEL_89:
  uint64_t v117 = a3[9];
  uint64_t v118 = (char *)a1 + v117;
  uint64_t v119 = (char *)a2 + v117;
  uint64_t v120 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 24))(v118, v119, v120);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoSystemPromptResolution(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE2140);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_15;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v12))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v16 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v8, v9, v16);
        break;
      case 5:
        *uint64_t v8 = *v9;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        int v18 = &v8[v17];
        uint64_t v19 = &v9[v17];
        uint64_t v20 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        break;
      case 1:
        uint64_t v15 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v12);
    goto LABEL_14;
  }
  uint64_t v13 = sub_253462A5C(&qword_269CE2200);
  memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_14:
  uint64_t v21 = *(int *)(v10 + 20);
  size_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  uint64_t v24 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_15:
  uint64_t v25 = a3[7];
  uint64_t v26 = (_DWORD *)((char *)a1 + v25);
  uint64_t v27 = (_DWORD *)((char *)a2 + v25);
  uint64_t v28 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_253462A5C(&qword_26B249528);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    _DWORD *v26 = *v27;
    *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
    uint64_t v30 = *(int *)(v28 + 24);
    uint64_t v31 = (char *)v26 + v30;
    int v32 = (char *)v27 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v34 = a3[8];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v39 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_253462A5C(&qword_269CE2150);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_32:
      uint64_t v57 = *(int *)(v37 + 20);
      uint64_t v58 = (char *)v35 + v57;
      uint64_t v59 = (char *)v36 + v57;
      uint64_t v60 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_33;
    }
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 1)
    {
      *uint64_t v35 = *v36;
      uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v47 = (char *)v35 + v46;
      uint64_t v48 = (char *)v36 + v46;
      uint64_t v49 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
    }
    else
    {
      if (v41)
      {
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_31:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v39);
        goto LABEL_32;
      }
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      uint64_t v67 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v42 = *(int *)(v67 + 20);
      uint64_t v43 = (_DWORD *)((char *)v35 + v42);
      uint64_t v44 = (_DWORD *)((char *)v36 + v42);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36 + v42, 1, v28))
      {
        uint64_t v45 = sub_253462A5C(&qword_26B249528);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        *uint64_t v43 = *v44;
        *(_OWORD *)(v43 + 2) = *(_OWORD *)(v44 + 2);
        uint64_t v50 = *(int *)(v28 + 24);
        uint64_t v66 = (char *)v43 + v50;
        uint64_t v51 = (char *)v44 + v50;
        uint64_t v52 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v66, v51, v52);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v28);
      }
      uint64_t v53 = *(int *)(v67 + 24);
      uint64_t v54 = (char *)v35 + v53;
      uint64_t v55 = (char *)v36 + v53;
      uint64_t v56 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  uint64_t v38 = sub_253462A5C(&qword_269CE2130);
  memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_33:
  uint64_t v61 = a3[9];
  uint64_t v62 = (char *)a1 + v61;
  int v63 = (char *)a2 + v61;
  uint64_t v64 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
  return a1;
}

void *assignWithTake for TranscriptProtoSystemPromptResolution(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE2200);
        memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_27:
        uint64_t v30 = *(int *)(v11 + 20);
        uint64_t v31 = &v9[v30];
        int v32 = &v10[v30];
        uint64_t v33 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
        goto LABEL_42;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          uint64_t v25 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v9, v10, v25);
          break;
        case 5:
          *uint64_t v9 = *v10;
          uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v27 = &v9[v26];
          uint64_t v28 = &v10[v26];
          uint64_t v29 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          break;
        case 1:
          uint64_t v23 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v9, v10, v23);
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v14);
      goto LABEL_27;
    }
LABEL_7:
    uint64_t v16 = sub_253462A5C(&qword_269CE2140);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_42;
  }
  if (v13)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v17 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      int v20 = swift_getEnumCaseMultiPayload();
      switch(v20)
      {
        case 6:
          uint64_t v36 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32))(v9, v10, v36);
          break;
        case 5:
          *uint64_t v9 = *v10;
          uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v38 = &v9[v37];
          uint64_t v39 = &v10[v37];
          uint64_t v40 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
          break;
        case 1:
          uint64_t v21 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v9, v10, v21);
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v17);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v19)
    {
      if (a1 == a2) {
        goto LABEL_41;
      }
      sub_2536FA73C();
      int v34 = swift_getEnumCaseMultiPayload();
      switch(v34)
      {
        case 6:
          uint64_t v41 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32))(v9, v10, v41);
          break;
        case 5:
          *uint64_t v9 = *v10;
          uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v43 = &v9[v42];
          uint64_t v44 = &v10[v42];
          uint64_t v45 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
          break;
        case 1:
          uint64_t v35 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(v9, v10, v35);
          break;
        default:
          size_t v24 = *(void *)(*(void *)(v17 - 8) + 64);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_2536FA73C();
  }
  size_t v24 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2200) - 8) + 64);
LABEL_21:
  memcpy(v9, v10, v24);
LABEL_41:
  uint64_t v46 = *(int *)(v11 + 20);
  uint64_t v47 = &v9[v46];
  uint64_t v48 = &v10[v46];
  uint64_t v49 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
LABEL_42:
  uint64_t v50 = a3[7];
  uint64_t v51 = (void *)((char *)a1 + v50);
  uint64_t v52 = (void *)((char *)a2 + v50);
  uint64_t v53 = type metadata accessor for TranscriptProtoStatementID(0);
  int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v53);
  int v55 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53);
  if (v54)
  {
    if (!v55)
    {
      *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
      *(_OWORD *)(v51 + 1) = *(_OWORD *)(v52 + 1);
      uint64_t v56 = *(int *)(v53 + 24);
      uint64_t v57 = (char *)v51 + v56;
      uint64_t v58 = (char *)v52 + v56;
      uint64_t v59 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v55)
  {
    sub_2536FA73C();
LABEL_47:
    uint64_t v60 = sub_253462A5C(&qword_26B249528);
    memcpy(v51, v52, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_48;
  }
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  uint64_t v70 = v52[2];
  v51[1] = v52[1];
  v51[2] = v70;
  swift_bridgeObjectRelease();
  uint64_t v71 = *(int *)(v53 + 24);
  uint64_t v72 = (char *)v51 + v71;
  int v73 = (char *)v52 + v71;
  uint64_t v74 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
LABEL_48:
  uint64_t v61 = a3[8];
  uint64_t v62 = (void *)((char *)a1 + v61);
  int v63 = (void *)((char *)a2 + v61);
  uint64_t v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  int v65 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v64);
  int v66 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v64);
  if (!v65)
  {
    if (v66)
    {
      sub_2536FA73C();
      goto LABEL_54;
    }
    uint64_t v75 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    int v76 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v75);
    int v77 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v75);
    if (v76)
    {
      if (!v77)
      {
        int v78 = swift_getEnumCaseMultiPayload();
        if (v78 == 1)
        {
          *uint64_t v62 = *v63;
          uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v99 = (char *)v62 + v98;
          uint64_t v100 = (char *)v63 + v98;
          uint64_t v101 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
        }
        else
        {
          if (v78)
          {
            memcpy(v62, v63, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_87:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v75);
            goto LABEL_88;
          }
          *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
          uint64_t v143 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v79 = *(int *)(v143 + 20);
          int v80 = (_DWORD *)((char *)v62 + v79);
          uint64_t v81 = (_DWORD *)((char *)v63 + v79);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63 + v79, 1, v53))
          {
            uint64_t v82 = sub_253462A5C(&qword_26B249528);
            memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            *int v80 = *v81;
            *(_OWORD *)(v80 + 2) = *(_OWORD *)(v81 + 2);
            uint64_t v113 = *(int *)(v53 + 24);
            uint64_t v141 = (char *)v80 + v113;
            uint64_t v114 = (char *)v81 + v113;
            uint64_t v115 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v141, v114, v115);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v80, 0, 1, v53);
          }
          uint64_t v116 = *(int *)(v143 + 24);
          uint64_t v117 = (char *)v62 + v116;
          uint64_t v118 = (char *)v63 + v116;
          uint64_t v119 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_87;
      }
    }
    else
    {
      if (!v77)
      {
        if (a1 == a2) {
          goto LABEL_88;
        }
        sub_2536FA73C();
        int v93 = swift_getEnumCaseMultiPayload();
        if (v93 == 1)
        {
          *uint64_t v62 = *v63;
          uint64_t v129 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v130 = (char *)v62 + v129;
          uint64_t v131 = (char *)v63 + v129;
          uint64_t v132 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        }
        else
        {
          if (v93)
          {
            size_t v88 = *(void *)(*(void *)(v75 - 8) + 64);
            goto LABEL_69;
          }
          *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
          uint64_t v145 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v94 = *(int *)(v145 + 20);
          uint64_t v95 = (_DWORD *)((char *)v62 + v94);
          uint64_t v96 = (_DWORD *)((char *)v63 + v94);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63 + v94, 1, v53))
          {
            uint64_t v97 = sub_253462A5C(&qword_26B249528);
            memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            *uint64_t v95 = *v96;
            *(_OWORD *)(v95 + 2) = *(_OWORD *)(v96 + 2);
            uint64_t v133 = *(int *)(v53 + 24);
            uint64_t v142 = (char *)v95 + v133;
            uint64_t v134 = (char *)v96 + v133;
            uint64_t v135 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v142, v134, v135);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v95, 0, 1, v53);
          }
          uint64_t v136 = *(int *)(v145 + 24);
          uint64_t v137 = (char *)v62 + v136;
          uint64_t v138 = (char *)v63 + v136;
          uint64_t v139 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_88;
      }
      sub_2536FA73C();
    }
    size_t v88 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2150) - 8) + 64);
LABEL_69:
    memcpy(v62, v63, v88);
LABEL_88:
    uint64_t v120 = *(int *)(v64 + 20);
    uint64_t v121 = (char *)v62 + v120;
    uint64_t v122 = (char *)v63 + v120;
    uint64_t v123 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 40))(v121, v122, v123);
    goto LABEL_89;
  }
  if (!v66)
  {
    uint64_t v67 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v67))
    {
      uint64_t v68 = sub_253462A5C(&qword_269CE2150);
      memcpy(v62, v63, *(void *)(*(void *)(v68 - 8) + 64));
LABEL_83:
      uint64_t v109 = *(int *)(v64 + 20);
      int v110 = (char *)v62 + v109;
      uint64_t v111 = (char *)v63 + v109;
      uint64_t v112 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v64);
      goto LABEL_89;
    }
    int v83 = swift_getEnumCaseMultiPayload();
    if (v83 == 1)
    {
      *uint64_t v62 = *v63;
      uint64_t v89 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v90 = (char *)v62 + v89;
      uint64_t v91 = (char *)v63 + v89;
      uint64_t v92 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
    }
    else
    {
      if (v83)
      {
        memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
LABEL_82:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v67);
        goto LABEL_83;
      }
      *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
      uint64_t v144 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v84 = *(int *)(v144 + 20);
      size_t v85 = (_DWORD *)((char *)v62 + v84);
      uint64_t v86 = (_DWORD *)((char *)v63 + v84);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63 + v84, 1, v53))
      {
        uint64_t v87 = sub_253462A5C(&qword_26B249528);
        memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        *size_t v85 = *v86;
        *(_OWORD *)(v85 + 2) = *(_OWORD *)(v86 + 2);
        uint64_t v102 = *(int *)(v53 + 24);
        uint64_t v140 = (char *)v85 + v102;
        uint64_t v103 = (char *)v86 + v102;
        uint64_t v104 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v140, v103, v104);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v85, 0, 1, v53);
      }
      uint64_t v105 = *(int *)(v144 + 24);
      uint64_t v106 = (char *)v62 + v105;
      uint64_t v107 = (char *)v63 + v105;
      uint64_t v108 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_82;
  }
LABEL_54:
  uint64_t v69 = sub_253462A5C(&qword_269CE2130);
  memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_89:
  uint64_t v124 = a3[9];
  uint64_t v125 = (char *)a1 + v124;
  uint64_t v126 = (char *)a2 + v124;
  uint64_t v127 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 40))(v125, v126, v127);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538977D0);
}

uint64_t sub_2538977D0()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE2140);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E256C();
    }
    else
    {
      sub_253462A5C(&qword_269CE2130);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_2535E27E4();
      }
      else
      {
        sub_253B07160();
        sub_253945148();
      }
    }
  }
  uint64_t v8 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538978C4);
}

void sub_2538978C4()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE2140);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253462A5C(&qword_26B249528);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26E4();
      }
      else
      {
        sub_253462A5C(&qword_269CE2130);
        sub_2535782A8();
        if (*(_DWORD *)(v5 + 84) == v0)
        {
          sub_2535E2830();
        }
        else
        {
          sub_253B07160();
          sub_25394519C();
        }
      }
    }
    uint64_t v6 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_2538979A0()
{
  sub_253760A08(319, &qword_26B249DB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249CF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionInput(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2150);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_15:
      uint64_t v30 = *(int *)(a3 + 20);
      uint64_t v31 = (char *)a1 + v30;
      int v32 = (char *)a2 + v30;
      uint64_t v33 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      return a1;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      int v19 = (char *)a1 + v18;
      int v20 = (char *)a2 + v18;
      uint64_t v21 = sub_253B07160();
      size_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_14:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
        goto LABEL_15;
      }
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v14 = (void *)((char *)a1 + v13);
      uint64_t v15 = (void *)((char *)a2 + v13);
      uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_253462A5C(&qword_26B249528);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
        uint64_t v23 = v15[2];
        v14[1] = v15[1];
        v14[2] = v23;
        uint64_t v24 = *(int *)(v16 + 24);
        uint64_t v36 = (char *)v15 + v24;
        uint64_t v37 = (char *)v14 + v24;
        uint64_t v25 = sub_253B07160();
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v35(v37, v36, v25);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v26 = *(int *)(v12 + 24);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v7 = a1 + *(int *)(v6 + 20);
      uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v7 + *(int *)(v8 + 24);
        uint64_t v10 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      }
      uint64_t v11 = *(int *)(v6 + 24);
    }
    uint64_t v12 = a1 + v11;
    uint64_t v13 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
LABEL_9:
  uint64_t v14 = a1 + *(int *)(a2 + 20);
  uint64_t v15 = sub_253B07160();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  return v16(v14, v15);
}

void *initializeWithCopy for TranscriptProtoSystemPromptResolutionInput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_253B07160();
      int v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_26B249528);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
        uint64_t v21 = v13[2];
        v12[1] = v13[1];
        v12[2] = v21;
        uint64_t v22 = *(int *)(v14 + 24);
        int v34 = (char *)v13 + v22;
        uint64_t v35 = (char *)v12 + v22;
        uint64_t v23 = sub_253B07160();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v35, v34, v23);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v24 = *(int *)(v10 + 24);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE2150);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_13:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

void *assignWithCopy for TranscriptProtoSystemPromptResolutionInput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_21:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_22;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_26B249528);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
          v12[1] = v13[1];
          v12[2] = v13[2];
          uint64_t v29 = *(int *)(v14 + 24);
          uint64_t v53 = (char *)v13 + v29;
          int v55 = (char *)v12 + v29;
          uint64_t v30 = sub_253B07160();
          uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v55, v53, v30);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v31 = *(int *)(v10 + 24);
        int v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_22;
      }
      sub_2536FA73C();
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        *a1 = *a2;
        uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        uint64_t v43 = sub_253B07160();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
      }
      else
      {
        if (v17)
        {
          size_t v16 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v18 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v19 = *(int *)(v18 + 20);
        int v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (void *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_26B249528);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *(_DWORD *)int v20 = *(_DWORD *)v21;
          v20[1] = v21[1];
          v20[2] = v21[2];
          uint64_t v45 = *(int *)(v22 + 24);
          int v54 = (char *)v21 + v45;
          uint64_t v56 = (char *)v20 + v45;
          uint64_t v46 = sub_253B07160();
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v56, v54, v46);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        }
        uint64_t v47 = *(int *)(v18 + 24);
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    }
    sub_2536FA73C();
  }
  size_t v16 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2150) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v16);
LABEL_22:
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

void *initializeWithTake for TranscriptProtoSystemPromptResolutionInput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      size_t v16 = (char *)a1 + v15;
      int v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v10 = *(int *)(v9 + 20);
      uint64_t v11 = (_DWORD *)((char *)a1 + v10);
      uint64_t v12 = (_DWORD *)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_26B249528);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        *uint64_t v11 = *v12;
        *(_OWORD *)(v11 + 2) = *(_OWORD *)(v12 + 2);
        uint64_t v19 = *(int *)(v13 + 24);
        int v20 = (char *)v11 + v19;
        uint64_t v21 = (char *)v12 + v19;
        uint64_t v22 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v23 = *(int *)(v9 + 24);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE2150);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_13:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

void *assignWithTake for TranscriptProtoSystemPromptResolutionInput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_21:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_22;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (_DWORD *)((char *)a1 + v11);
        uint64_t v13 = (_DWORD *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_26B249528);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          _DWORD *v12 = *v13;
          *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
          uint64_t v28 = *(int *)(v14 + 24);
          uint64_t v29 = (char *)v12 + v28;
          uint64_t v30 = (char *)v13 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v32 = *(int *)(v10 + 24);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_22;
      }
      sub_2536FA73C();
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        *a1 = *a2;
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      }
      else
      {
        if (v17)
        {
          size_t v16 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v18 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v19 = *(int *)(v18 + 20);
        int v20 = (_DWORD *)((char *)a1 + v19);
        uint64_t v21 = (_DWORD *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_26B249528);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *int v20 = *v21;
          *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
          uint64_t v45 = *(int *)(v22 + 24);
          uint64_t v46 = (char *)v20 + v45;
          uint64_t v47 = (char *)v21 + v45;
          uint64_t v48 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        }
        uint64_t v49 = *(int *)(v18 + 24);
        uint64_t v50 = (char *)a1 + v49;
        uint64_t v51 = (char *)a2 + v49;
        uint64_t v52 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    }
    sub_2536FA73C();
  }
  size_t v16 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2150) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v16);
LABEL_22:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253899094);
}

uint64_t sub_253899094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2150);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538990B4);
}

uint64_t sub_2538990B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2150);
}

void sub_2538990C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionInputEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      int v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_253B07160();
      int v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v10 = *(int *)(v9 + 20);
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_26B249528);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
        uint64_t v21 = v12[2];
        v11[1] = v12[1];
        v11[2] = v21;
        uint64_t v22 = *(int *)(v13 + 24);
        uint64_t v30 = (char *)v12 + v22;
        uint64_t v31 = (char *)v11 + v22;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v31, v30, v23);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v25 = *(int *)(v9 + 24);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      goto LABEL_11;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionInputEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
    uint64_t v4 = a1 + *(int *)(v3 + 20);
    uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v4 + *(int *)(v5 + 24);
      uint64_t v7 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    uint64_t v8 = *(int *)(v3 + 24);
  }
  uint64_t v9 = a1 + v8;
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for TranscriptProtoSystemPromptResolutionInputEnum(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_253B07160();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_26B249528);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
      uint64_t v19 = v11[2];
      v10[1] = v11[1];
      v10[2] = v19;
      uint64_t v20 = *(int *)(v12 + 24);
      uint64_t v28 = (char *)v11 + v20;
      uint64_t v29 = (char *)v10 + v20;
      uint64_t v21 = sub_253B07160();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v29, v28, v21);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v23 = *(int *)(v8 + 24);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for TranscriptProtoSystemPromptResolutionInputEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_26B249528);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        uint64_t v18 = *(int *)(v11 + 24);
        uint64_t v26 = (char *)v10 + v18;
        uint64_t v27 = (char *)v9 + v18;
        uint64_t v19 = sub_253B07160();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v27, v26, v19);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
      }
      uint64_t v21 = *(int *)(v7 + 24);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoSystemPromptResolutionInputEnum(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (_DWORD *)((char *)a1 + v8);
    uint64_t v10 = (_DWORD *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      *(_OWORD *)(v9 + 2) = *(_OWORD *)(v10 + 2);
      uint64_t v17 = *(int *)(v11 + 24);
      uint64_t v18 = (char *)v9 + v17;
      uint64_t v19 = (char *)v10 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v21 = *(int *)(v7 + 24);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for TranscriptProtoSystemPromptResolutionInputEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (_DWORD *)((char *)a1 + v8);
      uint64_t v10 = (_DWORD *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_26B249528);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *uint64_t v9 = *v10;
        *(_OWORD *)(v9 + 2) = *(_OWORD *)(v10 + 2);
        uint64_t v17 = *(int *)(v11 + 24);
        uint64_t v18 = (char *)v9 + v17;
        uint64_t v19 = (char *)v10 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
      }
      uint64_t v21 = *(int *)(v7 + 24);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_253899DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538586EC(a1, a2, a3, (uint64_t)type metadata accessor for TranscriptProtoRequestContentTextContent, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CA4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C4C);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[9];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    uint64_t v11 = type metadata accessor for TranscriptProtoParameterSet(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B2495B8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v14 = *(int *)(v11 + 20);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v44 = (char *)v10 + v14;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v44, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = a3[10];
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_26B249528);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      uint64_t v23 = v20[2];
      v19[1] = v20[1];
      v19[2] = v23;
      uint64_t v24 = *(int *)(v21 + 24);
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v45 = (char *)v20 + v24;
      uint64_t v26 = sub_253B07160();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v25, v45, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v28 = a3[11];
    uint64_t v29 = (void *)((char *)v4 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_253462A5C(&qword_269CE0448);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v33;
      uint64_t v34 = v30[3];
      v29[2] = v30[2];
      v29[3] = v34;
      uint64_t v35 = *(int *)(v31 + 24);
      uint64_t v43 = (char *)v30 + v35;
      uint64_t v46 = (char *)v29 + v35;
      uint64_t v36 = sub_253B07160();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37(v46, v43, v36);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v38 = a3[12];
    uint64_t v39 = (char *)v4 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    uint64_t v41 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionResolverRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for TranscriptProtoParameterSet(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 24);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[11];
  uint64_t v13 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v12 + *(int *)(v13 + 24);
    uint64_t v15 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = a1 + a2[12];
  uint64_t v17 = sub_253B07160();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

uint64_t initializeWithCopy for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoParameterSet(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B2495B8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v44 = (char *)v9 + v12;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v13, v44, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = v3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_253462A5C(&qword_26B249528);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    uint64_t v21 = v18[2];
    v17[1] = v18[1];
    v17[2] = v21;
    uint64_t v22 = *(int *)(v19 + 24);
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v45 = (char *)v18 + v22;
    uint64_t v24 = sub_253B07160();
    uint64_t v25 = v3;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v45, v24);
    uint64_t v3 = v25;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v27 = v3[11];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = sub_253462A5C(&qword_269CE0448);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v32;
    uint64_t v33 = v29[3];
    v28[2] = v29[2];
    v28[3] = v33;
    uint64_t v34 = *(int *)(v30 + 24);
    uint64_t v43 = (char *)v29 + v34;
    uint64_t v46 = (char *)v28 + v34;
    uint64_t v35 = sub_253B07160();
    uint64_t v36 = v3;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v46, v43, v35);
    uint64_t v3 = v36;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v38 = v3[12];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoParameterSet(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      void *v7 = *v8;
      uint64_t v12 = *(int *)(v9 + 20);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v58 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v58, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B2495B8);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  void *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(int *)(v9 + 20);
  uint64_t v46 = (char *)v7 + v45;
  uint64_t v47 = (char *)v8 + v45;
  uint64_t v48 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v18[1] = v19[1];
      v18[2] = v19[2];
      uint64_t v23 = *(int *)(v20 + 24);
      uint64_t v24 = (char *)v18 + v23;
      uint64_t v59 = (char *)v19 + v23;
      uint64_t v25 = sub_253B07160();
      uint64_t v26 = a3;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v59, v25);
      a3 = v26;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v28 = sub_253462A5C(&qword_26B249528);
    memcpy(v18, v19, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(int *)(v20 + 24);
  uint64_t v50 = (char *)v18 + v49;
  uint64_t v51 = (char *)v19 + v49;
  uint64_t v52 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
LABEL_13:
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  uint64_t v32 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v32);
  int v34 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32);
  if (!v33)
  {
    if (!v34)
    {
      *uint64_t v30 = *v31;
      v30[1] = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30[2] = v31[2];
      v30[3] = v31[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v53 = *(int *)(v32 + 24);
      int v54 = (char *)v30 + v53;
      int v55 = (char *)v31 + v53;
      uint64_t v56 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v34)
  {
LABEL_18:
    uint64_t v39 = sub_253462A5C(&qword_269CE0448);
    memcpy(v30, v31, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  v30[2] = v31[2];
  v30[3] = v31[3];
  uint64_t v35 = *(int *)(v32 + 24);
  uint64_t v57 = (char *)v31 + v35;
  uint64_t v60 = (char *)v30 + v35;
  uint64_t v36 = sub_253B07160();
  uint64_t v37 = a3;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v60, v57, v36);
  a3 = v37;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
LABEL_19:
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoParameterSet(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B2495B8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    void *v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[10];
  uint64_t v16 = (_DWORD *)(a1 + v15);
  uint64_t v17 = (_DWORD *)(a2 + v15);
  uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_253462A5C(&qword_26B249528);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    uint64_t v20 = *(int *)(v18 + 24);
    int v21 = (char *)v16 + v20;
    int v22 = (char *)v17 + v20;
    uint64_t v23 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v24 = a3[11];
  uint64_t v25 = (_OWORD *)(a1 + v24);
  uint64_t v26 = (_OWORD *)(a2 + v24);
  uint64_t v27 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = sub_253462A5C(&qword_269CE0448);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    long long v29 = v26[1];
    _OWORD *v25 = *v26;
    v25[1] = v29;
    uint64_t v30 = *(int *)(v27 + 24);
    uint64_t v31 = (char *)v25 + v30;
    uint64_t v32 = (char *)v26 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoParameterSet(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *uint64_t v8 = *v9;
      uint64_t v13 = *(int *)(v10 + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B2495B8);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(int *)(v10 + 20);
  uint64_t v47 = (char *)v8 + v46;
  uint64_t v48 = (char *)v9 + v46;
  uint64_t v49 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v21);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      *(_OWORD *)(v19 + 1) = *(_OWORD *)(v20 + 1);
      uint64_t v24 = *(int *)(v21 + 24);
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v26 = (char *)v20 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v28 = sub_253462A5C(&qword_26B249528);
    memcpy(v19, v20, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  uint64_t v50 = v20[2];
  v19[1] = v20[1];
  v19[2] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v21 + 24);
  uint64_t v52 = (char *)v19 + v51;
  uint64_t v53 = (char *)v20 + v51;
  uint64_t v54 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
LABEL_13:
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  uint64_t v32 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v32);
  int v34 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32);
  if (!v33)
  {
    if (!v34)
    {
      uint64_t v55 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v55;
      swift_bridgeObjectRelease();
      uint64_t v56 = v31[3];
      v30[2] = v31[2];
      v30[3] = v56;
      swift_bridgeObjectRelease();
      uint64_t v57 = *(int *)(v32 + 24);
      uint64_t v58 = (char *)v30 + v57;
      uint64_t v59 = (char *)v31 + v57;
      uint64_t v60 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v34)
  {
LABEL_18:
    uint64_t v40 = sub_253462A5C(&qword_269CE0448);
    memcpy(v30, v31, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  long long v35 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v35;
  uint64_t v36 = *(int *)(v32 + 24);
  uint64_t v37 = (char *)v30 + v36;
  uint64_t v38 = (char *)v31 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
LABEL_19:
  uint64_t v41 = a3[12];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25389B498);
}

uint64_t sub_25389B498()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B2495B8);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_253945148();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2539455B8();
    }
    else
    {
      sub_253462A5C(&qword_269CE0448);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_25394532C();
      }
      else
      {
        sub_253B07160();
        sub_2539462E4();
      }
    }
  }
  uint64_t v8 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25389B58C);
}

void sub_25389B58C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B2495B8);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_25394519C();
    }
    else
    {
      sub_253462A5C(&qword_26B249528);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_253945614();
      }
      else
      {
        sub_253462A5C(&qword_269CE0448);
        sub_2535782A8();
        if (*(_DWORD *)(v5 + 84) == v0)
        {
          sub_2539453D4();
        }
        else
        {
          sub_253B07160();
          sub_253946304();
        }
      }
    }
    uint64_t v6 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_25389B668()
{
  sub_253760A08(319, &qword_26B2495C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterSet);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249A78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoContextRetrieved(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for TranscriptProtoContextRetrieved(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for TranscriptProtoContextRetrieved(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for TranscriptProtoContextRetrieved(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoContextRetrieved(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for TranscriptProtoContextRetrieved(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContextRetrieved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25389BC10);
}

uint64_t sub_25389BC14()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v0);
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 24));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContextRetrieved(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25389BC8C);
}

void sub_25389BC90()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 24));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_25389BCF0()
{
  return sub_2535DC13C();
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoRetrievedContextStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_26B249528);
      memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)v3;
      uint64_t v10 = v3[2];
      a1[1] = v3[1];
      a1[2] = v10;
      uint64_t v11 = *(int *)(v7 + 24);
      int v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)v3 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(v6 + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)v3 + v16;
    uint64_t v19 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, (uint64_t)v19))
    {
      uint64_t v20 = sub_253462A5C(&qword_269CE21A0);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      *uint64_t v17 = *v18;
      uint64_t v21 = v19[5];
      int v22 = &v17[v21];
      int v23 = &v18[v21];
      uint64_t v24 = sub_253B08E50();
      uint64_t v214 = v24;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
      }
      uint64_t v26 = v19[6];
      uint64_t v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      uint64_t v29 = type metadata accessor for ContextProtoConfidence(0);
      uint64_t v216 = v6;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
      {
        uint64_t v30 = sub_253462A5C(&qword_269CDF900);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
        v27[4] = v28[4];
        uint64_t v31 = *(int *)(v29 + 24);
        uint64_t v32 = &v27[v31];
        int v33 = &v28[v31];
        uint64_t v34 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
      }
      uint64_t v35 = v19[7];
      uint64_t v36 = &v17[v35];
      v217 = v18;
      uint64_t v37 = &v18[v35];
      uint64_t v38 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
      v215 = v3;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, (uint64_t)v38))
      {
        uint64_t v39 = sub_253462A5C(&qword_269CDF8F0);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
        uint64_t v6 = v216;
      }
      else
      {
        uint64_t v40 = v19;
        v212 = v17;
        uint64_t v41 = v37[1];
        *uint64_t v36 = *v37;
        v36[1] = v41;
        uint64_t v42 = v37[3];
        v36[2] = v37[2];
        v36[3] = v42;
        v36[4] = v37[4];
        uint64_t v43 = v38[7];
        uint64_t v44 = (char *)v36 + v43;
        uint64_t v45 = (char *)v37 + v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v29))
        {
          uint64_t v46 = sub_253462A5C(&qword_269CDF900);
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
          v44[4] = v45[4];
          uint64_t v47 = *(int *)(v29 + 24);
          uint64_t v48 = &v44[v47];
          uint64_t v49 = &v45[v47];
          uint64_t v50 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v29);
        }
        uint64_t v51 = v38[8];
        uint64_t v52 = (_DWORD *)((char *)v36 + v51);
        uint64_t v53 = (_DWORD *)((char *)v37 + v51);
        uint64_t v54 = type metadata accessor for ContextProtoBoundingBox(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v54))
        {
          uint64_t v55 = sub_253462A5C(&qword_269CDCCC0);
          memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          *uint64_t v52 = *v53;
          *((unsigned char *)v52 + 4) = *((unsigned char *)v53 + 4);
          v52[2] = v53[2];
          *((unsigned char *)v52 + 12) = *((unsigned char *)v53 + 12);
          v52[4] = v53[4];
          *((unsigned char *)v52 + 20) = *((unsigned char *)v53 + 20);
          *((unsigned char *)v52 + 28) = *((unsigned char *)v53 + 28);
          v52[6] = v53[6];
          uint64_t v56 = *(int *)(v54 + 32);
          uint64_t v57 = (char *)v52 + v56;
          uint64_t v58 = (char *)v53 + v56;
          uint64_t v59 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v54);
        }
        uint64_t v60 = v38[9];
        uint64_t v61 = (char *)v36 + v60;
        uint64_t v62 = (char *)v37 + v60;
        *(void *)uint64_t v61 = *(void *)v62;
        v61[8] = v62[8];
        uint64_t v63 = v38[10];
        uint64_t v64 = (void *)((char *)v36 + v63);
        int v65 = (void *)((char *)v37 + v63);
        uint64_t v66 = v65[1];
        *uint64_t v64 = *v65;
        v64[1] = v66;
        *((unsigned char *)v36 + v38[11]) = *((unsigned char *)v37 + v38[11]);
        *((unsigned char *)v36 + v38[12]) = *((unsigned char *)v37 + v38[12]);
        uint64_t v67 = v38[13];
        uint64_t v68 = (_DWORD *)((char *)v36 + v67);
        uint64_t v69 = (_DWORD *)((char *)v37 + v67);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v54))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CDCCC0);
          memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          *uint64_t v68 = *v69;
          *((unsigned char *)v68 + 4) = *((unsigned char *)v69 + 4);
          v68[2] = v69[2];
          *((unsigned char *)v68 + 12) = *((unsigned char *)v69 + 12);
          v68[4] = v69[4];
          *((unsigned char *)v68 + 20) = *((unsigned char *)v69 + 20);
          *((unsigned char *)v68 + 28) = *((unsigned char *)v69 + 28);
          v68[6] = v69[6];
          uint64_t v71 = *(int *)(v54 + 32);
          uint64_t v72 = (char *)v68 + v71;
          int v73 = (char *)v69 + v71;
          uint64_t v74 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v54);
        }
        *((unsigned char *)v36 + v38[14]) = *((unsigned char *)v37 + v38[14]);
        uint64_t v75 = v38[15];
        int v76 = (void *)((char *)v36 + v75);
        int v77 = (void *)((char *)v37 + v75);
        uint64_t v78 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v77, 1, v78))
        {
          uint64_t v79 = sub_253462A5C(&qword_269CDF920);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          uint64_t v80 = v77[1];
          *int v76 = *v77;
          v76[1] = v80;
          uint64_t v81 = v77[3];
          v76[2] = v77[2];
          v76[3] = v81;
          uint64_t v82 = *(int *)(v78 + 24);
          v205 = (char *)v77 + v82;
          v207 = (char *)v76 + v82;
          uint64_t v83 = sub_253B07160();
          __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v17 = v212;
          swift_bridgeObjectRetain();
          __dsta(v207, v205, v83);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v76, 0, 1, v78);
        }
        uint64_t v84 = v38[16];
        size_t v85 = (char *)v36 + v84;
        uint64_t v86 = (char *)v37 + v84;
        uint64_t v87 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
        uint64_t v6 = v216;
        uint64_t v19 = v40;
      }
      uint64_t v88 = v19[8];
      uint64_t v89 = &v17[v88];
      uint64_t v90 = &v217[v88];
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v217[v88], 1, v214))
      {
        uint64_t v91 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v214 - 8) + 16))(v89, v90, v214);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v214);
      }
      uint64_t v92 = v19[9];
      int v93 = &v17[v92];
      uint64_t v94 = &v217[v92];
      uint64_t v95 = type metadata accessor for ContextProtoStructuredContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v95))
      {
        uint64_t v96 = sub_253462A5C(&qword_269CDF8E0);
        memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        uint64_t v97 = type metadata accessor for ContextProtoStructuredContextKind(0);
        v211 = v19;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v97))
        {
          uint64_t v98 = sub_253462A5C(&qword_269CDF958);
          memcpy(v93, v94, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v213 = v17;
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v106 = v94[1];
            *int v93 = *v94;
            v93[1] = v106;
            uint64_t v107 = v97;
            uint64_t v108 = v94[3];
            v93[2] = v94[2];
            v93[3] = v108;
            uint64_t v109 = v94[5];
            v93[4] = v94[4];
            v93[5] = v109;
            uint64_t v110 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
            v209 = (char *)v93 + v110;
            __dstc = (char *)v94 + v110;
            uint64_t v111 = sub_253B07160();
            v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v97 = v107;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v112 = v111;
            uint64_t v17 = v213;
            v195(v209, __dstc, v112);
            uint64_t v6 = v216;
          }
          else
          {
            uint64_t v206 = v97;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v100 = v94[1];
              *int v93 = *v94;
              v93[1] = v100;
              *((unsigned char *)v93 + 16) = *((unsigned char *)v94 + 16);
              uint64_t v101 = v94[4];
              v93[3] = v94[3];
              v93[4] = v101;
              uint64_t v102 = v94[6];
              v93[5] = v94[5];
              v93[6] = v102;
              uint64_t v103 = v94[8];
              v93[7] = v94[7];
              v93[8] = v103;
              v93[9] = v94[9];
              uint64_t v104 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                            + 40);
              v208 = (char *)v93 + v104;
              __dstb = (char *)v94 + v104;
              uint64_t v105 = sub_253B07160();
              v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v6 = v216;
              swift_bridgeObjectRetain();
              v194(v208, __dstb, v105);
            }
            else
            {
              uint64_t v113 = v94[1];
              *int v93 = *v94;
              v93[1] = v113;
              uint64_t v114 = v94[3];
              v93[2] = v94[2];
              v93[3] = v114;
              uint64_t v115 = v94[5];
              v93[4] = v94[4];
              v93[5] = v115;
              uint64_t v116 = v94[7];
              v93[6] = v94[6];
              v93[7] = v116;
              uint64_t v117 = v94[9];
              v93[8] = v94[8];
              v93[9] = v117;
              *((_DWORD *)v93 + 20) = *((_DWORD *)v94 + 20);
              *((unsigned char *)v93 + 84) = *((unsigned char *)v94 + 84);
              v210 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
              uint64_t v118 = v210[15];
              __dst = (void *)((char *)v93 + v118);
              uint64_t v119 = (void *)((char *)v94 + v118);
              uint64_t v120 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v119, 1, v120))
              {
                uint64_t v121 = sub_253462A5C(&qword_269CDF998);
                memcpy(__dst, v119, *(void *)(*(void *)(v121 - 8) + 64));
              }
              else
              {
                uint64_t v122 = v119[1];
                void *__dst = *v119;
                __dst[1] = v122;
                *((_WORD *)__dst + 8) = *((_WORD *)v119 + 8);
                uint64_t v123 = *(int *)(v120 + 28);
                v193 = (char *)v119 + v123;
                v196 = (char *)__dst + v123;
                uint64_t v124 = sub_253B07160();
                uint64_t v125 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
                swift_bridgeObjectRetain();
                v125(v196, v193, v124);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v120);
              }
              uint64_t v126 = v210[16];
              uint64_t v127 = (char *)v93 + v126;
              uint64_t v128 = (char *)v94 + v126;
              unint64_t v129 = *((void *)v128 + 1);
              uint64_t v17 = v213;
              if (v129 >> 60 == 15)
              {
                *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
              }
              else
              {
                uint64_t v130 = *(void *)v128;
                sub_25348A9C8(*(void *)v128, *((void *)v128 + 1));
                *(void *)uint64_t v127 = v130;
                *((void *)v127 + 1) = v129;
              }
              uint64_t v131 = v210[17];
              uint64_t v132 = (void *)((char *)v93 + v131);
              uint64_t v133 = (void *)((char *)v94 + v131);
              uint64_t v134 = v133[1];
              *uint64_t v132 = *v133;
              v132[1] = v134;
              uint64_t v135 = v210[18];
              uint64_t v136 = (void *)((char *)v93 + v135);
              uint64_t v137 = (void *)((char *)v94 + v135);
              uint64_t v138 = v137[1];
              *uint64_t v136 = *v137;
              v136[1] = v138;
              uint64_t v139 = v210[19];
              uint64_t v140 = (_DWORD *)((char *)v93 + v139);
              uint64_t v141 = (_DWORD *)((char *)v94 + v139);
              uint64_t v142 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v142))
              {
                uint64_t v143 = sub_253462A5C(&qword_269CDF988);
                memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
              }
              else
              {
                _DWORD *v140 = *v141;
                *((unsigned char *)v140 + 4) = *((unsigned char *)v141 + 4);
                uint64_t v144 = *((void *)v141 + 2);
                *((void *)v140 + 1) = *((void *)v141 + 1);
                *((void *)v140 + 2) = v144;
                v140[6] = v141[6];
                *((unsigned char *)v140 + 28) = *((unsigned char *)v141 + 28);
                v140[8] = v141[8];
                *((unsigned char *)v140 + 36) = *((unsigned char *)v141 + 36);
                uint64_t v145 = *(int *)(v142 + 32);
                v197 = (char *)v141 + v145;
                __dstd = (char *)v140 + v145;
                uint64_t v146 = sub_253B07160();
                uint64_t v147 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v148 = v146;
                uint64_t v17 = v213;
                v147(__dstd, v197, v148);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, v142);
              }
              uint64_t v149 = v210[20];
              uint64_t v150 = (char *)v93 + v149;
              uint64_t v151 = (char *)v94 + v149;
              *(void *)uint64_t v150 = *(void *)v151;
              v150[8] = v151[8];
              uint64_t v152 = v210[21];
              uint64_t v153 = (void *)((char *)v93 + v152);
              uint64_t v154 = (void *)((char *)v94 + v152);
              uint64_t v155 = v154[1];
              *uint64_t v153 = *v154;
              v153[1] = v155;
              *((unsigned char *)v93 + v210[22]) = *((unsigned char *)v94 + v210[22]);
              *((unsigned char *)v93 + v210[23]) = *((unsigned char *)v94 + v210[23]);
              uint64_t v156 = v210[24];
              uint64_t v157 = (void *)((char *)v93 + v156);
              uint64_t v158 = (void *)((char *)v94 + v156);
              uint64_t v159 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v158, 1, v159))
              {
                uint64_t v160 = sub_253462A5C(&qword_269CDF978);
                memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
              }
              else
              {
                uint64_t v161 = v158[1];
                *uint64_t v157 = *v158;
                v157[1] = v161;
                uint64_t v162 = v158[3];
                v157[2] = v158[2];
                v157[3] = v162;
                uint64_t v163 = v158[5];
                v157[4] = v158[4];
                v157[5] = v163;
                uint64_t v164 = v158[7];
                v157[6] = v158[6];
                v157[7] = v164;
                uint64_t v165 = v158[9];
                v157[8] = v158[8];
                v157[9] = v165;
                v157[10] = v158[10];
                uint64_t v166 = *(int *)(v159 + 40);
                v198 = (char *)v158 + v166;
                __dste = (char *)v157 + v166;
                uint64_t v167 = sub_253B07160();
                uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v17 = v213;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v192(__dste, v198, v167);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v157, 0, 1, v159);
              }
              *((unsigned char *)v93 + v210[25]) = *((unsigned char *)v94 + v210[25]);
              *((unsigned char *)v93 + v210[26]) = *((unsigned char *)v94 + v210[26]);
              uint64_t v168 = v210[27];
              uint64_t v169 = (char *)v93 + v168;
              uint64_t v170 = (char *)v94 + v168;
              uint64_t v171 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
              uint64_t v6 = v216;
              uint64_t v97 = v206;
            }
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v97);
        }
        uint64_t v172 = *(int *)(v95 + 20);
        uint64_t v173 = (char *)v93 + v172;
        uint64_t v174 = (char *)v94 + v172;
        uint64_t v175 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v95);
        uint64_t v19 = v211;
      }
      uint64_t v176 = v19[10];
      uint64_t v177 = &v17[v176];
      uint64_t v178 = &v217[v176];
      uint64_t v179 = (uint64_t)v19;
      uint64_t v180 = v178[1];
      *uint64_t v177 = *v178;
      v177[1] = v180;
      uint64_t v181 = *(int *)(v179 + 44);
      v182 = &v17[v181];
      v183 = &v217[v181];
      uint64_t v184 = (uint64_t)v17;
      uint64_t v185 = sub_253B07160();
      uint64_t v186 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v185 - 8) + 16);
      swift_bridgeObjectRetain();
      v186(v182, v183, v185);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v184, 0, 1, v179);
      uint64_t v3 = v215;
    }
    uint64_t v187 = *(int *)(v6 + 24);
    v188 = (char *)a1 + v187;
    uint64_t v189 = (char *)v3 + v187;
    uint64_t v190 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v188, v189, v190);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRetrievedContextStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, (uint64_t)v8))
  {
    uint64_t v9 = v7 + v8[5];
    uint64_t v10 = sub_253B08E50();
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v7 + v8[6];
    uint64_t v12 = type metadata accessor for ContextProtoConfidence(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12))
    {
      uint64_t v13 = v11 + *(int *)(v12 + 24);
      uint64_t v14 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v7 + v8[7];
    uint64_t v16 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, (uint64_t)v16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v15 + v16[7];
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v12))
      {
        uint64_t v18 = v17 + *(int *)(v12 + 24);
        uint64_t v19 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      }
      uint64_t v20 = v15 + v16[8];
      uint64_t v21 = type metadata accessor for ContextProtoBoundingBox(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v20, 1, v21))
      {
        uint64_t v22 = v20 + *(int *)(v21 + 32);
        uint64_t v23 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = v15 + v16[13];
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v21))
      {
        uint64_t v25 = v24 + *(int *)(v21 + 32);
        uint64_t v26 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      }
      uint64_t v27 = v15 + v16[15];
      uint64_t v28 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = v27 + *(int *)(v28 + 24);
        uint64_t v30 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      }
      uint64_t v31 = v15 + v16[16];
      uint64_t v32 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    }
    uint64_t v33 = v7 + v8[8];
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v33, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v33, v10);
    }
    uint64_t v34 = v7 + v8[9];
    uint64_t v35 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v34, 1, v35)) {
      goto LABEL_38;
    }
    uint64_t v36 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v34, 1, v36)) {
      goto LABEL_37;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        break;
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v39 = v34 + v38[15];
        uint64_t v40 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v40))
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = v39 + *(int *)(v40 + 28);
          uint64_t v42 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        }
        uint64_t v43 = (uint64_t *)(v34 + v38[16]);
        unint64_t v44 = v43[1];
        if (v44 >> 60 != 15) {
          sub_253487D84(*v43, v44);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = v34 + v38[19];
        uint64_t v46 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v46))
        {
          swift_bridgeObjectRelease();
          uint64_t v47 = v45 + *(int *)(v46 + 32);
          uint64_t v48 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
        }
        swift_bridgeObjectRelease();
        uint64_t v49 = v34 + v38[24];
        uint64_t v50 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v49, 1, v50))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v51 = v49 + *(int *)(v50 + 40);
          uint64_t v52 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
        }
        uint64_t v53 = v38[27];
        break;
      default:
LABEL_37:
        uint64_t v56 = v34 + *(int *)(v35 + 20);
        uint64_t v57 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
LABEL_38:
        swift_bridgeObjectRelease();
        uint64_t v58 = v7 + v8[11];
        uint64_t v59 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
        goto LABEL_39;
    }
    uint64_t v54 = v34 + v53;
    uint64_t v55 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
    goto LABEL_37;
  }
LABEL_39:
  uint64_t v60 = a1 + *(int *)(a2 + 24);
  uint64_t v61 = sub_253B07160();
  uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8);
  return v62(v60, v61);
}

void *initializeWithCopy for TranscriptProtoRetrievedContextStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(v6 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_253462A5C(&qword_269CE21A0);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    uint64_t v19 = v17[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = sub_253B08E50();
    v218 = a1;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      uint64_t v23 = v22;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v25 = v17[6];
    uint64_t v26 = &v15[v25];
    uint64_t v27 = &v16[v25];
    uint64_t v28 = type metadata accessor for ContextProtoConfidence(0);
    uint64_t v220 = a3;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_253462A5C(&qword_269CDF900);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      uint64_t v30 = *(int *)(v28 + 24);
      uint64_t v31 = &v26[v30];
      uint64_t v32 = &v27[v30];
      uint64_t v33 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v34 = v23;
    a1 = v218;
    uint64_t v35 = v17[7];
    uint64_t v36 = &v15[v35];
    v221 = v16;
    uint64_t v37 = &v16[v35];
    uint64_t v38 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    v219 = a2;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      uint64_t v39 = sub_253462A5C(&qword_269CDF8F0);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v213 = v34;
      uint64_t v214 = v17;
      uint64_t v216 = v15;
      uint64_t v40 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v40;
      uint64_t v41 = v37[3];
      v36[2] = v37[2];
      v36[3] = v41;
      v36[4] = v37[4];
      uint64_t v42 = v38[7];
      uint64_t v43 = (char *)v36 + v42;
      unint64_t v44 = (char *)v37 + v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v28))
      {
        uint64_t v45 = sub_253462A5C(&qword_269CDF900);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        uint64_t v46 = *(int *)(v28 + 24);
        uint64_t v47 = &v43[v46];
        uint64_t v48 = &v44[v46];
        uint64_t v49 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v28);
      }
      uint64_t v50 = v38[8];
      uint64_t v51 = (_DWORD *)((char *)v36 + v50);
      uint64_t v52 = (_DWORD *)((char *)v37 + v50);
      uint64_t v53 = type metadata accessor for ContextProtoBoundingBox(0);
      uint64_t v15 = v216;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
      {
        uint64_t v54 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        *uint64_t v51 = *v52;
        *((unsigned char *)v51 + 4) = *((unsigned char *)v52 + 4);
        v51[2] = v52[2];
        *((unsigned char *)v51 + 12) = *((unsigned char *)v52 + 12);
        v51[4] = v52[4];
        *((unsigned char *)v51 + 20) = *((unsigned char *)v52 + 20);
        *((unsigned char *)v51 + 28) = *((unsigned char *)v52 + 28);
        v51[6] = v52[6];
        uint64_t v55 = *(int *)(v53 + 32);
        uint64_t v56 = (char *)v51 + v55;
        uint64_t v57 = (char *)v52 + v55;
        uint64_t v58 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
      }
      uint64_t v59 = v38[9];
      uint64_t v60 = (char *)v36 + v59;
      uint64_t v61 = (char *)v37 + v59;
      *(void *)uint64_t v60 = *(void *)v61;
      v60[8] = v61[8];
      uint64_t v62 = v38[10];
      uint64_t v63 = (void *)((char *)v36 + v62);
      uint64_t v64 = (void *)((char *)v37 + v62);
      uint64_t v65 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v65;
      *((unsigned char *)v36 + v38[11]) = *((unsigned char *)v37 + v38[11]);
      *((unsigned char *)v36 + v38[12]) = *((unsigned char *)v37 + v38[12]);
      uint64_t v66 = v38[13];
      uint64_t v67 = (_DWORD *)((char *)v36 + v66);
      uint64_t v68 = (_DWORD *)((char *)v37 + v66);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v53))
      {
        uint64_t v69 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        *uint64_t v67 = *v68;
        *((unsigned char *)v67 + 4) = *((unsigned char *)v68 + 4);
        v67[2] = v68[2];
        *((unsigned char *)v67 + 12) = *((unsigned char *)v68 + 12);
        v67[4] = v68[4];
        *((unsigned char *)v67 + 20) = *((unsigned char *)v68 + 20);
        *((unsigned char *)v67 + 28) = *((unsigned char *)v68 + 28);
        v67[6] = v68[6];
        uint64_t v70 = *(int *)(v53 + 32);
        uint64_t v71 = (char *)v67 + v70;
        uint64_t v72 = (char *)v68 + v70;
        uint64_t v73 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v53);
      }
      *((unsigned char *)v36 + v38[14]) = *((unsigned char *)v37 + v38[14]);
      uint64_t v74 = v38[15];
      uint64_t v75 = (void *)((char *)v36 + v74);
      int v76 = (void *)((char *)v37 + v74);
      uint64_t v77 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v76, 1, v77))
      {
        uint64_t v78 = sub_253462A5C(&qword_269CDF920);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        uint64_t v79 = v76[1];
        *uint64_t v75 = *v76;
        v75[1] = v79;
        uint64_t v80 = v76[3];
        v75[2] = v76[2];
        v75[3] = v80;
        uint64_t v81 = *(int *)(v77 + 24);
        uint64_t v82 = (char *)v75 + v81;
        v210 = (char *)v76 + v81;
        uint64_t v83 = sub_253B07160();
        uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
        uint64_t v15 = v216;
        swift_bridgeObjectRetain();
        uint64_t v17 = v214;
        swift_bridgeObjectRetain();
        v206(v82, v210, v83);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v75, 0, 1, v77);
      }
      uint64_t v34 = v213;
      uint64_t v84 = v38[16];
      size_t v85 = (char *)v36 + v84;
      uint64_t v86 = (char *)v37 + v84;
      uint64_t v87 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    a3 = v220;
    uint64_t v88 = v17[8];
    uint64_t v89 = &v15[v88];
    uint64_t v90 = &v221[v88];
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v221[v88], 1, v34))
    {
      uint64_t v91 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16))(v89, v90, v34);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v34);
    }
    uint64_t v92 = v17[9];
    int v93 = &v15[v92];
    uint64_t v94 = &v221[v92];
    uint64_t v95 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v95))
    {
      uint64_t v96 = sub_253462A5C(&qword_269CDF8E0);
      memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      uint64_t v97 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v97))
      {
        uint64_t v98 = sub_253462A5C(&qword_269CDF958);
        memcpy(v93, v94, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v217 = v15;
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v208 = v97;
          uint64_t v109 = v94[1];
          *int v93 = *v94;
          v93[1] = v109;
          uint64_t v110 = v94[3];
          v93[2] = v94[2];
          v93[3] = v110;
          uint64_t v111 = v94[5];
          v93[4] = v94[4];
          v93[5] = v111;
          uint64_t v112 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
          v211 = (char *)v93 + v112;
          __dstb = (char *)v94 + v112;
          uint64_t v113 = v17;
          uint64_t v114 = sub_253B07160();
          v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
          uint64_t v108 = v208;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v15 = v217;
          swift_bridgeObjectRetain();
          uint64_t v115 = v114;
          uint64_t v17 = v113;
          v197(v211, __dstb, v115);
          a3 = v220;
        }
        else
        {
          v215 = v17;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v100 = v94[1];
            *int v93 = *v94;
            v93[1] = v100;
            *((unsigned char *)v93 + 16) = *((unsigned char *)v94 + 16);
            uint64_t v101 = v94[4];
            v93[3] = v94[3];
            v93[4] = v101;
            uint64_t v102 = v94[6];
            v93[5] = v94[5];
            v93[6] = v102;
            uint64_t v103 = v94[8];
            v93[7] = v94[7];
            v93[8] = v103;
            v93[9] = v94[9];
            uint64_t v104 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
            __dsta = (char *)v94 + v104;
            v207 = (char *)v93 + v104;
            uint64_t v105 = v97;
            uint64_t v106 = sub_253B07160();
            v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            a3 = v220;
            swift_bridgeObjectRetain();
            uint64_t v107 = v106;
            uint64_t v108 = v105;
            v196(v207, __dsta, v107);
          }
          else
          {
            uint64_t v209 = v97;
            uint64_t v116 = v94[1];
            *int v93 = *v94;
            v93[1] = v116;
            uint64_t v117 = v94[3];
            v93[2] = v94[2];
            v93[3] = v117;
            uint64_t v118 = v94[5];
            v93[4] = v94[4];
            v93[5] = v118;
            uint64_t v119 = v94[7];
            v93[6] = v94[6];
            v93[7] = v119;
            uint64_t v120 = v94[9];
            v93[8] = v94[8];
            v93[9] = v120;
            *((_DWORD *)v93 + 20) = *((_DWORD *)v94 + 20);
            *((unsigned char *)v93 + 84) = *((unsigned char *)v94 + 84);
            v212 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
            uint64_t v121 = v212[15];
            __dst = (void *)((char *)v93 + v121);
            uint64_t v122 = (void *)((char *)v94 + v121);
            uint64_t v123 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v122, 1, v123))
            {
              uint64_t v124 = sub_253462A5C(&qword_269CDF998);
              memcpy(__dst, v122, *(void *)(*(void *)(v124 - 8) + 64));
            }
            else
            {
              uint64_t v125 = v122[1];
              void *__dst = *v122;
              __dst[1] = v125;
              *((_WORD *)__dst + 8) = *((_WORD *)v122 + 8);
              uint64_t v126 = *(int *)(v123 + 28);
              v195 = (char *)v122 + v126;
              v198 = (char *)__dst + v126;
              uint64_t v127 = sub_253B07160();
              uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
              swift_bridgeObjectRetain();
              v128(v198, v195, v127);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v123);
            }
            uint64_t v129 = v212[16];
            uint64_t v130 = (char *)v93 + v129;
            uint64_t v131 = (char *)v94 + v129;
            unint64_t v132 = *((void *)v131 + 1);
            uint64_t v17 = v215;
            if (v132 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
            }
            else
            {
              uint64_t v133 = *(void *)v131;
              sub_25348A9C8(*(void *)v131, *((void *)v131 + 1));
              *(void *)uint64_t v130 = v133;
              *((void *)v130 + 1) = v132;
            }
            uint64_t v134 = v212[17];
            uint64_t v135 = (void *)((char *)v93 + v134);
            uint64_t v136 = (void *)((char *)v94 + v134);
            uint64_t v137 = v136[1];
            void *v135 = *v136;
            v135[1] = v137;
            uint64_t v138 = v212[18];
            uint64_t v139 = (void *)((char *)v93 + v138);
            uint64_t v140 = (void *)((char *)v94 + v138);
            uint64_t v141 = v140[1];
            void *v139 = *v140;
            v139[1] = v141;
            uint64_t v142 = v212[19];
            uint64_t v143 = (_DWORD *)((char *)v93 + v142);
            uint64_t v144 = (_DWORD *)((char *)v94 + v142);
            uint64_t v145 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v144, 1, v145))
            {
              uint64_t v146 = sub_253462A5C(&qword_269CDF988);
              memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
            }
            else
            {
              _DWORD *v143 = *v144;
              *((unsigned char *)v143 + 4) = *((unsigned char *)v144 + 4);
              uint64_t v147 = *((void *)v144 + 2);
              *((void *)v143 + 1) = *((void *)v144 + 1);
              *((void *)v143 + 2) = v147;
              v143[6] = v144[6];
              *((unsigned char *)v143 + 28) = *((unsigned char *)v144 + 28);
              v143[8] = v144[8];
              *((unsigned char *)v143 + 36) = *((unsigned char *)v144 + 36);
              uint64_t v148 = *(int *)(v145 + 32);
              v199 = (char *)v144 + v148;
              __dstc = (char *)v143 + v148;
              uint64_t v149 = sub_253B07160();
              uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
              swift_bridgeObjectRetain();
              v150(__dstc, v199, v149);
              uint64_t v17 = v215;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v143, 0, 1, v145);
            }
            uint64_t v151 = v212[20];
            uint64_t v152 = (char *)v93 + v151;
            uint64_t v153 = (char *)v94 + v151;
            *(void *)uint64_t v152 = *(void *)v153;
            v152[8] = v153[8];
            uint64_t v154 = v212[21];
            uint64_t v155 = (void *)((char *)v93 + v154);
            uint64_t v156 = (void *)((char *)v94 + v154);
            uint64_t v157 = v156[1];
            *uint64_t v155 = *v156;
            v155[1] = v157;
            *((unsigned char *)v93 + v212[22]) = *((unsigned char *)v94 + v212[22]);
            *((unsigned char *)v93 + v212[23]) = *((unsigned char *)v94 + v212[23]);
            uint64_t v158 = v212[24];
            uint64_t v159 = (void *)((char *)v93 + v158);
            uint64_t v160 = (void *)((char *)v94 + v158);
            uint64_t v161 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
            swift_bridgeObjectRetain();
            uint64_t v15 = v217;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v160, 1, v161))
            {
              uint64_t v162 = sub_253462A5C(&qword_269CDF978);
              memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
            }
            else
            {
              uint64_t v163 = v160[1];
              *uint64_t v159 = *v160;
              v159[1] = v163;
              uint64_t v164 = v160[3];
              v159[2] = v160[2];
              v159[3] = v164;
              uint64_t v165 = v160[5];
              v159[4] = v160[4];
              v159[5] = v165;
              uint64_t v166 = v160[7];
              v159[6] = v160[6];
              v159[7] = v166;
              uint64_t v167 = v160[9];
              v159[8] = v160[8];
              v159[9] = v167;
              v159[10] = v160[10];
              uint64_t v168 = *(int *)(v161 + 40);
              v200 = (char *)v160 + v168;
              __dstd = (char *)v159 + v168;
              uint64_t v169 = sub_253B07160();
              v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v15 = v217;
              swift_bridgeObjectRetain();
              uint64_t v17 = v215;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v194(__dstd, v200, v169);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v159, 0, 1, v161);
            }
            *((unsigned char *)v93 + v212[25]) = *((unsigned char *)v94 + v212[25]);
            *((unsigned char *)v93 + v212[26]) = *((unsigned char *)v94 + v212[26]);
            uint64_t v170 = v212[27];
            uint64_t v171 = (char *)v93 + v170;
            uint64_t v172 = (char *)v94 + v170;
            uint64_t v173 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
            a3 = v220;
            uint64_t v108 = v209;
          }
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v108);
      }
      uint64_t v174 = *(int *)(v95 + 20);
      uint64_t v175 = (char *)v93 + v174;
      uint64_t v176 = (char *)v94 + v174;
      uint64_t v177 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v95);
    }
    uint64_t v178 = v17[10];
    uint64_t v179 = &v15[v178];
    uint64_t v180 = &v221[v178];
    uint64_t v181 = v180[1];
    void *v179 = *v180;
    v179[1] = v181;
    uint64_t v182 = v17[11];
    v183 = &v15[v182];
    uint64_t v184 = (uint64_t)v15;
    uint64_t v185 = &v221[v182];
    uint64_t v186 = (uint64_t)v17;
    uint64_t v187 = sub_253B07160();
    v188 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v187 - 8) + 16);
    swift_bridgeObjectRetain();
    v188(v183, v185, v187);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v184, 0, 1, v186);
    a2 = v219;
  }
  uint64_t v189 = *(int *)(a3 + 24);
  uint64_t v190 = (char *)a1 + v189;
  v191 = (char *)a2 + v189;
  uint64_t v192 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
  return a1;
}

void *assignWithCopy for TranscriptProtoRetrievedContextStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(v6 + 24);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, (uint64_t)v18);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, (uint64_t)v18);
  if (!v19)
  {
    if (v20)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    *uint64_t v16 = *v17;
    uint64_t v31 = v18[5];
    uint64_t v32 = &v16[v31];
    uint64_t v33 = &v17[v31];
    uint64_t v34 = sub_253B08E50();
    int v35 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v34);
    int v36 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34);
    uint64_t v640 = v34;
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v56 = *(void *)(v34 - 8);
      if (!v36)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 24))(v32, v33, v34);
LABEL_29:
        uint64_t v58 = v18[6];
        uint64_t v59 = &v16[v58];
        uint64_t v60 = &v17[v58];
        uint64_t v61 = type metadata accessor for ContextProtoConfidence(0);
        int v62 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v59, 1, v61);
        int v63 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v61);
        uint64_t v663 = a3;
        if (v62)
        {
          if (!v63)
          {
            *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
            v59[4] = v60[4];
            uint64_t v64 = *(int *)(v61 + 24);
            uint64_t v65 = &v59[v64];
            uint64_t v66 = v18;
            uint64_t v67 = &v60[v64];
            uint64_t v68 = sub_253B07160();
            uint64_t v69 = v67;
            uint64_t v18 = v66;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v65, v69, v68);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v61);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v63)
          {
            *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
            v59[4] = v60[4];
            uint64_t v146 = *(int *)(v61 + 24);
            uint64_t v147 = &v59[v146];
            uint64_t v148 = v18;
            uint64_t v149 = &v60[v146];
            uint64_t v150 = sub_253B07160();
            uint64_t v151 = v149;
            uint64_t v18 = v148;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 24))(v147, v151, v150);
LABEL_35:
            uint64_t v71 = v18[7];
            uint64_t v72 = &v16[v71];
            uint64_t v73 = &v17[v71];
            uint64_t v74 = type metadata accessor for ContextProtoContextMetadata(0);
            int v75 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v74);
            v651 = (int *)v74;
            int v76 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v73, 1, v74);
            if (v75)
            {
              if (!v76)
              {
                v658 = v18;
                *uint64_t v72 = *v73;
                v72[1] = v73[1];
                v72[2] = v73[2];
                v72[3] = v73[3];
                v72[4] = v73[4];
                uint64_t v77 = *(int *)(v74 + 28);
                uint64_t v78 = (char *)v72 + v77;
                uint64_t v79 = (char *)v73 + v77;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v61))
                {
                  uint64_t v80 = sub_253462A5C(&qword_269CDF900);
                  memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
                  v78[4] = v79[4];
                  uint64_t v158 = *(int *)(v61 + 24);
                  uint64_t v159 = &v78[v158];
                  uint64_t v160 = &v79[v158];
                  uint64_t v161 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v78, 0, 1, v61);
                }
                uint64_t v162 = v651[8];
                uint64_t v163 = (_DWORD *)((char *)v72 + v162);
                uint64_t v164 = (int *)((char *)v73 + v162);
                uint64_t v165 = type metadata accessor for ContextProtoBoundingBox(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v165))
                {
                  uint64_t v166 = sub_253462A5C(&qword_269CDCCC0);
                  memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
                }
                else
                {
                  int v167 = *v164;
                  *((unsigned char *)v163 + 4) = *((unsigned char *)v164 + 4);
                  *uint64_t v163 = v167;
                  int v168 = v164[2];
                  *((unsigned char *)v163 + 12) = *((unsigned char *)v164 + 12);
                  v163[2] = v168;
                  int v169 = v164[4];
                  *((unsigned char *)v163 + 20) = *((unsigned char *)v164 + 20);
                  v163[4] = v169;
                  int v170 = v164[6];
                  *((unsigned char *)v163 + 28) = *((unsigned char *)v164 + 28);
                  v163[6] = v170;
                  uint64_t v171 = *(int *)(v165 + 32);
                  uint64_t v172 = (char *)v163 + v171;
                  uint64_t v173 = (char *)v164 + v171;
                  uint64_t v174 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v165);
                }
                uint64_t v175 = v651[9];
                uint64_t v176 = (char *)v72 + v175;
                uint64_t v177 = (char *)v73 + v175;
                uint64_t v178 = *(void *)v177;
                v176[8] = v177[8];
                *(void *)uint64_t v176 = v178;
                uint64_t v179 = v651[10];
                uint64_t v180 = (void *)((char *)v72 + v179);
                uint64_t v181 = (void *)((char *)v73 + v179);
                void *v180 = *v181;
                v180[1] = v181[1];
                *((unsigned char *)v72 + v651[11]) = *((unsigned char *)v73 + v651[11]);
                *((unsigned char *)v72 + v651[12]) = *((unsigned char *)v73 + v651[12]);
                uint64_t v182 = v651[13];
                v183 = (_DWORD *)((char *)v72 + v182);
                uint64_t v184 = (int *)((char *)v73 + v182);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v184, 1, v165))
                {
                  uint64_t v185 = sub_253462A5C(&qword_269CDCCC0);
                  memcpy(v183, v184, *(void *)(*(void *)(v185 - 8) + 64));
                }
                else
                {
                  int v186 = *v184;
                  *((unsigned char *)v183 + 4) = *((unsigned char *)v184 + 4);
                  _DWORD *v183 = v186;
                  int v187 = v184[2];
                  *((unsigned char *)v183 + 12) = *((unsigned char *)v184 + 12);
                  v183[2] = v187;
                  int v188 = v184[4];
                  *((unsigned char *)v183 + 20) = *((unsigned char *)v184 + 20);
                  v183[4] = v188;
                  int v189 = v184[6];
                  *((unsigned char *)v183 + 28) = *((unsigned char *)v184 + 28);
                  v183[6] = v189;
                  uint64_t v190 = *(int *)(v165 + 32);
                  v191 = (char *)v183 + v190;
                  uint64_t v192 = (char *)v184 + v190;
                  uint64_t v193 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v183, 0, 1, v165);
                }
                *((unsigned char *)v72 + v651[14]) = *((unsigned char *)v73 + v651[14]);
                uint64_t v194 = v651[15];
                v195 = (void *)((char *)v72 + v194);
                v196 = (void *)((char *)v73 + v194);
                uint64_t v197 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v196, 1, v197))
                {
                  uint64_t v198 = sub_253462A5C(&qword_269CDF920);
                  memcpy(v195, v196, *(void *)(*(void *)(v198 - 8) + 64));
                }
                else
                {
                  void *v195 = *v196;
                  v195[1] = v196[1];
                  v195[2] = v196[2];
                  v195[3] = v196[3];
                  uint64_t v199 = *(int *)(v197 + 24);
                  v612 = (char *)v196 + v199;
                  v629 = (char *)v195 + v199;
                  uint64_t v200 = sub_253B07160();
                  v587 = *(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v587(v629, v612, v200);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v195, 0, 1, v197);
                }
                uint64_t v18 = v658;
                uint64_t v201 = v651[16];
                v202 = (char *)v72 + v201;
                v203 = (char *)v73 + v201;
                uint64_t v204 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v72, 0, 1, (uint64_t)v651);
LABEL_127:
                uint64_t v352 = v18[8];
                v353 = &v16[v352];
                v354 = &v17[v352];
                int v355 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v16[v352], 1, v640);
                int v356 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v354, 1, v640);
                if (v355)
                {
                  if (!v356)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v640 - 8) + 16))(v353, v354, v640);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v353, 0, 1, v640);
                    goto LABEL_133;
                  }
                }
                else
                {
                  uint64_t v357 = *(void *)(v640 - 8);
                  if (!v356)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v357 + 24))(v353, v354, v640);
LABEL_133:
                    uint64_t v359 = v18[9];
                    v360 = &v16[v359];
                    v361 = &v17[v359];
                    uint64_t v362 = type metadata accessor for ContextProtoStructuredContext(0);
                    int v363 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v360, 1, v362);
                    int v364 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v361, 1, v362);
                    if (v363)
                    {
                      if (!v364)
                      {
                        uint64_t v365 = type metadata accessor for ContextProtoStructuredContextKind(0);
                        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v361, 1, v365))
                        {
                          uint64_t v366 = sub_253462A5C(&qword_269CDF958);
                          memcpy(v360, v361, *(void *)(*(void *)(v366 - 8) + 64));
LABEL_176:
                          uint64_t v445 = *(int *)(v362 + 20);
                          v446 = (char *)v360 + v445;
                          v447 = (char *)v361 + v445;
                          uint64_t v448 = sub_253B07160();
                          (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v446, v447, v448);
                          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v360, 0, 1, v362);
                          goto LABEL_194;
                        }
                        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                        v656 = a2;
                        v648 = v17;
                        v661 = v18;
                        uint64_t v653 = v365;
                        if (EnumCaseMultiPayload == 2)
                        {
                          void *v360 = *v361;
                          v360[1] = v361[1];
                          v360[2] = v361[2];
                          v360[3] = v361[3];
                          v360[4] = v361[4];
                          v360[5] = v361[5];
                          uint64_t v380 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0)
                                        + 28);
                          v619 = (char *)v361 + v380;
                          v632 = (char *)v360 + v380;
                          uint64_t v381 = sub_253B07160();
                          v597 = *(void (**)(char *, char *, uint64_t))(*(void *)(v381 - 8) + 16);
                          v378 = v16;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          uint64_t v382 = v381;
                          a2 = v656;
                          v597(v632, v619, v382);
                        }
                        else
                        {
                          if (EnumCaseMultiPayload != 1)
                          {
                            void *v360 = *v361;
                            v360[1] = v361[1];
                            v360[2] = v361[2];
                            v360[3] = v361[3];
                            v360[4] = v361[4];
                            v360[5] = v361[5];
                            v360[6] = v361[6];
                            v360[7] = v361[7];
                            v360[8] = v361[8];
                            v360[9] = v361[9];
                            *((unsigned char *)v360 + 80) = *((unsigned char *)v361 + 80);
                            *((unsigned char *)v360 + 81) = *((unsigned char *)v361 + 81);
                            *((unsigned char *)v360 + 82) = *((unsigned char *)v361 + 82);
                            *((unsigned char *)v360 + 83) = *((unsigned char *)v361 + 83);
                            *((unsigned char *)v360 + 84) = *((unsigned char *)v361 + 84);
                            v633 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                            uint64_t v383 = v633[15];
                            v571 = (void *)((char *)v360 + v383);
                            v384 = (void *)((char *)v361 + v383);
                            uint64_t v385 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v384, 1, v385))
                            {
                              uint64_t v386 = sub_253462A5C(&qword_269CDF998);
                              memcpy(v571, v384, *(void *)(*(void *)(v386 - 8) + 64));
                            }
                            else
                            {
                              void *v571 = *v384;
                              v571[1] = v384[1];
                              *((unsigned char *)v571 + 16) = *((unsigned char *)v384 + 16);
                              *((unsigned char *)v571 + 17) = *((unsigned char *)v384 + 17);
                              uint64_t v566 = v385;
                              uint64_t v398 = *(int *)(v385 + 28);
                              v600 = (char *)v384 + v398;
                              v622 = (char *)v571 + v398;
                              uint64_t v399 = sub_253B07160();
                              v400 = *(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 16);
                              swift_bridgeObjectRetain();
                              v400(v622, v600, v399);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v571, 0, 1, v566);
                            }
                            uint64_t v401 = v633[16];
                            v402 = (char *)v360 + v401;
                            v403 = (char *)v361 + v401;
                            unint64_t v404 = *((void *)v403 + 1);
                            if (v404 >> 60 == 15)
                            {
                              *(_OWORD *)v402 = *(_OWORD *)v403;
                            }
                            else
                            {
                              uint64_t v405 = *(void *)v403;
                              sub_25348A9C8(*(void *)v403, *((void *)v403 + 1));
                              *(void *)v402 = v405;
                              *((void *)v402 + 1) = v404;
                            }
                            uint64_t v406 = v633[17];
                            v407 = (void *)((char *)v360 + v406);
                            v408 = (void *)((char *)v361 + v406);
                            void *v407 = *v408;
                            v407[1] = v408[1];
                            uint64_t v409 = v633[18];
                            v410 = (void *)((char *)v360 + v409);
                            v411 = (void *)((char *)v361 + v409);
                            void *v410 = *v411;
                            v410[1] = v411[1];
                            uint64_t v412 = v633[19];
                            v413 = (_DWORD *)((char *)v360 + v412);
                            v414 = (int *)((char *)v361 + v412);
                            uint64_t v415 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            uint64_t v416 = v415;
                            int v417 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v414, 1, v415);
                            uint64_t v17 = v648;
                            if (v417)
                            {
                              uint64_t v418 = sub_253462A5C(&qword_269CDF988);
                              memcpy(v413, v414, *(void *)(*(void *)(v418 - 8) + 64));
                            }
                            else
                            {
                              int v419 = *v414;
                              *((unsigned char *)v413 + 4) = *((unsigned char *)v414 + 4);
                              _DWORD *v413 = v419;
                              *((void *)v413 + 1) = *((void *)v414 + 1);
                              *((void *)v413 + 2) = *((void *)v414 + 2);
                              int v420 = v414[6];
                              *((unsigned char *)v413 + 28) = *((unsigned char *)v414 + 28);
                              v413[6] = v420;
                              int v421 = v414[8];
                              *((unsigned char *)v413 + 36) = *((unsigned char *)v414 + 36);
                              v413[8] = v421;
                              uint64_t v422 = *(int *)(v416 + 32);
                              v601 = (char *)v413 + v422;
                              __dstf = (char *)v414 + v422;
                              uint64_t v423 = sub_253B07160();
                              v424 = *(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 16);
                              swift_bridgeObjectRetain();
                              v424(v601, __dstf, v423);
                              uint64_t v17 = v648;
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v413, 0, 1, v416);
                            }
                            uint64_t v425 = v633[20];
                            v426 = (char *)v360 + v425;
                            v427 = (char *)v361 + v425;
                            uint64_t v428 = *(void *)v427;
                            v426[8] = v427[8];
                            *(void *)v426 = v428;
                            uint64_t v429 = v633[21];
                            v430 = (void *)((char *)v360 + v429);
                            v431 = (void *)((char *)v361 + v429);
                            void *v430 = *v431;
                            v430[1] = v431[1];
                            *((unsigned char *)v360 + v633[22]) = *((unsigned char *)v361 + v633[22]);
                            *((unsigned char *)v360 + v633[23]) = *((unsigned char *)v361 + v633[23]);
                            uint64_t v432 = v633[24];
                            v433 = (void *)((char *)v360 + v432);
                            v434 = (void *)((char *)v361 + v432);
                            uint64_t v435 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                            swift_bridgeObjectRetain();
                            uint64_t v436 = v435;
                            int v437 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v434, 1, v435);
                            a2 = v656;
                            if (v437)
                            {
                              uint64_t v438 = sub_253462A5C(&qword_269CDF978);
                              memcpy(v433, v434, *(void *)(*(void *)(v438 - 8) + 64));
                            }
                            else
                            {
                              void *v433 = *v434;
                              v433[1] = v434[1];
                              v433[2] = v434[2];
                              v433[3] = v434[3];
                              v433[4] = v434[4];
                              v433[5] = v434[5];
                              v433[6] = v434[6];
                              v433[7] = v434[7];
                              v433[8] = v434[8];
                              v433[9] = v434[9];
                              v433[10] = v434[10];
                              uint64_t v439 = *(int *)(v436 + 40);
                              v602 = (char *)v433 + v439;
                              __dstg = (char *)v434 + v439;
                              uint64_t v440 = sub_253B07160();
                              v561 = *(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16);
                              swift_bridgeObjectRetain();
                              a2 = v656;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v561(v602, __dstg, v440);
                              uint64_t v17 = v648;
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v433, 0, 1, v436);
                            }
                            *((unsigned char *)v360 + v633[25]) = *((unsigned char *)v361 + v633[25]);
                            *((unsigned char *)v360 + v633[26]) = *((unsigned char *)v361 + v633[26]);
                            uint64_t v441 = v633[27];
                            v442 = (char *)v360 + v441;
                            v443 = (char *)v361 + v441;
                            uint64_t v444 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 16))(v442, v443, v444);
                            uint64_t v18 = v661;
                            goto LABEL_175;
                          }
                          void *v360 = *v361;
                          v360[1] = v361[1];
                          *((unsigned char *)v360 + 16) = *((unsigned char *)v361 + 16);
                          v360[3] = v361[3];
                          v360[4] = v361[4];
                          v360[5] = v361[5];
                          v360[6] = v361[6];
                          v360[7] = v361[7];
                          v360[8] = v361[8];
                          v360[9] = v361[9];
                          uint64_t v376 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                                        + 40);
                          __dstd = (char *)v361 + v376;
                          v596 = (char *)v360 + v376;
                          uint64_t v377 = sub_253B07160();
                          v570 = *(void (**)(char *, char *, uint64_t))(*(void *)(v377 - 8) + 16);
                          v378 = v16;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          v570(v596, __dstd, v377);
                        }
                        uint64_t v16 = v378;
                        uint64_t v17 = v648;
LABEL_175:
                        swift_storeEnumTagMultiPayload();
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v360, 0, 1, v653);
                        goto LABEL_176;
                      }
LABEL_139:
                      uint64_t v367 = sub_253462A5C(&qword_269CDF8E0);
                      memcpy(v360, v361, *(void *)(*(void *)(v367 - 8) + 64));
LABEL_194:
                      uint64_t v507 = v18[10];
                      v508 = &v16[v507];
                      v509 = &v17[v507];
                      void *v508 = *v509;
                      v508[1] = v509[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      uint64_t v510 = v18[11];
                      v511 = &v16[v510];
                      v512 = &v17[v510];
                      uint64_t v513 = sub_253B07160();
                      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v513 - 8) + 24))(v511, v512, v513);
                      goto LABEL_195;
                    }
                    if (v364)
                    {
                      sub_2536FA73C();
                      goto LABEL_139;
                    }
                    uint64_t v368 = type metadata accessor for ContextProtoStructuredContextKind(0);
                    int v369 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v360, 1, v368);
                    int v370 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v361, 1, v368);
                    if (v369)
                    {
                      if (!v370)
                      {
                        int v371 = swift_getEnumCaseMultiPayload();
                        v655 = a2;
                        v647 = v17;
                        v660 = v18;
                        uint64_t v652 = v368;
                        if (v371 == 2)
                        {
                          void *v360 = *v361;
                          v360[1] = v361[1];
                          v360[2] = v361[2];
                          v360[3] = v361[3];
                          v360[4] = v361[4];
                          v360[5] = v361[5];
                          uint64_t v390 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0)
                                        + 28);
                          v620 = (char *)v361 + v390;
                          v634 = (char *)v360 + v390;
                          uint64_t v391 = sub_253B07160();
                          v599 = *(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16);
                          v374 = v16;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          uint64_t v392 = v391;
                          a2 = v655;
                          v599(v634, v620, v392);
                        }
                        else
                        {
                          if (v371 != 1)
                          {
                            void *v360 = *v361;
                            v360[1] = v361[1];
                            v360[2] = v361[2];
                            v360[3] = v361[3];
                            v360[4] = v361[4];
                            v360[5] = v361[5];
                            v360[6] = v361[6];
                            v360[7] = v361[7];
                            v360[8] = v361[8];
                            v360[9] = v361[9];
                            *((unsigned char *)v360 + 80) = *((unsigned char *)v361 + 80);
                            *((unsigned char *)v360 + 81) = *((unsigned char *)v361 + 81);
                            *((unsigned char *)v360 + 82) = *((unsigned char *)v361 + 82);
                            *((unsigned char *)v360 + 83) = *((unsigned char *)v361 + 83);
                            *((unsigned char *)v360 + 84) = *((unsigned char *)v361 + 84);
                            uint64_t v393 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                            uint64_t v394 = *(int *)(v393 + 60);
                            v621 = (void *)((char *)v360 + v394);
                            v635 = (int *)v393;
                            v395 = (void *)((char *)v361 + v394);
                            uint64_t v396 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v395, 1, v396))
                            {
                              uint64_t v397 = sub_253462A5C(&qword_269CDF998);
                              memcpy(v621, v395, *(void *)(*(void *)(v397 - 8) + 64));
                            }
                            else
                            {
                              void *v621 = *v395;
                              v621[1] = v395[1];
                              *((unsigned char *)v621 + 16) = *((unsigned char *)v395 + 16);
                              *((unsigned char *)v621 + 17) = *((unsigned char *)v395 + 17);
                              uint64_t v565 = v396;
                              uint64_t v456 = *(int *)(v396 + 28);
                              __dsth = (char *)v395 + v456;
                              v604 = (char *)v621 + v456;
                              uint64_t v457 = sub_253B07160();
                              v458 = *(void (**)(char *, char *, uint64_t))(*(void *)(v457 - 8) + 16);
                              swift_bridgeObjectRetain();
                              v458(v604, __dsth, v457);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v621, 0, 1, v565);
                            }
                            uint64_t v459 = v635[16];
                            v460 = (char *)v360 + v459;
                            v461 = (char *)v361 + v459;
                            unint64_t v462 = *((void *)v461 + 1);
                            if (v462 >> 60 == 15)
                            {
                              *(_OWORD *)v460 = *(_OWORD *)v461;
                            }
                            else
                            {
                              uint64_t v463 = *(void *)v461;
                              sub_25348A9C8(*(void *)v461, *((void *)v461 + 1));
                              *(void *)v460 = v463;
                              *((void *)v460 + 1) = v462;
                            }
                            uint64_t v464 = v635[17];
                            v465 = (void *)((char *)v360 + v464);
                            v466 = (void *)((char *)v361 + v464);
                            void *v465 = *v466;
                            v465[1] = v466[1];
                            uint64_t v467 = v635[18];
                            v468 = (void *)((char *)v360 + v467);
                            v469 = (void *)((char *)v361 + v467);
                            void *v468 = *v469;
                            v468[1] = v469[1];
                            uint64_t v470 = v635[19];
                            v471 = (_DWORD *)((char *)v360 + v470);
                            v472 = (int *)((char *)v361 + v470);
                            uint64_t v473 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            uint64_t v474 = v473;
                            int v475 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v472, 1, v473);
                            uint64_t v17 = v647;
                            if (v475)
                            {
                              uint64_t v476 = sub_253462A5C(&qword_269CDF988);
                              memcpy(v471, v472, *(void *)(*(void *)(v476 - 8) + 64));
                            }
                            else
                            {
                              int v477 = *v472;
                              *((unsigned char *)v471 + 4) = *((unsigned char *)v472 + 4);
                              _DWORD *v471 = v477;
                              *((void *)v471 + 1) = *((void *)v472 + 1);
                              *((void *)v471 + 2) = *((void *)v472 + 2);
                              int v478 = v472[6];
                              *((unsigned char *)v471 + 28) = *((unsigned char *)v472 + 28);
                              v471[6] = v478;
                              int v479 = v472[8];
                              *((unsigned char *)v471 + 36) = *((unsigned char *)v472 + 36);
                              v471[8] = v479;
                              uint64_t v480 = *(int *)(v474 + 32);
                              v605 = (char *)v471 + v480;
                              __dsti = (char *)v472 + v480;
                              uint64_t v481 = sub_253B07160();
                              v482 = *(void (**)(char *, char *, uint64_t))(*(void *)(v481 - 8) + 16);
                              swift_bridgeObjectRetain();
                              v482(v605, __dsti, v481);
                              uint64_t v17 = v647;
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v471, 0, 1, v474);
                            }
                            uint64_t v483 = v635[20];
                            v484 = (char *)v360 + v483;
                            v485 = (char *)v361 + v483;
                            uint64_t v486 = *(void *)v485;
                            v484[8] = v485[8];
                            *(void *)v484 = v486;
                            uint64_t v487 = v635[21];
                            v488 = (void *)((char *)v360 + v487);
                            v489 = (void *)((char *)v361 + v487);
                            void *v488 = *v489;
                            v488[1] = v489[1];
                            *((unsigned char *)v360 + v635[22]) = *((unsigned char *)v361 + v635[22]);
                            *((unsigned char *)v360 + v635[23]) = *((unsigned char *)v361 + v635[23]);
                            uint64_t v490 = v635[24];
                            v491 = (void *)((char *)v360 + v490);
                            v492 = (void *)((char *)v361 + v490);
                            uint64_t v493 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                            swift_bridgeObjectRetain();
                            uint64_t v494 = v493;
                            int v495 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v492, 1, v493);
                            a2 = v655;
                            if (v495)
                            {
                              uint64_t v496 = sub_253462A5C(&qword_269CDF978);
                              memcpy(v491, v492, *(void *)(*(void *)(v496 - 8) + 64));
                            }
                            else
                            {
                              void *v491 = *v492;
                              v491[1] = v492[1];
                              v491[2] = v492[2];
                              v491[3] = v492[3];
                              v491[4] = v492[4];
                              v491[5] = v492[5];
                              v491[6] = v492[6];
                              v491[7] = v492[7];
                              v491[8] = v492[8];
                              v491[9] = v492[9];
                              v491[10] = v492[10];
                              uint64_t v497 = *(int *)(v494 + 40);
                              v606 = (char *)v491 + v497;
                              __dstj = (char *)v492 + v497;
                              uint64_t v498 = sub_253B07160();
                              v562 = *(void (**)(char *, char *, uint64_t))(*(void *)(v498 - 8) + 16);
                              swift_bridgeObjectRetain();
                              a2 = v655;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v562(v606, __dstj, v498);
                              uint64_t v17 = v647;
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v491, 0, 1, v494);
                            }
                            *((unsigned char *)v360 + v635[25]) = *((unsigned char *)v361 + v635[25]);
                            *((unsigned char *)v360 + v635[26]) = *((unsigned char *)v361 + v635[26]);
                            uint64_t v499 = v635[27];
                            v500 = (char *)v360 + v499;
                            v501 = (char *)v361 + v499;
                            uint64_t v502 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v502 - 8) + 16))(v500, v501, v502);
                            uint64_t v18 = v660;
                            goto LABEL_192;
                          }
                          void *v360 = *v361;
                          v360[1] = v361[1];
                          *((unsigned char *)v360 + 16) = *((unsigned char *)v361 + 16);
                          v360[3] = v361[3];
                          v360[4] = v361[4];
                          v360[5] = v361[5];
                          v360[6] = v361[6];
                          v360[7] = v361[7];
                          v360[8] = v361[8];
                          v360[9] = v361[9];
                          uint64_t v372 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                                        + 40);
                          __dstc = (char *)v361 + v372;
                          v595 = (char *)v360 + v372;
                          uint64_t v373 = sub_253B07160();
                          v569 = *(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16);
                          v374 = v16;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          v569(v595, __dstc, v373);
                        }
                        uint64_t v16 = v374;
                        uint64_t v17 = v647;
LABEL_192:
                        swift_storeEnumTagMultiPayload();
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v360, 0, 1, v652);
                        goto LABEL_193;
                      }
                    }
                    else
                    {
                      if (!v370)
                      {
                        if (a1 != a2)
                        {
                          sub_2536FA73C();
                          int v387 = swift_getEnumCaseMultiPayload();
                          v649 = v17;
                          v662 = v18;
                          if (v387 == 2)
                          {
                            void *v360 = *v361;
                            v360[1] = v361[1];
                            v360[2] = v361[2];
                            v360[3] = v361[3];
                            v360[4] = v361[4];
                            v360[5] = v361[5];
                            uint64_t v449 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0)
                                          + 28);
                            v623 = (char *)v361 + v449;
                            v636 = (char *)v360 + v449;
                            uint64_t v450 = sub_253B07160();
                            v603 = *(void (**)(char *, char *, uint64_t))(*(void *)(v450 - 8) + 16);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v603(v636, v623, v450);
                          }
                          else
                          {
                            if (v387 != 1)
                            {
                              void *v360 = *v361;
                              v360[1] = v361[1];
                              v360[2] = v361[2];
                              v360[3] = v361[3];
                              v360[4] = v361[4];
                              v360[5] = v361[5];
                              v360[6] = v361[6];
                              v360[7] = v361[7];
                              v360[8] = v361[8];
                              v360[9] = v361[9];
                              *((unsigned char *)v360 + 80) = *((unsigned char *)v361 + 80);
                              *((unsigned char *)v360 + 81) = *((unsigned char *)v361 + 81);
                              *((unsigned char *)v360 + 82) = *((unsigned char *)v361 + 82);
                              *((unsigned char *)v360 + 83) = *((unsigned char *)v361 + 83);
                              *((unsigned char *)v360 + 84) = *((unsigned char *)v361 + 84);
                              uint64_t v451 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                              uint64_t v452 = *(int *)(v451 + 60);
                              v637 = (void *)((char *)v360 + v452);
                              v643 = (int *)v451;
                              v453 = (void *)((char *)v361 + v452);
                              uint64_t v454 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v453, 1, v454))
                              {
                                uint64_t v455 = sub_253462A5C(&qword_269CDF998);
                                memcpy(v637, v453, *(void *)(*(void *)(v455 - 8) + 64));
                              }
                              else
                              {
                                void *v637 = *v453;
                                v637[1] = v453[1];
                                *((unsigned char *)v637 + 16) = *((unsigned char *)v453 + 16);
                                *((unsigned char *)v637 + 17) = *((unsigned char *)v453 + 17);
                                uint64_t v567 = v454;
                                uint64_t v519 = *(int *)(v454 + 28);
                                v607 = (char *)v453 + v519;
                                v624 = (char *)v637 + v519;
                                uint64_t v520 = sub_253B07160();
                                v521 = *(void (**)(char *, char *, uint64_t))(*(void *)(v520 - 8) + 16);
                                swift_bridgeObjectRetain();
                                v521(v624, v607, v520);
                                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v637, 0, 1, v567);
                              }
                              uint64_t v522 = v643[16];
                              v523 = (char *)v360 + v522;
                              v524 = (char *)v361 + v522;
                              unint64_t v525 = *((void *)v524 + 1);
                              if (v525 >> 60 == 15)
                              {
                                *(_OWORD *)v523 = *(_OWORD *)v524;
                              }
                              else
                              {
                                uint64_t v526 = *(void *)v524;
                                sub_25348A9C8(*(void *)v524, *((void *)v524 + 1));
                                *(void *)v523 = v526;
                                *((void *)v523 + 1) = v525;
                              }
                              uint64_t v527 = v643[17];
                              v528 = (void *)((char *)v360 + v527);
                              v529 = (void *)((char *)v361 + v527);
                              void *v528 = *v529;
                              v528[1] = v529[1];
                              uint64_t v530 = v643[18];
                              v531 = (void *)((char *)v360 + v530);
                              v532 = (void *)((char *)v361 + v530);
                              void *v531 = *v532;
                              v531[1] = v532[1];
                              uint64_t v533 = v643[19];
                              v638 = (_DWORD *)((char *)v360 + v533);
                              v534 = (int *)((char *)v361 + v533);
                              uint64_t v535 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v536 = (int *)v535;
                              int v537 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v534, 1, v535);
                              uint64_t v17 = v649;
                              if (v537)
                              {
                                uint64_t v538 = sub_253462A5C(&qword_269CDF988);
                                memcpy(v638, v534, *(void *)(*(void *)(v538 - 8) + 64));
                              }
                              else
                              {
                                int v539 = *v534;
                                *((unsigned char *)v638 + 4) = *((unsigned char *)v534 + 4);
                                _DWORD *v638 = v539;
                                *((void *)v638 + 1) = *((void *)v534 + 1);
                                *((void *)v638 + 2) = *((void *)v534 + 2);
                                int v540 = v534[6];
                                *((unsigned char *)v638 + 28) = *((unsigned char *)v534 + 28);
                                v638[6] = v540;
                                int v541 = v534[8];
                                *((unsigned char *)v638 + 36) = *((unsigned char *)v534 + 36);
                                v638[8] = v541;
                                uint64_t v542 = v536[8];
                                v608 = (char *)v638 + v542;
                                v625 = v536;
                                __dstk = (char *)v534 + v542;
                                uint64_t v543 = sub_253B07160();
                                v573 = *(void (**)(char *, char *, uint64_t))(*(void *)(v543 - 8) + 16);
                                swift_bridgeObjectRetain();
                                v573(v608, __dstk, v543);
                                uint64_t v17 = v649;
                                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v638, 0, 1, (uint64_t)v625);
                              }
                              uint64_t v544 = v643[20];
                              v545 = (char *)v360 + v544;
                              v546 = (char *)v361 + v544;
                              uint64_t v547 = *(void *)v546;
                              v545[8] = v546[8];
                              *(void *)v545 = v547;
                              uint64_t v548 = v643[21];
                              v549 = (void *)((char *)v360 + v548);
                              v550 = (void *)((char *)v361 + v548);
                              void *v549 = *v550;
                              v549[1] = v550[1];
                              *((unsigned char *)v360 + v643[22]) = *((unsigned char *)v361 + v643[22]);
                              *((unsigned char *)v360 + v643[23]) = *((unsigned char *)v361 + v643[23]);
                              uint64_t v551 = v643[24];
                              v639 = (void *)((char *)v360 + v551);
                              v552 = (void *)((char *)v361 + v551);
                              uint64_t v553 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                              swift_bridgeObjectRetain();
                              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v552, 1, v553))
                              {
                                uint64_t v554 = sub_253462A5C(&qword_269CDF978);
                                memcpy(v639, v552, *(void *)(*(void *)(v554 - 8) + 64));
                              }
                              else
                              {
                                void *v639 = *v552;
                                v639[1] = v552[1];
                                v639[2] = v552[2];
                                v639[3] = v552[3];
                                v639[4] = v552[4];
                                v639[5] = v552[5];
                                v639[6] = v552[6];
                                v639[7] = v552[7];
                                v639[8] = v552[8];
                                v639[9] = v552[9];
                                v639[10] = v552[10];
                                uint64_t v555 = *(int *)(v553 + 40);
                                v609 = (char *)v552 + v555;
                                v626 = (char *)v639 + v555;
                                uint64_t v556 = sub_253B07160();
                                v563 = *(void (**)(char *, char *, uint64_t))(*(void *)(v556 - 8) + 16);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                v563(v626, v609, v556);
                                uint64_t v17 = v649;
                                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v639, 0, 1, v553);
                              }
                              *((unsigned char *)v360 + v643[25]) = *((unsigned char *)v361 + v643[25]);
                              *((unsigned char *)v360 + v643[26]) = *((unsigned char *)v361 + v643[26]);
                              uint64_t v557 = v643[27];
                              v558 = (char *)v360 + v557;
                              v559 = (char *)v361 + v557;
                              uint64_t v560 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v560 - 8) + 16))(v558, v559, v560);
                              swift_storeEnumTagMultiPayload();
                              uint64_t v18 = v662;
                              goto LABEL_193;
                            }
                            void *v360 = *v361;
                            v360[1] = v361[1];
                            *((unsigned char *)v360 + 16) = *((unsigned char *)v361 + 16);
                            v360[3] = v361[3];
                            v360[4] = v361[4];
                            v360[5] = v361[5];
                            v360[6] = v361[6];
                            v360[7] = v361[7];
                            v360[8] = v361[8];
                            v360[9] = v361[9];
                            uint64_t v388 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                                          + 40);
                            __dste = (char *)v361 + v388;
                            v598 = (char *)v360 + v388;
                            uint64_t v389 = sub_253B07160();
                            v572 = *(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 16);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v572(v598, __dste, v389);
                          }
                          swift_storeEnumTagMultiPayload();
                        }
LABEL_193:
                        uint64_t v503 = *(int *)(v362 + 20);
                        v504 = (char *)v360 + v503;
                        v505 = (char *)v361 + v503;
                        uint64_t v506 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v506 - 8) + 24))(v504, v505, v506);
                        goto LABEL_194;
                      }
                      sub_2536FA73C();
                    }
                    uint64_t v379 = sub_253462A5C(&qword_269CDF958);
                    memcpy(v360, v361, *(void *)(*(void *)(v379 - 8) + 64));
                    goto LABEL_193;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v357 + 8))(v353, v640);
                }
                uint64_t v358 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(v353, v354, *(void *)(*(void *)(v358 - 8) + 64));
                goto LABEL_133;
              }
LABEL_41:
              uint64_t v81 = sub_253462A5C(&qword_269CDF8F0);
              memcpy(v72, v73, *(void *)(*(void *)(v81 - 8) + 64));
              goto LABEL_127;
            }
            if (v76)
            {
              sub_2536FA73C();
              goto LABEL_41;
            }
            *uint64_t v72 = *v73;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v72[1] = v73[1];
            v72[2] = v73[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v72[3] = v73[3];
            v72[4] = v73[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v152 = *(int *)(v74 + 28);
            uint64_t v153 = (char *)v73 + v152;
            v628 = (char *)v72 + v152;
            int v154 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72 + v152, 1, v61);
            int v155 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v153, 1, v61);
            v659 = v18;
            if (v154)
            {
              if (v155)
              {
                size_t v156 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDF900) - 8) + 64);
                uint64_t v157 = v628;
LABEL_84:
                memcpy(v157, v153, v156);
                goto LABEL_102;
              }
              *(_DWORD *)v628 = *(_DWORD *)v153;
              v628[4] = v153[4];
              uint64_t v213 = *(int *)(v61 + 24);
              v615 = &v628[v213];
              uint64_t v214 = &v153[v213];
              uint64_t v215 = sub_253B07160();
              uint64_t v216 = v214;
              uint64_t v18 = v659;
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v215 - 8) + 16))(v615, v216, v215);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v628, 0, 1, v61);
            }
            else
            {
              if (v155)
              {
                sub_2536FA73C();
                size_t v156 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDF900) - 8) + 64);
                uint64_t v157 = v628;
                goto LABEL_84;
              }
              *(_DWORD *)v628 = *(_DWORD *)v153;
              v628[4] = v153[4];
              uint64_t v279 = *(int *)(v61 + 24);
              v280 = &v628[v279];
              v281 = &v153[v279];
              uint64_t v282 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v282 - 8) + 24))(v280, v281, v282);
            }
LABEL_102:
            uint64_t v283 = v651[8];
            uint64_t v284 = (uint64_t)v72 + v283;
            v285 = (int *)((char *)v73 + v283);
            uint64_t v286 = type metadata accessor for ContextProtoBoundingBox(0);
            v616 = (char *)v284;
            LODWORD(v284) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v284, 1, v286);
            v630 = (int *)v286;
            int v287 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v285, 1, v286);
            if (v284)
            {
              if (v287)
              {
                size_t v288 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCCC0) - 8) + 64);
                v289 = v616;
LABEL_107:
                memcpy(v289, v285, v288);
                goto LABEL_110;
              }
              int v290 = *v285;
              v616[4] = *((unsigned char *)v285 + 4);
              *(_DWORD *)v616 = v290;
              int v291 = v285[2];
              v616[12] = *((unsigned char *)v285 + 12);
              *((_DWORD *)v616 + 2) = v291;
              int v292 = v285[4];
              v616[20] = *((unsigned char *)v285 + 20);
              *((_DWORD *)v616 + 4) = v292;
              int v293 = v285[6];
              v616[28] = *((unsigned char *)v285 + 28);
              *((_DWORD *)v616 + 6) = v293;
              uint64_t v294 = *(int *)(v286 + 32);
              v592 = &v616[v294];
              v295 = (char *)v285 + v294;
              uint64_t v296 = sub_253B07160();
              v297 = v295;
              uint64_t v18 = v659;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16))(v592, v297, v296);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v616, 0, 1, v286);
            }
            else
            {
              if (v287)
              {
                sub_2536FA73C();
                size_t v288 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCCC0) - 8) + 64);
                v289 = v616;
                goto LABEL_107;
              }
              int v298 = *v285;
              v616[4] = *((unsigned char *)v285 + 4);
              *(_DWORD *)v616 = v298;
              int v299 = v285[2];
              v616[12] = *((unsigned char *)v285 + 12);
              *((_DWORD *)v616 + 2) = v299;
              int v300 = v285[4];
              v616[20] = *((unsigned char *)v285 + 20);
              *((_DWORD *)v616 + 4) = v300;
              int v301 = v285[6];
              v616[28] = *((unsigned char *)v285 + 28);
              *((_DWORD *)v616 + 6) = v301;
              uint64_t v302 = *(int *)(v286 + 32);
              v303 = &v616[v302];
              v304 = (char *)v285 + v302;
              uint64_t v305 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 24))(v303, v304, v305);
            }
LABEL_110:
            uint64_t v306 = v651[9];
            v307 = (char *)v72 + v306;
            v308 = (char *)v73 + v306;
            uint64_t v309 = *(void *)v308;
            v307[8] = v308[8];
            *(void *)v307 = v309;
            uint64_t v310 = v651[10];
            v311 = (void *)((char *)v72 + v310);
            v312 = (void *)((char *)v73 + v310);
            void *v311 = *v312;
            v311[1] = v312[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((unsigned char *)v72 + v651[11]) = *((unsigned char *)v73 + v651[11]);
            *((unsigned char *)v72 + v651[12]) = *((unsigned char *)v73 + v651[12]);
            uint64_t v313 = v651[13];
            v314 = (int *)((char *)v73 + v313);
            v617 = (char *)v72 + v313;
            int v315 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72 + v313, 1, (uint64_t)v630);
            int v316 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v314, 1, (uint64_t)v630);
            if (v315)
            {
              if (v316)
              {
                size_t v317 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCCC0) - 8) + 64);
                v318 = v617;
LABEL_115:
                memcpy(v318, v314, v317);
                goto LABEL_118;
              }
              int v319 = *v314;
              v617[4] = *((unsigned char *)v314 + 4);
              *(_DWORD *)v617 = v319;
              int v320 = v314[2];
              v617[12] = *((unsigned char *)v314 + 12);
              *((_DWORD *)v617 + 2) = v320;
              int v321 = v314[4];
              v617[20] = *((unsigned char *)v314 + 20);
              *((_DWORD *)v617 + 4) = v321;
              int v322 = v314[6];
              v617[28] = *((unsigned char *)v314 + 28);
              *((_DWORD *)v617 + 6) = v322;
              uint64_t v323 = v630[8];
              v593 = &v617[v323];
              v324 = (char *)v314 + v323;
              uint64_t v325 = sub_253B07160();
              v326 = v324;
              uint64_t v18 = v659;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16))(v593, v326, v325);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v617, 0, 1, (uint64_t)v630);
            }
            else
            {
              if (v316)
              {
                sub_2536FA73C();
                size_t v317 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCCC0) - 8) + 64);
                v318 = v617;
                goto LABEL_115;
              }
              int v327 = *v314;
              v617[4] = *((unsigned char *)v314 + 4);
              *(_DWORD *)v617 = v327;
              int v328 = v314[2];
              v617[12] = *((unsigned char *)v314 + 12);
              *((_DWORD *)v617 + 2) = v328;
              int v329 = v314[4];
              v617[20] = *((unsigned char *)v314 + 20);
              *((_DWORD *)v617 + 4) = v329;
              int v330 = v314[6];
              v617[28] = *((unsigned char *)v314 + 28);
              *((_DWORD *)v617 + 6) = v330;
              uint64_t v331 = v630[8];
              v332 = &v617[v331];
              v333 = (char *)v314 + v331;
              uint64_t v334 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 24))(v332, v333, v334);
            }
LABEL_118:
            *((unsigned char *)v72 + v651[14]) = *((unsigned char *)v73 + v651[14]);
            uint64_t v335 = v651[15];
            uint64_t v336 = (uint64_t)v72 + v335;
            v337 = (void *)((char *)v73 + v335);
            uint64_t v338 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
            v631 = (void *)v336;
            LODWORD(v336) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v336, 1, v338);
            int v339 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v337, 1, v338);
            if (v336)
            {
              if (!v339)
              {
                void *v631 = *v337;
                v631[1] = v337[1];
                v631[2] = v337[2];
                v631[3] = v337[3];
                uint64_t v342 = *(int *)(v338 + 24);
                v594 = (char *)v337 + v342;
                v618 = (char *)v631 + v342;
                uint64_t v343 = sub_253B07160();
                v568 = *(void (**)(char *, char *, uint64_t))(*(void *)(v343 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v18 = v659;
                swift_bridgeObjectRetain();
                v568(v618, v594, v343);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v631, 0, 1, v338);
                goto LABEL_126;
              }
              size_t v340 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDF920) - 8) + 64);
              v341 = v631;
            }
            else
            {
              if (!v339)
              {
                void *v631 = *v337;
                v631[1] = v337[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v631[2] = v337[2];
                v631[3] = v337[3];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v344 = *(int *)(v338 + 24);
                v345 = (char *)v631 + v344;
                v346 = (char *)v337 + v344;
                uint64_t v347 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 24))(v345, v346, v347);
                goto LABEL_126;
              }
              sub_2536FA73C();
              size_t v340 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDF920) - 8) + 64);
              v341 = v631;
            }
            memcpy(v341, v337, v340);
LABEL_126:
            uint64_t v348 = v651[16];
            v349 = (char *)v72 + v348;
            v350 = (char *)v73 + v348;
            uint64_t v351 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 24))(v349, v350, v351);
            goto LABEL_127;
          }
          sub_2536FA73C();
        }
        uint64_t v70 = sub_253462A5C(&qword_269CDF900);
        memcpy(v59, v60, *(void *)(*(void *)(v70 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v32, v34);
    }
    uint64_t v57 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v32, v33, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_29;
  }
  if (!v20)
  {
    *uint64_t v16 = *v17;
    uint64_t v21 = v18[5];
    uint64_t v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    uint64_t v24 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
    }
    v657 = v18;
    uint64_t v37 = v18[6];
    uint64_t v38 = &v16[v37];
    uint64_t v39 = &v17[v37];
    uint64_t v40 = type metadata accessor for ContextProtoConfidence(0);
    v654 = a2;
    uint64_t v663 = a3;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = sub_253462A5C(&qword_269CDF900);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      uint64_t v42 = *(int *)(v40 + 24);
      uint64_t v43 = &v38[v42];
      unint64_t v44 = &v39[v42];
      uint64_t v45 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
    }
    uint64_t v46 = v657;
    uint64_t v47 = v657[7];
    uint64_t v48 = &v16[v47];
    uint64_t v49 = &v17[v47];
    uint64_t v50 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    v650 = a1;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, (uint64_t)v50))
    {
      uint64_t v51 = sub_253462A5C(&qword_269CDF8F0);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      v645 = v17;
      *uint64_t v48 = *v49;
      v48[1] = v49[1];
      v48[2] = v49[2];
      v48[3] = v49[3];
      v48[4] = v49[4];
      uint64_t v52 = v50[7];
      uint64_t v53 = (char *)v48 + v52;
      uint64_t v54 = (char *)v49 + v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v40))
      {
        uint64_t v55 = sub_253462A5C(&qword_269CDF900);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        v53[4] = v54[4];
        uint64_t v82 = *(int *)(v40 + 24);
        uint64_t v83 = &v53[v82];
        uint64_t v84 = &v54[v82];
        uint64_t v85 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v40);
      }
      uint64_t v86 = v50[8];
      uint64_t v87 = (_DWORD *)((char *)v48 + v86);
      uint64_t v88 = (int *)((char *)v49 + v86);
      uint64_t v89 = type metadata accessor for ContextProtoBoundingBox(0);
      uint64_t v17 = v645;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89))
      {
        uint64_t v90 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        int v91 = *v88;
        *((unsigned char *)v87 + 4) = *((unsigned char *)v88 + 4);
        _DWORD *v87 = v91;
        int v92 = v88[2];
        *((unsigned char *)v87 + 12) = *((unsigned char *)v88 + 12);
        v87[2] = v92;
        int v93 = v88[4];
        *((unsigned char *)v87 + 20) = *((unsigned char *)v88 + 20);
        v87[4] = v93;
        int v94 = v88[6];
        *((unsigned char *)v87 + 28) = *((unsigned char *)v88 + 28);
        v87[6] = v94;
        uint64_t v95 = *(int *)(v89 + 32);
        uint64_t v96 = (char *)v87 + v95;
        uint64_t v97 = (char *)v88 + v95;
        uint64_t v98 = sub_253B07160();
        uint64_t v99 = v96;
        uint64_t v17 = v645;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v99, v97, v98);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
      }
      uint64_t v100 = v50[9];
      uint64_t v101 = (char *)v48 + v100;
      uint64_t v102 = (char *)v49 + v100;
      uint64_t v103 = *(void *)v102;
      v101[8] = v102[8];
      *(void *)uint64_t v101 = v103;
      uint64_t v104 = v50[10];
      uint64_t v105 = (void *)((char *)v48 + v104);
      uint64_t v106 = (void *)((char *)v49 + v104);
      *uint64_t v105 = *v106;
      v105[1] = v106[1];
      *((unsigned char *)v48 + v50[11]) = *((unsigned char *)v49 + v50[11]);
      *((unsigned char *)v48 + v50[12]) = *((unsigned char *)v49 + v50[12]);
      uint64_t v107 = v50[13];
      uint64_t v108 = (_DWORD *)((char *)v48 + v107);
      uint64_t v109 = (int *)((char *)v49 + v107);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v109, 1, v89))
      {
        uint64_t v110 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        int v111 = *v109;
        *((unsigned char *)v108 + 4) = *((unsigned char *)v109 + 4);
        *uint64_t v108 = v111;
        int v112 = v109[2];
        *((unsigned char *)v108 + 12) = *((unsigned char *)v109 + 12);
        v108[2] = v112;
        int v113 = v109[4];
        *((unsigned char *)v108 + 20) = *((unsigned char *)v109 + 20);
        v108[4] = v113;
        int v114 = v109[6];
        *((unsigned char *)v108 + 28) = *((unsigned char *)v109 + 28);
        v108[6] = v114;
        uint64_t v115 = *(int *)(v89 + 32);
        uint64_t v116 = (char *)v108 + v115;
        uint64_t v117 = (char *)v109 + v115;
        uint64_t v118 = sub_253B07160();
        uint64_t v119 = v116;
        uint64_t v17 = v645;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v119, v117, v118);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v108, 0, 1, v89);
      }
      *((unsigned char *)v48 + v50[14]) = *((unsigned char *)v49 + v50[14]);
      uint64_t v120 = v50[15];
      uint64_t v121 = (void *)((char *)v48 + v120);
      uint64_t v122 = (void *)((char *)v49 + v120);
      uint64_t v123 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v122, 1, v123))
      {
        uint64_t v124 = sub_253462A5C(&qword_269CDF920);
        memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        *uint64_t v121 = *v122;
        v121[1] = v122[1];
        v121[2] = v122[2];
        v121[3] = v122[3];
        uint64_t v125 = *(int *)(v123 + 24);
        v627 = (char *)v122 + v125;
        v641 = (char *)v121 + v125;
        uint64_t v126 = sub_253B07160();
        v610 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
        uint64_t v17 = v645;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v610(v641, v627, v126);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v121, 0, 1, v123);
      }
      uint64_t v46 = v657;
      uint64_t v127 = v50[16];
      uint64_t v128 = (char *)v48 + v127;
      uint64_t v129 = (char *)v49 + v127;
      uint64_t v130 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, (uint64_t)v50);
    }
    uint64_t v131 = v46[8];
    unint64_t v132 = &v16[v131];
    uint64_t v133 = &v17[v131];
    a2 = v654;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v17[v131], 1, v24))
    {
      uint64_t v134 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v132, v133, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v132, 0, 1, v24);
    }
    uint64_t v135 = v46[9];
    uint64_t v136 = &v16[v135];
    uint64_t v137 = &v17[v135];
    uint64_t v138 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138))
    {
      uint64_t v139 = sub_253462A5C(&qword_269CDF8E0);
      memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
LABEL_100:
      uint64_t v270 = v46[10];
      v271 = &v16[v270];
      v272 = &v17[v270];
      void *v271 = *v272;
      v271[1] = v272[1];
      uint64_t v273 = v46[11];
      v274 = &v16[v273];
      v275 = &v17[v273];
      uint64_t v276 = (uint64_t)v46;
      uint64_t v277 = sub_253B07160();
      v278 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v277 - 8) + 16);
      swift_bridgeObjectRetain();
      v278(v274, v275, v277);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v276);
      a1 = v650;
LABEL_195:
      a3 = v663;
      goto LABEL_196;
    }
    uint64_t v140 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v140))
    {
      uint64_t v141 = sub_253462A5C(&qword_269CDF958);
      memcpy(v136, v137, *(void *)(*(void *)(v141 - 8) + 64));
LABEL_99:
      uint64_t v266 = *(int *)(v138 + 20);
      v267 = (char *)v136 + v266;
      v268 = (char *)v137 + v266;
      uint64_t v269 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v267, v268, v269);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v138);
      goto LABEL_100;
    }
    int v142 = swift_getEnumCaseMultiPayload();
    v644 = v16;
    v646 = v17;
    uint64_t v642 = v140;
    if (v142 == 2)
    {
      *uint64_t v136 = *v137;
      v136[1] = v137[1];
      v136[2] = v137[2];
      v136[3] = v137[3];
      v136[4] = v137[4];
      v136[5] = v137[5];
      uint64_t v205 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      v588 = (char *)v137 + v205;
      v613 = (char *)v136 + v205;
      uint64_t v206 = sub_253B07160();
      v207 = *(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v208 = v206;
      a2 = v654;
      v207(v613, v588, v208);
    }
    else
    {
      if (v142 == 1)
      {
        *uint64_t v136 = *v137;
        v136[1] = v137[1];
        *((unsigned char *)v136 + 16) = *((unsigned char *)v137 + 16);
        v136[3] = v137[3];
        v136[4] = v137[4];
        v136[5] = v137[5];
        v136[6] = v137[6];
        v136[7] = v137[7];
        v136[8] = v137[8];
        v136[9] = v137[9];
        uint64_t v143 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        v586 = (char *)v137 + v143;
        v611 = (char *)v136 + v143;
        uint64_t v144 = sub_253B07160();
        __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v46 = v657;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v145 = v144;
        a2 = v654;
        __dsta(v611, v586, v145);
LABEL_98:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v642);
        goto LABEL_99;
      }
      *uint64_t v136 = *v137;
      v136[1] = v137[1];
      v136[2] = v137[2];
      v136[3] = v137[3];
      v136[4] = v137[4];
      v136[5] = v137[5];
      v136[6] = v137[6];
      v136[7] = v137[7];
      v136[8] = v137[8];
      v136[9] = v137[9];
      *((unsigned char *)v136 + 80) = *((unsigned char *)v137 + 80);
      *((unsigned char *)v136 + 81) = *((unsigned char *)v137 + 81);
      *((unsigned char *)v136 + 82) = *((unsigned char *)v137 + 82);
      *((unsigned char *)v136 + 83) = *((unsigned char *)v137 + 83);
      *((unsigned char *)v136 + 84) = *((unsigned char *)v137 + 84);
      v614 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v209 = v614[15];
      __dst = (void *)((char *)v136 + v209);
      v210 = (void *)((char *)v137 + v209);
      uint64_t v211 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v210, 1, v211))
      {
        uint64_t v212 = sub_253462A5C(&qword_269CDF998);
        memcpy(__dst, v210, *(void *)(*(void *)(v212 - 8) + 64));
      }
      else
      {
        void *__dst = *v210;
        __dst[1] = v210[1];
        *((unsigned char *)__dst + 16) = *((unsigned char *)v210 + 16);
        *((unsigned char *)__dst + 17) = *((unsigned char *)v210 + 17);
        uint64_t v217 = *(int *)(v211 + 28);
        v218 = (char *)__dst + v217;
        v589 = (char *)v210 + v217;
        uint64_t v219 = sub_253B07160();
        uint64_t v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16);
        swift_bridgeObjectRetain();
        v220(v218, v589, v219);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v211);
      }
      uint64_t v221 = v614[16];
      v222 = (char *)v136 + v221;
      v223 = (char *)v137 + v221;
      unint64_t v224 = *((void *)v223 + 1);
      a2 = v654;
      if (v224 >> 60 == 15)
      {
        *(_OWORD *)v222 = *(_OWORD *)v223;
      }
      else
      {
        uint64_t v225 = *(void *)v223;
        sub_25348A9C8(*(void *)v223, *((void *)v223 + 1));
        *(void *)v222 = v225;
        *((void *)v222 + 1) = v224;
      }
      uint64_t v226 = v614[17];
      v227 = (void *)((char *)v136 + v226);
      v228 = (void *)((char *)v137 + v226);
      void *v227 = *v228;
      v227[1] = v228[1];
      uint64_t v229 = v614[18];
      v230 = (void *)((char *)v136 + v229);
      v231 = (void *)((char *)v137 + v229);
      void *v230 = *v231;
      v230[1] = v231[1];
      uint64_t v232 = v614[19];
      v233 = (_DWORD *)((char *)v136 + v232);
      v234 = (int *)((char *)v137 + v232);
      uint64_t v235 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v236 = v235;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v234, 1, v235))
      {
        uint64_t v237 = sub_253462A5C(&qword_269CDF988);
        memcpy(v233, v234, *(void *)(*(void *)(v237 - 8) + 64));
      }
      else
      {
        int v238 = *v234;
        *((unsigned char *)v233 + 4) = *((unsigned char *)v234 + 4);
        _DWORD *v233 = v238;
        *((void *)v233 + 1) = *((void *)v234 + 1);
        *((void *)v233 + 2) = *((void *)v234 + 2);
        int v239 = v234[6];
        *((unsigned char *)v233 + 28) = *((unsigned char *)v234 + 28);
        v233[6] = v239;
        int v240 = v234[8];
        *((unsigned char *)v233 + 36) = *((unsigned char *)v234 + 36);
        v233[8] = v240;
        uint64_t v241 = *(int *)(v235 + 32);
        v590 = (char *)v233 + v241;
        v242 = (char *)v234 + v241;
        uint64_t v243 = sub_253B07160();
        v244 = *(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v245 = v243;
        uint64_t v16 = v644;
        v244(v590, v242, v245);
        a2 = v654;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v233, 0, 1, v236);
      }
      uint64_t v246 = v614[20];
      v247 = (char *)v136 + v246;
      v248 = (char *)v137 + v246;
      uint64_t v249 = *(void *)v248;
      v247[8] = v248[8];
      *(void *)v247 = v249;
      uint64_t v250 = v614[21];
      v251 = (void *)((char *)v136 + v250);
      v252 = (void *)((char *)v137 + v250);
      void *v251 = *v252;
      v251[1] = v252[1];
      *((unsigned char *)v136 + v614[22]) = *((unsigned char *)v137 + v614[22]);
      *((unsigned char *)v136 + v614[23]) = *((unsigned char *)v137 + v614[23]);
      uint64_t v253 = v614[24];
      v254 = (void *)((char *)v136 + v253);
      v255 = (void *)((char *)v137 + v253);
      uint64_t v256 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      uint64_t v257 = v256;
      int v258 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v255, 1, v256);
      uint64_t v17 = v646;
      if (v258)
      {
        uint64_t v259 = sub_253462A5C(&qword_269CDF978);
        memcpy(v254, v255, *(void *)(*(void *)(v259 - 8) + 64));
      }
      else
      {
        void *v254 = *v255;
        v254[1] = v255[1];
        v254[2] = v255[2];
        v254[3] = v255[3];
        v254[4] = v255[4];
        v254[5] = v255[5];
        v254[6] = v255[6];
        v254[7] = v255[7];
        v254[8] = v255[8];
        v254[9] = v255[9];
        v254[10] = v255[10];
        uint64_t v260 = *(int *)(v257 + 40);
        __dstb = (char *)v255 + v260;
        v591 = (char *)v254 + v260;
        uint64_t v261 = sub_253B07160();
        v564 = *(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v17 = v646;
        swift_bridgeObjectRetain();
        uint64_t v16 = v644;
        swift_bridgeObjectRetain();
        a2 = v654;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v564(v591, __dstb, v261);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v254, 0, 1, v257);
      }
      *((unsigned char *)v136 + v614[25]) = *((unsigned char *)v137 + v614[25]);
      *((unsigned char *)v136 + v614[26]) = *((unsigned char *)v137 + v614[26]);
      uint64_t v262 = v614[27];
      v263 = (char *)v136 + v262;
      v264 = (char *)v137 + v262;
      uint64_t v265 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v263, v264, v265);
    }
    uint64_t v46 = v657;
    goto LABEL_98;
  }
LABEL_13:
  uint64_t v26 = sub_253462A5C(&qword_269CE21A0);
  memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_196:
  uint64_t v514 = *(int *)(a3 + 24);
  v515 = (char *)a1 + v514;
  v516 = (char *)a2 + v514;
  uint64_t v517 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v517 - 8) + 24))(v515, v516, v517);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoRetrievedContextStatement(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_253462A5C(&qword_269CE21A0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    unsigned char *v13 = *v14;
    uint64_t v17 = v15[5];
    uint64_t v18 = &v13[v17];
    int v19 = &v14[v17];
    uint64_t v20 = sub_253B08E50();
    uint64_t v150 = v20;
    uint64_t v151 = a3;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v22 = v15[6];
    uint64_t v23 = &v13[v22];
    uint64_t v24 = &v14[v22];
    uint64_t v25 = type metadata accessor for ContextProtoConfidence(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_269CDF900);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      uint64_t v27 = *(int *)(v25 + 24);
      uint64_t v28 = &v23[v27];
      uint64_t v29 = &v24[v27];
      uint64_t v30 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v31 = v15[7];
    uint64_t v152 = v13;
    uint64_t v32 = &v13[v31];
    uint64_t v33 = &v14[v31];
    uint64_t v34 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, (uint64_t)v34))
    {
      uint64_t v35 = sub_253462A5C(&qword_269CDF8F0);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      *uint64_t v32 = *v33;
      *(_OWORD *)(v32 + 1) = *(_OWORD *)(v33 + 1);
      *(_OWORD *)(v32 + 3) = *(_OWORD *)(v33 + 3);
      uint64_t v36 = v34[7];
      uint64_t v37 = (char *)v32 + v36;
      uint64_t v38 = (char *)v33 + v36;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33 + v36, 1, v25))
      {
        uint64_t v39 = sub_253462A5C(&qword_269CDF900);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        uint64_t v40 = *(int *)(v25 + 24);
        uint64_t v145 = &v37[v40];
        uint64_t v41 = &v38[v40];
        uint64_t v42 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v145, v41, v42);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v25);
      }
      uint64_t v43 = v34[8];
      unint64_t v44 = (_DWORD *)((char *)v32 + v43);
      uint64_t v45 = (_DWORD *)((char *)v33 + v43);
      uint64_t v46 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        *unint64_t v44 = *v45;
        *((unsigned char *)v44 + 4) = *((unsigned char *)v45 + 4);
        v44[2] = v45[2];
        *((unsigned char *)v44 + 12) = *((unsigned char *)v45 + 12);
        v44[4] = v45[4];
        *((unsigned char *)v44 + 20) = *((unsigned char *)v45 + 20);
        *((unsigned char *)v44 + 28) = *((unsigned char *)v45 + 28);
        v44[6] = v45[6];
        uint64_t v48 = *(int *)(v46 + 32);
        uint64_t v146 = v46;
        uint64_t v49 = (char *)v44 + v48;
        uint64_t v50 = (char *)v45 + v48;
        uint64_t v51 = sub_253B07160();
        uint64_t v52 = v49;
        uint64_t v46 = v146;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v52, v50, v51);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v146);
      }
      uint64_t v53 = v34[9];
      uint64_t v54 = (char *)v32 + v53;
      uint64_t v55 = (char *)v33 + v53;
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v55[8];
      *(_OWORD *)((char *)v32 + v34[10]) = *(_OWORD *)((char *)v33 + v34[10]);
      *((unsigned char *)v32 + v34[11]) = *((unsigned char *)v33 + v34[11]);
      *((unsigned char *)v32 + v34[12]) = *((unsigned char *)v33 + v34[12]);
      uint64_t v56 = v34[13];
      uint64_t v57 = (_DWORD *)((char *)v32 + v56);
      uint64_t v58 = (_DWORD *)((char *)v33 + v56);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33 + v56, 1, v46))
      {
        uint64_t v59 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        *uint64_t v57 = *v58;
        *((unsigned char *)v57 + 4) = *((unsigned char *)v58 + 4);
        v57[2] = v58[2];
        *((unsigned char *)v57 + 12) = *((unsigned char *)v58 + 12);
        v57[4] = v58[4];
        *((unsigned char *)v57 + 20) = *((unsigned char *)v58 + 20);
        *((unsigned char *)v57 + 28) = *((unsigned char *)v58 + 28);
        v57[6] = v58[6];
        uint64_t v60 = *(int *)(v46 + 32);
        uint64_t v147 = v46;
        uint64_t v61 = (char *)v57 + v60;
        int v62 = (char *)v58 + v60;
        uint64_t v63 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v147);
      }
      *((unsigned char *)v32 + v34[14]) = *((unsigned char *)v33 + v34[14]);
      uint64_t v64 = v34[15];
      uint64_t v65 = (_OWORD *)((char *)v32 + v64);
      uint64_t v66 = (_OWORD *)((char *)v33 + v64);
      uint64_t v67 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = sub_253462A5C(&qword_269CDF920);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        long long v69 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v69;
        uint64_t v70 = *(int *)(v67 + 24);
        uint64_t v148 = (char *)v65 + v70;
        uint64_t v71 = (char *)v66 + v70;
        uint64_t v72 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v148, v71, v72);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v65, 0, 1, v67);
      }
      uint64_t v73 = v34[16];
      uint64_t v74 = (char *)v32 + v73;
      int v75 = (char *)v33 + v73;
      uint64_t v76 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, (uint64_t)v34);
    }
    uint64_t v77 = (uint64_t)v152;
    uint64_t v78 = v15[8];
    uint64_t v79 = &v152[v78];
    uint64_t v80 = &v14[v78];
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v14[v78], 1, v150))
    {
      uint64_t v81 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v150 - 8) + 32))(v79, v80, v150);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v150);
    }
    uint64_t v82 = v15[9];
    uint64_t v83 = &v152[v82];
    uint64_t v84 = &v14[v82];
    uint64_t v85 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
    {
      uint64_t v86 = sub_253462A5C(&qword_269CDF8E0);
      memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
      a3 = v151;
    }
    else
    {
      uint64_t v87 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v87))
      {
        uint64_t v88 = sub_253462A5C(&qword_269CDF958);
        memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          long long v92 = v84[1];
          *uint64_t v83 = *v84;
          v83[1] = v92;
          v83[2] = v84[2];
          uint64_t v91 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *uint64_t v83 = *v84;
          *((unsigned char *)v83 + 16) = *((unsigned char *)v84 + 16);
          *((void *)v83 + 3) = *((void *)v84 + 3);
          long long v90 = v84[3];
          v83[2] = v84[2];
          v83[3] = v90;
          v83[4] = v84[4];
          uint64_t v91 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        }
        else
        {
          long long v93 = v84[1];
          *uint64_t v83 = *v84;
          v83[1] = v93;
          long long v94 = v84[3];
          v83[2] = v84[2];
          v83[3] = v94;
          v83[4] = v84[4];
          *((_DWORD *)v83 + 20) = *((_DWORD *)v84 + 20);
          *((unsigned char *)v83 + 84) = *((unsigned char *)v84 + 84);
          uint64_t v95 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
          uint64_t v96 = *(int *)(v95 + 60);
          __dst = (_WORD *)((char *)v83 + v96);
          uint64_t v149 = (int *)v95;
          uint64_t v97 = (_WORD *)((char *)v84 + v96);
          uint64_t v98 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
          {
            uint64_t v99 = sub_253462A5C(&qword_269CDF998);
            memcpy(__dst, v97, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dst = *(_OWORD *)v97;
            __dst[8] = v97[8];
            uint64_t v100 = *(int *)(v98 + 28);
            uint64_t v139 = (char *)__dst + v100;
            uint64_t v101 = (char *)v97 + v100;
            uint64_t v102 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v139, v101, v102);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v98);
          }
          uint64_t v103 = v149;
          *(_OWORD *)((char *)v83 + v149[16]) = *(_OWORD *)((char *)v84 + v149[16]);
          *(_OWORD *)((char *)v83 + v149[17]) = *(_OWORD *)((char *)v84 + v149[17]);
          *(_OWORD *)((char *)v83 + v149[18]) = *(_OWORD *)((char *)v84 + v149[18]);
          uint64_t v104 = v149[19];
          __dsta = (_DWORD *)((char *)v83 + v104);
          uint64_t v105 = (_DWORD *)((char *)v84 + v104);
          uint64_t v140 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v140))
          {
            uint64_t v106 = sub_253462A5C(&qword_269CDF988);
            memcpy(__dsta, v105, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            _DWORD *__dsta = *v105;
            *((unsigned char *)__dsta + 4) = *((unsigned char *)v105 + 4);
            *(_OWORD *)(__dsta + 2) = *(_OWORD *)(v105 + 2);
            __dsta[6] = v105[6];
            *((unsigned char *)__dsta + 28) = *((unsigned char *)v105 + 28);
            __dsta[8] = v105[8];
            *((unsigned char *)__dsta + 36) = *((unsigned char *)v105 + 36);
            uint64_t v107 = *(int *)(v140 + 32);
            uint64_t v108 = (char *)__dsta + v107;
            uint64_t v109 = (char *)v105 + v107;
            uint64_t v110 = sub_253B07160();
            int v111 = v108;
            uint64_t v103 = v149;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v111, v109, v110);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v140);
          }
          uint64_t v112 = v103[20];
          int v113 = (char *)v83 + v112;
          int v114 = (char *)v84 + v112;
          *(void *)int v113 = *(void *)v114;
          v113[8] = v114[8];
          *(_OWORD *)((char *)v83 + v103[21]) = *(_OWORD *)((char *)v84 + v103[21]);
          *((unsigned char *)v83 + v103[22]) = *((unsigned char *)v84 + v103[22]);
          *((unsigned char *)v83 + v103[23]) = *((unsigned char *)v84 + v103[23]);
          uint64_t v115 = v103[24];
          __dstb = (void *)((char *)v83 + v115);
          uint64_t v116 = (void *)((char *)v84 + v115);
          uint64_t v141 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v116, 1, v141))
          {
            uint64_t v117 = sub_253462A5C(&qword_269CDF978);
            memcpy(__dstb, v116, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            void *__dstb = *v116;
            *(_OWORD *)(__dstb + 1) = *(_OWORD *)(v116 + 1);
            *(_OWORD *)(__dstb + 3) = *(_OWORD *)(v116 + 3);
            *(_OWORD *)(__dstb + 5) = *(_OWORD *)(v116 + 5);
            *(_OWORD *)(__dstb + 7) = *(_OWORD *)(v116 + 7);
            *(_OWORD *)(__dstb + 9) = *(_OWORD *)(v116 + 9);
            uint64_t v118 = *(int *)(v141 + 40);
            uint64_t v119 = (char *)__dstb + v118;
            uint64_t v120 = (char *)v116 + v118;
            uint64_t v121 = sub_253B07160();
            uint64_t v122 = v119;
            uint64_t v103 = v149;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v122, v120, v121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v141);
          }
          *((unsigned char *)v83 + v103[25]) = *((unsigned char *)v84 + v103[25]);
          *((unsigned char *)v83 + v103[26]) = *((unsigned char *)v84 + v103[26]);
          uint64_t v91 = v103[27];
        }
        uint64_t v123 = (char *)v83 + v91;
        uint64_t v124 = (char *)v84 + v91;
        uint64_t v125 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v87);
      }
      uint64_t v126 = *(int *)(v85 + 20);
      uint64_t v127 = (char *)v83 + v126;
      uint64_t v128 = (char *)v84 + v126;
      uint64_t v129 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v85);
      a3 = v151;
      uint64_t v77 = (uint64_t)v152;
    }
    *(_OWORD *)(v77 + v15[10]) = *(_OWORD *)&v14[v15[10]];
    uint64_t v130 = v15[11];
    uint64_t v131 = v77 + v130;
    unint64_t v132 = &v14[v130];
    uint64_t v133 = sub_253B07160();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v77, 0, 1, (uint64_t)v15);
  }
  uint64_t v134 = *(int *)(a3 + 24);
  uint64_t v135 = (char *)a1 + v134;
  uint64_t v136 = (char *)a2 + v134;
  uint64_t v137 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
  return a1;
}

void *assignWithTake for TranscriptProtoRetrievedContextStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v26 = a2[2];
  a1[1] = a2[1];
  a1[2] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(v6 + 24);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (v19)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    *uint64_t v15 = *v16;
    uint64_t v31 = v17[5];
    uint64_t v32 = &v15[v31];
    uint64_t v33 = &v16[v31];
    uint64_t v34 = sub_253B08E50();
    int v35 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v34);
    int v36 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34);
    uint64_t v511 = v34;
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v56 = *(void *)(v34 - 8);
      if (!v36)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 40))(v32, v33, v34);
LABEL_29:
        uint64_t v520 = v17;
        uint64_t v58 = v17[6];
        uint64_t v59 = &v15[v58];
        uint64_t v60 = &v16[v58];
        uint64_t v61 = type metadata accessor for ContextProtoConfidence(0);
        int v62 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v59, 1, v61);
        int v63 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v61);
        uint64_t v516 = a3;
        if (v62)
        {
          if (!v63)
          {
            *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
            v59[4] = v60[4];
            uint64_t v64 = *(int *)(v61 + 24);
            uint64_t v65 = &v59[v64];
            uint64_t v66 = v15;
            uint64_t v67 = &v60[v64];
            uint64_t v68 = sub_253B07160();
            long long v69 = v67;
            uint64_t v15 = v66;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v69, v68);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v61);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v63)
          {
            *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
            v59[4] = v60[4];
            uint64_t v144 = *(int *)(v61 + 24);
            uint64_t v145 = &v59[v144];
            uint64_t v146 = v15;
            uint64_t v147 = &v60[v144];
            uint64_t v148 = sub_253B07160();
            uint64_t v149 = v147;
            uint64_t v15 = v146;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 40))(v145, v149, v148);
LABEL_35:
            uint64_t v71 = v520[7];
            uint64_t v72 = &v15[v71];
            v518 = v16;
            uint64_t v73 = &v16[v71];
            uint64_t v74 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
            int v75 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, (uint64_t)v74);
            int v76 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v73, 1, (uint64_t)v74);
            if (v75)
            {
              if (!v76)
              {
                uint64_t v77 = v15;
                *uint64_t v72 = *v73;
                *(_OWORD *)(v72 + 1) = *(_OWORD *)(v73 + 1);
                *(_OWORD *)(v72 + 3) = *(_OWORD *)(v73 + 3);
                uint64_t v78 = v74[7];
                uint64_t v79 = (char *)v72 + v78;
                uint64_t v80 = (char *)v73 + v78;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v73 + v78, 1, v61))
                {
                  uint64_t v81 = sub_253462A5C(&qword_269CDF900);
                  memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
                  v79[4] = v80[4];
                  uint64_t v163 = *(int *)(v61 + 24);
                  uint64_t v164 = &v79[v163];
                  uint64_t v165 = &v80[v163];
                  uint64_t v166 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v61);
                }
                uint64_t v167 = v74[8];
                int v168 = (_DWORD *)((char *)v72 + v167);
                int v169 = (_DWORD *)((char *)v73 + v167);
                uint64_t v170 = type metadata accessor for ContextProtoBoundingBox(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v169, 1, v170))
                {
                  uint64_t v171 = sub_253462A5C(&qword_269CDCCC0);
                  memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
                }
                else
                {
                  *int v168 = *v169;
                  *((unsigned char *)v168 + 4) = *((unsigned char *)v169 + 4);
                  v168[2] = v169[2];
                  *((unsigned char *)v168 + 12) = *((unsigned char *)v169 + 12);
                  v168[4] = v169[4];
                  *((unsigned char *)v168 + 20) = *((unsigned char *)v169 + 20);
                  *((unsigned char *)v168 + 28) = *((unsigned char *)v169 + 28);
                  v168[6] = v169[6];
                  uint64_t v172 = *(int *)(v170 + 32);
                  uint64_t v173 = (char *)v168 + v172;
                  uint64_t v174 = (char *)v169 + v172;
                  uint64_t v175 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 32))(v173, v174, v175);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v168, 0, 1, v170);
                }
                uint64_t v176 = v74[9];
                uint64_t v177 = (char *)v72 + v176;
                uint64_t v178 = (char *)v73 + v176;
                *(void *)uint64_t v177 = *(void *)v178;
                v177[8] = v178[8];
                *(_OWORD *)((char *)v72 + v74[10]) = *(_OWORD *)((char *)v73 + v74[10]);
                *((unsigned char *)v72 + v74[11]) = *((unsigned char *)v73 + v74[11]);
                *((unsigned char *)v72 + v74[12]) = *((unsigned char *)v73 + v74[12]);
                uint64_t v179 = v74[13];
                uint64_t v180 = (_DWORD *)((char *)v72 + v179);
                uint64_t v181 = (_DWORD *)((char *)v73 + v179);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v73 + v179, 1, v170))
                {
                  uint64_t v182 = sub_253462A5C(&qword_269CDCCC0);
                  memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
                }
                else
                {
                  _DWORD *v180 = *v181;
                  *((unsigned char *)v180 + 4) = *((unsigned char *)v181 + 4);
                  v180[2] = v181[2];
                  *((unsigned char *)v180 + 12) = *((unsigned char *)v181 + 12);
                  v180[4] = v181[4];
                  *((unsigned char *)v180 + 20) = *((unsigned char *)v181 + 20);
                  *((unsigned char *)v180 + 28) = *((unsigned char *)v181 + 28);
                  v180[6] = v181[6];
                  uint64_t v183 = *(int *)(v170 + 32);
                  uint64_t v184 = (char *)v180 + v183;
                  uint64_t v185 = (char *)v181 + v183;
                  uint64_t v186 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v180, 0, 1, v170);
                }
                *((unsigned char *)v72 + v74[14]) = *((unsigned char *)v73 + v74[14]);
                uint64_t v187 = v74[15];
                int v188 = (_OWORD *)((char *)v72 + v187);
                int v189 = (_OWORD *)((char *)v73 + v187);
                uint64_t v190 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v189, 1, v190))
                {
                  uint64_t v191 = sub_253462A5C(&qword_269CDF920);
                  memcpy(v188, v189, *(void *)(*(void *)(v191 - 8) + 64));
                }
                else
                {
                  long long v192 = v189[1];
                  _OWORD *v188 = *v189;
                  v188[1] = v192;
                  uint64_t v193 = *(int *)(v190 + 24);
                  uint64_t v194 = (char *)v188 + v193;
                  v195 = (char *)v189 + v193;
                  uint64_t v196 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v188, 0, 1, v190);
                }
                uint64_t v197 = v74[16];
                uint64_t v198 = (char *)v72 + v197;
                uint64_t v199 = (char *)v73 + v197;
                uint64_t v200 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v72, 0, 1, (uint64_t)v74);
                uint64_t v15 = v77;
LABEL_105:
                uint64_t v266 = v518;
                uint64_t v267 = v520[8];
                v268 = &v15[v267];
                uint64_t v269 = &v518[v267];
                int v270 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v15[v267], 1, v511);
                int v271 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v269, 1, v511);
                if (v270)
                {
                  if (!v271)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v511 - 8) + 32))(v268, v269, v511);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v268, 0, 1, v511);
                    goto LABEL_111;
                  }
                }
                else
                {
                  uint64_t v272 = *(void *)(v511 - 8);
                  if (!v271)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v272 + 40))(v268, v269, v511);
LABEL_111:
                    uint64_t v274 = v520[9];
                    v275 = &v15[v274];
                    uint64_t v276 = &v518[v274];
                    uint64_t v277 = type metadata accessor for ContextProtoStructuredContext(0);
                    int v278 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v275, 1, v277);
                    int v279 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v276, 1, v277);
                    if (v278)
                    {
                      if (!v279)
                      {
                        uint64_t v280 = type metadata accessor for ContextProtoStructuredContextKind(0);
                        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v276, 1, v280))
                        {
                          uint64_t v281 = sub_253462A5C(&qword_269CDF958);
                          memcpy(v275, v276, *(void *)(*(void *)(v281 - 8) + 64));
LABEL_166:
                          uint64_t v409 = *(int *)(v277 + 20);
                          v410 = (char *)v275 + v409;
                          v411 = (char *)v276 + v409;
                          uint64_t v412 = sub_253B07160();
                          (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 32))(v410, v411, v412);
                          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v275, 0, 1, v277);
LABEL_181:
                          uint64_t v266 = v518;
                          goto LABEL_182;
                        }
                        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                        if (EnumCaseMultiPayload == 2)
                        {
                          long long v303 = v276[1];
                          _OWORD *v275 = *v276;
                          v275[1] = v303;
                          v275[2] = v276[2];
                          uint64_t v291 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0)
                                        + 28);
                        }
                        else
                        {
                          if (EnumCaseMultiPayload != 1)
                          {
                            uint64_t v513 = v15;
                            long long v307 = v276[1];
                            _OWORD *v275 = *v276;
                            v275[1] = v307;
                            long long v308 = v276[3];
                            v275[2] = v276[2];
                            v275[3] = v308;
                            v275[4] = v276[4];
                            *((_DWORD *)v275 + 20) = *((_DWORD *)v276 + 20);
                            *((unsigned char *)v275 + 84) = *((unsigned char *)v276 + 84);
                            uint64_t v309 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                            uint64_t v310 = v309[15];
                            v311 = (_WORD *)((char *)v275 + v310);
                            v312 = (_WORD *)((char *)v276 + v310);
                            uint64_t v313 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v312, 1, v313))
                            {
                              uint64_t v314 = sub_253462A5C(&qword_269CDF998);
                              memcpy(v311, v312, *(void *)(*(void *)(v314 - 8) + 64));
                            }
                            else
                            {
                              *(_OWORD *)v311 = *(_OWORD *)v312;
                              v311[8] = v312[8];
                              uint64_t v383 = *(int *)(v313 + 28);
                              uint64_t v499 = (char *)v311 + v383;
                              v384 = (char *)v312 + v383;
                              uint64_t v385 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v385 - 8) + 32))(v499, v384, v385);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v311, 0, 1, v313);
                            }
                            *(_OWORD *)((char *)v275 + v309[16]) = *(_OWORD *)((char *)v276 + v309[16]);
                            *(_OWORD *)((char *)v275 + v309[17]) = *(_OWORD *)((char *)v276 + v309[17]);
                            *(_OWORD *)((char *)v275 + v309[18]) = *(_OWORD *)((char *)v276 + v309[18]);
                            uint64_t v386 = v309[19];
                            int v387 = (_DWORD *)((char *)v275 + v386);
                            uint64_t v388 = (_DWORD *)((char *)v276 + v386);
                            uint64_t v389 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v388, 1, v389))
                            {
                              uint64_t v390 = sub_253462A5C(&qword_269CDF988);
                              memcpy(v387, v388, *(void *)(*(void *)(v390 - 8) + 64));
                            }
                            else
                            {
                              *int v387 = *v388;
                              *((unsigned char *)v387 + 4) = *((unsigned char *)v388 + 4);
                              *(_OWORD *)(v387 + 2) = *(_OWORD *)(v388 + 2);
                              v387[6] = v388[6];
                              *((unsigned char *)v387 + 28) = *((unsigned char *)v388 + 28);
                              v387[8] = v388[8];
                              *((unsigned char *)v387 + 36) = *((unsigned char *)v388 + 36);
                              uint64_t v391 = *(int *)(v389 + 32);
                              v500 = (char *)v387 + v391;
                              uint64_t v392 = (char *)v388 + v391;
                              uint64_t v393 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v393 - 8) + 32))(v500, v392, v393);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v387, 0, 1, v389);
                            }
                            uint64_t v394 = v309[20];
                            v395 = (char *)v275 + v394;
                            uint64_t v396 = (char *)v276 + v394;
                            *(void *)v395 = *(void *)v396;
                            v395[8] = v396[8];
                            *(_OWORD *)((char *)v275 + v309[21]) = *(_OWORD *)((char *)v276 + v309[21]);
                            *((unsigned char *)v275 + v309[22]) = *((unsigned char *)v276 + v309[22]);
                            *((unsigned char *)v275 + v309[23]) = *((unsigned char *)v276 + v309[23]);
                            uint64_t v397 = v309[24];
                            uint64_t v398 = (void *)((char *)v275 + v397);
                            uint64_t v399 = (void *)((char *)v276 + v397);
                            uint64_t v400 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v399, 1, v400))
                            {
                              uint64_t v401 = sub_253462A5C(&qword_269CDF978);
                              memcpy(v398, v399, *(void *)(*(void *)(v401 - 8) + 64));
                            }
                            else
                            {
                              *uint64_t v398 = *v399;
                              *(_OWORD *)(v398 + 1) = *(_OWORD *)(v399 + 1);
                              *(_OWORD *)(v398 + 3) = *(_OWORD *)(v399 + 3);
                              *(_OWORD *)(v398 + 5) = *(_OWORD *)(v399 + 5);
                              *(_OWORD *)(v398 + 7) = *(_OWORD *)(v399 + 7);
                              *(_OWORD *)(v398 + 9) = *(_OWORD *)(v399 + 9);
                              uint64_t v402 = *(int *)(v400 + 40);
                              v501 = (char *)v398 + v402;
                              v403 = (char *)v399 + v402;
                              uint64_t v404 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v404 - 8) + 32))(v501, v403, v404);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v398, 0, 1, v400);
                            }
                            *((unsigned char *)v275 + v309[25]) = *((unsigned char *)v276 + v309[25]);
                            *((unsigned char *)v275 + v309[26]) = *((unsigned char *)v276 + v309[26]);
                            uint64_t v405 = v309[27];
                            uint64_t v406 = (char *)v275 + v405;
                            v407 = (char *)v276 + v405;
                            uint64_t v408 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v408 - 8) + 32))(v406, v407, v408);
                            uint64_t v15 = v513;
                            goto LABEL_165;
                          }
                          _OWORD *v275 = *v276;
                          *((unsigned char *)v275 + 16) = *((unsigned char *)v276 + 16);
                          *((void *)v275 + 3) = *((void *)v276 + 3);
                          long long v290 = v276[3];
                          v275[2] = v276[2];
                          v275[3] = v290;
                          v275[4] = v276[4];
                          uint64_t v291 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                                        + 40);
                        }
                        v304 = (char *)v275 + v291;
                        uint64_t v305 = (char *)v276 + v291;
                        uint64_t v306 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v304, v305, v306);
LABEL_165:
                        swift_storeEnumTagMultiPayload();
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v275, 0, 1, v280);
                        goto LABEL_166;
                      }
LABEL_117:
                      uint64_t v282 = sub_253462A5C(&qword_269CDF8E0);
                      memcpy(v275, v276, *(void *)(*(void *)(v282 - 8) + 64));
LABEL_182:
                      uint64_t v456 = v520[10];
                      uint64_t v457 = &v15[v456];
                      v458 = (uint64_t *)&v266[v456];
                      uint64_t v460 = *v458;
                      uint64_t v459 = v458[1];
                      *uint64_t v457 = v460;
                      v457[1] = v459;
                      swift_bridgeObjectRelease();
                      uint64_t v461 = v520[11];
                      unint64_t v462 = &v15[v461];
                      uint64_t v463 = &v266[v461];
                      uint64_t v464 = sub_253B07160();
                      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v464 - 8) + 40))(v462, v463, v464);
                      goto LABEL_183;
                    }
                    if (v279)
                    {
                      sub_2536FA73C();
                      goto LABEL_117;
                    }
                    uint64_t v283 = type metadata accessor for ContextProtoStructuredContextKind(0);
                    int v284 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v275, 1, v283);
                    int v285 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v276, 1, v283);
                    if (v284)
                    {
                      if (!v285)
                      {
                        int v286 = swift_getEnumCaseMultiPayload();
                        if (v286 == 2)
                        {
                          long long v371 = v276[1];
                          _OWORD *v275 = *v276;
                          v275[1] = v371;
                          v275[2] = v276[2];
                          uint64_t v288 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0)
                                        + 28);
                        }
                        else
                        {
                          if (v286 != 1)
                          {
                            uint64_t v514 = v15;
                            long long v375 = v276[1];
                            _OWORD *v275 = *v276;
                            v275[1] = v375;
                            long long v376 = v276[3];
                            v275[2] = v276[2];
                            v275[3] = v376;
                            v275[4] = v276[4];
                            *((_DWORD *)v275 + 20) = *((_DWORD *)v276 + 20);
                            *((unsigned char *)v275 + 84) = *((unsigned char *)v276 + 84);
                            uint64_t v377 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                            uint64_t v378 = v377[15];
                            uint64_t v379 = (_WORD *)((char *)v275 + v378);
                            uint64_t v380 = (_WORD *)((char *)v276 + v378);
                            uint64_t v381 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v380, 1, v381))
                            {
                              uint64_t v382 = sub_253462A5C(&qword_269CDF998);
                              memcpy(v379, v380, *(void *)(*(void *)(v382 - 8) + 64));
                            }
                            else
                            {
                              *(_OWORD *)uint64_t v379 = *(_OWORD *)v380;
                              v379[8] = v380[8];
                              uint64_t v426 = *(int *)(v381 + 28);
                              uint64_t v502 = (char *)v379 + v426;
                              v427 = (char *)v380 + v426;
                              uint64_t v428 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v428 - 8) + 32))(v502, v427, v428);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v379, 0, 1, v381);
                            }
                            *(_OWORD *)((char *)v275 + v377[16]) = *(_OWORD *)((char *)v276 + v377[16]);
                            *(_OWORD *)((char *)v275 + v377[17]) = *(_OWORD *)((char *)v276 + v377[17]);
                            *(_OWORD *)((char *)v275 + v377[18]) = *(_OWORD *)((char *)v276 + v377[18]);
                            uint64_t v429 = v377[19];
                            v430 = (_DWORD *)((char *)v275 + v429);
                            v431 = (_DWORD *)((char *)v276 + v429);
                            uint64_t v432 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v431, 1, v432))
                            {
                              uint64_t v433 = sub_253462A5C(&qword_269CDF988);
                              memcpy(v430, v431, *(void *)(*(void *)(v433 - 8) + 64));
                            }
                            else
                            {
                              _DWORD *v430 = *v431;
                              *((unsigned char *)v430 + 4) = *((unsigned char *)v431 + 4);
                              *(_OWORD *)(v430 + 2) = *(_OWORD *)(v431 + 2);
                              v430[6] = v431[6];
                              *((unsigned char *)v430 + 28) = *((unsigned char *)v431 + 28);
                              v430[8] = v431[8];
                              *((unsigned char *)v430 + 36) = *((unsigned char *)v431 + 36);
                              uint64_t v434 = *(int *)(v432 + 32);
                              uint64_t v503 = (char *)v430 + v434;
                              uint64_t v435 = (char *)v431 + v434;
                              uint64_t v436 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 32))(v503, v435, v436);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v430, 0, 1, v432);
                            }
                            uint64_t v437 = v377[20];
                            uint64_t v438 = (char *)v275 + v437;
                            uint64_t v439 = (char *)v276 + v437;
                            *(void *)uint64_t v438 = *(void *)v439;
                            v438[8] = v439[8];
                            *(_OWORD *)((char *)v275 + v377[21]) = *(_OWORD *)((char *)v276 + v377[21]);
                            *((unsigned char *)v275 + v377[22]) = *((unsigned char *)v276 + v377[22]);
                            *((unsigned char *)v275 + v377[23]) = *((unsigned char *)v276 + v377[23]);
                            uint64_t v440 = v377[24];
                            uint64_t v441 = (void *)((char *)v275 + v440);
                            v442 = (void *)((char *)v276 + v440);
                            uint64_t v443 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v442, 1, v443))
                            {
                              uint64_t v444 = sub_253462A5C(&qword_269CDF978);
                              memcpy(v441, v442, *(void *)(*(void *)(v444 - 8) + 64));
                            }
                            else
                            {
                              *uint64_t v441 = *v442;
                              *(_OWORD *)(v441 + 1) = *(_OWORD *)(v442 + 1);
                              *(_OWORD *)(v441 + 3) = *(_OWORD *)(v442 + 3);
                              *(_OWORD *)(v441 + 5) = *(_OWORD *)(v442 + 5);
                              *(_OWORD *)(v441 + 7) = *(_OWORD *)(v442 + 7);
                              *(_OWORD *)(v441 + 9) = *(_OWORD *)(v442 + 9);
                              uint64_t v445 = *(int *)(v443 + 40);
                              v504 = (char *)v441 + v445;
                              v446 = (char *)v442 + v445;
                              uint64_t v447 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v447 - 8) + 32))(v504, v446, v447);
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v441, 0, 1, v443);
                            }
                            *((unsigned char *)v275 + v377[25]) = *((unsigned char *)v276 + v377[25]);
                            *((unsigned char *)v275 + v377[26]) = *((unsigned char *)v276 + v377[26]);
                            uint64_t v448 = v377[27];
                            uint64_t v449 = (char *)v275 + v448;
                            uint64_t v450 = (char *)v276 + v448;
                            uint64_t v451 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v451 - 8) + 32))(v449, v450, v451);
                            uint64_t v15 = v514;
                            goto LABEL_179;
                          }
                          _OWORD *v275 = *v276;
                          *((unsigned char *)v275 + 16) = *((unsigned char *)v276 + 16);
                          *((void *)v275 + 3) = *((void *)v276 + 3);
                          long long v287 = v276[3];
                          v275[2] = v276[2];
                          v275[3] = v287;
                          v275[4] = v276[4];
                          uint64_t v288 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                                        + 40);
                        }
                        uint64_t v372 = (char *)v275 + v288;
                        uint64_t v373 = (char *)v276 + v288;
                        uint64_t v374 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 32))(v372, v373, v374);
LABEL_179:
                        swift_storeEnumTagMultiPayload();
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v275, 0, 1, v283);
                        goto LABEL_180;
                      }
                    }
                    else
                    {
                      if (!v285)
                      {
                        if (a1 != a2)
                        {
                          sub_2536FA73C();
                          int v365 = swift_getEnumCaseMultiPayload();
                          if (v365 == 2)
                          {
                            long long v413 = v276[1];
                            _OWORD *v275 = *v276;
                            v275[1] = v413;
                            v275[2] = v276[2];
                            uint64_t v414 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0)
                                          + 28);
                            uint64_t v415 = (char *)v275 + v414;
                            uint64_t v416 = (char *)v276 + v414;
                            uint64_t v417 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v417 - 8) + 32))(v415, v416, v417);
                          }
                          else
                          {
                            if (v365 != 1)
                            {
                              v515 = v15;
                              long long v418 = v276[1];
                              _OWORD *v275 = *v276;
                              v275[1] = v418;
                              long long v419 = v276[3];
                              v275[2] = v276[2];
                              v275[3] = v419;
                              v275[4] = v276[4];
                              *((_DWORD *)v275 + 20) = *((_DWORD *)v276 + 20);
                              *((unsigned char *)v275 + 84) = *((unsigned char *)v276 + 84);
                              int v420 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                              uint64_t v421 = v420[15];
                              uint64_t v422 = (_WORD *)((char *)v275 + v421);
                              uint64_t v423 = (_WORD *)((char *)v276 + v421);
                              uint64_t v424 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v423, 1, v424))
                              {
                                uint64_t v425 = sub_253462A5C(&qword_269CDF998);
                                memcpy(v422, v423, *(void *)(*(void *)(v425 - 8) + 64));
                              }
                              else
                              {
                                *(_OWORD *)uint64_t v422 = *(_OWORD *)v423;
                                v422[8] = v423[8];
                                uint64_t v470 = *(int *)(v424 + 28);
                                v508 = (char *)v422 + v470;
                                v471 = (char *)v423 + v470;
                                uint64_t v472 = sub_253B07160();
                                (*(void (**)(char *, char *, uint64_t))(*(void *)(v472 - 8) + 32))(v508, v471, v472);
                                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v424);
                              }
                              *(_OWORD *)((char *)v275 + v420[16]) = *(_OWORD *)((char *)v276 + v420[16]);
                              *(_OWORD *)((char *)v275 + v420[17]) = *(_OWORD *)((char *)v276 + v420[17]);
                              *(_OWORD *)((char *)v275 + v420[18]) = *(_OWORD *)((char *)v276 + v420[18]);
                              uint64_t v473 = v420[19];
                              uint64_t v474 = (_DWORD *)((char *)v275 + v473);
                              int v475 = (_DWORD *)((char *)v276 + v473);
                              uint64_t v476 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v475, 1, v476))
                              {
                                uint64_t v477 = sub_253462A5C(&qword_269CDF988);
                                memcpy(v474, v475, *(void *)(*(void *)(v477 - 8) + 64));
                              }
                              else
                              {
                                *uint64_t v474 = *v475;
                                *((unsigned char *)v474 + 4) = *((unsigned char *)v475 + 4);
                                *(_OWORD *)(v474 + 2) = *(_OWORD *)(v475 + 2);
                                v474[6] = v475[6];
                                *((unsigned char *)v474 + 28) = *((unsigned char *)v475 + 28);
                                v474[8] = v475[8];
                                *((unsigned char *)v474 + 36) = *((unsigned char *)v475 + 36);
                                uint64_t v478 = *(int *)(v476 + 32);
                                v509 = (char *)v474 + v478;
                                int v479 = (char *)v475 + v478;
                                uint64_t v480 = sub_253B07160();
                                (*(void (**)(char *, char *, uint64_t))(*(void *)(v480 - 8) + 32))(v509, v479, v480);
                                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v474, 0, 1, v476);
                              }
                              uint64_t v481 = v420[20];
                              v482 = (char *)v275 + v481;
                              uint64_t v483 = (char *)v276 + v481;
                              *(void *)v482 = *(void *)v483;
                              v482[8] = v483[8];
                              *(_OWORD *)((char *)v275 + v420[21]) = *(_OWORD *)((char *)v276 + v420[21]);
                              *((unsigned char *)v275 + v420[22]) = *((unsigned char *)v276 + v420[22]);
                              *((unsigned char *)v275 + v420[23]) = *((unsigned char *)v276 + v420[23]);
                              uint64_t v484 = v420[24];
                              v485 = (void *)((char *)v275 + v484);
                              uint64_t v486 = (void *)((char *)v276 + v484);
                              uint64_t v487 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v486, 1, v487))
                              {
                                uint64_t v488 = sub_253462A5C(&qword_269CDF978);
                                memcpy(v485, v486, *(void *)(*(void *)(v488 - 8) + 64));
                              }
                              else
                              {
                                void *v485 = *v486;
                                *(_OWORD *)(v485 + 1) = *(_OWORD *)(v486 + 1);
                                *(_OWORD *)(v485 + 3) = *(_OWORD *)(v486 + 3);
                                *(_OWORD *)(v485 + 5) = *(_OWORD *)(v486 + 5);
                                *(_OWORD *)(v485 + 7) = *(_OWORD *)(v486 + 7);
                                *(_OWORD *)(v485 + 9) = *(_OWORD *)(v486 + 9);
                                uint64_t v489 = *(int *)(v487 + 40);
                                uint64_t v510 = (char *)v485 + v489;
                                uint64_t v490 = (char *)v486 + v489;
                                uint64_t v491 = sub_253B07160();
                                (*(void (**)(char *, char *, uint64_t))(*(void *)(v491 - 8) + 32))(v510, v490, v491);
                                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v485, 0, 1, v487);
                              }
                              *((unsigned char *)v275 + v420[25]) = *((unsigned char *)v276 + v420[25]);
                              *((unsigned char *)v275 + v420[26]) = *((unsigned char *)v276 + v420[26]);
                              uint64_t v492 = v420[27];
                              uint64_t v493 = (char *)v275 + v492;
                              uint64_t v494 = (char *)v276 + v492;
                              uint64_t v495 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 32))(v493, v494, v495);
                              swift_storeEnumTagMultiPayload();
                              uint64_t v15 = v515;
                              goto LABEL_180;
                            }
                            _OWORD *v275 = *v276;
                            *((unsigned char *)v275 + 16) = *((unsigned char *)v276 + 16);
                            *((void *)v275 + 3) = *((void *)v276 + 3);
                            long long v366 = v276[3];
                            v275[2] = v276[2];
                            v275[3] = v366;
                            v275[4] = v276[4];
                            uint64_t v367 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0)
                                          + 40);
                            uint64_t v368 = (char *)v275 + v367;
                            int v369 = (char *)v276 + v367;
                            uint64_t v370 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 32))(v368, v369, v370);
                          }
                          swift_storeEnumTagMultiPayload();
                        }
LABEL_180:
                        uint64_t v452 = *(int *)(v277 + 20);
                        v453 = (char *)v275 + v452;
                        uint64_t v454 = (char *)v276 + v452;
                        uint64_t v455 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v455 - 8) + 40))(v453, v454, v455);
                        goto LABEL_181;
                      }
                      sub_2536FA73C();
                    }
                    uint64_t v292 = sub_253462A5C(&qword_269CDF958);
                    memcpy(v275, v276, *(void *)(*(void *)(v292 - 8) + 64));
                    goto LABEL_180;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v272 + 8))(v268, v511);
                }
                uint64_t v273 = sub_253462A5C(&qword_269CDCBC8);
                memcpy(v268, v269, *(void *)(*(void *)(v273 - 8) + 64));
                goto LABEL_111;
              }
LABEL_41:
              uint64_t v82 = sub_253462A5C(&qword_269CDF8F0);
              memcpy(v72, v73, *(void *)(*(void *)(v82 - 8) + 64));
              goto LABEL_105;
            }
            if (v76)
            {
              sub_2536FA73C();
              goto LABEL_41;
            }
            *uint64_t v72 = *v73;
            swift_bridgeObjectRelease();
            uint64_t v150 = v73[2];
            v72[1] = v73[1];
            v72[2] = v150;
            swift_bridgeObjectRelease();
            uint64_t v151 = v73[4];
            v72[3] = v73[3];
            v72[4] = v151;
            swift_bridgeObjectRelease();
            uint64_t v152 = v74[7];
            uint64_t v153 = (char *)v72 + v152;
            int v154 = (char *)v73 + v152;
            int v155 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72 + v152, 1, v61);
            int v156 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v154, 1, v61);
            if (v155)
            {
              if (!v156)
              {
                *(_DWORD *)uint64_t v153 = *(_DWORD *)v154;
                v153[4] = v154[4];
                uint64_t v157 = *(int *)(v61 + 24);
                uint64_t v158 = &v153[v157];
                uint64_t v505 = (uint64_t)v153;
                uint64_t v159 = v15;
                uint64_t v160 = &v154[v157];
                uint64_t v161 = sub_253B07160();
                uint64_t v162 = v160;
                uint64_t v15 = v159;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v158, v162, v161);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v505, 0, 1, v61);
                goto LABEL_86;
              }
            }
            else
            {
              if (!v156)
              {
                *(_DWORD *)uint64_t v153 = *(_DWORD *)v154;
                v153[4] = v154[4];
                uint64_t v347 = *(int *)(v61 + 24);
                uint64_t v348 = &v153[v347];
                v349 = &v154[v347];
                uint64_t v350 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 40))(v348, v349, v350);
LABEL_86:
                uint64_t v214 = v74[8];
                uint64_t v215 = (char *)v72 + v214;
                uint64_t v216 = (char *)v73 + v214;
                uint64_t v217 = type metadata accessor for ContextProtoBoundingBox(0);
                int v218 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v215, 1, v217);
                int v219 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v216, 1, v217);
                if (v218)
                {
                  if (!v219)
                  {
                    *(_DWORD *)uint64_t v215 = *(_DWORD *)v216;
                    v215[4] = v216[4];
                    *((_DWORD *)v215 + 2) = *((_DWORD *)v216 + 2);
                    v215[12] = v216[12];
                    *((_DWORD *)v215 + 4) = *((_DWORD *)v216 + 4);
                    v215[20] = v216[20];
                    v215[28] = v216[28];
                    *((_DWORD *)v215 + 6) = *((_DWORD *)v216 + 6);
                    uint64_t v220 = *(int *)(v217 + 32);
                    uint64_t v221 = &v215[v220];
                    uint64_t v506 = v217;
                    v222 = v15;
                    v223 = &v216[v220];
                    uint64_t v224 = sub_253B07160();
                    uint64_t v225 = v223;
                    uint64_t v15 = v222;
                    uint64_t v217 = v506;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v221, v225, v224);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v215, 0, 1, v506);
                    goto LABEL_92;
                  }
                }
                else
                {
                  if (!v219)
                  {
                    *(_DWORD *)uint64_t v215 = *(_DWORD *)v216;
                    v215[4] = v216[4];
                    *((_DWORD *)v215 + 2) = *((_DWORD *)v216 + 2);
                    v215[12] = v216[12];
                    *((_DWORD *)v215 + 4) = *((_DWORD *)v216 + 4);
                    v215[20] = v216[20];
                    v215[28] = v216[28];
                    *((_DWORD *)v215 + 6) = *((_DWORD *)v216 + 6);
                    uint64_t v351 = *(int *)(v217 + 32);
                    uint64_t v352 = &v215[v351];
                    v353 = &v216[v351];
                    uint64_t v354 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 40))(v352, v353, v354);
LABEL_92:
                    uint64_t v227 = v74[9];
                    v228 = (char *)v72 + v227;
                    uint64_t v229 = (char *)v73 + v227;
                    *(void *)v228 = *(void *)v229;
                    v228[8] = v229[8];
                    uint64_t v230 = v74[10];
                    v231 = (void *)((char *)v72 + v230);
                    uint64_t v232 = (void *)((char *)v73 + v230);
                    uint64_t v234 = *v232;
                    uint64_t v233 = v232[1];
                    void *v231 = v234;
                    v231[1] = v233;
                    swift_bridgeObjectRelease();
                    *((unsigned char *)v72 + v74[11]) = *((unsigned char *)v73 + v74[11]);
                    *((unsigned char *)v72 + v74[12]) = *((unsigned char *)v73 + v74[12]);
                    uint64_t v235 = v74[13];
                    uint64_t v236 = (char *)v72 + v235;
                    uint64_t v237 = (char *)v73 + v235;
                    int v238 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72 + v235, 1, v217);
                    int v239 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v237, 1, v217);
                    if (v238)
                    {
                      if (!v239)
                      {
                        *(_DWORD *)uint64_t v236 = *(_DWORD *)v237;
                        v236[4] = v237[4];
                        *((_DWORD *)v236 + 2) = *((_DWORD *)v237 + 2);
                        v236[12] = v237[12];
                        *((_DWORD *)v236 + 4) = *((_DWORD *)v237 + 4);
                        v236[20] = v237[20];
                        v236[28] = v237[28];
                        *((_DWORD *)v236 + 6) = *((_DWORD *)v237 + 6);
                        uint64_t v240 = *(int *)(v217 + 32);
                        uint64_t v241 = &v236[v240];
                        uint64_t v507 = v217;
                        v242 = v15;
                        uint64_t v243 = &v237[v240];
                        uint64_t v244 = sub_253B07160();
                        uint64_t v245 = v243;
                        uint64_t v15 = v242;
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v241, v245, v244);
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v236, 0, 1, v507);
                        goto LABEL_98;
                      }
                    }
                    else
                    {
                      if (!v239)
                      {
                        *(_DWORD *)uint64_t v236 = *(_DWORD *)v237;
                        v236[4] = v237[4];
                        *((_DWORD *)v236 + 2) = *((_DWORD *)v237 + 2);
                        v236[12] = v237[12];
                        *((_DWORD *)v236 + 4) = *((_DWORD *)v237 + 4);
                        v236[20] = v237[20];
                        v236[28] = v237[28];
                        *((_DWORD *)v236 + 6) = *((_DWORD *)v237 + 6);
                        uint64_t v355 = *(int *)(v217 + 32);
                        int v356 = &v236[v355];
                        uint64_t v357 = &v237[v355];
                        uint64_t v358 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 40))(v356, v357, v358);
LABEL_98:
                        *((unsigned char *)v72 + v74[14]) = *((unsigned char *)v73 + v74[14]);
                        uint64_t v247 = v74[15];
                        v248 = (char *)v72 + v247;
                        uint64_t v249 = (char *)v73 + v247;
                        uint64_t v250 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
                        int v251 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v248, 1, v250);
                        int v252 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v249, 1, v250);
                        if (v251)
                        {
                          if (!v252)
                          {
                            long long v253 = *((_OWORD *)v249 + 1);
                            *(_OWORD *)v248 = *(_OWORD *)v249;
                            *((_OWORD *)v248 + 1) = v253;
                            uint64_t v254 = *(int *)(v250 + 24);
                            v255 = &v248[v254];
                            uint64_t v256 = v249;
                            uint64_t v257 = v15;
                            int v258 = &v256[v254];
                            uint64_t v259 = sub_253B07160();
                            uint64_t v260 = v258;
                            uint64_t v15 = v257;
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 32))(v255, v260, v259);
                            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v248, 0, 1, v250);
LABEL_104:
                            uint64_t v262 = v74[16];
                            v263 = (char *)v72 + v262;
                            v264 = (char *)v73 + v262;
                            uint64_t v265 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 40))(v263, v264, v265);
                            goto LABEL_105;
                          }
                        }
                        else
                        {
                          if (!v252)
                          {
                            uint64_t v359 = *((void *)v249 + 1);
                            *(void *)v248 = *(void *)v249;
                            *((void *)v248 + 1) = v359;
                            swift_bridgeObjectRelease();
                            uint64_t v360 = *((void *)v249 + 3);
                            *((void *)v248 + 2) = *((void *)v249 + 2);
                            *((void *)v248 + 3) = v360;
                            swift_bridgeObjectRelease();
                            uint64_t v361 = *(int *)(v250 + 24);
                            uint64_t v362 = &v248[v361];
                            int v363 = &v249[v361];
                            uint64_t v364 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 40))(v362, v363, v364);
                            goto LABEL_104;
                          }
                          sub_2536FA73C();
                        }
                        uint64_t v261 = sub_253462A5C(&qword_269CDF920);
                        memcpy(v248, v249, *(void *)(*(void *)(v261 - 8) + 64));
                        goto LABEL_104;
                      }
                      sub_2536FA73C();
                    }
                    uint64_t v246 = sub_253462A5C(&qword_269CDCCC0);
                    memcpy(v236, v237, *(void *)(*(void *)(v246 - 8) + 64));
                    goto LABEL_98;
                  }
                  sub_2536FA73C();
                }
                uint64_t v226 = sub_253462A5C(&qword_269CDCCC0);
                memcpy(v215, v216, *(void *)(*(void *)(v226 - 8) + 64));
                goto LABEL_92;
              }
              sub_2536FA73C();
            }
            uint64_t v213 = sub_253462A5C(&qword_269CDF900);
            memcpy(v153, v154, *(void *)(*(void *)(v213 - 8) + 64));
            goto LABEL_86;
          }
          sub_2536FA73C();
        }
        uint64_t v70 = sub_253462A5C(&qword_269CDF900);
        memcpy(v59, v60, *(void *)(*(void *)(v70 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v32, v34);
    }
    uint64_t v57 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v32, v33, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_29;
  }
  if (!v19)
  {
    *uint64_t v15 = *v16;
    uint64_t v20 = v17[5];
    uint64_t v21 = &v15[v20];
    uint64_t v22 = &v16[v20];
    uint64_t v23 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v37 = v17[6];
    v512 = v15;
    uint64_t v38 = &v15[v37];
    uint64_t v39 = &v16[v37];
    uint64_t v40 = type metadata accessor for ContextProtoConfidence(0);
    uint64_t v516 = a3;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = sub_253462A5C(&qword_269CDF900);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      uint64_t v42 = *(int *)(v40 + 24);
      uint64_t v43 = &v38[v42];
      unint64_t v44 = &v39[v42];
      uint64_t v45 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
    }
    uint64_t v517 = v16;
    uint64_t v519 = v17;
    uint64_t v46 = v17[7];
    uint64_t v47 = (uint64_t)v512;
    uint64_t v48 = &v512[v46];
    uint64_t v49 = &v16[v46];
    uint64_t v50 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, (uint64_t)v50))
    {
      uint64_t v51 = sub_253462A5C(&qword_269CDF8F0);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      *uint64_t v48 = *v49;
      *(_OWORD *)(v48 + 1) = *(_OWORD *)(v49 + 1);
      *(_OWORD *)(v48 + 3) = *(_OWORD *)(v49 + 3);
      uint64_t v52 = v50[7];
      uint64_t v53 = (char *)v48 + v52;
      uint64_t v54 = (char *)v49 + v52;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49 + v52, 1, v40))
      {
        uint64_t v55 = sub_253462A5C(&qword_269CDF900);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        v53[4] = v54[4];
        uint64_t v83 = *(int *)(v40 + 24);
        uint64_t v84 = a2;
        uint64_t v85 = &v53[v83];
        uint64_t v86 = &v54[v83];
        uint64_t v87 = sub_253B07160();
        uint64_t v88 = v85;
        a2 = v84;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v87 - 8) + 32))(v88, v86, v87);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v40);
      }
      uint64_t v89 = v50[8];
      long long v90 = (_DWORD *)((char *)v48 + v89);
      uint64_t v91 = (_DWORD *)((char *)v49 + v89);
      uint64_t v92 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v92))
      {
        uint64_t v93 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        *long long v90 = *v91;
        *((unsigned char *)v90 + 4) = *((unsigned char *)v91 + 4);
        v90[2] = v91[2];
        *((unsigned char *)v90 + 12) = *((unsigned char *)v91 + 12);
        v90[4] = v91[4];
        *((unsigned char *)v90 + 20) = *((unsigned char *)v91 + 20);
        *((unsigned char *)v90 + 28) = *((unsigned char *)v91 + 28);
        v90[6] = v91[6];
        uint64_t v94 = *(int *)(v92 + 32);
        uint64_t v95 = a2;
        uint64_t v96 = (char *)v90 + v94;
        uint64_t v97 = (char *)v91 + v94;
        uint64_t v98 = sub_253B07160();
        uint64_t v99 = v96;
        a2 = v95;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v99, v97, v98);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v90, 0, 1, v92);
      }
      uint64_t v100 = v50[9];
      uint64_t v101 = (char *)v48 + v100;
      uint64_t v102 = (char *)v49 + v100;
      *(void *)uint64_t v101 = *(void *)v102;
      v101[8] = v102[8];
      *(_OWORD *)((char *)v48 + v50[10]) = *(_OWORD *)((char *)v49 + v50[10]);
      *((unsigned char *)v48 + v50[11]) = *((unsigned char *)v49 + v50[11]);
      *((unsigned char *)v48 + v50[12]) = *((unsigned char *)v49 + v50[12]);
      uint64_t v103 = v50[13];
      uint64_t v104 = (_DWORD *)((char *)v48 + v103);
      uint64_t v105 = (_DWORD *)((char *)v49 + v103);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49 + v103, 1, v92))
      {
        uint64_t v106 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        *uint64_t v104 = *v105;
        *((unsigned char *)v104 + 4) = *((unsigned char *)v105 + 4);
        v104[2] = v105[2];
        *((unsigned char *)v104 + 12) = *((unsigned char *)v105 + 12);
        v104[4] = v105[4];
        *((unsigned char *)v104 + 20) = *((unsigned char *)v105 + 20);
        *((unsigned char *)v104 + 28) = *((unsigned char *)v105 + 28);
        v104[6] = v105[6];
        uint64_t v107 = *(int *)(v92 + 32);
        uint64_t v108 = a2;
        uint64_t v109 = (char *)v104 + v107;
        uint64_t v110 = (char *)v105 + v107;
        uint64_t v111 = sub_253B07160();
        uint64_t v112 = v109;
        a2 = v108;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v112, v110, v111);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v92);
      }
      *((unsigned char *)v48 + v50[14]) = *((unsigned char *)v49 + v50[14]);
      uint64_t v113 = v50[15];
      int v114 = (_OWORD *)((char *)v48 + v113);
      uint64_t v115 = (_OWORD *)((char *)v49 + v113);
      uint64_t v116 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v115, 1, v116))
      {
        uint64_t v117 = sub_253462A5C(&qword_269CDF920);
        memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
      }
      else
      {
        long long v118 = v115[1];
        *int v114 = *v115;
        v114[1] = v118;
        uint64_t v119 = *(int *)(v116 + 24);
        uint64_t v120 = a2;
        uint64_t v121 = (char *)v114 + v119;
        uint64_t v122 = (char *)v115 + v119;
        uint64_t v123 = sub_253B07160();
        uint64_t v124 = v121;
        a2 = v120;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v124, v122, v123);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v114, 0, 1, v116);
      }
      uint64_t v125 = v50[16];
      uint64_t v126 = (char *)v48 + v125;
      uint64_t v127 = (char *)v49 + v125;
      uint64_t v128 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, (uint64_t)v50);
      uint64_t v47 = (uint64_t)v512;
    }
    uint64_t v129 = v517;
    uint64_t v130 = v519[8];
    uint64_t v131 = (void *)(v47 + v130);
    unint64_t v132 = &v517[v130];
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v517[v130], 1, v23))
    {
      uint64_t v133 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v131, v132, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v131, 0, 1, v23);
    }
    uint64_t v134 = v519[9];
    uint64_t v135 = (_OWORD *)(v47 + v134);
    uint64_t v136 = &v517[v134];
    uint64_t v137 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v137))
    {
      uint64_t v138 = sub_253462A5C(&qword_269CDF8E0);
      memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
LABEL_144:
      *(_OWORD *)(v47 + v519[10]) = *(_OWORD *)&v129[v519[10]];
      uint64_t v343 = v519[11];
      uint64_t v344 = v47 + v343;
      v345 = &v129[v343];
      uint64_t v346 = sub_253B07160();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v47, 0, 1, (uint64_t)v519);
LABEL_183:
      a3 = v516;
      goto LABEL_184;
    }
    uint64_t v139 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v139))
    {
      uint64_t v140 = sub_253462A5C(&qword_269CDF958);
      memcpy(v135, v136, *(void *)(*(void *)(v140 - 8) + 64));
LABEL_143:
      uint64_t v339 = *(int *)(v137 + 20);
      size_t v340 = (char *)v135 + v339;
      v341 = (char *)v136 + v339;
      uint64_t v342 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 32))(v340, v341, v342);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v137);
      uint64_t v129 = v517;
      goto LABEL_144;
    }
    int v141 = swift_getEnumCaseMultiPayload();
    if (v141 == 2)
    {
      long long v201 = v136[1];
      _OWORD *v135 = *v136;
      v135[1] = v201;
      v135[2] = v136[2];
      uint64_t v143 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
    }
    else
    {
      if (v141 != 1)
      {
        long long v205 = v136[1];
        _OWORD *v135 = *v136;
        v135[1] = v205;
        long long v206 = v136[3];
        v135[2] = v136[2];
        v135[3] = v206;
        v135[4] = v136[4];
        *((_DWORD *)v135 + 20) = *((_DWORD *)v136 + 20);
        *((unsigned char *)v135 + 84) = *((unsigned char *)v136 + 84);
        v207 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v208 = v207[15];
        uint64_t v209 = (_WORD *)((char *)v135 + v208);
        v210 = (_WORD *)((char *)v136 + v208);
        uint64_t v211 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v210, 1, v211))
        {
          uint64_t v212 = sub_253462A5C(&qword_269CDF998);
          memcpy(v209, v210, *(void *)(*(void *)(v212 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v209 = *(_OWORD *)v210;
          v209[8] = v210[8];
          uint64_t v293 = *(int *)(v211 + 28);
          uint64_t v496 = a2;
          uint64_t v294 = (char *)v209 + v293;
          v295 = (char *)v210 + v293;
          uint64_t v296 = sub_253B07160();
          v297 = v294;
          a2 = v496;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v297, v295, v296);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v209, 0, 1, v211);
        }
        *(_OWORD *)((char *)v135 + v207[16]) = *(_OWORD *)((char *)v136 + v207[16]);
        *(_OWORD *)((char *)v135 + v207[17]) = *(_OWORD *)((char *)v136 + v207[17]);
        *(_OWORD *)((char *)v135 + v207[18]) = *(_OWORD *)((char *)v136 + v207[18]);
        uint64_t v298 = v207[19];
        int v299 = (_DWORD *)((char *)v135 + v298);
        int v300 = (_DWORD *)((char *)v136 + v298);
        uint64_t v301 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v300, 1, v301))
        {
          uint64_t v302 = sub_253462A5C(&qword_269CDF988);
          memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
        }
        else
        {
          *int v299 = *v300;
          *((unsigned char *)v299 + 4) = *((unsigned char *)v300 + 4);
          *(_OWORD *)(v299 + 2) = *(_OWORD *)(v300 + 2);
          v299[6] = v300[6];
          *((unsigned char *)v299 + 28) = *((unsigned char *)v300 + 28);
          v299[8] = v300[8];
          *((unsigned char *)v299 + 36) = *((unsigned char *)v300 + 36);
          uint64_t v315 = *(int *)(v301 + 32);
          uint64_t v497 = v301;
          int v316 = a2;
          size_t v317 = (char *)v299 + v315;
          v318 = (char *)v300 + v315;
          uint64_t v319 = sub_253B07160();
          int v320 = v317;
          a2 = v316;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v320, v318, v319);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v299, 0, 1, v497);
        }
        uint64_t v321 = v207[20];
        int v322 = (char *)v135 + v321;
        uint64_t v323 = (char *)v136 + v321;
        *(void *)int v322 = *(void *)v323;
        v322[8] = v323[8];
        *(_OWORD *)((char *)v135 + v207[21]) = *(_OWORD *)((char *)v136 + v207[21]);
        *((unsigned char *)v135 + v207[22]) = *((unsigned char *)v136 + v207[22]);
        *((unsigned char *)v135 + v207[23]) = *((unsigned char *)v136 + v207[23]);
        uint64_t v324 = v207[24];
        uint64_t v325 = (void *)((char *)v135 + v324);
        v326 = (void *)((char *)v136 + v324);
        uint64_t v327 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v326, 1, v327))
        {
          uint64_t v328 = sub_253462A5C(&qword_269CDF978);
          memcpy(v325, v326, *(void *)(*(void *)(v328 - 8) + 64));
        }
        else
        {
          *uint64_t v325 = *v326;
          *(_OWORD *)(v325 + 1) = *(_OWORD *)(v326 + 1);
          *(_OWORD *)(v325 + 3) = *(_OWORD *)(v326 + 3);
          *(_OWORD *)(v325 + 5) = *(_OWORD *)(v326 + 5);
          *(_OWORD *)(v325 + 7) = *(_OWORD *)(v326 + 7);
          *(_OWORD *)(v325 + 9) = *(_OWORD *)(v326 + 9);
          uint64_t v329 = *(int *)(v327 + 40);
          uint64_t v498 = v327;
          int v330 = a2;
          uint64_t v331 = (char *)v325 + v329;
          v332 = (char *)v326 + v329;
          uint64_t v333 = sub_253B07160();
          uint64_t v334 = v331;
          a2 = v330;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 32))(v334, v332, v333);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v325, 0, 1, v498);
        }
        *((unsigned char *)v135 + v207[25]) = *((unsigned char *)v136 + v207[25]);
        *((unsigned char *)v135 + v207[26]) = *((unsigned char *)v136 + v207[26]);
        uint64_t v335 = v207[27];
        uint64_t v336 = (char *)v135 + v335;
        v337 = (char *)v136 + v335;
        uint64_t v338 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 32))(v336, v337, v338);
        uint64_t v47 = (uint64_t)v512;
        goto LABEL_142;
      }
      _OWORD *v135 = *v136;
      *((unsigned char *)v135 + 16) = *((unsigned char *)v136 + 16);
      *((void *)v135 + 3) = *((void *)v136 + 3);
      long long v142 = v136[3];
      v135[2] = v136[2];
      v135[3] = v142;
      v135[4] = v136[4];
      uint64_t v143 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
    }
    v202 = (char *)v135 + v143;
    v203 = (char *)v136 + v143;
    uint64_t v204 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
LABEL_142:
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v139);
    goto LABEL_143;
  }
LABEL_13:
  uint64_t v25 = sub_253462A5C(&qword_269CE21A0);
  memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_184:
  uint64_t v465 = *(int *)(a3 + 24);
  v466 = (char *)a1 + v465;
  uint64_t v467 = (char *)a2 + v465;
  uint64_t v468 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v468 - 8) + 40))(v466, v467, v468);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRetrievedContextStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538A6378);
}

uint64_t sub_2538A6378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538A7E84(a1, a2, a3, &qword_26B249528, &qword_269CE21A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRetrievedContextStatement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538A63A0);
}

uint64_t sub_2538A63A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2538A7F3C(a1, a2, a3, a4, &qword_26B249528, &qword_269CE21A0);
}

void sub_2538A63B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_26B249528);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      uint64_t v11 = *(int *)(v7 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    int v18 = (uint64_t *)((char *)a2 + v16);
    int v19 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, (uint64_t)v19))
    {
      uint64_t v20 = sub_253462A5C(&qword_269CE21B8);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v21;
      uint64_t v22 = v19[5];
      uint64_t v23 = (char *)v17 + v22;
      uint64_t v24 = (char *)v18 + v22;
      uint64_t v25 = sub_253B08E60();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_253462A5C(&qword_269CDFA30);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
      }
      uint64_t v27 = v19[6];
      uint64_t v28 = (char *)v17 + v27;
      uint64_t v29 = (char *)v18 + v27;
      uint64_t v30 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v32 = v19[7];
      uint64_t v33 = (char *)v17 + v32;
      uint64_t v34 = (char *)v18 + v32;
      uint64_t v35 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, (uint64_t)v19);
    }
    uint64_t v36 = *(int *)(a3 + 24);
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[5];
    uint64_t v10 = sub_253B08E60();
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v7 + v8[6];
    uint64_t v12 = sub_253B08E50();
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v7 + v8[7];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = a1 + *(int *)(a2 + 24);
  uint64_t v16 = sub_253B07160();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  return v17(v15, v16);
}

void *initializeWithCopy for TranscriptProtoDynamicEnumerationEntityStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(v6 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_253462A5C(&qword_269CE21B8);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v19;
    uint64_t v20 = v17[5];
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = (char *)v16 + v20;
    uint64_t v23 = sub_253B08E60();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_253462A5C(&qword_269CDFA30);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v25 = v17[6];
    uint64_t v26 = (char *)v15 + v25;
    uint64_t v27 = (char *)v16 + v25;
    uint64_t v28 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v30 = v17[7];
    uint64_t v31 = (char *)v15 + v30;
    uint64_t v32 = (char *)v16 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

void *assignWithCopy for TranscriptProtoDynamicEnumerationEntityStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(v6 + 24);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, (uint64_t)v18);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, (uint64_t)v18);
  if (!v19)
  {
    if (v20)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v31 = v18[5];
    uint64_t v32 = (char *)v16 + v31;
    uint64_t v33 = (char *)v17 + v31;
    uint64_t v34 = sub_253B08E60();
    int v35 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v34);
    int v36 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v46 = *(void *)(v34 - 8);
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v32, v33, v34);
LABEL_26:
        uint64_t v48 = v18[6];
        uint64_t v49 = (char *)v16 + v48;
        uint64_t v50 = (char *)v17 + v48;
        uint64_t v51 = sub_253B08E50();
        int v52 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v51);
        int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51);
        if (v52)
        {
          if (!v53)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
LABEL_32:
            uint64_t v56 = v18[7];
            uint64_t v57 = (char *)v16 + v56;
            uint64_t v58 = (char *)v17 + v56;
            uint64_t v59 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v54 = *(void *)(v51 - 8);
          if (!v53)
          {
            (*(void (**)(char *, char *, uint64_t))(v54 + 24))(v49, v50, v51);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v51);
        }
        uint64_t v55 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v34);
    }
    uint64_t v47 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v32, v33, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_26;
  }
  if (v20)
  {
LABEL_13:
    uint64_t v26 = sub_253462A5C(&qword_269CE21B8);
    memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_33;
  }
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  uint64_t v21 = v18[5];
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = sub_253B08E60();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v37 = v18[6];
  uint64_t v38 = (char *)v16 + v37;
  uint64_t v39 = (char *)v17 + v37;
  uint64_t v40 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v42 = v18[7];
  uint64_t v43 = (char *)v16 + v42;
  unint64_t v44 = (char *)v17 + v42;
  uint64_t v45 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
LABEL_33:
  uint64_t v60 = *(int *)(a3 + 24);
  uint64_t v61 = (char *)a1 + v60;
  int v62 = (char *)a2 + v60;
  uint64_t v63 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 24))(v61, v62, v63);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoDynamicEnumerationEntityStatement(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_253462A5C(&qword_269CE21B8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    _OWORD *v13 = *v14;
    uint64_t v17 = v15[5];
    uint64_t v18 = (char *)v13 + v17;
    int v19 = (char *)v14 + v17;
    uint64_t v20 = sub_253B08E60();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_253462A5C(&qword_269CDFA30);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v22 = v15[6];
    uint64_t v23 = (char *)v13 + v22;
    uint64_t v24 = (char *)v14 + v22;
    uint64_t v25 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v27 = v15[7];
    uint64_t v28 = (char *)v13 + v27;
    uint64_t v29 = (char *)v14 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

void *assignWithTake for TranscriptProtoDynamicEnumerationEntityStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v26 = a2[2];
  a1[1] = a2[1];
  a1[2] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(v6 + 24);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (v19)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t v31 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v31;
    swift_bridgeObjectRelease();
    uint64_t v32 = v17[5];
    uint64_t v33 = (char *)v15 + v32;
    uint64_t v34 = (char *)v16 + v32;
    uint64_t v35 = sub_253B08E60();
    int v36 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v35);
    int v37 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v47 = *(void *)(v35 - 8);
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v33, v34, v35);
LABEL_26:
        uint64_t v49 = v17[6];
        uint64_t v50 = (char *)v15 + v49;
        uint64_t v51 = (char *)v16 + v49;
        uint64_t v52 = sub_253B08E50();
        int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v52);
        int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v52);
LABEL_32:
            uint64_t v57 = v17[7];
            uint64_t v58 = (char *)v15 + v57;
            uint64_t v59 = (char *)v16 + v57;
            uint64_t v60 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v55 = *(void *)(v52 - 8);
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v50, v51, v52);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v52);
        }
        uint64_t v56 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v50, v51, *(void *)(*(void *)(v56 - 8) + 64));
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v35);
    }
    uint64_t v48 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v33, v34, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_26;
  }
  if (v19)
  {
LABEL_13:
    uint64_t v25 = sub_253462A5C(&qword_269CE21B8);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_33;
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  uint64_t v20 = v17[5];
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)v16 + v20;
  uint64_t v23 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v38 = v17[6];
  uint64_t v39 = (char *)v15 + v38;
  uint64_t v40 = (char *)v16 + v38;
  uint64_t v41 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
  {
    uint64_t v42 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
  }
  uint64_t v43 = v17[7];
  unint64_t v44 = (char *)v15 + v43;
  uint64_t v45 = (char *)v16 + v43;
  uint64_t v46 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
LABEL_33:
  uint64_t v61 = *(int *)(a3 + 24);
  int v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  uint64_t v64 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538A7E70);
}

uint64_t sub_2538A7E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538A7E84(a1, a2, a3, &qword_26B249528, &qword_269CE21B8);
}

uint64_t sub_2538A7E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  sub_253944F84(a1, a2, a3, a4);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == v5)
  {
    uint64_t v9 = sub_253945320();
  }
  else
  {
    sub_253462A5C(a5);
    sub_2535782A8();
    if (*(_DWORD *)(v11 + 84) == v5)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253B07160();
      sub_2535E2560();
    }
    uint64_t v9 = v6 + v12;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, v5, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538A7F28);
}

uint64_t sub_2538A7F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2538A7F3C(a1, a2, a3, a4, &qword_26B249528, &qword_269CE21B8);
}

uint64_t sub_2538A7F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  sub_253944B60(a1, a2, a3, a4, a5);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == v6)
  {
    sub_253944FD8();
  }
  else
  {
    sub_253462A5C(a6);
    sub_2535782A8();
    if (*(_DWORD *)(v9 + 84) == v6)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, v11, v12, v13);
}

void sub_2538A7FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_2538A8010(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_253944F18(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_253945F20();
    if (v6 <= 0x3F)
    {
      sub_253945F80();
      if (v7 <= 0x3F)
      {
        sub_2535E2794();
        sub_2535E2578();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSafetyModeRelease(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CA8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSafetyModeRelease(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C50);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSafetyModeException(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538A8130);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSafetyModeException(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538A8148);
}

uint64_t sub_2538A814C()
{
  return sub_25393E9BC();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538A816C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538A8184);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (unsigned char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, (uint64_t)v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBE0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v14 = v11[5];
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      uint64_t v17 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v19 = v11[6];
      uint64_t v20 = &v9[v19];
      uint64_t v21 = &v10[v19];
      uint64_t v22 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_253462A5C(&qword_269CE1CB0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v20 = *(void *)v21;
        v20[4] = v21[4];
        uint64_t v24 = *(int *)(v22 + 20);
        uint64_t v25 = (char *)v20 + v24;
        uint64_t v26 = (char *)v21 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
      }
      uint64_t v28 = v11[7];
      uint64_t v29 = &v9[v28];
      uint64_t v30 = &v10[v28];
      uint64_t v31 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_26B249528);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
        uint64_t v33 = v30[2];
        v29[1] = v30[1];
        v29[2] = v33;
        uint64_t v34 = *(int *)(v31 + 24);
        uint64_t v46 = (char *)v30 + v34;
        uint64_t v47 = (char *)v29 + v34;
        uint64_t v35 = sub_253B07160();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v47, v46, v35);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v36 = v11[8];
      int v37 = &v9[v36];
      uint64_t v38 = &v10[v36];
      uint64_t v39 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
    }
    uint64_t v40 = *(int *)(a3 + 28);
    uint64_t v41 = (char *)v4 + v40;
    uint64_t v42 = (uint64_t)a2 + v40;
    uint64_t v43 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoParameter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  int v5 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, (uint64_t)v5))
  {
    uint64_t v6 = v4 + v5[5];
    uint64_t v7 = sub_253B08E50();
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    uint64_t v8 = v4 + v5[6];
    uint64_t v9 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
    {
      uint64_t v10 = v8 + *(int *)(v9 + 20);
      uint64_t v11 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v4 + v5[7];
    uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v12 + *(int *)(v13 + 24);
      uint64_t v15 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    }
    uint64_t v16 = v4 + v5[8];
    uint64_t v17 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = a1 + *(int *)(a2 + 28);
  uint64_t v19 = sub_253B07160();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
  return v20(v18, v19);
}

uint64_t initializeWithCopy for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, (uint64_t)v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = v10[5];
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v17 = v10[6];
    uint64_t v18 = &v8[v17];
    uint64_t v19 = &v9[v17];
    uint64_t v20 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_253462A5C(&qword_269CE1CB0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      v18[4] = v19[4];
      uint64_t v22 = *(int *)(v20 + 20);
      uint64_t v23 = (char *)v18 + v22;
      uint64_t v24 = (char *)v19 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v26 = v10[7];
    uint64_t v27 = &v8[v26];
    uint64_t v28 = &v9[v26];
    uint64_t v29 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
    {
      uint64_t v30 = sub_253462A5C(&qword_26B249528);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
      uint64_t v31 = v28[2];
      v27[1] = v28[1];
      v27[2] = v31;
      uint64_t v32 = *(int *)(v29 + 24);
      unint64_t v44 = (char *)v28 + v32;
      uint64_t v45 = (char *)v27 + v32;
      uint64_t v33 = sub_253B07160();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v45, v44, v33);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
    }
    uint64_t v34 = v10[8];
    uint64_t v35 = &v8[v34];
    uint64_t v36 = &v9[v34];
    uint64_t v37 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  uint64_t v38 = *(int *)(a3 + 28);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (v12)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    *uint64_t v8 = *v9;
    uint64_t v19 = v10[5];
    uint64_t v20 = &v8[v19];
    uint64_t v21 = &v9[v19];
    uint64_t v22 = sub_253B08E50();
    int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v22);
    int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v46 = *(void *)(v22 - 8);
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 24))(v20, v21, v22);
LABEL_22:
        uint64_t v48 = v10[6];
        uint64_t v49 = &v8[v48];
        uint64_t v50 = &v9[v48];
        uint64_t v51 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
        int v52 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v51);
        int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51);
        if (v52)
        {
          if (!v53)
          {
            uint64_t v54 = *(void *)v50;
            *((_WORD *)v49 + 4) = *((_WORD *)v50 + 4);
            *(void *)uint64_t v49 = v54;
            uint64_t v55 = *(int *)(v51 + 20);
            uint64_t v56 = &v49[v55];
            uint64_t v57 = &v50[v55];
            uint64_t v58 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v53)
          {
            uint64_t v78 = *(void *)v50;
            *((_WORD *)v49 + 4) = *((_WORD *)v50 + 4);
            *(void *)uint64_t v49 = v78;
            uint64_t v79 = *(int *)(v51 + 20);
            uint64_t v80 = &v49[v79];
            uint64_t v81 = &v50[v79];
            uint64_t v82 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
LABEL_28:
            uint64_t v60 = v10[7];
            uint64_t v61 = &v8[v60];
            int v62 = &v9[v60];
            uint64_t v63 = type metadata accessor for TranscriptProtoStatementID(0);
            int v64 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v63);
            int v65 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63);
            if (v64)
            {
              if (!v65)
              {
                *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
                *((void *)v61 + 1) = *((void *)v62 + 1);
                *((void *)v61 + 2) = *((void *)v62 + 2);
                uint64_t v66 = *(int *)(v63 + 24);
                long long v90 = &v62[v66];
                uint64_t v92 = &v61[v66];
                uint64_t v67 = sub_253B07160();
                uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
                swift_bridgeObjectRetain();
                v88(v92, v90, v67);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v63);
LABEL_34:
                uint64_t v69 = v10[8];
                uint64_t v70 = &v8[v69];
                uint64_t v71 = &v9[v69];
                uint64_t v72 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
                goto LABEL_35;
              }
            }
            else
            {
              if (!v65)
              {
                *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
                *((void *)v61 + 1) = *((void *)v62 + 1);
                *((void *)v61 + 2) = *((void *)v62 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v83 = *(int *)(v63 + 24);
                uint64_t v84 = &v61[v83];
                uint64_t v85 = &v62[v83];
                uint64_t v86 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
                goto LABEL_34;
              }
              sub_2536FA73C();
            }
            uint64_t v68 = sub_253462A5C(&qword_26B249528);
            memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
            goto LABEL_34;
          }
          sub_2536FA73C();
        }
        uint64_t v59 = sub_253462A5C(&qword_269CE1CB0);
        memcpy(v49, v50, *(void *)(*(void *)(v59 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v20, v22);
    }
    uint64_t v47 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v20, v21, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_22;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v18 = sub_253462A5C(&qword_269CDCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_35;
  }
  *uint64_t v8 = *v9;
  uint64_t v13 = v10[5];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v25 = v10[6];
  uint64_t v26 = &v8[v25];
  uint64_t v27 = &v9[v25];
  uint64_t v28 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_253462A5C(&qword_269CE1CB0);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = *(void *)v27;
    v26[4] = v27[4];
    *(void *)uint64_t v26 = v30;
    uint64_t v31 = *(int *)(v28 + 20);
    uint64_t v32 = (char *)v26 + v31;
    uint64_t v33 = (char *)v27 + v31;
    uint64_t v34 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v93 = a3;
  uint64_t v35 = v10[7];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  uint64_t v38 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = sub_253462A5C(&qword_26B249528);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[1] = v37[1];
    v36[2] = v37[2];
    uint64_t v40 = *(int *)(v38 + 24);
    uint64_t v89 = (char *)v37 + v40;
    uint64_t v91 = (char *)v36 + v40;
    uint64_t v41 = sub_253B07160();
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v87(v91, v89, v41);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
  }
  uint64_t v42 = v10[8];
  uint64_t v43 = &v8[v42];
  unint64_t v44 = &v9[v42];
  uint64_t v45 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
  a3 = v93;
LABEL_35:
  uint64_t v73 = *(int *)(a3 + 28);
  uint64_t v74 = a1 + v73;
  uint64_t v75 = a2 + v73;
  uint64_t v76 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 24))(v74, v75, v76);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBE0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    unsigned char *v7 = *v8;
    uint64_t v11 = v9[5];
    int v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v16 = v9[6];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    uint64_t v19 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_253462A5C(&qword_269CE1CB0);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v17 = *(void *)v18;
      v17[4] = v18[4];
      uint64_t v21 = *(int *)(v19 + 20);
      uint64_t v22 = (char *)v17 + v21;
      int v23 = (char *)v18 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v25 = v9[7];
    uint64_t v26 = &v7[v25];
    uint64_t v27 = &v8[v25];
    uint64_t v28 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_253462A5C(&qword_26B249528);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      _DWORD *v26 = *v27;
      *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
      uint64_t v30 = *(int *)(v28 + 24);
      uint64_t v31 = (char *)v26 + v30;
      uint64_t v32 = (char *)v27 + v30;
      uint64_t v33 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v34 = v9[8];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    uint64_t v37 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  uint64_t v38 = *(int *)(a3 + 28);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (v12)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    *uint64_t v8 = *v9;
    uint64_t v19 = v10[5];
    uint64_t v20 = &v8[v19];
    uint64_t v21 = &v9[v19];
    uint64_t v22 = sub_253B08E50();
    int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v22);
    int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v47 = *(void *)(v22 - 8);
      if (!v24)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v20, v21, v22);
LABEL_22:
        uint64_t v49 = v10[6];
        uint64_t v50 = &v8[v49];
        uint64_t v51 = &v9[v49];
        uint64_t v52 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
        int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v52);
        int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52);
        if (v53)
        {
          if (!v54)
          {
            *(void *)uint64_t v50 = *(void *)v51;
            *((_WORD *)v50 + 4) = *((_WORD *)v51 + 4);
            uint64_t v55 = *(int *)(v52 + 20);
            uint64_t v56 = &v50[v55];
            uint64_t v57 = &v51[v55];
            uint64_t v58 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v52);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            *(void *)uint64_t v50 = *(void *)v51;
            *((_WORD *)v50 + 4) = *((_WORD *)v51 + 4);
            uint64_t v80 = *(int *)(v52 + 20);
            uint64_t v81 = &v50[v80];
            uint64_t v82 = &v51[v80];
            uint64_t v83 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
LABEL_28:
            uint64_t v60 = v10[7];
            uint64_t v61 = &v8[v60];
            int v62 = &v9[v60];
            uint64_t v63 = type metadata accessor for TranscriptProtoStatementID(0);
            int v64 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v63);
            int v65 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63);
            if (v64)
            {
              if (!v65)
              {
                *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
                *(_OWORD *)(v61 + 8) = *(_OWORD *)(v62 + 8);
                uint64_t v66 = *(int *)(v63 + 24);
                uint64_t v67 = &v61[v66];
                uint64_t v68 = &v62[v66];
                uint64_t v69 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v63);
LABEL_34:
                uint64_t v71 = v10[8];
                uint64_t v72 = &v8[v71];
                uint64_t v73 = &v9[v71];
                uint64_t v74 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
                goto LABEL_35;
              }
            }
            else
            {
              if (!v65)
              {
                *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
                uint64_t v84 = *((void *)v62 + 2);
                *((void *)v61 + 1) = *((void *)v62 + 1);
                *((void *)v61 + 2) = v84;
                swift_bridgeObjectRelease();
                uint64_t v85 = *(int *)(v63 + 24);
                uint64_t v86 = &v61[v85];
                uint64_t v87 = &v62[v85];
                uint64_t v88 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
                goto LABEL_34;
              }
              sub_2536FA73C();
            }
            uint64_t v70 = sub_253462A5C(&qword_26B249528);
            memcpy(v61, v62, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_34;
          }
          sub_2536FA73C();
        }
        uint64_t v59 = sub_253462A5C(&qword_269CE1CB0);
        memcpy(v50, v51, *(void *)(*(void *)(v59 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v20, v22);
    }
    uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v20, v21, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_22;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v18 = sub_253462A5C(&qword_269CDCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_35;
  }
  *uint64_t v8 = *v9;
  uint64_t v13 = v10[5];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v25 = v10[6];
  uint64_t v26 = &v8[v25];
  uint64_t v27 = &v9[v25];
  uint64_t v28 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_253462A5C(&qword_269CE1CB0);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v26 = *(void *)v27;
    v26[4] = v27[4];
    uint64_t v30 = *(int *)(v28 + 20);
    uint64_t v31 = (char *)v26 + v30;
    uint64_t v32 = (char *)v27 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v34 = v10[7];
  uint64_t v35 = &v8[v34];
  uint64_t v36 = &v9[v34];
  uint64_t v37 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_253462A5C(&qword_26B249528);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    *uint64_t v35 = *v36;
    *(_OWORD *)(v35 + 2) = *(_OWORD *)(v36 + 2);
    uint64_t v39 = *(int *)(v37 + 24);
    uint64_t v40 = (char *)v35 + v39;
    uint64_t v41 = (char *)v36 + v39;
    uint64_t v42 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v43 = v10[8];
  unint64_t v44 = &v8[v43];
  uint64_t v45 = &v9[v43];
  uint64_t v46 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
LABEL_35:
  uint64_t v75 = *(int *)(a3 + 28);
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  uint64_t v78 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538A9FCC);
}

uint64_t sub_2538A9FCC()
{
  return sub_253942490();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538A9FEC);
}

void sub_2538A9FEC()
{
}

void sub_2538A9FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientInitiatedClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AA03C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientInitiatedClientAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AA054);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CAC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C54);
}

uint64_t type metadata accessor for TranscriptProtoSystemQuery(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE4A58);
}

unsigned char *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionUserAction(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2200);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_14:
      uint64_t v17 = *(int *)(a3 + 20);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      return a1;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v12 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 5:
        *a1 = *a2;
        uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        break;
      case 1:
        uint64_t v11 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = (unsigned char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionUserAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6)
    {
      uint64_t v6 = sub_253B07160();
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      goto LABEL_9;
    }
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload != 1) {
        goto LABEL_9;
      }
      uint64_t v6 = sub_253B08E50();
      goto LABEL_7;
    }
    uint64_t v7 = a1 + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
    uint64_t v8 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
LABEL_9:
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

unsigned char *initializeWithCopy for TranscriptProtoSystemPromptResolutionUserAction(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v10 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 5:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        break;
      case 1:
        uint64_t v9 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE2200);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_12:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoSystemPromptResolutionUserAction(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          uint64_t v14 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          break;
        case 5:
          *a1 = *a2;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v16 = &a1[v15];
          uint64_t v17 = &a2[v15];
          uint64_t v18 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
          break;
        case 1:
          uint64_t v10 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_2536FA73C();
      int v12 = swift_getEnumCaseMultiPayload();
      switch(v12)
      {
        case 6:
          uint64_t v19 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
          break;
        case 5:
          *a1 = *a2;
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          uint64_t v23 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          break;
        case 1:
          uint64_t v13 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          break;
        default:
          size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_2536FA73C();
  }
  size_t v11 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2200) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v11);
LABEL_24:
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoSystemPromptResolutionUserAction(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v10 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        break;
      case 5:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        int v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      case 1:
        uint64_t v9 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE2200);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_12:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoSystemPromptResolutionUserAction(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          uint64_t v14 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          break;
        case 5:
          *a1 = *a2;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v16 = &a1[v15];
          uint64_t v17 = &a2[v15];
          uint64_t v18 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
          break;
        case 1:
          uint64_t v10 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_2536FA73C();
      int v12 = swift_getEnumCaseMultiPayload();
      switch(v12)
      {
        case 6:
          uint64_t v19 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
          break;
        case 5:
          *a1 = *a2;
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          uint64_t v23 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
          break;
        case 1:
          uint64_t v13 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          break;
        default:
          size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_2536FA73C();
  }
  size_t v11 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2200) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v11);
LABEL_24:
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionUserAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AB080);
}

uint64_t sub_2538AB080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2200);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionUserAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AB0A0);
}

uint64_t sub_2538AB0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2200);
}

void sub_2538AB0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionUserActionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v10 = sub_253B07160();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 5:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        int v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        break;
      case 1:
        uint64_t v8 = sub_253B08E50();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionUserActionEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 6) {
    goto LABEL_6;
  }
  if (result == 5)
  {
    a1 += *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
LABEL_6:
    uint64_t v3 = sub_253B07160();
    goto LABEL_7;
  }
  if (result != 1) {
    return result;
  }
  uint64_t v3 = sub_253B08E50();
LABEL_7:
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

unsigned char *initializeWithCopy for TranscriptProtoSystemPromptResolutionUserActionEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      uint64_t v8 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      break;
    case 5:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      break;
    case 1:
      uint64_t v7 = sub_253B08E50();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoSystemPromptResolutionUserActionEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v8 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 5:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        break;
      case 1:
        uint64_t v7 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoSystemPromptResolutionUserActionEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      uint64_t v8 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      break;
    case 5:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      break;
    case 1:
      uint64_t v7 = sub_253B08E50();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoSystemPromptResolutionUserActionEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v8 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        break;
      case 5:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        break;
      case 1:
        uint64_t v7 = sub_253B08E50();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2538AB96C()
{
  uint64_t result = sub_253B08E50();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_253B07160();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionActionCancellation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CB0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionActionCancellation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C58);
}

unsigned char *_s30IntelligenceFlowPlannerSupport67TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceVwCP_0(unsigned char *a1)
{
  sub_2535782A8();
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v2);
  }
  else
  {
    *a1 = *(unsigned char *)v2;
    sub_25394540C();
    sub_25346CAF4();
    sub_2534B3428();
    v4();
  }
  return a1;
}

unsigned char *_s30IntelligenceFlowPlannerSupport67TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceVwcp_0(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  sub_253944340();
  sub_25346CAF4();
  sub_2534B3428();
  v3();
  return a1;
}

unsigned char *_s30IntelligenceFlowPlannerSupport67TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceVwtk_0(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  sub_253944340();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionRequirementResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538ABC00);
}

uint64_t sub_2538ABC04(unsigned __int8 *a1, int a2)
{
  if (a2 == 254)
  {
    unsigned int v3 = *a1;
    BOOL v4 = v3 >= 2;
    int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
    if (v4) {
      return (v5 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v7 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionRequirementResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538ABC90);
}

void sub_2538ABC94()
{
  sub_2534DA0C4();
  if (v3 == 254)
  {
    *unint64_t v1 = v0 + 1;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwCP_0()
{
  sub_2535B3C98();
  sub_2535782A8();
  int v1 = *(_DWORD *)(v0 + 80);
  *int v3 = *v2;
  if ((v1 & 0x20000) != 0)
  {
    sub_253945A4C();
  }
  else
  {
    sub_25394503C();
    sub_253946028();
    if (sub_2539445C8())
    {
      uint64_t v4 = sub_253462A5C(&qword_269CDCBC8);
      uint64_t v5 = sub_25346CB4C(v4);
      sub_253944A48(v5, v7, *(void *)(v6 + 64));
    }
    else
    {
      sub_25347B88C();
      sub_2534B3428();
      v8();
      sub_2539443D0();
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v9 = sub_25354710C();
    v10(v9);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwxx_0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_253945EB4();
  if (!sub_2539443F0(v0))
  {
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  }
  sub_253944B84();
  sub_25346CAF4();
  uint64_t v3 = sub_2539446BC();
  return v4(v3);
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwcp_0()
{
  sub_2535B3C98();
  *uint64_t v1 = *v0;
  sub_25394503C();
  sub_253946028();
  if (sub_2539445C8())
  {
    uint64_t v2 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v3 = sub_25346CB4C(v2);
    sub_253944A48(v3, v5, *(void *)(v4 + 64));
  }
  else
  {
    sub_25347B88C();
    sub_2534B3428();
    v6();
    sub_2539443D0();
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v7();
  sub_25346CD04();
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwca_0()
{
  sub_2535B3C98();
  sub_2539457A0(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_2539450A0();
  int v4 = sub_2539442E4(v3);
  if (!v0)
  {
    sub_2535782A8();
    if (!v6)
    {
      uint64_t v14 = sub_2539458B8();
      v15(v14);
      goto LABEL_7;
    }
    uint64_t v7 = sub_253944FA4();
    v8(v7);
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v10 = sub_25346CB4C(v9);
    sub_253944A48(v10, v12, *(void *)(v11 + 64));
    goto LABEL_7;
  }
  sub_25347B88C();
  sub_2534B3428();
  v5();
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v13();
  sub_25346CD04();
}

void *_s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwtk_0(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25394503C();
  if (sub_2539445C8())
  {
    uint64_t v3 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v4 = sub_25346CB4C(v3);
    sub_253944A48(v4, v6, *(void *)(v5 + 64));
  }
  else
  {
    sub_25347B88C();
    sub_2534D8E14();
    v7();
    sub_2539443D0();
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v8();
  return a1;
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwta_0()
{
  sub_2535B3C98();
  sub_253945778(v1, v2);
  uint64_t v3 = sub_2539450A0();
  int v4 = sub_2539442E4(v3);
  if (!v0)
  {
    sub_2535782A8();
    if (!v6)
    {
      uint64_t v14 = sub_25394589C();
      v15(v14);
      goto LABEL_7;
    }
    uint64_t v7 = sub_253944FA4();
    v8(v7);
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
    uint64_t v10 = sub_25346CB4C(v9);
    sub_253944A48(v10, v12, *(void *)(v11 + 64));
    goto LABEL_7;
  }
  sub_25347B88C();
  sub_2534D8E14();
  v5();
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v13();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVariableSetter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AC24C);
}

uint64_t sub_2538AC24C()
{
  return sub_253903F38();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVariableSetter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AC26C);
}

void sub_2538AC26C()
{
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwCP_0()
{
  sub_2535E2390();
  sub_2535782A8();
  int v3 = *(_DWORD *)(v2 + 80);
  *uint64_t v5 = *v4;
  if ((v3 & 0x20000) != 0)
  {
    sub_253945A4C();
  }
  else
  {
    sub_253944D28();
    if (sub_253944A84(v1))
    {
      uint64_t v6 = sub_253462A5C(&qword_26B249528);
      uint64_t v7 = sub_25346CB4C(v6);
      sub_25394573C(v7, v9, *(void *)(v8 + 64));
    }
    else
    {
      sub_253944624();
      sub_25346CAF4();
      uint64_t v11 = *(void (**)(uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_253944658();
      v11(v12);
      sub_2539446A0(v0);
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v13 = sub_25354710C();
    v14(v13);
  }
  sub_2535E2374();
}

uint64_t _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_2539443F0(v4))
  {
    swift_bridgeObjectRelease();
    sub_253945244();
    sub_25346CAF4();
    uint64_t v5 = sub_253945338();
    v6(v5);
  }
  sub_253944B84();
  sub_25346CAF4();
  uint64_t v7 = sub_2539446BC();
  return v8(v7);
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwcp_0()
{
  sub_2535E2390();
  *int v3 = *v2;
  sub_253944D28();
  if (sub_253944A84(v1))
  {
    uint64_t v4 = sub_253462A5C(&qword_26B249528);
    uint64_t v5 = sub_25346CB4C(v4);
    sub_25394573C(v5, v7, *(void *)(v6 + 64));
  }
  else
  {
    sub_253944624();
    sub_25346CAF4();
    uint64_t v9 = *(void (**)(uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_253944658();
    v9(v10);
    sub_2539446A0(v0);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v11();
  sub_2535E2374();
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwtk_0()
{
  sub_2535B3C98();
  *uint64_t v1 = *v0;
  uint64_t v3 = *(int *)(v2 + 20);
  uint64_t v4 = (uint64_t)v1 + v3;
  uint64_t v5 = (uint64_t)v0 + v3;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_253944A84(v5))
  {
    uint64_t v6 = sub_253462A5C(&qword_26B249528);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_25394573C(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v4 = *(_DWORD *)v5;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 + 8);
    sub_253944E94();
    sub_25346CAF4();
    sub_2534D8E14();
    v10();
    sub_2539446A0(v4);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v11();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVariableStep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AC61C);
}

uint64_t sub_2538AC61C()
{
  return sub_253903F38();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVariableStep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AC63C);
}

void sub_2538AC63C()
{
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwCP_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  sub_2535782A8();
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v3);
  }
  else
  {
    sub_253945F60(v2, v3);
    *(void *)(v1 + 16) = *(void *)(v5 + 16);
    sub_253945F40();
    sub_25346CAF4();
    uint64_t v7 = *(void (**)(uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_253944804();
    v7(v8);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwxx_0()
{
  sub_253944D98();
  swift_bridgeObjectRelease();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwcp_0()
{
  sub_2535B3C98();
  uint64_t v2 = sub_253945570(v0, v1);
  v2[2] = *(void *)(v3 + 16);
  sub_253944E74();
  sub_25346CAF4();
  uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_253944804();
  v5(v6);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwca_0(void *a1, void *a2)
{
  sub_253944580(a1, a2);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v4();
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwtk_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport50TranscriptProtoExternalAgentRequestRewriteMetadataVwta_0(void *a1, void *a2)
{
  sub_2539445FC(a1, a2);
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v4();
  return v3;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprCallVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AC910);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprCallVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AC928);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprSayVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AC940);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprSayVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AC958);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprPickVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TranscriptProtoASTPickType(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2268);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      v9[8] = v10[8];
      uint64_t v14 = *(int *)(v11 + 20);
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      uint64_t v17 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprPickVariant(uint64_t a1, uint64_t a2)
{
  return sub_253935A30(a1, a2, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
}

void *initializeWithCopy for TranscriptProtoASTFlatExprPickVariant(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoASTPickType(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE2268);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    v8[8] = v9[8];
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for TranscriptProtoASTFlatExprPickVariant(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoASTPickType(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v23 = *(void *)v8;
      v7[8] = v8[8];
      *(void *)uint64_t v7 = v23;
      uint64_t v24 = *(int *)(v9 + 20);
      uint64_t v25 = &v7[v24];
      uint64_t v26 = &v8[v24];
      uint64_t v27 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE2268);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v12 = *(void *)v8;
  v7[8] = v8[8];
  *(void *)uint64_t v7 = v12;
  uint64_t v13 = *(int *)(v9 + 20);
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  uint64_t v16 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatExprPickVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoASTPickType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE2268);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v8[8];
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for TranscriptProtoASTFlatExprPickVariant(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoASTPickType(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      v8[8] = v9[8];
      uint64_t v23 = *(int *)(v10 + 20);
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      uint64_t v26 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE2268);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  v8[8] = v9[8];
  uint64_t v13 = *(int *)(v10 + 20);
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPickVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AD1FC);
}

uint64_t sub_2538AD1FC()
{
  return sub_25393618C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPickVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AD21C);
}

void sub_2538AD21C()
{
}

void sub_2538AD228(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprConfirmVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AD264);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprConfirmVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AD27C);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUndoVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AD294);
}

uint64_t sub_2538AD298()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 20));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUndoVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AD310);
}

void sub_2538AD314()
{
  sub_2535E2308();
  if (v3)
  {
    *(void *)(v1 + 8) = v0;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprRejectVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AD38C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprRejectVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AD3A4);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprCancelVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AD3BC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprCancelVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AD3D4);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprContinuePlanningVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CB4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprContinuePlanningVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C5C);
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE4AF0);
}

uint64_t _s30IntelligenceFlowPlannerSupport73TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestToolVwCP_0(uint64_t a1)
{
  sub_2535782A8();
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*(void *)v2);
  }
  else
  {
    *(void *)a1 = *(void *)v2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(v2 + 8);
    sub_25394540C();
    sub_25346CAF4();
    sub_2534B3428();
    v4();
  }
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport73TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestToolVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  sub_253944340();
  sub_25346CAF4();
  sub_2534B3428();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport73TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestToolVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  sub_253944340();
  sub_25346CAF4();
  sub_253944540();
  v4();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport73TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestToolVwtk_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  sub_253944340();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport73TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestToolVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  sub_253944340();
  sub_25346CAF4();
  sub_253944534();
  v3();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538AD658);
}

uint64_t sub_2538AD658(uint64_t a1, int a2)
{
  if (a2 == 253)
  {
    unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
    if (v3 <= 1) {
      return 0;
    }
    else {
      return v3 ^ 0xFF;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v5 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538AD6DC);
}

void sub_2538AD6DC()
{
  sub_253945ADC();
  if (v3)
  {
    *(unsigned char *)(v1 + 8) = ~v0;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_2538AD740()
{
  return sub_25393E9BC();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAstpickTypeEnum(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAstpickTypeEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2538AD7D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_2538AD7D8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for TranscriptProtoAstpickTypeEnum()
{
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwCP_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  sub_2535782A8();
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v3);
  }
  else
  {
    sub_253945F60(v2, v3);
    *(_WORD *)(v1 + 16) = *(_WORD *)(v5 + 16);
    sub_253945ECC();
    sub_25346CAF4();
    uint64_t v7 = *(void (**)(uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2539445B0();
    v7(v8);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwxx_0()
{
  sub_253944D98();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwcp_0()
{
  sub_2535B3C98();
  uint64_t v2 = sub_253945570(v0, v1);
  *((_WORD *)v2 + 8) = *(_WORD *)(v3 + 16);
  sub_253945020();
  sub_25346CAF4();
  uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2539445B0();
  v5(v6);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwca_0(void *a1, void *a2)
{
  sub_253944580(a1, a2);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 16) = *(unsigned char *)(v2 + 16);
  *(unsigned char *)(v3 + 17) = *(unsigned char *)(v2 + 17);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v4();
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwtk_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwta_0(void *a1, void *a2)
{
  sub_2539445FC(a1, a2);
  *(unsigned char *)(v3 + 16) = *(unsigned char *)(v2 + 16);
  *(unsigned char *)(v3 + 17) = *(unsigned char *)(v2 + 17);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v4();
  return v3;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprSearchVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538ADAA0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprSearchVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538ADAB8);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprContinuePlanningVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CB8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprContinuePlanningVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C60);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateParametersVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538ADAF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateParametersVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538ADB10);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprGetMentionedApps(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CBC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprGetMentionedApps(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C64);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v15 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *uint64_t v9 = *v10;
            uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v56 = (char *)v10 + v16;
            int v62 = (char *)v9 + v16;
            uint64_t v17 = sub_253B07160();
            uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v50(v62, v56, v17);
            goto LABEL_13;
          case 5u:
            *uint64_t v9 = *v10;
            uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v57 = (char *)v10 + v18;
            uint64_t v63 = (char *)v9 + v18;
            uint64_t v19 = sub_253B07160();
            uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v51(v63, v57, v19);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
            uint64_t v20 = v10[2];
            v9[1] = v10[1];
            v9[2] = v20;
            uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v58 = (char *)v10 + v21;
            int v64 = (char *)v9 + v21;
            uint64_t v22 = sub_253B07160();
            uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
            swift_bridgeObjectRetain();
            v52(v64, v58, v22);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v13);
      }
      uint64_t v23 = *(int *)(v11 + 20);
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v27 = a3[7];
    uint64_t v28 = (void *)(v7 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v27, 1, v11))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v33 = v29[1];
            *uint64_t v28 = *v29;
            v28[1] = v33;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *uint64_t v28 = *v29;
            uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v59 = (char *)v29 + v34;
            int v65 = (char *)v28 + v34;
            uint64_t v35 = sub_253B07160();
            int v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v65, v59, v35);
            goto LABEL_26;
          case 5u:
            *uint64_t v28 = *v29;
            uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v60 = (char *)v29 + v36;
            uint64_t v66 = (char *)v28 + v36;
            uint64_t v37 = sub_253B07160();
            int v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v66, v60, v37);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
            uint64_t v38 = v29[2];
            v28[1] = v29[1];
            v28[2] = v38;
            uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v61 = (char *)v29 + v39;
            uint64_t v67 = (char *)v28 + v39;
            uint64_t v40 = sub_253B07160();
            uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v67, v61, v40);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v31);
      }
      uint64_t v41 = *(int *)(v11 + 20);
      uint64_t v42 = (char *)v28 + v41;
      uint64_t v43 = (char *)v29 + v41;
      uint64_t v44 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v11);
    }
    uint64_t v45 = a3[8];
    uint64_t v46 = v7 + v45;
    uint64_t v47 = (uint64_t)a2 + v45;
    uint64_t v48 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          uint64_t v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          uint64_t v9 = v4 + v8;
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    uint64_t v11 = v4 + *(int *)(v5 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[7];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v5))
  {
    uint64_t v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v15 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v15 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_17:
          uint64_t v16 = *(int *)(v15 + 20);
          goto LABEL_19;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_19:
          uint64_t v17 = v13 + v16;
          uint64_t v18 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          break;
        default:
          break;
      }
    }
    uint64_t v19 = v13 + *(int *)(v5 + 20);
    uint64_t v20 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  uint64_t v21 = a1 + a2[8];
  uint64_t v22 = sub_253B07160();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
  return v23(v21, v22);
}

uint64_t initializeWithCopy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v13 = v8[1];
          void *v7 = *v8;
          v7[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          void *v7 = *v8;
          uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          int v54 = (char *)v8 + v14;
          uint64_t v60 = (char *)v7 + v14;
          uint64_t v15 = sub_253B07160();
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v60, v54, v15);
          goto LABEL_11;
        case 5u:
          void *v7 = *v8;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v55 = (char *)v8 + v16;
          uint64_t v61 = (char *)v7 + v16;
          uint64_t v17 = sub_253B07160();
          uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v49(v61, v55, v17);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
          uint64_t v18 = v8[2];
          v7[1] = v8[1];
          v7[2] = v18;
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v56 = (char *)v8 + v19;
          int v62 = (char *)v7 + v19;
          uint64_t v20 = sub_253B07160();
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v62, v56, v20);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v21 = *(int *)(v9 + 20);
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v25, 1, v9))
  {
    uint64_t v28 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v31 = v27[1];
          void *v26 = *v27;
          v26[1] = v31;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          void *v26 = *v27;
          uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v57 = (char *)v27 + v32;
          uint64_t v63 = (char *)v26 + v32;
          uint64_t v33 = sub_253B07160();
          uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v63, v57, v33);
          goto LABEL_24;
        case 5u:
          void *v26 = *v27;
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v58 = (char *)v27 + v34;
          int v64 = (char *)v26 + v34;
          uint64_t v35 = sub_253B07160();
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v64, v58, v35);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
          uint64_t v36 = v27[2];
          v26[1] = v27[1];
          v26[2] = v36;
          uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v59 = (char *)v27 + v37;
          int v65 = (char *)v26 + v37;
          uint64_t v38 = sub_253B07160();
          int v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v65, v59, v38);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v29);
    }
    uint64_t v39 = *(int *)(v9 + 20);
    uint64_t v40 = (char *)v26 + v39;
    uint64_t v41 = (char *)v27 + v39;
    uint64_t v42 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v9);
  }
  uint64_t v43 = a3[8];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            void *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            void *v7 = *v8;
            uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v109 = (char *)v8 + v29;
            uint64_t v127 = (char *)v7 + v29;
            uint64_t v30 = sub_253B07160();
            uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
            swift_bridgeObjectRetain();
            v91(v127, v109, v30);
            goto LABEL_32;
          case 5u:
            void *v7 = *v8;
            uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v110 = (char *)v8 + v31;
            uint64_t v128 = (char *)v7 + v31;
            uint64_t v32 = sub_253B07160();
            uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v92(v128, v110, v32);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v111 = (char *)v8 + v33;
            uint64_t v129 = (char *)v7 + v33;
            uint64_t v34 = sub_253B07160();
            uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            v93(v129, v111, v34);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        uint64_t v41 = *(int *)(v9 + 20);
        uint64_t v42 = (char *)v7 + v41;
        uint64_t v43 = (char *)v8 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              void *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              void *v7 = *v8;
              uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v112 = (char *)v8 + v35;
              uint64_t v130 = (char *)v7 + v35;
              uint64_t v36 = sub_253B07160();
              uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
              swift_bridgeObjectRetain();
              v94(v130, v112, v36);
              break;
            case 5u:
              void *v7 = *v8;
              uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v113 = (char *)v8 + v37;
              uint64_t v131 = (char *)v7 + v37;
              uint64_t v38 = sub_253B07160();
              uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
              swift_bridgeObjectRetain();
              v95(v131, v113, v38);
              break;
            case 9u:
              *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              int v114 = (char *)v8 + v39;
              unint64_t v132 = (char *)v7 + v39;
              uint64_t v40 = sub_253B07160();
              uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
              swift_bridgeObjectRetain();
              v96(v132, v114, v40);
              break;
            default:
              size_t v18 = *(void *)(*(void *)(v15 - 8) + 64);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2536FA73C();
    }
    size_t v18 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_17:
    memcpy(v7, v8, v18);
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        void *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        void *v7 = *v8;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v106 = (char *)v8 + v19;
        uint64_t v124 = (char *)v7 + v19;
        uint64_t v20 = sub_253B07160();
        uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v88(v124, v106, v20);
        goto LABEL_25;
      case 5u:
        void *v7 = *v8;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v107 = (char *)v8 + v21;
        uint64_t v125 = (char *)v7 + v21;
        uint64_t v22 = sub_253B07160();
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v125, v107, v22);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v108 = (char *)v8 + v23;
        uint64_t v126 = (char *)v7 + v23;
        uint64_t v24 = sub_253B07160();
        long long v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v90(v126, v108, v24);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v25 = *(int *)(v9 + 20);
  uint64_t v26 = (char *)v7 + v25;
  uint64_t v27 = (char *)v8 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  uint64_t v45 = a3[7];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  int v48 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v45, 1, v9);
  int v49 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v9);
  if (!v48)
  {
    if (v49)
    {
      sub_2536FA73C();
      goto LABEL_46;
    }
    uint64_t v53 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v53);
    int v55 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v53);
    if (v54)
    {
      if (!v55)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *uint64_t v46 = *v47;
            v46[1] = v47[1];
            swift_bridgeObjectRetain();
            goto LABEL_71;
          case 4u:
            *uint64_t v46 = *v47;
            uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            long long v118 = (char *)v47 + v67;
            uint64_t v136 = (char *)v46 + v67;
            uint64_t v68 = sub_253B07160();
            uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
            swift_bridgeObjectRetain();
            v100(v136, v118, v68);
            goto LABEL_71;
          case 5u:
            *uint64_t v46 = *v47;
            uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v119 = (char *)v47 + v69;
            uint64_t v137 = (char *)v46 + v69;
            uint64_t v70 = sub_253B07160();
            uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
            swift_bridgeObjectRetain();
            v101(v137, v119, v70);
            goto LABEL_71;
          case 9u:
            *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
            v46[1] = v47[1];
            v46[2] = v47[2];
            uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v120 = (char *)v47 + v71;
            uint64_t v138 = (char *)v46 + v71;
            uint64_t v72 = sub_253B07160();
            uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v102(v138, v120, v72);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v53);
LABEL_78:
        uint64_t v79 = *(int *)(v9 + 20);
        uint64_t v80 = (char *)v46 + v79;
        uint64_t v81 = (char *)v47 + v79;
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
        goto LABEL_79;
      }
    }
    else
    {
      if (!v55)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *uint64_t v46 = *v47;
              v46[1] = v47[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *uint64_t v46 = *v47;
              uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v121 = (char *)v47 + v73;
              uint64_t v139 = (char *)v46 + v73;
              uint64_t v74 = sub_253B07160();
              uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
              swift_bridgeObjectRetain();
              v103(v139, v121, v74);
              break;
            case 5u:
              *uint64_t v46 = *v47;
              uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v122 = (char *)v47 + v75;
              uint64_t v140 = (char *)v46 + v75;
              uint64_t v76 = sub_253B07160();
              uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
              swift_bridgeObjectRetain();
              v104(v140, v122, v76);
              break;
            case 9u:
              *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
              v46[1] = v47[1];
              v46[2] = v47[2];
              uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v123 = (char *)v47 + v77;
              int v141 = (char *)v46 + v77;
              uint64_t v78 = sub_253B07160();
              uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
              swift_bridgeObjectRetain();
              v105(v141, v123, v78);
              break;
            default:
              size_t v56 = *(void *)(*(void *)(v53 - 8) + 64);
              goto LABEL_56;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_78;
      }
      sub_2536FA73C();
    }
    size_t v56 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_56:
    memcpy(v46, v47, v56);
    goto LABEL_78;
  }
  if (v49)
  {
LABEL_46:
    uint64_t v52 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v46, v47, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_79;
  }
  uint64_t v50 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v50))
  {
    uint64_t v51 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *uint64_t v46 = *v47;
        v46[1] = v47[1];
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 4u:
        *uint64_t v46 = *v47;
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v115 = (char *)v47 + v57;
        uint64_t v133 = (char *)v46 + v57;
        uint64_t v58 = sub_253B07160();
        uint64_t v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v133, v115, v58);
        goto LABEL_64;
      case 5u:
        *uint64_t v46 = *v47;
        uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v116 = (char *)v47 + v59;
        uint64_t v134 = (char *)v46 + v59;
        uint64_t v60 = sub_253B07160();
        uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v134, v116, v60);
        goto LABEL_64;
      case 9u:
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        v46[1] = v47[1];
        v46[2] = v47[2];
        uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v117 = (char *)v47 + v61;
        uint64_t v135 = (char *)v46 + v61;
        uint64_t v62 = sub_253B07160();
        uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v99(v135, v117, v62);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v50);
  }
  uint64_t v63 = *(int *)(v9 + 20);
  int v64 = (char *)v46 + v63;
  int v65 = (char *)v47 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v9);
LABEL_79:
  uint64_t v83 = a3[8];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  uint64_t v86 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        _DWORD *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v19 = (char *)v7 + v18;
        uint64_t v20 = (char *)v8 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v23 = (char *)v7 + v22;
        uint64_t v24 = (char *)v8 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v15 = (char *)v7 + v14;
        int v16 = (char *)v8 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_14:
  uint64_t v26 = *(int *)(v9 + 20);
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_15:
  uint64_t v30 = a3[7];
  uint64_t v31 = (_DWORD *)(a1 + v30);
  uint64_t v32 = (_DWORD *)(a2 + v30);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v30, 1, v9))
  {
    uint64_t v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v34))
    {
      uint64_t v35 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_28:
      uint64_t v49 = *(int *)(v9 + 20);
      uint64_t v50 = (char *)v31 + v49;
      uint64_t v51 = (char *)v32 + v49;
      uint64_t v52 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v9);
      goto LABEL_29;
    }
    int v36 = swift_getEnumCaseMultiPayload();
    switch(v36)
    {
      case 9:
        *uint64_t v31 = *v32;
        *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v42 = (char *)v31 + v41;
        uint64_t v43 = (char *)v32 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      case 5:
        *(void *)uint64_t v31 = *(void *)v32;
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v46 = (char *)v31 + v45;
        uint64_t v47 = (char *)v32 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        break;
      case 4:
        *(void *)uint64_t v31 = *(void *)v32;
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v38 = (char *)v31 + v37;
        uint64_t v39 = (char *)v32 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        break;
      default:
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_27;
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v34);
    goto LABEL_28;
  }
  uint64_t v33 = sub_253462A5C(&qword_269CE22E0);
  memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_29:
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_27:
        uint64_t v37 = *(int *)(v9 + 20);
        uint64_t v38 = (char *)v7 + v37;
        uint64_t v39 = (char *)v8 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_42;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          _DWORD *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v30 = (char *)v7 + v29;
          uint64_t v31 = (char *)v8 + v29;
          uint64_t v32 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          break;
        case 5:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v34 = (char *)v7 + v33;
          uint64_t v35 = (char *)v8 + v33;
          uint64_t v36 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          break;
        case 4:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v25 = (char *)v7 + v24;
          uint64_t v26 = (char *)v8 + v24;
          uint64_t v27 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_27;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      int v18 = swift_getEnumCaseMultiPayload();
      switch(v18)
      {
        case 9:
          _DWORD *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v47 = (char *)v7 + v46;
          uint64_t v48 = (char *)v8 + v46;
          uint64_t v49 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          break;
        case 5:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v51 = (char *)v7 + v50;
          uint64_t v52 = (char *)v8 + v50;
          uint64_t v53 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
          break;
        case 4:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v20 = (char *)v7 + v19;
          uint64_t v21 = (char *)v8 + v19;
          uint64_t v22 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v17)
    {
      if (a1 == a2) {
        goto LABEL_41;
      }
      sub_2536FA73C();
      int v41 = swift_getEnumCaseMultiPayload();
      switch(v41)
      {
        case 9:
          _DWORD *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v55 = (char *)v7 + v54;
          uint64_t v56 = (char *)v8 + v54;
          uint64_t v57 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
          break;
        case 5:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v59 = (char *)v7 + v58;
          uint64_t v60 = (char *)v8 + v58;
          uint64_t v61 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          break;
        case 4:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v43 = (char *)v7 + v42;
          uint64_t v44 = (char *)v8 + v42;
          uint64_t v45 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
          break;
        default:
          size_t v28 = *(void *)(*(void *)(v15 - 8) + 64);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_2536FA73C();
  }
  size_t v28 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_21:
  memcpy(v7, v8, v28);
LABEL_41:
  uint64_t v62 = *(int *)(v9 + 20);
  uint64_t v63 = (char *)v7 + v62;
  int v64 = (char *)v8 + v62;
  uint64_t v65 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
LABEL_42:
  uint64_t v66 = a3[7];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  int v69 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v66, 1, v9);
  int v70 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v9);
  if (!v69)
  {
    if (v70)
    {
      sub_2536FA73C();
      goto LABEL_48;
    }
    uint64_t v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v75 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v67, 1, v74);
    int v76 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v74);
    if (v75)
    {
      if (!v76)
      {
        int v77 = swift_getEnumCaseMultiPayload();
        switch(v77)
        {
          case 9:
            *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v106 = v67 + v105;
            uint64_t v107 = v68 + v105;
            uint64_t v108 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
            break;
          case 5:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v110 = v67 + v109;
            uint64_t v111 = v68 + v109;
            uint64_t v112 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
            break;
          case 4:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v79 = v67 + v78;
            uint64_t v80 = v68 + v78;
            uint64_t v81 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
            break;
          default:
            memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v74 - 8) + 64));
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
LABEL_78:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67, 0, 1, v74);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v76)
      {
        if (a1 == a2) {
          goto LABEL_83;
        }
        sub_2536FA73C();
        int v100 = swift_getEnumCaseMultiPayload();
        switch(v100)
        {
          case 9:
            *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v114 = v67 + v113;
            uint64_t v115 = v68 + v113;
            uint64_t v116 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
            break;
          case 5:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v118 = v67 + v117;
            uint64_t v119 = v68 + v117;
            uint64_t v120 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
            break;
          case 4:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v102 = v67 + v101;
            uint64_t v103 = v68 + v101;
            uint64_t v104 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
            break;
          default:
            size_t v87 = *(void *)(*(void *)(v74 - 8) + 64);
            goto LABEL_62;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      }
      sub_2536FA73C();
    }
    size_t v87 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_62:
    memcpy((void *)v67, (const void *)v68, v87);
LABEL_83:
    uint64_t v121 = *(int *)(v9 + 20);
    uint64_t v122 = v67 + v121;
    uint64_t v123 = v68 + v121;
    uint64_t v124 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 40))(v122, v123, v124);
    goto LABEL_84;
  }
  if (!v70)
  {
    uint64_t v71 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v71))
    {
      uint64_t v72 = sub_253462A5C(&qword_269CDCBA8);
      memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v72 - 8) + 64));
LABEL_68:
      uint64_t v96 = *(int *)(v9 + 20);
      uint64_t v97 = v67 + v96;
      uint64_t v98 = v68 + v96;
      uint64_t v99 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67, 0, 1, v9);
      goto LABEL_84;
    }
    int v82 = swift_getEnumCaseMultiPayload();
    switch(v82)
    {
      case 9:
        *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
        *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
        uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v89 = v67 + v88;
        uint64_t v90 = v68 + v88;
        uint64_t v91 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
        break;
      case 5:
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v93 = v67 + v92;
        uint64_t v94 = v68 + v92;
        uint64_t v95 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
        break;
      case 4:
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v84 = v67 + v83;
        uint64_t v85 = v68 + v83;
        uint64_t v86 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
        break;
      default:
        memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v71 - 8) + 64));
        goto LABEL_67;
    }
    swift_storeEnumTagMultiPayload();
LABEL_67:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67, 0, 1, v71);
    goto LABEL_68;
  }
LABEL_48:
  uint64_t v73 = sub_253462A5C(&qword_269CE22E0);
  memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v73 - 8) + 64));
LABEL_84:
  uint64_t v125 = a3[8];
  uint64_t v126 = a1 + v125;
  uint64_t v127 = a2 + v125;
  uint64_t v128 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 40))(v126, v127, v128);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538B1770);
}

uint64_t sub_2538B1770()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE22E0);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253B07160();
    sub_2535E27E4();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538B1814);
}

void sub_2538B1814()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE22E0);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253B07160();
      sub_2535E2830();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_2538B18A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwCP_0()
{
  sub_2535B3C98();
  sub_2535782A8();
  if ((*(_DWORD *)(v2 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    sub_253945F60(v0, v1);
    sub_253945ECC();
    sub_25346CAF4();
    uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2539445B0();
    v4(v5);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwxx_0()
{
  sub_253944D98();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwcp_0()
{
  sub_2535B3C98();
  sub_253945570(v0, v1);
  sub_253945020();
  sub_25346CAF4();
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2539445B0();
  v3(v4);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwca_0(void *a1, void *a2)
{
  sub_253944580(a1, a2);
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v3();
  return v2;
}

_OWORD *_s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwtk_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_253944340();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNeedsValueVwta_0(void *a1, void *a2)
{
  sub_2539445FC(a1, a2);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v3();
  return v2;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPickOneVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538B1B40);
}

uint64_t sub_2538B1B44()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 20));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPickOneVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538B1BBC);
}

void sub_2538B1BC0()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprResolveToolVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538B1C34);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprResolveToolVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538B1C4C);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprDotVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    int v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v16 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v16;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *uint64_t v9 = *v10;
            uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v36 = (char *)v10 + v17;
            uint64_t v39 = (char *)v9 + v17;
            uint64_t v18 = sub_253B07160();
            uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
            swift_bridgeObjectRetain();
            v33(v39, v36, v18);
            goto LABEL_13;
          case 5u:
            *uint64_t v9 = *v10;
            uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v37 = (char *)v10 + v19;
            uint64_t v40 = (char *)v9 + v19;
            uint64_t v20 = sub_253B07160();
            uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v40, v37, v20);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
            uint64_t v21 = v10[2];
            v9[1] = v10[1];
            v9[2] = v21;
            uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v38 = (char *)v10 + v22;
            int v41 = (char *)v9 + v22;
            uint64_t v23 = sub_253B07160();
            uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v35(v41, v38, v23);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v14);
      }
      uint64_t v24 = *(int *)(v11 + 20);
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v28 = *(int *)(a3 + 24);
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprDotVariant(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          uint64_t v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          uint64_t v9 = v4 + v8;
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    uint64_t v11 = v4 + *(int *)(v5 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  return v15(v13, v14);
}

void *initializeWithCopy for TranscriptProtoASTFlatExprDotVariant(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v14 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v14;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *uint64_t v8 = *v9;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v34 = (char *)v9 + v15;
          uint64_t v37 = (char *)v8 + v15;
          uint64_t v16 = sub_253B07160();
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v37, v34, v16);
          goto LABEL_11;
        case 5u:
          *uint64_t v8 = *v9;
          uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v35 = (char *)v9 + v17;
          uint64_t v38 = (char *)v8 + v17;
          uint64_t v18 = sub_253B07160();
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v38, v35, v18);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
          uint64_t v19 = v9[2];
          v8[1] = v9[1];
          v8[2] = v19;
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v36 = (char *)v9 + v20;
          uint64_t v39 = (char *)v8 + v20;
          uint64_t v21 = sub_253B07160();
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v33(v39, v36, v21);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v12);
    }
    uint64_t v22 = *(int *)(v10 + 20);
    uint64_t v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

void *assignWithCopy for TranscriptProtoASTFlatExprDotVariant(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            void *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            void *v7 = *v8;
            uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v62 = (char *)v8 + v29;
            uint64_t v71 = (char *)v7 + v29;
            uint64_t v30 = sub_253B07160();
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v71, v62, v30);
            goto LABEL_32;
          case 5u:
            void *v7 = *v8;
            uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v63 = (char *)v8 + v31;
            uint64_t v72 = (char *)v7 + v31;
            uint64_t v32 = sub_253B07160();
            uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v72, v63, v32);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            int v64 = (char *)v8 + v33;
            uint64_t v73 = (char *)v7 + v33;
            uint64_t v34 = sub_253B07160();
            uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v73, v64, v34);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        uint64_t v41 = *(int *)(v9 + 20);
        uint64_t v42 = (char *)v7 + v41;
        uint64_t v43 = (char *)v8 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              void *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              void *v7 = *v8;
              uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v65 = (char *)v8 + v35;
              uint64_t v74 = (char *)v7 + v35;
              uint64_t v36 = sub_253B07160();
              uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
              swift_bridgeObjectRetain();
              v56(v74, v65, v36);
              break;
            case 5u:
              void *v7 = *v8;
              uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v66 = (char *)v8 + v37;
              int v75 = (char *)v7 + v37;
              uint64_t v38 = sub_253B07160();
              uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
              swift_bridgeObjectRetain();
              v57(v75, v66, v38);
              break;
            case 9u:
              *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v67 = (char *)v8 + v39;
              int v76 = (char *)v7 + v39;
              uint64_t v40 = sub_253B07160();
              uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
              swift_bridgeObjectRetain();
              v58(v76, v67, v40);
              break;
            default:
              size_t v18 = *(void *)(*(void *)(v15 - 8) + 64);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2536FA73C();
    }
    size_t v18 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_17:
    memcpy(v7, v8, v18);
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        void *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        void *v7 = *v8;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v59 = (char *)v8 + v19;
        uint64_t v68 = (char *)v7 + v19;
        uint64_t v20 = sub_253B07160();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v68, v59, v20);
        goto LABEL_25;
      case 5u:
        void *v7 = *v8;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v60 = (char *)v8 + v21;
        int v69 = (char *)v7 + v21;
        uint64_t v22 = sub_253B07160();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v69, v60, v22);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v61 = (char *)v8 + v23;
        int v70 = (char *)v7 + v23;
        uint64_t v24 = sub_253B07160();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v70, v61, v24);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v25 = *(int *)(v9 + 20);
  uint64_t v26 = (char *)v7 + v25;
  uint64_t v27 = (char *)v8 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  uint64_t v45 = *(int *)(a3 + 24);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatExprDotVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_14:
      uint64_t v26 = *(int *)(v9 + 20);
      uint64_t v27 = (char *)v7 + v26;
      uint64_t v28 = (char *)v8 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        _DWORD *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v19 = (char *)v7 + v18;
        uint64_t v20 = (char *)v8 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v23 = (char *)v7 + v22;
        uint64_t v24 = (char *)v8 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v15 = (char *)v7 + v14;
        int v16 = (char *)v8 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
  memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_15:
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

void *assignWithTake for TranscriptProtoASTFlatExprDotVariant(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (v12)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v16);
    int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
            *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
            uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v48 = v8 + v47;
            uint64_t v49 = v9 + v47;
            uint64_t v50 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
            break;
          case 5:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v52 = v8 + v51;
            uint64_t v53 = v9 + v51;
            uint64_t v54 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
            break;
          case 4:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v21 = v8 + v20;
            uint64_t v22 = v9 + v20;
            uint64_t v23 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
            break;
          default:
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_37;
        }
        swift_storeEnumTagMultiPayload();
LABEL_37:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v16);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v18)
      {
        if (a1 == a2) {
          goto LABEL_41;
        }
        sub_2536FA73C();
        int v42 = swift_getEnumCaseMultiPayload();
        switch(v42)
        {
          case 9:
            *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
            *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
            uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v56 = v8 + v55;
            uint64_t v57 = v9 + v55;
            uint64_t v58 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
            break;
          case 5:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v60 = v8 + v59;
            uint64_t v61 = v9 + v59;
            uint64_t v62 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
            break;
          case 4:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v44 = v8 + v43;
            uint64_t v45 = v9 + v43;
            uint64_t v46 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
            break;
          default:
            size_t v29 = *(void *)(*(void *)(v16 - 8) + 64);
            goto LABEL_21;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_41;
      }
      sub_2536FA73C();
    }
    size_t v29 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_21:
    memcpy((void *)v8, (const void *)v9, v29);
LABEL_41:
    uint64_t v63 = *(int *)(v10 + 20);
    uint64_t v64 = v8 + v63;
    uint64_t v65 = v9 + v63;
    uint64_t v66 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
    goto LABEL_42;
  }
  if (!v12)
  {
    uint64_t v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CDCBA8);
      memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_27:
      uint64_t v38 = *(int *)(v10 + 20);
      uint64_t v39 = v8 + v38;
      uint64_t v40 = v9 + v38;
      uint64_t v41 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v10);
      goto LABEL_42;
    }
    int v24 = swift_getEnumCaseMultiPayload();
    switch(v24)
    {
      case 9:
        *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
        *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v31 = v8 + v30;
        uint64_t v32 = v9 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        break;
      case 5:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v35 = v8 + v34;
        uint64_t v36 = v9 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        break;
      case 4:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v26 = v8 + v25;
        uint64_t v27 = v9 + v25;
        uint64_t v28 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        break;
      default:
        memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_26;
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v13);
    goto LABEL_27;
  }
LABEL_7:
  uint64_t v15 = sub_253462A5C(&qword_269CE22E0);
  memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_42:
  uint64_t v67 = *(int *)(a3 + 24);
  uint64_t v68 = (char *)a1 + v67;
  int v69 = (char *)a2 + v67;
  uint64_t v70 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprDotVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538B3CA0);
}

uint64_t sub_2538B3CA0()
{
  return sub_25393618C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprDotVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538B3CC0);
}

void sub_2538B3CC0()
{
}

void sub_2538B3CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatAssignExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2310);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE2320);
        memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v16))
            {
              uint64_t v17 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v78 = v10[1];
                  *uint64_t v9 = *v10;
                  v9[1] = v78;
                  swift_bridgeObjectRetain();
                  goto LABEL_55;
                case 4u:
                  *uint64_t v9 = *v10;
                  uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  __dsto = (char *)v10 + v100;
                  uint64_t v325 = (char *)v9 + v100;
                  uint64_t v101 = sub_253B07160();
                  uint64_t v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v281(v325, __dsto, v101);
                  goto LABEL_55;
                case 5u:
                  *uint64_t v9 = *v10;
                  uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  __dstp = (char *)v10 + v102;
                  v326 = (char *)v9 + v102;
                  uint64_t v103 = sub_253B07160();
                  uint64_t v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v282(v326, __dstp, v103);
                  goto LABEL_55;
                case 9u:
                  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
                  uint64_t v104 = v10[2];
                  v9[1] = v10[1];
                  v9[2] = v104;
                  uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  __dstq = (char *)v10 + v105;
                  uint64_t v327 = (char *)v9 + v105;
                  uint64_t v106 = sub_253B07160();
                  uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v283(v327, __dstq, v106);
LABEL_55:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v16);
            }
            uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            uint64_t v108 = (char *)v9 + v107;
            uint64_t v109 = (char *)v10 + v107;
            uint64_t v110 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
            goto LABEL_115;
          case 1u:
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v313 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            uint64_t v18 = *(int *)(v313 + 20);
            uint64_t v19 = (void *)((char *)v9 + v18);
            uint64_t v20 = (void *)((char *)v10 + v18);
            uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
            {
              uint64_t v22 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
            }
            else
            {
              __dstb = (int *)v21;
              uint64_t v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v79))
              {
                uint64_t v80 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v19, v20, *(void *)(*(void *)(v80 - 8) + 64));
                uint64_t v81 = v20;
              }
              else
              {
                uint64_t v263 = v79;
                int v279 = v20;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v94 = v20[1];
                    uint64_t v95 = (uint64_t)v19;
                    *uint64_t v19 = *v20;
                    v19[1] = v94;
                    swift_bridgeObjectRetain();
                    uint64_t v96 = v263;
                    goto LABEL_62;
                  case 4u:
                    uint64_t v95 = (uint64_t)v19;
                    *uint64_t v19 = *v20;
                    uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    uint64_t v226 = (char *)v20 + v112;
                    uint64_t v241 = (char *)v19 + v112;
                    uint64_t v96 = v263;
                    uint64_t v214 = sub_253B07160();
                    uint64_t v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v208(v241, v226, v214);
                    goto LABEL_62;
                  case 5u:
                    uint64_t v95 = (uint64_t)v19;
                    *uint64_t v19 = *v20;
                    uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    uint64_t v227 = (char *)v20 + v113;
                    v242 = (char *)v19 + v113;
                    uint64_t v96 = v263;
                    uint64_t v215 = sub_253B07160();
                    uint64_t v209 = *(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v209(v242, v227, v215);
                    goto LABEL_62;
                  case 9u:
                    uint64_t v95 = (uint64_t)v19;
                    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
                    uint64_t v114 = v20[2];
                    v19[1] = v20[1];
                    v19[2] = v114;
                    uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v228 = (char *)v20 + v115;
                    uint64_t v243 = (char *)v19 + v115;
                    uint64_t v96 = v263;
                    uint64_t v216 = sub_253B07160();
                    v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v210(v243, v228, v216);
LABEL_62:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    uint64_t v111 = v20;
                    uint64_t v96 = v79;
                    uint64_t v95 = (uint64_t)v19;
                    memcpy(v19, v111, *(void *)(*(void *)(v263 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v95, 0, 1, v96);
                uint64_t v19 = (void *)v95;
                uint64_t v81 = v279;
              }
              uint64_t v116 = __dstb[5];
              uint64_t v117 = (char *)v19 + v116;
              int v284 = (char *)v81 + v116;
              uint64_t v118 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v117, v284, v118);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, (uint64_t)__dstb);
            }
            goto LABEL_85;
          case 2u:
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v314 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            uint64_t v23 = v314[5];
            int v24 = (void *)((char *)v9 + v23);
            uint64_t v25 = (void *)((char *)v10 + v23);
            __dst = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, (uint64_t)__dst))
            {
              uint64_t v26 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
              uint64_t v27 = (uint64_t)__dst;
            }
            else
            {
              uint64_t v82 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v82))
              {
                uint64_t v83 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v24, v25, *(void *)(*(void *)(v83 - 8) + 64));
                uint64_t v84 = v25;
                uint64_t v85 = (uint64_t)v24;
              }
              else
              {
                uint64_t v280 = v25;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v97 = v25[1];
                    *int v24 = *v25;
                    v24[1] = v97;
                    swift_bridgeObjectRetain();
                    goto LABEL_69;
                  case 4u:
                    *int v24 = *v25;
                    uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    uint64_t v244 = (char *)v25 + v119;
                    uint64_t v256 = (char *)v24 + v119;
                    uint64_t v229 = sub_253B07160();
                    uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v217(v256, v244, v229);
                    goto LABEL_69;
                  case 5u:
                    *int v24 = *v25;
                    uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    uint64_t v245 = (char *)v25 + v120;
                    uint64_t v257 = (char *)v24 + v120;
                    uint64_t v230 = sub_253B07160();
                    int v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v218(v257, v245, v230);
                    goto LABEL_69;
                  case 9u:
                    *(_DWORD *)int v24 = *(_DWORD *)v25;
                    uint64_t v121 = v25[2];
                    v24[1] = v25[1];
                    v24[2] = v121;
                    uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    uint64_t v246 = (char *)v25 + v122;
                    int v258 = (char *)v24 + v122;
                    uint64_t v231 = sub_253B07160();
                    int v219 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v219(v258, v246, v231);
LABEL_69:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v24, v25, *(void *)(*(void *)(v82 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v82);
                uint64_t v85 = (uint64_t)v24;
                uint64_t v84 = v280;
              }
              uint64_t v27 = (uint64_t)__dst;
              uint64_t v123 = __dst[5];
              uint64_t v124 = v85 + v123;
              int v285 = (char *)v84 + v123;
              uint64_t v125 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v124, v285, v125);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v85, 0, 1, (uint64_t)__dst);
            }
            uint64_t v126 = v314[6];
            uint64_t v127 = (void *)((char *)v9 + v126);
            uint64_t v128 = (void *)((char *)v10 + v126);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10 + v126, 1, v27))
            {
              uint64_t v129 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              uint64_t v130 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v130))
              {
                uint64_t v131 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
              }
              else
              {
                uint64_t v286 = v130;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v132 = v128[1];
                    void *v127 = *v128;
                    v127[1] = v132;
                    swift_bridgeObjectRetain();
                    goto LABEL_103;
                  case 4u:
                    void *v127 = *v128;
                    uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    uint64_t v250 = (char *)v128 + v172;
                    uint64_t v259 = (char *)v127 + v172;
                    uint64_t v173 = sub_253B07160();
                    uint64_t v235 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v235(v259, v250, v173);
                    uint64_t v130 = v286;
                    goto LABEL_103;
                  case 5u:
                    void *v127 = *v128;
                    uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    int v251 = (char *)v128 + v174;
                    uint64_t v260 = (char *)v127 + v174;
                    uint64_t v175 = sub_253B07160();
                    uint64_t v236 = *(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v236(v260, v251, v175);
                    uint64_t v130 = v286;
                    goto LABEL_103;
                  case 9u:
                    *(_DWORD *)uint64_t v127 = *(_DWORD *)v128;
                    uint64_t v176 = v128[2];
                    v127[1] = v128[1];
                    v127[2] = v176;
                    uint64_t v177 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    int v252 = (char *)v128 + v177;
                    uint64_t v261 = (char *)v127 + v177;
                    uint64_t v178 = sub_253B07160();
                    uint64_t v237 = *(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v237(v261, v252, v178);
                    uint64_t v130 = v286;
LABEL_103:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v127, 0, 1, v130);
              }
              uint64_t v179 = __dst[5];
              uint64_t v291 = (char *)v127 + v179;
              uint64_t v180 = (char *)v128 + v179;
              uint64_t v181 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v291, v180, v181);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v127, 0, 1, (uint64_t)__dst);
            }
            uint64_t v182 = v314[7];
            uint64_t v183 = (char *)v9 + v182;
            uint64_t v184 = (char *)v10 + v182;
            uint64_t v185 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v183, v184, v185);
            goto LABEL_115;
          case 3u:
            uint64_t v28 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v28;
            uint64_t v313 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            uint64_t v29 = *(int *)(v313 + 20);
            uint64_t v30 = (char *)v9 + v29;
            uint64_t v31 = (void *)((char *)v10 + v29);
            uint64_t v32 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
            {
              uint64_t v33 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
            }
            else
            {
              __dstc = v30;
              uint64_t v86 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v86))
              {
                uint64_t v87 = sub_253462A5C(&qword_269CDCBA8);
                uint64_t v88 = (uint64_t)__dstc;
                memcpy(__dstc, v31, *(void *)(*(void *)(v87 - 8) + 64));
              }
              else
              {
                uint64_t v264 = v86;
                uint64_t v88 = (uint64_t)__dstc;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v98 = v31[1];
                    void *__dstc = *v31;
                    __dstc[1] = v98;
                    swift_bridgeObjectRetain();
                    goto LABEL_82;
                  case 4u:
                    void *__dstc = *v31;
                    uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    uint64_t v232 = (char *)v31 + v133;
                    uint64_t v247 = (char *)__dstc + v133;
                    uint64_t v134 = v32;
                    uint64_t v135 = sub_253B07160();
                    uint64_t v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v136 = v135;
                    uint64_t v32 = v134;
                    uint64_t v88 = (uint64_t)__dstc;
                    v220(v247, v232, v136);
                    goto LABEL_82;
                  case 5u:
                    void *__dstc = *v31;
                    uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    uint64_t v233 = (char *)v31 + v137;
                    v248 = (char *)__dstc + v137;
                    uint64_t v138 = v32;
                    uint64_t v139 = sub_253B07160();
                    uint64_t v221 = *(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v140 = v139;
                    uint64_t v32 = v138;
                    uint64_t v88 = (uint64_t)__dstc;
                    v221(v248, v233, v140);
                    goto LABEL_82;
                  case 9u:
                    *(_DWORD *)__dstc = *(_DWORD *)v31;
                    uint64_t v141 = v31[2];
                    __dstc[1] = v31[1];
                    __dstc[2] = v141;
                    uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    uint64_t v234 = (char *)v31 + v142;
                    uint64_t v249 = (char *)__dstc + v142;
                    uint64_t v143 = v32;
                    uint64_t v144 = sub_253B07160();
                    v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v145 = v144;
                    uint64_t v32 = v143;
                    uint64_t v88 = (uint64_t)__dstc;
                    v222(v249, v234, v145);
LABEL_82:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    uint64_t v88 = (uint64_t)__dstc;
                    memcpy(__dstc, v31, *(void *)(*(void *)(v264 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v88, 0, 1, v264);
              }
              uint64_t v287 = v32;
              uint64_t v146 = *(int *)(v32 + 20);
              uint64_t v147 = v88 + v146;
              uint64_t v148 = (char *)v31 + v146;
              uint64_t v149 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v88, 0, 1, v287);
            }
            goto LABEL_85;
          case 4u:
            uint64_t v315 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v315))
            {
              uint64_t v34 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v9, v10, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              uint64_t v89 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v89))
              {
                uint64_t v90 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v9, v10, *(void *)(*(void *)(v90 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v99 = v10[1];
                    *uint64_t v9 = *v10;
                    v9[1] = v99;
                    swift_bridgeObjectRetain();
                    goto LABEL_90;
                  case 4u:
                    *uint64_t v9 = *v10;
                    uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    uint64_t v288 = (char *)v10 + v154;
                    __dstr = (char *)v9 + v154;
                    uint64_t v155 = sub_253B07160();
                    uint64_t v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v265(__dstr, v288, v155);
                    goto LABEL_90;
                  case 5u:
                    *uint64_t v9 = *v10;
                    uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v289 = (char *)v10 + v156;
                    __dsts = (char *)v9 + v156;
                    uint64_t v157 = sub_253B07160();
                    uint64_t v266 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v266(__dsts, v289, v157);
                    goto LABEL_90;
                  case 9u:
                    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
                    uint64_t v158 = v10[2];
                    v9[1] = v10[1];
                    v9[2] = v158;
                    uint64_t v159 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    long long v290 = (char *)v10 + v159;
                    __dstt = (char *)v9 + v159;
                    uint64_t v160 = sub_253B07160();
                    uint64_t v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v267(__dstt, v290, v160);
LABEL_90:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v9, v10, *(void *)(*(void *)(v89 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v89);
              }
              uint64_t v161 = *(int *)(v315 + 20);
              uint64_t v162 = (char *)v9 + v161;
              uint64_t v163 = (char *)v10 + v161;
              uint64_t v164 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v315);
            }
            __dstd = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            uint64_t v165 = __dstd[5];
            uint64_t v166 = (void *)((char *)v9 + v165);
            uint64_t v167 = (void *)((char *)v10 + v165);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10 + v165, 1, v315))
            {
              uint64_t v168 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
            }
            else
            {
              uint64_t v169 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v167, 1, v169))
              {
                uint64_t v170 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v166, v167, *(void *)(*(void *)(v170 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v171 = v167[1];
                    *uint64_t v166 = *v167;
                    v166[1] = v171;
                    swift_bridgeObjectRetain();
                    goto LABEL_111;
                  case 4u:
                    *uint64_t v166 = *v167;
                    uint64_t v186 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    int v238 = (char *)v167 + v186;
                    long long v253 = (char *)v166 + v186;
                    uint64_t v223 = sub_253B07160();
                    uint64_t v211 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v211(v253, v238, v223);
                    goto LABEL_111;
                  case 5u:
                    *uint64_t v166 = *v167;
                    uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    int v239 = (char *)v167 + v187;
                    uint64_t v254 = (char *)v166 + v187;
                    uint64_t v224 = sub_253B07160();
                    uint64_t v212 = *(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v212(v254, v239, v224);
                    goto LABEL_111;
                  case 9u:
                    *(_DWORD *)uint64_t v166 = *(_DWORD *)v167;
                    uint64_t v188 = v167[2];
                    v166[1] = v167[1];
                    v166[2] = v188;
                    uint64_t v189 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    uint64_t v240 = (char *)v167 + v189;
                    v255 = (char *)v166 + v189;
                    uint64_t v225 = sub_253B07160();
                    uint64_t v213 = *(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v213(v255, v240, v225);
LABEL_111:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v166, 0, 1, v169);
              }
              uint64_t v190 = *(int *)(v315 + 20);
              uint64_t v191 = (uint64_t)v166;
              long long v192 = (char *)v166 + v190;
              uint64_t v193 = (char *)v167 + v190;
              uint64_t v194 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v192, v193, v194);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v191, 0, 1, v315);
            }
            uint64_t v195 = __dstd[6];
            uint64_t v196 = (char *)v9 + v195;
            uint64_t v197 = (char *)v10 + v195;
            uint64_t v198 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v196, v197, v198);
            goto LABEL_115;
          case 5u:
            uint64_t v35 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v35;
            v9[2] = v10[2];
            uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            v268 = (char *)v10 + v36;
            __dste = (char *)v9 + v36;
            uint64_t v37 = sub_253B07160();
            uint64_t v262 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v262(__dste, v268, v37);
            goto LABEL_115;
          case 6u:
            *uint64_t v9 = *v10;
            uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            uint64_t v269 = (char *)v10 + v38;
            __dstf = (char *)v9 + v38;
            uint64_t v39 = sub_253B07160();
            uint64_t v316 = v14;
            uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v40(__dstf, v269, v39);
            uint64_t v14 = v316;
            goto LABEL_115;
          case 7u:
            uint64_t v41 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v41;
            uint64_t v42 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            uint64_t v43 = *(int *)(v42 + 20);
            __dsta = (char *)v9 + v43;
            uint64_t v313 = v42;
            uint64_t v44 = (char *)v10 + v43;
            uint64_t v45 = type metadata accessor for TranscriptProtoASTPickType(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
            {
              uint64_t v46 = sub_253462A5C(&qword_269CE2268);
              memcpy(__dsta, v44, *(void *)(*(void *)(v46 - 8) + 64));
            }
            else
            {
              *(void *)__dsta = *(void *)v44;
              __dsta[8] = v44[8];
              uint64_t v91 = *(int *)(v45 + 20);
              int v278 = &__dsta[v91];
              uint64_t v92 = &v44[v91];
              uint64_t v93 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v93 - 8) + 16))(v278, v92, v93);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v45);
            }
LABEL_85:
            uint64_t v150 = *(int *)(v313 + 24);
            uint64_t v151 = (char *)v9 + v150;
            uint64_t v152 = (char *)v10 + v150;
            uint64_t v153 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
            goto LABEL_115;
          case 8u:
            uint64_t v47 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v47;
            uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            int v270 = (char *)v10 + v48;
            __dstg = (char *)v9 + v48;
            uint64_t v49 = sub_253B07160();
            uint64_t v317 = v14;
            uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
            swift_bridgeObjectRetain();
            v50(__dstg, v270, v49);
            uint64_t v14 = v317;
            goto LABEL_115;
          case 9u:
            uint64_t v51 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v51;
            *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
            uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            int v271 = (char *)v10 + v52;
            __dsth = (char *)v9 + v52;
            uint64_t v53 = sub_253B07160();
            uint64_t v318 = v14;
            uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(__dsth, v271, v53);
            uint64_t v14 = v318;
            goto LABEL_115;
          case 0xAu:
            uint64_t v55 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v55;
            uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            uint64_t v272 = (char *)v10 + v56;
            __dsti = (char *)v9 + v56;
            uint64_t v57 = sub_253B07160();
            uint64_t v319 = v14;
            uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
            swift_bridgeObjectRetain();
            v58(__dsti, v272, v57);
            uint64_t v14 = v319;
            goto LABEL_115;
          case 0xBu:
            uint64_t v59 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v59;
            uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            uint64_t v273 = (char *)v10 + v60;
            __dstj = (char *)v9 + v60;
            uint64_t v61 = sub_253B07160();
            uint64_t v320 = v14;
            uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
            swift_bridgeObjectRetain();
            v62(__dstj, v273, v61);
            uint64_t v14 = v320;
            goto LABEL_115;
          case 0xCu:
            *uint64_t v9 = *v10;
            uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            uint64_t v274 = (char *)v10 + v63;
            __dstk = (char *)v9 + v63;
            uint64_t v64 = sub_253B07160();
            uint64_t v321 = v14;
            uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
            swift_bridgeObjectRetain();
            v65(__dstk, v274, v64);
            uint64_t v14 = v321;
            goto LABEL_115;
          case 0xDu:
            uint64_t v66 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v66;
            uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            v275 = (char *)v10 + v67;
            __dstl = (char *)v9 + v67;
            uint64_t v68 = sub_253B07160();
            uint64_t v322 = v14;
            int v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
            swift_bridgeObjectRetain();
            v69(__dstl, v275, v68);
            uint64_t v14 = v322;
            goto LABEL_115;
          case 0xEu:
            uint64_t v70 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v70;
            uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            uint64_t v276 = (char *)v10 + v71;
            __dstm = (char *)v9 + v71;
            uint64_t v72 = sub_253B07160();
            uint64_t v323 = v14;
            uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v73(__dstm, v276, v72);
            uint64_t v14 = v323;
            goto LABEL_115;
          case 0xFu:
          case 0x11u:
            uint64_t v74 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v9, v10, v74);
            goto LABEL_115;
          case 0x10u:
            *uint64_t v9 = *v10;
            uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            uint64_t v277 = (char *)v10 + v75;
            __dstn = (char *)v9 + v75;
            uint64_t v76 = sub_253B07160();
            uint64_t v324 = v14;
            int v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
            swift_bridgeObjectRetain();
            v77(__dstn, v277, v76);
            uint64_t v14 = v324;
LABEL_115:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v14);
      }
      uint64_t v199 = *(int *)(v11 + 20);
      uint64_t v200 = (char *)v9 + v199;
      long long v201 = (char *)v10 + v199;
      uint64_t v202 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v203 = *(int *)(a3 + 24);
    uint64_t v204 = (char *)v4 + v203;
    long long v205 = (char *)a2 + v203;
    uint64_t v206 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v204, v205, v206);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatAssignExpr(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v8))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v22 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_37;
              case 5u:
                swift_bridgeObjectRelease();
                uint64_t v22 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_37:
                uint64_t v23 = *(int *)(v22 + 20);
                goto LABEL_39;
              case 9u:
                swift_bridgeObjectRelease();
                uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_39:
                uint64_t v24 = v4 + v23;
                uint64_t v25 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
                break;
              default:
                break;
            }
          }
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
          goto LABEL_41;
        case 1u:
          uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          uint64_t v10 = v4 + *(int *)(v9 + 20);
          uint64_t v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11)) {
            goto LABEL_48;
          }
          uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v12))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                goto LABEL_18;
              case 4u:
                goto LABEL_42;
              case 5u:
                goto LABEL_43;
              case 9u:
                goto LABEL_45;
              default:
                goto LABEL_47;
            }
          }
          goto LABEL_47;
        case 2u:
          uint64_t v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          uint64_t v14 = v4 + v13[5];
          uint64_t v15 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15))
          {
            uint64_t v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v16))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  uint64_t v32 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_51;
                case 5u:
                  swift_bridgeObjectRelease();
                  uint64_t v32 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_51:
                  uint64_t v33 = *(int *)(v32 + 20);
                  goto LABEL_53;
                case 9u:
                  swift_bridgeObjectRelease();
                  uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_53:
                  uint64_t v34 = v14 + v33;
                  uint64_t v35 = sub_253B07160();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
                  break;
                default:
                  break;
              }
            }
            uint64_t v36 = v14 + *(int *)(v15 + 20);
            uint64_t v37 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
          }
          uint64_t v38 = v4 + v13[6];
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v38, 1, v15))
          {
            uint64_t v39 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v38, 1, v39))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  uint64_t v49 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_71;
                case 5u:
                  swift_bridgeObjectRelease();
                  uint64_t v49 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_71:
                  uint64_t v50 = *(int *)(v49 + 20);
                  goto LABEL_73;
                case 9u:
                  swift_bridgeObjectRelease();
                  uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_73:
                  uint64_t v51 = v38 + v50;
                  uint64_t v52 = sub_253B07160();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
                  break;
                default:
                  break;
              }
            }
            uint64_t v53 = v38 + *(int *)(v15 + 20);
            uint64_t v54 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
          }
          uint64_t v20 = v13[7];
          goto LABEL_83;
        case 3u:
          swift_bridgeObjectRelease();
          uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          uint64_t v10 = v4 + *(int *)(v9 + 20);
          uint64_t v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11)) {
            goto LABEL_48;
          }
          uint64_t v17 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v17))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
LABEL_18:
                swift_bridgeObjectRelease();
                break;
              case 4u:
LABEL_42:
                swift_bridgeObjectRelease();
                uint64_t v26 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_44;
              case 5u:
LABEL_43:
                swift_bridgeObjectRelease();
                uint64_t v26 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_44:
                uint64_t v27 = *(int *)(v26 + 20);
                goto LABEL_46;
              case 9u:
LABEL_45:
                swift_bridgeObjectRelease();
                uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_46:
                uint64_t v28 = v10 + v27;
                uint64_t v29 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
                break;
              default:
                break;
            }
          }
LABEL_47:
          uint64_t v30 = v10 + *(int *)(v11 + 20);
          uint64_t v31 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
LABEL_48:
          uint64_t v20 = *(int *)(v9 + 24);
          goto LABEL_83;
        case 4u:
          uint64_t v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v18))
          {
            uint64_t v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v19))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  uint64_t v40 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_61;
                case 5u:
                  swift_bridgeObjectRelease();
                  uint64_t v40 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_61:
                  uint64_t v41 = *(int *)(v40 + 20);
                  goto LABEL_63;
                case 9u:
                  swift_bridgeObjectRelease();
                  uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_63:
                  uint64_t v42 = v4 + v41;
                  uint64_t v43 = sub_253B07160();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
                  break;
                default:
                  break;
              }
            }
            uint64_t v44 = v4 + *(int *)(v18 + 20);
            uint64_t v45 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
          }
          uint64_t v46 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          uint64_t v47 = v4 + *(int *)(v46 + 20);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v47, 1, v18))
          {
            uint64_t v48 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v47, 1, v48))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  uint64_t v55 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_78;
                case 5u:
                  swift_bridgeObjectRelease();
                  uint64_t v55 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_78:
                  uint64_t v56 = *(int *)(v55 + 20);
                  goto LABEL_80;
                case 9u:
                  swift_bridgeObjectRelease();
                  uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_80:
                  uint64_t v57 = v47 + v56;
                  uint64_t v58 = sub_253B07160();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
                  break;
                default:
                  break;
              }
            }
            uint64_t v59 = v47 + *(int *)(v18 + 20);
            uint64_t v60 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
          }
          uint64_t v20 = *(int *)(v46 + 24);
          goto LABEL_83;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          goto LABEL_83;
        case 6u:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
          goto LABEL_41;
        case 7u:
          swift_bridgeObjectRelease();
          uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          uint64_t v10 = v4 + *(int *)(v9 + 20);
          uint64_t v11 = type metadata accessor for TranscriptProtoASTPickType(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11)) {
            goto LABEL_47;
          }
          goto LABEL_48;
        case 8u:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
          goto LABEL_41;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          goto LABEL_83;
        case 0xAu:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
          goto LABEL_41;
        case 0xBu:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
          goto LABEL_41;
        case 0xCu:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
          goto LABEL_41;
        case 0xDu:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
          goto LABEL_41;
        case 0xEu:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
          goto LABEL_41;
        case 0xFu:
        case 0x11u:
          uint64_t v7 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
          break;
        case 0x10u:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_41:
          uint64_t v20 = *(int *)(updated + 20);
LABEL_83:
          uint64_t v61 = v4 + v20;
          uint64_t v62 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
          break;
        default:
          break;
      }
    }
    uint64_t v63 = v4 + *(int *)(v5 + 20);
    uint64_t v64 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
  }
  uint64_t v65 = a1 + *(int *)(a2 + 24);
  uint64_t v66 = sub_253B07160();
  uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8);
  return v67(v65, v66);
}

void *initializeWithCopy for TranscriptProtoASTFlatAssignExpr(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE2310);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CE2320);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v14))
          {
            uint64_t v15 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v76 = v9[1];
                *uint64_t v8 = *v9;
                v8[1] = v76;
                swift_bridgeObjectRetain();
                goto LABEL_53;
              case 4u:
                *uint64_t v8 = *v9;
                uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                __dsto = (char *)v9 + v98;
                uint64_t v323 = (char *)v8 + v98;
                uint64_t v99 = sub_253B07160();
                int v279 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
                swift_bridgeObjectRetain();
                v279(v323, __dsto, v99);
                goto LABEL_53;
              case 5u:
                *uint64_t v8 = *v9;
                uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                __dstp = (char *)v9 + v100;
                uint64_t v324 = (char *)v8 + v100;
                uint64_t v101 = sub_253B07160();
                uint64_t v280 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
                swift_bridgeObjectRetain();
                v280(v324, __dstp, v101);
                goto LABEL_53;
              case 9u:
                *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
                uint64_t v102 = v9[2];
                v8[1] = v9[1];
                v8[2] = v102;
                uint64_t v103 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                __dstq = (char *)v9 + v103;
                uint64_t v325 = (char *)v8 + v103;
                uint64_t v104 = sub_253B07160();
                uint64_t v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
                swift_bridgeObjectRetain();
                v281(v325, __dstq, v104);
LABEL_53:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v14);
          }
          uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          uint64_t v106 = (char *)v8 + v105;
          uint64_t v107 = (char *)v9 + v105;
          uint64_t v108 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          goto LABEL_113;
        case 1u:
          *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
          uint64_t v311 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          uint64_t v16 = *(int *)(v311 + 20);
          uint64_t v17 = (void *)((char *)v8 + v16);
          uint64_t v18 = (void *)((char *)v9 + v16);
          uint64_t v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            __dstb = (int *)v19;
            uint64_t v77 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v77))
            {
              uint64_t v78 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v17, v18, *(void *)(*(void *)(v78 - 8) + 64));
              uint64_t v79 = v18;
            }
            else
            {
              uint64_t v261 = v18;
              uint64_t v277 = v77;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v92 = v18[1];
                  uint64_t v93 = (uint64_t)v17;
                  *uint64_t v17 = *v18;
                  v17[1] = v92;
                  swift_bridgeObjectRetain();
                  uint64_t v94 = v277;
                  goto LABEL_60;
                case 4u:
                  uint64_t v93 = (uint64_t)v17;
                  *uint64_t v17 = *v18;
                  uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v224 = (char *)v18 + v110;
                  int v239 = (char *)v17 + v110;
                  uint64_t v94 = v277;
                  uint64_t v212 = sub_253B07160();
                  uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v206(v239, v224, v212);
                  goto LABEL_60;
                case 5u:
                  uint64_t v93 = (uint64_t)v17;
                  *uint64_t v17 = *v18;
                  uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v225 = (char *)v18 + v111;
                  uint64_t v240 = (char *)v17 + v111;
                  uint64_t v94 = v277;
                  uint64_t v213 = sub_253B07160();
                  v207 = *(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v207(v240, v225, v213);
                  goto LABEL_60;
                case 9u:
                  uint64_t v93 = (uint64_t)v17;
                  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
                  uint64_t v112 = v18[2];
                  v17[1] = v18[1];
                  v17[2] = v112;
                  uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v226 = (char *)v18 + v113;
                  uint64_t v241 = (char *)v17 + v113;
                  uint64_t v94 = v277;
                  uint64_t v214 = sub_253B07160();
                  uint64_t v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v208(v241, v226, v214);
LABEL_60:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  uint64_t v109 = v18;
                  uint64_t v94 = v77;
                  uint64_t v93 = (uint64_t)v17;
                  memcpy(v17, v109, *(void *)(*(void *)(v277 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v93, 0, 1, v94);
              uint64_t v17 = (void *)v93;
              uint64_t v79 = v261;
            }
            uint64_t v114 = __dstb[5];
            uint64_t v115 = (char *)v17 + v114;
            uint64_t v282 = (char *)v79 + v114;
            uint64_t v116 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v115, v282, v116);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, (uint64_t)__dstb);
          }
          goto LABEL_83;
        case 2u:
          *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
          v312 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          uint64_t v21 = v312[5];
          uint64_t v22 = (void *)((char *)v8 + v21);
          uint64_t v23 = (void *)((char *)v9 + v21);
          __dst = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, (uint64_t)__dst))
          {
            uint64_t v24 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
            uint64_t v25 = (uint64_t)__dst;
          }
          else
          {
            uint64_t v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v80))
            {
              uint64_t v81 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v22, v23, *(void *)(*(void *)(v81 - 8) + 64));
              uint64_t v82 = v23;
              uint64_t v83 = (uint64_t)v22;
            }
            else
            {
              int v278 = v23;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v95 = v23[1];
                  *uint64_t v22 = *v23;
                  v22[1] = v95;
                  swift_bridgeObjectRetain();
                  goto LABEL_67;
                case 4u:
                  *uint64_t v22 = *v23;
                  uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v242 = (char *)v23 + v117;
                  uint64_t v254 = (char *)v22 + v117;
                  uint64_t v227 = sub_253B07160();
                  uint64_t v215 = *(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v215(v254, v242, v227);
                  goto LABEL_67;
                case 5u:
                  *uint64_t v22 = *v23;
                  uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v243 = (char *)v23 + v118;
                  v255 = (char *)v22 + v118;
                  uint64_t v228 = sub_253B07160();
                  uint64_t v216 = *(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v216(v255, v243, v228);
                  goto LABEL_67;
                case 9u:
                  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
                  uint64_t v119 = v23[2];
                  v22[1] = v23[1];
                  v22[2] = v119;
                  uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v244 = (char *)v23 + v120;
                  uint64_t v256 = (char *)v22 + v120;
                  uint64_t v229 = sub_253B07160();
                  uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v217(v256, v244, v229);
LABEL_67:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v22, v23, *(void *)(*(void *)(v80 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v80);
              uint64_t v83 = (uint64_t)v22;
              uint64_t v82 = v278;
            }
            uint64_t v25 = (uint64_t)__dst;
            uint64_t v121 = __dst[5];
            uint64_t v122 = v83 + v121;
            uint64_t v283 = (char *)v82 + v121;
            uint64_t v123 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v122, v283, v123);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v83, 0, 1, (uint64_t)__dst);
          }
          uint64_t v124 = v312[6];
          uint64_t v125 = (void *)((char *)v8 + v124);
          uint64_t v126 = (void *)((char *)v9 + v124);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v124, 1, v25))
          {
            uint64_t v127 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            uint64_t v128 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v126, 1, v128))
            {
              uint64_t v129 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              uint64_t v284 = v128;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v130 = v126[1];
                  *uint64_t v125 = *v126;
                  v125[1] = v130;
                  swift_bridgeObjectRetain();
                  goto LABEL_101;
                case 4u:
                  *uint64_t v125 = *v126;
                  uint64_t v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v248 = (char *)v126 + v170;
                  uint64_t v257 = (char *)v125 + v170;
                  uint64_t v171 = sub_253B07160();
                  uint64_t v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v233(v257, v248, v171);
                  uint64_t v128 = v284;
                  goto LABEL_101;
                case 5u:
                  *uint64_t v125 = *v126;
                  uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v249 = (char *)v126 + v172;
                  int v258 = (char *)v125 + v172;
                  uint64_t v173 = sub_253B07160();
                  uint64_t v234 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v234(v258, v249, v173);
                  uint64_t v128 = v284;
                  goto LABEL_101;
                case 9u:
                  *(_DWORD *)uint64_t v125 = *(_DWORD *)v126;
                  uint64_t v174 = v126[2];
                  v125[1] = v126[1];
                  v125[2] = v174;
                  uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v250 = (char *)v126 + v175;
                  uint64_t v259 = (char *)v125 + v175;
                  uint64_t v176 = sub_253B07160();
                  uint64_t v235 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v235(v259, v250, v176);
                  uint64_t v128 = v284;
LABEL_101:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v125, 0, 1, v128);
            }
            uint64_t v177 = __dst[5];
            v289 = (char *)v125 + v177;
            uint64_t v178 = (char *)v126 + v177;
            uint64_t v179 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v289, v178, v179);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v125, 0, 1, (uint64_t)__dst);
          }
          uint64_t v180 = v312[7];
          uint64_t v181 = (char *)v8 + v180;
          uint64_t v182 = (char *)v9 + v180;
          uint64_t v183 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v181, v182, v183);
          goto LABEL_113;
        case 3u:
          uint64_t v26 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v26;
          uint64_t v311 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          uint64_t v27 = *(int *)(v311 + 20);
          uint64_t v28 = (char *)v8 + v27;
          uint64_t v29 = (void *)((char *)v9 + v27);
          uint64_t v30 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
          {
            uint64_t v31 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            __dstc = v28;
            uint64_t v84 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v84))
            {
              uint64_t v85 = sub_253462A5C(&qword_269CDCBA8);
              uint64_t v86 = (uint64_t)__dstc;
              memcpy(__dstc, v29, *(void *)(*(void *)(v85 - 8) + 64));
            }
            else
            {
              uint64_t v262 = v84;
              uint64_t v86 = (uint64_t)__dstc;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v96 = v29[1];
                  void *__dstc = *v29;
                  __dstc[1] = v96;
                  swift_bridgeObjectRetain();
                  goto LABEL_80;
                case 4u:
                  void *__dstc = *v29;
                  uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v230 = (char *)v29 + v131;
                  uint64_t v245 = (char *)__dstc + v131;
                  uint64_t v132 = v30;
                  uint64_t v133 = sub_253B07160();
                  int v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v134 = v133;
                  uint64_t v30 = v132;
                  uint64_t v86 = (uint64_t)__dstc;
                  v218(v245, v230, v134);
                  goto LABEL_80;
                case 5u:
                  void *__dstc = *v29;
                  uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v231 = (char *)v29 + v135;
                  uint64_t v246 = (char *)__dstc + v135;
                  uint64_t v136 = v30;
                  uint64_t v137 = sub_253B07160();
                  int v219 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v138 = v137;
                  uint64_t v30 = v136;
                  uint64_t v86 = (uint64_t)__dstc;
                  v219(v246, v231, v138);
                  goto LABEL_80;
                case 9u:
                  *(_DWORD *)__dstc = *(_DWORD *)v29;
                  uint64_t v139 = v29[2];
                  __dstc[1] = v29[1];
                  __dstc[2] = v139;
                  uint64_t v140 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v232 = (char *)v29 + v140;
                  uint64_t v247 = (char *)__dstc + v140;
                  uint64_t v141 = v30;
                  uint64_t v142 = sub_253B07160();
                  uint64_t v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v143 = v142;
                  uint64_t v30 = v141;
                  uint64_t v86 = (uint64_t)__dstc;
                  v220(v247, v232, v143);
LABEL_80:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  uint64_t v86 = (uint64_t)__dstc;
                  memcpy(__dstc, v29, *(void *)(*(void *)(v262 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v86, 0, 1, v262);
            }
            uint64_t v285 = v30;
            uint64_t v144 = *(int *)(v30 + 20);
            uint64_t v145 = v86 + v144;
            uint64_t v146 = (char *)v29 + v144;
            uint64_t v147 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v86, 0, 1, v285);
          }
          goto LABEL_83;
        case 4u:
          uint64_t v313 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v313))
          {
            uint64_t v32 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v8, v9, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            uint64_t v87 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v87))
            {
              uint64_t v88 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v8, v9, *(void *)(*(void *)(v88 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v97 = v9[1];
                  *uint64_t v8 = *v9;
                  v8[1] = v97;
                  swift_bridgeObjectRetain();
                  goto LABEL_88;
                case 4u:
                  *uint64_t v8 = *v9;
                  uint64_t v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v286 = (char *)v9 + v152;
                  __dstr = (char *)v8 + v152;
                  uint64_t v153 = sub_253B07160();
                  uint64_t v263 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v263(__dstr, v286, v153);
                  goto LABEL_88;
                case 5u:
                  *uint64_t v8 = *v9;
                  uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v287 = (char *)v9 + v154;
                  __dsts = (char *)v8 + v154;
                  uint64_t v155 = sub_253B07160();
                  uint64_t v264 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v264(__dsts, v287, v155);
                  goto LABEL_88;
                case 9u:
                  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
                  uint64_t v156 = v9[2];
                  v8[1] = v9[1];
                  v8[2] = v156;
                  uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v288 = (char *)v9 + v157;
                  __dstt = (char *)v8 + v157;
                  uint64_t v158 = sub_253B07160();
                  uint64_t v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v265(__dstt, v288, v158);
LABEL_88:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v8, v9, *(void *)(*(void *)(v87 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v87);
            }
            uint64_t v159 = *(int *)(v313 + 20);
            uint64_t v160 = (char *)v8 + v159;
            uint64_t v161 = (char *)v9 + v159;
            uint64_t v162 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v313);
          }
          __dstd = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          uint64_t v163 = __dstd[5];
          uint64_t v164 = (void *)((char *)v8 + v163);
          uint64_t v165 = (void *)((char *)v9 + v163);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v163, 1, v313))
          {
            uint64_t v166 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            uint64_t v167 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v165, 1, v167))
            {
              uint64_t v168 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v164, v165, *(void *)(*(void *)(v168 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v169 = v165[1];
                  *uint64_t v164 = *v165;
                  v164[1] = v169;
                  swift_bridgeObjectRetain();
                  goto LABEL_109;
                case 4u:
                  *uint64_t v164 = *v165;
                  uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v236 = (char *)v165 + v184;
                  int v251 = (char *)v164 + v184;
                  uint64_t v221 = sub_253B07160();
                  uint64_t v209 = *(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v209(v251, v236, v221);
                  goto LABEL_109;
                case 5u:
                  *uint64_t v164 = *v165;
                  uint64_t v185 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v237 = (char *)v165 + v185;
                  int v252 = (char *)v164 + v185;
                  uint64_t v222 = sub_253B07160();
                  v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v210(v252, v237, v222);
                  goto LABEL_109;
                case 9u:
                  *(_DWORD *)uint64_t v164 = *(_DWORD *)v165;
                  uint64_t v186 = v165[2];
                  v164[1] = v165[1];
                  v164[2] = v186;
                  uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  int v238 = (char *)v165 + v187;
                  long long v253 = (char *)v164 + v187;
                  uint64_t v223 = sub_253B07160();
                  uint64_t v211 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v211(v253, v238, v223);
LABEL_109:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v164, v165, *(void *)(*(void *)(v167 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v164, 0, 1, v167);
            }
            uint64_t v188 = *(int *)(v313 + 20);
            uint64_t v189 = (uint64_t)v164;
            uint64_t v190 = (char *)v164 + v188;
            uint64_t v191 = (char *)v165 + v188;
            uint64_t v192 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v189, 0, 1, v313);
          }
          uint64_t v193 = __dstd[6];
          uint64_t v194 = (char *)v8 + v193;
          uint64_t v195 = (char *)v9 + v193;
          uint64_t v196 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
          goto LABEL_113;
        case 5u:
          uint64_t v33 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v33;
          v8[2] = v9[2];
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          uint64_t v266 = (char *)v9 + v34;
          __dste = (char *)v8 + v34;
          uint64_t v35 = sub_253B07160();
          uint64_t v260 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v260(__dste, v266, v35);
          goto LABEL_113;
        case 6u:
          *uint64_t v8 = *v9;
          uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          uint64_t v267 = (char *)v9 + v36;
          __dstf = (char *)v8 + v36;
          uint64_t v37 = sub_253B07160();
          uint64_t v314 = v12;
          uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v38(__dstf, v267, v37);
          uint64_t v12 = v314;
          goto LABEL_113;
        case 7u:
          uint64_t v39 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v39;
          uint64_t v40 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          uint64_t v41 = *(int *)(v40 + 20);
          __dsta = (char *)v8 + v41;
          uint64_t v311 = v40;
          uint64_t v42 = (char *)v9 + v41;
          uint64_t v43 = type metadata accessor for TranscriptProtoASTPickType(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = sub_253462A5C(&qword_269CE2268);
            memcpy(__dsta, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            *(void *)__dsta = *(void *)v42;
            __dsta[8] = v42[8];
            uint64_t v89 = *(int *)(v43 + 20);
            uint64_t v276 = &__dsta[v89];
            uint64_t v90 = &v42[v89];
            uint64_t v91 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 16))(v276, v90, v91);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v43);
          }
LABEL_83:
          uint64_t v148 = *(int *)(v311 + 24);
          uint64_t v149 = (char *)v8 + v148;
          uint64_t v150 = (char *)v9 + v148;
          uint64_t v151 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v149, v150, v151);
          goto LABEL_113;
        case 8u:
          uint64_t v45 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v45;
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v268 = (char *)v9 + v46;
          __dstg = (char *)v8 + v46;
          uint64_t v47 = sub_253B07160();
          uint64_t v315 = v12;
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(__dstg, v268, v47);
          uint64_t v12 = v315;
          goto LABEL_113;
        case 9u:
          uint64_t v49 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v49;
          *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
          uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          uint64_t v269 = (char *)v9 + v50;
          __dsth = (char *)v8 + v50;
          uint64_t v51 = sub_253B07160();
          uint64_t v316 = v12;
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(__dsth, v269, v51);
          uint64_t v12 = v316;
          goto LABEL_113;
        case 0xAu:
          uint64_t v53 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v53;
          uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          int v270 = (char *)v9 + v54;
          __dsti = (char *)v8 + v54;
          uint64_t v55 = sub_253B07160();
          uint64_t v317 = v12;
          uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(__dsti, v270, v55);
          uint64_t v12 = v317;
          goto LABEL_113;
        case 0xBu:
          uint64_t v57 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v57;
          uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          int v271 = (char *)v9 + v58;
          __dstj = (char *)v8 + v58;
          uint64_t v59 = sub_253B07160();
          uint64_t v318 = v12;
          uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
          swift_bridgeObjectRetain();
          v60(__dstj, v271, v59);
          uint64_t v12 = v318;
          goto LABEL_113;
        case 0xCu:
          *uint64_t v8 = *v9;
          uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          uint64_t v272 = (char *)v9 + v61;
          __dstk = (char *)v8 + v61;
          uint64_t v62 = sub_253B07160();
          uint64_t v319 = v12;
          uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v63(__dstk, v272, v62);
          uint64_t v12 = v319;
          goto LABEL_113;
        case 0xDu:
          uint64_t v64 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v64;
          uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          uint64_t v273 = (char *)v9 + v65;
          __dstl = (char *)v8 + v65;
          uint64_t v66 = sub_253B07160();
          uint64_t v320 = v12;
          uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
          swift_bridgeObjectRetain();
          v67(__dstl, v273, v66);
          uint64_t v12 = v320;
          goto LABEL_113;
        case 0xEu:
          uint64_t v68 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v68;
          uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          uint64_t v274 = (char *)v9 + v69;
          __dstm = (char *)v8 + v69;
          uint64_t v70 = sub_253B07160();
          uint64_t v321 = v12;
          uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
          swift_bridgeObjectRetain();
          v71(__dstm, v274, v70);
          uint64_t v12 = v321;
          goto LABEL_113;
        case 0xFu:
        case 0x11u:
          uint64_t v72 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v8, v9, v72);
          goto LABEL_113;
        case 0x10u:
          *uint64_t v8 = *v9;
          uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v275 = (char *)v9 + v73;
          __dstn = (char *)v8 + v73;
          uint64_t v74 = sub_253B07160();
          uint64_t v322 = v12;
          uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(__dstn, v275, v74);
          uint64_t v12 = v322;
LABEL_113:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v12);
    }
    uint64_t v197 = *(int *)(v10 + 20);
    uint64_t v198 = (char *)v8 + v197;
    uint64_t v199 = (char *)v9 + v197;
    uint64_t v200 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v201 = *(int *)(a3 + 24);
  uint64_t v202 = (char *)a1 + v201;
  uint64_t v203 = (char *)a2 + v201;
  uint64_t v204 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
  return a1;
}

void *assignWithCopy for TranscriptProtoASTFlatAssignExpr(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v18))
            {
              uint64_t v19 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  void *v7 = *v8;
                  v7[1] = v8[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_160;
                case 4u:
                  void *v7 = *v8;
                  uint64_t v240 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  __dstbw = (char *)v8 + v240;
                  v878 = (char *)v7 + v240;
                  uint64_t v241 = sub_253B07160();
                  v747 = *(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v747(v878, __dstbw, v241);
                  goto LABEL_160;
                case 5u:
                  void *v7 = *v8;
                  uint64_t v242 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  __dstbx = (char *)v8 + v242;
                  v879 = (char *)v7 + v242;
                  uint64_t v243 = sub_253B07160();
                  v748 = *(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v748(v879, __dstbx, v243);
                  goto LABEL_160;
                case 9u:
                  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
                  v7[1] = v8[1];
                  v7[2] = v8[2];
                  uint64_t v244 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  __dstby = (char *)v8 + v244;
                  v880 = (char *)v7 + v244;
                  uint64_t v245 = sub_253B07160();
                  v749 = *(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v749(v880, __dstby, v245);
LABEL_160:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v18);
            }
            uint64_t v246 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            uint64_t v247 = (char *)v7 + v246;
            v248 = (char *)v8 + v246;
            uint64_t v249 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 16))(v247, v248, v249);
            goto LABEL_287;
          case 1u:
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v76 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            uint64_t v77 = *(int *)(v76 + 20);
            v848 = (void *)((char *)v7 + v77);
            uint64_t v78 = (void *)((char *)v8 + v77);
            uint64_t v79 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v79))
            {
              uint64_t v80 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v848, v78, *(void *)(*(void *)(v80 - 8) + 64));
            }
            else
            {
              __dsti = (int *)v79;
              uint64_t v185 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v737 = (void *)v76;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v185))
              {
                uint64_t v186 = sub_253462A5C(&qword_269CDCBA8);
                uint64_t v187 = (uint64_t)v848;
                memcpy(v848, v78, *(void *)(*(void *)(v186 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v187 = (uint64_t)v848;
                    void *v848 = *v78;
                    v848[1] = v78[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_234;
                  case 4u:
                    void *v848 = *v78;
                    uint64_t v350 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v613 = (char *)v78 + v350;
                    uint64_t v652 = (char *)v848 + v350;
                    uint64_t v571 = sub_253B07160();
                    int v541 = *(void (**)(char *, char *, uint64_t))(*(void *)(v571 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v541(v652, v613, v571);
                    uint64_t v187 = (uint64_t)v848;
                    goto LABEL_234;
                  case 5u:
                    void *v848 = *v78;
                    uint64_t v351 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v614 = (char *)v78 + v351;
                    uint64_t v653 = (char *)v848 + v351;
                    uint64_t v572 = sub_253B07160();
                    uint64_t v542 = *(void (**)(char *, char *, uint64_t))(*(void *)(v572 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v542(v653, v614, v572);
                    uint64_t v187 = (uint64_t)v848;
                    goto LABEL_234;
                  case 9u:
                    *(_DWORD *)v848 = *(_DWORD *)v78;
                    v848[1] = v78[1];
                    v848[2] = v78[2];
                    uint64_t v352 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v615 = (char *)v78 + v352;
                    v654 = (char *)v848 + v352;
                    uint64_t v573 = sub_253B07160();
                    uint64_t v543 = *(void (**)(char *, char *, uint64_t))(*(void *)(v573 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v543(v654, v615, v573);
                    uint64_t v187 = (uint64_t)v848;
LABEL_234:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    uint64_t v187 = (uint64_t)v848;
                    memcpy(v848, v78, *(void *)(*(void *)(v185 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v187, 0, 1, v185);
              }
              uint64_t v353 = __dsti[5];
              uint64_t v354 = v187 + v353;
              uint64_t v355 = (char *)v78 + v353;
              uint64_t v356 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v354, v355, v356);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v187, 0, 1, (uint64_t)__dsti);
              uint64_t v76 = (uint64_t)v737;
            }
            goto LABEL_286;
          case 2u:
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v81 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            uint64_t v82 = *(int *)(v81 + 20);
            uint64_t v83 = (char *)v7 + v82;
            uint64_t v84 = (void *)((char *)v8 + v82);
            v849 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            __dsta = (int *)v81;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, (uint64_t)v849))
            {
              uint64_t v85 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
              uint64_t v86 = (uint64_t)v849;
            }
            else
            {
              v738 = v83;
              uint64_t v188 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v188))
              {
                uint64_t v189 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v738, v84, *(void *)(*(void *)(v189 - 8) + 64));
                uint64_t v190 = v84;
                uint64_t v191 = (uint64_t)v738;
                uint64_t v86 = (uint64_t)v849;
              }
              else
              {
                v687 = v84;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v226 = (uint64_t)v738;
                    void *v738 = *v84;
                    v738[1] = v84[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_241;
                  case 4u:
                    uint64_t v226 = (uint64_t)v738;
                    void *v738 = *v84;
                    uint64_t v357 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v616 = (char *)v84 + v357;
                    v655 = (char *)v738 + v357;
                    uint64_t v574 = sub_253B07160();
                    uint64_t v544 = *(void (**)(char *, char *, uint64_t))(*(void *)(v574 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v544(v655, v616, v574);
                    goto LABEL_241;
                  case 5u:
                    uint64_t v226 = (uint64_t)v738;
                    void *v738 = *v84;
                    uint64_t v358 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v617 = (char *)v84 + v358;
                    v656 = (char *)v738 + v358;
                    uint64_t v575 = sub_253B07160();
                    v545 = *(void (**)(char *, char *, uint64_t))(*(void *)(v575 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v545(v656, v617, v575);
                    goto LABEL_241;
                  case 9u:
                    uint64_t v226 = (uint64_t)v738;
                    *(_DWORD *)v738 = *(_DWORD *)v84;
                    v738[1] = v84[1];
                    v738[2] = v84[2];
                    uint64_t v359 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v618 = (char *)v84 + v359;
                    v657 = (char *)v738 + v359;
                    uint64_t v576 = sub_253B07160();
                    v546 = *(void (**)(char *, char *, uint64_t))(*(void *)(v576 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v546(v657, v618, v576);
LABEL_241:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    uint64_t v226 = (uint64_t)v738;
                    memcpy(v738, v84, *(void *)(*(void *)(v188 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v226, 0, 1, v188);
                uint64_t v191 = v226;
                uint64_t v86 = (uint64_t)v849;
                uint64_t v190 = v687;
              }
              uint64_t v360 = *(int *)(v86 + 20);
              uint64_t v361 = v191 + v360;
              v760 = (char *)v190 + v360;
              uint64_t v362 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v362 - 8) + 16))(v361, v760, v362);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v191, 0, 1, v86);
              uint64_t v81 = (uint64_t)__dsta;
            }
            uint64_t v363 = *(int *)(v81 + 24);
            uint64_t v364 = (void *)((char *)v7 + v363);
            int v365 = (void *)((char *)v8 + v363);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v363, 1, v86))
            {
              uint64_t v366 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v364, v365, *(void *)(*(void *)(v366 - 8) + 64));
            }
            else
            {
              uint64_t v367 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v365, 1, v367))
              {
                uint64_t v368 = sub_253462A5C(&qword_269CDCBA8);
                int v369 = (char *)v364;
                memcpy(v364, v365, *(void *)(*(void *)(v368 - 8) + 64));
                uint64_t v370 = v365;
                long long v371 = v849;
              }
              else
              {
                v761 = v365;
                v696 = (void *)v367;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    int v369 = (char *)v364;
                    *uint64_t v364 = *v365;
                    v364[1] = v365[1];
                    swift_bridgeObjectRetain();
                    uint64_t v372 = (uint64_t)v696;
                    goto LABEL_275;
                  case 4u:
                    *uint64_t v364 = *v365;
                    uint64_t v412 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v661 = (char *)v364 + v412;
                    long long v413 = (char *)v365 + v412;
                    uint64_t v414 = sub_253B07160();
                    v622 = *(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v415 = v414;
                    int v369 = (char *)v364;
                    v622(v661, v413, v415);
                    uint64_t v372 = (uint64_t)v696;
                    goto LABEL_275;
                  case 5u:
                    *uint64_t v364 = *v365;
                    uint64_t v416 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v662 = (char *)v364 + v416;
                    uint64_t v417 = (char *)v365 + v416;
                    uint64_t v418 = sub_253B07160();
                    v623 = *(void (**)(char *, char *, uint64_t))(*(void *)(v418 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v419 = v418;
                    int v369 = (char *)v364;
                    v623(v662, v417, v419);
                    uint64_t v372 = (uint64_t)v696;
                    goto LABEL_275;
                  case 9u:
                    *(_DWORD *)uint64_t v364 = *(_DWORD *)v365;
                    v364[1] = v365[1];
                    v364[2] = v365[2];
                    uint64_t v420 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    uint64_t v663 = (char *)v364 + v420;
                    uint64_t v421 = (char *)v365 + v420;
                    uint64_t v422 = sub_253B07160();
                    v624 = *(void (**)(char *, char *, uint64_t))(*(void *)(v422 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v423 = v422;
                    int v369 = (char *)v364;
                    v624(v663, v421, v423);
                    uint64_t v372 = (uint64_t)v696;
LABEL_275:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    size_t v410 = *(void *)(*(void *)(v367 - 8) + 64);
                    uint64_t v411 = v367;
                    int v369 = (char *)v364;
                    uint64_t v372 = v411;
                    memcpy(v369, v365, v410);
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v369, 0, 1, v372);
                long long v371 = v849;
                uint64_t v370 = v761;
              }
              uint64_t v424 = v371[5];
              uint64_t v425 = &v369[v424];
              uint64_t v426 = (char *)v370 + v424;
              uint64_t v427 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 16))(v425, v426, v427);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v369, 0, 1, (uint64_t)v849);
            }
            uint64_t v428 = __dsta[7];
            uint64_t v429 = (char *)v7 + v428;
            v430 = (char *)v8 + v428;
            uint64_t v431 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v431 - 8) + 16))(v429, v430, v431);
            goto LABEL_287;
          case 3u:
            void *v7 = *v8;
            v7[1] = v8[1];
            v850 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            uint64_t v87 = v850[5];
            uint64_t v88 = (char *)v7 + v87;
            uint64_t v89 = (void *)((char *)v8 + v87);
            uint64_t v90 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
            {
              uint64_t v91 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
              __dstj = v88;
              uint64_t v192 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v192))
              {
                uint64_t v193 = sub_253462A5C(&qword_269CDCBA8);
                uint64_t v194 = (uint64_t)__dstj;
                memcpy(__dstj, v89, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                v688 = (void *)v192;
                uint64_t v194 = (uint64_t)__dstj;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    void *__dstj = *v89;
                    __dstj[1] = v89[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_254;
                  case 4u:
                    void *__dstj = *v89;
                    uint64_t v373 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v619 = (char *)v89 + v373;
                    v658 = (char *)__dstj + v373;
                    uint64_t v374 = v90;
                    uint64_t v375 = sub_253B07160();
                    v577 = *(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v376 = v375;
                    uint64_t v90 = v374;
                    uint64_t v194 = (uint64_t)__dstj;
                    v577(v658, v619, v376);
                    goto LABEL_254;
                  case 5u:
                    void *__dstj = *v89;
                    uint64_t v377 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v620 = (char *)v89 + v377;
                    v659 = (char *)__dstj + v377;
                    uint64_t v378 = v90;
                    uint64_t v379 = sub_253B07160();
                    v578 = *(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v380 = v379;
                    uint64_t v90 = v378;
                    uint64_t v194 = (uint64_t)__dstj;
                    v578(v659, v620, v380);
                    goto LABEL_254;
                  case 9u:
                    *(_DWORD *)__dstj = *(_DWORD *)v89;
                    __dstj[1] = v89[1];
                    __dstj[2] = v89[2];
                    uint64_t v381 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v621 = (char *)v89 + v381;
                    v660 = (char *)__dstj + v381;
                    uint64_t v382 = v90;
                    uint64_t v383 = sub_253B07160();
                    v579 = *(void (**)(char *, char *, uint64_t))(*(void *)(v383 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v384 = v383;
                    uint64_t v90 = v382;
                    uint64_t v194 = (uint64_t)__dstj;
                    v579(v660, v621, v384);
LABEL_254:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    uint64_t v194 = (uint64_t)__dstj;
                    memcpy(__dstj, v89, *(void *)(*(v688 - 1) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v194, 0, 1, (uint64_t)v688);
              }
              v762 = (void *)v90;
              uint64_t v385 = *(int *)(v90 + 20);
              uint64_t v386 = v194 + v385;
              int v387 = (char *)v89 + v385;
              uint64_t v388 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v388 - 8) + 16))(v386, v387, v388);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v194, 0, 1, (uint64_t)v762);
            }
            uint64_t v389 = v850[6];
            uint64_t v390 = (char *)v7 + v389;
            uint64_t v391 = (char *)v8 + v389;
            uint64_t v392 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v392 - 8) + 16))(v390, v391, v392);
            goto LABEL_287;
          case 4u:
            v851 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v851))
            {
              uint64_t v92 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v7, v8, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              uint64_t v195 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v195))
              {
                uint64_t v196 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v7, v8, *(void *)(*(void *)(v196 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    void *v7 = *v8;
                    v7[1] = v8[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_262;
                  case 4u:
                    void *v7 = *v8;
                    uint64_t v393 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v763 = (char *)v8 + v393;
                    __dstcf = (char *)v7 + v393;
                    uint64_t v394 = sub_253B07160();
                    v697 = *(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v697(__dstcf, v763, v394);
                    goto LABEL_262;
                  case 5u:
                    void *v7 = *v8;
                    uint64_t v395 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v764 = (char *)v8 + v395;
                    __dstcg = (char *)v7 + v395;
                    uint64_t v396 = sub_253B07160();
                    v698 = *(void (**)(char *, char *, uint64_t))(*(void *)(v396 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v698(__dstcg, v764, v396);
                    goto LABEL_262;
                  case 9u:
                    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
                    v7[1] = v8[1];
                    v7[2] = v8[2];
                    uint64_t v397 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v765 = (char *)v8 + v397;
                    __dstch = (char *)v7 + v397;
                    uint64_t v398 = sub_253B07160();
                    v699 = *(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v699(__dstch, v765, v398);
LABEL_262:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v7, v8, *(void *)(*(void *)(v195 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v195);
              }
              uint64_t v399 = v851[5];
              uint64_t v400 = (char *)v7 + v399;
              uint64_t v401 = (char *)v8 + v399;
              uint64_t v402 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v402 - 8) + 16))(v400, v401, v402);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v851);
            }
            uint64_t v76 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            uint64_t v403 = *(int *)(v76 + 20);
            uint64_t v404 = (char *)v7 + v403;
            uint64_t v405 = (void *)((char *)v8 + v403);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v403, 1, (uint64_t)v851))
            {
              uint64_t v406 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v404, v405, *(void *)(*(void *)(v406 - 8) + 64));
            }
            else
            {
              v766 = v404;
              uint64_t v407 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              __dstn = (void *)v76;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v405, 1, v407))
              {
                uint64_t v408 = sub_253462A5C(&qword_269CDCBA8);
                uint64_t v409 = (uint64_t)v766;
                memcpy(v766, v405, *(void *)(*(void *)(v408 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    uint64_t v409 = (uint64_t)v766;
                    void *v766 = *v405;
                    v766[1] = v405[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_283;
                  case 4u:
                    uint64_t v409 = (uint64_t)v766;
                    void *v766 = *v405;
                    uint64_t v432 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v580 = (char *)v405 + v432;
                    v625 = (char *)v766 + v432;
                    uint64_t v547 = sub_253B07160();
                    v529 = *(void (**)(char *, char *, uint64_t))(*(void *)(v547 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v529(v625, v580, v547);
                    goto LABEL_283;
                  case 5u:
                    uint64_t v409 = (uint64_t)v766;
                    void *v766 = *v405;
                    uint64_t v433 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v581 = (char *)v405 + v433;
                    v626 = (char *)v766 + v433;
                    uint64_t v548 = sub_253B07160();
                    uint64_t v530 = *(void (**)(char *, char *, uint64_t))(*(void *)(v548 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v530(v626, v581, v548);
                    goto LABEL_283;
                  case 9u:
                    uint64_t v409 = (uint64_t)v766;
                    *(_DWORD *)v766 = *(_DWORD *)v405;
                    v766[1] = v405[1];
                    v766[2] = v405[2];
                    uint64_t v434 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v582 = (char *)v405 + v434;
                    v627 = (char *)v766 + v434;
                    uint64_t v549 = sub_253B07160();
                    v531 = *(void (**)(char *, char *, uint64_t))(*(void *)(v549 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v531(v627, v582, v549);
LABEL_283:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    uint64_t v409 = (uint64_t)v766;
                    memcpy(v766, v405, *(void *)(*(void *)(v407 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v409, 0, 1, v407);
              }
              uint64_t v435 = v851[5];
              uint64_t v436 = v409 + v435;
              uint64_t v437 = (char *)v405 + v435;
              uint64_t v438 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v438 - 8) + 16))(v436, v437, v438);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v409, 0, 1, (uint64_t)v851);
              uint64_t v76 = (uint64_t)__dstn;
            }
LABEL_286:
            uint64_t v439 = *(int *)(v76 + 24);
            uint64_t v440 = (char *)v7 + v439;
            uint64_t v441 = (char *)v8 + v439;
            uint64_t v442 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v442 - 8) + 16))(v440, v441, v442);
            goto LABEL_287;
          case 5u:
            void *v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            __dstz = (char *)v8 + v93;
            v852 = (char *)v7 + v93;
            uint64_t v94 = sub_253B07160();
            v715 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v715(v852, __dstz, v94);
            goto LABEL_287;
          case 6u:
            void *v7 = *v8;
            uint64_t v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            __dstba = (char *)v8 + v95;
            v853 = (char *)v7 + v95;
            uint64_t v96 = sub_253B07160();
            v716 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
            swift_bridgeObjectRetain();
            v716(v853, __dstba, v96);
            goto LABEL_287;
          case 7u:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v97 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            uint64_t v98 = *(int *)(v97 + 20);
            __dstb = (int *)v97;
            v854 = (char *)v7 + v98;
            uint64_t v99 = (char *)v8 + v98;
            uint64_t v100 = type metadata accessor for TranscriptProtoASTPickType(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v100))
            {
              uint64_t v101 = sub_253462A5C(&qword_269CE2268);
              memcpy(v854, v99, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v197 = *(void *)v99;
              v854[8] = v99[8];
              *(void *)v854 = v197;
              uint64_t v198 = *(int *)(v100 + 20);
              v739 = &v854[v198];
              uint64_t v199 = &v99[v198];
              uint64_t v200 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v200 - 8) + 16))(v739, v199, v200);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v854, 0, 1, v100);
            }
            uint64_t v201 = __dstb[6];
            uint64_t v202 = (char *)v7 + v201;
            uint64_t v203 = (char *)v8 + v201;
            uint64_t v204 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
            goto LABEL_287;
          case 8u:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            v717 = (char *)v8 + v102;
            __dstbb = (char *)v7 + v102;
            uint64_t v103 = sub_253B07160();
            v855 = (void *)v15;
            uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
            swift_bridgeObjectRetain();
            v104(__dstbb, v717, v103);
            uint64_t v15 = (uint64_t)v855;
            goto LABEL_287;
          case 9u:
            void *v7 = *v8;
            v7[1] = v8[1];
            *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
            *((unsigned char *)v7 + 17) = *((unsigned char *)v8 + 17);
            uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            v718 = (char *)v8 + v105;
            __dstbc = (char *)v7 + v105;
            uint64_t v106 = sub_253B07160();
            v856 = (void *)v15;
            uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
            swift_bridgeObjectRetain();
            v107(__dstbc, v718, v106);
            uint64_t v15 = (uint64_t)v856;
            goto LABEL_287;
          case 0xAu:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            v719 = (char *)v8 + v108;
            __dstbd = (char *)v7 + v108;
            uint64_t v109 = sub_253B07160();
            v857 = (void *)v15;
            uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
            swift_bridgeObjectRetain();
            v110(__dstbd, v719, v109);
            uint64_t v15 = (uint64_t)v857;
            goto LABEL_287;
          case 0xBu:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            v720 = (char *)v8 + v111;
            __dstbe = (char *)v7 + v111;
            uint64_t v112 = sub_253B07160();
            v858 = (void *)v15;
            uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
            swift_bridgeObjectRetain();
            v113(__dstbe, v720, v112);
            uint64_t v15 = (uint64_t)v858;
            goto LABEL_287;
          case 0xCu:
            void *v7 = *v8;
            uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            v721 = (char *)v8 + v114;
            __dstbf = (char *)v7 + v114;
            uint64_t v115 = sub_253B07160();
            v859 = (void *)v15;
            uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
            swift_bridgeObjectRetain();
            v116(__dstbf, v721, v115);
            uint64_t v15 = (uint64_t)v859;
            goto LABEL_287;
          case 0xDu:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            v722 = (char *)v8 + v117;
            __dstbg = (char *)v7 + v117;
            uint64_t v118 = sub_253B07160();
            v860 = (void *)v15;
            uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
            swift_bridgeObjectRetain();
            v119(__dstbg, v722, v118);
            uint64_t v15 = (uint64_t)v860;
            goto LABEL_287;
          case 0xEu:
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            v723 = (char *)v8 + v120;
            __dstbh = (char *)v7 + v120;
            uint64_t v121 = sub_253B07160();
            v861 = (void *)v15;
            uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
            swift_bridgeObjectRetain();
            v122(__dstbh, v723, v121);
            uint64_t v15 = (uint64_t)v861;
            goto LABEL_287;
          case 0xFu:
          case 0x11u:
            uint64_t v123 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v123 - 8) + 16))(v7, v8, v123);
            goto LABEL_287;
          case 0x10u:
            void *v7 = *v8;
            uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            v724 = (char *)v8 + v124;
            __dstbi = (char *)v7 + v124;
            uint64_t v125 = sub_253B07160();
            v862 = (void *)v15;
            uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
            swift_bridgeObjectRetain();
            v126(__dstbi, v724, v125);
            uint64_t v15 = (uint64_t)v862;
LABEL_287:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_346:
        uint64_t v517 = *(int *)(v9 + 20);
        v518 = (char *)v7 + v517;
        uint64_t v519 = (char *)v8 + v517;
        uint64_t v520 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v520 - 8) + 24))(v518, v519, v520);
        goto LABEL_347;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v23 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v23))
              {
                uint64_t v24 = sub_253462A5C(&qword_269CDCBA8);
                memcpy(v7, v8, *(void *)(*(void *)(v24 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    void *v7 = *v8;
                    v7[1] = v8[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_227;
                  case 4u:
                    void *v7 = *v8;
                    uint64_t v340 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    __dstcc = (char *)v8 + v340;
                    v881 = (char *)v7 + v340;
                    uint64_t v341 = sub_253B07160();
                    v757 = *(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v757(v881, __dstcc, v341);
                    goto LABEL_227;
                  case 5u:
                    void *v7 = *v8;
                    uint64_t v342 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    __dstcd = (char *)v8 + v342;
                    v882 = (char *)v7 + v342;
                    uint64_t v343 = sub_253B07160();
                    v758 = *(void (**)(char *, char *, uint64_t))(*(void *)(v343 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v758(v882, __dstcd, v343);
                    goto LABEL_227;
                  case 9u:
                    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
                    v7[1] = v8[1];
                    v7[2] = v8[2];
                    uint64_t v344 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    __dstce = (char *)v8 + v344;
                    v883 = (char *)v7 + v344;
                    uint64_t v345 = sub_253B07160();
                    v759 = *(void (**)(char *, char *, uint64_t))(*(void *)(v345 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v759(v883, __dstce, v345);
LABEL_227:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v23);
              }
              uint64_t v346 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
              uint64_t v347 = (char *)v7 + v346;
              uint64_t v348 = (char *)v8 + v346;
              uint64_t v349 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 16))(v347, v348, v349);
              break;
            case 1u:
              *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
              uint64_t v142 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
              uint64_t v143 = *(int *)(v142 + 20);
              __dstf = (void *)((char *)v7 + v143);
              uint64_t v144 = (void *)((char *)v8 + v143);
              uint64_t v145 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v144, 1, v145))
              {
                uint64_t v146 = sub_253462A5C(&qword_269CE22E0);
                memcpy(__dstf, v144, *(void *)(*(void *)(v146 - 8) + 64));
              }
              else
              {
                v685 = (int *)v145;
                uint64_t v206 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v740 = (void *)v142;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v144, 1, v206))
                {
                  uint64_t v207 = sub_253462A5C(&qword_269CDCBA8);
                  uint64_t v208 = (uint64_t)__dstf;
                  memcpy(__dstf, v144, *(void *)(*(void *)(v207 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      uint64_t v208 = (uint64_t)__dstf;
                      void *__dstf = *v144;
                      __dstf[1] = v144[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_293;
                    case 4u:
                      void *__dstf = *v144;
                      uint64_t v443 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v628 = (char *)v144 + v443;
                      v664 = (char *)__dstf + v443;
                      uint64_t v583 = sub_253B07160();
                      v550 = *(void (**)(char *, char *, uint64_t))(*(void *)(v583 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v550(v664, v628, v583);
                      uint64_t v208 = (uint64_t)__dstf;
                      goto LABEL_293;
                    case 5u:
                      void *__dstf = *v144;
                      uint64_t v444 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v629 = (char *)v144 + v444;
                      v665 = (char *)__dstf + v444;
                      uint64_t v584 = sub_253B07160();
                      uint64_t v551 = *(void (**)(char *, char *, uint64_t))(*(void *)(v584 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v551(v665, v629, v584);
                      uint64_t v208 = (uint64_t)__dstf;
                      goto LABEL_293;
                    case 9u:
                      *(_DWORD *)__dstf = *(_DWORD *)v144;
                      __dstf[1] = v144[1];
                      __dstf[2] = v144[2];
                      uint64_t v445 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v630 = (char *)v144 + v445;
                      v666 = (char *)__dstf + v445;
                      uint64_t v585 = sub_253B07160();
                      v552 = *(void (**)(char *, char *, uint64_t))(*(void *)(v585 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v552(v666, v630, v585);
                      uint64_t v208 = (uint64_t)__dstf;
LABEL_293:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      uint64_t v208 = (uint64_t)__dstf;
                      memcpy(__dstf, v144, *(void *)(*(void *)(v206 - 8) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v208, 0, 1, v206);
                }
                uint64_t v446 = v685[5];
                v884 = (void *)(v208 + v446);
                uint64_t v447 = (char *)v144 + v446;
                uint64_t v448 = sub_253B07160();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v884, v447, v448);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v208, 0, 1, (uint64_t)v685);
                uint64_t v142 = (uint64_t)v740;
              }
              goto LABEL_344;
            case 2u:
              *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
              uint64_t v147 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
              uint64_t v148 = v147[5];
              uint64_t v149 = (char *)v7 + v148;
              uint64_t v150 = (void *)((char *)v8 + v148);
              __dstg = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v150, 1, (uint64_t)__dstg))
              {
                uint64_t v151 = sub_253462A5C(&qword_269CE22E0);
                memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
              }
              else
              {
                v686 = v149;
                uint64_t v209 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v741 = v147;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v150, 1, v209))
                {
                  uint64_t v210 = sub_253462A5C(&qword_269CDCBA8);
                  uint64_t v211 = (uint64_t)v686;
                  memcpy(v686, v150, *(void *)(*(void *)(v210 - 8) + 64));
                  uint64_t v212 = v150;
                }
                else
                {
                  uint64_t v237 = v209;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      uint64_t v211 = (uint64_t)v686;
                      void *v686 = *v150;
                      v686[1] = v150[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_300;
                    case 4u:
                      uint64_t v211 = (uint64_t)v686;
                      void *v686 = *v150;
                      uint64_t v450 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v631 = (char *)v150 + v450;
                      v667 = (char *)v686 + v450;
                      uint64_t v586 = sub_253B07160();
                      uint64_t v553 = *(void (**)(char *, char *, uint64_t))(*(void *)(v586 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v553(v667, v631, v586);
                      goto LABEL_300;
                    case 5u:
                      uint64_t v211 = (uint64_t)v686;
                      void *v686 = *v150;
                      uint64_t v451 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v632 = (char *)v150 + v451;
                      v668 = (char *)v686 + v451;
                      uint64_t v587 = sub_253B07160();
                      uint64_t v554 = *(void (**)(char *, char *, uint64_t))(*(void *)(v587 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v554(v668, v632, v587);
                      goto LABEL_300;
                    case 9u:
                      uint64_t v211 = (uint64_t)v686;
                      *(_DWORD *)v686 = *(_DWORD *)v150;
                      v686[1] = v150[1];
                      v686[2] = v150[2];
                      uint64_t v452 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v633 = (char *)v150 + v452;
                      v669 = (char *)v686 + v452;
                      uint64_t v588 = sub_253B07160();
                      uint64_t v555 = *(void (**)(char *, char *, uint64_t))(*(void *)(v588 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v555(v669, v633, v588);
LABEL_300:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      size_t v449 = *(void *)(*(void *)(v209 - 8) + 64);
                      uint64_t v211 = (uint64_t)v686;
                      memcpy(v686, v150, v449);
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v211, 0, 1, v237);
                  uint64_t v212 = v150;
                }
                uint64_t v453 = __dstg[5];
                uint64_t v454 = v211 + v453;
                v885 = (char *)v212 + v453;
                uint64_t v455 = sub_253B07160();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v455 - 8) + 16))(v454, v885, v455);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v211, 0, 1, (uint64_t)__dstg);
                uint64_t v147 = v741;
              }
              uint64_t v456 = v147[6];
              uint64_t v457 = (void *)((char *)v7 + v456);
              v458 = (void *)((char *)v8 + v456);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v456, 1, (uint64_t)__dstg))
              {
                uint64_t v459 = sub_253462A5C(&qword_269CE22E0);
                memcpy(v457, v458, *(void *)(*(void *)(v459 - 8) + 64));
              }
              else
              {
                v700 = (void *)type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v767 = v147;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v458, 1, (uint64_t)v700))
                {
                  uint64_t v460 = sub_253462A5C(&qword_269CDCBA8);
                  memcpy(v457, v458, *(void *)(*(void *)(v460 - 8) + 64));
                  uint64_t v461 = v458;
                }
                else
                {
                  unint64_t v462 = v458;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *uint64_t v457 = *v458;
                      v457[1] = v458[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_333;
                    case 4u:
                      *uint64_t v457 = *v458;
                      uint64_t v493 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v637 = (char *)v458 + v493;
                      v673 = (char *)v457 + v493;
                      uint64_t v494 = sub_253B07160();
                      v592 = *(void (**)(char *, char *, uint64_t))(*(void *)(v494 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v592(v673, v637, v494);
                      goto LABEL_333;
                    case 5u:
                      *uint64_t v457 = *v458;
                      uint64_t v495 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v638 = (char *)v458 + v495;
                      v674 = (char *)v457 + v495;
                      uint64_t v496 = sub_253B07160();
                      v593 = *(void (**)(char *, char *, uint64_t))(*(void *)(v496 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v593(v674, v638, v496);
                      goto LABEL_333;
                    case 9u:
                      *(_DWORD *)uint64_t v457 = *(_DWORD *)v458;
                      v457[1] = v458[1];
                      v457[2] = v458[2];
                      uint64_t v497 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v639 = (char *)v458 + v497;
                      v675 = (char *)v457 + v497;
                      uint64_t v498 = sub_253B07160();
                      v594 = *(void (**)(char *, char *, uint64_t))(*(void *)(v498 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v594(v675, v639, v498);
LABEL_333:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v457, v458, *(void *)(*(v700 - 1) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v457, 0, 1, (uint64_t)v700);
                  uint64_t v461 = v462;
                }
                uint64_t v499 = __dstg[5];
                v500 = (char *)v457 + v499;
                v886 = (char *)v461 + v499;
                uint64_t v501 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v501 - 8) + 16))(v500, v886, v501);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v457, 0, 1, (uint64_t)__dstg);
                uint64_t v147 = v767;
              }
              uint64_t v502 = v147[7];
              uint64_t v503 = (char *)v7 + v502;
              v504 = (char *)v8 + v502;
              uint64_t v505 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v505 - 8) + 16))(v503, v504, v505);
              break;
            case 3u:
              void *v7 = *v8;
              v7[1] = v8[1];
              v863 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
              uint64_t v152 = v863[5];
              uint64_t v153 = (char *)v7 + v152;
              uint64_t v154 = (char *)v8 + v152;
              uint64_t v155 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v154, 1, v155))
              {
                uint64_t v156 = sub_253462A5C(&qword_269CE22E0);
                memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
              }
              else
              {
                v742 = v153;
                uint64_t v213 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstk = (void *)v155;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v154, 1, v213))
                {
                  uint64_t v214 = sub_253462A5C(&qword_269CDCBA8);
                  uint64_t v215 = (uint64_t)v742;
                  memcpy(v742, v154, *(void *)(*(void *)(v214 - 8) + 64));
                }
                else
                {
                  v689 = v154;
                  uint64_t v238 = v213;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      uint64_t v239 = (uint64_t)v742;
                      void *v742 = *v689;
                      v742[1] = v689[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_313;
                    case 4u:
                      uint64_t v239 = (uint64_t)v742;
                      void *v742 = *v689;
                      uint64_t v463 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v634 = (char *)v689 + v463;
                      v670 = (char *)v742 + v463;
                      uint64_t v464 = sub_253B07160();
                      v589 = *(void (**)(char *, char *, uint64_t))(*(void *)(v464 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v589(v670, v634, v464);
                      goto LABEL_313;
                    case 5u:
                      uint64_t v239 = (uint64_t)v742;
                      void *v742 = *v689;
                      uint64_t v465 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v635 = (char *)v689 + v465;
                      v671 = (char *)v742 + v465;
                      uint64_t v466 = sub_253B07160();
                      v590 = *(void (**)(char *, char *, uint64_t))(*(void *)(v466 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v590(v671, v635, v466);
                      goto LABEL_313;
                    case 9u:
                      uint64_t v239 = (uint64_t)v742;
                      *(_DWORD *)v742 = *(_DWORD *)v689;
                      v742[1] = v689[1];
                      v742[2] = v689[2];
                      uint64_t v467 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v636 = (char *)v689 + v467;
                      v672 = (char *)v742 + v467;
                      uint64_t v468 = sub_253B07160();
                      v591 = *(void (**)(char *, char *, uint64_t))(*(void *)(v468 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v591(v672, v636, v468);
LABEL_313:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      uint64_t v239 = (uint64_t)v742;
                      memcpy(v742, v689, *(void *)(*(void *)(v213 - 8) + 64));
                      break;
                  }
                  uint64_t v215 = v239;
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v239, 0, 1, v238);
                  uint64_t v155 = (uint64_t)__dstk;
                  uint64_t v154 = (char *)v689;
                }
                uint64_t v469 = *(int *)(v155 + 20);
                uint64_t v470 = v215 + v469;
                v471 = &v154[v469];
                uint64_t v472 = sub_253B07160();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v472 - 8) + 16))(v470, v471, v472);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v215, 0, 1, (uint64_t)__dstk);
              }
              goto LABEL_132;
            case 4u:
              uint64_t v157 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              v864 = (int *)v157;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v157))
              {
                uint64_t v158 = sub_253462A5C(&qword_269CE22E0);
                memcpy(v7, v8, *(void *)(*(void *)(v158 - 8) + 64));
              }
              else
              {
                uint64_t v216 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v216))
                {
                  uint64_t v217 = sub_253462A5C(&qword_269CDCBA8);
                  memcpy(v7, v8, *(void *)(*(void *)(v217 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      void *v7 = *v8;
                      v7[1] = v8[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_320;
                    case 4u:
                      void *v7 = *v8;
                      uint64_t v473 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v768 = (char *)v8 + v473;
                      __dstci = (char *)v7 + v473;
                      uint64_t v474 = sub_253B07160();
                      v701 = *(void (**)(char *, char *, uint64_t))(*(void *)(v474 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v701(__dstci, v768, v474);
                      goto LABEL_320;
                    case 5u:
                      void *v7 = *v8;
                      uint64_t v475 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v769 = (char *)v8 + v475;
                      __dstcj = (char *)v7 + v475;
                      uint64_t v476 = sub_253B07160();
                      v702 = *(void (**)(char *, char *, uint64_t))(*(void *)(v476 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v702(__dstcj, v769, v476);
                      goto LABEL_320;
                    case 9u:
                      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
                      v7[1] = v8[1];
                      v7[2] = v8[2];
                      uint64_t v477 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v770 = (char *)v8 + v477;
                      __dstck = (char *)v7 + v477;
                      uint64_t v478 = sub_253B07160();
                      v703 = *(void (**)(char *, char *, uint64_t))(*(void *)(v478 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v703(__dstck, v770, v478);
LABEL_320:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v7, v8, *(void *)(*(void *)(v216 - 8) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v216);
                  uint64_t v157 = (uint64_t)v864;
                }
                uint64_t v479 = *(int *)(v157 + 20);
                uint64_t v480 = (char *)v7 + v479;
                uint64_t v481 = (char *)v8 + v479;
                uint64_t v482 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v482 - 8) + 16))(v480, v481, v482);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v157);
              }
              uint64_t v142 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
              uint64_t v483 = *(int *)(v142 + 20);
              uint64_t v484 = (char *)v7 + v483;
              v485 = (void *)((char *)v8 + v483);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v483, 1, (uint64_t)v864))
              {
                uint64_t v486 = sub_253462A5C(&qword_269CE22E0);
                memcpy(v484, v485, *(void *)(*(void *)(v486 - 8) + 64));
              }
              else
              {
                __dsto = v484;
                uint64_t v487 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v771 = (void *)v142;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v485, 1, v487))
                {
                  uint64_t v488 = sub_253462A5C(&qword_269CDCBA8);
                  uint64_t v489 = (uint64_t)__dsto;
                  memcpy(__dsto, v485, *(void *)(*(void *)(v488 - 8) + 64));
                  uint64_t v490 = v485;
                  uint64_t v491 = v864;
                }
                else
                {
                  v704 = v485;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      uint64_t v492 = (uint64_t)__dsto;
                      void *__dsto = *v704;
                      __dsto[1] = v704[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_341;
                    case 4u:
                      void *__dsto = *v485;
                      uint64_t v506 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      uint64_t v640 = (char *)v485 + v506;
                      v676 = (char *)__dsto + v506;
                      uint64_t v595 = sub_253B07160();
                      uint64_t v556 = *(void (**)(char *, char *, uint64_t))(*(void *)(v595 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v556(v676, v640, v595);
                      uint64_t v492 = (uint64_t)__dsto;
                      goto LABEL_341;
                    case 5u:
                      void *__dsto = *v485;
                      uint64_t v507 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v641 = (char *)v485 + v507;
                      v677 = (char *)__dsto + v507;
                      uint64_t v596 = sub_253B07160();
                      uint64_t v557 = *(void (**)(char *, char *, uint64_t))(*(void *)(v596 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v557(v677, v641, v596);
                      uint64_t v492 = (uint64_t)__dsto;
                      goto LABEL_341;
                    case 9u:
                      *(_DWORD *)__dsto = *(_DWORD *)v485;
                      __dsto[1] = v485[1];
                      __dsto[2] = v485[2];
                      uint64_t v508 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      uint64_t v642 = (char *)v485 + v508;
                      v678 = (char *)__dsto + v508;
                      uint64_t v597 = sub_253B07160();
                      v558 = *(void (**)(char *, char *, uint64_t))(*(void *)(v597 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v558(v678, v642, v597);
                      uint64_t v492 = (uint64_t)__dsto;
LABEL_341:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      uint64_t v492 = (uint64_t)__dsto;
                      memcpy(__dsto, v704, *(void *)(*(void *)(v487 - 8) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v492, 0, 1, v487);
                  uint64_t v489 = v492;
                  uint64_t v491 = v864;
                  uint64_t v490 = v704;
                }
                uint64_t v509 = v491[5];
                uint64_t v510 = v489 + v509;
                uint64_t v511 = (char *)v490 + v509;
                uint64_t v512 = sub_253B07160();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v512 - 8) + 16))(v510, v511, v512);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v489, 0, 1, (uint64_t)v864);
                uint64_t v142 = (uint64_t)v771;
              }
LABEL_344:
              uint64_t v513 = *(int *)(v142 + 24);
              uint64_t v514 = (char *)v7 + v513;
              v515 = (char *)v8 + v513;
              uint64_t v516 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v516 - 8) + 16))(v514, v515, v516);
              break;
            case 5u:
              void *v7 = *v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              uint64_t v159 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
              __dstbj = (char *)v8 + v159;
              v865 = (char *)v7 + v159;
              uint64_t v160 = sub_253B07160();
              v727 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v727(v865, __dstbj, v160);
              break;
            case 6u:
              void *v7 = *v8;
              uint64_t v161 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
              __dstbk = (char *)v8 + v161;
              v866 = (char *)v7 + v161;
              uint64_t v162 = sub_253B07160();
              v728 = *(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16);
              swift_bridgeObjectRetain();
              v728(v866, __dstbk, v162);
              break;
            case 7u:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v163 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
              uint64_t v164 = *(int *)(v163 + 20);
              __dsth = (char *)v7 + v164;
              v863 = (int *)v163;
              uint64_t v165 = (char *)v8 + v164;
              uint64_t v166 = type metadata accessor for TranscriptProtoASTPickType(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v165, 1, v166))
              {
                uint64_t v167 = sub_253462A5C(&qword_269CE2268);
                memcpy(__dsth, v165, *(void *)(*(void *)(v167 - 8) + 64));
              }
              else
              {
                uint64_t v218 = *(void *)v165;
                __dsth[8] = v165[8];
                *(void *)__dsth = v218;
                uint64_t v219 = *(int *)(v166 + 20);
                v743 = &__dsth[v219];
                uint64_t v220 = &v165[v219];
                uint64_t v221 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v221 - 8) + 16))(v743, v220, v221);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsth, 0, 1, v166);
              }
LABEL_132:
              uint64_t v222 = v863[6];
              uint64_t v223 = (char *)v7 + v222;
              uint64_t v224 = (char *)v8 + v222;
              uint64_t v225 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
              break;
            case 8u:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
              __dstbl = (char *)v8 + v168;
              v867 = (char *)v7 + v168;
              uint64_t v169 = sub_253B07160();
              v729 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
              swift_bridgeObjectRetain();
              v729(v867, __dstbl, v169);
              break;
            case 9u:
              void *v7 = *v8;
              v7[1] = v8[1];
              *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
              *((unsigned char *)v7 + 17) = *((unsigned char *)v8 + 17);
              uint64_t v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
              __dstbm = (char *)v8 + v170;
              v868 = (char *)v7 + v170;
              uint64_t v171 = sub_253B07160();
              v730 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
              swift_bridgeObjectRetain();
              v730(v868, __dstbm, v171);
              break;
            case 0xAu:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
              __dstbn = (char *)v8 + v172;
              v869 = (char *)v7 + v172;
              uint64_t v173 = sub_253B07160();
              v731 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
              swift_bridgeObjectRetain();
              v731(v869, __dstbn, v173);
              break;
            case 0xBu:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
              __dstbo = (char *)v8 + v174;
              v870 = (char *)v7 + v174;
              uint64_t v175 = sub_253B07160();
              v732 = *(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16);
              swift_bridgeObjectRetain();
              v732(v870, __dstbo, v175);
              break;
            case 0xCu:
              void *v7 = *v8;
              uint64_t v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
              __dstbp = (char *)v8 + v176;
              v871 = (char *)v7 + v176;
              uint64_t v177 = sub_253B07160();
              v733 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
              swift_bridgeObjectRetain();
              v733(v871, __dstbp, v177);
              break;
            case 0xDu:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
              __dstbq = (char *)v8 + v178;
              v872 = (char *)v7 + v178;
              uint64_t v179 = sub_253B07160();
              v734 = *(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16);
              swift_bridgeObjectRetain();
              v734(v872, __dstbq, v179);
              break;
            case 0xEu:
              void *v7 = *v8;
              v7[1] = v8[1];
              uint64_t v180 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
              __dstbr = (char *)v8 + v180;
              v873 = (char *)v7 + v180;
              uint64_t v181 = sub_253B07160();
              v735 = *(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16);
              swift_bridgeObjectRetain();
              v735(v873, __dstbr, v181);
              break;
            case 0xFu:
            case 0x11u:
              uint64_t v182 = sub_253B07160();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v182 - 8) + 16))(v7, v8, v182);
              break;
            case 0x10u:
              void *v7 = *v8;
              uint64_t v183 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
              __dstbs = (char *)v8 + v183;
              v874 = (char *)v7 + v183;
              uint64_t v184 = sub_253B07160();
              v736 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16);
              swift_bridgeObjectRetain();
              v736(v874, __dstbs, v184);
              break;
            default:
              size_t v22 = *(void *)(*(void *)(v15 - 8) + 64);
              goto LABEL_19;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_346;
      }
      sub_2536FA73C();
    }
    size_t v22 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2320) - 8) + 64);
LABEL_19:
    memcpy(v7, v8, v22);
    goto LABEL_346;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE2310);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_347;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CE2320);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v20 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              void *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              goto LABEL_145;
            case 4u:
              void *v7 = *v8;
              uint64_t v227 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              __dstbt = (char *)v8 + v227;
              v875 = (char *)v7 + v227;
              uint64_t v228 = sub_253B07160();
              v744 = *(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16);
              swift_bridgeObjectRetain();
              v744(v875, __dstbt, v228);
              goto LABEL_145;
            case 5u:
              void *v7 = *v8;
              uint64_t v229 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              __dstbu = (char *)v8 + v229;
              v876 = (char *)v7 + v229;
              uint64_t v230 = sub_253B07160();
              v745 = *(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16);
              swift_bridgeObjectRetain();
              v745(v876, __dstbu, v230);
              goto LABEL_145;
            case 9u:
              *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              uint64_t v231 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              __dstbv = (char *)v8 + v231;
              v877 = (char *)v7 + v231;
              uint64_t v232 = sub_253B07160();
              v746 = *(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16);
              swift_bridgeObjectRetain();
              v746(v877, __dstbv, v232);
LABEL_145:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v20);
        }
        uint64_t v233 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v234 = (char *)v7 + v233;
        uint64_t v235 = (char *)v8 + v233;
        uint64_t v236 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16))(v234, v235, v236);
        goto LABEL_220;
      case 1u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        v836 = (int *)type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v25 = v836[5];
        uint64_t v26 = (void *)((char *)v7 + v25);
        uint64_t v27 = (void *)((char *)v8 + v25);
        uint64_t v28 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          __dstc = (int *)v28;
          uint64_t v127 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v127))
          {
            uint64_t v128 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v26, v27, *(void *)(*(void *)(v128 - 8) + 64));
            uint64_t v129 = v27;
          }
          else
          {
            __src = (void *)v127;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *v26 = *v27;
                v26[1] = v27[1];
                swift_bridgeObjectRetain();
                goto LABEL_167;
              case 4u:
                void *v26 = *v27;
                uint64_t v250 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v559 = (char *)v27 + v250;
                v598 = (char *)v26 + v250;
                uint64_t v251 = sub_253B07160();
                v532 = *(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 16);
                swift_bridgeObjectRetain();
                v532(v598, v559, v251);
                uint64_t v127 = (uint64_t)__src;
                goto LABEL_167;
              case 5u:
                void *v26 = *v27;
                uint64_t v252 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v560 = (char *)v27 + v252;
                v599 = (char *)v26 + v252;
                uint64_t v253 = sub_253B07160();
                uint64_t v533 = *(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16);
                swift_bridgeObjectRetain();
                v533(v599, v560, v253);
                uint64_t v127 = (uint64_t)__src;
                goto LABEL_167;
              case 9u:
                *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
                v26[1] = v27[1];
                v26[2] = v27[2];
                uint64_t v254 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v561 = (char *)v27 + v254;
                v600 = (char *)v26 + v254;
                uint64_t v255 = sub_253B07160();
                v534 = *(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16);
                swift_bridgeObjectRetain();
                v534(v600, v561, v255);
                uint64_t v127 = (uint64_t)__src;
LABEL_167:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v26, v27, *(void *)(*(void *)(v127 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v127);
            uint64_t v129 = v27;
          }
          v750 = v26;
          uint64_t v256 = __dstc[5];
          uint64_t v257 = (char *)v26 + v256;
          int v258 = (char *)v129 + v256;
          uint64_t v259 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v750, 0, 1, (uint64_t)__dstc);
        }
        goto LABEL_190;
      case 2u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        v837 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v30 = v837[5];
        uint64_t v31 = (char *)v7 + v30;
        uint64_t v32 = (void *)((char *)v8 + v30);
        uint64_t v33 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
          uint64_t v34 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          v725 = v31;
          uint64_t v130 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          __dstd = (int *)v33;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v130))
          {
            uint64_t v131 = sub_253462A5C(&qword_269CDCBA8);
            uint64_t v132 = (uint64_t)v725;
            memcpy(v725, v32, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v205 = (uint64_t)v725;
                void *v725 = *v32;
                v725[1] = v32[1];
                swift_bridgeObjectRetain();
                goto LABEL_174;
              case 4u:
                uint64_t v205 = (uint64_t)v725;
                void *v725 = *v32;
                uint64_t v260 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v562 = (char *)v32 + v260;
                v601 = (char *)v725 + v260;
                uint64_t v535 = sub_253B07160();
                uint64_t v526 = *(void (**)(char *, char *, uint64_t))(*(void *)(v535 - 8) + 16);
                swift_bridgeObjectRetain();
                v526(v601, v562, v535);
                goto LABEL_174;
              case 5u:
                uint64_t v205 = (uint64_t)v725;
                void *v725 = *v32;
                uint64_t v261 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v563 = (char *)v32 + v261;
                v602 = (char *)v725 + v261;
                uint64_t v536 = sub_253B07160();
                uint64_t v527 = *(void (**)(char *, char *, uint64_t))(*(void *)(v536 - 8) + 16);
                swift_bridgeObjectRetain();
                v527(v602, v563, v536);
                goto LABEL_174;
              case 9u:
                uint64_t v205 = (uint64_t)v725;
                *(_DWORD *)v725 = *(_DWORD *)v32;
                v725[1] = v32[1];
                v725[2] = v32[2];
                uint64_t v262 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v564 = (char *)v32 + v262;
                v603 = (char *)v725 + v262;
                uint64_t v537 = sub_253B07160();
                v528 = *(void (**)(char *, char *, uint64_t))(*(void *)(v537 - 8) + 16);
                swift_bridgeObjectRetain();
                v528(v603, v564, v537);
LABEL_174:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                uint64_t v205 = (uint64_t)v725;
                memcpy(v725, v32, *(void *)(*(void *)(v130 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v205, 0, 1, v130);
            uint64_t v132 = v205;
          }
          uint64_t v33 = (uint64_t)__dstd;
          uint64_t v263 = __dstd[5];
          v751 = (void *)(v132 + v263);
          uint64_t v264 = (char *)v32 + v263;
          uint64_t v265 = sub_253B07160();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v751, v264, v265);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v132, 0, 1, (uint64_t)__dstd);
        }
        uint64_t v266 = v837[6];
        uint64_t v267 = (void *)((char *)v7 + v266);
        v268 = (void *)((char *)v8 + v266);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v266, 1, v33))
        {
          uint64_t v269 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v267, v268, *(void *)(*(void *)(v269 - 8) + 64));
        }
        else
        {
          __dstl = (int *)v33;
          uint64_t v270 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v268, 1, v270))
          {
            uint64_t v271 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v267, v268, *(void *)(*(void *)(v271 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *v267 = *v268;
                v267[1] = v268[1];
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 4u:
                void *v267 = *v268;
                uint64_t v308 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v646 = (char *)v268 + v308;
                __srca = (char *)v267 + v308;
                v693 = v267;
                uint64_t v309 = sub_253B07160();
                v607 = *(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v310 = v309;
                uint64_t v267 = v693;
                v607(__srca, v646, v310);
                goto LABEL_208;
              case 5u:
                void *v267 = *v268;
                uint64_t v311 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v647 = (char *)v268 + v311;
                __srcb = (char *)v267 + v311;
                v694 = v267;
                uint64_t v312 = sub_253B07160();
                v608 = *(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v313 = v312;
                uint64_t v267 = v694;
                v608(__srcb, v647, v313);
                goto LABEL_208;
              case 9u:
                *(_DWORD *)uint64_t v267 = *(_DWORD *)v268;
                v267[1] = v268[1];
                v267[2] = v268[2];
                uint64_t v314 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v648 = (char *)v268 + v314;
                __srcc = (char *)v267 + v314;
                v695 = v267;
                uint64_t v315 = sub_253B07160();
                v609 = *(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v316 = v315;
                uint64_t v267 = v695;
                v609(__srcc, v648, v316);
LABEL_208:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v267, v268, *(void *)(*(void *)(v270 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v267, 0, 1, v270);
          }
          uint64_t v317 = __dstl[5];
          v756 = (char *)v267 + v317;
          uint64_t v318 = (char *)v268 + v317;
          uint64_t v319 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v756, v318, v319);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v267, 0, 1, (uint64_t)__dstl);
        }
        uint64_t v320 = v837[7];
        uint64_t v321 = (char *)v7 + v320;
        uint64_t v322 = (char *)v8 + v320;
        uint64_t v323 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 16))(v321, v322, v323);
        goto LABEL_220;
      case 3u:
        void *v7 = *v8;
        v7[1] = v8[1];
        v836 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v35 = v836[5];
        uint64_t v36 = (char *)v7 + v35;
        uint64_t v37 = (void *)((char *)v8 + v35);
        uint64_t v38 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
        {
          uint64_t v39 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          __dste = v36;
          uint64_t v133 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v133))
          {
            uint64_t v134 = sub_253462A5C(&qword_269CDCBA8);
            uint64_t v135 = (uint64_t)__dste;
            memcpy(__dste, v37, *(void *)(*(void *)(v134 - 8) + 64));
          }
          else
          {
            v684 = (void *)v133;
            uint64_t v135 = (uint64_t)__dste;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *__dste = *v37;
                __dste[1] = v37[1];
                swift_bridgeObjectRetain();
                goto LABEL_187;
              case 4u:
                void *__dste = *v37;
                uint64_t v272 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v604 = (char *)v37 + v272;
                v643 = (char *)__dste + v272;
                uint64_t v273 = v38;
                uint64_t v274 = sub_253B07160();
                uint64_t v565 = *(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v275 = v274;
                uint64_t v38 = v273;
                uint64_t v135 = (uint64_t)__dste;
                v565(v643, v604, v275);
                goto LABEL_187;
              case 5u:
                void *__dste = *v37;
                uint64_t v276 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v605 = (char *)v37 + v276;
                v644 = (char *)__dste + v276;
                uint64_t v277 = v38;
                uint64_t v278 = sub_253B07160();
                uint64_t v566 = *(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v279 = v278;
                uint64_t v38 = v277;
                uint64_t v135 = (uint64_t)__dste;
                v566(v644, v605, v279);
                goto LABEL_187;
              case 9u:
                *(_DWORD *)__dste = *(_DWORD *)v37;
                __dste[1] = v37[1];
                __dste[2] = v37[2];
                uint64_t v280 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v606 = (char *)v37 + v280;
                v645 = (char *)__dste + v280;
                uint64_t v281 = v38;
                uint64_t v282 = sub_253B07160();
                uint64_t v567 = *(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v283 = v282;
                uint64_t v38 = v281;
                uint64_t v135 = (uint64_t)__dste;
                v567(v645, v606, v283);
LABEL_187:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                uint64_t v135 = (uint64_t)__dste;
                memcpy(__dste, v37, *(void *)(*(v684 - 1) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v135, 0, 1, (uint64_t)v684);
          }
          v752 = (void *)v38;
          uint64_t v284 = *(int *)(v38 + 20);
          uint64_t v285 = v135 + v284;
          uint64_t v286 = (char *)v37 + v284;
          uint64_t v287 = sub_253B07160();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v287 - 8) + 16))(v285, v286, v287);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v135, 0, 1, (uint64_t)v752);
        }
        goto LABEL_190;
      case 4u:
        v838 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, (uint64_t)v838))
        {
          uint64_t v40 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v7, v8, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v136 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v136))
          {
            uint64_t v137 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v7, v8, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *v7 = *v8;
                v7[1] = v8[1];
                swift_bridgeObjectRetain();
                goto LABEL_195;
              case 4u:
                void *v7 = *v8;
                uint64_t v292 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v753 = (char *)v8 + v292;
                __dstbz = (char *)v7 + v292;
                uint64_t v293 = sub_253B07160();
                v690 = *(void (**)(char *, char *, uint64_t))(*(void *)(v293 - 8) + 16);
                swift_bridgeObjectRetain();
                v690(__dstbz, v753, v293);
                goto LABEL_195;
              case 5u:
                void *v7 = *v8;
                uint64_t v294 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v754 = (char *)v8 + v294;
                __dstca = (char *)v7 + v294;
                uint64_t v295 = sub_253B07160();
                v691 = *(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 16);
                swift_bridgeObjectRetain();
                v691(__dstca, v754, v295);
                goto LABEL_195;
              case 9u:
                *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
                v7[1] = v8[1];
                v7[2] = v8[2];
                uint64_t v296 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v755 = (char *)v8 + v296;
                __dstcb = (char *)v7 + v296;
                uint64_t v297 = sub_253B07160();
                v692 = *(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16);
                swift_bridgeObjectRetain();
                v692(__dstcb, v755, v297);
LABEL_195:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v7, v8, *(void *)(*(void *)(v136 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v136);
          }
          uint64_t v298 = v838[5];
          int v299 = (char *)v7 + v298;
          int v300 = (char *)v8 + v298;
          uint64_t v301 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(v299, v300, v301);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v838);
        }
        __dstm = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v302 = __dstm[5];
        long long v303 = (void *)((char *)v7 + v302);
        v304 = (void *)((char *)v8 + v302);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v302, 1, (uint64_t)v838))
        {
          uint64_t v305 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v303, v304, *(void *)(*(void *)(v305 - 8) + 64));
        }
        else
        {
          uint64_t v306 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v304, 1, v306))
          {
            uint64_t v307 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v303, v304, *(void *)(*(void *)(v307 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *v303 = *v304;
                v303[1] = v304[1];
                swift_bridgeObjectRetain();
                goto LABEL_216;
              case 4u:
                void *v303 = *v304;
                uint64_t v324 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v610 = (char *)v304 + v324;
                v649 = (char *)v303 + v324;
                uint64_t v568 = sub_253B07160();
                uint64_t v538 = *(void (**)(char *, char *, uint64_t))(*(void *)(v568 - 8) + 16);
                swift_bridgeObjectRetain();
                v538(v649, v610, v568);
                goto LABEL_216;
              case 5u:
                void *v303 = *v304;
                uint64_t v325 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v611 = (char *)v304 + v325;
                v650 = (char *)v303 + v325;
                uint64_t v569 = sub_253B07160();
                int v539 = *(void (**)(char *, char *, uint64_t))(*(void *)(v569 - 8) + 16);
                swift_bridgeObjectRetain();
                v539(v650, v611, v569);
                goto LABEL_216;
              case 9u:
                *(_DWORD *)long long v303 = *(_DWORD *)v304;
                v303[1] = v304[1];
                v303[2] = v304[2];
                uint64_t v326 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v612 = (char *)v304 + v326;
                v651 = (char *)v303 + v326;
                uint64_t v570 = sub_253B07160();
                int v540 = *(void (**)(char *, char *, uint64_t))(*(void *)(v570 - 8) + 16);
                swift_bridgeObjectRetain();
                v540(v651, v612, v570);
LABEL_216:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v303, v304, *(void *)(*(void *)(v306 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v303, 0, 1, v306);
          }
          uint64_t v327 = v838[5];
          uint64_t v328 = (uint64_t)v303;
          uint64_t v329 = (char *)v303 + v327;
          int v330 = (char *)v304 + v327;
          uint64_t v331 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v329, v330, v331);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v328, 0, 1, (uint64_t)v838);
        }
        uint64_t v332 = __dstm[6];
        uint64_t v333 = (char *)v7 + v332;
        uint64_t v334 = (char *)v8 + v332;
        uint64_t v335 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
        goto LABEL_220;
      case 5u:
        void *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v705 = (char *)v8 + v41;
        __dstp = (char *)v7 + v41;
        uint64_t v42 = sub_253B07160();
        v683 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v683(__dstp, v705, v42);
        goto LABEL_220;
      case 6u:
        void *v7 = *v8;
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v706 = (char *)v8 + v43;
        __dstq = (char *)v7 + v43;
        uint64_t v44 = sub_253B07160();
        v839 = (void *)v12;
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(__dstq, v706, v44);
        uint64_t v12 = (uint64_t)v839;
        goto LABEL_220;
      case 7u:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v46 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v47 = *(int *)(v46 + 20);
        __dst = (char *)v7 + v47;
        v836 = (int *)v46;
        uint64_t v48 = (char *)v8 + v47;
        uint64_t v49 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_269CE2268);
          memcpy(__dst, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v138 = *(void *)v48;
          __dst[8] = v48[8];
          *(void *)__dst = v138;
          uint64_t v139 = *(int *)(v49 + 20);
          v726 = &__dst[v139];
          uint64_t v140 = &v48[v139];
          uint64_t v141 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v141 - 8) + 16))(v726, v140, v141);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v49);
        }
LABEL_190:
        uint64_t v288 = v836[6];
        v289 = (char *)v7 + v288;
        long long v290 = (char *)v8 + v288;
        uint64_t v291 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v291 - 8) + 16))(v289, v290, v291);
        goto LABEL_220;
      case 8u:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v707 = (char *)v8 + v51;
        __dstr = (char *)v7 + v51;
        uint64_t v52 = sub_253B07160();
        v840 = (void *)v12;
        uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(__dstr, v707, v52);
        uint64_t v12 = (uint64_t)v840;
        goto LABEL_220;
      case 9u:
        void *v7 = *v8;
        v7[1] = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        *((unsigned char *)v7 + 17) = *((unsigned char *)v8 + 17);
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v708 = (char *)v8 + v54;
        __dsts = (char *)v7 + v54;
        uint64_t v55 = sub_253B07160();
        v841 = (void *)v12;
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(__dsts, v708, v55);
        uint64_t v12 = (uint64_t)v841;
        goto LABEL_220;
      case 0xAu:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v709 = (char *)v8 + v57;
        __dstt = (char *)v7 + v57;
        uint64_t v58 = sub_253B07160();
        v842 = (void *)v12;
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(__dstt, v709, v58);
        uint64_t v12 = (uint64_t)v842;
        goto LABEL_220;
      case 0xBu:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v710 = (char *)v8 + v60;
        __dstu = (char *)v7 + v60;
        uint64_t v61 = sub_253B07160();
        v843 = (void *)v12;
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(__dstu, v710, v61);
        uint64_t v12 = (uint64_t)v843;
        goto LABEL_220;
      case 0xCu:
        void *v7 = *v8;
        uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v711 = (char *)v8 + v63;
        __dstv = (char *)v7 + v63;
        uint64_t v64 = sub_253B07160();
        v844 = (void *)v12;
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(__dstv, v711, v64);
        uint64_t v12 = (uint64_t)v844;
        goto LABEL_220;
      case 0xDu:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v712 = (char *)v8 + v66;
        __dstw = (char *)v7 + v66;
        uint64_t v67 = sub_253B07160();
        v845 = (void *)v12;
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(__dstw, v712, v67);
        uint64_t v12 = (uint64_t)v845;
        goto LABEL_220;
      case 0xEu:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v713 = (char *)v8 + v69;
        __dstx = (char *)v7 + v69;
        uint64_t v70 = sub_253B07160();
        v846 = (void *)v12;
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(__dstx, v713, v70);
        uint64_t v12 = (uint64_t)v846;
        goto LABEL_220;
      case 0xFu:
      case 0x11u:
        uint64_t v72 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v7, v8, v72);
        goto LABEL_220;
      case 0x10u:
        void *v7 = *v8;
        uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v714 = (char *)v8 + v73;
        __dsty = (char *)v7 + v73;
        uint64_t v74 = sub_253B07160();
        v847 = (void *)v12;
        uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(__dsty, v714, v74);
        uint64_t v12 = (uint64_t)v847;
LABEL_220:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v336 = *(int *)(v9 + 20);
  v337 = (char *)v7 + v336;
  uint64_t v338 = (char *)v8 + v336;
  uint64_t v339 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 16))(v337, v338, v339);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_347:
  uint64_t v521 = *(int *)(a3 + 24);
  uint64_t v522 = (char *)a1 + v521;
  v523 = (char *)a2 + v521;
  uint64_t v524 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 24))(v522, v523, v524);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatAssignExpr(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2320);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_119:
      uint64_t v217 = *(int *)(v9 + 20);
      uint64_t v218 = (char *)v7 + v217;
      uint64_t v219 = (char *)v8 + v217;
      uint64_t v220 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v218, v219, v220);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_120;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_64:
          uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          uint64_t v117 = (char *)v7 + v116;
          uint64_t v118 = (char *)v8 + v116;
          uint64_t v119 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          goto LABEL_117;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            _DWORD *v7 = *v8;
            *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
            uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v109 = (char *)v7 + v108;
            uint64_t v110 = (char *)v8 + v108;
            uint64_t v111 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
            break;
          case 5:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v113 = (char *)v7 + v112;
            uint64_t v114 = (char *)v8 + v112;
            uint64_t v115 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
            break;
          case 4:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v76 = (char *)v7 + v75;
            uint64_t v77 = (char *)v8 + v75;
            uint64_t v78 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
            goto LABEL_63;
        }
        swift_storeEnumTagMultiPayload();
LABEL_63:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v13);
        goto LABEL_64;
      case 1u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        uint64_t v252 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v15 = *(int *)(v252 + 20);
        int v16 = (_DWORD *)((char *)v7 + v15);
        int v17 = (_DWORD *)((char *)v8 + v15);
        uint64_t v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18)) {
          goto LABEL_14;
        }
        uint64_t v249 = v18;
        uint64_t v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v79)) {
          goto LABEL_39;
        }
        int v91 = swift_getEnumCaseMultiPayload();
        uint64_t v92 = v79;
        uint64_t v242 = v17;
        switch(v91)
        {
          case 9:
            goto LABEL_82;
          case 5:
            goto LABEL_83;
          case 4:
            goto LABEL_54;
        }
        goto LABEL_85;
      case 2u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        uint64_t v253 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v19 = v253[5];
        uint64_t v20 = (_DWORD *)((char *)v7 + v19);
        uint64_t v21 = (_DWORD *)((char *)v8 + v19);
        uint64_t v248 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v248))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
          uint64_t v23 = v248;
          goto LABEL_74;
        }
        uint64_t v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v80))
        {
          uint64_t v81 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v20, v21, *(void *)(*(void *)(v81 - 8) + 64));
          uint64_t v82 = v21;
          uint64_t v83 = (uint64_t)v20;
          goto LABEL_73;
        }
        int v93 = swift_getEnumCaseMultiPayload();
        uint64_t v243 = v21;
        switch(v93)
        {
          case 9:
            *uint64_t v20 = *v21;
            *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
            uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v235 = (char *)v20 + v120;
            uint64_t v121 = (char *)v21 + v120;
            uint64_t v122 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v235, v121, v122);
            goto LABEL_70;
          case 5:
            *(void *)uint64_t v20 = *(void *)v21;
            uint64_t v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v236 = (char *)v20 + v123;
            uint64_t v124 = (char *)v21 + v123;
            uint64_t v125 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v236, v124, v125);
            goto LABEL_70;
          case 4:
            *(void *)uint64_t v20 = *(void *)v21;
            uint64_t v94 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v233 = (char *)v20 + v94;
            uint64_t v95 = (char *)v21 + v94;
            uint64_t v96 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v233, v95, v96);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
        }
        memcpy(v20, v21, *(void *)(*(void *)(v80 - 8) + 64));
LABEL_72:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v80);
        uint64_t v83 = (uint64_t)v20;
        uint64_t v82 = v243;
LABEL_73:
        uint64_t v23 = v248;
        uint64_t v126 = *(int *)(v248 + 20);
        uint64_t v127 = v83 + v126;
        uint64_t v244 = (char *)v82 + v126;
        uint64_t v128 = sub_253B07160();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v127, v244, v128);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v83, 0, 1, v248);
LABEL_74:
        uint64_t v129 = v253[6];
        uint64_t v130 = (_DWORD *)((char *)v7 + v129);
        uint64_t v131 = (_DWORD *)((char *)v8 + v129);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v129, 1, v23))
        {
          uint64_t v132 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
LABEL_109:
          uint64_t v198 = v253[7];
          uint64_t v199 = (char *)v7 + v198;
          uint64_t v200 = (char *)v8 + v198;
          uint64_t v201 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
          goto LABEL_117;
        }
        uint64_t v133 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v131, 1, v133))
        {
          uint64_t v134 = sub_253462A5C(&qword_269CDCBA8);
          uint64_t v135 = (char *)v130;
          memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
          uint64_t v136 = v131;
          uint64_t v137 = v248;
LABEL_108:
          uint64_t v194 = *(int *)(v137 + 20);
          uint64_t v195 = &v135[v194];
          uint64_t v196 = (char *)v136 + v194;
          uint64_t v197 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v248);
          goto LABEL_109;
        }
        int v138 = swift_getEnumCaseMultiPayload();
        uint64_t v245 = v131;
        switch(v138)
        {
          case 9:
            *uint64_t v130 = *v131;
            *(_OWORD *)(v130 + 2) = *(_OWORD *)(v131 + 2);
            uint64_t v182 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v240 = v133;
            uint64_t v183 = (char *)v130 + v182;
            uint64_t v184 = (char *)v131 + v182;
            uint64_t v185 = sub_253B07160();
            uint64_t v186 = v183;
            uint64_t v135 = (char *)v130;
            uint64_t v144 = v240;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v186, v184, v185);
            break;
          case 5:
            *(void *)uint64_t v130 = *(void *)v131;
            uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v241 = v133;
            uint64_t v188 = (char *)v130 + v187;
            uint64_t v189 = (char *)v131 + v187;
            uint64_t v190 = sub_253B07160();
            uint64_t v191 = v188;
            uint64_t v135 = (char *)v130;
            uint64_t v144 = v241;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 32))(v191, v189, v190);
            break;
          case 4:
            *(void *)uint64_t v130 = *(void *)v131;
            uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v237 = v133;
            uint64_t v140 = (char *)v130 + v139;
            uint64_t v141 = (char *)v131 + v139;
            uint64_t v142 = sub_253B07160();
            uint64_t v143 = v140;
            uint64_t v135 = (char *)v130;
            uint64_t v144 = v237;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v143, v141, v142);
            break;
          default:
            size_t v192 = *(void *)(*(void *)(v133 - 8) + 64);
            uint64_t v193 = v133;
            uint64_t v135 = (char *)v130;
            uint64_t v144 = v193;
            memcpy(v135, v131, v192);
            goto LABEL_107;
        }
        swift_storeEnumTagMultiPayload();
LABEL_107:
        uint64_t v137 = v248;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v144);
        uint64_t v136 = v245;
        goto LABEL_108;
      case 3u:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v252 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v24 = *(int *)(v252 + 20);
        int v16 = (_DWORD *)((char *)v7 + v24);
        int v17 = (_DWORD *)((char *)v8 + v24);
        uint64_t v25 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v25))
        {
LABEL_14:
          uint64_t v26 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
          goto LABEL_88;
        }
        uint64_t v249 = v25;
        uint64_t v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v79))
        {
LABEL_39:
          uint64_t v84 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v16, v17, *(void *)(*(void *)(v84 - 8) + 64));
          uint64_t v85 = v17;
          goto LABEL_87;
        }
        int v97 = swift_getEnumCaseMultiPayload();
        uint64_t v92 = v79;
        uint64_t v242 = v17;
        switch(v97)
        {
          case 9:
LABEL_82:
            uint64_t v238 = v79;
            uint64_t v98 = (uint64_t)v16;
            *int v16 = *v17;
            *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
            uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v228 = (char *)v16 + v145;
            uint64_t v146 = (char *)v17 + v145;
            uint64_t v101 = v238;
            uint64_t v147 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v228, v146, v147);
            break;
          case 5:
LABEL_83:
            uint64_t v239 = v79;
            uint64_t v98 = (uint64_t)v16;
            *(void *)int v16 = *(void *)v17;
            uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v229 = (char *)v16 + v148;
            uint64_t v149 = (char *)v17 + v148;
            uint64_t v101 = v239;
            uint64_t v150 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v229, v149, v150);
            break;
          case 4:
LABEL_54:
            uint64_t v234 = v79;
            uint64_t v98 = (uint64_t)v16;
            *(void *)int v16 = *(void *)v17;
            uint64_t v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v227 = (char *)v16 + v99;
            uint64_t v100 = (char *)v17 + v99;
            uint64_t v101 = v234;
            uint64_t v102 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v227, v100, v102);
            break;
          default:
LABEL_85:
            size_t v151 = *(void *)(*(void *)(v79 - 8) + 64);
            uint64_t v98 = (uint64_t)v16;
            uint64_t v152 = v16;
            uint64_t v101 = v92;
            memcpy(v152, v17, v151);
LABEL_86:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v98, 0, 1, v101);
            int v16 = (_DWORD *)v98;
            uint64_t v85 = v242;
LABEL_87:
            uint64_t v153 = *(int *)(v249 + 20);
            uint64_t v154 = (char *)v16 + v153;
            uint64_t v246 = (char *)v85 + v153;
            uint64_t v155 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v154, v246, v155);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v249);
LABEL_88:
            uint64_t v156 = *(int *)(v252 + 24);
            uint64_t v157 = (char *)v7 + v156;
            uint64_t v158 = (char *)v8 + v156;
            uint64_t v159 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v157, v158, v159);
            goto LABEL_117;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_86;
      case 4u:
        uint64_t v254 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v254))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v7, v8, *(void *)(*(void *)(v27 - 8) + 64));
          goto LABEL_95;
        }
        uint64_t v86 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v86))
        {
          uint64_t v87 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v7, v8, *(void *)(*(void *)(v87 - 8) + 64));
          goto LABEL_94;
        }
        int v103 = swift_getEnumCaseMultiPayload();
        switch(v103)
        {
          case 9:
            _DWORD *v7 = *v8;
            *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
            uint64_t v160 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v161 = (char *)v7 + v160;
            uint64_t v162 = (char *)v8 + v160;
            uint64_t v163 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v161, v162, v163);
            goto LABEL_91;
          case 5:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v164 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v165 = (char *)v7 + v164;
            uint64_t v166 = (char *)v8 + v164;
            uint64_t v167 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
            goto LABEL_91;
          case 4:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v105 = (char *)v7 + v104;
            uint64_t v106 = (char *)v8 + v104;
            uint64_t v107 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
LABEL_91:
            swift_storeEnumTagMultiPayload();
            goto LABEL_93;
        }
        memcpy(v7, v8, *(void *)(*(void *)(v86 - 8) + 64));
LABEL_93:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v86);
LABEL_94:
        uint64_t v168 = *(int *)(v254 + 20);
        uint64_t v169 = (char *)v7 + v168;
        uint64_t v170 = (char *)v8 + v168;
        uint64_t v171 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v254);
LABEL_95:
        uint64_t v251 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v172 = *(int *)(v251 + 20);
        uint64_t v173 = (_DWORD *)((char *)v7 + v172);
        uint64_t v174 = (_DWORD *)((char *)v8 + v172);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8 + v172, 1, v254))
        {
          uint64_t v175 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
LABEL_116:
          uint64_t v213 = *(int *)(v251 + 24);
          uint64_t v214 = (char *)v7 + v213;
          uint64_t v215 = (char *)v8 + v213;
          uint64_t v216 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 32))(v214, v215, v216);
LABEL_117:
          swift_storeEnumTagMultiPayload();
LABEL_118:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
          goto LABEL_119;
        }
        uint64_t v176 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v174, 1, v176))
        {
          uint64_t v177 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v173, v174, *(void *)(*(void *)(v177 - 8) + 64));
LABEL_115:
          uint64_t v208 = *(int *)(v254 + 20);
          uint64_t v209 = (uint64_t)v173;
          uint64_t v210 = (char *)v173 + v208;
          uint64_t v211 = (char *)v174 + v208;
          uint64_t v212 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 32))(v210, v211, v212);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v209, 0, 1, v254);
          goto LABEL_116;
        }
        uint64_t v247 = v176;
        int v178 = swift_getEnumCaseMultiPayload();
        if (v178 == 9)
        {
          uint64_t v179 = (uint64_t)v173;
          *uint64_t v173 = *v174;
          *(_OWORD *)(v173 + 2) = *(_OWORD *)(v174 + 2);
          uint64_t v202 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v203 = (char *)v173 + v202;
          uint64_t v231 = (char *)v174 + v202;
          uint64_t v204 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v203, v231, v204);
        }
        else
        {
          uint64_t v179 = (uint64_t)v173;
          if (v178 == 5)
          {
            *(void *)uint64_t v173 = *(void *)v174;
            uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v206 = (char *)v173 + v205;
            uint64_t v232 = (char *)v174 + v205;
            uint64_t v207 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 32))(v206, v232, v207);
          }
          else
          {
            if (v178 != 4)
            {
              memcpy(v173, v174, *(void *)(*(void *)(v247 - 8) + 64));
              goto LABEL_114;
            }
            *(void *)uint64_t v173 = *(void *)v174;
            uint64_t v180 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v226 = (char *)v174 + v180;
            uint64_t v230 = (char *)v173 + v180;
            uint64_t v181 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v230, v226, v181);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_114:
        uint64_t v173 = (_DWORD *)v179;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v179, 0, 1, v247);
        goto LABEL_115;
      case 5u:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        *((void *)v7 + 2) = *((void *)v8 + 2);
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v29 = (char *)v7 + v28;
        uint64_t v30 = (char *)v8 + v28;
        uint64_t v31 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        goto LABEL_117;
      case 6u:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v33 = (char *)v7 + v32;
        uint64_t v34 = (char *)v8 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_117;
      case 7u:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v252 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v36 = *(int *)(v252 + 20);
        uint64_t v37 = (char *)v7 + v36;
        uint64_t v38 = (char *)v8 + v36;
        uint64_t v39 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_253462A5C(&qword_269CE2268);
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v37 = *(void *)v38;
          v37[8] = v38[8];
          uint64_t v88 = *(int *)(v39 + 20);
          uint64_t v250 = &v37[v88];
          uint64_t v89 = &v38[v88];
          uint64_t v90 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v90 - 8) + 32))(v250, v89, v90);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
        }
        goto LABEL_88;
      case 8u:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v42 = (char *)v7 + v41;
        uint64_t v43 = (char *)v8 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        goto LABEL_117;
      case 9u:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        *((_WORD *)v7 + 8) = *((_WORD *)v8 + 8);
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v46 = (char *)v7 + v45;
        uint64_t v47 = (char *)v8 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        goto LABEL_117;
      case 0xAu:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v50 = (char *)v7 + v49;
        uint64_t v51 = (char *)v8 + v49;
        uint64_t v52 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        goto LABEL_117;
      case 0xBu:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v54 = (char *)v7 + v53;
        uint64_t v55 = (char *)v8 + v53;
        uint64_t v56 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
        goto LABEL_117;
      case 0xCu:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v58 = (char *)v7 + v57;
        uint64_t v59 = (char *)v8 + v57;
        uint64_t v60 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
        goto LABEL_117;
      case 0xDu:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v62 = (char *)v7 + v61;
        uint64_t v63 = (char *)v8 + v61;
        uint64_t v64 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
        goto LABEL_117;
      case 0xEu:
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v66 = (char *)v7 + v65;
        uint64_t v67 = (char *)v8 + v65;
        uint64_t v68 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
        goto LABEL_117;
      case 0xFu:
      case 0x11u:
        uint64_t v69 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v69 - 8) + 32))(v7, v8, v69);
        goto LABEL_117;
      case 0x10u:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v71 = (char *)v7 + v70;
        uint64_t v72 = (char *)v8 + v70;
        uint64_t v73 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
        goto LABEL_117;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_118;
    }
  }
  uint64_t v10 = sub_253462A5C(&qword_269CE2310);
  memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_120:
  uint64_t v221 = *(int *)(a3 + 24);
  uint64_t v222 = (char *)a1 + v221;
  uint64_t v223 = (char *)a2 + v221;
  uint64_t v224 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
  return a1;
}

void *assignWithTake for TranscriptProtoASTFlatAssignExpr(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_DWORD *)((char *)a1 + v7);
  uint64_t v9 = (_DWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (v12)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v16 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v16);
    int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v19))
            {
              uint64_t v20 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_174:
              uint64_t v323 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
              uint64_t v324 = (char *)v8 + v323;
              uint64_t v325 = (char *)v9 + v323;
              uint64_t v326 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 32))(v324, v325, v326);
              goto LABEL_304;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            switch(EnumCaseMultiPayload)
            {
              case 9:
                *uint64_t v8 = *v9;
                *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                uint64_t v315 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v316 = (char *)v8 + v315;
                uint64_t v317 = (char *)v9 + v315;
                uint64_t v318 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 32))(v316, v317, v318);
                break;
              case 5:
                *(void *)uint64_t v8 = *(void *)v9;
                uint64_t v319 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v320 = (char *)v8 + v319;
                uint64_t v321 = (char *)v9 + v319;
                uint64_t v322 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 32))(v320, v321, v322);
                break;
              case 4:
                *(void *)uint64_t v8 = *(void *)v9;
                uint64_t v164 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v165 = (char *)v8 + v164;
                uint64_t v166 = (char *)v9 + v164;
                uint64_t v167 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
                break;
              default:
                memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
                goto LABEL_173;
            }
            swift_storeEnumTagMultiPayload();
LABEL_173:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v19);
            goto LABEL_174;
          case 1u:
            *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
            uint64_t v85 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            uint64_t v86 = *(int *)(v85 + 20);
            __dstc = (_DWORD *)((char *)v8 + v86);
            uint64_t v87 = (char *)v9 + v86;
            uint64_t v88 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88)) {
              goto LABEL_48;
            }
            uint64_t v706 = v88;
            uint64_t v228 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v686 = (void *)v85;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v228))goto LABEL_108; {
            uint64_t v296 = v228;
            }
            uint64_t v297 = v87;
            uint64_t v298 = v296;
            int v299 = swift_getEnumCaseMultiPayload();
            __src = v297;
            switch(v299)
            {
              case 9:
                goto LABEL_252;
              case 5:
                goto LABEL_253;
              case 4:
                goto LABEL_156;
            }
            goto LABEL_255;
          case 2u:
            *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
            uint64_t v90 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            uint64_t v91 = *(int *)(v90 + 20);
            uint64_t v92 = (char *)v8 + v91;
            int v93 = (_DWORD *)((char *)v9 + v91);
            __dstd = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            uint64_t v703 = v90;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v93, 1, (uint64_t)__dstd))
            {
              uint64_t v94 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
              uint64_t v95 = (uint64_t)__dstd;
              goto LABEL_265;
            }
            v687 = v92;
            uint64_t v232 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v93, 1, v232))
            {
              uint64_t v233 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v687, v93, *(void *)(*(void *)(v233 - 8) + 64));
              uint64_t v234 = v687;
              uint64_t v235 = __dstd;
              goto LABEL_264;
            }
            __srca = (void *)v232;
            int v303 = swift_getEnumCaseMultiPayload();
            switch(v303)
            {
              case 9:
                uint64_t v304 = (uint64_t)v687;
                _DWORD *v687 = *v93;
                *(_OWORD *)(v687 + 2) = *(_OWORD *)(v93 + 2);
                uint64_t v471 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v472 = (char *)v687 + v471;
                v660 = (char *)v93 + v471;
                uint64_t v473 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v473 - 8) + 32))(v472, v660, v473);
                goto LABEL_261;
              case 5:
                uint64_t v304 = (uint64_t)v687;
                *(void *)v687 = *(void *)v93;
                uint64_t v474 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v475 = (char *)v687 + v474;
                v661 = (char *)v93 + v474;
                uint64_t v476 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v476 - 8) + 32))(v475, v661, v476);
                goto LABEL_261;
              case 4:
                uint64_t v304 = (uint64_t)v687;
                *(void *)v687 = *(void *)v93;
                uint64_t v305 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v306 = (char *)v687 + v305;
                v650 = (char *)v93 + v305;
                uint64_t v307 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 32))(v306, v650, v307);
LABEL_261:
                swift_storeEnumTagMultiPayload();
                goto LABEL_263;
            }
            uint64_t v304 = (uint64_t)v687;
            memcpy(v687, v93, *(void *)(*(__srca - 1) + 64));
LABEL_263:
            uint64_t v235 = __dstd;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v304, 0, 1, (uint64_t)__srca);
            uint64_t v234 = (_DWORD *)v304;
LABEL_264:
            uint64_t v477 = v235[5];
            uint64_t v95 = (uint64_t)v235;
            uint64_t v478 = (char *)v234 + v477;
            uint64_t v479 = (char *)v93 + v477;
            uint64_t v480 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v480 - 8) + 32))(v478, v479, v480);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v687, 0, 1, v95);
            uint64_t v90 = v703;
LABEL_265:
            uint64_t v481 = *(int *)(v90 + 24);
            uint64_t v482 = (_DWORD *)((char *)v8 + v481);
            uint64_t v483 = (_DWORD *)((char *)v9 + v481);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v481, 1, v95))
            {
              uint64_t v484 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v482, v483, *(void *)(*(void *)(v484 - 8) + 64));
LABEL_296:
              uint64_t v535 = *(int *)(v703 + 28);
              uint64_t v536 = (char *)v8 + v535;
              uint64_t v537 = (char *)v9 + v535;
              uint64_t v538 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v538 - 8) + 32))(v536, v537, v538);
              goto LABEL_304;
            }
            uint64_t v485 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v483, 1, v485))
            {
              uint64_t v486 = sub_253462A5C(&qword_269CDCBA8);
              uint64_t v487 = (char *)v482;
              memcpy(v482, v483, *(void *)(*(void *)(v486 - 8) + 64));
              uint64_t v488 = v483;
              uint64_t v489 = __dstd;
LABEL_295:
              uint64_t v531 = v489[5];
              v532 = &v487[v531];
              uint64_t v533 = (char *)v488 + v531;
              uint64_t v534 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v534 - 8) + 32))(v532, v533, v534);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v487, 0, 1, (uint64_t)__dstd);
              goto LABEL_296;
            }
            int v490 = swift_getEnumCaseMultiPayload();
            __srcd = (void *)v485;
            v696 = v483;
            switch(v490)
            {
              case 9:
                _DWORD *v482 = *v483;
                *(_OWORD *)(v482 + 2) = *(_OWORD *)(v483 + 2);
                uint64_t v521 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v522 = (char *)v482 + v521;
                v523 = (char *)v483 + v521;
                uint64_t v524 = sub_253B07160();
                unint64_t v525 = v522;
                uint64_t v487 = (char *)v482;
                uint64_t v496 = (uint64_t)__srcd;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 32))(v525, v523, v524);
                break;
              case 5:
                *(void *)uint64_t v482 = *(void *)v483;
                uint64_t v526 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v527 = (char *)v482 + v526;
                v528 = (char *)v483 + v526;
                uint64_t v529 = sub_253B07160();
                uint64_t v530 = v527;
                uint64_t v487 = (char *)v482;
                uint64_t v496 = (uint64_t)__srcd;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v529 - 8) + 32))(v530, v528, v529);
                break;
              case 4:
                *(void *)uint64_t v482 = *(void *)v483;
                uint64_t v491 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v492 = (char *)v482 + v491;
                uint64_t v493 = (char *)v483 + v491;
                uint64_t v494 = sub_253B07160();
                uint64_t v495 = v492;
                uint64_t v487 = (char *)v482;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v494 - 8) + 32))(v495, v493, v494);
                uint64_t v496 = (uint64_t)__srcd;
                break;
              default:
                uint64_t v487 = (char *)v482;
                uint64_t v496 = (uint64_t)__srcd;
                memcpy(v487, v483, *(void *)(*(__srcd - 1) + 64));
                goto LABEL_294;
            }
            swift_storeEnumTagMultiPayload();
LABEL_294:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v487, 0, 1, v496);
            uint64_t v489 = __dstd;
            uint64_t v488 = v696;
            goto LABEL_295;
          case 3u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v85 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            uint64_t v96 = *(int *)(v85 + 20);
            __dstc = (_DWORD *)((char *)v8 + v96);
            uint64_t v87 = (char *)v9 + v96;
            uint64_t v97 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v97))
            {
LABEL_48:
              uint64_t v89 = sub_253462A5C(&qword_269CE22E0);
              memcpy(__dstc, v87, *(void *)(*(void *)(v89 - 8) + 64));
              goto LABEL_258;
            }
            uint64_t v706 = v97;
            uint64_t v236 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v686 = (void *)v85;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v236))
            {
LABEL_108:
              uint64_t v229 = sub_253462A5C(&qword_269CDCBA8);
              uint64_t v230 = (uint64_t)__dstc;
              memcpy(__dstc, v87, *(void *)(*(void *)(v229 - 8) + 64));
              uint64_t v231 = v706;
              goto LABEL_257;
            }
            uint64_t v308 = v236;
            uint64_t v297 = v87;
            uint64_t v298 = v308;
            int v309 = swift_getEnumCaseMultiPayload();
            __src = v297;
            switch(v309)
            {
              case 9:
LABEL_252:
                uint64_t v230 = (uint64_t)__dstc;
                _DWORD *__dstc = *(_DWORD *)v297;
                *(_OWORD *)(__dstc + 2) = *(_OWORD *)(v297 + 8);
                uint64_t v457 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v658 = (char *)__dstc + v457;
                v458 = &v297[v457];
                uint64_t v459 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v459 - 8) + 32))(v658, v458, v459);
                break;
              case 5:
LABEL_253:
                uint64_t v230 = (uint64_t)__dstc;
                *(void *)__dstc = *(void *)v297;
                uint64_t v460 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v659 = (char *)__dstc + v460;
                uint64_t v461 = &v297[v460];
                uint64_t v462 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 32))(v659, v461, v462);
                break;
              case 4:
LABEL_156:
                uint64_t v230 = (uint64_t)__dstc;
                *(void *)__dstc = *(void *)v297;
                uint64_t v300 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v649 = (char *)__dstc + v300;
                uint64_t v301 = &v297[v300];
                uint64_t v302 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v649, v301, v302);
                break;
              default:
LABEL_255:
                uint64_t v230 = (uint64_t)__dstc;
                memcpy(__dstc, v297, *(void *)(*(void *)(v298 - 8) + 64));
LABEL_256:
                uint64_t v231 = v706;
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v230, 0, 1, v298);
                uint64_t v87 = __src;
LABEL_257:
                uint64_t v463 = *(int *)(v231 + 20);
                uint64_t v464 = v230 + v463;
                uint64_t v465 = &v87[v463];
                uint64_t v466 = sub_253B07160();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v466 - 8) + 32))(v464, v465, v466);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v230, 0, 1, v706);
                uint64_t v85 = (uint64_t)v686;
LABEL_258:
                uint64_t v467 = *(int *)(v85 + 24);
                uint64_t v468 = (char *)v8 + v467;
                uint64_t v469 = (char *)v9 + v467;
                uint64_t v470 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v470 - 8) + 32))(v468, v469, v470);
                goto LABEL_304;
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_256;
          case 4u:
            uint64_t v98 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v98))
            {
              uint64_t v99 = sub_253462A5C(&qword_269CE22E0);
              memcpy(v8, v9, *(void *)(*(void *)(v99 - 8) + 64));
              goto LABEL_282;
            }
            uint64_t v237 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v237))
            {
              uint64_t v238 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v8, v9, *(void *)(*(void *)(v238 - 8) + 64));
              goto LABEL_281;
            }
            int v310 = swift_getEnumCaseMultiPayload();
            uint64_t v711 = v98;
            switch(v310)
            {
              case 9:
                *uint64_t v8 = *v9;
                *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                uint64_t v497 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v498 = (char *)v8 + v497;
                uint64_t v499 = (char *)v9 + v497;
                uint64_t v500 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v500 - 8) + 32))(v498, v499, v500);
                goto LABEL_278;
              case 5:
                *(void *)uint64_t v8 = *(void *)v9;
                uint64_t v501 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v502 = (char *)v8 + v501;
                uint64_t v503 = (char *)v9 + v501;
                uint64_t v504 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 32))(v502, v503, v504);
                goto LABEL_278;
              case 4:
                *(void *)uint64_t v8 = *(void *)v9;
                uint64_t v311 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v312 = (char *)v8 + v311;
                uint64_t v313 = (char *)v9 + v311;
                uint64_t v314 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32))(v312, v313, v314);
LABEL_278:
                swift_storeEnumTagMultiPayload();
                goto LABEL_280;
            }
            memcpy(v8, v9, *(void *)(*(void *)(v237 - 8) + 64));
LABEL_280:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v237);
            uint64_t v98 = v711;
LABEL_281:
            uint64_t v505 = *(int *)(v98 + 20);
            uint64_t v506 = (char *)v8 + v505;
            uint64_t v507 = (char *)v9 + v505;
            uint64_t v508 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v508 - 8) + 32))(v506, v507, v508);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v98);
LABEL_282:
            uint64_t v509 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            uint64_t v510 = *(int *)(v509 + 20);
            __dstj = (_DWORD *)((char *)v8 + v510);
            uint64_t v511 = (_DWORD *)((char *)v9 + v510);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v510, 1, v98))
            {
              uint64_t v512 = sub_253462A5C(&qword_269CE22E0);
              memcpy(__dstj, v511, *(void *)(*(void *)(v512 - 8) + 64));
LABEL_303:
              uint64_t v549 = *(int *)(v509 + 24);
              v550 = (char *)v8 + v549;
              uint64_t v551 = (char *)v9 + v549;
              uint64_t v552 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v552 - 8) + 32))(v550, v551, v552);
LABEL_304:
              swift_storeEnumTagMultiPayload();
LABEL_305:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v16);
              goto LABEL_358;
            }
            uint64_t v713 = v98;
            uint64_t v513 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v697 = (void *)v509;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v511, 1, v513))
            {
              uint64_t v514 = sub_253462A5C(&qword_269CDCBA8);
              uint64_t v515 = (uint64_t)__dstj;
              memcpy(__dstj, v511, *(void *)(*(void *)(v514 - 8) + 64));
LABEL_302:
              uint64_t v545 = *(int *)(v713 + 20);
              uint64_t v546 = v515 + v545;
              uint64_t v547 = (char *)v511 + v545;
              uint64_t v548 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v548 - 8) + 32))(v546, v547, v548);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v515, 0, 1, v713);
              uint64_t v509 = (uint64_t)v697;
              goto LABEL_303;
            }
            uint64_t v662 = v513;
            int v516 = swift_getEnumCaseMultiPayload();
            switch(v516)
            {
              case 9:
                uint64_t v515 = (uint64_t)__dstj;
                _DWORD *__dstj = *v511;
                *(_OWORD *)(__dstj + 2) = *(_OWORD *)(v511 + 2);
                uint64_t v539 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                int v540 = (char *)__dstj + v539;
                v646 = (char *)v511 + v539;
                uint64_t v541 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v541 - 8) + 32))(v540, v646, v541);
                uint64_t v520 = v662;
                break;
              case 5:
                uint64_t v515 = (uint64_t)__dstj;
                *(void *)__dstj = *(void *)v511;
                uint64_t v542 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v543 = (char *)__dstj + v542;
                v647 = (char *)v511 + v542;
                uint64_t v544 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v544 - 8) + 32))(v543, v647, v544);
                uint64_t v520 = v662;
                break;
              case 4:
                uint64_t v515 = (uint64_t)__dstj;
                *(void *)__dstj = *(void *)v511;
                uint64_t v517 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v518 = (char *)__dstj + v517;
                v645 = (char *)v511 + v517;
                uint64_t v519 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v519 - 8) + 32))(v518, v645, v519);
                uint64_t v520 = v662;
                break;
              default:
                uint64_t v520 = v513;
                uint64_t v515 = (uint64_t)__dstj;
                memcpy(__dstj, v511, *(void *)(*(void *)(v662 - 8) + 64));
                goto LABEL_301;
            }
            swift_storeEnumTagMultiPayload();
LABEL_301:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v515, 0, 1, v520);
            goto LABEL_302;
          case 5u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            *((void *)v8 + 2) = *((void *)v9 + 2);
            uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            uint64_t v101 = (char *)v8 + v100;
            uint64_t v102 = (char *)v9 + v100;
            uint64_t v103 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
            goto LABEL_304;
          case 6u:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            uint64_t v105 = (char *)v8 + v104;
            uint64_t v106 = (char *)v9 + v104;
            uint64_t v107 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
            goto LABEL_304;
          case 7u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            __dste = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            uint64_t v108 = __dste[5];
            uint64_t v109 = (char *)v8 + v108;
            uint64_t v110 = (char *)v9 + v108;
            uint64_t v111 = type metadata accessor for TranscriptProtoASTPickType(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v110, 1, v111))
            {
              uint64_t v112 = sub_253462A5C(&qword_269CE2268);
              memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v109 = *(void *)v110;
              v109[8] = v110[8];
              uint64_t v239 = *(int *)(v111 + 20);
              v707 = &v109[v239];
              uint64_t v240 = &v110[v239];
              uint64_t v241 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v241 - 8) + 32))(v707, v240, v241);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v109, 0, 1, v111);
            }
            uint64_t v242 = __dste[6];
            uint64_t v243 = (char *)v8 + v242;
            uint64_t v244 = (char *)v9 + v242;
            uint64_t v245 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 32))(v243, v244, v245);
            goto LABEL_304;
          case 8u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            uint64_t v114 = (char *)v8 + v113;
            uint64_t v115 = (char *)v9 + v113;
            uint64_t v116 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
            goto LABEL_304;
          case 9u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
            uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            uint64_t v118 = (char *)v8 + v117;
            uint64_t v119 = (char *)v9 + v117;
            uint64_t v120 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
            goto LABEL_304;
          case 0xAu:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            uint64_t v122 = (char *)v8 + v121;
            uint64_t v123 = (char *)v9 + v121;
            uint64_t v124 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
            goto LABEL_304;
          case 0xBu:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            uint64_t v126 = (char *)v8 + v125;
            uint64_t v127 = (char *)v9 + v125;
            uint64_t v128 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
            goto LABEL_304;
          case 0xCu:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            uint64_t v130 = (char *)v8 + v129;
            uint64_t v131 = (char *)v9 + v129;
            uint64_t v132 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
            goto LABEL_304;
          case 0xDu:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            uint64_t v134 = (char *)v8 + v133;
            uint64_t v135 = (char *)v9 + v133;
            uint64_t v136 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
            goto LABEL_304;
          case 0xEu:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            int v138 = (char *)v8 + v137;
            uint64_t v139 = (char *)v9 + v137;
            uint64_t v140 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
            goto LABEL_304;
          case 0xFu:
          case 0x11u:
            uint64_t v141 = sub_253B07160();
            (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v141 - 8) + 32))(v8, v9, v141);
            goto LABEL_304;
          case 0x10u:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            uint64_t v143 = (char *)v8 + v142;
            uint64_t v144 = (char *)v9 + v142;
            uint64_t v145 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
            goto LABEL_304;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_305;
        }
      }
LABEL_18:
      size_t v23 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2320) - 8) + 64);
LABEL_19:
      memcpy(v8, v9, v23);
      goto LABEL_358;
    }
    if (v18)
    {
      sub_2536FA73C();
      goto LABEL_18;
    }
    if (a1 == a2)
    {
LABEL_358:
      uint64_t v635 = *(int *)(v10 + 20);
      v636 = (char *)v8 + v635;
      v637 = (char *)v9 + v635;
      uint64_t v638 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v638 - 8) + 40))(v636, v637, v638);
      goto LABEL_359;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v24 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v8, v9, *(void *)(*(void *)(v25 - 8) + 64));
          goto LABEL_251;
        }
        int v275 = swift_getEnumCaseMultiPayload();
        switch(v275)
        {
          case 9:
            *uint64_t v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            uint64_t v445 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v446 = (char *)v8 + v445;
            uint64_t v447 = (char *)v9 + v445;
            uint64_t v448 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 32))(v446, v447, v448);
            goto LABEL_248;
          case 5:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v449 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v450 = (char *)v8 + v449;
            uint64_t v451 = (char *)v9 + v449;
            uint64_t v452 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v452 - 8) + 32))(v450, v451, v452);
            goto LABEL_248;
          case 4:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v276 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v277 = (char *)v8 + v276;
            uint64_t v278 = (char *)v9 + v276;
            uint64_t v279 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 32))(v277, v278, v279);
LABEL_248:
            swift_storeEnumTagMultiPayload();
            goto LABEL_250;
        }
        memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_250:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v24);
LABEL_251:
        uint64_t v453 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v454 = (char *)v8 + v453;
        uint64_t v455 = (char *)v9 + v453;
        uint64_t v456 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 32))(v454, v455, v456);
        goto LABEL_357;
      case 1u:
        *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
        uint64_t v168 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v169 = *(int *)(v168 + 20);
        __dstf = (_DWORD *)((char *)v8 + v169);
        uint64_t v170 = (_DWORD *)((char *)v9 + v169);
        uint64_t v171 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171)) {
          goto LABEL_87;
        }
        v690 = (int *)v171;
        uint64_t v280 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        uint64_t v708 = v168;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v280)) {
          goto LABEL_144;
        }
        __srcb = (void *)v280;
        int v428 = swift_getEnumCaseMultiPayload();
        switch(v428)
        {
          case 9:
            goto LABEL_306;
          case 5:
            goto LABEL_307;
          case 4:
            goto LABEL_233;
        }
        goto LABEL_353;
      case 2u:
        *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
        uint64_t v173 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v174 = v173[5];
        uint64_t v175 = (char *)v8 + v174;
        uint64_t v176 = (_DWORD *)((char *)v9 + v174);
        __dstg = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v176, 1, (uint64_t)__dstg))
        {
          uint64_t v177 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v175, v176, *(void *)(*(void *)(v177 - 8) + 64));
          goto LABEL_315;
        }
        v691 = v175;
        uint64_t v283 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v709 = v173;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v176, 1, v283))
        {
          uint64_t v284 = sub_253462A5C(&qword_269CDCBA8);
          uint64_t v285 = (uint64_t)v691;
          memcpy(v691, v176, *(void *)(*(void *)(v284 - 8) + 64));
          uint64_t v286 = v176;
          goto LABEL_314;
        }
        uint64_t v657 = v283;
        __srcc = v176;
        int v432 = swift_getEnumCaseMultiPayload();
        switch(v432)
        {
          case 9:
            uint64_t v433 = (uint64_t)v691;
            _DWORD *v691 = *v176;
            *(_OWORD *)(v691 + 2) = *(_OWORD *)(v176 + 2);
            uint64_t v559 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v560 = (char *)v691 + v559;
            v561 = (char *)v176 + v559;
            uint64_t v562 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v562 - 8) + 32))(v560, v561, v562);
            uint64_t v438 = v657;
            goto LABEL_311;
          case 5:
            uint64_t v433 = (uint64_t)v691;
            *(void *)v691 = *(void *)v176;
            uint64_t v563 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v564 = (char *)v691 + v563;
            uint64_t v565 = (char *)v176 + v563;
            uint64_t v566 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v566 - 8) + 32))(v564, v565, v566);
            uint64_t v438 = v657;
            goto LABEL_311;
          case 4:
            uint64_t v433 = (uint64_t)v691;
            *(void *)v691 = *(void *)v176;
            uint64_t v434 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v435 = (char *)v691 + v434;
            uint64_t v436 = (char *)v176 + v434;
            uint64_t v437 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v437 - 8) + 32))(v435, v436, v437);
            uint64_t v438 = v657;
LABEL_311:
            swift_storeEnumTagMultiPayload();
            goto LABEL_313;
        }
        uint64_t v438 = v283;
        uint64_t v433 = (uint64_t)v691;
        memcpy(v691, __srcc, *(void *)(*(void *)(v283 - 8) + 64));
LABEL_313:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v433, 0, 1, v438);
        uint64_t v285 = v433;
        uint64_t v286 = __srcc;
LABEL_314:
        uint64_t v567 = __dstg[5];
        uint64_t v568 = v285 + v567;
        v698 = (char *)v286 + v567;
        uint64_t v569 = sub_253B07160();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v569 - 8) + 32))(v568, v698, v569);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v285, 0, 1, (uint64_t)__dstg);
        uint64_t v173 = v709;
LABEL_315:
        uint64_t v570 = v173[6];
        uint64_t v571 = (_DWORD *)((char *)v8 + v570);
        uint64_t v572 = (_DWORD *)((char *)v9 + v570);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v570, 1, (uint64_t)__dstg))
        {
          uint64_t v573 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v571, v572, *(void *)(*(void *)(v573 - 8) + 64));
LABEL_346:
          uint64_t v614 = v173[7];
          v615 = (char *)v8 + v614;
          v616 = (char *)v9 + v614;
          uint64_t v617 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v617 - 8) + 32))(v615, v616, v617);
LABEL_357:
          swift_storeEnumTagMultiPayload();
          goto LABEL_358;
        }
        v699 = (void *)type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v714 = v173;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v572, 1, (uint64_t)v699))
        {
          uint64_t v574 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v571, v572, *(void *)(*(void *)(v574 - 8) + 64));
          uint64_t v575 = v572;
LABEL_345:
          uint64_t v611 = __dstg[5];
          v612 = (char *)v571 + v611;
          v701 = (char *)v575 + v611;
          uint64_t v613 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v613 - 8) + 32))(v612, v701, v613);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v571, 0, 1, (uint64_t)__dstg);
          uint64_t v173 = v714;
          goto LABEL_346;
        }
        int v576 = swift_getEnumCaseMultiPayload();
        switch(v576)
        {
          case 9:
            _DWORD *v571 = *v572;
            *(_OWORD *)(v571 + 2) = *(_OWORD *)(v572 + 2);
            uint64_t v605 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v667 = (char *)v571 + v605;
            v606 = (char *)v572 + v605;
            uint64_t v607 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v607 - 8) + 32))(v667, v606, v607);
            break;
          case 5:
            *(void *)uint64_t v571 = *(void *)v572;
            uint64_t v608 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v668 = (char *)v571 + v608;
            v609 = (char *)v572 + v608;
            uint64_t v610 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v610 - 8) + 32))(v668, v609, v610);
            break;
          case 4:
            *(void *)uint64_t v571 = *(void *)v572;
            uint64_t v577 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v665 = (char *)v571 + v577;
            v578 = (char *)v572 + v577;
            uint64_t v579 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v579 - 8) + 32))(v665, v578, v579);
            break;
          default:
            memcpy(v571, v572, *(void *)(*(v699 - 1) + 64));
            goto LABEL_344;
        }
        swift_storeEnumTagMultiPayload();
LABEL_344:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v571, 0, 1, (uint64_t)v699);
        uint64_t v575 = v572;
        goto LABEL_345;
      case 3u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v168 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v178 = *(int *)(v168 + 20);
        __dstf = (_DWORD *)((char *)v8 + v178);
        uint64_t v170 = (_DWORD *)((char *)v9 + v178);
        uint64_t v179 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v179))
        {
LABEL_87:
          uint64_t v172 = sub_253462A5C(&qword_269CE22E0);
          memcpy(__dstf, v170, *(void *)(*(void *)(v172 - 8) + 64));
          goto LABEL_356;
        }
        v690 = (int *)v179;
        uint64_t v280 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        uint64_t v708 = v168;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v280))
        {
LABEL_144:
          uint64_t v281 = sub_253462A5C(&qword_269CDCBA8);
          uint64_t v282 = (uint64_t)__dstf;
          memcpy(__dstf, v170, *(void *)(*(void *)(v281 - 8) + 64));
          goto LABEL_355;
        }
        __srcb = (void *)v280;
        int v439 = swift_getEnumCaseMultiPayload();
        switch(v439)
        {
          case 9:
LABEL_306:
            uint64_t v282 = (uint64_t)__dstf;
            _DWORD *__dstf = *v170;
            *(_OWORD *)(__dstf + 2) = *(_OWORD *)(v170 + 2);
            uint64_t v553 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v554 = (char *)__dstf + v553;
            uint64_t v663 = (char *)v170 + v553;
            uint64_t v555 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v555 - 8) + 32))(v554, v663, v555);
            uint64_t v280 = (uint64_t)__srcb;
            goto LABEL_308;
          case 5:
LABEL_307:
            uint64_t v282 = (uint64_t)__dstf;
            *(void *)__dstf = *(void *)v170;
            uint64_t v556 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v557 = (char *)__dstf + v556;
            v664 = (char *)v170 + v556;
            uint64_t v558 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v558 - 8) + 32))(v557, v664, v558);
            uint64_t v280 = (uint64_t)__srcb;
            goto LABEL_308;
          case 4:
LABEL_233:
            uint64_t v282 = (uint64_t)__dstf;
            *(void *)__dstf = *(void *)v170;
            uint64_t v429 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v430 = (char *)__dstf + v429;
            v656 = (char *)v170 + v429;
            uint64_t v431 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v431 - 8) + 32))(v430, v656, v431);
            uint64_t v280 = (uint64_t)__srcb;
LABEL_308:
            swift_storeEnumTagMultiPayload();
            goto LABEL_354;
        }
LABEL_353:
        uint64_t v282 = (uint64_t)__dstf;
        memcpy(__dstf, v170, *(void *)(*(void *)(v280 - 8) + 64));
LABEL_354:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v282, 0, 1, v280);
LABEL_355:
        uint64_t v628 = v690[5];
        __dstk = (void *)(v282 + v628);
        v629 = (char *)v170 + v628;
        uint64_t v630 = sub_253B07160();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v630 - 8) + 32))(__dstk, v629, v630);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v282, 0, 1, (uint64_t)v690);
        uint64_t v168 = v708;
        goto LABEL_356;
      case 4u:
        uint64_t v180 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        __dsth = (int *)v180;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v180))
        {
          uint64_t v181 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v8, v9, *(void *)(*(void *)(v181 - 8) + 64));
          goto LABEL_332;
        }
        uint64_t v287 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v287))
        {
          uint64_t v288 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v8, v9, *(void *)(*(void *)(v288 - 8) + 64));
          goto LABEL_331;
        }
        int v440 = swift_getEnumCaseMultiPayload();
        switch(v440)
        {
          case 9:
            *uint64_t v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            uint64_t v580 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v581 = (char *)v8 + v580;
            v582 = (char *)v9 + v580;
            uint64_t v583 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v583 - 8) + 32))(v581, v582, v583);
            goto LABEL_328;
          case 5:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v584 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v585 = (char *)v8 + v584;
            uint64_t v586 = (char *)v9 + v584;
            uint64_t v587 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v587 - 8) + 32))(v585, v586, v587);
            goto LABEL_328;
          case 4:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v441 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v442 = (char *)v8 + v441;
            uint64_t v443 = (char *)v9 + v441;
            uint64_t v444 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 32))(v442, v443, v444);
LABEL_328:
            swift_storeEnumTagMultiPayload();
            goto LABEL_330;
        }
        memcpy(v8, v9, *(void *)(*(void *)(v287 - 8) + 64));
LABEL_330:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v287);
        uint64_t v180 = (uint64_t)__dsth;
LABEL_331:
        uint64_t v588 = *(int *)(v180 + 20);
        v589 = (char *)v8 + v588;
        v590 = (char *)v9 + v588;
        uint64_t v591 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v591 - 8) + 32))(v589, v590, v591);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v180);
LABEL_332:
        uint64_t v168 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v592 = *(int *)(v168 + 20);
        v593 = (char *)v8 + v592;
        v594 = (_DWORD *)((char *)v9 + v592);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v592, 1, (uint64_t)__dsth))
        {
          uint64_t v595 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v593, v594, *(void *)(*(void *)(v595 - 8) + 64));
LABEL_356:
          uint64_t v631 = *(int *)(v168 + 24);
          v632 = (char *)v8 + v631;
          v633 = (char *)v9 + v631;
          uint64_t v634 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v634 - 8) + 32))(v632, v633, v634);
          goto LABEL_357;
        }
        v700 = v593;
        uint64_t v596 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        uint64_t v715 = v168;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v594, 1, v596))
        {
          uint64_t v597 = sub_253462A5C(&qword_269CDCBA8);
          uint64_t v598 = (uint64_t)v700;
          memcpy(v700, v594, *(void *)(*(void *)(v597 - 8) + 64));
LABEL_352:
          uint64_t v624 = __dsth[5];
          uint64_t v625 = v598 + v624;
          v626 = (char *)v594 + v624;
          uint64_t v627 = sub_253B07160();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v627 - 8) + 32))(v625, v626, v627);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v598, 0, 1, (uint64_t)__dsth);
          uint64_t v168 = v715;
          goto LABEL_356;
        }
        __srce = (void *)v596;
        int v599 = swift_getEnumCaseMultiPayload();
        switch(v599)
        {
          case 9:
            uint64_t v600 = (uint64_t)v700;
            _DWORD *v700 = *v594;
            *(_OWORD *)(v700 + 2) = *(_OWORD *)(v594 + 2);
            uint64_t v618 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v619 = (char *)v700 + v618;
            v669 = (char *)v594 + v618;
            uint64_t v620 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v620 - 8) + 32))(v619, v669, v620);
            uint64_t v604 = (uint64_t)__srce;
            break;
          case 5:
            uint64_t v600 = (uint64_t)v700;
            *(void *)v700 = *(void *)v594;
            uint64_t v621 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v622 = (char *)v700 + v621;
            v670 = (char *)v594 + v621;
            uint64_t v623 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v623 - 8) + 32))(v622, v670, v623);
            uint64_t v604 = (uint64_t)__srce;
            break;
          case 4:
            uint64_t v600 = (uint64_t)v700;
            *(void *)v700 = *(void *)v594;
            uint64_t v601 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v602 = (char *)v700 + v601;
            v666 = (char *)v594 + v601;
            uint64_t v603 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v603 - 8) + 32))(v602, v666, v603);
            uint64_t v604 = (uint64_t)__srce;
            break;
          default:
            uint64_t v600 = (uint64_t)v700;
            uint64_t v604 = (uint64_t)__srce;
            memcpy(v700, v594, *(void *)(*(__srce - 1) + 64));
            goto LABEL_351;
        }
        swift_storeEnumTagMultiPayload();
LABEL_351:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v600, 0, 1, v604);
        uint64_t v598 = v600;
        goto LABEL_352;
      case 5u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((void *)v8 + 2) = *((void *)v9 + 2);
        uint64_t v182 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v183 = (char *)v8 + v182;
        uint64_t v184 = (char *)v9 + v182;
        uint64_t v185 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v183, v184, v185);
        goto LABEL_357;
      case 6u:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v186 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v187 = (char *)v8 + v186;
        uint64_t v188 = (char *)v9 + v186;
        uint64_t v189 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 32))(v187, v188, v189);
        goto LABEL_357;
      case 7u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        __dsti = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v190 = __dsti[5];
        uint64_t v191 = (char *)v8 + v190;
        size_t v192 = (char *)v9 + v190;
        uint64_t v193 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v192, 1, v193))
        {
          uint64_t v194 = sub_253462A5C(&qword_269CE2268);
          memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v191 = *(void *)v192;
          v191[8] = v192[8];
          uint64_t v289 = *(int *)(v193 + 20);
          v710 = &v191[v289];
          long long v290 = &v192[v289];
          uint64_t v291 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v291 - 8) + 32))(v710, v290, v291);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v191, 0, 1, v193);
        }
        uint64_t v292 = __dsti[6];
        uint64_t v293 = (char *)v8 + v292;
        uint64_t v294 = (char *)v9 + v292;
        uint64_t v295 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 32))(v293, v294, v295);
        goto LABEL_357;
      case 8u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v196 = (char *)v8 + v195;
        uint64_t v197 = (char *)v9 + v195;
        uint64_t v198 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
        goto LABEL_357;
      case 9u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
        uint64_t v199 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v200 = (char *)v8 + v199;
        uint64_t v201 = (char *)v9 + v199;
        uint64_t v202 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v200, v201, v202);
        goto LABEL_357;
      case 0xAu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v203 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v204 = (char *)v8 + v203;
        uint64_t v205 = (char *)v9 + v203;
        uint64_t v206 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 32))(v204, v205, v206);
        goto LABEL_357;
      case 0xBu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v207 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v208 = (char *)v8 + v207;
        uint64_t v209 = (char *)v9 + v207;
        uint64_t v210 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v208, v209, v210);
        goto LABEL_357;
      case 0xCu:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v211 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v212 = (char *)v8 + v211;
        uint64_t v213 = (char *)v9 + v211;
        uint64_t v214 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
        goto LABEL_357;
      case 0xDu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v215 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v216 = (char *)v8 + v215;
        uint64_t v217 = (char *)v9 + v215;
        uint64_t v218 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v216, v217, v218);
        goto LABEL_357;
      case 0xEu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v219 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v220 = (char *)v8 + v219;
        uint64_t v221 = (char *)v9 + v219;
        uint64_t v222 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 32))(v220, v221, v222);
        goto LABEL_357;
      case 0xFu:
      case 0x11u:
        uint64_t v223 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v223 - 8) + 32))(v8, v9, v223);
        goto LABEL_357;
      case 0x10u:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v225 = (char *)v8 + v224;
        uint64_t v226 = (char *)v9 + v224;
        uint64_t v227 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v225, v226, v227);
        goto LABEL_357;
      default:
        size_t v23 = *(void *)(*(void *)(v16 - 8) + 64);
        goto LABEL_19;
    }
  }
  if (!v12)
  {
    uint64_t v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE2320);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_229:
      uint64_t v424 = *(int *)(v10 + 20);
      uint64_t v425 = (char *)v8 + v424;
      uint64_t v426 = (char *)v9 + v424;
      uint64_t v427 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 32))(v425, v426, v427);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_359;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v21 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v8, v9, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_138:
          uint64_t v271 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          uint64_t v272 = (char *)v8 + v271;
          uint64_t v273 = (char *)v9 + v271;
          uint64_t v274 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v272, v273, v274);
          goto LABEL_227;
        }
        int v146 = swift_getEnumCaseMultiPayload();
        switch(v146)
        {
          case 9:
            *uint64_t v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            uint64_t v263 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v264 = (char *)v8 + v263;
            uint64_t v265 = (char *)v9 + v263;
            uint64_t v266 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v264, v265, v266);
            break;
          case 5:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v267 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v268 = (char *)v8 + v267;
            uint64_t v269 = (char *)v9 + v267;
            uint64_t v270 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v268, v269, v270);
            break;
          case 4:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v148 = (char *)v8 + v147;
            uint64_t v149 = (char *)v9 + v147;
            uint64_t v150 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
            goto LABEL_137;
        }
        swift_storeEnumTagMultiPayload();
LABEL_137:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v21);
        goto LABEL_138;
      case 1u:
        *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
        __dst = (int *)type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v26 = __dst[5];
        uint64_t v27 = (_DWORD *)((char *)v8 + v26);
        uint64_t v28 = (_DWORD *)((char *)v9 + v26);
        uint64_t v29 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29)) {
          goto LABEL_30;
        }
        uint64_t v704 = v29;
        uint64_t v151 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v151)) {
          goto LABEL_77;
        }
        int v246 = swift_getEnumCaseMultiPayload();
        uint64_t v247 = v151;
        v688 = v28;
        switch(v246)
        {
          case 9:
            goto LABEL_192;
          case 5:
            goto LABEL_193;
          case 4:
            goto LABEL_128;
        }
        goto LABEL_195;
      case 2u:
        *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
        __dsta = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v30 = __dsta[5];
        uint64_t v31 = (_DWORD *)((char *)v8 + v30);
        uint64_t v32 = (_DWORD *)((char *)v9 + v30);
        uint64_t v702 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v702))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
          uint64_t v34 = v702;
          goto LABEL_184;
        }
        uint64_t v152 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v152))
        {
          uint64_t v153 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v31, v32, *(void *)(*(void *)(v153 - 8) + 64));
          uint64_t v154 = v32;
          uint64_t v155 = (uint64_t)v31;
          goto LABEL_183;
        }
        int v248 = swift_getEnumCaseMultiPayload();
        v689 = v32;
        switch(v248)
        {
          case 9:
            *uint64_t v31 = *v32;
            *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
            uint64_t v327 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            __srch = (char *)v31 + v327;
            uint64_t v328 = (char *)v32 + v327;
            uint64_t v329 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 32))(__srch, v328, v329);
            goto LABEL_180;
          case 5:
            *(void *)uint64_t v31 = *(void *)v32;
            uint64_t v330 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            __srci = (char *)v31 + v330;
            uint64_t v331 = (char *)v32 + v330;
            uint64_t v332 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(__srci, v331, v332);
            goto LABEL_180;
          case 4:
            *(void *)uint64_t v31 = *(void *)v32;
            uint64_t v249 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            __srcf = (char *)v31 + v249;
            uint64_t v250 = (char *)v32 + v249;
            uint64_t v251 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(__srcf, v250, v251);
LABEL_180:
            swift_storeEnumTagMultiPayload();
            goto LABEL_182;
        }
        memcpy(v31, v32, *(void *)(*(void *)(v152 - 8) + 64));
LABEL_182:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v152);
        uint64_t v155 = (uint64_t)v31;
        uint64_t v154 = v689;
LABEL_183:
        uint64_t v34 = v702;
        uint64_t v333 = *(int *)(v702 + 20);
        uint64_t v334 = v155 + v333;
        v692 = (char *)v154 + v333;
        uint64_t v335 = sub_253B07160();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v335 - 8) + 32))(v334, v692, v335);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v155, 0, 1, v702);
LABEL_184:
        uint64_t v336 = __dsta[6];
        v337 = (_DWORD *)((char *)v8 + v336);
        uint64_t v338 = (_DWORD *)((char *)v9 + v336);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v336, 1, v34))
        {
          uint64_t v339 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v337, v338, *(void *)(*(void *)(v339 - 8) + 64));
LABEL_219:
          uint64_t v405 = __dsta[7];
          uint64_t v406 = (char *)v8 + v405;
          uint64_t v407 = (char *)v9 + v405;
          uint64_t v408 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v408 - 8) + 32))(v406, v407, v408);
          goto LABEL_227;
        }
        uint64_t v340 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v338, 1, v340))
        {
          uint64_t v341 = sub_253462A5C(&qword_269CDCBA8);
          uint64_t v342 = (char *)v337;
          memcpy(v337, v338, *(void *)(*(void *)(v341 - 8) + 64));
          uint64_t v343 = v338;
          uint64_t v344 = v702;
LABEL_218:
          uint64_t v401 = *(int *)(v344 + 20);
          uint64_t v402 = &v342[v401];
          uint64_t v403 = (char *)v343 + v401;
          uint64_t v404 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v404 - 8) + 32))(v402, v403, v404);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v342, 0, 1, v702);
          goto LABEL_219;
        }
        int v345 = swift_getEnumCaseMultiPayload();
        v693 = v338;
        switch(v345)
        {
          case 9:
            _DWORD *v337 = *v338;
            *(_OWORD *)(v337 + 2) = *(_OWORD *)(v338 + 2);
            uint64_t v389 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            __srcm = (void *)v340;
            uint64_t v390 = (char *)v337 + v389;
            uint64_t v391 = (char *)v338 + v389;
            uint64_t v392 = sub_253B07160();
            uint64_t v393 = v390;
            uint64_t v342 = (char *)v337;
            uint64_t v351 = (uint64_t)__srcm;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v392 - 8) + 32))(v393, v391, v392);
            break;
          case 5:
            *(void *)v337 = *(void *)v338;
            uint64_t v394 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            __srcn = (void *)v340;
            uint64_t v395 = (char *)v337 + v394;
            uint64_t v396 = (char *)v338 + v394;
            uint64_t v397 = sub_253B07160();
            uint64_t v398 = v395;
            uint64_t v342 = (char *)v337;
            uint64_t v351 = (uint64_t)__srcn;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v397 - 8) + 32))(v398, v396, v397);
            break;
          case 4:
            *(void *)v337 = *(void *)v338;
            uint64_t v346 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            __srcj = (void *)v340;
            uint64_t v347 = (char *)v337 + v346;
            uint64_t v348 = (char *)v338 + v346;
            uint64_t v349 = sub_253B07160();
            uint64_t v350 = v347;
            uint64_t v342 = (char *)v337;
            uint64_t v351 = (uint64_t)__srcj;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 32))(v350, v348, v349);
            break;
          default:
            size_t v399 = *(void *)(*(void *)(v340 - 8) + 64);
            uint64_t v400 = v340;
            uint64_t v342 = (char *)v337;
            uint64_t v351 = v400;
            memcpy(v342, v338, v399);
            goto LABEL_217;
        }
        swift_storeEnumTagMultiPayload();
LABEL_217:
        uint64_t v344 = v702;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v342, 0, 1, v351);
        uint64_t v343 = v693;
        goto LABEL_218;
      case 3u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        __dst = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v35 = __dst[5];
        uint64_t v27 = (_DWORD *)((char *)v8 + v35);
        uint64_t v28 = (_DWORD *)((char *)v9 + v35);
        uint64_t v36 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v36))
        {
LABEL_30:
          uint64_t v37 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v27, v28, *(void *)(*(void *)(v37 - 8) + 64));
          goto LABEL_198;
        }
        uint64_t v704 = v36;
        uint64_t v151 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v151))
        {
LABEL_77:
          uint64_t v156 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v27, v28, *(void *)(*(void *)(v156 - 8) + 64));
          uint64_t v157 = v28;
          goto LABEL_197;
        }
        int v252 = swift_getEnumCaseMultiPayload();
        uint64_t v247 = v151;
        v688 = v28;
        switch(v252)
        {
          case 9:
LABEL_192:
            __srck = (void *)v151;
            uint64_t v253 = (uint64_t)v27;
            *uint64_t v27 = *v28;
            *(_OWORD *)(v27 + 2) = *(_OWORD *)(v28 + 2);
            uint64_t v352 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v651 = (char *)v27 + v352;
            uint64_t v353 = (char *)v28 + v352;
            uint64_t v256 = (uint64_t)__srck;
            uint64_t v354 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 32))(v651, v353, v354);
            break;
          case 5:
LABEL_193:
            __srcl = (void *)v151;
            uint64_t v253 = (uint64_t)v27;
            *(void *)uint64_t v27 = *(void *)v28;
            uint64_t v355 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v652 = (char *)v27 + v355;
            uint64_t v356 = (char *)v28 + v355;
            uint64_t v256 = (uint64_t)__srcl;
            uint64_t v357 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 32))(v652, v356, v357);
            break;
          case 4:
LABEL_128:
            __srcg = (void *)v151;
            uint64_t v253 = (uint64_t)v27;
            *(void *)uint64_t v27 = *(void *)v28;
            uint64_t v254 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v648 = (char *)v27 + v254;
            uint64_t v255 = (char *)v28 + v254;
            uint64_t v256 = (uint64_t)__srcg;
            uint64_t v257 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 32))(v648, v255, v257);
            break;
          default:
LABEL_195:
            size_t v358 = *(void *)(*(void *)(v151 - 8) + 64);
            uint64_t v253 = (uint64_t)v27;
            uint64_t v359 = v27;
            uint64_t v256 = v247;
            memcpy(v359, v28, v358);
LABEL_196:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v253, 0, 1, v256);
            uint64_t v27 = (_DWORD *)v253;
            uint64_t v157 = v688;
LABEL_197:
            uint64_t v360 = *(int *)(v704 + 20);
            uint64_t v361 = (char *)v27 + v360;
            v694 = (char *)v157 + v360;
            uint64_t v362 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 32))(v361, v694, v362);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v704);
LABEL_198:
            uint64_t v363 = __dst[6];
            uint64_t v364 = (char *)v8 + v363;
            int v365 = (char *)v9 + v363;
            uint64_t v366 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 32))(v364, v365, v366);
            goto LABEL_227;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_196;
      case 4u:
        __dstb = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, (uint64_t)__dstb))
        {
          uint64_t v38 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v8, v9, *(void *)(*(void *)(v38 - 8) + 64));
          goto LABEL_205;
        }
        uint64_t v158 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v158))
        {
          uint64_t v159 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v8, v9, *(void *)(*(void *)(v159 - 8) + 64));
          goto LABEL_204;
        }
        int v258 = swift_getEnumCaseMultiPayload();
        switch(v258)
        {
          case 9:
            *uint64_t v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            uint64_t v367 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v368 = (char *)v8 + v367;
            int v369 = (char *)v9 + v367;
            uint64_t v370 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 32))(v368, v369, v370);
            goto LABEL_201;
          case 5:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v371 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v372 = (char *)v8 + v371;
            uint64_t v373 = (char *)v9 + v371;
            uint64_t v374 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 32))(v372, v373, v374);
            goto LABEL_201;
          case 4:
            *(void *)uint64_t v8 = *(void *)v9;
            uint64_t v259 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v260 = (char *)v8 + v259;
            uint64_t v261 = (char *)v9 + v259;
            uint64_t v262 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 32))(v260, v261, v262);
LABEL_201:
            swift_storeEnumTagMultiPayload();
            goto LABEL_203;
        }
        memcpy(v8, v9, *(void *)(*(void *)(v158 - 8) + 64));
LABEL_203:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v158);
LABEL_204:
        uint64_t v375 = __dstb[5];
        uint64_t v376 = (char *)v8 + v375;
        uint64_t v377 = (char *)v9 + v375;
        uint64_t v378 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, (uint64_t)__dstb);
LABEL_205:
        uint64_t v712 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v379 = *(int *)(v712 + 20);
        uint64_t v380 = (_DWORD *)((char *)v8 + v379);
        uint64_t v381 = (_DWORD *)((char *)v9 + v379);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9 + v379, 1, (uint64_t)__dstb))
        {
          uint64_t v382 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v380, v381, *(void *)(*(void *)(v382 - 8) + 64));
LABEL_226:
          uint64_t v420 = *(int *)(v712 + 24);
          uint64_t v421 = (char *)v8 + v420;
          uint64_t v422 = (char *)v9 + v420;
          uint64_t v423 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 32))(v421, v422, v423);
LABEL_227:
          swift_storeEnumTagMultiPayload();
LABEL_228:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v13);
          goto LABEL_229;
        }
        uint64_t v383 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v381, 1, v383))
        {
          uint64_t v384 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v380, v381, *(void *)(*(void *)(v384 - 8) + 64));
LABEL_225:
          uint64_t v415 = __dstb[5];
          uint64_t v416 = (uint64_t)v380;
          uint64_t v417 = (char *)v380 + v415;
          uint64_t v418 = (char *)v381 + v415;
          uint64_t v419 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v419 - 8) + 32))(v417, v418, v419);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v416, 0, 1, (uint64_t)__dstb);
          goto LABEL_226;
        }
        v695 = (void *)v383;
        int v385 = swift_getEnumCaseMultiPayload();
        if (v385 == 9)
        {
          uint64_t v386 = (uint64_t)v380;
          *uint64_t v380 = *v381;
          *(_OWORD *)(v380 + 2) = *(_OWORD *)(v381 + 2);
          uint64_t v409 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          size_t v410 = (char *)v380 + v409;
          v654 = (char *)v381 + v409;
          uint64_t v411 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v411 - 8) + 32))(v410, v654, v411);
        }
        else
        {
          uint64_t v386 = (uint64_t)v380;
          if (v385 == 5)
          {
            *(void *)uint64_t v380 = *(void *)v381;
            uint64_t v412 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            long long v413 = (char *)v380 + v412;
            v655 = (char *)v381 + v412;
            uint64_t v414 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 32))(v413, v655, v414);
          }
          else
          {
            if (v385 != 4)
            {
              memcpy(v380, v381, *(void *)(*(v695 - 1) + 64));
              goto LABEL_224;
            }
            *(void *)uint64_t v380 = *(void *)v381;
            uint64_t v387 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v644 = (char *)v381 + v387;
            uint64_t v653 = (char *)v380 + v387;
            uint64_t v388 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 32))(v653, v644, v388);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_224:
        uint64_t v380 = (_DWORD *)v386;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v386, 0, 1, (uint64_t)v695);
        goto LABEL_225;
      case 5u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((void *)v8 + 2) = *((void *)v9 + 2);
        uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v40 = (char *)v8 + v39;
        uint64_t v41 = (char *)v9 + v39;
        uint64_t v42 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        goto LABEL_227;
      case 6u:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v44 = (char *)v8 + v43;
        uint64_t v45 = (char *)v9 + v43;
        uint64_t v46 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
        goto LABEL_227;
      case 7u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        __dst = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v47 = __dst[5];
        uint64_t v48 = (char *)v8 + v47;
        uint64_t v49 = (char *)v9 + v47;
        uint64_t v50 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = sub_253462A5C(&qword_269CE2268);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v48 = *(void *)v49;
          v48[8] = v49[8];
          uint64_t v160 = *(int *)(v50 + 20);
          v705 = &v48[v160];
          uint64_t v161 = &v49[v160];
          uint64_t v162 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v162 - 8) + 32))(v705, v161, v162);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, v50);
        }
        goto LABEL_198;
      case 8u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v53 = (char *)v8 + v52;
        uint64_t v54 = (char *)v9 + v52;
        uint64_t v55 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        goto LABEL_227;
      case 9u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v57 = (char *)v8 + v56;
        uint64_t v58 = (char *)v9 + v56;
        uint64_t v59 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_227;
      case 0xAu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v61 = (char *)v8 + v60;
        uint64_t v62 = (char *)v9 + v60;
        uint64_t v63 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_227;
      case 0xBu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v65 = (char *)v8 + v64;
        uint64_t v66 = (char *)v9 + v64;
        uint64_t v67 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        goto LABEL_227;
      case 0xCu:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v69 = (char *)v8 + v68;
        uint64_t v70 = (char *)v9 + v68;
        uint64_t v71 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
        goto LABEL_227;
      case 0xDu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v73 = (char *)v8 + v72;
        uint64_t v74 = (char *)v9 + v72;
        uint64_t v75 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_227;
      case 0xEu:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v76 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v77 = (char *)v8 + v76;
        uint64_t v78 = (char *)v9 + v76;
        uint64_t v79 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        goto LABEL_227;
      case 0xFu:
      case 0x11u:
        uint64_t v80 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v80 - 8) + 32))(v8, v9, v80);
        goto LABEL_227;
      case 0x10u:
        *(void *)uint64_t v8 = *(void *)v9;
        uint64_t v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v82 = (char *)v8 + v81;
        uint64_t v83 = (char *)v9 + v81;
        uint64_t v84 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        goto LABEL_227;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_228;
    }
  }
LABEL_7:
  uint64_t v15 = sub_253462A5C(&qword_269CE2310);
  memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_359:
  uint64_t v639 = *(int *)(a3 + 24);
  uint64_t v640 = (char *)a1 + v639;
  v641 = (char *)a2 + v639;
  uint64_t v642 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v642 - 8) + 40))(v640, v641, v642);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatAssignExpr(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538C7690);
}

uint64_t sub_2538C7690()
{
  return sub_25393618C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatAssignExpr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538C76B0);
}

void sub_2538C76B0()
{
}

void sub_2538C76BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2320);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
          {
            uint64_t v11 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v91 = a2[1];
                *a1 = *a2;
                a1[1] = v91;
                swift_bridgeObjectRetain();
                goto LABEL_53;
              case 4u:
                *a1 = *a2;
                uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v269 = (char *)a1 + v106;
                uint64_t v107 = (char *)a2 + v106;
                uint64_t v108 = sub_253B07160();
                uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
                swift_bridgeObjectRetain();
                v109(v269, v107, v108);
                goto LABEL_53;
              case 5u:
                *a1 = *a2;
                uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v270 = (char *)a1 + v110;
                uint64_t v111 = (char *)a2 + v110;
                uint64_t v112 = sub_253B07160();
                uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
                swift_bridgeObjectRetain();
                v113(v270, v111, v112);
                goto LABEL_53;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                uint64_t v114 = a2[2];
                a1[1] = a2[1];
                a1[2] = v114;
                uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v271 = (char *)a1 + v115;
                uint64_t v116 = (char *)a2 + v115;
                uint64_t v117 = sub_253B07160();
                uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
                swift_bridgeObjectRetain();
                v118(v271, v116, v117);
LABEL_53:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
          }
          uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
          goto LABEL_112;
        case 1u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          uint64_t v13 = *(int *)(v12 + 20);
          uint64_t v14 = (uint64_t *)((char *)a1 + v13);
          uint64_t v15 = (uint64_t *)((char *)a2 + v13);
          uint64_t v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16)) {
            goto LABEL_14;
          }
          uint64_t v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v92)) {
            goto LABEL_37;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v102 = v15[1];
              *uint64_t v14 = *v15;
              v14[1] = v102;
              swift_bridgeObjectRetain();
              goto LABEL_60;
            case 4u:
              *uint64_t v14 = *v15;
              uint64_t v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v235 = (char *)v15 + v123;
              uint64_t v250 = (char *)v14 + v123;
              uint64_t v124 = sub_253B07160();
              uint64_t v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
              swift_bridgeObjectRetain();
              v220(v250, v235, v124);
              goto LABEL_60;
            case 5u:
              *uint64_t v14 = *v15;
              uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v236 = (char *)v15 + v125;
              uint64_t v251 = (char *)v14 + v125;
              uint64_t v126 = sub_253B07160();
              uint64_t v221 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
              swift_bridgeObjectRetain();
              v221(v251, v236, v126);
              goto LABEL_60;
            case 9u:
              *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
              uint64_t v127 = v15[2];
              v14[1] = v15[1];
              v14[2] = v127;
              uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v237 = (char *)v15 + v128;
              int v252 = (char *)v14 + v128;
              uint64_t v129 = sub_253B07160();
              uint64_t v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
              swift_bridgeObjectRetain();
              v222(v252, v237, v129);
LABEL_60:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(*(void *)(v92 - 8) + 64));
              break;
          }
          goto LABEL_80;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          int v17 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          uint64_t v18 = v17[5];
          uint64_t v19 = (uint64_t *)((char *)a1 + v18);
          uint64_t v20 = (uint64_t *)((char *)a2 + v18);
          uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
          {
            uint64_t v22 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            uint64_t v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v93))
            {
              uint64_t v94 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v19, v20, *(void *)(*(void *)(v94 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v103 = v20[1];
                  *uint64_t v19 = *v20;
                  v19[1] = v103;
                  swift_bridgeObjectRetain();
                  goto LABEL_66;
                case 4u:
                  *uint64_t v19 = *v20;
                  uint64_t v130 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v238 = (char *)v20 + v130;
                  uint64_t v253 = (char *)v19 + v130;
                  uint64_t v131 = sub_253B07160();
                  uint64_t v223 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v223(v253, v238, v131);
                  goto LABEL_66;
                case 5u:
                  *uint64_t v19 = *v20;
                  uint64_t v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v239 = (char *)v20 + v132;
                  uint64_t v254 = (char *)v19 + v132;
                  uint64_t v133 = sub_253B07160();
                  uint64_t v224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v224(v254, v239, v133);
                  goto LABEL_66;
                case 9u:
                  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
                  uint64_t v134 = v20[2];
                  v19[1] = v20[1];
                  v19[2] = v134;
                  uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v240 = (char *)v20 + v135;
                  uint64_t v255 = (char *)v19 + v135;
                  uint64_t v136 = sub_253B07160();
                  uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v225(v255, v240, v136);
LABEL_66:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v19, v20, *(void *)(*(void *)(v93 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v93);
            }
            uint64_t v137 = *(int *)(v21 + 20);
            int v138 = (char *)v19 + v137;
            uint64_t v139 = (char *)v20 + v137;
            uint64_t v140 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
          }
          uint64_t v141 = v17[6];
          uint64_t v142 = (uint64_t *)((char *)a1 + v141);
          uint64_t v143 = (uint64_t *)((char *)a2 + v141);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v141, 1, v21))
          {
            uint64_t v144 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          }
          else
          {
            uint64_t v145 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v143, 1, v145))
            {
              uint64_t v146 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v147 = v143[1];
                  *uint64_t v142 = *v143;
                  v142[1] = v147;
                  swift_bridgeObjectRetain();
                  goto LABEL_100;
                case 4u:
                  *uint64_t v142 = *v143;
                  uint64_t v185 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v244 = (char *)v143 + v185;
                  uint64_t v262 = (char *)v142 + v185;
                  uint64_t v186 = sub_253B07160();
                  uint64_t v229 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v229(v262, v244, v186);
                  goto LABEL_100;
                case 5u:
                  *uint64_t v142 = *v143;
                  uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v245 = (char *)v143 + v187;
                  uint64_t v263 = (char *)v142 + v187;
                  uint64_t v188 = sub_253B07160();
                  uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v230(v263, v245, v188);
                  goto LABEL_100;
                case 9u:
                  *(_DWORD *)uint64_t v142 = *(_DWORD *)v143;
                  uint64_t v189 = v143[2];
                  v142[1] = v143[1];
                  v142[2] = v189;
                  uint64_t v190 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  int v246 = (char *)v143 + v190;
                  uint64_t v264 = (char *)v142 + v190;
                  uint64_t v191 = sub_253B07160();
                  uint64_t v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v231(v264, v246, v191);
LABEL_100:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v142, 0, 1, v145);
            }
            uint64_t v192 = *(int *)(v21 + 20);
            uint64_t v193 = (char *)v142 + v192;
            uint64_t v194 = (char *)v143 + v192;
            uint64_t v195 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v194, v195);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v142, 0, 1, v21);
          }
          uint64_t v196 = v17[7];
          uint64_t v197 = (char *)a1 + v196;
          uint64_t v198 = (char *)a2 + v196;
          uint64_t v199 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v197, v198, v199);
          goto LABEL_112;
        case 3u:
          uint64_t v23 = a2[1];
          *a1 = *a2;
          a1[1] = v23;
          uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          uint64_t v24 = *(int *)(v12 + 20);
          uint64_t v14 = (uint64_t *)((char *)a1 + v24);
          uint64_t v15 = (uint64_t *)((char *)a2 + v24);
          uint64_t v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
          {
LABEL_14:
            uint64_t v25 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v14, v15, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            uint64_t v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v92))
            {
LABEL_37:
              uint64_t v95 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v14, v15, *(void *)(*(void *)(v95 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v104 = v15[1];
                  *uint64_t v14 = *v15;
                  v14[1] = v104;
                  swift_bridgeObjectRetain();
                  goto LABEL_79;
                case 4u:
                  *uint64_t v14 = *v15;
                  uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v241 = (char *)v15 + v148;
                  uint64_t v256 = (char *)v14 + v148;
                  uint64_t v149 = sub_253B07160();
                  uint64_t v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v226(v256, v241, v149);
                  goto LABEL_79;
                case 5u:
                  *uint64_t v14 = *v15;
                  uint64_t v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v242 = (char *)v15 + v150;
                  uint64_t v257 = (char *)v14 + v150;
                  uint64_t v151 = sub_253B07160();
                  uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v227(v257, v242, v151);
                  goto LABEL_79;
                case 9u:
                  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
                  uint64_t v152 = v15[2];
                  v14[1] = v15[1];
                  v14[2] = v152;
                  uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v243 = (char *)v15 + v153;
                  int v258 = (char *)v14 + v153;
                  uint64_t v154 = sub_253B07160();
                  uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v228(v258, v243, v154);
LABEL_79:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v14, v15, *(void *)(*(void *)(v92 - 8) + 64));
                  break;
              }
LABEL_80:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v92);
            }
            uint64_t v155 = *(int *)(v16 + 20);
            uint64_t v156 = (char *)v14 + v155;
            uint64_t v157 = (char *)v15 + v155;
            uint64_t v158 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
          }
LABEL_82:
          uint64_t v159 = *(int *)(v12 + 24);
          uint64_t v160 = (char *)a1 + v159;
          uint64_t v161 = (char *)a2 + v159;
          uint64_t v162 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
LABEL_112:
          swift_storeEnumTagMultiPayload();
LABEL_113:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
          break;
        case 4u:
          uint64_t v26 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
          {
            uint64_t v27 = sub_253462A5C(&qword_269CE22E0);
            memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            uint64_t v96 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v96))
            {
              uint64_t v97 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(a1, a2, *(void *)(*(void *)(v97 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v105 = a2[1];
                  *a1 = *a2;
                  a1[1] = v105;
                  swift_bridgeObjectRetain();
                  goto LABEL_87;
                case 4u:
                  *a1 = *a2;
                  uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v259 = (char *)a2 + v163;
                  uint64_t v272 = (char *)a1 + v163;
                  uint64_t v164 = sub_253B07160();
                  uint64_t v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v165(v272, v259, v164);
                  goto LABEL_87;
                case 5u:
                  *a1 = *a2;
                  uint64_t v166 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v260 = (char *)a2 + v166;
                  uint64_t v273 = (char *)a1 + v166;
                  uint64_t v167 = sub_253B07160();
                  uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v168(v273, v260, v167);
                  goto LABEL_87;
                case 9u:
                  *(_DWORD *)a1 = *(_DWORD *)a2;
                  uint64_t v169 = a2[2];
                  a1[1] = a2[1];
                  a1[2] = v169;
                  uint64_t v170 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v261 = (char *)a2 + v170;
                  uint64_t v274 = (char *)a1 + v170;
                  uint64_t v171 = sub_253B07160();
                  uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v172(v274, v261, v171);
LABEL_87:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(void *)(*(void *)(v96 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v96);
            }
            uint64_t v173 = *(int *)(v26 + 20);
            uint64_t v174 = (char *)a1 + v173;
            uint64_t v175 = (char *)a2 + v173;
            uint64_t v176 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
          }
          uint64_t v177 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          uint64_t v178 = *(int *)(v177 + 20);
          uint64_t v179 = (uint64_t *)((char *)a1 + v178);
          uint64_t v180 = (uint64_t *)((char *)a2 + v178);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v178, 1, v26))
          {
            uint64_t v181 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
          }
          else
          {
            uint64_t v182 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v180, 1, v182))
            {
              uint64_t v183 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v179, v180, *(void *)(*(void *)(v183 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  uint64_t v184 = v180[1];
                  void *v179 = *v180;
                  v179[1] = v184;
                  swift_bridgeObjectRetain();
                  goto LABEL_108;
                case 4u:
                  void *v179 = *v180;
                  uint64_t v200 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v247 = (char *)v180 + v200;
                  uint64_t v265 = (char *)v179 + v200;
                  uint64_t v201 = sub_253B07160();
                  uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v232(v265, v247, v201);
                  goto LABEL_108;
                case 5u:
                  void *v179 = *v180;
                  uint64_t v202 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  int v248 = (char *)v180 + v202;
                  uint64_t v266 = (char *)v179 + v202;
                  uint64_t v203 = sub_253B07160();
                  uint64_t v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v233(v266, v248, v203);
                  goto LABEL_108;
                case 9u:
                  *(_DWORD *)uint64_t v179 = *(_DWORD *)v180;
                  uint64_t v204 = v180[2];
                  v179[1] = v180[1];
                  v179[2] = v204;
                  uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v249 = (char *)v180 + v205;
                  uint64_t v267 = (char *)v179 + v205;
                  uint64_t v206 = sub_253B07160();
                  uint64_t v234 = *(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v234(v267, v249, v206);
LABEL_108:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v179, v180, *(void *)(*(void *)(v182 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v179, 0, 1, v182);
            }
            uint64_t v207 = *(int *)(v26 + 20);
            uint64_t v208 = (char *)v179 + v207;
            uint64_t v209 = (char *)v180 + v207;
            uint64_t v210 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v179, 0, 1, v26);
          }
          uint64_t v211 = *(int *)(v177 + 24);
          uint64_t v212 = (char *)a1 + v211;
          uint64_t v213 = (char *)a2 + v211;
          uint64_t v214 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v212, v213, v214);
          goto LABEL_112;
        case 5u:
          uint64_t v28 = a2[1];
          *a1 = *a2;
          a1[1] = v28;
          a1[2] = a2[2];
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v268 = (char *)a1 + v29;
          uint64_t v30 = (char *)a2 + v29;
          uint64_t v31 = sub_253B07160();
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v32(v268, v30, v31);
          goto LABEL_112;
        case 6u:
          *a1 = *a2;
          uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = (char *)a2 + v33;
          uint64_t v36 = sub_253B07160();
          uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v37(v34, v35, v36);
          goto LABEL_112;
        case 7u:
          uint64_t v38 = a2[1];
          *a1 = *a2;
          a1[1] = v38;
          uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          uint64_t v39 = *(int *)(v12 + 20);
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)a2 + v39;
          uint64_t v42 = type metadata accessor for TranscriptProtoASTPickType(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
          {
            uint64_t v43 = sub_253462A5C(&qword_269CE2268);
            memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v40 = *(void *)v41;
            v40[8] = v41[8];
            uint64_t v98 = *(int *)(v42 + 20);
            uint64_t v99 = &v40[v98];
            uint64_t v100 = &v41[v98];
            uint64_t v101 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
          }
          goto LABEL_82;
        case 8u:
          uint64_t v44 = a2[1];
          *a1 = *a2;
          a1[1] = v44;
          uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          uint64_t v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          uint64_t v48 = sub_253B07160();
          uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
          swift_bridgeObjectRetain();
          v49(v46, v47, v48);
          goto LABEL_112;
        case 9u:
          uint64_t v50 = a2[1];
          *a1 = *a2;
          a1[1] = v50;
          *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
          uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          uint64_t v52 = (char *)a1 + v51;
          uint64_t v53 = (char *)a2 + v51;
          uint64_t v54 = sub_253B07160();
          uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
          swift_bridgeObjectRetain();
          v55(v52, v53, v54);
          goto LABEL_112;
        case 0xAu:
          uint64_t v56 = a2[1];
          *a1 = *a2;
          a1[1] = v56;
          uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          uint64_t v58 = (char *)a1 + v57;
          uint64_t v59 = (char *)a2 + v57;
          uint64_t v60 = sub_253B07160();
          uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
          swift_bridgeObjectRetain();
          v61(v58, v59, v60);
          goto LABEL_112;
        case 0xBu:
          uint64_t v62 = a2[1];
          *a1 = *a2;
          a1[1] = v62;
          uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          uint64_t v64 = (char *)a1 + v63;
          uint64_t v65 = (char *)a2 + v63;
          uint64_t v66 = sub_253B07160();
          uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
          swift_bridgeObjectRetain();
          v67(v64, v65, v66);
          goto LABEL_112;
        case 0xCu:
          *a1 = *a2;
          uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          uint64_t v69 = (char *)a1 + v68;
          uint64_t v70 = (char *)a2 + v68;
          uint64_t v71 = sub_253B07160();
          uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
          swift_bridgeObjectRetain();
          v72(v69, v70, v71);
          goto LABEL_112;
        case 0xDu:
          uint64_t v73 = a2[1];
          *a1 = *a2;
          a1[1] = v73;
          uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          uint64_t v77 = sub_253B07160();
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v75, v76, v77);
          goto LABEL_112;
        case 0xEu:
          uint64_t v79 = a2[1];
          *a1 = *a2;
          a1[1] = v79;
          uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          uint64_t v81 = (char *)a1 + v80;
          uint64_t v82 = (char *)a2 + v80;
          uint64_t v83 = sub_253B07160();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          v84(v81, v82, v83);
          goto LABEL_112;
        case 0xFu:
        case 0x11u:
          uint64_t v85 = sub_253B07160();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v85 - 8) + 16))(a1, a2, v85);
          goto LABEL_112;
        case 0x10u:
          *a1 = *a2;
          uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          uint64_t v87 = (char *)a1 + v86;
          uint64_t v88 = (char *)a2 + v86;
          uint64_t v89 = sub_253B07160();
          uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
          swift_bridgeObjectRetain();
          v90(v87, v88, v89);
          goto LABEL_112;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_113;
      }
    }
    uint64_t v215 = *(int *)(a3 + 20);
    uint64_t v216 = (char *)a1 + v215;
    uint64_t v217 = (char *)a2 + v215;
    uint64_t v218 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16))(v216, v217, v218);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatExpr(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              uint64_t v20 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_36;
            case 5u:
              swift_bridgeObjectRelease();
              uint64_t v20 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_36:
              uint64_t v21 = *(int *)(v20 + 20);
              goto LABEL_38;
            case 9u:
              swift_bridgeObjectRelease();
              uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_38:
              uint64_t v22 = a1 + v21;
              uint64_t v23 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
              break;
            default:
              break;
          }
        }
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
        goto LABEL_40;
      case 1u:
        uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9)) {
          goto LABEL_47;
        }
        uint64_t v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              goto LABEL_17;
            case 4u:
              goto LABEL_41;
            case 5u:
              goto LABEL_42;
            case 9u:
              goto LABEL_44;
            default:
              goto LABEL_46;
          }
        }
        goto LABEL_46;
      case 2u:
        uint64_t v11 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v12 = a1 + v11[5];
        uint64_t v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13))
        {
          uint64_t v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v14))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v30 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_50;
              case 5u:
                swift_bridgeObjectRelease();
                uint64_t v30 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_50:
                uint64_t v31 = *(int *)(v30 + 20);
                goto LABEL_52;
              case 9u:
                swift_bridgeObjectRelease();
                uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_52:
                uint64_t v32 = v12 + v31;
                uint64_t v33 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
                break;
              default:
                break;
            }
          }
          uint64_t v34 = v12 + *(int *)(v13 + 20);
          uint64_t v35 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
        }
        uint64_t v36 = a1 + v11[6];
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v36, 1, v13))
        {
          uint64_t v37 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v36, 1, v37))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v47 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_70;
              case 5u:
                swift_bridgeObjectRelease();
                uint64_t v47 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_70:
                uint64_t v48 = *(int *)(v47 + 20);
                goto LABEL_72;
              case 9u:
                swift_bridgeObjectRelease();
                uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_72:
                uint64_t v49 = v36 + v48;
                uint64_t v50 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
                break;
              default:
                break;
            }
          }
          uint64_t v51 = v36 + *(int *)(v13 + 20);
          uint64_t v52 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
        }
        uint64_t v18 = v11[7];
        goto LABEL_82;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9)) {
          goto LABEL_47;
        }
        uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v15))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
LABEL_17:
              swift_bridgeObjectRelease();
              break;
            case 4u:
LABEL_41:
              swift_bridgeObjectRelease();
              uint64_t v24 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_43;
            case 5u:
LABEL_42:
              swift_bridgeObjectRelease();
              uint64_t v24 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_43:
              uint64_t v25 = *(int *)(v24 + 20);
              goto LABEL_45;
            case 9u:
LABEL_44:
              swift_bridgeObjectRelease();
              uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_45:
              uint64_t v26 = v8 + v25;
              uint64_t v27 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
              break;
            default:
              break;
          }
        }
LABEL_46:
        uint64_t v28 = v8 + *(int *)(v9 + 20);
        uint64_t v29 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
LABEL_47:
        uint64_t v18 = *(int *)(v7 + 24);
        goto LABEL_82;
      case 4u:
        uint64_t v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v16))
        {
          uint64_t v17 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v17))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v38 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_60;
              case 5u:
                swift_bridgeObjectRelease();
                uint64_t v38 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_60:
                uint64_t v39 = *(int *)(v38 + 20);
                goto LABEL_62;
              case 9u:
                swift_bridgeObjectRelease();
                uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_62:
                uint64_t v40 = a1 + v39;
                uint64_t v41 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
                break;
              default:
                break;
            }
          }
          uint64_t v42 = a1 + *(int *)(v16 + 20);
          uint64_t v43 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        }
        uint64_t v44 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v45 = a1 + *(int *)(v44 + 20);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v16))
        {
          uint64_t v46 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v46))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v53 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_77;
              case 5u:
                swift_bridgeObjectRelease();
                uint64_t v53 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_77:
                uint64_t v54 = *(int *)(v53 + 20);
                goto LABEL_79;
              case 9u:
                swift_bridgeObjectRelease();
                uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_79:
                uint64_t v55 = v45 + v54;
                uint64_t v56 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
                break;
              default:
                break;
            }
          }
          uint64_t v57 = v45 + *(int *)(v16 + 20);
          uint64_t v58 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
        }
        uint64_t v18 = *(int *)(v44 + 24);
        goto LABEL_82;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        goto LABEL_82;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
        goto LABEL_40;
      case 7u:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9)) {
          goto LABEL_46;
        }
        goto LABEL_47;
      case 8u:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
        goto LABEL_40;
      case 9u:
        swift_bridgeObjectRelease();
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        goto LABEL_82;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
        goto LABEL_40;
      case 0xBu:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
        goto LABEL_40;
      case 0xCu:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
        goto LABEL_40;
      case 0xDu:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
        goto LABEL_40;
      case 0xEu:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
        goto LABEL_40;
      case 0xFu:
      case 0x11u:
        uint64_t v5 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        break;
      case 0x10u:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_40:
        uint64_t v18 = *(int *)(updated + 20);
LABEL_82:
        uint64_t v59 = a1 + v18;
        uint64_t v60 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
        break;
      default:
        break;
    }
  }
  uint64_t v61 = a1 + *(int *)(a2 + 20);
  uint64_t v62 = sub_253B07160();
  uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
  return v63(v61, v62);
}

void *initializeWithCopy for TranscriptProtoASTFlatExpr(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2320);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
        {
          uint64_t v9 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v90 = a2[1];
              *a1 = *a2;
              a1[1] = v90;
              swift_bridgeObjectRetain();
              goto LABEL_51;
            case 4u:
              *a1 = *a2;
              uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v307 = (char *)a1 + v105;
              uint64_t v106 = (char *)a2 + v105;
              uint64_t v107 = sub_253B07160();
              uint64_t v108 = a3;
              uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v307, v106, v107);
              a3 = v108;
              goto LABEL_51;
            case 5u:
              *a1 = *a2;
              uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v308 = (char *)a1 + v110;
              uint64_t v111 = (char *)a2 + v110;
              uint64_t v112 = sub_253B07160();
              uint64_t v113 = a3;
              uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
              swift_bridgeObjectRetain();
              v114(v308, v111, v112);
              a3 = v113;
              goto LABEL_51;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              uint64_t v115 = a2[2];
              a1[1] = a2[1];
              a1[2] = v115;
              uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              int v309 = (char *)a1 + v116;
              uint64_t v117 = (char *)a2 + v116;
              uint64_t v118 = sub_253B07160();
              uint64_t v119 = a3;
              uint64_t v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
              swift_bridgeObjectRetain();
              v120(v309, v117, v118);
              a3 = v119;
LABEL_51:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
        }
        uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v122 = (char *)a1 + v121;
        uint64_t v123 = (char *)a2 + v121;
        uint64_t v124 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
        goto LABEL_110;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
          goto LABEL_12;
        }
        uint64_t v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v91)) {
          goto LABEL_35;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v101 = v13[1];
            void *v12 = *v13;
            v12[1] = v101;
            swift_bridgeObjectRetain();
            goto LABEL_58;
          case 4u:
            void *v12 = *v13;
            uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v273 = (char *)v13 + v125;
            uint64_t v288 = (char *)v12 + v125;
            uint64_t v126 = a3;
            uint64_t v127 = sub_253B07160();
            int v258 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v128 = v127;
            a3 = v126;
            v258(v288, v273, v128);
            goto LABEL_58;
          case 5u:
            void *v12 = *v13;
            uint64_t v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v274 = (char *)v13 + v129;
            uint64_t v289 = (char *)v12 + v129;
            uint64_t v130 = a3;
            uint64_t v131 = sub_253B07160();
            uint64_t v259 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v132 = v131;
            a3 = v130;
            v259(v289, v274, v132);
            goto LABEL_58;
          case 9u:
            *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
            uint64_t v133 = v13[2];
            v12[1] = v13[1];
            v12[2] = v133;
            uint64_t v134 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            int v275 = (char *)v13 + v134;
            long long v290 = (char *)v12 + v134;
            uint64_t v135 = a3;
            uint64_t v136 = sub_253B07160();
            uint64_t v260 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v137 = v136;
            a3 = v135;
            v260(v290, v275, v137);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(void *)(*(void *)(v91 - 8) + 64));
            break;
        }
        goto LABEL_78;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v16 = v15[5];
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (void *)((char *)a2 + v16);
        uint64_t v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v92))
          {
            uint64_t v93 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v17, v18, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v102 = v18[1];
                *uint64_t v17 = *v18;
                v17[1] = v102;
                swift_bridgeObjectRetain();
                goto LABEL_64;
              case 4u:
                *uint64_t v17 = *v18;
                uint64_t v138 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v276 = (char *)v18 + v138;
                uint64_t v291 = (char *)v17 + v138;
                uint64_t v139 = a3;
                uint64_t v140 = sub_253B07160();
                uint64_t v261 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v141 = v140;
                a3 = v139;
                v261(v291, v276, v141);
                goto LABEL_64;
              case 5u:
                *uint64_t v17 = *v18;
                uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v277 = (char *)v18 + v142;
                uint64_t v292 = (char *)v17 + v142;
                uint64_t v143 = a3;
                uint64_t v144 = sub_253B07160();
                uint64_t v262 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v145 = v144;
                a3 = v143;
                v262(v292, v277, v145);
                goto LABEL_64;
              case 9u:
                *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
                uint64_t v146 = v18[2];
                v17[1] = v18[1];
                v17[2] = v146;
                uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v278 = (char *)v18 + v147;
                uint64_t v293 = (char *)v17 + v147;
                uint64_t v148 = a3;
                uint64_t v149 = sub_253B07160();
                uint64_t v263 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v150 = v149;
                a3 = v148;
                v263(v293, v278, v150);
LABEL_64:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v17, v18, *(void *)(*(void *)(v92 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v92);
          }
          uint64_t v151 = *(int *)(v19 + 20);
          uint64_t v152 = (char *)v17 + v151;
          uint64_t v153 = (char *)v18 + v151;
          uint64_t v154 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v152, v153, v154);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v155 = v15[6];
        uint64_t v156 = (void *)((char *)a1 + v155);
        uint64_t v157 = (void *)((char *)a2 + v155);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v155, 1, v19))
        {
          uint64_t v158 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          uint64_t v159 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v157, 1, v159))
          {
            uint64_t v160 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v156, v157, *(void *)(*(void *)(v160 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v161 = v157[1];
                *uint64_t v156 = *v157;
                v156[1] = v161;
                swift_bridgeObjectRetain();
                goto LABEL_98;
              case 4u:
                *uint64_t v156 = *v157;
                uint64_t v211 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v282 = (char *)v157 + v211;
                uint64_t v300 = (char *)v156 + v211;
                uint64_t v212 = a3;
                uint64_t v213 = sub_253B07160();
                uint64_t v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v214 = v213;
                a3 = v212;
                v267(v300, v282, v214);
                goto LABEL_98;
              case 5u:
                *uint64_t v156 = *v157;
                uint64_t v215 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v283 = (char *)v157 + v215;
                uint64_t v301 = (char *)v156 + v215;
                uint64_t v216 = a3;
                uint64_t v217 = sub_253B07160();
                v268 = *(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v218 = v217;
                a3 = v216;
                v268(v301, v283, v218);
                goto LABEL_98;
              case 9u:
                *(_DWORD *)uint64_t v156 = *(_DWORD *)v157;
                uint64_t v219 = v157[2];
                v156[1] = v157[1];
                v156[2] = v219;
                uint64_t v220 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v284 = (char *)v157 + v220;
                uint64_t v302 = (char *)v156 + v220;
                uint64_t v221 = a3;
                uint64_t v222 = sub_253B07160();
                uint64_t v269 = *(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v223 = v222;
                a3 = v221;
                v269(v302, v284, v223);
LABEL_98:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v156, v157, *(void *)(*(void *)(v159 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v156, 0, 1, v159);
          }
          uint64_t v224 = *(int *)(v19 + 20);
          uint64_t v225 = (char *)v156 + v224;
          uint64_t v226 = (char *)v157 + v224;
          uint64_t v227 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16))(v225, v226, v227);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v156, 0, 1, v19);
        }
        uint64_t v228 = v15[7];
        uint64_t v229 = (char *)a1 + v228;
        uint64_t v230 = (char *)a2 + v228;
        uint64_t v231 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
        goto LABEL_110;
      case 3u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v22 = *(int *)(v10 + 20);
        uint64_t v12 = (void *)((char *)a1 + v22);
        uint64_t v13 = (void *)((char *)a2 + v22);
        uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
LABEL_12:
          uint64_t v23 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v91))
          {
LABEL_35:
            uint64_t v94 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v12, v13, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v103 = v13[1];
                void *v12 = *v13;
                v12[1] = v103;
                swift_bridgeObjectRetain();
                goto LABEL_77;
              case 4u:
                void *v12 = *v13;
                uint64_t v162 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v279 = (char *)v13 + v162;
                uint64_t v294 = (char *)v12 + v162;
                uint64_t v163 = a3;
                uint64_t v164 = sub_253B07160();
                uint64_t v264 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v165 = v164;
                a3 = v163;
                v264(v294, v279, v165);
                goto LABEL_77;
              case 5u:
                void *v12 = *v13;
                uint64_t v166 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v280 = (char *)v13 + v166;
                uint64_t v295 = (char *)v12 + v166;
                uint64_t v167 = a3;
                uint64_t v168 = sub_253B07160();
                uint64_t v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v169 = v168;
                a3 = v167;
                v265(v295, v280, v169);
                goto LABEL_77;
              case 9u:
                *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
                uint64_t v170 = v13[2];
                v12[1] = v13[1];
                v12[2] = v170;
                uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v281 = (char *)v13 + v171;
                uint64_t v296 = (char *)v12 + v171;
                uint64_t v172 = a3;
                uint64_t v173 = sub_253B07160();
                uint64_t v266 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v174 = v173;
                a3 = v172;
                v266(v296, v281, v174);
LABEL_77:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v12, v13, *(void *)(*(void *)(v91 - 8) + 64));
                break;
            }
LABEL_78:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v91);
          }
          uint64_t v175 = *(int *)(v14 + 20);
          uint64_t v176 = (char *)v12 + v175;
          uint64_t v177 = (char *)v13 + v175;
          uint64_t v178 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
LABEL_80:
        uint64_t v179 = *(int *)(v10 + 24);
        uint64_t v180 = (char *)a1 + v179;
        uint64_t v181 = (char *)a2 + v179;
        uint64_t v182 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v180, v181, v182);
LABEL_110:
        swift_storeEnumTagMultiPayload();
LABEL_111:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        break;
      case 4u:
        uint64_t v24 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_269CE22E0);
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v95 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v95))
          {
            uint64_t v96 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(a1, a2, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v104 = a2[1];
                *a1 = *a2;
                a1[1] = v104;
                swift_bridgeObjectRetain();
                goto LABEL_85;
              case 4u:
                *a1 = *a2;
                uint64_t v183 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v297 = (char *)a2 + v183;
                int v310 = (char *)a1 + v183;
                uint64_t v184 = a3;
                uint64_t v185 = sub_253B07160();
                uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v187 = v185;
                a3 = v184;
                v186(v310, v297, v187);
                goto LABEL_85;
              case 5u:
                *a1 = *a2;
                uint64_t v188 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v298 = (char *)a2 + v188;
                uint64_t v311 = (char *)a1 + v188;
                uint64_t v189 = a3;
                uint64_t v190 = sub_253B07160();
                uint64_t v191 = *(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v192 = v190;
                a3 = v189;
                v191(v311, v298, v192);
                goto LABEL_85;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                uint64_t v193 = a2[2];
                a1[1] = a2[1];
                a1[2] = v193;
                uint64_t v194 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                int v299 = (char *)a2 + v194;
                uint64_t v312 = (char *)a1 + v194;
                uint64_t v195 = a3;
                uint64_t v196 = sub_253B07160();
                uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v198 = v196;
                a3 = v195;
                v197(v312, v299, v198);
LABEL_85:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v95 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v95);
          }
          uint64_t v199 = *(int *)(v24 + 20);
          uint64_t v200 = (char *)a1 + v199;
          uint64_t v201 = (char *)a2 + v199;
          uint64_t v202 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
        }
        uint64_t v203 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v204 = *(int *)(v203 + 20);
        uint64_t v205 = (void *)((char *)a1 + v204);
        uint64_t v206 = (void *)((char *)a2 + v204);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v204, 1, v24))
        {
          uint64_t v207 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v205, v206, *(void *)(*(void *)(v207 - 8) + 64));
        }
        else
        {
          uint64_t v208 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v206, 1, v208))
          {
            uint64_t v209 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v205, v206, *(void *)(*(void *)(v209 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v210 = v206[1];
                void *v205 = *v206;
                v205[1] = v210;
                swift_bridgeObjectRetain();
                goto LABEL_106;
              case 4u:
                void *v205 = *v206;
                uint64_t v232 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v285 = (char *)v206 + v232;
                int v303 = (char *)v205 + v232;
                uint64_t v233 = a3;
                uint64_t v234 = sub_253B07160();
                uint64_t v270 = *(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v235 = v234;
                a3 = v233;
                v270(v303, v285, v235);
                goto LABEL_106;
              case 5u:
                void *v205 = *v206;
                uint64_t v236 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v286 = (char *)v206 + v236;
                uint64_t v304 = (char *)v205 + v236;
                uint64_t v237 = a3;
                uint64_t v238 = sub_253B07160();
                uint64_t v271 = *(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v239 = v238;
                a3 = v237;
                v271(v304, v286, v239);
                goto LABEL_106;
              case 9u:
                *(_DWORD *)uint64_t v205 = *(_DWORD *)v206;
                uint64_t v240 = v206[2];
                v205[1] = v206[1];
                v205[2] = v240;
                uint64_t v241 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v287 = (char *)v206 + v241;
                uint64_t v305 = (char *)v205 + v241;
                uint64_t v242 = a3;
                uint64_t v243 = sub_253B07160();
                uint64_t v272 = *(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v244 = v243;
                a3 = v242;
                v272(v305, v287, v244);
LABEL_106:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v205, 0, 1, v208);
          }
          uint64_t v245 = *(int *)(v24 + 20);
          int v246 = (char *)v205 + v245;
          uint64_t v247 = (char *)v206 + v245;
          uint64_t v248 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 16))(v246, v247, v248);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v205, 0, 1, v24);
        }
        uint64_t v249 = *(int *)(v203 + 24);
        uint64_t v250 = (char *)a1 + v249;
        uint64_t v251 = (char *)a2 + v249;
        uint64_t v252 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 16))(v250, v251, v252);
        goto LABEL_110;
      case 5u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        a1[2] = a2[2];
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v306 = (char *)a1 + v27;
        uint64_t v28 = (char *)a2 + v27;
        uint64_t v29 = sub_253B07160();
        uint64_t v30 = a3;
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v306, v28, v29);
        a3 = v30;
        goto LABEL_110;
      case 6u:
        *a1 = *a2;
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        goto LABEL_110;
      case 7u:
        uint64_t v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v38 = *(int *)(v10 + 20);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_269CE2268);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v39 = *(void *)v40;
          v39[8] = v40[8];
          uint64_t v97 = *(int *)(v41 + 20);
          uint64_t v98 = &v39[v97];
          uint64_t v99 = &v40[v97];
          uint64_t v100 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
        }
        goto LABEL_80;
      case 8u:
        uint64_t v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B07160();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        goto LABEL_110;
      case 9u:
        uint64_t v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = sub_253B07160();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        goto LABEL_110;
      case 0xAu:
        uint64_t v55 = a2[1];
        *a1 = *a2;
        a1[1] = v55;
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_253B07160();
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v57, v58, v59);
        goto LABEL_110;
      case 0xBu:
        uint64_t v61 = a2[1];
        *a1 = *a2;
        a1[1] = v61;
        uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        uint64_t v65 = sub_253B07160();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        goto LABEL_110;
      case 0xCu:
        *a1 = *a2;
        uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = sub_253B07160();
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        goto LABEL_110;
      case 0xDu:
        uint64_t v72 = a2[1];
        *a1 = *a2;
        a1[1] = v72;
        uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        uint64_t v76 = sub_253B07160();
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        goto LABEL_110;
      case 0xEu:
        uint64_t v78 = a2[1];
        *a1 = *a2;
        a1[1] = v78;
        uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = sub_253B07160();
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        goto LABEL_110;
      case 0xFu:
      case 0x11u:
        uint64_t v84 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v84 - 8) + 16))(a1, a2, v84);
        goto LABEL_110;
      case 0x10u:
        *a1 = *a2;
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = sub_253B07160();
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v86, v87, v88);
        goto LABEL_110;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_111;
    }
  }
  uint64_t v253 = *(int *)(a3 + 20);
  uint64_t v254 = (char *)a1 + v253;
  uint64_t v255 = (char *)a2 + v253;
  uint64_t v256 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16))(v254, v255, v256);
  return a1;
}

void *assignWithCopy for TranscriptProtoASTFlatExpr(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
          {
            uint64_t v10 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_100;
              case 4u:
                *a1 = *a2;
                uint64_t v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v559 = (char *)a1 + v178;
                uint64_t v179 = (char *)a2 + v178;
                uint64_t v180 = sub_253B07160();
                uint64_t v181 = a3;
                uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16);
                swift_bridgeObjectRetain();
                v182(v559, v179, v180);
                a3 = v181;
                goto LABEL_100;
              case 5u:
                *a1 = *a2;
                uint64_t v183 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v560 = (char *)a1 + v183;
                uint64_t v184 = (char *)a2 + v183;
                uint64_t v185 = sub_253B07160();
                uint64_t v186 = a3;
                uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
                swift_bridgeObjectRetain();
                v187(v560, v184, v185);
                a3 = v186;
                goto LABEL_100;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                uint64_t v188 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v561 = (char *)a1 + v188;
                uint64_t v189 = (char *)a2 + v188;
                uint64_t v190 = sub_253B07160();
                uint64_t v191 = a3;
                uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16);
                swift_bridgeObjectRetain();
                v192(v561, v189, v190);
                a3 = v191;
LABEL_100:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
          }
          uint64_t v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          uint64_t v194 = (char *)a1 + v193;
          uint64_t v195 = (char *)a2 + v193;
          uint64_t v196 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
          goto LABEL_166;
        case 1u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          uint64_t v15 = *(int *)(v14 + 20);
          uint64_t v16 = (void *)((char *)a1 + v15);
          uint64_t v17 = (void *)((char *)a2 + v15);
          uint64_t v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18)) {
            goto LABEL_20;
          }
          uint64_t v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v156)) {
            goto LABEL_65;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *uint64_t v16 = *v17;
              v16[1] = v17[1];
              swift_bridgeObjectRetain();
              goto LABEL_114;
            case 4u:
              *uint64_t v16 = *v17;
              uint64_t v216 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v491 = (char *)v17 + v216;
              uint64_t v521 = (char *)v16 + v216;
              uint64_t v217 = a3;
              uint64_t v218 = sub_253B07160();
              uint64_t v461 = *(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v219 = v218;
              a3 = v217;
              v461(v521, v491, v219);
              goto LABEL_114;
            case 5u:
              *uint64_t v16 = *v17;
              uint64_t v220 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v492 = (char *)v17 + v220;
              uint64_t v522 = (char *)v16 + v220;
              uint64_t v221 = a3;
              uint64_t v222 = sub_253B07160();
              uint64_t v462 = *(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v223 = v222;
              a3 = v221;
              v462(v522, v492, v223);
              goto LABEL_114;
            case 9u:
              *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
              v16[1] = v17[1];
              v16[2] = v17[2];
              uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v493 = (char *)v17 + v224;
              v523 = (char *)v16 + v224;
              uint64_t v225 = a3;
              uint64_t v226 = sub_253B07160();
              uint64_t v463 = *(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v227 = v226;
              a3 = v225;
              v463(v523, v493, v227);
LABEL_114:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v16, v17, *(void *)(*(void *)(v156 - 8) + 64));
              break;
          }
          goto LABEL_134;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v19 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          uint64_t v20 = v19[5];
          uint64_t v21 = (void *)((char *)a1 + v20);
          uint64_t v22 = (void *)((char *)a2 + v20);
          uint64_t v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
          {
            uint64_t v24 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            uint64_t v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v157))
            {
              uint64_t v158 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v21, v22, *(void *)(*(void *)(v158 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *uint64_t v21 = *v22;
                  v21[1] = v22[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_120;
                case 4u:
                  *uint64_t v21 = *v22;
                  uint64_t v228 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v494 = (char *)v22 + v228;
                  uint64_t v524 = (char *)v21 + v228;
                  uint64_t v229 = a3;
                  uint64_t v230 = sub_253B07160();
                  uint64_t v464 = *(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v231 = v230;
                  a3 = v229;
                  v464(v524, v494, v231);
                  goto LABEL_120;
                case 5u:
                  *uint64_t v21 = *v22;
                  uint64_t v232 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v495 = (char *)v22 + v232;
                  unint64_t v525 = (char *)v21 + v232;
                  uint64_t v233 = a3;
                  uint64_t v234 = sub_253B07160();
                  uint64_t v465 = *(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v235 = v234;
                  a3 = v233;
                  v465(v525, v495, v235);
                  goto LABEL_120;
                case 9u:
                  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
                  v21[1] = v22[1];
                  v21[2] = v22[2];
                  uint64_t v236 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v496 = (char *)v22 + v236;
                  uint64_t v526 = (char *)v21 + v236;
                  uint64_t v237 = a3;
                  uint64_t v238 = sub_253B07160();
                  uint64_t v466 = *(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v239 = v238;
                  a3 = v237;
                  v466(v526, v496, v239);
LABEL_120:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v21, v22, *(void *)(*(void *)(v157 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v157);
            }
            uint64_t v240 = *(int *)(v23 + 20);
            uint64_t v241 = (char *)v21 + v240;
            uint64_t v242 = (char *)v22 + v240;
            uint64_t v243 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16))(v241, v242, v243);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
          }
          uint64_t v244 = v19[6];
          uint64_t v245 = (void *)((char *)a1 + v244);
          int v246 = (void *)((char *)a2 + v244);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v244, 1, v23))
          {
            uint64_t v247 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v245, v246, *(void *)(*(void *)(v247 - 8) + 64));
          }
          else
          {
            uint64_t v248 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v246, 1, v248))
            {
              uint64_t v249 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v245, v246, *(void *)(*(void *)(v249 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *uint64_t v245 = *v246;
                  v245[1] = v246[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_154;
                case 4u:
                  *uint64_t v245 = *v246;
                  uint64_t v296 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v500 = (char *)v246 + v296;
                  uint64_t v533 = (char *)v245 + v296;
                  uint64_t v297 = a3;
                  uint64_t v298 = sub_253B07160();
                  uint64_t v470 = *(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v299 = v298;
                  a3 = v297;
                  v470(v533, v500, v299);
                  goto LABEL_154;
                case 5u:
                  *uint64_t v245 = *v246;
                  uint64_t v300 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v501 = (char *)v246 + v300;
                  uint64_t v534 = (char *)v245 + v300;
                  uint64_t v301 = a3;
                  uint64_t v302 = sub_253B07160();
                  uint64_t v471 = *(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v303 = v302;
                  a3 = v301;
                  v471(v534, v501, v303);
                  goto LABEL_154;
                case 9u:
                  *(_DWORD *)uint64_t v245 = *(_DWORD *)v246;
                  v245[1] = v246[1];
                  v245[2] = v246[2];
                  uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v502 = (char *)v246 + v304;
                  uint64_t v535 = (char *)v245 + v304;
                  uint64_t v305 = a3;
                  uint64_t v306 = sub_253B07160();
                  uint64_t v472 = *(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v307 = v306;
                  a3 = v305;
                  v472(v535, v502, v307);
LABEL_154:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v245, v246, *(void *)(*(void *)(v248 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v245, 0, 1, v248);
            }
            uint64_t v308 = *(int *)(v23 + 20);
            int v309 = (char *)v245 + v308;
            int v310 = (char *)v246 + v308;
            uint64_t v311 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v311 - 8) + 16))(v309, v310, v311);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v245, 0, 1, v23);
          }
          uint64_t v312 = v19[7];
          uint64_t v313 = (char *)a1 + v312;
          uint64_t v314 = (char *)a2 + v312;
          uint64_t v315 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v313, v314, v315);
          goto LABEL_166;
        case 3u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          uint64_t v25 = *(int *)(v14 + 20);
          uint64_t v16 = (void *)((char *)a1 + v25);
          uint64_t v17 = (void *)((char *)a2 + v25);
          uint64_t v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
          {
LABEL_20:
            uint64_t v26 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            uint64_t v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v156))
            {
LABEL_65:
              uint64_t v159 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v16, v17, *(void *)(*(void *)(v159 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *uint64_t v16 = *v17;
                  v16[1] = v17[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_133;
                case 4u:
                  *uint64_t v16 = *v17;
                  uint64_t v250 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v497 = (char *)v17 + v250;
                  uint64_t v527 = (char *)v16 + v250;
                  uint64_t v251 = a3;
                  uint64_t v252 = sub_253B07160();
                  uint64_t v467 = *(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v253 = v252;
                  a3 = v251;
                  v467(v527, v497, v253);
                  goto LABEL_133;
                case 5u:
                  *uint64_t v16 = *v17;
                  uint64_t v254 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v498 = (char *)v17 + v254;
                  v528 = (char *)v16 + v254;
                  uint64_t v255 = a3;
                  uint64_t v256 = sub_253B07160();
                  uint64_t v468 = *(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v257 = v256;
                  a3 = v255;
                  v468(v528, v498, v257);
                  goto LABEL_133;
                case 9u:
                  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
                  v16[1] = v17[1];
                  v16[2] = v17[2];
                  uint64_t v258 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v499 = (char *)v17 + v258;
                  uint64_t v529 = (char *)v16 + v258;
                  uint64_t v259 = a3;
                  uint64_t v260 = sub_253B07160();
                  uint64_t v469 = *(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v261 = v260;
                  a3 = v259;
                  v469(v529, v499, v261);
LABEL_133:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v16, v17, *(void *)(*(void *)(v156 - 8) + 64));
                  break;
              }
LABEL_134:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v156);
            }
            uint64_t v262 = *(int *)(v18 + 20);
            uint64_t v263 = (char *)v16 + v262;
            uint64_t v264 = (char *)v17 + v262;
            uint64_t v265 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v263, v264, v265);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
          }
LABEL_136:
          uint64_t v266 = *(int *)(v14 + 24);
          uint64_t v267 = (char *)a1 + v266;
          v268 = (char *)a2 + v266;
          uint64_t v269 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v267, v268, v269);
LABEL_166:
          swift_storeEnumTagMultiPayload();
LABEL_167:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          break;
        case 4u:
          uint64_t v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v27))
          {
            uint64_t v28 = sub_253462A5C(&qword_269CE22E0);
            memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            uint64_t v160 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v160))
            {
              uint64_t v161 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(a1, a2, *(void *)(*(void *)(v161 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *a1 = *a2;
                  a1[1] = a2[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_141;
                case 4u:
                  *a1 = *a2;
                  uint64_t v270 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v530 = (char *)a2 + v270;
                  uint64_t v565 = (char *)a1 + v270;
                  uint64_t v271 = a3;
                  uint64_t v272 = sub_253B07160();
                  uint64_t v273 = *(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v274 = v272;
                  a3 = v271;
                  v273(v565, v530, v274);
                  goto LABEL_141;
                case 5u:
                  *a1 = *a2;
                  uint64_t v275 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v531 = (char *)a2 + v275;
                  uint64_t v566 = (char *)a1 + v275;
                  uint64_t v276 = a3;
                  uint64_t v277 = sub_253B07160();
                  uint64_t v278 = *(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v279 = v277;
                  a3 = v276;
                  v278(v566, v531, v279);
                  goto LABEL_141;
                case 9u:
                  *(_DWORD *)a1 = *(_DWORD *)a2;
                  a1[1] = a2[1];
                  a1[2] = a2[2];
                  uint64_t v280 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v532 = (char *)a2 + v280;
                  uint64_t v567 = (char *)a1 + v280;
                  uint64_t v281 = a3;
                  uint64_t v282 = sub_253B07160();
                  uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v284 = v282;
                  a3 = v281;
                  v283(v567, v532, v284);
LABEL_141:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(void *)(*(void *)(v160 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v160);
            }
            uint64_t v285 = *(int *)(v27 + 20);
            uint64_t v286 = (char *)a1 + v285;
            uint64_t v287 = (char *)a2 + v285;
            uint64_t v288 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 16))(v286, v287, v288);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v27);
          }
          uint64_t v289 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          uint64_t v290 = *(int *)(v289 + 20);
          uint64_t v291 = (void *)((char *)a1 + v290);
          uint64_t v292 = (void *)((char *)a2 + v290);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v290, 1, v27))
          {
            uint64_t v293 = sub_253462A5C(&qword_269CE22E0);
            memcpy(v291, v292, *(void *)(*(void *)(v293 - 8) + 64));
          }
          else
          {
            uint64_t v294 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v292, 1, v294))
            {
              uint64_t v295 = sub_253462A5C(&qword_269CDCBA8);
              memcpy(v291, v292, *(void *)(*(void *)(v295 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *uint64_t v291 = *v292;
                  v291[1] = v292[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_162;
                case 4u:
                  *uint64_t v291 = *v292;
                  uint64_t v316 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  uint64_t v503 = (char *)v292 + v316;
                  uint64_t v536 = (char *)v291 + v316;
                  uint64_t v317 = a3;
                  uint64_t v318 = sub_253B07160();
                  uint64_t v473 = *(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v319 = v318;
                  a3 = v317;
                  v473(v536, v503, v319);
                  goto LABEL_162;
                case 5u:
                  *uint64_t v291 = *v292;
                  uint64_t v320 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  uint64_t v504 = (char *)v292 + v320;
                  uint64_t v537 = (char *)v291 + v320;
                  uint64_t v321 = a3;
                  uint64_t v322 = sub_253B07160();
                  uint64_t v474 = *(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v323 = v322;
                  a3 = v321;
                  v474(v537, v504, v323);
                  goto LABEL_162;
                case 9u:
                  *(_DWORD *)uint64_t v291 = *(_DWORD *)v292;
                  v291[1] = v292[1];
                  v291[2] = v292[2];
                  uint64_t v324 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  uint64_t v505 = (char *)v292 + v324;
                  uint64_t v538 = (char *)v291 + v324;
                  uint64_t v325 = a3;
                  uint64_t v326 = sub_253B07160();
                  uint64_t v475 = *(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v327 = v326;
                  a3 = v325;
                  v475(v538, v505, v327);
LABEL_162:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v294);
            }
            uint64_t v328 = *(int *)(v27 + 20);
            uint64_t v329 = (char *)v291 + v328;
            uint64_t v330 = (char *)v292 + v328;
            uint64_t v331 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v329, v330, v331);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v27);
          }
          uint64_t v332 = *(int *)(v289 + 24);
          uint64_t v333 = (char *)a1 + v332;
          uint64_t v334 = (char *)a2 + v332;
          uint64_t v335 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
          goto LABEL_166;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          uint64_t v557 = (char *)a1 + v29;
          uint64_t v30 = (char *)a2 + v29;
          uint64_t v31 = sub_253B07160();
          uint64_t v32 = a3;
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(v557, v30, v31);
          a3 = v32;
          goto LABEL_166;
        case 6u:
          *a1 = *a2;
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (char *)a2 + v34;
          uint64_t v37 = sub_253B07160();
          uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v38(v35, v36, v37);
          goto LABEL_166;
        case 7u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          uint64_t v39 = *(int *)(v14 + 20);
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)a2 + v39;
          uint64_t v42 = type metadata accessor for TranscriptProtoASTPickType(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
          {
            uint64_t v43 = sub_253462A5C(&qword_269CE2268);
            memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
          }
          else
          {
            uint64_t v162 = *(void *)v41;
            v40[8] = v41[8];
            *(void *)uint64_t v40 = v162;
            uint64_t v163 = *(int *)(v42 + 20);
            uint64_t v164 = &v40[v163];
            uint64_t v165 = &v41[v163];
            uint64_t v166 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
          }
          goto LABEL_136;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          uint64_t v45 = (char *)a1 + v44;
          uint64_t v46 = (char *)a2 + v44;
          uint64_t v47 = sub_253B07160();
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v45, v46, v47);
          goto LABEL_166;
        case 9u:
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          uint64_t v50 = (char *)a1 + v49;
          uint64_t v51 = (char *)a2 + v49;
          uint64_t v52 = sub_253B07160();
          uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v50, v51, v52);
          goto LABEL_166;
        case 0xAu:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          uint64_t v55 = (char *)a1 + v54;
          uint64_t v56 = (char *)a2 + v54;
          uint64_t v57 = sub_253B07160();
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
          swift_bridgeObjectRetain();
          v58(v55, v56, v57);
          goto LABEL_166;
        case 0xBu:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          uint64_t v60 = (char *)a1 + v59;
          uint64_t v61 = (char *)a2 + v59;
          uint64_t v62 = sub_253B07160();
          uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v63(v60, v61, v62);
          goto LABEL_166;
        case 0xCu:
          *a1 = *a2;
          uint64_t v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          uint64_t v65 = (char *)a1 + v64;
          uint64_t v66 = (char *)a2 + v64;
          uint64_t v67 = sub_253B07160();
          uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v68(v65, v66, v67);
          goto LABEL_166;
        case 0xDu:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          uint64_t v70 = (char *)a1 + v69;
          uint64_t v71 = (char *)a2 + v69;
          uint64_t v72 = sub_253B07160();
          uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v73(v70, v71, v72);
          goto LABEL_166;
        case 0xEu:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          uint64_t v77 = sub_253B07160();
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v75, v76, v77);
          goto LABEL_166;
        case 0xFu:
        case 0x11u:
          uint64_t v79 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
          goto LABEL_166;
        case 0x10u:
          *a1 = *a2;
          uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          uint64_t v81 = (char *)a1 + v80;
          uint64_t v82 = (char *)a2 + v80;
          uint64_t v83 = sub_253B07160();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          v84(v81, v82, v83);
          goto LABEL_166;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_167;
      }
      goto LABEL_225;
    }
    goto LABEL_8;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_8:
    size_t v11 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2320) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v11);
    goto LABEL_225;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12))
        {
          uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              goto LABEL_107;
            case 4u:
              *a1 = *a2;
              uint64_t v197 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v562 = (char *)a1 + v197;
              uint64_t v198 = (char *)a2 + v197;
              uint64_t v199 = sub_253B07160();
              uint64_t v200 = a3;
              uint64_t v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16);
              swift_bridgeObjectRetain();
              v201(v562, v198, v199);
              a3 = v200;
              goto LABEL_107;
            case 5u:
              *a1 = *a2;
              uint64_t v202 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v563 = (char *)a1 + v202;
              uint64_t v203 = (char *)a2 + v202;
              uint64_t v204 = sub_253B07160();
              uint64_t v205 = a3;
              uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16);
              swift_bridgeObjectRetain();
              v206(v563, v203, v204);
              a3 = v205;
              goto LABEL_107;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              uint64_t v207 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v564 = (char *)a1 + v207;
              uint64_t v208 = (char *)a2 + v207;
              uint64_t v209 = sub_253B07160();
              uint64_t v210 = a3;
              uint64_t v211 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16);
              swift_bridgeObjectRetain();
              v211(v564, v208, v209);
              a3 = v210;
LABEL_107:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
        }
        uint64_t v212 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v213 = (char *)a1 + v212;
        uint64_t v214 = (char *)a2 + v212;
        uint64_t v215 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
        goto LABEL_224;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v85 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v86 = *(int *)(v85 + 20);
        uint64_t v87 = (void *)((char *)a1 + v86);
        uint64_t v88 = (void *)((char *)a2 + v86);
        uint64_t v89 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89)) {
          goto LABEL_44;
        }
        uint64_t v167 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v167)) {
          goto LABEL_76;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            void *v87 = *v88;
            v87[1] = v88[1];
            swift_bridgeObjectRetain();
            goto LABEL_172;
          case 4u:
            void *v87 = *v88;
            uint64_t v336 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v506 = (char *)v88 + v336;
            uint64_t v539 = (char *)v87 + v336;
            uint64_t v337 = a3;
            uint64_t v338 = sub_253B07160();
            uint64_t v476 = *(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v339 = v338;
            a3 = v337;
            v476(v539, v506, v339);
            goto LABEL_172;
          case 5u:
            void *v87 = *v88;
            uint64_t v340 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v507 = (char *)v88 + v340;
            int v540 = (char *)v87 + v340;
            uint64_t v341 = a3;
            uint64_t v342 = sub_253B07160();
            uint64_t v477 = *(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v343 = v342;
            a3 = v341;
            v477(v540, v507, v343);
            goto LABEL_172;
          case 9u:
            *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
            v87[1] = v88[1];
            v87[2] = v88[2];
            uint64_t v344 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v508 = (char *)v88 + v344;
            uint64_t v541 = (char *)v87 + v344;
            uint64_t v345 = a3;
            uint64_t v346 = sub_253B07160();
            uint64_t v478 = *(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v347 = v346;
            a3 = v345;
            v478(v541, v508, v347);
LABEL_172:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v87, v88, *(void *)(*(void *)(v167 - 8) + 64));
            break;
        }
        goto LABEL_192;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v90 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v91 = v90[5];
        uint64_t v92 = (void *)((char *)a1 + v91);
        uint64_t v93 = (void *)((char *)a2 + v91);
        uint64_t v94 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v93, 1, v94))
        {
          uint64_t v95 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          uint64_t v168 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v93, 1, v168))
          {
            uint64_t v169 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v92, v93, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *uint64_t v92 = *v93;
                v92[1] = v93[1];
                swift_bridgeObjectRetain();
                goto LABEL_178;
              case 4u:
                *uint64_t v92 = *v93;
                uint64_t v348 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v509 = (char *)v93 + v348;
                uint64_t v542 = (char *)v92 + v348;
                uint64_t v349 = a3;
                uint64_t v350 = sub_253B07160();
                uint64_t v479 = *(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v351 = v350;
                a3 = v349;
                v479(v542, v509, v351);
                goto LABEL_178;
              case 5u:
                *uint64_t v92 = *v93;
                uint64_t v352 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v510 = (char *)v93 + v352;
                uint64_t v543 = (char *)v92 + v352;
                uint64_t v353 = a3;
                uint64_t v354 = sub_253B07160();
                uint64_t v480 = *(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v355 = v354;
                a3 = v353;
                v480(v543, v510, v355);
                goto LABEL_178;
              case 9u:
                *(_DWORD *)uint64_t v92 = *(_DWORD *)v93;
                v92[1] = v93[1];
                v92[2] = v93[2];
                uint64_t v356 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v511 = (char *)v93 + v356;
                uint64_t v544 = (char *)v92 + v356;
                uint64_t v357 = a3;
                uint64_t v358 = sub_253B07160();
                uint64_t v481 = *(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v359 = v358;
                a3 = v357;
                v481(v544, v511, v359);
LABEL_178:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v92, v93, *(void *)(*(void *)(v168 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v92, 0, 1, v168);
          }
          uint64_t v360 = *(int *)(v94 + 20);
          uint64_t v361 = (char *)v92 + v360;
          uint64_t v362 = (char *)v93 + v360;
          uint64_t v363 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v363 - 8) + 16))(v361, v362, v363);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v92, 0, 1, v94);
        }
        uint64_t v364 = v90[6];
        int v365 = (void *)((char *)a1 + v364);
        uint64_t v366 = (void *)((char *)a2 + v364);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v364, 1, v94))
        {
          uint64_t v367 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v365, v366, *(void *)(*(void *)(v367 - 8) + 64));
        }
        else
        {
          uint64_t v368 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v366, 1, v368))
          {
            uint64_t v369 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v365, v366, *(void *)(*(void *)(v369 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *int v365 = *v366;
                v365[1] = v366[1];
                swift_bridgeObjectRetain();
                goto LABEL_212;
              case 4u:
                *int v365 = *v366;
                uint64_t v416 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v515 = (char *)v366 + v416;
                uint64_t v551 = (char *)v365 + v416;
                uint64_t v417 = a3;
                uint64_t v418 = sub_253B07160();
                uint64_t v485 = *(void (**)(char *, char *, uint64_t))(*(void *)(v418 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v419 = v418;
                a3 = v417;
                v485(v551, v515, v419);
                goto LABEL_212;
              case 5u:
                *int v365 = *v366;
                uint64_t v420 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                int v516 = (char *)v366 + v420;
                uint64_t v552 = (char *)v365 + v420;
                uint64_t v421 = a3;
                uint64_t v422 = sub_253B07160();
                uint64_t v486 = *(void (**)(char *, char *, uint64_t))(*(void *)(v422 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v423 = v422;
                a3 = v421;
                v486(v552, v516, v423);
                goto LABEL_212;
              case 9u:
                *(_DWORD *)int v365 = *(_DWORD *)v366;
                v365[1] = v366[1];
                v365[2] = v366[2];
                uint64_t v424 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v517 = (char *)v366 + v424;
                uint64_t v553 = (char *)v365 + v424;
                uint64_t v425 = a3;
                uint64_t v426 = sub_253B07160();
                uint64_t v487 = *(void (**)(char *, char *, uint64_t))(*(void *)(v426 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v427 = v426;
                a3 = v425;
                v487(v553, v517, v427);
LABEL_212:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v365, v366, *(void *)(*(void *)(v368 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v365, 0, 1, v368);
          }
          uint64_t v428 = *(int *)(v94 + 20);
          uint64_t v429 = (char *)v365 + v428;
          v430 = (char *)v366 + v428;
          uint64_t v431 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v431 - 8) + 16))(v429, v430, v431);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v365, 0, 1, v94);
        }
        uint64_t v432 = v90[7];
        uint64_t v433 = (char *)a1 + v432;
        uint64_t v434 = (char *)a2 + v432;
        uint64_t v435 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v435 - 8) + 16))(v433, v434, v435);
        goto LABEL_224;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v85 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v96 = *(int *)(v85 + 20);
        uint64_t v87 = (void *)((char *)a1 + v96);
        uint64_t v88 = (void *)((char *)a2 + v96);
        uint64_t v89 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89))
        {
LABEL_44:
          uint64_t v97 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v87, v88, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          uint64_t v167 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v167))
          {
LABEL_76:
            uint64_t v170 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v87, v88, *(void *)(*(void *)(v170 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *v87 = *v88;
                v87[1] = v88[1];
                swift_bridgeObjectRetain();
                goto LABEL_191;
              case 4u:
                void *v87 = *v88;
                uint64_t v370 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v512 = (char *)v88 + v370;
                uint64_t v545 = (char *)v87 + v370;
                uint64_t v371 = a3;
                uint64_t v372 = sub_253B07160();
                uint64_t v482 = *(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v373 = v372;
                a3 = v371;
                v482(v545, v512, v373);
                goto LABEL_191;
              case 5u:
                void *v87 = *v88;
                uint64_t v374 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v513 = (char *)v88 + v374;
                uint64_t v546 = (char *)v87 + v374;
                uint64_t v375 = a3;
                uint64_t v376 = sub_253B07160();
                uint64_t v483 = *(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v377 = v376;
                a3 = v375;
                v483(v546, v513, v377);
                goto LABEL_191;
              case 9u:
                *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
                v87[1] = v88[1];
                v87[2] = v88[2];
                uint64_t v378 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v514 = (char *)v88 + v378;
                uint64_t v547 = (char *)v87 + v378;
                uint64_t v379 = a3;
                uint64_t v380 = sub_253B07160();
                uint64_t v484 = *(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v381 = v380;
                a3 = v379;
                v484(v547, v514, v381);
LABEL_191:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v87, v88, *(void *)(*(void *)(v167 - 8) + 64));
                break;
            }
LABEL_192:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v167);
          }
          uint64_t v382 = *(int *)(v89 + 20);
          uint64_t v383 = (char *)v87 + v382;
          uint64_t v384 = (char *)v88 + v382;
          uint64_t v385 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v385 - 8) + 16))(v383, v384, v385);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
        }
LABEL_194:
        uint64_t v386 = *(int *)(v85 + 24);
        uint64_t v387 = (char *)a1 + v386;
        uint64_t v388 = (char *)a2 + v386;
        uint64_t v389 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 16))(v387, v388, v389);
LABEL_224:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v98 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v98))
        {
          uint64_t v99 = sub_253462A5C(&qword_269CE22E0);
          memcpy(a1, a2, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          uint64_t v171 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v171))
          {
            uint64_t v172 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(a1, a2, *(void *)(*(void *)(v172 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_199;
              case 4u:
                *a1 = *a2;
                uint64_t v390 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v548 = (char *)a2 + v390;
                uint64_t v568 = (char *)a1 + v390;
                uint64_t v391 = a3;
                uint64_t v392 = sub_253B07160();
                uint64_t v393 = *(void (**)(char *, char *, uint64_t))(*(void *)(v392 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v394 = v392;
                a3 = v391;
                v393(v568, v548, v394);
                goto LABEL_199;
              case 5u:
                *a1 = *a2;
                uint64_t v395 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v549 = (char *)a2 + v395;
                uint64_t v569 = (char *)a1 + v395;
                uint64_t v396 = a3;
                uint64_t v397 = sub_253B07160();
                uint64_t v398 = *(void (**)(char *, char *, uint64_t))(*(void *)(v397 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v399 = v397;
                a3 = v396;
                v398(v569, v549, v399);
                goto LABEL_199;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                uint64_t v400 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v550 = (char *)a2 + v400;
                uint64_t v570 = (char *)a1 + v400;
                uint64_t v401 = a3;
                uint64_t v402 = sub_253B07160();
                uint64_t v403 = *(void (**)(char *, char *, uint64_t))(*(void *)(v402 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v404 = v402;
                a3 = v401;
                v403(v570, v550, v404);
LABEL_199:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v171 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v171);
          }
          uint64_t v405 = *(int *)(v98 + 20);
          uint64_t v406 = (char *)a1 + v405;
          uint64_t v407 = (char *)a2 + v405;
          uint64_t v408 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v408 - 8) + 16))(v406, v407, v408);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v98);
        }
        uint64_t v409 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v410 = *(int *)(v409 + 20);
        uint64_t v411 = (void *)((char *)a1 + v410);
        uint64_t v412 = (void *)((char *)a2 + v410);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v410, 1, v98))
        {
          uint64_t v413 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v411, v412, *(void *)(*(void *)(v413 - 8) + 64));
        }
        else
        {
          uint64_t v414 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v412, 1, v414))
          {
            uint64_t v415 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v411, v412, *(void *)(*(void *)(v415 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                void *v411 = *v412;
                v411[1] = v412[1];
                swift_bridgeObjectRetain();
                goto LABEL_220;
              case 4u:
                void *v411 = *v412;
                uint64_t v436 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v518 = (char *)v412 + v436;
                uint64_t v554 = (char *)v411 + v436;
                uint64_t v437 = a3;
                uint64_t v438 = sub_253B07160();
                uint64_t v488 = *(void (**)(char *, char *, uint64_t))(*(void *)(v438 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v439 = v438;
                a3 = v437;
                v488(v554, v518, v439);
                goto LABEL_220;
              case 5u:
                void *v411 = *v412;
                uint64_t v440 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v519 = (char *)v412 + v440;
                uint64_t v555 = (char *)v411 + v440;
                uint64_t v441 = a3;
                uint64_t v442 = sub_253B07160();
                uint64_t v489 = *(void (**)(char *, char *, uint64_t))(*(void *)(v442 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v443 = v442;
                a3 = v441;
                v489(v555, v519, v443);
                goto LABEL_220;
              case 9u:
                *(_DWORD *)uint64_t v411 = *(_DWORD *)v412;
                v411[1] = v412[1];
                v411[2] = v412[2];
                uint64_t v444 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v520 = (char *)v412 + v444;
                uint64_t v556 = (char *)v411 + v444;
                uint64_t v445 = a3;
                uint64_t v446 = sub_253B07160();
                int v490 = *(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v447 = v446;
                a3 = v445;
                v490(v556, v520, v447);
LABEL_220:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v411, v412, *(void *)(*(void *)(v414 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v411, 0, 1, v414);
          }
          uint64_t v448 = *(int *)(v98 + 20);
          uint64_t v449 = (char *)v411 + v448;
          uint64_t v450 = (char *)v412 + v448;
          uint64_t v451 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v451 - 8) + 16))(v449, v450, v451);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v411, 0, 1, v98);
        }
        uint64_t v452 = *(int *)(v409 + 24);
        uint64_t v453 = (char *)a1 + v452;
        uint64_t v454 = (char *)a2 + v452;
        uint64_t v455 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v455 - 8) + 16))(v453, v454, v455);
        goto LABEL_224;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v558 = (char *)a1 + v100;
        uint64_t v101 = (char *)a2 + v100;
        uint64_t v102 = sub_253B07160();
        uint64_t v103 = a3;
        uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v104(v558, v101, v102);
        a3 = v103;
        goto LABEL_224;
      case 6u:
        *a1 = *a2;
        uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v106 = (char *)a1 + v105;
        uint64_t v107 = (char *)a2 + v105;
        uint64_t v108 = sub_253B07160();
        uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        v109(v106, v107, v108);
        goto LABEL_224;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v85 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v110 = *(int *)(v85 + 20);
        uint64_t v111 = (char *)a1 + v110;
        uint64_t v112 = (char *)a2 + v110;
        uint64_t v113 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v113))
        {
          uint64_t v114 = sub_253462A5C(&qword_269CE2268);
          memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          uint64_t v173 = *(void *)v112;
          v111[8] = v112[8];
          *(void *)uint64_t v111 = v173;
          uint64_t v174 = *(int *)(v113 + 20);
          uint64_t v175 = &v111[v174];
          uint64_t v176 = &v112[v174];
          uint64_t v177 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v113);
        }
        goto LABEL_194;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v116 = (char *)a1 + v115;
        uint64_t v117 = (char *)a2 + v115;
        uint64_t v118 = sub_253B07160();
        uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
        swift_bridgeObjectRetain();
        v119(v116, v117, v118);
        goto LABEL_224;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
        uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v121 = (char *)a1 + v120;
        uint64_t v122 = (char *)a2 + v120;
        uint64_t v123 = sub_253B07160();
        uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        v124(v121, v122, v123);
        goto LABEL_224;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v126 = (char *)a1 + v125;
        uint64_t v127 = (char *)a2 + v125;
        uint64_t v128 = sub_253B07160();
        uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
        swift_bridgeObjectRetain();
        v129(v126, v127, v128);
        goto LABEL_224;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v130 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v131 = (char *)a1 + v130;
        uint64_t v132 = (char *)a2 + v130;
        uint64_t v133 = sub_253B07160();
        uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
        swift_bridgeObjectRetain();
        v134(v131, v132, v133);
        goto LABEL_224;
      case 0xCu:
        *a1 = *a2;
        uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v136 = (char *)a1 + v135;
        uint64_t v137 = (char *)a2 + v135;
        uint64_t v138 = sub_253B07160();
        uint64_t v139 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
        swift_bridgeObjectRetain();
        v139(v136, v137, v138);
        goto LABEL_224;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v140 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v141 = (char *)a1 + v140;
        uint64_t v142 = (char *)a2 + v140;
        uint64_t v143 = sub_253B07160();
        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
        swift_bridgeObjectRetain();
        v144(v141, v142, v143);
        goto LABEL_224;
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        uint64_t v148 = sub_253B07160();
        uint64_t v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
        swift_bridgeObjectRetain();
        v149(v146, v147, v148);
        goto LABEL_224;
      case 0xFu:
      case 0x11u:
        uint64_t v150 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
        goto LABEL_224;
      case 0x10u:
        *a1 = *a2;
        uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v152 = (char *)a1 + v151;
        uint64_t v153 = (char *)a2 + v151;
        uint64_t v154 = sub_253B07160();
        uint64_t v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
        swift_bridgeObjectRetain();
        v155(v152, v153, v154);
        goto LABEL_224;
      default:
        size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
        goto LABEL_9;
    }
  }
LABEL_225:
  uint64_t v456 = *(int *)(a3 + 20);
  uint64_t v457 = (char *)a1 + v456;
  v458 = (char *)a2 + v456;
  uint64_t v459 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v459 - 8) + 24))(v457, v458, v459);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatExpr(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2320);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_117;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_62:
        uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v109 = (char *)a1 + v108;
        uint64_t v110 = (char *)a2 + v108;
        uint64_t v111 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
        goto LABEL_115;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v101 = (char *)a1 + v100;
          uint64_t v102 = (char *)a2 + v100;
          uint64_t v103 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v105 = (char *)a1 + v104;
          uint64_t v106 = (char *)a2 + v104;
          uint64_t v107 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v73 = (char *)a1 + v72;
          uint64_t v74 = (char *)a2 + v72;
          uint64_t v75 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          goto LABEL_61;
      }
      swift_storeEnumTagMultiPayload();
LABEL_61:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
      goto LABEL_62;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = (_DWORD *)((char *)a1 + v11);
      uint64_t v13 = (_DWORD *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
        goto LABEL_8;
      }
      uint64_t v76 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v76)) {
        goto LABEL_33;
      }
      int v86 = swift_getEnumCaseMultiPayload();
      switch(v86)
      {
        case 9:
          goto LABEL_63;
        case 5:
          goto LABEL_64;
        case 4:
          goto LABEL_44;
      }
      goto LABEL_111;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v16 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (_DWORD *)((char *)a1 + v17);
      uint64_t v19 = (_DWORD *)((char *)a2 + v17);
      uint64_t v20 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_72;
      }
      uint64_t v78 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v78))
      {
        uint64_t v79 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v18, v19, *(void *)(*(void *)(v79 - 8) + 64));
        goto LABEL_71;
      }
      int v90 = swift_getEnumCaseMultiPayload();
      switch(v90)
      {
        case 9:
          *uint64_t v18 = *v19;
          *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
          uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v119 = (char *)v18 + v118;
          uint64_t v206 = (char *)v19 + v118;
          uint64_t v120 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v119, v206, v120);
          goto LABEL_68;
        case 5:
          *(void *)uint64_t v18 = *(void *)v19;
          uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v122 = (char *)v18 + v121;
          uint64_t v207 = (char *)v19 + v121;
          uint64_t v123 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v122, v207, v123);
          goto LABEL_68;
        case 4:
          *(void *)uint64_t v18 = *(void *)v19;
          uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v92 = (char *)v18 + v91;
          uint64_t v203 = (char *)v19 + v91;
          uint64_t v93 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v92, v203, v93);
LABEL_68:
          swift_storeEnumTagMultiPayload();
          goto LABEL_70;
      }
      memcpy(v18, v19, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_70:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v78);
LABEL_71:
      uint64_t v124 = *(int *)(v20 + 20);
      uint64_t v125 = (char *)v18 + v124;
      uint64_t v126 = (char *)v19 + v124;
      uint64_t v127 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_72:
      uint64_t v128 = v16[6];
      uint64_t v129 = (_DWORD *)((char *)a1 + v128);
      uint64_t v130 = (_DWORD *)((char *)a2 + v128);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v128, 1, v20))
      {
        uint64_t v131 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v129, v130, *(void *)(*(void *)(v131 - 8) + 64));
        goto LABEL_103;
      }
      uint64_t v132 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v130, 1, v132))
      {
        uint64_t v133 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v129, v130, *(void *)(*(void *)(v133 - 8) + 64));
        goto LABEL_102;
      }
      int v134 = swift_getEnumCaseMultiPayload();
      switch(v134)
      {
        case 9:
          *uint64_t v129 = *v130;
          *(_OWORD *)(v129 + 2) = *(_OWORD *)(v130 + 2);
          uint64_t v161 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v162 = (char *)v129 + v161;
          uint64_t v210 = (char *)v130 + v161;
          uint64_t v163 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v162, v210, v163);
          goto LABEL_99;
        case 5:
          *(void *)uint64_t v129 = *(void *)v130;
          uint64_t v164 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v165 = (char *)v129 + v164;
          uint64_t v211 = (char *)v130 + v164;
          uint64_t v166 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v165, v211, v166);
          goto LABEL_99;
        case 4:
          *(void *)uint64_t v129 = *(void *)v130;
          uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v136 = (char *)v129 + v135;
          uint64_t v208 = (char *)v130 + v135;
          uint64_t v137 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v136, v208, v137);
LABEL_99:
          swift_storeEnumTagMultiPayload();
          goto LABEL_101;
      }
      memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
LABEL_101:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v129, 0, 1, v132);
LABEL_102:
      uint64_t v167 = *(int *)(v20 + 20);
      uint64_t v168 = (char *)v129 + v167;
      uint64_t v169 = (char *)v130 + v167;
      uint64_t v170 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v129, 0, 1, v20);
LABEL_103:
      uint64_t v171 = v16[7];
      uint64_t v172 = (char *)a1 + v171;
      uint64_t v173 = (char *)a2 + v171;
      uint64_t v174 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
      goto LABEL_115;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      uint64_t v22 = *(int *)(v10 + 20);
      uint64_t v12 = (_DWORD *)((char *)a1 + v22);
      uint64_t v13 = (_DWORD *)((char *)a2 + v22);
      uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
LABEL_8:
        uint64_t v15 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_114;
      }
      uint64_t v76 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v76))
      {
LABEL_33:
        uint64_t v77 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v12, v13, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_113;
      }
      int v94 = swift_getEnumCaseMultiPayload();
      switch(v94)
      {
        case 9:
LABEL_63:
          _DWORD *v12 = *v13;
          *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
          uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v113 = (char *)v12 + v112;
          uint64_t v204 = (char *)v13 + v112;
          uint64_t v114 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v113, v204, v114);
          goto LABEL_65;
        case 5:
LABEL_64:
          *(void *)uint64_t v12 = *(void *)v13;
          uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v116 = (char *)v12 + v115;
          uint64_t v205 = (char *)v13 + v115;
          uint64_t v117 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v116, v205, v117);
          goto LABEL_65;
        case 4:
LABEL_44:
          *(void *)uint64_t v12 = *(void *)v13;
          uint64_t v87 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v88 = (char *)v12 + v87;
          uint64_t v202 = (char *)v13 + v87;
          uint64_t v89 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v88, v202, v89);
LABEL_65:
          swift_storeEnumTagMultiPayload();
          goto LABEL_112;
      }
LABEL_111:
      memcpy(v12, v13, *(void *)(*(void *)(v76 - 8) + 64));
LABEL_112:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v76);
LABEL_113:
      uint64_t v189 = *(int *)(v14 + 20);
      uint64_t v190 = (char *)v12 + v189;
      uint64_t v191 = (char *)v13 + v189;
      uint64_t v192 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 32))(v190, v191, v192);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_114:
      uint64_t v193 = *(int *)(v10 + 24);
      uint64_t v194 = (char *)a1 + v193;
      uint64_t v195 = (char *)a2 + v193;
      uint64_t v196 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
      goto LABEL_115;
    case 4u:
      uint64_t v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v23))
      {
        uint64_t v24 = sub_253462A5C(&qword_269CE22E0);
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
        goto LABEL_89;
      }
      uint64_t v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v80))
      {
        uint64_t v81 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v81 - 8) + 64));
        goto LABEL_88;
      }
      int v95 = swift_getEnumCaseMultiPayload();
      switch(v95)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v138 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v139 = (char *)a1 + v138;
          uint64_t v140 = (char *)a2 + v138;
          uint64_t v141 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
          goto LABEL_85;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v143 = (char *)a1 + v142;
          uint64_t v144 = (char *)a2 + v142;
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
          goto LABEL_85;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v97 = (char *)a1 + v96;
          uint64_t v98 = (char *)a2 + v96;
          uint64_t v99 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
LABEL_85:
          swift_storeEnumTagMultiPayload();
          goto LABEL_87;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v80 - 8) + 64));
LABEL_87:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v80);
LABEL_88:
      uint64_t v146 = *(int *)(v23 + 20);
      uint64_t v147 = (char *)a1 + v146;
      uint64_t v148 = (char *)a2 + v146;
      uint64_t v149 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v23);
LABEL_89:
      uint64_t v150 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      uint64_t v151 = *(int *)(v150 + 20);
      uint64_t v152 = (_DWORD *)((char *)a1 + v151);
      uint64_t v153 = (_DWORD *)((char *)a2 + v151);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v151, 1, v23))
      {
        uint64_t v154 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
        goto LABEL_110;
      }
      uint64_t v155 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v153, 1, v155))
      {
        uint64_t v156 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
        goto LABEL_109;
      }
      int v157 = swift_getEnumCaseMultiPayload();
      switch(v157)
      {
        case 9:
          *uint64_t v152 = *v153;
          *(_OWORD *)(v152 + 2) = *(_OWORD *)(v153 + 2);
          uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v176 = (char *)v152 + v175;
          uint64_t v212 = (char *)v153 + v175;
          uint64_t v177 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v176, v212, v177);
          goto LABEL_106;
        case 5:
          *(void *)uint64_t v152 = *(void *)v153;
          uint64_t v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v179 = (char *)v152 + v178;
          uint64_t v213 = (char *)v153 + v178;
          uint64_t v180 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v179, v213, v180);
          goto LABEL_106;
        case 4:
          *(void *)uint64_t v152 = *(void *)v153;
          uint64_t v158 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v159 = (char *)v152 + v158;
          uint64_t v209 = (char *)v153 + v158;
          uint64_t v160 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v159, v209, v160);
LABEL_106:
          swift_storeEnumTagMultiPayload();
          goto LABEL_108;
      }
      memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
LABEL_108:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v152, 0, 1, v155);
LABEL_109:
      uint64_t v181 = *(int *)(v23 + 20);
      uint64_t v182 = (char *)v152 + v181;
      uint64_t v183 = (char *)v153 + v181;
      uint64_t v184 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v182, v183, v184);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v152, 0, 1, v23);
LABEL_110:
      uint64_t v185 = *(int *)(v150 + 24);
      uint64_t v186 = (char *)a1 + v185;
      uint64_t v187 = (char *)a2 + v185;
      uint64_t v188 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v186, v187, v188);
LABEL_115:
      swift_storeEnumTagMultiPayload();
LABEL_116:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_117:
      uint64_t v197 = *(int *)(a3 + 20);
      uint64_t v198 = (char *)a1 + v197;
      uint64_t v199 = (char *)a2 + v197;
      uint64_t v200 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_115;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      goto LABEL_115;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      uint64_t v33 = *(int *)(v10 + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_253462A5C(&qword_269CE2268);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v34 = *(void *)v35;
        v34[8] = v35[8];
        uint64_t v82 = *(int *)(v36 + 20);
        uint64_t v83 = &v34[v82];
        uint64_t v84 = &v35[v82];
        uint64_t v85 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
      }
      goto LABEL_114;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      uint64_t v41 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      goto LABEL_115;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      goto LABEL_115;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      goto LABEL_115;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      uint64_t v53 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      goto LABEL_115;
    case 0xCu:
      *(void *)a1 = *(void *)a2;
      uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      goto LABEL_115;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      uint64_t v61 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_115;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
      goto LABEL_115;
    case 0xFu:
    case 0x11u:
      uint64_t v66 = sub_253B07160();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v66 - 8) + 32))(a1, a2, v66);
      goto LABEL_115;
    case 0x10u:
      *(void *)a1 = *(void *)a2;
      uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      uint64_t v70 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
      goto LABEL_115;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_116;
  }
}

_DWORD *assignWithTake for TranscriptProtoASTFlatExpr(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
LABEL_8:
      size_t v11 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2320) - 8) + 64);
LABEL_9:
      memcpy(a1, a2, v11);
      goto LABEL_235;
    }
    if (a1 == a2) {
      goto LABEL_235;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12))
        {
          uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          goto LABEL_127;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            uint64_t v206 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v207 = (char *)a1 + v206;
            uint64_t v208 = (char *)a2 + v206;
            uint64_t v209 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32))(v207, v208, v209);
            goto LABEL_124;
          case 5:
            *(void *)a1 = *(void *)a2;
            uint64_t v210 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v211 = (char *)a1 + v210;
            uint64_t v212 = (char *)a2 + v210;
            uint64_t v213 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v211, v212, v213);
            goto LABEL_124;
          case 4:
            *(void *)a1 = *(void *)a2;
            uint64_t v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v153 = (char *)a1 + v152;
            uint64_t v154 = (char *)a2 + v152;
            uint64_t v155 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
LABEL_124:
            swift_storeEnumTagMultiPayload();
            goto LABEL_126;
        }
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_126:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_127:
        uint64_t v214 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v215 = (char *)a1 + v214;
        uint64_t v216 = (char *)a2 + v214;
        uint64_t v217 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32))(v215, v216, v217);
        goto LABEL_234;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v80 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v81 = *(int *)(v80 + 20);
        uint64_t v82 = (_DWORD *)((char *)a1 + v81);
        uint64_t v83 = (_DWORD *)((char *)a2 + v81);
        uint64_t v84 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v84)) {
          goto LABEL_46;
        }
        uint64_t v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v156)) {
          goto LABEL_80;
        }
        int v192 = swift_getEnumCaseMultiPayload();
        switch(v192)
        {
          case 9:
            goto LABEL_199;
          case 5:
            goto LABEL_200;
          case 4:
            goto LABEL_117;
        }
        goto LABEL_202;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v85 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v86 = v85[5];
        uint64_t v87 = (_DWORD *)((char *)a1 + v86);
        uint64_t v88 = (_DWORD *)((char *)a2 + v86);
        uint64_t v89 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89))
        {
          uint64_t v90 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
          goto LABEL_191;
        }
        uint64_t v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v157))
        {
          uint64_t v158 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v87, v88, *(void *)(*(void *)(v158 - 8) + 64));
          goto LABEL_190;
        }
        int v193 = swift_getEnumCaseMultiPayload();
        switch(v193)
        {
          case 9:
            _DWORD *v87 = *v88;
            *(_OWORD *)(v87 + 2) = *(_OWORD *)(v88 + 2);
            uint64_t v303 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v304 = (char *)v87 + v303;
            uint64_t v407 = (char *)v88 + v303;
            uint64_t v305 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 32))(v304, v407, v305);
            goto LABEL_187;
          case 5:
            *(void *)uint64_t v87 = *(void *)v88;
            uint64_t v306 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v307 = (char *)v87 + v306;
            uint64_t v408 = (char *)v88 + v306;
            uint64_t v308 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 32))(v307, v408, v308);
            goto LABEL_187;
          case 4:
            *(void *)uint64_t v87 = *(void *)v88;
            uint64_t v194 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v195 = (char *)v87 + v194;
            uint64_t v395 = (char *)v88 + v194;
            uint64_t v196 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v195, v395, v196);
LABEL_187:
            swift_storeEnumTagMultiPayload();
            goto LABEL_189;
        }
        memcpy(v87, v88, *(void *)(*(void *)(v157 - 8) + 64));
LABEL_189:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v157);
LABEL_190:
        uint64_t v309 = *(int *)(v89 + 20);
        int v310 = (char *)v87 + v309;
        uint64_t v311 = (char *)v88 + v309;
        uint64_t v312 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 32))(v310, v311, v312);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
LABEL_191:
        uint64_t v313 = v85[6];
        uint64_t v314 = (_DWORD *)((char *)a1 + v313);
        uint64_t v315 = (_DWORD *)((char *)a2 + v313);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v313, 1, v89))
        {
          uint64_t v316 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v314, v315, *(void *)(*(void *)(v316 - 8) + 64));
LABEL_226:
          uint64_t v370 = v85[7];
          uint64_t v371 = (char *)a1 + v370;
          uint64_t v372 = (char *)a2 + v370;
          uint64_t v373 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 32))(v371, v372, v373);
LABEL_234:
          swift_storeEnumTagMultiPayload();
          goto LABEL_235;
        }
        uint64_t v317 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v315, 1, v317))
        {
          uint64_t v318 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v314, v315, *(void *)(*(void *)(v318 - 8) + 64));
LABEL_225:
          uint64_t v366 = *(int *)(v89 + 20);
          uint64_t v367 = (char *)v314 + v366;
          uint64_t v368 = (char *)v315 + v366;
          uint64_t v369 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 32))(v367, v368, v369);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v314, 0, 1, v89);
          goto LABEL_226;
        }
        int v319 = swift_getEnumCaseMultiPayload();
        switch(v319)
        {
          case 9:
            _DWORD *v314 = *v315;
            *(_OWORD *)(v314 + 2) = *(_OWORD *)(v315 + 2);
            uint64_t v360 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v361 = (char *)v314 + v360;
            uint64_t v413 = (char *)v315 + v360;
            uint64_t v362 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 32))(v361, v413, v362);
            break;
          case 5:
            *(void *)uint64_t v314 = *(void *)v315;
            uint64_t v363 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v364 = (char *)v314 + v363;
            uint64_t v414 = (char *)v315 + v363;
            uint64_t v365 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v365 - 8) + 32))(v364, v414, v365);
            break;
          case 4:
            *(void *)uint64_t v314 = *(void *)v315;
            uint64_t v320 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v321 = (char *)v314 + v320;
            uint64_t v409 = (char *)v315 + v320;
            uint64_t v322 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 32))(v321, v409, v322);
            break;
          default:
            memcpy(v314, v315, *(void *)(*(void *)(v317 - 8) + 64));
            goto LABEL_224;
        }
        swift_storeEnumTagMultiPayload();
LABEL_224:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v314, 0, 1, v317);
        goto LABEL_225;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v80 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v91 = *(int *)(v80 + 20);
        uint64_t v82 = (_DWORD *)((char *)a1 + v91);
        uint64_t v83 = (_DWORD *)((char *)a2 + v91);
        uint64_t v84 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v84))
        {
LABEL_46:
          uint64_t v92 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v82, v83, *(void *)(*(void *)(v92 - 8) + 64));
          goto LABEL_205;
        }
        uint64_t v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v156))
        {
LABEL_80:
          uint64_t v159 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v82, v83, *(void *)(*(void *)(v159 - 8) + 64));
          goto LABEL_204;
        }
        int v197 = swift_getEnumCaseMultiPayload();
        switch(v197)
        {
          case 9:
LABEL_199:
            *uint64_t v82 = *v83;
            *(_OWORD *)(v82 + 2) = *(_OWORD *)(v83 + 2);
            uint64_t v323 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v324 = (char *)v82 + v323;
            uint64_t v410 = (char *)v83 + v323;
            uint64_t v325 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 32))(v324, v410, v325);
            break;
          case 5:
LABEL_200:
            *(void *)uint64_t v82 = *(void *)v83;
            uint64_t v326 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v327 = (char *)v82 + v326;
            uint64_t v411 = (char *)v83 + v326;
            uint64_t v328 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v328 - 8) + 32))(v327, v411, v328);
            break;
          case 4:
LABEL_117:
            *(void *)uint64_t v82 = *(void *)v83;
            uint64_t v198 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v199 = (char *)v82 + v198;
            uint64_t v396 = (char *)v83 + v198;
            uint64_t v200 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v199, v396, v200);
            break;
          default:
LABEL_202:
            memcpy(v82, v83, *(void *)(*(void *)(v156 - 8) + 64));
LABEL_203:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v82, 0, 1, v156);
LABEL_204:
            uint64_t v329 = *(int *)(v84 + 20);
            uint64_t v330 = (char *)v82 + v329;
            uint64_t v331 = (char *)v83 + v329;
            uint64_t v332 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v82, 0, 1, v84);
LABEL_205:
            uint64_t v333 = *(int *)(v80 + 24);
            uint64_t v334 = (char *)a1 + v333;
            uint64_t v335 = (char *)a2 + v333;
            uint64_t v336 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 32))(v334, v335, v336);
            goto LABEL_234;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_203;
      case 4u:
        uint64_t v93 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v93))
        {
          uint64_t v94 = sub_253462A5C(&qword_269CE22E0);
          memcpy(a1, a2, *(void *)(*(void *)(v94 - 8) + 64));
          goto LABEL_212;
        }
        uint64_t v160 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v160))
        {
          uint64_t v161 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v161 - 8) + 64));
          goto LABEL_211;
        }
        int v201 = swift_getEnumCaseMultiPayload();
        switch(v201)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            uint64_t v337 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v338 = (char *)a1 + v337;
            uint64_t v339 = (char *)a2 + v337;
            uint64_t v340 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 32))(v338, v339, v340);
            goto LABEL_208;
          case 5:
            *(void *)a1 = *(void *)a2;
            uint64_t v341 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v342 = (char *)a1 + v341;
            uint64_t v343 = (char *)a2 + v341;
            uint64_t v344 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v344 - 8) + 32))(v342, v343, v344);
            goto LABEL_208;
          case 4:
            *(void *)a1 = *(void *)a2;
            uint64_t v202 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v203 = (char *)a1 + v202;
            uint64_t v204 = (char *)a2 + v202;
            uint64_t v205 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
LABEL_208:
            swift_storeEnumTagMultiPayload();
            goto LABEL_210;
        }
        memcpy(a1, a2, *(void *)(*(void *)(v160 - 8) + 64));
LABEL_210:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v160);
LABEL_211:
        uint64_t v345 = *(int *)(v93 + 20);
        uint64_t v346 = (char *)a1 + v345;
        uint64_t v347 = (char *)a2 + v345;
        uint64_t v348 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 32))(v346, v347, v348);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v93);
LABEL_212:
        uint64_t v349 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v350 = *(int *)(v349 + 20);
        uint64_t v351 = (_DWORD *)((char *)a1 + v350);
        uint64_t v352 = (_DWORD *)((char *)a2 + v350);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v350, 1, v93))
        {
          uint64_t v353 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v351, v352, *(void *)(*(void *)(v353 - 8) + 64));
LABEL_233:
          uint64_t v384 = *(int *)(v349 + 24);
          uint64_t v385 = (char *)a1 + v384;
          uint64_t v386 = (char *)a2 + v384;
          uint64_t v387 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 32))(v385, v386, v387);
          goto LABEL_234;
        }
        uint64_t v354 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v352, 1, v354))
        {
          uint64_t v355 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v351, v352, *(void *)(*(void *)(v355 - 8) + 64));
LABEL_232:
          uint64_t v380 = *(int *)(v93 + 20);
          uint64_t v381 = (char *)v351 + v380;
          uint64_t v382 = (char *)v352 + v380;
          uint64_t v383 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v383 - 8) + 32))(v381, v382, v383);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v351, 0, 1, v93);
          goto LABEL_233;
        }
        int v356 = swift_getEnumCaseMultiPayload();
        switch(v356)
        {
          case 9:
            *uint64_t v351 = *v352;
            *(_OWORD *)(v351 + 2) = *(_OWORD *)(v352 + 2);
            uint64_t v374 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v375 = (char *)v351 + v374;
            uint64_t v415 = (char *)v352 + v374;
            uint64_t v376 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 32))(v375, v415, v376);
            break;
          case 5:
            *(void *)uint64_t v351 = *(void *)v352;
            uint64_t v377 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v378 = (char *)v351 + v377;
            uint64_t v416 = (char *)v352 + v377;
            uint64_t v379 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 32))(v378, v416, v379);
            break;
          case 4:
            *(void *)uint64_t v351 = *(void *)v352;
            uint64_t v357 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v358 = (char *)v351 + v357;
            uint64_t v412 = (char *)v352 + v357;
            uint64_t v359 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 32))(v358, v412, v359);
            break;
          default:
            memcpy(v351, v352, *(void *)(*(void *)(v354 - 8) + 64));
            goto LABEL_231;
        }
        swift_storeEnumTagMultiPayload();
LABEL_231:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v351, 0, 1, v354);
        goto LABEL_232;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v96 = (char *)a1 + v95;
        uint64_t v97 = (char *)a2 + v95;
        uint64_t v98 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
        goto LABEL_234;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v100 = (char *)a1 + v99;
        uint64_t v101 = (char *)a2 + v99;
        uint64_t v102 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
        goto LABEL_234;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v80 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v103 = *(int *)(v80 + 20);
        uint64_t v104 = (char *)a1 + v103;
        uint64_t v105 = (char *)a2 + v103;
        uint64_t v106 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v106))
        {
          uint64_t v107 = sub_253462A5C(&qword_269CE2268);
          memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v104 = *(void *)v105;
          v104[8] = v105[8];
          uint64_t v162 = *(int *)(v106 + 20);
          uint64_t v163 = &v104[v162];
          uint64_t v164 = &v105[v162];
          uint64_t v165 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v106);
        }
        goto LABEL_205;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v109 = (char *)a1 + v108;
        uint64_t v110 = (char *)a2 + v108;
        uint64_t v111 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
        goto LABEL_234;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v113 = (char *)a1 + v112;
        uint64_t v114 = (char *)a2 + v112;
        uint64_t v115 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
        goto LABEL_234;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v117 = (char *)a1 + v116;
        uint64_t v118 = (char *)a2 + v116;
        uint64_t v119 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
        goto LABEL_234;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v121 = (char *)a1 + v120;
        uint64_t v122 = (char *)a2 + v120;
        uint64_t v123 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
        goto LABEL_234;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v125 = (char *)a1 + v124;
        uint64_t v126 = (char *)a2 + v124;
        uint64_t v127 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
        goto LABEL_234;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v129 = (char *)a1 + v128;
        uint64_t v130 = (char *)a2 + v128;
        uint64_t v131 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
        goto LABEL_234;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v133 = (char *)a1 + v132;
        int v134 = (char *)a2 + v132;
        uint64_t v135 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
        goto LABEL_234;
      case 0xFu:
      case 0x11u:
        uint64_t v136 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v136 - 8) + 32))(a1, a2, v136);
        goto LABEL_234;
      case 0x10u:
        *(void *)a1 = *(void *)a2;
        uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v138 = (char *)a1 + v137;
        uint64_t v139 = (char *)a2 + v137;
        uint64_t v140 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
        goto LABEL_234;
      default:
        size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
        goto LABEL_9;
    }
  }
  if (v8) {
    goto LABEL_8;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_105:
        uint64_t v188 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v189 = (char *)a1 + v188;
        uint64_t v190 = (char *)a2 + v188;
        uint64_t v191 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v189, v190, v191);
        goto LABEL_180;
      }
      int v75 = swift_getEnumCaseMultiPayload();
      switch(v75)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v180 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v181 = (char *)a1 + v180;
          uint64_t v182 = (char *)a2 + v180;
          uint64_t v183 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 32))(v181, v182, v183);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v185 = (char *)a1 + v184;
          uint64_t v186 = (char *)a2 + v184;
          uint64_t v187 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v76 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v77 = (char *)a1 + v76;
          uint64_t v78 = (char *)a2 + v76;
          uint64_t v79 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_104;
      }
      swift_storeEnumTagMultiPayload();
LABEL_104:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
      goto LABEL_105;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      uint64_t v15 = *(int *)(v14 + 20);
      uint64_t v16 = (_DWORD *)((char *)a1 + v15);
      uint64_t v17 = (_DWORD *)((char *)a2 + v15);
      uint64_t v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18)) {
        goto LABEL_20;
      }
      uint64_t v141 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v141)) {
        goto LABEL_67;
      }
      int v166 = swift_getEnumCaseMultiPayload();
      switch(v166)
      {
        case 9:
          goto LABEL_145;
        case 5:
          goto LABEL_146;
        case 4:
          goto LABEL_95;
      }
      goto LABEL_148;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v19 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = (_DWORD *)((char *)a1 + v20);
      uint64_t v22 = (_DWORD *)((char *)a2 + v20);
      uint64_t v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        goto LABEL_137;
      }
      uint64_t v142 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v142))
      {
        uint64_t v143 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v21, v22, *(void *)(*(void *)(v143 - 8) + 64));
        goto LABEL_136;
      }
      int v167 = swift_getEnumCaseMultiPayload();
      switch(v167)
      {
        case 9:
          *uint64_t v21 = *v22;
          *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
          uint64_t v218 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v219 = (char *)v21 + v218;
          uint64_t v397 = (char *)v22 + v218;
          uint64_t v220 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v219, v397, v220);
          goto LABEL_133;
        case 5:
          *(void *)uint64_t v21 = *(void *)v22;
          uint64_t v221 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v222 = (char *)v21 + v221;
          uint64_t v398 = (char *)v22 + v221;
          uint64_t v223 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32))(v222, v398, v223);
          goto LABEL_133;
        case 4:
          *(void *)uint64_t v21 = *(void *)v22;
          uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v169 = (char *)v21 + v168;
          uint64_t v393 = (char *)v22 + v168;
          uint64_t v170 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v169, v393, v170);
LABEL_133:
          swift_storeEnumTagMultiPayload();
          goto LABEL_135;
      }
      memcpy(v21, v22, *(void *)(*(void *)(v142 - 8) + 64));
LABEL_135:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v142);
LABEL_136:
      uint64_t v224 = *(int *)(v23 + 20);
      uint64_t v225 = (char *)v21 + v224;
      uint64_t v226 = (char *)v22 + v224;
      uint64_t v227 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v225, v226, v227);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_137:
      uint64_t v228 = v19[6];
      uint64_t v229 = (_DWORD *)((char *)a1 + v228);
      uint64_t v230 = (_DWORD *)((char *)a2 + v228);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v228, 1, v23))
      {
        uint64_t v231 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v229, v230, *(void *)(*(void *)(v231 - 8) + 64));
        goto LABEL_172;
      }
      uint64_t v232 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v230, 1, v232))
      {
        uint64_t v233 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v229, v230, *(void *)(*(void *)(v233 - 8) + 64));
        goto LABEL_171;
      }
      int v234 = swift_getEnumCaseMultiPayload();
      switch(v234)
      {
        case 9:
          *uint64_t v229 = *v230;
          *(_OWORD *)(v229 + 2) = *(_OWORD *)(v230 + 2);
          uint64_t v275 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v276 = (char *)v229 + v275;
          uint64_t v403 = (char *)v230 + v275;
          uint64_t v277 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 32))(v276, v403, v277);
          goto LABEL_168;
        case 5:
          *(void *)uint64_t v229 = *(void *)v230;
          uint64_t v278 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v279 = (char *)v229 + v278;
          uint64_t v404 = (char *)v230 + v278;
          uint64_t v280 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 32))(v279, v404, v280);
          goto LABEL_168;
        case 4:
          *(void *)uint64_t v229 = *(void *)v230;
          uint64_t v235 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v236 = (char *)v229 + v235;
          uint64_t v399 = (char *)v230 + v235;
          uint64_t v237 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v236, v399, v237);
LABEL_168:
          swift_storeEnumTagMultiPayload();
          goto LABEL_170;
      }
      memcpy(v229, v230, *(void *)(*(void *)(v232 - 8) + 64));
LABEL_170:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v229, 0, 1, v232);
LABEL_171:
      uint64_t v281 = *(int *)(v23 + 20);
      uint64_t v282 = (char *)v229 + v281;
      uint64_t v283 = (char *)v230 + v281;
      uint64_t v284 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 32))(v282, v283, v284);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v229, 0, 1, v23);
LABEL_172:
      uint64_t v285 = v19[7];
      uint64_t v286 = (char *)a1 + v285;
      uint64_t v287 = (char *)a2 + v285;
      uint64_t v288 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 32))(v286, v287, v288);
      goto LABEL_180;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      uint64_t v25 = *(int *)(v14 + 20);
      uint64_t v16 = (_DWORD *)((char *)a1 + v25);
      uint64_t v17 = (_DWORD *)((char *)a2 + v25);
      uint64_t v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
      {
LABEL_20:
        uint64_t v26 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
        goto LABEL_151;
      }
      uint64_t v141 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v141))
      {
LABEL_67:
        uint64_t v144 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v16, v17, *(void *)(*(void *)(v144 - 8) + 64));
        goto LABEL_150;
      }
      int v171 = swift_getEnumCaseMultiPayload();
      switch(v171)
      {
        case 9:
LABEL_145:
          *uint64_t v16 = *v17;
          *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
          uint64_t v238 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v239 = (char *)v16 + v238;
          uint64_t v400 = (char *)v17 + v238;
          uint64_t v240 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v239, v400, v240);
          goto LABEL_147;
        case 5:
LABEL_146:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v241 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v242 = (char *)v16 + v241;
          uint64_t v401 = (char *)v17 + v241;
          uint64_t v243 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 32))(v242, v401, v243);
          goto LABEL_147;
        case 4:
LABEL_95:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v173 = (char *)v16 + v172;
          uint64_t v394 = (char *)v17 + v172;
          uint64_t v174 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v173, v394, v174);
LABEL_147:
          swift_storeEnumTagMultiPayload();
          goto LABEL_149;
      }
LABEL_148:
      memcpy(v16, v17, *(void *)(*(void *)(v141 - 8) + 64));
LABEL_149:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v141);
LABEL_150:
      uint64_t v244 = *(int *)(v18 + 20);
      uint64_t v245 = (char *)v16 + v244;
      int v246 = (char *)v17 + v244;
      uint64_t v247 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 32))(v245, v246, v247);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_151:
      uint64_t v248 = *(int *)(v14 + 24);
      uint64_t v249 = (char *)a1 + v248;
      uint64_t v250 = (char *)a2 + v248;
      uint64_t v251 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v249, v250, v251);
      goto LABEL_180;
    case 4u:
      uint64_t v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v27))
      {
        uint64_t v28 = sub_253462A5C(&qword_269CE22E0);
        memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        goto LABEL_158;
      }
      uint64_t v145 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v145))
      {
        uint64_t v146 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v146 - 8) + 64));
        goto LABEL_157;
      }
      int v175 = swift_getEnumCaseMultiPayload();
      switch(v175)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v252 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v253 = (char *)a1 + v252;
          uint64_t v254 = (char *)a2 + v252;
          uint64_t v255 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 32))(v253, v254, v255);
          goto LABEL_154;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v256 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v257 = (char *)a1 + v256;
          uint64_t v258 = (char *)a2 + v256;
          uint64_t v259 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 32))(v257, v258, v259);
          goto LABEL_154;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v177 = (char *)a1 + v176;
          uint64_t v178 = (char *)a2 + v176;
          uint64_t v179 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 32))(v177, v178, v179);
LABEL_154:
          swift_storeEnumTagMultiPayload();
          goto LABEL_156;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v145 - 8) + 64));
LABEL_156:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v145);
LABEL_157:
      uint64_t v260 = *(int *)(v27 + 20);
      uint64_t v261 = (char *)a1 + v260;
      uint64_t v262 = (char *)a2 + v260;
      uint64_t v263 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 32))(v261, v262, v263);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v27);
LABEL_158:
      uint64_t v264 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      uint64_t v265 = *(int *)(v264 + 20);
      uint64_t v266 = (_DWORD *)((char *)a1 + v265);
      uint64_t v267 = (_DWORD *)((char *)a2 + v265);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v265, 1, v27))
      {
        uint64_t v268 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
        goto LABEL_179;
      }
      uint64_t v269 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v267, 1, v269))
      {
        uint64_t v270 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v266, v267, *(void *)(*(void *)(v270 - 8) + 64));
        goto LABEL_178;
      }
      int v271 = swift_getEnumCaseMultiPayload();
      switch(v271)
      {
        case 9:
          *uint64_t v266 = *v267;
          *(_OWORD *)(v266 + 2) = *(_OWORD *)(v267 + 2);
          uint64_t v289 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v290 = (char *)v266 + v289;
          uint64_t v405 = (char *)v267 + v289;
          uint64_t v291 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v291 - 8) + 32))(v290, v405, v291);
          goto LABEL_175;
        case 5:
          *(void *)uint64_t v266 = *(void *)v267;
          uint64_t v292 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v293 = (char *)v266 + v292;
          uint64_t v406 = (char *)v267 + v292;
          uint64_t v294 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 32))(v293, v406, v294);
          goto LABEL_175;
        case 4:
          *(void *)uint64_t v266 = *(void *)v267;
          uint64_t v272 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v273 = (char *)v266 + v272;
          uint64_t v402 = (char *)v267 + v272;
          uint64_t v274 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v273, v402, v274);
LABEL_175:
          swift_storeEnumTagMultiPayload();
          goto LABEL_177;
      }
      memcpy(v266, v267, *(void *)(*(void *)(v269 - 8) + 64));
LABEL_177:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v266, 0, 1, v269);
LABEL_178:
      uint64_t v295 = *(int *)(v27 + 20);
      uint64_t v296 = (char *)v266 + v295;
      uint64_t v297 = (char *)v267 + v295;
      uint64_t v298 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 32))(v296, v297, v298);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v266, 0, 1, v27);
LABEL_179:
      uint64_t v299 = *(int *)(v264 + 24);
      uint64_t v300 = (char *)a1 + v299;
      uint64_t v301 = (char *)a2 + v299;
      uint64_t v302 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v300, v301, v302);
LABEL_180:
      swift_storeEnumTagMultiPayload();
LABEL_181:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      break;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      goto LABEL_180;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      goto LABEL_180;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      uint64_t v37 = *(int *)(v14 + 20);
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_253462A5C(&qword_269CE2268);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v38 = *(void *)v39;
        v38[8] = v39[8];
        uint64_t v147 = *(int *)(v40 + 20);
        uint64_t v148 = &v38[v147];
        uint64_t v149 = &v39[v147];
        uint64_t v150 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
      }
      goto LABEL_151;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      goto LABEL_180;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      goto LABEL_180;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      uint64_t v53 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      goto LABEL_180;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      goto LABEL_180;
    case 0xCu:
      *(void *)a1 = *(void *)a2;
      uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      uint64_t v61 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_180;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
      goto LABEL_180;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
      goto LABEL_180;
    case 0xFu:
    case 0x11u:
      uint64_t v70 = sub_253B07160();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v70 - 8) + 32))(a1, a2, v70);
      goto LABEL_180;
    case 0x10u:
      *(void *)a1 = *(void *)a2;
      uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      uint64_t v74 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      goto LABEL_180;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_181;
  }
LABEL_235:
  uint64_t v388 = *(int *)(a3 + 20);
  uint64_t v389 = (char *)a1 + v388;
  uint64_t v390 = (char *)a2 + v388;
  uint64_t v391 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 40))(v389, v390, v391);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExpr(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538D6068);
}

uint64_t sub_2538D6068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2320);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExpr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538D6088);
}

uint64_t sub_2538D6088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2320);
}

void sub_2538D6094(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstflatExprEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
        {
          uint64_t v8 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v90 = a2[1];
              *a1 = *a2;
              a1[1] = v90;
              swift_bridgeObjectRetain();
              goto LABEL_51;
            case 4u:
              *a1 = *a2;
              uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v106 = (char *)a1 + v105;
              uint64_t v107 = (char *)a2 + v105;
              uint64_t v108 = sub_253B07160();
              uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v106, v107, v108);
              goto LABEL_51;
            case 5u:
              *a1 = *a2;
              uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v111 = (char *)a1 + v110;
              uint64_t v112 = (char *)a2 + v110;
              uint64_t v113 = sub_253B07160();
              uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
              swift_bridgeObjectRetain();
              v114(v111, v112, v113);
              goto LABEL_51;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              uint64_t v115 = a2[2];
              a1[1] = a2[1];
              a1[2] = v115;
              uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v117 = (char *)a1 + v116;
              uint64_t v118 = (char *)a2 + v116;
              uint64_t v119 = sub_253B07160();
              uint64_t v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
              swift_bridgeObjectRetain();
              v120(v117, v118, v119);
LABEL_51:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
        }
        uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v122 = (char *)a1 + v121;
        uint64_t v123 = (char *)a2 + v121;
        uint64_t v124 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
        goto LABEL_110;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (uint64_t *)((char *)a1 + v11);
        uint64_t v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
          goto LABEL_12;
        }
        uint64_t v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v91)) {
          goto LABEL_35;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v101 = v13[1];
            void *v12 = *v13;
            v12[1] = v101;
            swift_bridgeObjectRetain();
            goto LABEL_58;
          case 4u:
            void *v12 = *v13;
            uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v236 = (char *)v13 + v125;
            uint64_t v251 = (char *)v12 + v125;
            uint64_t v126 = sub_253B07160();
            uint64_t v221 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v221(v251, v236, v126);
            goto LABEL_58;
          case 5u:
            void *v12 = *v13;
            uint64_t v127 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v237 = (char *)v13 + v127;
            uint64_t v252 = (char *)v12 + v127;
            uint64_t v128 = sub_253B07160();
            uint64_t v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
            swift_bridgeObjectRetain();
            v222(v252, v237, v128);
            goto LABEL_58;
          case 9u:
            *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
            uint64_t v129 = v13[2];
            v12[1] = v13[1];
            v12[2] = v129;
            uint64_t v130 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v238 = (char *)v13 + v130;
            uint64_t v253 = (char *)v12 + v130;
            uint64_t v131 = sub_253B07160();
            uint64_t v223 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
            swift_bridgeObjectRetain();
            v223(v253, v238, v131);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(void *)(*(void *)(v91 - 8) + 64));
            break;
        }
        goto LABEL_78;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v16 = v15[5];
        uint64_t v17 = (uint64_t *)((char *)a1 + v16);
        uint64_t v18 = (uint64_t *)((char *)a2 + v16);
        uint64_t v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v92))
          {
            uint64_t v93 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v17, v18, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v102 = v18[1];
                *uint64_t v17 = *v18;
                v17[1] = v102;
                swift_bridgeObjectRetain();
                goto LABEL_64;
              case 4u:
                *uint64_t v17 = *v18;
                uint64_t v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v239 = (char *)v18 + v132;
                uint64_t v254 = (char *)v17 + v132;
                uint64_t v133 = sub_253B07160();
                uint64_t v224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
                swift_bridgeObjectRetain();
                v224(v254, v239, v133);
                goto LABEL_64;
              case 5u:
                *uint64_t v17 = *v18;
                uint64_t v134 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v240 = (char *)v18 + v134;
                uint64_t v255 = (char *)v17 + v134;
                uint64_t v135 = sub_253B07160();
                uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
                swift_bridgeObjectRetain();
                v225(v255, v240, v135);
                goto LABEL_64;
              case 9u:
                *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
                uint64_t v136 = v18[2];
                v17[1] = v18[1];
                v17[2] = v136;
                uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v241 = (char *)v18 + v137;
                uint64_t v256 = (char *)v17 + v137;
                uint64_t v138 = sub_253B07160();
                uint64_t v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
                swift_bridgeObjectRetain();
                v226(v256, v241, v138);
LABEL_64:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v17, v18, *(void *)(*(void *)(v92 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v92);
          }
          uint64_t v139 = *(int *)(v19 + 20);
          uint64_t v140 = (char *)v17 + v139;
          uint64_t v141 = (char *)v18 + v139;
          uint64_t v142 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v143 = v15[6];
        uint64_t v144 = (uint64_t *)((char *)a1 + v143);
        uint64_t v145 = (uint64_t *)((char *)a2 + v143);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v143, 1, v19))
        {
          uint64_t v146 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
        }
        else
        {
          uint64_t v147 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v145, 1, v147))
          {
            uint64_t v148 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v144, v145, *(void *)(*(void *)(v148 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v149 = v145[1];
                void *v144 = *v145;
                v144[1] = v149;
                swift_bridgeObjectRetain();
                goto LABEL_98;
              case 4u:
                void *v144 = *v145;
                uint64_t v190 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v245 = (char *)v145 + v190;
                uint64_t v263 = (char *)v144 + v190;
                uint64_t v191 = sub_253B07160();
                uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
                swift_bridgeObjectRetain();
                v230(v263, v245, v191);
                goto LABEL_98;
              case 5u:
                void *v144 = *v145;
                uint64_t v192 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                int v246 = (char *)v145 + v192;
                uint64_t v264 = (char *)v144 + v192;
                uint64_t v193 = sub_253B07160();
                uint64_t v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16);
                swift_bridgeObjectRetain();
                v231(v264, v246, v193);
                goto LABEL_98;
              case 9u:
                *(_DWORD *)uint64_t v144 = *(_DWORD *)v145;
                uint64_t v194 = v145[2];
                v144[1] = v145[1];
                v144[2] = v194;
                uint64_t v195 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v247 = (char *)v145 + v195;
                uint64_t v265 = (char *)v144 + v195;
                uint64_t v196 = sub_253B07160();
                uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16);
                swift_bridgeObjectRetain();
                v232(v265, v247, v196);
LABEL_98:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v144, 0, 1, v147);
          }
          uint64_t v197 = *(int *)(v19 + 20);
          uint64_t v198 = (char *)v144 + v197;
          uint64_t v199 = (char *)v145 + v197;
          uint64_t v200 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v144, 0, 1, v19);
        }
        uint64_t v201 = v15[7];
        uint64_t v202 = (char *)a1 + v201;
        uint64_t v203 = (char *)a2 + v201;
        uint64_t v204 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
        goto LABEL_110;
      case 3u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v22 = *(int *)(v10 + 20);
        uint64_t v12 = (uint64_t *)((char *)a1 + v22);
        uint64_t v13 = (uint64_t *)((char *)a2 + v22);
        uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
LABEL_12:
          uint64_t v23 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v91))
          {
LABEL_35:
            uint64_t v94 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v12, v13, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v103 = v13[1];
                void *v12 = *v13;
                v12[1] = v103;
                swift_bridgeObjectRetain();
                goto LABEL_77;
              case 4u:
                void *v12 = *v13;
                uint64_t v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v242 = (char *)v13 + v150;
                uint64_t v257 = (char *)v12 + v150;
                uint64_t v151 = sub_253B07160();
                uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
                swift_bridgeObjectRetain();
                v227(v257, v242, v151);
                goto LABEL_77;
              case 5u:
                void *v12 = *v13;
                uint64_t v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v243 = (char *)v13 + v152;
                uint64_t v258 = (char *)v12 + v152;
                uint64_t v153 = sub_253B07160();
                uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
                swift_bridgeObjectRetain();
                v228(v258, v243, v153);
                goto LABEL_77;
              case 9u:
                *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
                uint64_t v154 = v13[2];
                v12[1] = v13[1];
                v12[2] = v154;
                uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v244 = (char *)v13 + v155;
                uint64_t v259 = (char *)v12 + v155;
                uint64_t v156 = sub_253B07160();
                uint64_t v229 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
                swift_bridgeObjectRetain();
                v229(v259, v244, v156);
LABEL_77:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v12, v13, *(void *)(*(void *)(v91 - 8) + 64));
                break;
            }
LABEL_78:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v91);
          }
          uint64_t v157 = *(int *)(v14 + 20);
          uint64_t v158 = (char *)v12 + v157;
          uint64_t v159 = (char *)v13 + v157;
          uint64_t v160 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
LABEL_80:
        uint64_t v161 = *(int *)(v10 + 24);
        uint64_t v162 = (char *)a1 + v161;
        uint64_t v163 = (char *)a2 + v161;
        uint64_t v164 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
LABEL_110:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v24 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_269CE22E0);
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v95 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v95))
          {
            uint64_t v96 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(a1, a2, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v104 = a2[1];
                *a1 = *a2;
                a1[1] = v104;
                swift_bridgeObjectRetain();
                goto LABEL_85;
              case 4u:
                *a1 = *a2;
                uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v260 = (char *)a1 + v165;
                int v166 = (char *)a2 + v165;
                uint64_t v167 = sub_253B07160();
                uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
                swift_bridgeObjectRetain();
                v168(v260, v166, v167);
                goto LABEL_85;
              case 5u:
                *a1 = *a2;
                uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v261 = (char *)a1 + v169;
                uint64_t v170 = (char *)a2 + v169;
                uint64_t v171 = sub_253B07160();
                uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
                swift_bridgeObjectRetain();
                v172(v261, v170, v171);
                goto LABEL_85;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                uint64_t v173 = a2[2];
                a1[1] = a2[1];
                a1[2] = v173;
                uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v262 = (char *)a1 + v174;
                int v175 = (char *)a2 + v174;
                uint64_t v176 = sub_253B07160();
                uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
                swift_bridgeObjectRetain();
                v177(v262, v175, v176);
LABEL_85:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v95 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v95);
          }
          uint64_t v178 = *(int *)(v24 + 20);
          uint64_t v179 = (char *)a1 + v178;
          uint64_t v180 = (char *)a2 + v178;
          uint64_t v181 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
        }
        uint64_t v182 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v183 = *(int *)(v182 + 20);
        uint64_t v184 = (uint64_t *)((char *)a1 + v183);
        uint64_t v185 = (uint64_t *)((char *)a2 + v183);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v183, 1, v24))
        {
          uint64_t v186 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
        }
        else
        {
          uint64_t v187 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v185, 1, v187))
          {
            uint64_t v188 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v184, v185, *(void *)(*(void *)(v188 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                uint64_t v189 = v185[1];
                void *v184 = *v185;
                v184[1] = v189;
                swift_bridgeObjectRetain();
                goto LABEL_106;
              case 4u:
                void *v184 = *v185;
                uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v248 = (char *)v185 + v205;
                uint64_t v266 = (char *)v184 + v205;
                uint64_t v206 = sub_253B07160();
                uint64_t v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16);
                swift_bridgeObjectRetain();
                v233(v266, v248, v206);
                goto LABEL_106;
              case 5u:
                void *v184 = *v185;
                uint64_t v207 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v249 = (char *)v185 + v207;
                uint64_t v267 = (char *)v184 + v207;
                uint64_t v208 = sub_253B07160();
                int v234 = *(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 16);
                swift_bridgeObjectRetain();
                v234(v267, v249, v208);
                goto LABEL_106;
              case 9u:
                *(_DWORD *)uint64_t v184 = *(_DWORD *)v185;
                uint64_t v209 = v185[2];
                v184[1] = v185[1];
                v184[2] = v209;
                uint64_t v210 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v250 = (char *)v185 + v210;
                uint64_t v268 = (char *)v184 + v210;
                uint64_t v211 = sub_253B07160();
                uint64_t v235 = *(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16);
                swift_bridgeObjectRetain();
                v235(v268, v250, v211);
LABEL_106:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v184, v185, *(void *)(*(void *)(v187 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v184, 0, 1, v187);
          }
          uint64_t v212 = *(int *)(v24 + 20);
          uint64_t v213 = (char *)v184 + v212;
          uint64_t v214 = (char *)v185 + v212;
          uint64_t v215 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v184, 0, 1, v24);
        }
        uint64_t v216 = *(int *)(v182 + 24);
        uint64_t v217 = (char *)a1 + v216;
        uint64_t v218 = (char *)a2 + v216;
        uint64_t v219 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
        goto LABEL_110;
      case 5u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        a1[2] = a2[2];
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        goto LABEL_110;
      case 6u:
        *a1 = *a2;
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        goto LABEL_110;
      case 7u:
        uint64_t v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v38 = *(int *)(v10 + 20);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_269CE2268);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v39 = *(void *)v40;
          v39[8] = v40[8];
          uint64_t v97 = *(int *)(v41 + 20);
          uint64_t v98 = &v39[v97];
          uint64_t v99 = &v40[v97];
          uint64_t v100 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
        }
        goto LABEL_80;
      case 8u:
        uint64_t v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B07160();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        goto LABEL_110;
      case 9u:
        uint64_t v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = sub_253B07160();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        goto LABEL_110;
      case 0xAu:
        uint64_t v55 = a2[1];
        *a1 = *a2;
        a1[1] = v55;
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_253B07160();
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v57, v58, v59);
        goto LABEL_110;
      case 0xBu:
        uint64_t v61 = a2[1];
        *a1 = *a2;
        a1[1] = v61;
        uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        uint64_t v65 = sub_253B07160();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        goto LABEL_110;
      case 0xCu:
        *a1 = *a2;
        uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = sub_253B07160();
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        goto LABEL_110;
      case 0xDu:
        uint64_t v72 = a2[1];
        *a1 = *a2;
        a1[1] = v72;
        uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v74 = (char *)a1 + v73;
        int v75 = (char *)a2 + v73;
        uint64_t v76 = sub_253B07160();
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        goto LABEL_110;
      case 0xEu:
        uint64_t v78 = a2[1];
        *a1 = *a2;
        a1[1] = v78;
        uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = sub_253B07160();
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        goto LABEL_110;
      case 0xFu:
      case 0x11u:
        uint64_t v84 = sub_253B07160();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v84 - 8) + 16))(a1, a2, v84);
        goto LABEL_110;
      case 0x10u:
        *a1 = *a2;
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = sub_253B07160();
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v86, v87, v88);
        goto LABEL_110;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstflatExprEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v3))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            swift_bridgeObjectRelease();
            break;
          case 4u:
            swift_bridgeObjectRelease();
            uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
            goto LABEL_34;
          case 5u:
            swift_bridgeObjectRelease();
            uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_34:
            uint64_t v18 = *(int *)(v17 + 20);
            goto LABEL_36;
          case 9u:
            swift_bridgeObjectRelease();
            uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_36:
            uint64_t v19 = a1 + v18;
            uint64_t v20 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
            break;
          default:
            break;
        }
      }
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
      goto LABEL_38;
    case 1:
      uint64_t v4 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6)) {
        goto LABEL_45;
      }
      uint64_t v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_15;
          case 4u:
            goto LABEL_39;
          case 5u:
            goto LABEL_40;
          case 9u:
            goto LABEL_42;
          default:
            goto LABEL_44;
        }
      }
      goto LABEL_44;
    case 2:
      uint64_t v8 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      uint64_t v9 = a1 + v8[5];
      uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10))
      {
        uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v11))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              uint64_t v27 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_48;
            case 5u:
              swift_bridgeObjectRelease();
              uint64_t v27 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_48:
              uint64_t v28 = *(int *)(v27 + 20);
              goto LABEL_50;
            case 9u:
              swift_bridgeObjectRelease();
              uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_50:
              uint64_t v29 = v9 + v28;
              uint64_t v30 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
              break;
            default:
              break;
          }
        }
        uint64_t v31 = v9 + *(int *)(v10 + 20);
        uint64_t v32 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
      }
      uint64_t v33 = a1 + v8[6];
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v33, 1, v10))
      {
        uint64_t v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v33, 1, v34))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              uint64_t v44 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_68;
            case 5u:
              swift_bridgeObjectRelease();
              uint64_t v44 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_68:
              uint64_t v45 = *(int *)(v44 + 20);
              goto LABEL_70;
            case 9u:
              swift_bridgeObjectRelease();
              uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_70:
              uint64_t v46 = v33 + v45;
              uint64_t v47 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
              break;
            default:
              break;
          }
        }
        uint64_t v48 = v33 + *(int *)(v10 + 20);
        uint64_t v49 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
      }
      uint64_t v15 = v8[7];
      goto LABEL_80;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6)) {
        goto LABEL_45;
      }
      uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
LABEL_15:
            swift_bridgeObjectRelease();
            break;
          case 4u:
LABEL_39:
            swift_bridgeObjectRelease();
            uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
            goto LABEL_41;
          case 5u:
LABEL_40:
            swift_bridgeObjectRelease();
            uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_41:
            uint64_t v22 = *(int *)(v21 + 20);
            goto LABEL_43;
          case 9u:
LABEL_42:
            swift_bridgeObjectRelease();
            uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_43:
            uint64_t v23 = v5 + v22;
            uint64_t v24 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
            break;
          default:
            break;
        }
      }
LABEL_44:
      uint64_t v25 = v5 + *(int *)(v6 + 20);
      uint64_t v26 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
LABEL_45:
      uint64_t v15 = *(int *)(v4 + 24);
      goto LABEL_80;
    case 4:
      uint64_t v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v13))
      {
        uint64_t v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v14))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              uint64_t v35 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_58;
            case 5u:
              swift_bridgeObjectRelease();
              uint64_t v35 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_58:
              uint64_t v36 = *(int *)(v35 + 20);
              goto LABEL_60;
            case 9u:
              swift_bridgeObjectRelease();
              uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_60:
              uint64_t v37 = a1 + v36;
              uint64_t v38 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
              break;
            default:
              break;
          }
        }
        uint64_t v39 = a1 + *(int *)(v13 + 20);
        uint64_t v40 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      }
      uint64_t v41 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      uint64_t v42 = a1 + *(int *)(v41 + 20);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v42, 1, v13))
      {
        uint64_t v43 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v42, 1, v43))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              uint64_t v50 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_75;
            case 5u:
              swift_bridgeObjectRelease();
              uint64_t v50 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_75:
              uint64_t v51 = *(int *)(v50 + 20);
              goto LABEL_77;
            case 9u:
              swift_bridgeObjectRelease();
              uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_77:
              uint64_t v52 = v42 + v51;
              uint64_t v53 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
              break;
            default:
              break;
          }
        }
        uint64_t v54 = v42 + *(int *)(v13 + 20);
        uint64_t v55 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
      }
      uint64_t v15 = *(int *)(v41 + 24);
      goto LABEL_80;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      goto LABEL_80;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
      goto LABEL_38;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6)) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
      goto LABEL_38;
    case 9:
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      goto LABEL_80;
    case 10:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
      goto LABEL_38;
    case 11:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
      goto LABEL_38;
    case 12:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
      goto LABEL_38;
    case 13:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
      goto LABEL_38;
    case 14:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
      goto LABEL_38;
    case 15:
    case 17:
      goto LABEL_81;
    case 16:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_38:
      uint64_t v15 = *(int *)(updated + 20);
LABEL_80:
      a1 += v15;
LABEL_81:
      uint64_t v56 = sub_253B07160();
      uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8);
      uint64_t result = v57(a1, v56);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoAstflatExprEnum(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v88 = a2[1];
            *a1 = *a2;
            a1[1] = v88;
            swift_bridgeObjectRetain();
            goto LABEL_49;
          case 4u:
            *a1 = *a2;
            uint64_t v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v104 = (char *)a1 + v103;
            uint64_t v105 = (char *)a2 + v103;
            uint64_t v106 = sub_253B07160();
            uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
            swift_bridgeObjectRetain();
            v107(v104, v105, v106);
            goto LABEL_49;
          case 5u:
            *a1 = *a2;
            uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v109 = (char *)a1 + v108;
            uint64_t v110 = (char *)a2 + v108;
            uint64_t v111 = sub_253B07160();
            uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            v112(v109, v110, v111);
            goto LABEL_49;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            uint64_t v113 = a2[2];
            a1[1] = a2[1];
            a1[2] = v113;
            uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v115 = (char *)a1 + v114;
            uint64_t v116 = (char *)a2 + v114;
            uint64_t v117 = sub_253B07160();
            uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
            swift_bridgeObjectRetain();
            v118(v115, v116, v117);
LABEL_49:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
      uint64_t v120 = (char *)a1 + v119;
      uint64_t v121 = (char *)a2 + v119;
      uint64_t v122 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
      goto LABEL_108;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12)) {
        goto LABEL_10;
      }
      uint64_t v89 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v89)) {
        goto LABEL_33;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v99 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v99;
          swift_bridgeObjectRetain();
          goto LABEL_56;
        case 4u:
          *uint64_t v10 = *v11;
          uint64_t v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          int v234 = (char *)v11 + v123;
          uint64_t v249 = (char *)v10 + v123;
          uint64_t v124 = sub_253B07160();
          uint64_t v219 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
          swift_bridgeObjectRetain();
          v219(v249, v234, v124);
          goto LABEL_56;
        case 5u:
          *uint64_t v10 = *v11;
          uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v235 = (char *)v11 + v125;
          uint64_t v250 = (char *)v10 + v125;
          uint64_t v126 = sub_253B07160();
          uint64_t v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
          swift_bridgeObjectRetain();
          v220(v250, v235, v126);
          goto LABEL_56;
        case 9u:
          *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
          uint64_t v127 = v11[2];
          v10[1] = v11[1];
          v10[2] = v127;
          uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v236 = (char *)v11 + v128;
          uint64_t v251 = (char *)v10 + v128;
          uint64_t v129 = sub_253B07160();
          uint64_t v221 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
          swift_bridgeObjectRetain();
          v221(v251, v236, v129);
LABEL_56:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(*(void *)(v89 - 8) + 64));
          break;
      }
      goto LABEL_76;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = (void *)((char *)a1 + v14);
      uint64_t v16 = (void *)((char *)a2 + v14);
      uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v90 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v90))
        {
          uint64_t v91 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v15, v16, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v100 = v16[1];
              *uint64_t v15 = *v16;
              v15[1] = v100;
              swift_bridgeObjectRetain();
              goto LABEL_62;
            case 4u:
              *uint64_t v15 = *v16;
              uint64_t v130 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v237 = (char *)v16 + v130;
              uint64_t v252 = (char *)v15 + v130;
              uint64_t v131 = sub_253B07160();
              uint64_t v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
              swift_bridgeObjectRetain();
              v222(v252, v237, v131);
              goto LABEL_62;
            case 5u:
              *uint64_t v15 = *v16;
              uint64_t v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v238 = (char *)v16 + v132;
              uint64_t v253 = (char *)v15 + v132;
              uint64_t v133 = sub_253B07160();
              uint64_t v223 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
              swift_bridgeObjectRetain();
              v223(v253, v238, v133);
              goto LABEL_62;
            case 9u:
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              uint64_t v134 = v16[2];
              v15[1] = v16[1];
              v15[2] = v134;
              uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v239 = (char *)v16 + v135;
              uint64_t v254 = (char *)v15 + v135;
              uint64_t v136 = sub_253B07160();
              uint64_t v224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
              swift_bridgeObjectRetain();
              v224(v254, v239, v136);
LABEL_62:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v15, v16, *(void *)(*(void *)(v90 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v90);
        }
        uint64_t v137 = *(int *)(v17 + 20);
        uint64_t v138 = (char *)v15 + v137;
        uint64_t v139 = (char *)v16 + v137;
        uint64_t v140 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v141 = v13[6];
      uint64_t v142 = (void *)((char *)a1 + v141);
      uint64_t v143 = (void *)((char *)a2 + v141);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v141, 1, v17))
      {
        uint64_t v144 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
      }
      else
      {
        uint64_t v145 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v143, 1, v145))
        {
          uint64_t v146 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v147 = v143[1];
              *uint64_t v142 = *v143;
              v142[1] = v147;
              swift_bridgeObjectRetain();
              goto LABEL_96;
            case 4u:
              *uint64_t v142 = *v143;
              uint64_t v188 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v243 = (char *)v143 + v188;
              uint64_t v261 = (char *)v142 + v188;
              uint64_t v189 = sub_253B07160();
              uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
              swift_bridgeObjectRetain();
              v228(v261, v243, v189);
              goto LABEL_96;
            case 5u:
              *uint64_t v142 = *v143;
              uint64_t v190 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v244 = (char *)v143 + v190;
              uint64_t v262 = (char *)v142 + v190;
              uint64_t v191 = sub_253B07160();
              uint64_t v229 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
              swift_bridgeObjectRetain();
              v229(v262, v244, v191);
              goto LABEL_96;
            case 9u:
              *(_DWORD *)uint64_t v142 = *(_DWORD *)v143;
              uint64_t v192 = v143[2];
              v142[1] = v143[1];
              v142[2] = v192;
              uint64_t v193 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v245 = (char *)v143 + v193;
              uint64_t v263 = (char *)v142 + v193;
              uint64_t v194 = sub_253B07160();
              uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16);
              swift_bridgeObjectRetain();
              v230(v263, v245, v194);
LABEL_96:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v142, 0, 1, v145);
        }
        uint64_t v195 = *(int *)(v17 + 20);
        uint64_t v196 = (char *)v142 + v195;
        uint64_t v197 = (char *)v143 + v195;
        uint64_t v198 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v196, v197, v198);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v142, 0, 1, v17);
      }
      uint64_t v199 = v13[7];
      uint64_t v200 = (char *)a1 + v199;
      uint64_t v201 = (char *)a2 + v199;
      uint64_t v202 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
      goto LABEL_108;
    case 3u:
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      uint64_t v20 = *(int *)(v8 + 20);
      uint64_t v10 = (void *)((char *)a1 + v20);
      uint64_t v11 = (void *)((char *)a2 + v20);
      uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
LABEL_10:
        uint64_t v21 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v89 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v89))
        {
LABEL_33:
          uint64_t v92 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v10, v11, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v101 = v11[1];
              *uint64_t v10 = *v11;
              v10[1] = v101;
              swift_bridgeObjectRetain();
              goto LABEL_75;
            case 4u:
              *uint64_t v10 = *v11;
              uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v240 = (char *)v11 + v148;
              uint64_t v255 = (char *)v10 + v148;
              uint64_t v149 = sub_253B07160();
              uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
              swift_bridgeObjectRetain();
              v225(v255, v240, v149);
              goto LABEL_75;
            case 5u:
              *uint64_t v10 = *v11;
              uint64_t v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v241 = (char *)v11 + v150;
              uint64_t v256 = (char *)v10 + v150;
              uint64_t v151 = sub_253B07160();
              uint64_t v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
              swift_bridgeObjectRetain();
              v226(v256, v241, v151);
              goto LABEL_75;
            case 9u:
              *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
              uint64_t v152 = v11[2];
              v10[1] = v11[1];
              v10[2] = v152;
              uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v242 = (char *)v11 + v153;
              uint64_t v257 = (char *)v10 + v153;
              uint64_t v154 = sub_253B07160();
              uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
              swift_bridgeObjectRetain();
              v227(v257, v242, v154);
LABEL_75:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(*(void *)(v89 - 8) + 64));
              break;
          }
LABEL_76:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v89);
        }
        uint64_t v155 = *(int *)(v12 + 20);
        uint64_t v156 = (char *)v10 + v155;
        uint64_t v157 = (char *)v11 + v155;
        uint64_t v158 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
LABEL_78:
      uint64_t v159 = *(int *)(v8 + 24);
      uint64_t v160 = (char *)a1 + v159;
      uint64_t v161 = (char *)a2 + v159;
      uint64_t v162 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
LABEL_108:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4u:
      uint64_t v22 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v22))
      {
        uint64_t v23 = sub_253462A5C(&qword_269CE22E0);
        memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v93))
        {
          uint64_t v94 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v102 = a2[1];
              *a1 = *a2;
              a1[1] = v102;
              swift_bridgeObjectRetain();
              goto LABEL_83;
            case 4u:
              *a1 = *a2;
              uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v258 = (char *)a1 + v163;
              uint64_t v164 = (char *)a2 + v163;
              uint64_t v165 = sub_253B07160();
              int v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16);
              swift_bridgeObjectRetain();
              v166(v258, v164, v165);
              goto LABEL_83;
            case 5u:
              *a1 = *a2;
              uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v259 = (char *)a1 + v167;
              uint64_t v168 = (char *)a2 + v167;
              uint64_t v169 = sub_253B07160();
              uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
              swift_bridgeObjectRetain();
              v170(v259, v168, v169);
              goto LABEL_83;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              uint64_t v171 = a2[2];
              a1[1] = a2[1];
              a1[2] = v171;
              uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v260 = (char *)a1 + v172;
              uint64_t v173 = (char *)a2 + v172;
              uint64_t v174 = sub_253B07160();
              int v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16);
              swift_bridgeObjectRetain();
              v175(v260, v173, v174);
LABEL_83:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v93 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v93);
        }
        uint64_t v176 = *(int *)(v22 + 20);
        uint64_t v177 = (char *)a1 + v176;
        uint64_t v178 = (char *)a2 + v176;
        uint64_t v179 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v22);
      }
      uint64_t v180 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      uint64_t v181 = *(int *)(v180 + 20);
      uint64_t v182 = (void *)((char *)a1 + v181);
      uint64_t v183 = (void *)((char *)a2 + v181);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v181, 1, v22))
      {
        uint64_t v184 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
      }
      else
      {
        uint64_t v185 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v183, 1, v185))
        {
          uint64_t v186 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v182, v183, *(void *)(*(void *)(v186 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              uint64_t v187 = v183[1];
              void *v182 = *v183;
              v182[1] = v187;
              swift_bridgeObjectRetain();
              goto LABEL_104;
            case 4u:
              void *v182 = *v183;
              uint64_t v203 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              int v246 = (char *)v183 + v203;
              uint64_t v264 = (char *)v182 + v203;
              uint64_t v204 = sub_253B07160();
              uint64_t v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16);
              swift_bridgeObjectRetain();
              v231(v264, v246, v204);
              goto LABEL_104;
            case 5u:
              void *v182 = *v183;
              uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v247 = (char *)v183 + v205;
              uint64_t v265 = (char *)v182 + v205;
              uint64_t v206 = sub_253B07160();
              uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16);
              swift_bridgeObjectRetain();
              v232(v265, v247, v206);
              goto LABEL_104;
            case 9u:
              *(_DWORD *)uint64_t v182 = *(_DWORD *)v183;
              uint64_t v207 = v183[2];
              v182[1] = v183[1];
              v182[2] = v207;
              uint64_t v208 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v248 = (char *)v183 + v208;
              uint64_t v266 = (char *)v182 + v208;
              uint64_t v209 = sub_253B07160();
              uint64_t v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16);
              swift_bridgeObjectRetain();
              v233(v266, v248, v209);
LABEL_104:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v182, 0, 1, v185);
        }
        uint64_t v210 = *(int *)(v22 + 20);
        uint64_t v211 = (char *)v182 + v210;
        uint64_t v212 = (char *)v183 + v210;
        uint64_t v213 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16))(v211, v212, v213);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v182, 0, 1, v22);
      }
      uint64_t v214 = *(int *)(v180 + 24);
      uint64_t v215 = (char *)a1 + v214;
      uint64_t v216 = (char *)a2 + v214;
      uint64_t v217 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v215, v216, v217);
      goto LABEL_108;
    case 5u:
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      a1[2] = a2[2];
      uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_253B07160();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      goto LABEL_108;
    case 6u:
      *a1 = *a2;
      uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = sub_253B07160();
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v31, v32, v33);
      goto LABEL_108;
    case 7u:
      uint64_t v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      uint64_t v36 = *(int *)(v8 + 20);
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = type metadata accessor for TranscriptProtoASTPickType(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_253462A5C(&qword_269CE2268);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v37 = *(void *)v38;
        v37[8] = v38[8];
        uint64_t v95 = *(int *)(v39 + 20);
        uint64_t v96 = &v37[v95];
        uint64_t v97 = &v38[v95];
        uint64_t v98 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
      }
      goto LABEL_78;
    case 8u:
      uint64_t v41 = a2[1];
      *a1 = *a2;
      a1[1] = v41;
      uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = sub_253B07160();
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
      goto LABEL_108;
    case 9u:
      uint64_t v47 = a2[1];
      *a1 = *a2;
      a1[1] = v47;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      uint64_t v49 = (char *)a1 + v48;
      uint64_t v50 = (char *)a2 + v48;
      uint64_t v51 = sub_253B07160();
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
      swift_bridgeObjectRetain();
      v52(v49, v50, v51);
      goto LABEL_108;
    case 0xAu:
      uint64_t v53 = a2[1];
      *a1 = *a2;
      a1[1] = v53;
      uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_253B07160();
      uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      goto LABEL_108;
    case 0xBu:
      uint64_t v59 = a2[1];
      *a1 = *a2;
      a1[1] = v59;
      uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      uint64_t v63 = sub_253B07160();
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
      swift_bridgeObjectRetain();
      v64(v61, v62, v63);
      goto LABEL_108;
    case 0xCu:
      *a1 = *a2;
      uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      uint64_t v68 = sub_253B07160();
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
      swift_bridgeObjectRetain();
      v69(v66, v67, v68);
      goto LABEL_108;
    case 0xDu:
      uint64_t v70 = a2[1];
      *a1 = *a2;
      a1[1] = v70;
      uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      uint64_t v74 = sub_253B07160();
      int v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
      swift_bridgeObjectRetain();
      v75(v72, v73, v74);
      goto LABEL_108;
    case 0xEu:
      uint64_t v76 = a2[1];
      *a1 = *a2;
      a1[1] = v76;
      uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      uint64_t v78 = (char *)a1 + v77;
      uint64_t v79 = (char *)a2 + v77;
      uint64_t v80 = sub_253B07160();
      uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
      swift_bridgeObjectRetain();
      v81(v78, v79, v80);
      goto LABEL_108;
    case 0xFu:
    case 0x11u:
      uint64_t v82 = sub_253B07160();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
      goto LABEL_108;
    case 0x10u:
      *a1 = *a2;
      uint64_t v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      uint64_t v84 = (char *)a1 + v83;
      uint64_t v85 = (char *)a2 + v83;
      uint64_t v86 = sub_253B07160();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
      swift_bridgeObjectRetain();
      v87(v84, v85, v86);
      goto LABEL_108;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

void *assignWithCopy for TranscriptProtoAstflatExprEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
        {
          uint64_t v7 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              goto LABEL_50;
            case 4u:
              *a1 = *a2;
              uint64_t v90 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v91 = (char *)a1 + v90;
              uint64_t v92 = (char *)a2 + v90;
              uint64_t v93 = sub_253B07160();
              uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
              swift_bridgeObjectRetain();
              v94(v91, v92, v93);
              goto LABEL_50;
            case 5u:
              *a1 = *a2;
              uint64_t v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v96 = (char *)a1 + v95;
              uint64_t v97 = (char *)a2 + v95;
              uint64_t v98 = sub_253B07160();
              uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
              swift_bridgeObjectRetain();
              v99(v96, v97, v98);
              goto LABEL_50;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v101 = (char *)a1 + v100;
              uint64_t v102 = (char *)a2 + v100;
              uint64_t v103 = sub_253B07160();
              uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
              swift_bridgeObjectRetain();
              v104(v101, v102, v103);
LABEL_50:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        }
        uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v106 = (char *)a1 + v105;
        uint64_t v107 = (char *)a2 + v105;
        uint64_t v108 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
        goto LABEL_109;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = (void *)((char *)a1 + v9);
        uint64_t v11 = (void *)((char *)a2 + v9);
        uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12)) {
          goto LABEL_11;
        }
        uint64_t v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v79)) {
          goto LABEL_34;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *uint64_t v10 = *v11;
            v10[1] = v11[1];
            swift_bridgeObjectRetain();
            goto LABEL_57;
          case 4u:
            *uint64_t v10 = *v11;
            uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v212 = (char *)v11 + v109;
            uint64_t v227 = (char *)v10 + v109;
            uint64_t v110 = sub_253B07160();
            uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            v197(v227, v212, v110);
            goto LABEL_57;
          case 5u:
            *uint64_t v10 = *v11;
            uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v213 = (char *)v11 + v111;
            uint64_t v228 = (char *)v10 + v111;
            uint64_t v112 = sub_253B07160();
            uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
            swift_bridgeObjectRetain();
            v198(v228, v213, v112);
            goto LABEL_57;
          case 9u:
            *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
            v10[1] = v11[1];
            v10[2] = v11[2];
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v214 = (char *)v11 + v113;
            uint64_t v229 = (char *)v10 + v113;
            uint64_t v114 = sub_253B07160();
            uint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
            swift_bridgeObjectRetain();
            v199(v229, v214, v114);
LABEL_57:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(*(void *)(v79 - 8) + 64));
            break;
        }
        goto LABEL_77;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v14 = v13[5];
        uint64_t v15 = (void *)((char *)a1 + v14);
        uint64_t v16 = (void *)((char *)a2 + v14);
        uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          uint64_t v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v80))
          {
            uint64_t v81 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v15, v16, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *uint64_t v15 = *v16;
                v15[1] = v16[1];
                swift_bridgeObjectRetain();
                goto LABEL_63;
              case 4u:
                *uint64_t v15 = *v16;
                uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v215 = (char *)v16 + v115;
                uint64_t v230 = (char *)v15 + v115;
                uint64_t v116 = sub_253B07160();
                uint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
                swift_bridgeObjectRetain();
                v200(v230, v215, v116);
                goto LABEL_63;
              case 5u:
                *uint64_t v15 = *v16;
                uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v216 = (char *)v16 + v117;
                uint64_t v231 = (char *)v15 + v117;
                uint64_t v118 = sub_253B07160();
                uint64_t v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
                swift_bridgeObjectRetain();
                v201(v231, v216, v118);
                goto LABEL_63;
              case 9u:
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                v15[1] = v16[1];
                v15[2] = v16[2];
                uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v217 = (char *)v16 + v119;
                uint64_t v232 = (char *)v15 + v119;
                uint64_t v120 = sub_253B07160();
                uint64_t v202 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
                swift_bridgeObjectRetain();
                v202(v232, v217, v120);
LABEL_63:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v15, v16, *(void *)(*(void *)(v80 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v80);
          }
          uint64_t v121 = *(int *)(v17 + 20);
          uint64_t v122 = (char *)v15 + v121;
          uint64_t v123 = (char *)v16 + v121;
          uint64_t v124 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
        }
        uint64_t v125 = v13[6];
        uint64_t v126 = (void *)((char *)a1 + v125);
        uint64_t v127 = (void *)((char *)a2 + v125);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v125, 1, v17))
        {
          uint64_t v128 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          uint64_t v129 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v127, 1, v129))
          {
            uint64_t v130 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v126, v127, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *uint64_t v126 = *v127;
                v126[1] = v127[1];
                swift_bridgeObjectRetain();
                goto LABEL_97;
              case 4u:
                *uint64_t v126 = *v127;
                uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v221 = (char *)v127 + v168;
                uint64_t v239 = (char *)v126 + v168;
                uint64_t v169 = sub_253B07160();
                uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
                swift_bridgeObjectRetain();
                v206(v239, v221, v169);
                goto LABEL_97;
              case 5u:
                *uint64_t v126 = *v127;
                uint64_t v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v222 = (char *)v127 + v170;
                uint64_t v240 = (char *)v126 + v170;
                uint64_t v171 = sub_253B07160();
                uint64_t v207 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
                swift_bridgeObjectRetain();
                v207(v240, v222, v171);
                goto LABEL_97;
              case 9u:
                *(_DWORD *)uint64_t v126 = *(_DWORD *)v127;
                v126[1] = v127[1];
                v126[2] = v127[2];
                uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v223 = (char *)v127 + v172;
                uint64_t v241 = (char *)v126 + v172;
                uint64_t v173 = sub_253B07160();
                uint64_t v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
                swift_bridgeObjectRetain();
                v208(v241, v223, v173);
LABEL_97:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v126, 0, 1, v129);
          }
          uint64_t v174 = *(int *)(v17 + 20);
          int v175 = (char *)v126 + v174;
          uint64_t v176 = (char *)v127 + v174;
          uint64_t v177 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v126, 0, 1, v17);
        }
        uint64_t v178 = v13[7];
        uint64_t v179 = (char *)a1 + v178;
        uint64_t v180 = (char *)a2 + v178;
        uint64_t v181 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
        goto LABEL_109;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v19 = *(int *)(v8 + 20);
        uint64_t v10 = (void *)((char *)a1 + v19);
        uint64_t v11 = (void *)((char *)a2 + v19);
        uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
        {
LABEL_11:
          uint64_t v20 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v79))
          {
LABEL_34:
            uint64_t v82 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v10, v11, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *uint64_t v10 = *v11;
                v10[1] = v11[1];
                swift_bridgeObjectRetain();
                goto LABEL_76;
              case 4u:
                *uint64_t v10 = *v11;
                uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v218 = (char *)v11 + v131;
                uint64_t v233 = (char *)v10 + v131;
                uint64_t v132 = sub_253B07160();
                uint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16);
                swift_bridgeObjectRetain();
                v203(v233, v218, v132);
                goto LABEL_76;
              case 5u:
                *uint64_t v10 = *v11;
                uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v219 = (char *)v11 + v133;
                int v234 = (char *)v10 + v133;
                uint64_t v134 = sub_253B07160();
                uint64_t v204 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16);
                swift_bridgeObjectRetain();
                v204(v234, v219, v134);
                goto LABEL_76;
              case 9u:
                *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
                v10[1] = v11[1];
                v10[2] = v11[2];
                uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v220 = (char *)v11 + v135;
                uint64_t v235 = (char *)v10 + v135;
                uint64_t v136 = sub_253B07160();
                uint64_t v205 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
                swift_bridgeObjectRetain();
                v205(v235, v220, v136);
LABEL_76:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v10, v11, *(void *)(*(void *)(v79 - 8) + 64));
                break;
            }
LABEL_77:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v79);
          }
          uint64_t v137 = *(int *)(v12 + 20);
          uint64_t v138 = (char *)v10 + v137;
          uint64_t v139 = (char *)v11 + v137;
          uint64_t v140 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
        }
LABEL_79:
        uint64_t v141 = *(int *)(v8 + 24);
        uint64_t v142 = (char *)a1 + v141;
        uint64_t v143 = (char *)a2 + v141;
        uint64_t v144 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
LABEL_109:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE22E0);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v83 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v83))
          {
            uint64_t v84 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(a1, a2, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_84;
              case 4u:
                *a1 = *a2;
                uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v236 = (char *)a1 + v145;
                uint64_t v146 = (char *)a2 + v145;
                uint64_t v147 = sub_253B07160();
                uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
                swift_bridgeObjectRetain();
                v148(v236, v146, v147);
                goto LABEL_84;
              case 5u:
                *a1 = *a2;
                uint64_t v149 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v237 = (char *)a1 + v149;
                uint64_t v150 = (char *)a2 + v149;
                uint64_t v151 = sub_253B07160();
                uint64_t v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
                swift_bridgeObjectRetain();
                v152(v237, v150, v151);
                goto LABEL_84;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v238 = (char *)a1 + v153;
                uint64_t v154 = (char *)a2 + v153;
                uint64_t v155 = sub_253B07160();
                uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
                swift_bridgeObjectRetain();
                v156(v238, v154, v155);
LABEL_84:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v83 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v83);
          }
          uint64_t v157 = *(int *)(v21 + 20);
          uint64_t v158 = (char *)a1 + v157;
          uint64_t v159 = (char *)a2 + v157;
          uint64_t v160 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v21);
        }
        uint64_t v161 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v162 = *(int *)(v161 + 20);
        uint64_t v163 = (void *)((char *)a1 + v162);
        uint64_t v164 = (void *)((char *)a2 + v162);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v162, 1, v21))
        {
          uint64_t v165 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v163, v164, *(void *)(*(void *)(v165 - 8) + 64));
        }
        else
        {
          uint64_t v166 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v166))
          {
            uint64_t v167 = sub_253462A5C(&qword_269CDCBA8);
            memcpy(v163, v164, *(void *)(*(void *)(v167 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *uint64_t v163 = *v164;
                v163[1] = v164[1];
                swift_bridgeObjectRetain();
                goto LABEL_105;
              case 4u:
                *uint64_t v163 = *v164;
                uint64_t v182 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                uint64_t v224 = (char *)v164 + v182;
                uint64_t v242 = (char *)v163 + v182;
                uint64_t v183 = sub_253B07160();
                uint64_t v209 = *(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16);
                swift_bridgeObjectRetain();
                v209(v242, v224, v183);
                goto LABEL_105;
              case 5u:
                *uint64_t v163 = *v164;
                uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                uint64_t v225 = (char *)v164 + v184;
                uint64_t v243 = (char *)v163 + v184;
                uint64_t v185 = sub_253B07160();
                uint64_t v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
                swift_bridgeObjectRetain();
                v210(v243, v225, v185);
                goto LABEL_105;
              case 9u:
                *(_DWORD *)uint64_t v163 = *(_DWORD *)v164;
                v163[1] = v164[1];
                v163[2] = v164[2];
                uint64_t v186 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                uint64_t v226 = (char *)v164 + v186;
                uint64_t v244 = (char *)v163 + v186;
                uint64_t v187 = sub_253B07160();
                uint64_t v211 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16);
                swift_bridgeObjectRetain();
                v211(v244, v226, v187);
LABEL_105:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v166);
          }
          uint64_t v188 = *(int *)(v21 + 20);
          uint64_t v189 = (char *)v163 + v188;
          uint64_t v190 = (char *)v164 + v188;
          uint64_t v191 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v189, v190, v191);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v21);
        }
        uint64_t v192 = *(int *)(v161 + 24);
        uint64_t v193 = (char *)a1 + v192;
        uint64_t v194 = (char *)a2 + v192;
        uint64_t v195 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v194, v195);
        goto LABEL_109;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_109;
      case 6u:
        *a1 = *a2;
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253B07160();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        goto LABEL_109;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v33 = *(int *)(v8 + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CE2268);
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          uint64_t v85 = *(void *)v35;
          v34[8] = v35[8];
          *(void *)uint64_t v34 = v85;
          uint64_t v86 = *(int *)(v36 + 20);
          uint64_t v87 = &v34[v86];
          uint64_t v88 = &v35[v86];
          uint64_t v89 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
        }
        goto LABEL_79;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = sub_253B07160();
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        goto LABEL_109;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        uint64_t v46 = sub_253B07160();
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v47(v44, v45, v46);
        goto LABEL_109;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        uint64_t v51 = sub_253B07160();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        goto LABEL_109;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        uint64_t v56 = sub_253B07160();
        uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v54, v55, v56);
        goto LABEL_109;
      case 0xCu:
        *a1 = *a2;
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = sub_253B07160();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        goto LABEL_109;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = sub_253B07160();
        uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
        swift_bridgeObjectRetain();
        v67(v64, v65, v66);
        goto LABEL_109;
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v71 = sub_253B07160();
        uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v69, v70, v71);
        goto LABEL_109;
      case 0xFu:
      case 0x11u:
        uint64_t v73 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
        goto LABEL_109;
      case 0x10u:
        *a1 = *a2;
        uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        int v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        uint64_t v77 = sub_253B07160();
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        v78(v75, v76, v77);
        goto LABEL_109;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoAstflatExprEnum(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_60:
        uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        uint64_t v109 = (char *)a1 + v108;
        uint64_t v110 = (char *)a2 + v108;
        uint64_t v111 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
        goto LABEL_113;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v101 = (char *)a1 + v100;
          uint64_t v102 = (char *)a2 + v100;
          uint64_t v103 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v105 = (char *)a1 + v104;
          uint64_t v106 = (char *)a2 + v104;
          uint64_t v107 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v71 = (char *)a1 + v70;
          uint64_t v72 = (char *)a2 + v70;
          uint64_t v73 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_59;
      }
      swift_storeEnumTagMultiPayload();
LABEL_59:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_60;
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (_DWORD *)((char *)a1 + v9);
      uint64_t v11 = (_DWORD *)((char *)a2 + v9);
      uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12)) {
        goto LABEL_10;
      }
      uint64_t v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v74)) {
        goto LABEL_35;
      }
      int v84 = swift_getEnumCaseMultiPayload();
      switch(v84)
      {
        case 9:
          goto LABEL_78;
        case 5:
          goto LABEL_79;
        case 4:
          goto LABEL_50;
      }
      goto LABEL_81;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = (_DWORD *)((char *)a1 + v14);
      uint64_t v16 = (_DWORD *)((char *)a2 + v14);
      uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_70;
      }
      uint64_t v75 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v75))
      {
        uint64_t v76 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v15, v16, *(void *)(*(void *)(v76 - 8) + 64));
        goto LABEL_69;
      }
      int v85 = swift_getEnumCaseMultiPayload();
      switch(v85)
      {
        case 9:
          *uint64_t v15 = *v16;
          *(_OWORD *)(v15 + 2) = *(_OWORD *)(v16 + 2);
          uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v113 = (char *)v15 + v112;
          uint64_t v114 = (char *)v16 + v112;
          uint64_t v115 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
          goto LABEL_66;
        case 5:
          *(void *)uint64_t v15 = *(void *)v16;
          uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v117 = (char *)v15 + v116;
          uint64_t v118 = (char *)v16 + v116;
          uint64_t v119 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          goto LABEL_66;
        case 4:
          *(void *)uint64_t v15 = *(void *)v16;
          uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v87 = (char *)v15 + v86;
          uint64_t v88 = (char *)v16 + v86;
          uint64_t v89 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
LABEL_66:
          swift_storeEnumTagMultiPayload();
          goto LABEL_68;
      }
      memcpy(v15, v16, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_68:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v75);
LABEL_69:
      uint64_t v120 = *(int *)(v17 + 20);
      uint64_t v121 = (char *)v15 + v120;
      uint64_t v122 = (char *)v16 + v120;
      uint64_t v123 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_70:
      uint64_t v124 = v13[6];
      uint64_t v125 = (_DWORD *)((char *)a1 + v124);
      uint64_t v126 = (_DWORD *)((char *)a2 + v124);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v124, 1, v17))
      {
        uint64_t v127 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
        goto LABEL_105;
      }
      uint64_t v128 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v126, 1, v128))
      {
        uint64_t v129 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
        goto LABEL_104;
      }
      int v130 = swift_getEnumCaseMultiPayload();
      switch(v130)
      {
        case 9:
          *uint64_t v125 = *v126;
          *(_OWORD *)(v125 + 2) = *(_OWORD *)(v126 + 2);
          uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v176 = (char *)v125 + v175;
          uint64_t v177 = (char *)v126 + v175;
          uint64_t v178 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
          goto LABEL_101;
        case 5:
          *(void *)uint64_t v125 = *(void *)v126;
          uint64_t v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v180 = (char *)v125 + v179;
          uint64_t v181 = (char *)v126 + v179;
          uint64_t v182 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          goto LABEL_101;
        case 4:
          *(void *)uint64_t v125 = *(void *)v126;
          uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v132 = (char *)v125 + v131;
          uint64_t v133 = (char *)v126 + v131;
          uint64_t v134 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
LABEL_101:
          swift_storeEnumTagMultiPayload();
          goto LABEL_103;
      }
      memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
LABEL_103:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v125, 0, 1, v128);
LABEL_104:
      uint64_t v183 = *(int *)(v17 + 20);
      uint64_t v184 = (char *)v125 + v183;
      uint64_t v185 = (char *)v126 + v183;
      uint64_t v186 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v125, 0, 1, v17);
LABEL_105:
      uint64_t v187 = v13[7];
      uint64_t v188 = (char *)a1 + v187;
      uint64_t v189 = (char *)a2 + v187;
      uint64_t v190 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
      goto LABEL_113;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      uint64_t v19 = *(int *)(v8 + 20);
      uint64_t v10 = (_DWORD *)((char *)a1 + v19);
      uint64_t v11 = (_DWORD *)((char *)a2 + v19);
      uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
LABEL_10:
        uint64_t v20 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
        goto LABEL_84;
      }
      uint64_t v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v74))
      {
LABEL_35:
        uint64_t v77 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v10, v11, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_83;
      }
      int v90 = swift_getEnumCaseMultiPayload();
      switch(v90)
      {
        case 9:
LABEL_78:
          *uint64_t v10 = *v11;
          *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
          uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v136 = (char *)v10 + v135;
          uint64_t v137 = (char *)v11 + v135;
          uint64_t v138 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
          goto LABEL_80;
        case 5:
LABEL_79:
          *(void *)uint64_t v10 = *(void *)v11;
          uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v140 = (char *)v10 + v139;
          uint64_t v141 = (char *)v11 + v139;
          uint64_t v142 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
          goto LABEL_80;
        case 4:
LABEL_50:
          *(void *)uint64_t v10 = *(void *)v11;
          uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v92 = (char *)v10 + v91;
          uint64_t v93 = (char *)v11 + v91;
          uint64_t v94 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
LABEL_80:
          swift_storeEnumTagMultiPayload();
          goto LABEL_82;
      }
LABEL_81:
      memcpy(v10, v11, *(void *)(*(void *)(v74 - 8) + 64));
LABEL_82:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v74);
LABEL_83:
      uint64_t v143 = *(int *)(v12 + 20);
      uint64_t v144 = (char *)v10 + v143;
      uint64_t v145 = (char *)v11 + v143;
      uint64_t v146 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_84:
      uint64_t v147 = *(int *)(v8 + 24);
      uint64_t v148 = (char *)a1 + v147;
      uint64_t v149 = (char *)a2 + v147;
      uint64_t v150 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
      goto LABEL_113;
    case 4u:
      uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v21))
      {
        uint64_t v22 = sub_253462A5C(&qword_269CE22E0);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        goto LABEL_91;
      }
      uint64_t v78 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v78))
      {
        uint64_t v79 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v79 - 8) + 64));
        goto LABEL_90;
      }
      int v95 = swift_getEnumCaseMultiPayload();
      switch(v95)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v152 = (char *)a1 + v151;
          uint64_t v153 = (char *)a2 + v151;
          uint64_t v154 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v152, v153, v154);
          goto LABEL_87;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v156 = (char *)a1 + v155;
          uint64_t v157 = (char *)a2 + v155;
          uint64_t v158 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
          goto LABEL_87;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v97 = (char *)a1 + v96;
          uint64_t v98 = (char *)a2 + v96;
          uint64_t v99 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
LABEL_87:
          swift_storeEnumTagMultiPayload();
          goto LABEL_89;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_89:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v78);
LABEL_90:
      uint64_t v159 = *(int *)(v21 + 20);
      uint64_t v160 = (char *)a1 + v159;
      uint64_t v161 = (char *)a2 + v159;
      uint64_t v162 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v21);
LABEL_91:
      uint64_t v163 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      uint64_t v164 = *(int *)(v163 + 20);
      uint64_t v165 = (_DWORD *)((char *)a1 + v164);
      uint64_t v166 = (_DWORD *)((char *)a2 + v164);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v164, 1, v21))
      {
        uint64_t v167 = sub_253462A5C(&qword_269CE22E0);
        memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
        goto LABEL_112;
      }
      uint64_t v168 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v166, 1, v168))
      {
        uint64_t v169 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v165, v166, *(void *)(*(void *)(v169 - 8) + 64));
        goto LABEL_111;
      }
      int v170 = swift_getEnumCaseMultiPayload();
      switch(v170)
      {
        case 9:
          *uint64_t v165 = *v166;
          *(_OWORD *)(v165 + 2) = *(_OWORD *)(v166 + 2);
          uint64_t v191 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v192 = (char *)v165 + v191;
          uint64_t v193 = (char *)v166 + v191;
          uint64_t v194 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
          goto LABEL_108;
        case 5:
          *(void *)uint64_t v165 = *(void *)v166;
          uint64_t v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v196 = (char *)v165 + v195;
          uint64_t v197 = (char *)v166 + v195;
          uint64_t v198 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
          goto LABEL_108;
        case 4:
          *(void *)uint64_t v165 = *(void *)v166;
          uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v172 = (char *)v165 + v171;
          uint64_t v173 = (char *)v166 + v171;
          uint64_t v174 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
LABEL_108:
          swift_storeEnumTagMultiPayload();
          goto LABEL_110;
      }
      memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
LABEL_110:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v165, 0, 1, v168);
LABEL_111:
      uint64_t v199 = *(int *)(v21 + 20);
      uint64_t v200 = (char *)v165 + v199;
      uint64_t v201 = (char *)v166 + v199;
      uint64_t v202 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v200, v201, v202);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v165, 0, 1, v21);
LABEL_112:
      uint64_t v203 = *(int *)(v163 + 24);
      uint64_t v204 = (char *)a1 + v203;
      uint64_t v205 = (char *)a2 + v203;
      uint64_t v206 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 32))(v204, v205, v206);
LABEL_113:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_113;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_113;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      uint64_t v31 = *(int *)(v8 + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
      {
        uint64_t v35 = sub_253462A5C(&qword_269CE2268);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v32 = *(void *)v33;
        v32[8] = v33[8];
        uint64_t v80 = *(int *)(v34 + 20);
        uint64_t v81 = &v32[v80];
        uint64_t v82 = &v33[v80];
        uint64_t v83 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
      }
      goto LABEL_84;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      goto LABEL_113;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      uint64_t v43 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      goto LABEL_113;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      uint64_t v47 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      goto LABEL_113;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      uint64_t v49 = (char *)a1 + v48;
      uint64_t v50 = (char *)a2 + v48;
      uint64_t v51 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      goto LABEL_113;
    case 0xCu:
      *(void *)a1 = *(void *)a2;
      uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      uint64_t v55 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      goto LABEL_113;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_113;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      uint64_t v63 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      goto LABEL_113;
    case 0xFu:
    case 0x11u:
      uint64_t v64 = sub_253B07160();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v64 - 8) + 32))(a1, a2, v64);
      goto LABEL_113;
    case 0x10u:
      *(void *)a1 = *(void *)a2;
      uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      uint64_t v68 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
      goto LABEL_113;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

_DWORD *assignWithTake for TranscriptProtoAstflatExprEnum(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
        {
          uint64_t v7 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_61:
          uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          uint64_t v109 = (char *)a1 + v108;
          uint64_t v110 = (char *)a2 + v108;
          uint64_t v111 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
          goto LABEL_114;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v101 = (char *)a1 + v100;
            uint64_t v102 = (char *)a2 + v100;
            uint64_t v103 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
            break;
          case 5:
            *(void *)a1 = *(void *)a2;
            uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v105 = (char *)a1 + v104;
            uint64_t v106 = (char *)a2 + v104;
            uint64_t v107 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
            break;
          case 4:
            *(void *)a1 = *(void *)a2;
            uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v71 = (char *)a1 + v70;
            uint64_t v72 = (char *)a2 + v70;
            uint64_t v73 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            goto LABEL_60;
        }
        swift_storeEnumTagMultiPayload();
LABEL_60:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_61;
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = (_DWORD *)((char *)a1 + v9);
        uint64_t v11 = (_DWORD *)((char *)a2 + v9);
        uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12)) {
          goto LABEL_11;
        }
        uint64_t v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v74)) {
          goto LABEL_36;
        }
        int v84 = swift_getEnumCaseMultiPayload();
        switch(v84)
        {
          case 9:
            goto LABEL_79;
          case 5:
            goto LABEL_80;
          case 4:
            goto LABEL_51;
        }
        goto LABEL_82;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        uint64_t v14 = v13[5];
        uint64_t v15 = (_DWORD *)((char *)a1 + v14);
        uint64_t v16 = (_DWORD *)((char *)a2 + v14);
        uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
          goto LABEL_71;
        }
        uint64_t v75 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v75))
        {
          uint64_t v76 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v15, v16, *(void *)(*(void *)(v76 - 8) + 64));
          goto LABEL_70;
        }
        int v85 = swift_getEnumCaseMultiPayload();
        switch(v85)
        {
          case 9:
            *uint64_t v15 = *v16;
            *(_OWORD *)(v15 + 2) = *(_OWORD *)(v16 + 2);
            uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v113 = (char *)v15 + v112;
            uint64_t v114 = (char *)v16 + v112;
            uint64_t v115 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
            goto LABEL_67;
          case 5:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v117 = (char *)v15 + v116;
            uint64_t v118 = (char *)v16 + v116;
            uint64_t v119 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
            goto LABEL_67;
          case 4:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v87 = (char *)v15 + v86;
            uint64_t v88 = (char *)v16 + v86;
            uint64_t v89 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
LABEL_67:
            swift_storeEnumTagMultiPayload();
            goto LABEL_69;
        }
        memcpy(v15, v16, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_69:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v75);
LABEL_70:
        uint64_t v120 = *(int *)(v17 + 20);
        uint64_t v121 = (char *)v15 + v120;
        uint64_t v122 = (char *)v16 + v120;
        uint64_t v123 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_71:
        uint64_t v124 = v13[6];
        uint64_t v125 = (_DWORD *)((char *)a1 + v124);
        uint64_t v126 = (_DWORD *)((char *)a2 + v124);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v124, 1, v17))
        {
          uint64_t v127 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
          goto LABEL_106;
        }
        uint64_t v128 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v126, 1, v128))
        {
          uint64_t v129 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
          goto LABEL_105;
        }
        int v130 = swift_getEnumCaseMultiPayload();
        switch(v130)
        {
          case 9:
            *uint64_t v125 = *v126;
            *(_OWORD *)(v125 + 2) = *(_OWORD *)(v126 + 2);
            uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v176 = (char *)v125 + v175;
            uint64_t v177 = (char *)v126 + v175;
            uint64_t v178 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
            goto LABEL_102;
          case 5:
            *(void *)uint64_t v125 = *(void *)v126;
            uint64_t v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v180 = (char *)v125 + v179;
            uint64_t v181 = (char *)v126 + v179;
            uint64_t v182 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
            goto LABEL_102;
          case 4:
            *(void *)uint64_t v125 = *(void *)v126;
            uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v132 = (char *)v125 + v131;
            uint64_t v133 = (char *)v126 + v131;
            uint64_t v134 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
LABEL_102:
            swift_storeEnumTagMultiPayload();
            goto LABEL_104;
        }
        memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
LABEL_104:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v125, 0, 1, v128);
LABEL_105:
        uint64_t v183 = *(int *)(v17 + 20);
        uint64_t v184 = (char *)v125 + v183;
        uint64_t v185 = (char *)v126 + v183;
        uint64_t v186 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v125, 0, 1, v17);
LABEL_106:
        uint64_t v187 = v13[7];
        uint64_t v188 = (char *)a1 + v187;
        uint64_t v189 = (char *)a2 + v187;
        uint64_t v190 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
        goto LABEL_114;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        uint64_t v19 = *(int *)(v8 + 20);
        uint64_t v10 = (_DWORD *)((char *)a1 + v19);
        uint64_t v11 = (_DWORD *)((char *)a2 + v19);
        uint64_t v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
        {
LABEL_11:
          uint64_t v20 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_85;
        }
        uint64_t v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v74))
        {
LABEL_36:
          uint64_t v77 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v10, v11, *(void *)(*(void *)(v77 - 8) + 64));
          goto LABEL_84;
        }
        int v90 = swift_getEnumCaseMultiPayload();
        switch(v90)
        {
          case 9:
LABEL_79:
            *uint64_t v10 = *v11;
            *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
            uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v136 = (char *)v10 + v135;
            uint64_t v137 = (char *)v11 + v135;
            uint64_t v138 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
            goto LABEL_81;
          case 5:
LABEL_80:
            *(void *)uint64_t v10 = *(void *)v11;
            uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v140 = (char *)v10 + v139;
            uint64_t v141 = (char *)v11 + v139;
            uint64_t v142 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
            goto LABEL_81;
          case 4:
LABEL_51:
            *(void *)uint64_t v10 = *(void *)v11;
            uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v92 = (char *)v10 + v91;
            uint64_t v93 = (char *)v11 + v91;
            uint64_t v94 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
LABEL_81:
            swift_storeEnumTagMultiPayload();
            goto LABEL_83;
        }
LABEL_82:
        memcpy(v10, v11, *(void *)(*(void *)(v74 - 8) + 64));
LABEL_83:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v74);
LABEL_84:
        uint64_t v143 = *(int *)(v12 + 20);
        uint64_t v144 = (char *)v10 + v143;
        uint64_t v145 = (char *)v11 + v143;
        uint64_t v146 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_85:
        uint64_t v147 = *(int *)(v8 + 24);
        uint64_t v148 = (char *)a1 + v147;
        uint64_t v149 = (char *)a2 + v147;
        uint64_t v150 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
        goto LABEL_114;
      case 4u:
        uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE22E0);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
          goto LABEL_92;
        }
        uint64_t v78 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v78))
        {
          uint64_t v79 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(a1, a2, *(void *)(*(void *)(v79 - 8) + 64));
          goto LABEL_91;
        }
        int v95 = swift_getEnumCaseMultiPayload();
        switch(v95)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v152 = (char *)a1 + v151;
            uint64_t v153 = (char *)a2 + v151;
            uint64_t v154 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v152, v153, v154);
            goto LABEL_88;
          case 5:
            *(void *)a1 = *(void *)a2;
            uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v156 = (char *)a1 + v155;
            uint64_t v157 = (char *)a2 + v155;
            uint64_t v158 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
            goto LABEL_88;
          case 4:
            *(void *)a1 = *(void *)a2;
            uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v97 = (char *)a1 + v96;
            uint64_t v98 = (char *)a2 + v96;
            uint64_t v99 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
LABEL_88:
            swift_storeEnumTagMultiPayload();
            goto LABEL_90;
        }
        memcpy(a1, a2, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_90:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v78);
LABEL_91:
        uint64_t v159 = *(int *)(v21 + 20);
        uint64_t v160 = (char *)a1 + v159;
        uint64_t v161 = (char *)a2 + v159;
        uint64_t v162 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v21);
LABEL_92:
        uint64_t v163 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        uint64_t v164 = *(int *)(v163 + 20);
        uint64_t v165 = (_DWORD *)((char *)a1 + v164);
        uint64_t v166 = (_DWORD *)((char *)a2 + v164);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v164, 1, v21))
        {
          uint64_t v167 = sub_253462A5C(&qword_269CE22E0);
          memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
          goto LABEL_113;
        }
        uint64_t v168 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v166, 1, v168))
        {
          uint64_t v169 = sub_253462A5C(&qword_269CDCBA8);
          memcpy(v165, v166, *(void *)(*(void *)(v169 - 8) + 64));
          goto LABEL_112;
        }
        int v170 = swift_getEnumCaseMultiPayload();
        switch(v170)
        {
          case 9:
            *uint64_t v165 = *v166;
            *(_OWORD *)(v165 + 2) = *(_OWORD *)(v166 + 2);
            uint64_t v191 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v192 = (char *)v165 + v191;
            uint64_t v193 = (char *)v166 + v191;
            uint64_t v194 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
            goto LABEL_109;
          case 5:
            *(void *)uint64_t v165 = *(void *)v166;
            uint64_t v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v196 = (char *)v165 + v195;
            uint64_t v197 = (char *)v166 + v195;
            uint64_t v198 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
            goto LABEL_109;
          case 4:
            *(void *)uint64_t v165 = *(void *)v166;
            uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v172 = (char *)v165 + v171;
            uint64_t v173 = (char *)v166 + v171;
            uint64_t v174 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
LABEL_109:
            swift_storeEnumTagMultiPayload();
            goto LABEL_111;
        }
        memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
LABEL_111:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v165, 0, 1, v168);
LABEL_112:
        uint64_t v199 = *(int *)(v21 + 20);
        uint64_t v200 = (char *)v165 + v199;
        uint64_t v201 = (char *)v166 + v199;
        uint64_t v202 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v200, v201, v202);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v165, 0, 1, v21);
LABEL_113:
        uint64_t v203 = *(int *)(v163 + 24);
        uint64_t v204 = (char *)a1 + v203;
        uint64_t v205 = (char *)a2 + v203;
        uint64_t v206 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 32))(v204, v205, v206);
LABEL_114:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_114;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        goto LABEL_114;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        uint64_t v31 = *(int *)(v8 + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
        {
          uint64_t v35 = sub_253462A5C(&qword_269CE2268);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v32 = *(void *)v33;
          v32[8] = v33[8];
          uint64_t v80 = *(int *)(v34 + 20);
          uint64_t v81 = &v32[v80];
          uint64_t v82 = &v33[v80];
          uint64_t v83 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
        }
        goto LABEL_85;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        goto LABEL_114;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        uint64_t v43 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
        goto LABEL_114;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
        goto LABEL_114;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        uint64_t v51 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
        goto LABEL_114;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        goto LABEL_114;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_114;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_114;
      case 0xFu:
      case 0x11u:
        uint64_t v64 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v64 - 8) + 32))(a1, a2, v64);
        goto LABEL_114;
      case 0x10u:
        *(void *)a1 = *(void *)a2;
        uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        uint64_t v68 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
        goto LABEL_114;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_2538E0560()
{
  uint64_t result = type metadata accessor for TranscriptProtoASTFlatValue(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(319);
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(319);
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(319);
                        if (v12 <= 0x3F)
                        {
                          uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(319);
                          if (v13 <= 0x3F)
                          {
                            uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(319);
                            if (v14 <= 0x3F)
                            {
                              uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(319);
                              if (v15 <= 0x3F)
                              {
                                uint64_t result = sub_253B07160();
                                if (v16 <= 0x3F)
                                {
                                  uint64_t result = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(319);
                                  if (v17 <= 0x3F)
                                  {
                                    swift_initEnumMetadataMultiPayload();
                                    return 0;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *a1 = *a2;
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          unint64_t v12 = (char *)a1 + v11;
          unint64_t v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B07160();
          unint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          goto LABEL_11;
        case 5u:
          *a1 = *a2;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          unint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B07160();
          uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v21 = a2[2];
          a1[1] = a2[1];
          a1[2] = v21;
          uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B07160();
          uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v23, v24, v25);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v27 = *(int *)(a3 + 20);
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      case 4u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
        goto LABEL_6;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_6:
        uint64_t v6 = *(int *)(v5 + 20);
        goto LABEL_8;
      case 9u:
        swift_bridgeObjectRelease();
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
        uint64_t v7 = a1 + v6;
        uint64_t v8 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for TranscriptProtoASTFlatValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        unint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_9;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v19 = a2[2];
        a1[1] = a2[1];
        a1[2] = v19;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

void *assignWithCopy for TranscriptProtoASTFlatValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_16;
        case 4u:
          *a1 = *a2;
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v11 = (char *)a1 + v10;
          uint64_t v12 = (char *)a2 + v10;
          uint64_t v13 = sub_253B07160();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v11, v12, v13);
          goto LABEL_16;
        case 5u:
          *a1 = *a2;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = sub_253B07160();
          uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          goto LABEL_16;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_7:
    size_t v9 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v9);
    goto LABEL_23;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = sub_253B07160();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_253B07160();
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        break;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_253B07160();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        break;
      default:
        size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

char *initializeWithTake for TranscriptProtoASTFlatValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        break;
      case 5:
        *(void *)a1 = *(void *)a2;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        break;
      case 4:
        *(void *)a1 = *(void *)a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CDCBA8);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_12:
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v21 = a1 + v20;
          uint64_t v22 = a2 + v20;
          uint64_t v23 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v25 = a1 + v24;
          uint64_t v26 = a2 + v24;
          uint64_t v27 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v11 = a1 + v10;
          uint64_t v12 = a2 + v10;
          uint64_t v13 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_2536FA73C();
      int v15 = swift_getEnumCaseMultiPayload();
      switch(v15)
      {
        case 9:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v29 = a1 + v28;
          uint64_t v30 = a2 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v33 = a1 + v32;
          uint64_t v34 = a2 + v32;
          uint64_t v35 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v17 = a1 + v16;
          uint64_t v18 = a2 + v16;
          uint64_t v19 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          break;
        default:
          size_t v14 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_2536FA73C();
  }
  size_t v14 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_10:
  memcpy((void *)a1, (const void *)a2, v14);
LABEL_24:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538E1F0C);
}

uint64_t sub_2538E1F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CDCBA8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538E1F2C);
}

uint64_t sub_2538E1F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CDCBA8);
}

void sub_2538E1F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstflatValueEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        int v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_9;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v19 = a2[2];
        a1[1] = a2[1];
        a1[2] = v19;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstflatValueEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 3:
    case 6:
    case 7:
    case 8:
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
      uint64_t v4 = *(int *)(v3 + 20);
      goto LABEL_9;
    case 9:
      swift_bridgeObjectRelease();
      uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
      uint64_t v5 = a1 + v4;
      uint64_t v6 = sub_253B07160();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t result = v7(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoAstflatValueEnum(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253B07160();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      goto LABEL_7;
    case 5u:
      *a1 = *a2;
      uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_253B07160();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      goto LABEL_7;
    case 9u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v17 = a2[2];
      a1[1] = a2[1];
      a1[2] = v17;
      uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_253B07160();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for TranscriptProtoAstflatValueEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_253B07160();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_8;
      case 5u:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        goto LABEL_8;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_253B07160();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TranscriptProtoAstflatValueEnum(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      break;
    case 5:
      *(void *)a1 = *(void *)a2;
      uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      break;
    case 4:
      *(void *)a1 = *(void *)a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for TranscriptProtoAstflatValueEnum(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      case 5:
        *(void *)a1 = *(void *)a2;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        uint64_t v18 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        break;
      case 4:
        *(void *)a1 = *(void *)a2;
        uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2538E2C54()
{
  uint64_t result = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoStatementID(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValueArrayVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538E2D90);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValueArrayVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538E2DA8);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValueDictVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538E2DC0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValueDictVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538E2DD8);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprIndexVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE22E0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v12 = a2[1];
            *a1 = *a2;
            a1[1] = v12;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *a1 = *a2;
            uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v59 = (char *)a1 + v13;
            uint64_t v14 = (char *)a2 + v13;
            uint64_t v15 = sub_253B07160();
            uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
            swift_bridgeObjectRetain();
            v16(v59, v14, v15);
            goto LABEL_13;
          case 5u:
            *a1 = *a2;
            uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v60 = (char *)a1 + v17;
            uint64_t v18 = (char *)a2 + v17;
            uint64_t v19 = sub_253B07160();
            uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v20(v60, v18, v19);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            uint64_t v21 = a2[2];
            a1[1] = a2[1];
            a1[2] = v21;
            uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v61 = (char *)a1 + v22;
            uint64_t v23 = (char *)a2 + v22;
            uint64_t v24 = sub_253B07160();
            uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
            swift_bridgeObjectRetain();
            v25(v61, v23, v24);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v26 = *(int *)(v7 + 20);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = (uint64_t *)((char *)a1 + v30);
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v30, 1, v7))
    {
      uint64_t v33 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v34))
      {
        uint64_t v35 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v36 = v32[1];
            *uint64_t v31 = *v32;
            v31[1] = v36;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *uint64_t v31 = *v32;
            uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v56 = (char *)v32 + v37;
            uint64_t v62 = (char *)v31 + v37;
            uint64_t v38 = sub_253B07160();
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v62, v56, v38);
            goto LABEL_26;
          case 5u:
            *uint64_t v31 = *v32;
            uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v57 = (char *)v32 + v39;
            uint64_t v63 = (char *)v31 + v39;
            uint64_t v40 = sub_253B07160();
            uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v63, v57, v40);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
            uint64_t v41 = v32[2];
            v31[1] = v32[1];
            v31[2] = v41;
            uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v58 = (char *)v32 + v42;
            uint64_t v64 = (char *)v31 + v42;
            uint64_t v43 = sub_253B07160();
            uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v64, v58, v43);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v34);
      }
      uint64_t v44 = *(int *)(v7 + 20);
      uint64_t v45 = (char *)v31 + v44;
      uint64_t v46 = (char *)v32 + v44;
      uint64_t v47 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v7);
    }
    uint64_t v48 = *(int *)(a3 + 24);
    uint64_t v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          uint64_t v7 = *(int *)(v6 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          uint64_t v8 = a1 + v7;
          uint64_t v9 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
          break;
        default:
          break;
      }
    }
    uint64_t v10 = a1 + *(int *)(v4 + 20);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v4))
  {
    uint64_t v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_17:
          uint64_t v15 = *(int *)(v14 + 20);
          goto LABEL_19;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_19:
          uint64_t v16 = v12 + v15;
          uint64_t v17 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          break;
        default:
          break;
      }
    }
    uint64_t v18 = v12 + *(int *)(v4 + 20);
    uint64_t v19 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  uint64_t v20 = a1 + *(int *)(a2 + 24);
  uint64_t v21 = sub_253B07160();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  return v22(v20, v21);
}

void *initializeWithCopy for TranscriptProtoASTFlatExprIndexVariant(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE22E0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *a1 = *a2;
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v57 = (char *)a1 + v11;
          uint64_t v12 = (char *)a2 + v11;
          uint64_t v13 = sub_253B07160();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v57, v12, v13);
          goto LABEL_11;
        case 5u:
          *a1 = *a2;
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v58 = (char *)a1 + v15;
          uint64_t v16 = (char *)a2 + v15;
          uint64_t v17 = sub_253B07160();
          uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v58, v16, v17);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v19 = a2[2];
          a1[1] = a2[1];
          a1[2] = v19;
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v59 = (char *)a1 + v20;
          uint64_t v21 = (char *)a2 + v20;
          uint64_t v22 = sub_253B07160();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v59, v21, v22);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v24 = *(int *)(v6 + 20);
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v28, 1, v6))
  {
    uint64_t v31 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v32))
    {
      uint64_t v33 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v34 = v30[1];
          *uint64_t v29 = *v30;
          v29[1] = v34;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *uint64_t v29 = *v30;
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v54 = (char *)v30 + v35;
          uint64_t v60 = (char *)v29 + v35;
          uint64_t v36 = sub_253B07160();
          uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v60, v54, v36);
          goto LABEL_24;
        case 5u:
          *uint64_t v29 = *v30;
          uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v55 = (char *)v30 + v37;
          uint64_t v61 = (char *)v29 + v37;
          uint64_t v38 = sub_253B07160();
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v61, v55, v38);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
          uint64_t v39 = v30[2];
          v29[1] = v30[1];
          v29[2] = v39;
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v56 = (char *)v30 + v40;
          uint64_t v62 = (char *)v29 + v40;
          uint64_t v41 = sub_253B07160();
          uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v62, v56, v41);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v32);
    }
    uint64_t v42 = *(int *)(v6 + 20);
    uint64_t v43 = (char *)v29 + v42;
    uint64_t v44 = (char *)v30 + v42;
    uint64_t v45 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v6);
  }
  uint64_t v46 = *(int *)(a3 + 24);
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  return a1;
}

void *assignWithCopy for TranscriptProtoASTFlatExprIndexVariant(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *a1 = *a2;
            uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v124 = (char *)a1 + v32;
            uint64_t v33 = (char *)a2 + v32;
            uint64_t v34 = sub_253B07160();
            uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            v35(v124, v33, v34);
            goto LABEL_32;
          case 5u:
            *a1 = *a2;
            uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v125 = (char *)a1 + v36;
            uint64_t v37 = (char *)a2 + v36;
            uint64_t v38 = sub_253B07160();
            uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v39(v125, v37, v38);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v126 = (char *)a1 + v40;
            uint64_t v41 = (char *)a2 + v40;
            uint64_t v42 = sub_253B07160();
            uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
            swift_bridgeObjectRetain();
            v43(v126, v41, v42);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_39:
        uint64_t v56 = *(int *)(v6 + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *a1 = *a2;
              uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v127 = (char *)a1 + v44;
              uint64_t v45 = (char *)a2 + v44;
              uint64_t v46 = sub_253B07160();
              uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
              swift_bridgeObjectRetain();
              v47(v127, v45, v46);
              break;
            case 5u:
              *a1 = *a2;
              uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v128 = (char *)a1 + v48;
              uint64_t v49 = (char *)a2 + v48;
              uint64_t v50 = sub_253B07160();
              uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
              swift_bridgeObjectRetain();
              v51(v128, v49, v50);
              break;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v129 = (char *)a1 + v52;
              uint64_t v53 = (char *)a2 + v52;
              uint64_t v54 = sub_253B07160();
              uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
              swift_bridgeObjectRetain();
              v55(v129, v53, v54);
              break;
            default:
              size_t v15 = *(void *)(*(void *)(v12 - 8) + 64);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2536FA73C();
    }
    size_t v15 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_17:
    memcpy(a1, a2, v15);
    goto LABEL_39;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE22E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v121 = (char *)a1 + v16;
        uint64_t v17 = (char *)a2 + v16;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v121, v17, v18);
        goto LABEL_25;
      case 5u:
        *a1 = *a2;
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v122 = (char *)a1 + v20;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v122, v21, v22);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v123 = (char *)a1 + v24;
        uint64_t v25 = (char *)a2 + v24;
        uint64_t v26 = sub_253B07160();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v123, v25, v26);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v28 = *(int *)(v6 + 20);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_40:
  uint64_t v60 = *(int *)(a3 + 20);
  uint64_t v61 = (void *)((char *)a1 + v60);
  uint64_t v62 = (void *)((char *)a2 + v60);
  int v63 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v60, 1, v6);
  int v64 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v6);
  if (!v63)
  {
    if (v64)
    {
      sub_2536FA73C();
      goto LABEL_46;
    }
    uint64_t v68 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v69 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v68);
    int v70 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v68);
    if (v69)
    {
      if (!v70)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            void *v61 = *v62;
            v61[1] = v62[1];
            swift_bridgeObjectRetain();
            goto LABEL_71;
          case 4u:
            void *v61 = *v62;
            uint64_t v82 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v115 = (char *)v62 + v82;
            uint64_t v133 = (char *)v61 + v82;
            uint64_t v83 = sub_253B07160();
            uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
            swift_bridgeObjectRetain();
            v106(v133, v115, v83);
            goto LABEL_71;
          case 5u:
            void *v61 = *v62;
            uint64_t v84 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v116 = (char *)v62 + v84;
            uint64_t v134 = (char *)v61 + v84;
            uint64_t v85 = sub_253B07160();
            uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
            swift_bridgeObjectRetain();
            v107(v134, v116, v85);
            goto LABEL_71;
          case 9u:
            *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
            v61[1] = v62[1];
            v61[2] = v62[2];
            uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v117 = (char *)v62 + v86;
            uint64_t v135 = (char *)v61 + v86;
            uint64_t v87 = sub_253B07160();
            uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
            swift_bridgeObjectRetain();
            v108(v135, v117, v87);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v68);
LABEL_78:
        uint64_t v94 = *(int *)(v6 + 20);
        int v95 = (char *)v61 + v94;
        uint64_t v96 = (char *)v62 + v94;
        uint64_t v97 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 24))(v95, v96, v97);
        goto LABEL_79;
      }
    }
    else
    {
      if (!v70)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              void *v61 = *v62;
              v61[1] = v62[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              void *v61 = *v62;
              uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v118 = (char *)v62 + v88;
              uint64_t v136 = (char *)v61 + v88;
              uint64_t v89 = sub_253B07160();
              uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v136, v118, v89);
              break;
            case 5u:
              void *v61 = *v62;
              uint64_t v90 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v119 = (char *)v62 + v90;
              uint64_t v137 = (char *)v61 + v90;
              uint64_t v91 = sub_253B07160();
              uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
              swift_bridgeObjectRetain();
              v110(v137, v119, v91);
              break;
            case 9u:
              *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
              v61[1] = v62[1];
              v61[2] = v62[2];
              uint64_t v92 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v120 = (char *)v62 + v92;
              uint64_t v138 = (char *)v61 + v92;
              uint64_t v93 = sub_253B07160();
              uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
              swift_bridgeObjectRetain();
              v111(v138, v120, v93);
              break;
            default:
              size_t v71 = *(void *)(*(void *)(v68 - 8) + 64);
              goto LABEL_56;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_78;
      }
      sub_2536FA73C();
    }
    size_t v71 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_56:
    memcpy(v61, v62, v71);
    goto LABEL_78;
  }
  if (v64)
  {
LABEL_46:
    uint64_t v67 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_79;
  }
  uint64_t v65 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v65))
  {
    uint64_t v66 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        void *v61 = *v62;
        v61[1] = v62[1];
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 4u:
        void *v61 = *v62;
        uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v112 = (char *)v62 + v72;
        int v130 = (char *)v61 + v72;
        uint64_t v73 = sub_253B07160();
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v103(v130, v112, v73);
        goto LABEL_64;
      case 5u:
        void *v61 = *v62;
        uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v113 = (char *)v62 + v74;
        uint64_t v131 = (char *)v61 + v74;
        uint64_t v75 = sub_253B07160();
        uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v131, v113, v75);
        goto LABEL_64;
      case 9u:
        *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
        v61[1] = v62[1];
        v61[2] = v62[2];
        uint64_t v76 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v114 = (char *)v62 + v76;
        uint64_t v132 = (char *)v61 + v76;
        uint64_t v77 = sub_253B07160();
        uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        v105(v132, v114, v77);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v65);
  }
  uint64_t v78 = *(int *)(v6 + 20);
  uint64_t v79 = (char *)v61 + v78;
  uint64_t v80 = (char *)v62 + v78;
  uint64_t v81 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v6);
LABEL_79:
  uint64_t v98 = *(int *)(a3 + 24);
  uint64_t v99 = (char *)a1 + v98;
  uint64_t v100 = (char *)a2 + v98;
  uint64_t v101 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 24))(v99, v100, v101);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatExprIndexVariant(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE22E0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_15;
  }
  uint64_t v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *a1 = *a2;
        *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        break;
      case 5:
        *(void *)a1 = *(void *)a2;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        break;
      case 4:
        *(void *)a1 = *(void *)a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        int v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    goto LABEL_14;
  }
  uint64_t v9 = sub_253462A5C(&qword_269CDCBA8);
  memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_14:
  uint64_t v23 = *(int *)(v6 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_15:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (_DWORD *)((char *)a1 + v27);
  uint64_t v29 = (_DWORD *)((char *)a2 + v27);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v27, 1, v6))
  {
    uint64_t v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v31))
    {
      uint64_t v32 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_28:
      uint64_t v46 = *(int *)(v6 + 20);
      uint64_t v47 = (char *)v28 + v46;
      uint64_t v48 = (char *)v29 + v46;
      uint64_t v49 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v6);
      goto LABEL_29;
    }
    int v33 = swift_getEnumCaseMultiPayload();
    switch(v33)
    {
      case 9:
        *uint64_t v28 = *v29;
        *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
        uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v39 = (char *)v28 + v38;
        uint64_t v40 = (char *)v29 + v38;
        uint64_t v41 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      case 5:
        *(void *)uint64_t v28 = *(void *)v29;
        uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v43 = (char *)v28 + v42;
        uint64_t v44 = (char *)v29 + v42;
        uint64_t v45 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        break;
      case 4:
        *(void *)uint64_t v28 = *(void *)v29;
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v35 = (char *)v28 + v34;
        uint64_t v36 = (char *)v29 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        break;
      default:
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_27;
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v31);
    goto LABEL_28;
  }
  uint64_t v30 = sub_253462A5C(&qword_269CE22E0);
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_29:
  uint64_t v50 = *(int *)(a3 + 24);
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
  return a1;
}

_DWORD *assignWithTake for TranscriptProtoASTFlatExprIndexVariant(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_27:
        uint64_t v34 = *(int *)(v6 + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_42;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v27 = (char *)a1 + v26;
          uint64_t v28 = (char *)a2 + v26;
          uint64_t v29 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = (char *)a2 + v30;
          uint64_t v33 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v22 = (char *)a1 + v21;
          uint64_t v23 = (char *)a2 + v21;
          uint64_t v24 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
      goto LABEL_27;
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE22E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_42;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      int v15 = swift_getEnumCaseMultiPayload();
      switch(v15)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v44 = (char *)a1 + v43;
          uint64_t v45 = (char *)a2 + v43;
          uint64_t v46 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v48 = (char *)a1 + v47;
          uint64_t v49 = (char *)a2 + v47;
          uint64_t v50 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_41;
      }
      sub_2536FA73C();
      int v38 = swift_getEnumCaseMultiPayload();
      switch(v38)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v52 = (char *)a1 + v51;
          uint64_t v53 = (char *)a2 + v51;
          uint64_t v54 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
          break;
        case 5:
          *(void *)a1 = *(void *)a2;
          uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v56 = (char *)a1 + v55;
          uint64_t v57 = (char *)a2 + v55;
          uint64_t v58 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          break;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)a2 + v39;
          uint64_t v42 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          break;
        default:
          size_t v25 = *(void *)(*(void *)(v12 - 8) + 64);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_2536FA73C();
  }
  size_t v25 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_21:
  memcpy(a1, a2, v25);
LABEL_41:
  uint64_t v59 = *(int *)(v6 + 20);
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
LABEL_42:
  uint64_t v63 = *(int *)(a3 + 20);
  uint64_t v64 = (uint64_t)a1 + v63;
  uint64_t v65 = (uint64_t)a2 + v63;
  int v66 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v63, 1, v6);
  int v67 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v65, 1, v6);
  if (!v66)
  {
    if (v67)
    {
      sub_2536FA73C();
      goto LABEL_48;
    }
    uint64_t v71 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v72 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v64, 1, v71);
    int v73 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v65, 1, v71);
    if (v72)
    {
      if (!v73)
      {
        int v74 = swift_getEnumCaseMultiPayload();
        switch(v74)
        {
          case 9:
            *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
            *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
            uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v103 = v64 + v102;
            uint64_t v104 = v65 + v102;
            uint64_t v105 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
            break;
          case 5:
            *(void *)uint64_t v64 = *(void *)v65;
            uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v107 = v64 + v106;
            uint64_t v108 = v65 + v106;
            uint64_t v109 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
            break;
          case 4:
            *(void *)uint64_t v64 = *(void *)v65;
            uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v76 = v64 + v75;
            uint64_t v77 = v65 + v75;
            uint64_t v78 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
            break;
          default:
            memcpy((void *)v64, (const void *)v65, *(void *)(*(void *)(v71 - 8) + 64));
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
LABEL_78:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v64, 0, 1, v71);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v73)
      {
        if (a1 == a2) {
          goto LABEL_83;
        }
        sub_2536FA73C();
        int v97 = swift_getEnumCaseMultiPayload();
        switch(v97)
        {
          case 9:
            *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
            *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
            uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v111 = v64 + v110;
            uint64_t v112 = v65 + v110;
            uint64_t v113 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
            break;
          case 5:
            *(void *)uint64_t v64 = *(void *)v65;
            uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v115 = v64 + v114;
            uint64_t v116 = v65 + v114;
            uint64_t v117 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 32))(v115, v116, v117);
            break;
          case 4:
            *(void *)uint64_t v64 = *(void *)v65;
            uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v99 = v64 + v98;
            uint64_t v100 = v65 + v98;
            uint64_t v101 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
            break;
          default:
            size_t v84 = *(void *)(*(void *)(v71 - 8) + 64);
            goto LABEL_62;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      }
      sub_2536FA73C();
    }
    size_t v84 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_62:
    memcpy((void *)v64, (const void *)v65, v84);
LABEL_83:
    uint64_t v118 = *(int *)(v6 + 20);
    uint64_t v119 = v64 + v118;
    uint64_t v120 = v65 + v118;
    uint64_t v121 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 40))(v119, v120, v121);
    goto LABEL_84;
  }
  if (!v67)
  {
    uint64_t v68 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v65, 1, v68))
    {
      uint64_t v69 = sub_253462A5C(&qword_269CDCBA8);
      memcpy((void *)v64, (const void *)v65, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_68:
      uint64_t v93 = *(int *)(v6 + 20);
      uint64_t v94 = v64 + v93;
      uint64_t v95 = v65 + v93;
      uint64_t v96 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v64, 0, 1, v6);
      goto LABEL_84;
    }
    int v79 = swift_getEnumCaseMultiPayload();
    switch(v79)
    {
      case 9:
        *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
        *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v86 = v64 + v85;
        uint64_t v87 = v65 + v85;
        uint64_t v88 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
        break;
      case 5:
        *(void *)uint64_t v64 = *(void *)v65;
        uint64_t v89 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v90 = v64 + v89;
        uint64_t v91 = v65 + v89;
        uint64_t v92 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
        break;
      case 4:
        *(void *)uint64_t v64 = *(void *)v65;
        uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v81 = v64 + v80;
        uint64_t v82 = v65 + v80;
        uint64_t v83 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
        break;
      default:
        memcpy((void *)v64, (const void *)v65, *(void *)(*(void *)(v68 - 8) + 64));
        goto LABEL_67;
    }
    swift_storeEnumTagMultiPayload();
LABEL_67:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v64, 0, 1, v68);
    goto LABEL_68;
  }
LABEL_48:
  uint64_t v70 = sub_253462A5C(&qword_269CE22E0);
  memcpy((void *)v64, (const void *)v65, *(void *)(*(void *)(v70 - 8) + 64));
LABEL_84:
  uint64_t v122 = *(int *)(a3 + 24);
  uint64_t v123 = (char *)a1 + v122;
  uint64_t v124 = (char *)a2 + v122;
  uint64_t v125 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 40))(v123, v124, v125);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538E6914);
}

uint64_t sub_2538E6914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253902340(a1, a2, a3, &qword_269CE22E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538E6934);
}

uint64_t sub_2538E6934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2539023CC(a1, a2, a3, a4, &qword_269CE22E0);
}

void sub_2538E6940(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprInfixVariant(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    int v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v15 = v9[1];
            *int v8 = *v9;
            v8[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *int v8 = *v9;
            uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v56 = (char *)v9 + v16;
            uint64_t v62 = (char *)v8 + v16;
            uint64_t v17 = sub_253B07160();
            uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v50(v62, v56, v17);
            goto LABEL_13;
          case 5u:
            *int v8 = *v9;
            uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v57 = (char *)v9 + v18;
            uint64_t v63 = (char *)v8 + v18;
            uint64_t v19 = sub_253B07160();
            uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v51(v63, v57, v19);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)int v8 = *(_DWORD *)v9;
            uint64_t v20 = v9[2];
            v8[1] = v9[1];
            v8[2] = v20;
            uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v58 = (char *)v9 + v21;
            uint64_t v64 = (char *)v8 + v21;
            uint64_t v22 = sub_253B07160();
            uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
            swift_bridgeObjectRetain();
            v52(v64, v58, v22);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v13);
      }
      uint64_t v23 = *(int *)(v10 + 20);
      uint64_t v24 = (char *)v8 + v23;
      size_t v25 = (char *)v9 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v27 = a3[6];
    uint64_t v28 = (uint64_t *)((char *)v4 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v27, 1, v10))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v33 = v29[1];
            *uint64_t v28 = *v29;
            v28[1] = v33;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *uint64_t v28 = *v29;
            uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v59 = (char *)v29 + v34;
            uint64_t v65 = (char *)v28 + v34;
            uint64_t v35 = sub_253B07160();
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v65, v59, v35);
            goto LABEL_26;
          case 5u:
            *uint64_t v28 = *v29;
            uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v60 = (char *)v29 + v36;
            int v66 = (char *)v28 + v36;
            uint64_t v37 = sub_253B07160();
            uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v66, v60, v37);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
            uint64_t v38 = v29[2];
            v28[1] = v29[1];
            v28[2] = v38;
            uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v61 = (char *)v29 + v39;
            int v67 = (char *)v28 + v39;
            uint64_t v40 = sub_253B07160();
            uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v67, v61, v40);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v31);
      }
      uint64_t v41 = *(int *)(v10 + 20);
      uint64_t v42 = (char *)v28 + v41;
      uint64_t v43 = (char *)v29 + v41;
      uint64_t v44 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v10);
    }
    uint64_t v45 = a3[7];
    uint64_t v46 = (char *)v4 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprInfixVariant(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          uint64_t v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          uint64_t v9 = v4 + v8;
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    uint64_t v11 = v4 + *(int *)(v5 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v5))
  {
    uint64_t v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v15 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v15 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_17:
          uint64_t v16 = *(int *)(v15 + 20);
          goto LABEL_19;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_19:
          uint64_t v17 = v13 + v16;
          uint64_t v18 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          break;
        default:
          break;
      }
    }
    uint64_t v19 = v13 + *(int *)(v5 + 20);
    uint64_t v20 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  uint64_t v21 = a1 + a2[7];
  uint64_t v22 = sub_253B07160();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
  return v23(v21, v22);
}

unsigned char *initializeWithCopy for TranscriptProtoASTFlatExprInfixVariant(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v13 = v8[1];
          void *v7 = *v8;
          v7[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          void *v7 = *v8;
          uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v54 = (char *)v8 + v14;
          uint64_t v60 = (char *)v7 + v14;
          uint64_t v15 = sub_253B07160();
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v60, v54, v15);
          goto LABEL_11;
        case 5u:
          void *v7 = *v8;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v55 = (char *)v8 + v16;
          uint64_t v61 = (char *)v7 + v16;
          uint64_t v17 = sub_253B07160();
          uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v49(v61, v55, v17);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
          uint64_t v18 = v8[2];
          v7[1] = v8[1];
          v7[2] = v18;
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v56 = (char *)v8 + v19;
          uint64_t v62 = (char *)v7 + v19;
          uint64_t v20 = sub_253B07160();
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v62, v56, v20);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v21 = *(int *)(v9 + 20);
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a2[v25], 1, v9))
  {
    uint64_t v28 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v31 = v27[1];
          void *v26 = *v27;
          v26[1] = v31;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          void *v26 = *v27;
          uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v57 = (char *)v27 + v32;
          uint64_t v63 = (char *)v26 + v32;
          uint64_t v33 = sub_253B07160();
          uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v63, v57, v33);
          goto LABEL_24;
        case 5u:
          void *v26 = *v27;
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v58 = (char *)v27 + v34;
          uint64_t v64 = (char *)v26 + v34;
          uint64_t v35 = sub_253B07160();
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v64, v58, v35);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
          uint64_t v36 = v27[2];
          v26[1] = v27[1];
          v26[2] = v36;
          uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v59 = (char *)v27 + v37;
          uint64_t v65 = (char *)v26 + v37;
          uint64_t v38 = sub_253B07160();
          uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v65, v59, v38);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v29);
    }
    uint64_t v39 = *(int *)(v9 + 20);
    uint64_t v40 = (char *)v26 + v39;
    uint64_t v41 = (char *)v27 + v39;
    uint64_t v42 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v9);
  }
  uint64_t v43 = a3[7];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v46 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoASTFlatExprInfixVariant(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            void *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            void *v7 = *v8;
            uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v109 = (char *)v8 + v29;
            uint64_t v127 = (char *)v7 + v29;
            uint64_t v30 = sub_253B07160();
            uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
            swift_bridgeObjectRetain();
            v91(v127, v109, v30);
            goto LABEL_32;
          case 5u:
            void *v7 = *v8;
            uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v110 = (char *)v8 + v31;
            uint64_t v128 = (char *)v7 + v31;
            uint64_t v32 = sub_253B07160();
            uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v92(v128, v110, v32);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v111 = (char *)v8 + v33;
            uint64_t v129 = (char *)v7 + v33;
            uint64_t v34 = sub_253B07160();
            uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            v93(v129, v111, v34);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        uint64_t v41 = *(int *)(v9 + 20);
        uint64_t v42 = (char *)v7 + v41;
        uint64_t v43 = (char *)v8 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              void *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              void *v7 = *v8;
              uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v112 = (char *)v8 + v35;
              int v130 = (char *)v7 + v35;
              uint64_t v36 = sub_253B07160();
              uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
              swift_bridgeObjectRetain();
              v94(v130, v112, v36);
              break;
            case 5u:
              void *v7 = *v8;
              uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v113 = (char *)v8 + v37;
              uint64_t v131 = (char *)v7 + v37;
              uint64_t v38 = sub_253B07160();
              uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
              swift_bridgeObjectRetain();
              v95(v131, v113, v38);
              break;
            case 9u:
              *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v114 = (char *)v8 + v39;
              uint64_t v132 = (char *)v7 + v39;
              uint64_t v40 = sub_253B07160();
              uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
              swift_bridgeObjectRetain();
              v96(v132, v114, v40);
              break;
            default:
              size_t v18 = *(void *)(*(void *)(v15 - 8) + 64);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2536FA73C();
    }
    size_t v18 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_17:
    memcpy(v7, v8, v18);
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        void *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        void *v7 = *v8;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v106 = (char *)v8 + v19;
        uint64_t v124 = (char *)v7 + v19;
        uint64_t v20 = sub_253B07160();
        uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v88(v124, v106, v20);
        goto LABEL_25;
      case 5u:
        void *v7 = *v8;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v107 = (char *)v8 + v21;
        uint64_t v125 = (char *)v7 + v21;
        uint64_t v22 = sub_253B07160();
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v125, v107, v22);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v108 = (char *)v8 + v23;
        uint64_t v126 = (char *)v7 + v23;
        uint64_t v24 = sub_253B07160();
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v90(v126, v108, v24);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v25 = *(int *)(v9 + 20);
  uint64_t v26 = (char *)v7 + v25;
  uint64_t v27 = (char *)v8 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  uint64_t v45 = a3[6];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  int v48 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a1[v45], 1, v9);
  int v49 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v9);
  if (!v48)
  {
    if (v49)
    {
      sub_2536FA73C();
      goto LABEL_46;
    }
    uint64_t v53 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v53);
    int v55 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v53);
    if (v54)
    {
      if (!v55)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *uint64_t v46 = *v47;
            v46[1] = v47[1];
            swift_bridgeObjectRetain();
            goto LABEL_71;
          case 4u:
            *uint64_t v46 = *v47;
            uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v118 = (char *)v47 + v67;
            uint64_t v136 = (char *)v46 + v67;
            uint64_t v68 = sub_253B07160();
            uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
            swift_bridgeObjectRetain();
            v100(v136, v118, v68);
            goto LABEL_71;
          case 5u:
            *uint64_t v46 = *v47;
            uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v119 = (char *)v47 + v69;
            uint64_t v137 = (char *)v46 + v69;
            uint64_t v70 = sub_253B07160();
            uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
            swift_bridgeObjectRetain();
            v101(v137, v119, v70);
            goto LABEL_71;
          case 9u:
            *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
            v46[1] = v47[1];
            v46[2] = v47[2];
            uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v120 = (char *)v47 + v71;
            uint64_t v138 = (char *)v46 + v71;
            uint64_t v72 = sub_253B07160();
            uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v102(v138, v120, v72);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v53);
LABEL_78:
        uint64_t v79 = *(int *)(v9 + 20);
        uint64_t v80 = (char *)v46 + v79;
        uint64_t v81 = (char *)v47 + v79;
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
        goto LABEL_79;
      }
    }
    else
    {
      if (!v55)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *uint64_t v46 = *v47;
              v46[1] = v47[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *uint64_t v46 = *v47;
              uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v121 = (char *)v47 + v73;
              uint64_t v139 = (char *)v46 + v73;
              uint64_t v74 = sub_253B07160();
              uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
              swift_bridgeObjectRetain();
              v103(v139, v121, v74);
              break;
            case 5u:
              *uint64_t v46 = *v47;
              uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v122 = (char *)v47 + v75;
              uint64_t v140 = (char *)v46 + v75;
              uint64_t v76 = sub_253B07160();
              uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
              swift_bridgeObjectRetain();
              v104(v140, v122, v76);
              break;
            case 9u:
              *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
              v46[1] = v47[1];
              v46[2] = v47[2];
              uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v123 = (char *)v47 + v77;
              uint64_t v141 = (char *)v46 + v77;
              uint64_t v78 = sub_253B07160();
              uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
              swift_bridgeObjectRetain();
              v105(v141, v123, v78);
              break;
            default:
              size_t v56 = *(void *)(*(void *)(v53 - 8) + 64);
              goto LABEL_56;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_78;
      }
      sub_2536FA73C();
    }
    size_t v56 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_56:
    memcpy(v46, v47, v56);
    goto LABEL_78;
  }
  if (v49)
  {
LABEL_46:
    uint64_t v52 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v46, v47, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_79;
  }
  uint64_t v50 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v50))
  {
    uint64_t v51 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *uint64_t v46 = *v47;
        v46[1] = v47[1];
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 4u:
        *uint64_t v46 = *v47;
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v115 = (char *)v47 + v57;
        uint64_t v133 = (char *)v46 + v57;
        uint64_t v58 = sub_253B07160();
        int v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v133, v115, v58);
        goto LABEL_64;
      case 5u:
        *uint64_t v46 = *v47;
        uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v116 = (char *)v47 + v59;
        uint64_t v134 = (char *)v46 + v59;
        uint64_t v60 = sub_253B07160();
        uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v134, v116, v60);
        goto LABEL_64;
      case 9u:
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        v46[1] = v47[1];
        v46[2] = v47[2];
        uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v117 = (char *)v47 + v61;
        uint64_t v135 = (char *)v46 + v61;
        uint64_t v62 = sub_253B07160();
        uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v99(v135, v117, v62);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v50);
  }
  uint64_t v63 = *(int *)(v9 + 20);
  uint64_t v64 = (char *)v46 + v63;
  uint64_t v65 = (char *)v47 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v9);
LABEL_79:
  uint64_t v83 = a3[7];
  size_t v84 = &a1[v83];
  uint64_t v85 = &a2[v83];
  uint64_t v86 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoASTFlatExprInfixVariant(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        _DWORD *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v19 = (char *)v7 + v18;
        uint64_t v20 = (char *)v8 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v23 = (char *)v7 + v22;
        uint64_t v24 = (char *)v8 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v15 = (char *)v7 + v14;
        int v16 = (char *)v8 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_14:
  uint64_t v26 = *(int *)(v9 + 20);
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_15:
  uint64_t v30 = a3[6];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a2[v30], 1, v9))
  {
    uint64_t v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v34))
    {
      uint64_t v35 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_28:
      uint64_t v49 = *(int *)(v9 + 20);
      uint64_t v50 = (char *)v31 + v49;
      uint64_t v51 = (char *)v32 + v49;
      uint64_t v52 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v9);
      goto LABEL_29;
    }
    int v36 = swift_getEnumCaseMultiPayload();
    switch(v36)
    {
      case 9:
        *uint64_t v31 = *v32;
        *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v42 = (char *)v31 + v41;
        uint64_t v43 = (char *)v32 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      case 5:
        *(void *)uint64_t v31 = *(void *)v32;
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v46 = (char *)v31 + v45;
        uint64_t v47 = (char *)v32 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        break;
      case 4:
        *(void *)uint64_t v31 = *(void *)v32;
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v38 = (char *)v31 + v37;
        uint64_t v39 = (char *)v32 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        break;
      default:
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_27;
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v34);
    goto LABEL_28;
  }
  uint64_t v33 = sub_253462A5C(&qword_269CE22E0);
  memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_29:
  uint64_t v53 = a3[7];
  int v54 = &a1[v53];
  int v55 = &a2[v53];
  uint64_t v56 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoASTFlatExprInfixVariant(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_27:
        uint64_t v37 = *(int *)(v9 + 20);
        uint64_t v38 = (char *)v7 + v37;
        uint64_t v39 = (char *)v8 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_42;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          _DWORD *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v30 = (char *)v7 + v29;
          uint64_t v31 = (char *)v8 + v29;
          uint64_t v32 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          break;
        case 5:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v34 = (char *)v7 + v33;
          uint64_t v35 = (char *)v8 + v33;
          uint64_t v36 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          break;
        case 4:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v25 = (char *)v7 + v24;
          uint64_t v26 = (char *)v8 + v24;
          uint64_t v27 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_27;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      int v18 = swift_getEnumCaseMultiPayload();
      switch(v18)
      {
        case 9:
          _DWORD *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v47 = (char *)v7 + v46;
          uint64_t v48 = (char *)v8 + v46;
          uint64_t v49 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          break;
        case 5:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v51 = (char *)v7 + v50;
          uint64_t v52 = (char *)v8 + v50;
          uint64_t v53 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
          break;
        case 4:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v20 = (char *)v7 + v19;
          uint64_t v21 = (char *)v8 + v19;
          uint64_t v22 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v17)
    {
      if (a1 == a2) {
        goto LABEL_41;
      }
      sub_2536FA73C();
      int v41 = swift_getEnumCaseMultiPayload();
      switch(v41)
      {
        case 9:
          _DWORD *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          int v55 = (char *)v7 + v54;
          uint64_t v56 = (char *)v8 + v54;
          uint64_t v57 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
          break;
        case 5:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v59 = (char *)v7 + v58;
          uint64_t v60 = (char *)v8 + v58;
          uint64_t v61 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          break;
        case 4:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v43 = (char *)v7 + v42;
          uint64_t v44 = (char *)v8 + v42;
          uint64_t v45 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
          break;
        default:
          size_t v28 = *(void *)(*(void *)(v15 - 8) + 64);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_2536FA73C();
  }
  size_t v28 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_21:
  memcpy(v7, v8, v28);
LABEL_41:
  uint64_t v62 = *(int *)(v9 + 20);
  uint64_t v63 = (char *)v7 + v62;
  uint64_t v64 = (char *)v8 + v62;
  uint64_t v65 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
LABEL_42:
  uint64_t v66 = a3[6];
  uint64_t v67 = (uint64_t)&a1[v66];
  uint64_t v68 = (uint64_t)&a2[v66];
  int v69 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a1[v66], 1, v9);
  int v70 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v9);
  if (!v69)
  {
    if (v70)
    {
      sub_2536FA73C();
      goto LABEL_48;
    }
    uint64_t v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v75 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v67, 1, v74);
    int v76 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v74);
    if (v75)
    {
      if (!v76)
      {
        int v77 = swift_getEnumCaseMultiPayload();
        switch(v77)
        {
          case 9:
            *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v106 = v67 + v105;
            uint64_t v107 = v68 + v105;
            uint64_t v108 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
            break;
          case 5:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v110 = v67 + v109;
            uint64_t v111 = v68 + v109;
            uint64_t v112 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
            break;
          case 4:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v79 = v67 + v78;
            uint64_t v80 = v68 + v78;
            uint64_t v81 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
            break;
          default:
            memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v74 - 8) + 64));
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
LABEL_78:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67, 0, 1, v74);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v76)
      {
        if (a1 == a2) {
          goto LABEL_83;
        }
        sub_2536FA73C();
        int v100 = swift_getEnumCaseMultiPayload();
        switch(v100)
        {
          case 9:
            *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v114 = v67 + v113;
            uint64_t v115 = v68 + v113;
            uint64_t v116 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
            break;
          case 5:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v118 = v67 + v117;
            uint64_t v119 = v68 + v117;
            uint64_t v120 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
            break;
          case 4:
            *(void *)uint64_t v67 = *(void *)v68;
            uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v102 = v67 + v101;
            uint64_t v103 = v68 + v101;
            uint64_t v104 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
            break;
          default:
            size_t v87 = *(void *)(*(void *)(v74 - 8) + 64);
            goto LABEL_62;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      }
      sub_2536FA73C();
    }
    size_t v87 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_62:
    memcpy((void *)v67, (const void *)v68, v87);
LABEL_83:
    uint64_t v121 = *(int *)(v9 + 20);
    uint64_t v122 = v67 + v121;
    uint64_t v123 = v68 + v121;
    uint64_t v124 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 40))(v122, v123, v124);
    goto LABEL_84;
  }
  if (!v70)
  {
    uint64_t v71 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v71))
    {
      uint64_t v72 = sub_253462A5C(&qword_269CDCBA8);
      memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v72 - 8) + 64));
LABEL_68:
      uint64_t v96 = *(int *)(v9 + 20);
      uint64_t v97 = v67 + v96;
      uint64_t v98 = v68 + v96;
      uint64_t v99 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67, 0, 1, v9);
      goto LABEL_84;
    }
    int v82 = swift_getEnumCaseMultiPayload();
    switch(v82)
    {
      case 9:
        *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
        *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
        uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v89 = v67 + v88;
        uint64_t v90 = v68 + v88;
        uint64_t v91 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
        break;
      case 5:
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v93 = v67 + v92;
        uint64_t v94 = v68 + v92;
        uint64_t v95 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
        break;
      case 4:
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v84 = v67 + v83;
        uint64_t v85 = v68 + v83;
        uint64_t v86 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
        break;
      default:
        memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v71 - 8) + 64));
        goto LABEL_67;
    }
    swift_storeEnumTagMultiPayload();
LABEL_67:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67, 0, 1, v71);
    goto LABEL_68;
  }
LABEL_48:
  uint64_t v73 = sub_253462A5C(&qword_269CE22E0);
  memcpy((void *)v67, (const void *)v68, *(void *)(*(void *)(v73 - 8) + 64));
LABEL_84:
  uint64_t v125 = a3[7];
  uint64_t v126 = &a1[v125];
  uint64_t v127 = &a2[v125];
  uint64_t v128 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v128 - 8) + 40))(v126, v127, v128);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprInfixVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538EA540);
}

uint64_t sub_2538EA540(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_2538FF5FC(a1, a2, a3, &qword_269CE22E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprInfixVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538EA560);
}

void sub_2538EA560()
{
}

void sub_2538EA56C()
{
}

_DWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoExpression(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2360);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_76:
      uint64_t v179 = *(int *)(a3 + 20);
      uint64_t v180 = (char *)a1 + v179;
      uint64_t v181 = (char *)a2 + v179;
      uint64_t v182 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v180, v181, v182);
      return a1;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v12 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v12;
        uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_253B07160();
        int v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        goto LABEL_75;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v19 = *(int *)(updated + 20);
        uint64_t v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (void *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22)) {
          goto LABEL_65;
        }
        goto LABEL_21;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v24 = v23[5];
        uint64_t v25 = (void *)((char *)a1 + v24);
        uint64_t v26 = (void *)((char *)a2 + v24);
        uint64_t v27 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = sub_253462A5C(&qword_26B249528);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
          uint64_t v75 = v26[2];
          v25[1] = v26[1];
          v25[2] = v75;
          uint64_t v76 = *(int *)(v27 + 24);
          uint64_t v189 = (char *)v26 + v76;
          uint64_t v194 = (char *)v25 + v76;
          uint64_t v77 = sub_253B07160();
          uint64_t v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          v184(v194, v189, v77);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
        }
        uint64_t v78 = v23[6];
        uint64_t v79 = (void *)((char *)a1 + v78);
        uint64_t v80 = (void *)((char *)a2 + v78);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v78, 1, v27))
        {
          uint64_t v81 = sub_253462A5C(&qword_26B249528);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
          uint64_t v137 = v80[2];
          v79[1] = v80[1];
          v79[2] = v137;
          uint64_t v138 = *(int *)(v27 + 24);
          uint64_t v190 = (char *)v80 + v138;
          uint64_t v201 = (char *)v79 + v138;
          uint64_t v139 = sub_253B07160();
          uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16);
          swift_bridgeObjectRetain();
          v185(v201, v190, v139);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v27);
        }
        uint64_t v140 = v23[7];
        uint64_t v141 = (char *)a1 + v140;
        uint64_t v142 = (char *)a2 + v140;
        uint64_t v143 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
        goto LABEL_75;
      case 4u:
        uint64_t v29 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v29))
        {
          uint64_t v30 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v82 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v82;
          uint64_t v83 = *(int *)(v29 + 24);
          uint64_t v195 = (char *)a1 + v83;
          uint64_t v84 = (char *)a2 + v83;
          uint64_t v85 = sub_253B07160();
          uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
          swift_bridgeObjectRetain();
          v86(v195, v84, v85);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v29);
        }
        uint64_t v87 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v88 = *(int *)(v87 + 20);
        uint64_t v89 = (void *)((char *)a1 + v88);
        uint64_t v90 = (void *)((char *)a2 + v88);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v88, 1, v29))
        {
          uint64_t v91 = sub_253462A5C(&qword_26B249528);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
          uint64_t v144 = v90[2];
          v89[1] = v90[1];
          v89[2] = v144;
          uint64_t v145 = *(int *)(v29 + 24);
          uint64_t v191 = (char *)v90 + v145;
          uint64_t v202 = (char *)v89 + v145;
          uint64_t v146 = sub_253B07160();
          uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
          swift_bridgeObjectRetain();
          v186(v202, v191, v146);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v29);
        }
        uint64_t v147 = *(int *)(v87 + 24);
        uint64_t v148 = (char *)a1 + v147;
        uint64_t v149 = (char *)a2 + v147;
        uint64_t v150 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
        goto LABEL_75;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v31 = *(int *)(updated + 20);
        uint64_t v20 = (void *)((char *)a1 + v31);
        uint64_t v21 = (void *)((char *)a2 + v31);
        uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22)) {
          goto LABEL_21;
        }
        goto LABEL_65;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v32 = *(int *)(updated + 20);
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (void *)((char *)a2 + v32);
        uint64_t v35 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
        {
          uint64_t v36 = sub_253462A5C(&qword_269CE0448);
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          uint64_t v151 = v34[1];
          *uint64_t v33 = *v34;
          v33[1] = v151;
          uint64_t v152 = v34[3];
          v33[2] = v34[2];
          v33[3] = v152;
          uint64_t v153 = *(int *)(v35 + 24);
          uint64_t v192 = (char *)v34 + v153;
          uint64_t v203 = (char *)v33 + v153;
          uint64_t v154 = sub_253B07160();
          uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v187(v203, v192, v154);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
        }
        goto LABEL_66;
      case 7u:
        *(void *)a1 = *(void *)a2;
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = sub_253B07160();
        int v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        v41(v38, v39, v40);
        goto LABEL_75;
      case 8u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v42 = *(int *)(updated + 20);
        uint64_t v20 = (void *)((char *)a1 + v42);
        uint64_t v21 = (void *)((char *)a2 + v42);
        uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
LABEL_21:
          uint64_t v43 = sub_253462A5C(&qword_26B249528);
          memcpy(v20, v21, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
LABEL_65:
          *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
          uint64_t v155 = v21[2];
          v20[1] = v21[1];
          v20[2] = v155;
          uint64_t v156 = *(int *)(v22 + 24);
          uint64_t v193 = (char *)v21 + v156;
          uint64_t v204 = (char *)v20 + v156;
          uint64_t v157 = sub_253B07160();
          uint64_t v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
          swift_bridgeObjectRetain();
          v188(v204, v193, v157);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        }
LABEL_66:
        uint64_t v158 = *(int *)(updated + 24);
        uint64_t v159 = (char *)a1 + v158;
        uint64_t v160 = (char *)a2 + v158;
        uint64_t v161 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
        goto LABEL_75;
      case 9u:
        uint64_t v44 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v44))
        {
          uint64_t v45 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v92 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v92;
          uint64_t v93 = *(int *)(v44 + 24);
          uint64_t v196 = (char *)a1 + v93;
          uint64_t v94 = (char *)a2 + v93;
          uint64_t v95 = sub_253B07160();
          uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v96(v196, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v44);
        }
        uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v98 = (char *)a1 + v97;
        uint64_t v99 = (char *)a2 + v97;
        uint64_t v100 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
        goto LABEL_75;
      case 0xAu:
        uint64_t v46 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v46;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_WORD *)((char *)a1 + 17) = *(_WORD *)((char *)a2 + 17);
        uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_253B07160();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        goto LABEL_75;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = sub_253B07160();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v53, v54, v55);
        goto LABEL_75;
      case 0xCu:
        uint64_t v57 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v57))
        {
          uint64_t v58 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v101 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v101;
          uint64_t v102 = *(int *)(v57 + 24);
          uint64_t v197 = (char *)a1 + v102;
          uint64_t v103 = (char *)a2 + v102;
          uint64_t v104 = sub_253B07160();
          uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
          swift_bridgeObjectRetain();
          v105(v197, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v57);
        }
        uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v107 = (char *)a1 + v106;
        uint64_t v108 = (char *)a2 + v106;
        uint64_t v109 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
        goto LABEL_75;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = sub_253B07160();
        uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v63(v60, v61, v62);
        goto LABEL_75;
      case 0xEu:
        uint64_t v64 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v64))
        {
          uint64_t v65 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v110 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v110;
          uint64_t v111 = *(int *)(v64 + 24);
          uint64_t v198 = (char *)a1 + v111;
          uint64_t v112 = (char *)a2 + v111;
          uint64_t v113 = sub_253B07160();
          uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
          swift_bridgeObjectRetain();
          v114(v198, v112, v113);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v64);
        }
        uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v116 = (char *)a1 + v115;
        uint64_t v117 = (char *)a2 + v115;
        uint64_t v118 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
        goto LABEL_75;
      case 0xFu:
        uint64_t v66 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v66))
        {
          uint64_t v67 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v119 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v119;
          uint64_t v120 = *(int *)(v66 + 24);
          uint64_t v199 = (char *)a1 + v120;
          uint64_t v121 = (char *)a2 + v120;
          uint64_t v122 = sub_253B07160();
          uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
          swift_bridgeObjectRetain();
          v123(v199, v121, v122);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v66);
        }
        uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v125 = (char *)a1 + v124;
        uint64_t v126 = (char *)a2 + v124;
        uint64_t v127 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
        goto LABEL_75;
      case 0x10u:
        uint64_t v68 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v68))
        {
          uint64_t v69 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v128 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v128;
          uint64_t v129 = *(int *)(v68 + 24);
          uint64_t v200 = (char *)a1 + v129;
          int v130 = (char *)a2 + v129;
          uint64_t v131 = sub_253B07160();
          uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
          swift_bridgeObjectRetain();
          v132(v200, v130, v131);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v68);
        }
        uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v134 = (char *)a1 + v133;
        uint64_t v135 = (char *)a2 + v133;
        uint64_t v136 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
        goto LABEL_75;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v70 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
        goto LABEL_75;
      case 0x15u:
        uint64_t v71 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v71))
        {
          uint64_t v72 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v162 = *((void *)a2 + 2);
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = v162;
          uint64_t v163 = *(int *)(v71 + 24);
          uint64_t v205 = (char *)a1 + v163;
          uint64_t v164 = (char *)a2 + v163;
          uint64_t v165 = sub_253B07160();
          uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16);
          swift_bridgeObjectRetain();
          v166(v205, v164, v165);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v71);
        }
        uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v168 = (char *)a1 + v167;
        uint64_t v169 = (char *)a2 + v167;
        uint64_t v170 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
        goto LABEL_75;
      default:
        uint64_t v10 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
        {
          uint64_t v11 = sub_253462A5C(&qword_269CE2378);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_74;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_41;
          case 4:
            *(void *)a1 = *(void *)a2;
            uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v206 = (char *)a1 + v171;
            uint64_t v172 = (char *)a2 + v171;
            uint64_t v173 = sub_253B07160();
            uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
            swift_bridgeObjectRetain();
            v174(v206, v172, v173);
            break;
          case 3:
LABEL_41:
            uint64_t v74 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v74;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_73:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
LABEL_74:
            uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
            uint64_t v176 = (char *)a1 + v175;
            uint64_t v177 = (char *)a2 + v175;
            uint64_t v178 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
LABEL_75:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
            goto LABEL_76;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_73;
    }
  }
  uint64_t v9 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = (_DWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6)) {
          goto LABEL_51;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_8;
          case 4:
            swift_bridgeObjectRelease();
            uint64_t v49 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v50 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
            break;
          case 3:
LABEL_8:
            swift_bridgeObjectRelease();
            break;
        }
LABEL_51:
        uint64_t v28 = type metadata accessor for TranscriptProtoValueExpression(0);
        goto LABEL_52;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        goto LABEL_53;
      case 2u:
        uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        goto LABEL_26;
      case 3u:
        uint64_t v10 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v11 = a1 + v10[5];
        uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12))
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v11 + *(int *)(v12 + 24);
          uint64_t v14 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        }
        uint64_t v15 = a1 + v10[6];
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v12))
        {
          swift_bridgeObjectRelease();
          uint64_t v16 = v15 + *(int *)(v12 + 24);
          uint64_t v17 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        }
        uint64_t v8 = v10[7];
        goto LABEL_53;
      case 4u:
        uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v18))
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = a1 + *(int *)(v18 + 24);
          uint64_t v20 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
        }
        uint64_t v21 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v22 = a1 + *(int *)(v21 + 20);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v22, 1, v18))
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v22 + *(int *)(v18 + 24);
          uint64_t v24 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        }
        uint64_t v8 = *(int *)(v21 + 24);
        goto LABEL_53;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        goto LABEL_26;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v25 = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v26 = a1 + *(int *)(v25 + 20);
        uint64_t v27 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v27)) {
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 7u:
        swift_bridgeObjectRelease();
        uint64_t v28 = type metadata accessor for TranscriptProtoSayExpression(0);
        goto LABEL_52;
      case 8u:
        uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_26:
        uint64_t v25 = updated;
        uint64_t v26 = a1 + *(int *)(updated + 20);
        uint64_t v27 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v27))
        {
LABEL_27:
          swift_bridgeObjectRelease();
          uint64_t v29 = v26 + *(int *)(v27 + 24);
          uint64_t v30 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
        }
LABEL_28:
        uint64_t v8 = *(int *)(v25 + 24);
        goto LABEL_53;
      case 9u:
        uint64_t v31 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v31))
        {
          swift_bridgeObjectRelease();
          uint64_t v32 = a1 + *(int *)(v31 + 24);
          uint64_t v33 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoConfirmExpression(0);
        goto LABEL_52;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        goto LABEL_53;
      case 0xBu:
        swift_bridgeObjectRelease();
        uint64_t v28 = type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
        goto LABEL_52;
      case 0xCu:
        uint64_t v34 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v34))
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = a1 + *(int *)(v34 + 24);
          uint64_t v36 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoPickOneExpression(0);
        goto LABEL_52;
      case 0xDu:
        swift_bridgeObjectRelease();
        uint64_t v28 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
        goto LABEL_52;
      case 0xEu:
        uint64_t v37 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v37))
        {
          swift_bridgeObjectRelease();
          uint64_t v38 = a1 + *(int *)(v37 + 24);
          uint64_t v39 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoUndoExpression(0);
        goto LABEL_52;
      case 0xFu:
        uint64_t v40 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v40))
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = a1 + *(int *)(v40 + 24);
          uint64_t v42 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoRejectExpression(0);
        goto LABEL_52;
      case 0x10u:
        uint64_t v43 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v43))
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = a1 + *(int *)(v43 + 24);
          uint64_t v45 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoCancelExpression(0);
        goto LABEL_52;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v5 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        break;
      case 0x15u:
        uint64_t v46 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v46))
        {
          swift_bridgeObjectRelease();
          uint64_t v47 = a1 + *(int *)(v46 + 24);
          uint64_t v48 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoOpenExpression(0);
LABEL_52:
        uint64_t v8 = *(int *)(v28 + 20);
LABEL_53:
        uint64_t v51 = a1 + v8;
        uint64_t v52 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
        break;
      default:
        break;
    }
  }
  uint64_t v53 = a1 + *(int *)(a2 + 20);
  uint64_t v54 = sub_253B07160();
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8);
  return v55(v53, v54);
}

_DWORD *initializeWithCopy for TranscriptProtoExpression(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2360);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_74;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v10 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v10;
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      goto LABEL_73;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
      uint64_t v17 = *(int *)(updated + 20);
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20)) {
        goto LABEL_63;
      }
      goto LABEL_19;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v21 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)a2 + v22);
      uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_253462A5C(&qword_26B249528);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
        uint64_t v73 = v24[2];
        v23[1] = v24[1];
        v23[2] = v73;
        uint64_t v74 = *(int *)(v25 + 24);
        uint64_t v187 = (char *)v24 + v74;
        uint64_t v192 = (char *)v23 + v74;
        uint64_t v75 = sub_253B07160();
        uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v182(v192, v187, v75);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
      }
      uint64_t v76 = v21[6];
      uint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v76, 1, v25))
      {
        uint64_t v79 = sub_253462A5C(&qword_26B249528);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
        uint64_t v135 = v78[2];
        v77[1] = v78[1];
        v77[2] = v135;
        uint64_t v136 = *(int *)(v25 + 24);
        uint64_t v188 = (char *)v78 + v136;
        uint64_t v199 = (char *)v77 + v136;
        uint64_t v137 = sub_253B07160();
        uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
        swift_bridgeObjectRetain();
        v183(v199, v188, v137);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v25);
      }
      uint64_t v138 = v21[7];
      uint64_t v139 = (char *)a1 + v138;
      uint64_t v140 = (char *)a2 + v138;
      uint64_t v141 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
      goto LABEL_73;
    case 4u:
      uint64_t v27 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v27))
      {
        uint64_t v28 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v80 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v80;
        uint64_t v81 = *(int *)(v27 + 24);
        uint64_t v193 = (char *)a1 + v81;
        uint64_t v82 = (char *)a2 + v81;
        uint64_t v83 = sub_253B07160();
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        v84(v193, v82, v83);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v27);
      }
      uint64_t v85 = type metadata accessor for TranscriptProtoIndexExpression(0);
      uint64_t v86 = *(int *)(v85 + 20);
      uint64_t v87 = (void *)((char *)a1 + v86);
      uint64_t v88 = (void *)((char *)a2 + v86);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v86, 1, v27))
      {
        uint64_t v89 = sub_253462A5C(&qword_26B249528);
        memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
        uint64_t v142 = v88[2];
        v87[1] = v88[1];
        v87[2] = v142;
        uint64_t v143 = *(int *)(v27 + 24);
        uint64_t v189 = (char *)v88 + v143;
        uint64_t v200 = (char *)v87 + v143;
        uint64_t v144 = sub_253B07160();
        uint64_t v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
        swift_bridgeObjectRetain();
        v184(v200, v189, v144);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v27);
      }
      uint64_t v145 = *(int *)(v85 + 24);
      uint64_t v146 = (char *)a1 + v145;
      uint64_t v147 = (char *)a2 + v145;
      uint64_t v148 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
      goto LABEL_73;
    case 5u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      uint64_t v29 = *(int *)(updated + 20);
      uint64_t v18 = (void *)((char *)a1 + v29);
      uint64_t v19 = (void *)((char *)a2 + v29);
      uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20)) {
        goto LABEL_19;
      }
      goto LABEL_63;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
      uint64_t v30 = *(int *)(updated + 20);
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (void *)((char *)a2 + v30);
      uint64_t v33 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
      {
        uint64_t v34 = sub_253462A5C(&qword_269CE0448);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v149 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v149;
        uint64_t v150 = v32[3];
        v31[2] = v32[2];
        v31[3] = v150;
        uint64_t v151 = *(int *)(v33 + 24);
        uint64_t v190 = (char *)v32 + v151;
        uint64_t v201 = (char *)v31 + v151;
        uint64_t v152 = sub_253B07160();
        uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v185(v201, v190, v152);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
      }
      goto LABEL_64;
    case 7u:
      *(void *)a1 = *(void *)a2;
      uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      uint64_t v38 = sub_253B07160();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v36, v37, v38);
      goto LABEL_73;
    case 8u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
      uint64_t v40 = *(int *)(updated + 20);
      uint64_t v18 = (void *)((char *)a1 + v40);
      uint64_t v19 = (void *)((char *)a2 + v40);
      uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
LABEL_19:
        uint64_t v41 = sub_253462A5C(&qword_26B249528);
        memcpy(v18, v19, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
LABEL_63:
        *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
        uint64_t v153 = v19[2];
        v18[1] = v19[1];
        v18[2] = v153;
        uint64_t v154 = *(int *)(v20 + 24);
        uint64_t v191 = (char *)v19 + v154;
        uint64_t v202 = (char *)v18 + v154;
        uint64_t v155 = sub_253B07160();
        uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
        swift_bridgeObjectRetain();
        v186(v202, v191, v155);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      }
LABEL_64:
      uint64_t v156 = *(int *)(updated + 24);
      uint64_t v157 = (char *)a1 + v156;
      uint64_t v158 = (char *)a2 + v156;
      uint64_t v159 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
      goto LABEL_73;
    case 9u:
      uint64_t v42 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v42))
      {
        uint64_t v43 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v90 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v90;
        uint64_t v91 = *(int *)(v42 + 24);
        uint64_t v194 = (char *)a1 + v91;
        uint64_t v92 = (char *)a2 + v91;
        uint64_t v93 = sub_253B07160();
        uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
        swift_bridgeObjectRetain();
        v94(v194, v92, v93);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v42);
      }
      uint64_t v95 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
      uint64_t v96 = (char *)a1 + v95;
      uint64_t v97 = (char *)a2 + v95;
      uint64_t v98 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
      goto LABEL_73;
    case 0xAu:
      uint64_t v44 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v44;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_WORD *)((char *)a1 + 17) = *(_WORD *)((char *)a2 + 17);
      uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      uint64_t v48 = sub_253B07160();
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      v49(v46, v47, v48);
      goto LABEL_73;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      uint64_t v53 = sub_253B07160();
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      v54(v51, v52, v53);
      goto LABEL_73;
    case 0xCu:
      uint64_t v55 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v55))
      {
        uint64_t v56 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v99 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v99;
        uint64_t v100 = *(int *)(v55 + 24);
        uint64_t v195 = (char *)a1 + v100;
        uint64_t v101 = (char *)a2 + v100;
        uint64_t v102 = sub_253B07160();
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
        swift_bridgeObjectRetain();
        v103(v195, v101, v102);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v55);
      }
      uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
      uint64_t v105 = (char *)a1 + v104;
      uint64_t v106 = (char *)a2 + v104;
      uint64_t v107 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
      goto LABEL_73;
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = sub_253B07160();
      uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v61(v58, v59, v60);
      goto LABEL_73;
    case 0xEu:
      uint64_t v62 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v62))
      {
        uint64_t v63 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v108 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v108;
        uint64_t v109 = *(int *)(v62 + 24);
        uint64_t v196 = (char *)a1 + v109;
        uint64_t v110 = (char *)a2 + v109;
        uint64_t v111 = sub_253B07160();
        uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
        swift_bridgeObjectRetain();
        v112(v196, v110, v111);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v62);
      }
      uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
      uint64_t v114 = (char *)a1 + v113;
      uint64_t v115 = (char *)a2 + v113;
      uint64_t v116 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
      goto LABEL_73;
    case 0xFu:
      uint64_t v64 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v64))
      {
        uint64_t v65 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v117 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v117;
        uint64_t v118 = *(int *)(v64 + 24);
        uint64_t v197 = (char *)a1 + v118;
        uint64_t v119 = (char *)a2 + v118;
        uint64_t v120 = sub_253B07160();
        uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
        swift_bridgeObjectRetain();
        v121(v197, v119, v120);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v64);
      }
      uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
      uint64_t v123 = (char *)a1 + v122;
      uint64_t v124 = (char *)a2 + v122;
      uint64_t v125 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
      goto LABEL_73;
    case 0x10u:
      uint64_t v66 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v66))
      {
        uint64_t v67 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v126 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v126;
        uint64_t v127 = *(int *)(v66 + 24);
        uint64_t v198 = (char *)a1 + v127;
        uint64_t v128 = (char *)a2 + v127;
        uint64_t v129 = sub_253B07160();
        int v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
        swift_bridgeObjectRetain();
        v130(v198, v128, v129);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v66);
      }
      uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
      uint64_t v132 = (char *)a1 + v131;
      uint64_t v133 = (char *)a2 + v131;
      uint64_t v134 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
      goto LABEL_73;
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x16u:
      uint64_t v68 = sub_253B07160();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
      goto LABEL_73;
    case 0x15u:
      uint64_t v69 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v69))
      {
        uint64_t v70 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v160 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v160;
        uint64_t v161 = *(int *)(v69 + 24);
        uint64_t v203 = (char *)a1 + v161;
        uint64_t v162 = (char *)a2 + v161;
        uint64_t v163 = sub_253B07160();
        uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
        swift_bridgeObjectRetain();
        v164(v203, v162, v163);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v69);
      }
      uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
      uint64_t v166 = (char *)a1 + v165;
      uint64_t v167 = (char *)a2 + v165;
      uint64_t v168 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
      goto LABEL_73;
    default:
      uint64_t v8 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CE2378);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_72;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          goto LABEL_39;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          uint64_t v204 = (char *)a1 + v169;
          uint64_t v170 = (char *)a2 + v169;
          uint64_t v171 = sub_253B07160();
          uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
          swift_bridgeObjectRetain();
          v172(v204, v170, v171);
          goto LABEL_69;
        case 3:
LABEL_39:
          uint64_t v72 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v72;
          swift_bridgeObjectRetain();
LABEL_69:
          swift_storeEnumTagMultiPayload();
          goto LABEL_71;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_71:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
LABEL_72:
      uint64_t v173 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
      uint64_t v174 = (char *)a1 + v173;
      uint64_t v175 = (char *)a2 + v173;
      uint64_t v176 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
LABEL_73:
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_74:
      uint64_t v177 = *(int *)(a3 + 20);
      uint64_t v178 = (char *)a1 + v177;
      uint64_t v179 = (char *)a2 + v177;
      uint64_t v180 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v178, v179, v180);
      return a1;
  }
}

uint64_t assignWithCopy for TranscriptProtoExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_149;
      }
      sub_2536FA73C();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v75 = a1 + v74;
          uint64_t v76 = a2 + v74;
          uint64_t v77 = sub_253B07160();
          uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v75, v76, v77);
          goto LABEL_148;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
          uint64_t v80 = *(int *)(updated + 20);
          uint64_t v81 = (void *)(a1 + v80);
          uint64_t v82 = (void *)(a2 + v80);
          uint64_t v83 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83)) {
            goto LABEL_131;
          }
          goto LABEL_60;
        case 3u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v84 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          uint64_t v85 = v84[5];
          uint64_t v86 = (void *)(a1 + v85);
          uint64_t v87 = (void *)(a2 + v85);
          uint64_t v88 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88))
          {
            uint64_t v89 = sub_253462A5C(&qword_26B249528);
            memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v86 = *(_DWORD *)v87;
            v86[1] = v87[1];
            v86[2] = v87[2];
            uint64_t v217 = *(int *)(v88 + 24);
            uint64_t v336 = (char *)v87 + v217;
            uint64_t v353 = (char *)v86 + v217;
            uint64_t v218 = sub_253B07160();
            uint64_t v326 = *(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16);
            swift_bridgeObjectRetain();
            v326(v353, v336, v218);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, v88);
          }
          uint64_t v219 = v84[6];
          uint64_t v220 = (void *)(a1 + v219);
          uint64_t v221 = (void *)(a2 + v219);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v219, 1, v88))
          {
            uint64_t v222 = sub_253462A5C(&qword_26B249528);
            memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v220 = *(_DWORD *)v221;
            v220[1] = v221[1];
            v220[2] = v221[2];
            uint64_t v272 = *(int *)(v88 + 24);
            uint64_t v337 = (char *)v221 + v272;
            uint64_t v360 = (char *)v220 + v272;
            uint64_t v273 = sub_253B07160();
            uint64_t v327 = *(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16);
            swift_bridgeObjectRetain();
            v327(v360, v337, v273);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v220, 0, 1, v88);
          }
          uint64_t v274 = v84[7];
          uint64_t v275 = a1 + v274;
          uint64_t v276 = a2 + v274;
          uint64_t v277 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v277 - 8) + 16))(v275, v276, v277);
          goto LABEL_148;
        case 4u:
          uint64_t v90 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v90))
          {
            uint64_t v91 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v223 = *(int *)(v90 + 24);
            uint64_t v354 = a1 + v223;
            uint64_t v224 = a2 + v223;
            uint64_t v225 = sub_253B07160();
            uint64_t v226 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v225 - 8) + 16);
            swift_bridgeObjectRetain();
            v226(v354, v224, v225);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v90);
          }
          uint64_t v227 = type metadata accessor for TranscriptProtoIndexExpression(0);
          uint64_t v228 = *(int *)(v227 + 20);
          uint64_t v229 = (void *)(a1 + v228);
          uint64_t v230 = (void *)(a2 + v228);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v228, 1, v90))
          {
            uint64_t v231 = sub_253462A5C(&qword_26B249528);
            memcpy(v229, v230, *(void *)(*(void *)(v231 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v229 = *(_DWORD *)v230;
            v229[1] = v230[1];
            v229[2] = v230[2];
            uint64_t v278 = *(int *)(v90 + 24);
            uint64_t v338 = (char *)v230 + v278;
            uint64_t v361 = (char *)v229 + v278;
            uint64_t v279 = sub_253B07160();
            uint64_t v328 = *(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16);
            swift_bridgeObjectRetain();
            v328(v361, v338, v279);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v229, 0, 1, v90);
          }
          uint64_t v280 = *(int *)(v227 + 24);
          uint64_t v281 = a1 + v280;
          uint64_t v282 = a2 + v280;
          uint64_t v283 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v283 - 8) + 16))(v281, v282, v283);
          goto LABEL_148;
        case 5u:
          *(void *)a1 = *(void *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          uint64_t v92 = *(int *)(updated + 20);
          uint64_t v81 = (void *)(a1 + v92);
          uint64_t v82 = (void *)(a2 + v92);
          uint64_t v83 = type metadata accessor for TranscriptProtoStatementID(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83)) {
            goto LABEL_60;
          }
          goto LABEL_131;
        case 6u:
          *(void *)a1 = *(void *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
          uint64_t v93 = *(int *)(updated + 20);
          uint64_t v94 = (void *)(a1 + v93);
          uint64_t v95 = (void *)(a2 + v93);
          uint64_t v96 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v95, 1, v96))
          {
            uint64_t v97 = sub_253462A5C(&qword_269CE0448);
            memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            *uint64_t v94 = *v95;
            v94[1] = v95[1];
            v94[2] = v95[2];
            v94[3] = v95[3];
            uint64_t v284 = *(int *)(v96 + 24);
            uint64_t v339 = (char *)v95 + v284;
            uint64_t v362 = (char *)v94 + v284;
            uint64_t v285 = sub_253B07160();
            uint64_t v329 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v329(v362, v339, v285);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v94, 0, 1, v96);
          }
          goto LABEL_132;
        case 7u:
          *(void *)a1 = *(void *)a2;
          uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
          uint64_t v99 = a1 + v98;
          uint64_t v100 = a2 + v98;
          uint64_t v101 = sub_253B07160();
          uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16);
          swift_bridgeObjectRetain();
          v102(v99, v100, v101);
          goto LABEL_148;
        case 8u:
          *(void *)a1 = *(void *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
          uint64_t v103 = *(int *)(updated + 20);
          uint64_t v81 = (void *)(a1 + v103);
          uint64_t v82 = (void *)(a2 + v103);
          uint64_t v83 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83))
          {
LABEL_60:
            uint64_t v104 = sub_253462A5C(&qword_26B249528);
            memcpy(v81, v82, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
LABEL_131:
            *(_DWORD *)uint64_t v81 = *(_DWORD *)v82;
            v81[1] = v82[1];
            v81[2] = v82[2];
            uint64_t v286 = *(int *)(v83 + 24);
            uint64_t v340 = (char *)v82 + v286;
            uint64_t v363 = (char *)v81 + v286;
            uint64_t v287 = sub_253B07160();
            uint64_t v330 = *(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 16);
            swift_bridgeObjectRetain();
            v330(v363, v340, v287);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v81, 0, 1, v83);
          }
LABEL_132:
          uint64_t v288 = *(int *)(updated + 24);
          uint64_t v289 = a1 + v288;
          uint64_t v290 = a2 + v288;
          uint64_t v291 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v291 - 8) + 16))(v289, v290, v291);
          goto LABEL_148;
        case 9u:
          uint64_t v105 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v105))
          {
            uint64_t v106 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v232 = *(int *)(v105 + 24);
            uint64_t v355 = a1 + v232;
            uint64_t v233 = a2 + v232;
            uint64_t v234 = sub_253B07160();
            uint64_t v235 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v234 - 8) + 16);
            swift_bridgeObjectRetain();
            v235(v355, v233, v234);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v105);
          }
          uint64_t v236 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
          uint64_t v237 = a1 + v236;
          uint64_t v238 = a2 + v236;
          uint64_t v239 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v239 - 8) + 16))(v237, v238, v239);
          goto LABEL_148;
        case 0xAu:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
          *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
          uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
          uint64_t v108 = a1 + v107;
          uint64_t v109 = a2 + v107;
          uint64_t v110 = sub_253B07160();
          uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16);
          swift_bridgeObjectRetain();
          v111(v108, v109, v110);
          goto LABEL_148;
        case 0xBu:
          *(void *)a1 = *(void *)a2;
          uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
          uint64_t v113 = a1 + v112;
          uint64_t v114 = a2 + v112;
          uint64_t v115 = sub_253B07160();
          uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 16);
          swift_bridgeObjectRetain();
          v116(v113, v114, v115);
          goto LABEL_148;
        case 0xCu:
          uint64_t v117 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v117))
          {
            uint64_t v118 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v240 = *(int *)(v117 + 24);
            uint64_t v356 = a1 + v240;
            uint64_t v241 = a2 + v240;
            uint64_t v242 = sub_253B07160();
            uint64_t v243 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v242 - 8) + 16);
            swift_bridgeObjectRetain();
            v243(v356, v241, v242);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v117);
          }
          uint64_t v244 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
          uint64_t v245 = a1 + v244;
          uint64_t v246 = a2 + v244;
          uint64_t v247 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v247 - 8) + 16))(v245, v246, v247);
          goto LABEL_148;
        case 0xDu:
          *(void *)a1 = *(void *)a2;
          uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
          uint64_t v120 = a1 + v119;
          uint64_t v121 = a2 + v119;
          uint64_t v122 = sub_253B07160();
          uint64_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16);
          swift_bridgeObjectRetain();
          v123(v120, v121, v122);
          goto LABEL_148;
        case 0xEu:
          uint64_t v124 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v124))
          {
            uint64_t v125 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v248 = *(int *)(v124 + 24);
            uint64_t v357 = a1 + v248;
            uint64_t v249 = a2 + v248;
            uint64_t v250 = sub_253B07160();
            uint64_t v251 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v250 - 8) + 16);
            swift_bridgeObjectRetain();
            v251(v357, v249, v250);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v124);
          }
          uint64_t v252 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
          uint64_t v253 = a1 + v252;
          uint64_t v254 = a2 + v252;
          uint64_t v255 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v255 - 8) + 16))(v253, v254, v255);
          goto LABEL_148;
        case 0xFu:
          uint64_t v126 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v126))
          {
            uint64_t v127 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v256 = *(int *)(v126 + 24);
            uint64_t v358 = a1 + v256;
            uint64_t v257 = a2 + v256;
            uint64_t v258 = sub_253B07160();
            uint64_t v259 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v258 - 8) + 16);
            swift_bridgeObjectRetain();
            v259(v358, v257, v258);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v126);
          }
          uint64_t v260 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
          uint64_t v261 = a1 + v260;
          uint64_t v262 = a2 + v260;
          uint64_t v263 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v263 - 8) + 16))(v261, v262, v263);
          goto LABEL_148;
        case 0x10u:
          uint64_t v128 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v128))
          {
            uint64_t v129 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v129 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v264 = *(int *)(v128 + 24);
            uint64_t v359 = a1 + v264;
            uint64_t v265 = a2 + v264;
            uint64_t v266 = sub_253B07160();
            uint64_t v267 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v266 - 8) + 16);
            swift_bridgeObjectRetain();
            v267(v359, v265, v266);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v128);
          }
          uint64_t v268 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
          uint64_t v269 = a1 + v268;
          uint64_t v270 = a2 + v268;
          uint64_t v271 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v271 - 8) + 16))(v269, v270, v271);
          goto LABEL_148;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x16u:
          uint64_t v130 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(a1, a2, v130);
          goto LABEL_148;
        case 0x15u:
          uint64_t v131 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v131))
          {
            uint64_t v132 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v132 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v292 = *(int *)(v131 + 24);
            uint64_t v364 = a1 + v292;
            uint64_t v293 = a2 + v292;
            uint64_t v294 = sub_253B07160();
            uint64_t v295 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v294 - 8) + 16);
            swift_bridgeObjectRetain();
            v295(v364, v293, v294);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v131);
          }
          uint64_t v296 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
          uint64_t v297 = a1 + v296;
          uint64_t v298 = a2 + v296;
          uint64_t v299 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v299 - 8) + 16))(v297, v298, v299);
          goto LABEL_148;
        default:
          uint64_t v12 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v12))
          {
            uint64_t v13 = sub_253462A5C(&qword_269CE2378);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v13 - 8) + 64));
            goto LABEL_147;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 5:
              goto LABEL_107;
            case 4:
              *(void *)a1 = *(void *)a2;
              uint64_t v308 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              uint64_t v366 = a1 + v308;
              uint64_t v309 = a2 + v308;
              uint64_t v310 = sub_253B07160();
              uint64_t v311 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v310 - 8) + 16);
              swift_bridgeObjectRetain();
              v311(v366, v309, v310);
              break;
            case 3:
LABEL_107:
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = *(void *)(a2 + 8);
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_146:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v12);
LABEL_147:
              uint64_t v312 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
              uint64_t v313 = a1 + v312;
              uint64_t v314 = a2 + v312;
              uint64_t v315 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v315 - 8) + 16))(v313, v314, v315);
LABEL_148:
              swift_storeEnumTagMultiPayload();
              goto LABEL_149;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_146;
      }
    }
    sub_2536FA73C();
LABEL_8:
    uint64_t v11 = sub_253462A5C(&qword_269CE2360);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_149;
  }
  if (v8) {
    goto LABEL_8;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      goto LABEL_141;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v19 = type metadata accessor for TranscriptProtoPrefixExpression(0);
      uint64_t v20 = *(int *)(v19 + 20);
      uint64_t v21 = (void *)(a1 + v20);
      uint64_t v22 = (void *)(a2 + v20);
      uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23)) {
        goto LABEL_86;
      }
      goto LABEL_26;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v24 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      uint64_t v25 = v24[5];
      uint64_t v26 = (void *)(a1 + v25);
      uint64_t v27 = (void *)(a2 + v25);
      uint64_t v28 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = sub_253462A5C(&qword_26B249528);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
        v26[1] = v27[1];
        v26[2] = v27[2];
        uint64_t v133 = *(int *)(v28 + 24);
        uint64_t v331 = (char *)v27 + v133;
        uint64_t v341 = (char *)v26 + v133;
        uint64_t v134 = sub_253B07160();
        uint64_t v321 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16);
        swift_bridgeObjectRetain();
        v321(v341, v331, v134);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
      }
      uint64_t v135 = v24[6];
      uint64_t v136 = (void *)(a1 + v135);
      uint64_t v137 = (void *)(a2 + v135);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v135, 1, v28))
      {
        uint64_t v138 = sub_253462A5C(&qword_26B249528);
        memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v136 = *(_DWORD *)v137;
        v136[1] = v137[1];
        v136[2] = v137[2];
        uint64_t v204 = *(int *)(v28 + 24);
        uint64_t v334 = (char *)v137 + v204;
        uint64_t v351 = (char *)v136 + v204;
        uint64_t v205 = sub_253B07160();
        uint64_t v324 = *(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16);
        swift_bridgeObjectRetain();
        v324(v351, v334, v205);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v28);
      }
      uint64_t v206 = v24[7];
      uint64_t v207 = a1 + v206;
      uint64_t v208 = a2 + v206;
      uint64_t v209 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v209 - 8) + 16))(v207, v208, v209);
      goto LABEL_141;
    case 4u:
      uint64_t v30 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v30))
      {
        uint64_t v31 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v139 = *(int *)(v30 + 24);
        uint64_t v342 = a1 + v139;
        uint64_t v140 = a2 + v139;
        uint64_t v141 = sub_253B07160();
        uint64_t v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 16);
        swift_bridgeObjectRetain();
        v142(v342, v140, v141);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v30);
      }
      uint64_t v143 = type metadata accessor for TranscriptProtoIndexExpression(0);
      uint64_t v144 = *(int *)(v143 + 20);
      uint64_t v145 = (void *)(a1 + v144);
      uint64_t v146 = (void *)(a2 + v144);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v144, 1, v30))
      {
        uint64_t v147 = sub_253462A5C(&qword_26B249528);
        memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v145 = *(_DWORD *)v146;
        v145[1] = v146[1];
        v145[2] = v146[2];
        uint64_t v210 = *(int *)(v30 + 24);
        uint64_t v335 = (char *)v146 + v210;
        uint64_t v352 = (char *)v145 + v210;
        uint64_t v211 = sub_253B07160();
        uint64_t v325 = *(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16);
        swift_bridgeObjectRetain();
        v325(v352, v335, v211);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v145, 0, 1, v30);
      }
      uint64_t v212 = *(int *)(v143 + 24);
      uint64_t v213 = a1 + v212;
      uint64_t v214 = a2 + v212;
      uint64_t v215 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
      goto LABEL_141;
    case 5u:
      *(void *)a1 = *(void *)a2;
      uint64_t v19 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      uint64_t v32 = *(int *)(v19 + 20);
      uint64_t v21 = (void *)(a1 + v32);
      uint64_t v22 = (void *)(a2 + v32);
      uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23)) {
        goto LABEL_26;
      }
      goto LABEL_86;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t v19 = type metadata accessor for TranscriptProtoCallExpression(0);
      uint64_t v33 = *(int *)(v19 + 20);
      uint64_t v34 = (void *)(a1 + v33);
      uint64_t v35 = (void *)(a2 + v33);
      uint64_t v36 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_253462A5C(&qword_269CE0448);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        *uint64_t v34 = *v35;
        v34[1] = v35[1];
        v34[2] = v35[2];
        v34[3] = v35[3];
        uint64_t v148 = *(int *)(v36 + 24);
        uint64_t v332 = (char *)v35 + v148;
        uint64_t v343 = (char *)v34 + v148;
        uint64_t v149 = sub_253B07160();
        uint64_t v322 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v322(v343, v332, v149);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
      }
      goto LABEL_87;
    case 7u:
      *(void *)a1 = *(void *)a2;
      uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
      uint64_t v39 = a1 + v38;
      uint64_t v40 = a2 + v38;
      uint64_t v41 = sub_253B07160();
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
      swift_bridgeObjectRetain();
      v42(v39, v40, v41);
      goto LABEL_141;
    case 8u:
      *(void *)a1 = *(void *)a2;
      uint64_t v19 = type metadata accessor for TranscriptProtoPickExpression(0);
      uint64_t v43 = *(int *)(v19 + 20);
      uint64_t v21 = (void *)(a1 + v43);
      uint64_t v22 = (void *)(a2 + v43);
      uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
      {
LABEL_26:
        uint64_t v44 = sub_253462A5C(&qword_26B249528);
        memcpy(v21, v22, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
LABEL_86:
        *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
        v21[1] = v22[1];
        v21[2] = v22[2];
        uint64_t v150 = *(int *)(v23 + 24);
        uint64_t v333 = (char *)v22 + v150;
        uint64_t v344 = (char *)v21 + v150;
        uint64_t v151 = sub_253B07160();
        uint64_t v323 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
        swift_bridgeObjectRetain();
        v323(v344, v333, v151);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
      }
LABEL_87:
      uint64_t v152 = *(int *)(v19 + 24);
      uint64_t v153 = a1 + v152;
      uint64_t v154 = a2 + v152;
      uint64_t v155 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v154, v155);
      goto LABEL_141;
    case 9u:
      uint64_t v45 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v45))
      {
        uint64_t v46 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v156 = *(int *)(v45 + 24);
        uint64_t v345 = a1 + v156;
        uint64_t v157 = a2 + v156;
        uint64_t v158 = sub_253B07160();
        uint64_t v159 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 16);
        swift_bridgeObjectRetain();
        v159(v345, v157, v158);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v45);
      }
      uint64_t v160 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
      uint64_t v161 = a1 + v160;
      uint64_t v162 = a2 + v160;
      uint64_t v163 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 16))(v161, v162, v163);
      goto LABEL_141;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
      *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
      uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
      uint64_t v48 = a1 + v47;
      uint64_t v49 = a2 + v47;
      uint64_t v50 = sub_253B07160();
      uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      v51(v48, v49, v50);
      goto LABEL_141;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
      uint64_t v53 = a1 + v52;
      uint64_t v54 = a2 + v52;
      uint64_t v55 = sub_253B07160();
      uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
      swift_bridgeObjectRetain();
      v56(v53, v54, v55);
      goto LABEL_141;
    case 0xCu:
      uint64_t v57 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v57))
      {
        uint64_t v58 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v164 = *(int *)(v57 + 24);
        uint64_t v346 = a1 + v164;
        uint64_t v165 = a2 + v164;
        uint64_t v166 = sub_253B07160();
        uint64_t v167 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 16);
        swift_bridgeObjectRetain();
        v167(v346, v165, v166);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v57);
      }
      uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
      uint64_t v169 = a1 + v168;
      uint64_t v170 = a2 + v168;
      uint64_t v171 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
      goto LABEL_141;
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
      uint64_t v60 = a1 + v59;
      uint64_t v61 = a2 + v59;
      uint64_t v62 = sub_253B07160();
      uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16);
      swift_bridgeObjectRetain();
      v63(v60, v61, v62);
      goto LABEL_141;
    case 0xEu:
      uint64_t v64 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v64))
      {
        uint64_t v65 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v172 = *(int *)(v64 + 24);
        uint64_t v347 = a1 + v172;
        uint64_t v173 = a2 + v172;
        uint64_t v174 = sub_253B07160();
        uint64_t v175 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 16);
        swift_bridgeObjectRetain();
        v175(v347, v173, v174);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v64);
      }
      uint64_t v176 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
      uint64_t v177 = a1 + v176;
      uint64_t v178 = a2 + v176;
      uint64_t v179 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
      goto LABEL_141;
    case 0xFu:
      uint64_t v66 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v66))
      {
        uint64_t v67 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v180 = *(int *)(v66 + 24);
        uint64_t v348 = a1 + v180;
        uint64_t v181 = a2 + v180;
        uint64_t v182 = sub_253B07160();
        uint64_t v183 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 16);
        swift_bridgeObjectRetain();
        v183(v348, v181, v182);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v66);
      }
      uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
      uint64_t v185 = a1 + v184;
      uint64_t v186 = a2 + v184;
      uint64_t v187 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v187 - 8) + 16))(v185, v186, v187);
      goto LABEL_141;
    case 0x10u:
      uint64_t v68 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v68))
      {
        uint64_t v69 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v188 = *(int *)(v68 + 24);
        uint64_t v349 = a1 + v188;
        uint64_t v189 = a2 + v188;
        uint64_t v190 = sub_253B07160();
        uint64_t v191 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 16);
        swift_bridgeObjectRetain();
        v191(v349, v189, v190);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v68);
      }
      uint64_t v192 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
      uint64_t v193 = a1 + v192;
      uint64_t v194 = a2 + v192;
      uint64_t v195 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v194, v195);
      goto LABEL_141;
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x16u:
      uint64_t v70 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
      goto LABEL_141;
    case 0x15u:
      uint64_t v71 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v71))
      {
        uint64_t v72 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v196 = *(int *)(v71 + 24);
        uint64_t v350 = a1 + v196;
        uint64_t v197 = a2 + v196;
        uint64_t v198 = sub_253B07160();
        uint64_t v199 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 16);
        swift_bridgeObjectRetain();
        v199(v350, v197, v198);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v71);
      }
      uint64_t v200 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
      uint64_t v201 = a1 + v200;
      uint64_t v202 = a2 + v200;
      uint64_t v203 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
      goto LABEL_141;
    default:
      uint64_t v9 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE2378);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_140;
      }
      int v73 = swift_getEnumCaseMultiPayload();
      switch(v73)
      {
        case 5:
          goto LABEL_46;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v300 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          uint64_t v365 = a1 + v300;
          uint64_t v301 = a2 + v300;
          uint64_t v302 = sub_253B07160();
          uint64_t v303 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v302 - 8) + 16);
          swift_bridgeObjectRetain();
          v303(v365, v301, v302);
          goto LABEL_137;
        case 3:
LABEL_46:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          swift_bridgeObjectRetain();
LABEL_137:
          swift_storeEnumTagMultiPayload();
          goto LABEL_139;
      }
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_139:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v9);
LABEL_140:
      uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
      uint64_t v305 = a1 + v304;
      uint64_t v306 = a2 + v304;
      uint64_t v307 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v307 - 8) + 16))(v305, v306, v307);
LABEL_141:
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      break;
  }
LABEL_149:
  uint64_t v316 = *(int *)(a3 + 20);
  uint64_t v317 = a1 + v316;
  uint64_t v318 = a2 + v316;
  uint64_t v319 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v319 - 8) + 24))(v317, v318, v319);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoExpression(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2360);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v15 = *(int *)(updated + 20);
        uint64_t v16 = (_DWORD *)((char *)a1 + v15);
        uint64_t v17 = (_DWORD *)((char *)a2 + v15);
        uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18)) {
          goto LABEL_61;
        }
        goto LABEL_19;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v19 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v20 = v19[5];
        uint64_t v21 = (_DWORD *)((char *)a1 + v20);
        uint64_t v22 = (_DWORD *)((char *)a2 + v20);
        uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_26B249528);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          *uint64_t v21 = *v22;
          *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
          uint64_t v68 = *(int *)(v23 + 24);
          uint64_t v69 = (char *)v21 + v68;
          uint64_t v70 = (char *)v22 + v68;
          uint64_t v71 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
        }
        uint64_t v72 = v19[6];
        int v73 = (_DWORD *)((char *)a1 + v72);
        uint64_t v74 = (_DWORD *)((char *)a2 + v72);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v72, 1, v23))
        {
          uint64_t v75 = sub_253462A5C(&qword_26B249528);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          *int v73 = *v74;
          *(_OWORD *)(v73 + 2) = *(_OWORD *)(v74 + 2);
          uint64_t v125 = *(int *)(v23 + 24);
          uint64_t v126 = (char *)v73 + v125;
          uint64_t v127 = (char *)v74 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v23);
        }
        uint64_t v129 = v19[7];
        uint64_t v130 = (char *)a1 + v129;
        uint64_t v131 = (char *)a2 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        break;
      case 4u:
        uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v76 = *(int *)(v25 + 24);
          uint64_t v77 = (char *)a1 + v76;
          uint64_t v78 = (char *)a2 + v76;
          uint64_t v79 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v80 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v81 = *(int *)(v80 + 20);
        uint64_t v82 = (_DWORD *)((char *)a1 + v81);
        uint64_t v83 = (_DWORD *)((char *)a2 + v81);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v81, 1, v25))
        {
          uint64_t v84 = sub_253462A5C(&qword_26B249528);
          memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          *uint64_t v82 = *v83;
          *(_OWORD *)(v82 + 2) = *(_OWORD *)(v83 + 2);
          uint64_t v133 = *(int *)(v25 + 24);
          uint64_t v134 = (char *)v82 + v133;
          uint64_t v135 = (char *)v83 + v133;
          uint64_t v136 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v82, 0, 1, v25);
        }
        uint64_t v137 = *(int *)(v80 + 24);
        uint64_t v138 = (char *)a1 + v137;
        uint64_t v139 = (char *)a2 + v137;
        uint64_t v140 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v27 = *(int *)(updated + 20);
        uint64_t v16 = (_DWORD *)((char *)a1 + v27);
        uint64_t v17 = (_DWORD *)((char *)a2 + v27);
        uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18)) {
          goto LABEL_19;
        }
        goto LABEL_61;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v28 = *(int *)(updated + 20);
        uint64_t v29 = (_OWORD *)((char *)a1 + v28);
        uint64_t v30 = (_OWORD *)((char *)a2 + v28);
        uint64_t v31 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = sub_253462A5C(&qword_269CE0448);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          long long v141 = v30[1];
          *uint64_t v29 = *v30;
          v29[1] = v141;
          uint64_t v142 = *(int *)(v31 + 24);
          uint64_t v143 = (char *)v29 + v142;
          uint64_t v144 = (char *)v30 + v142;
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
        }
        goto LABEL_62;
      case 7u:
        *(void *)a1 = *(void *)a2;
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v37 = *(int *)(updated + 20);
        uint64_t v16 = (_DWORD *)((char *)a1 + v37);
        uint64_t v17 = (_DWORD *)((char *)a2 + v37);
        uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
        {
LABEL_19:
          uint64_t v38 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
LABEL_61:
          *uint64_t v16 = *v17;
          *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
          uint64_t v146 = *(int *)(v18 + 24);
          uint64_t v147 = (char *)v16 + v146;
          uint64_t v148 = (char *)v17 + v146;
          uint64_t v149 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
        }
LABEL_62:
        uint64_t v150 = *(int *)(updated + 24);
        uint64_t v151 = (char *)a1 + v150;
        uint64_t v152 = (char *)a2 + v150;
        uint64_t v153 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
        break;
      case 9u:
        uint64_t v39 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v39))
        {
          uint64_t v40 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v85 = *(int *)(v39 + 24);
          uint64_t v86 = (char *)a1 + v85;
          uint64_t v87 = (char *)a2 + v85;
          uint64_t v88 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v39);
        }
        uint64_t v89 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v90 = (char *)a1 + v89;
        uint64_t v91 = (char *)a2 + v89;
        uint64_t v92 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
        break;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_WORD *)((char *)a1 + 17) = *(_WORD *)((char *)a2 + 17);
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        break;
      case 0xCu:
        uint64_t v49 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v93 = *(int *)(v49 + 24);
          uint64_t v94 = (char *)a1 + v93;
          uint64_t v95 = (char *)a2 + v93;
          uint64_t v96 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
        }
        uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v98 = (char *)a1 + v97;
        uint64_t v99 = (char *)a2 + v97;
        uint64_t v100 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        break;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        break;
      case 0xEu:
        uint64_t v55 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v55))
        {
          uint64_t v56 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v101 = *(int *)(v55 + 24);
          uint64_t v102 = (char *)a1 + v101;
          uint64_t v103 = (char *)a2 + v101;
          uint64_t v104 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v55);
        }
        uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v106 = (char *)a1 + v105;
        uint64_t v107 = (char *)a2 + v105;
        uint64_t v108 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
        break;
      case 0xFu:
        uint64_t v57 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v57))
        {
          uint64_t v58 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v109 = *(int *)(v57 + 24);
          uint64_t v110 = (char *)a1 + v109;
          uint64_t v111 = (char *)a2 + v109;
          uint64_t v112 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v57);
        }
        uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        uint64_t v116 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
        break;
      case 0x10u:
        uint64_t v59 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v59))
        {
          uint64_t v60 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v117 = *(int *)(v59 + 24);
          uint64_t v118 = (char *)a1 + v117;
          uint64_t v119 = (char *)a2 + v117;
          uint64_t v120 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v59);
        }
        uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v122 = (char *)a1 + v121;
        uint64_t v123 = (char *)a2 + v121;
        uint64_t v124 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
        break;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v61 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
        break;
      case 0x15u:
        uint64_t v62 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v62))
        {
          uint64_t v63 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          uint64_t v154 = *(int *)(v62 + 24);
          uint64_t v155 = (char *)a1 + v154;
          uint64_t v156 = (char *)a2 + v154;
          uint64_t v157 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v62);
        }
        uint64_t v158 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v159 = (char *)a1 + v158;
        uint64_t v160 = (char *)a2 + v158;
        uint64_t v161 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v159, v160, v161);
        break;
      default:
        uint64_t v8 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
        {
          uint64_t v9 = sub_253462A5C(&qword_269CE2378);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v64 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v65 = (char *)a1 + v64;
            uint64_t v66 = (char *)a2 + v64;
            uint64_t v67 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
        }
        uint64_t v162 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
        uint64_t v163 = (char *)a1 + v162;
        uint64_t v164 = (char *)a2 + v162;
        uint64_t v165 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v166 = *(int *)(a3 + 20);
  uint64_t v167 = (char *)a1 + v166;
  uint64_t v168 = (char *)a2 + v166;
  uint64_t v169 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 32))(v167, v168, v169);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v15 = a1 + v14;
          uint64_t v16 = a2 + v14;
          uint64_t v17 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
          break;
        case 2u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
          uint64_t v19 = *(int *)(updated + 20);
          uint64_t v20 = (_DWORD *)(a1 + v19);
          uint64_t v21 = (_DWORD *)(a2 + v19);
          uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22)) {
            goto LABEL_84;
          }
          goto LABEL_26;
        case 3u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v23 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          uint64_t v24 = v23[5];
          uint64_t v25 = (_DWORD *)(a1 + v24);
          uint64_t v26 = (_DWORD *)(a2 + v24);
          uint64_t v27 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
          {
            uint64_t v28 = sub_253462A5C(&qword_26B249528);
            memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            _DWORD *v25 = *v26;
            *(_OWORD *)(v25 + 2) = *(_OWORD *)(v26 + 2);
            uint64_t v126 = *(int *)(v27 + 24);
            uint64_t v127 = (char *)v25 + v126;
            uint64_t v128 = (char *)v26 + v126;
            uint64_t v129 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
          }
          uint64_t v130 = v23[6];
          uint64_t v131 = (_DWORD *)(a1 + v130);
          uint64_t v132 = (_DWORD *)(a2 + v130);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v130, 1, v27))
          {
            uint64_t v133 = sub_253462A5C(&qword_26B249528);
            memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
          }
          else
          {
            *uint64_t v131 = *v132;
            *(_OWORD *)(v131 + 2) = *(_OWORD *)(v132 + 2);
            uint64_t v204 = *(int *)(v27 + 24);
            uint64_t v205 = (char *)v131 + v204;
            uint64_t v206 = (char *)v132 + v204;
            uint64_t v207 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 32))(v205, v206, v207);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v131, 0, 1, v27);
          }
          uint64_t v208 = v23[7];
          uint64_t v209 = a1 + v208;
          uint64_t v210 = a2 + v208;
          uint64_t v211 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v211 - 8) + 32))(v209, v210, v211);
          break;
        case 4u:
          uint64_t v29 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v29))
          {
            uint64_t v30 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v134 = *(int *)(v29 + 24);
            uint64_t v135 = a1 + v134;
            uint64_t v136 = a2 + v134;
            uint64_t v137 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v29);
          }
          uint64_t v138 = type metadata accessor for TranscriptProtoIndexExpression(0);
          uint64_t v139 = *(int *)(v138 + 20);
          uint64_t v140 = (_DWORD *)(a1 + v139);
          long long v141 = (_DWORD *)(a2 + v139);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v139, 1, v29))
          {
            uint64_t v142 = sub_253462A5C(&qword_26B249528);
            memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            _DWORD *v140 = *v141;
            *(_OWORD *)(v140 + 2) = *(_OWORD *)(v141 + 2);
            uint64_t v212 = *(int *)(v29 + 24);
            uint64_t v213 = (char *)v140 + v212;
            uint64_t v214 = (char *)v141 + v212;
            uint64_t v215 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v213, v214, v215);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, v29);
          }
          uint64_t v216 = *(int *)(v138 + 24);
          uint64_t v217 = a1 + v216;
          uint64_t v218 = a2 + v216;
          uint64_t v219 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          uint64_t v31 = *(int *)(updated + 20);
          uint64_t v20 = (_DWORD *)(a1 + v31);
          uint64_t v21 = (_DWORD *)(a2 + v31);
          uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22)) {
            goto LABEL_26;
          }
          goto LABEL_84;
        case 6u:
          *(void *)a1 = *(void *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
          uint64_t v32 = *(int *)(updated + 20);
          uint64_t v33 = (_OWORD *)(a1 + v32);
          uint64_t v34 = (_OWORD *)(a2 + v32);
          uint64_t v35 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
          {
            uint64_t v36 = sub_253462A5C(&qword_269CE0448);
            memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            long long v143 = v34[1];
            *uint64_t v33 = *v34;
            v33[1] = v143;
            uint64_t v144 = *(int *)(v35 + 24);
            uint64_t v145 = (char *)v33 + v144;
            uint64_t v146 = (char *)v34 + v144;
            uint64_t v147 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v145, v146, v147);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
          }
          goto LABEL_85;
        case 7u:
          *(void *)a1 = *(void *)a2;
          uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
          uint64_t v38 = a1 + v37;
          uint64_t v39 = a2 + v37;
          uint64_t v40 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
          break;
        case 8u:
          *(void *)a1 = *(void *)a2;
          uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
          uint64_t v41 = *(int *)(updated + 20);
          uint64_t v20 = (_DWORD *)(a1 + v41);
          uint64_t v21 = (_DWORD *)(a2 + v41);
          uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
          {
LABEL_26:
            uint64_t v42 = sub_253462A5C(&qword_26B249528);
            memcpy(v20, v21, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
LABEL_84:
            *uint64_t v20 = *v21;
            *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
            uint64_t v148 = *(int *)(v22 + 24);
            uint64_t v149 = (char *)v20 + v148;
            uint64_t v150 = (char *)v21 + v148;
            uint64_t v151 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v149, v150, v151);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
          }
LABEL_85:
          uint64_t v152 = *(int *)(updated + 24);
          uint64_t v153 = a1 + v152;
          uint64_t v154 = a2 + v152;
          uint64_t v155 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
          break;
        case 9u:
          uint64_t v43 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v43))
          {
            uint64_t v44 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v156 = *(int *)(v43 + 24);
            uint64_t v157 = a1 + v156;
            uint64_t v158 = a2 + v156;
            uint64_t v159 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 32))(v157, v158, v159);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v43);
          }
          uint64_t v160 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
          uint64_t v161 = a1 + v160;
          uint64_t v162 = a2 + v160;
          uint64_t v163 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 32))(v161, v162, v163);
          break;
        case 0xAu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
          uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
          uint64_t v46 = a1 + v45;
          uint64_t v47 = a2 + v45;
          uint64_t v48 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          break;
        case 0xBu:
          *(void *)a1 = *(void *)a2;
          uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
          uint64_t v50 = a1 + v49;
          uint64_t v51 = a2 + v49;
          uint64_t v52 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          break;
        case 0xCu:
          uint64_t v53 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v164 = *(int *)(v53 + 24);
            uint64_t v165 = a1 + v164;
            uint64_t v166 = a2 + v164;
            uint64_t v167 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v53);
          }
          uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
          uint64_t v169 = a1 + v168;
          uint64_t v170 = a2 + v168;
          uint64_t v171 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
          break;
        case 0xDu:
          *(void *)a1 = *(void *)a2;
          uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
          uint64_t v56 = a1 + v55;
          uint64_t v57 = a2 + v55;
          uint64_t v58 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          break;
        case 0xEu:
          uint64_t v59 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v59))
          {
            uint64_t v60 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v172 = *(int *)(v59 + 24);
            uint64_t v173 = a1 + v172;
            uint64_t v174 = a2 + v172;
            uint64_t v175 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 32))(v173, v174, v175);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v59);
          }
          uint64_t v176 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
          uint64_t v177 = a1 + v176;
          uint64_t v178 = a2 + v176;
          uint64_t v179 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 32))(v177, v178, v179);
          break;
        case 0xFu:
          uint64_t v61 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v61))
          {
            uint64_t v62 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v180 = *(int *)(v61 + 24);
            uint64_t v181 = a1 + v180;
            uint64_t v182 = a2 + v180;
            uint64_t v183 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v183 - 8) + 32))(v181, v182, v183);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v61);
          }
          uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
          uint64_t v185 = a1 + v184;
          uint64_t v186 = a2 + v184;
          uint64_t v187 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
          break;
        case 0x10u:
          uint64_t v63 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v63))
          {
            uint64_t v64 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v188 = *(int *)(v63 + 24);
            uint64_t v189 = a1 + v188;
            uint64_t v190 = a2 + v188;
            uint64_t v191 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 32))(v189, v190, v191);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v63);
          }
          uint64_t v192 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
          uint64_t v193 = a1 + v192;
          uint64_t v194 = a2 + v192;
          uint64_t v195 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
          break;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x16u:
          uint64_t v65 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
          break;
        case 0x15u:
          uint64_t v66 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v196 = *(int *)(v66 + 24);
            uint64_t v197 = a1 + v196;
            uint64_t v198 = a2 + v196;
            uint64_t v199 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v199 - 8) + 32))(v197, v198, v199);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v66);
          }
          uint64_t v200 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
          uint64_t v201 = a1 + v200;
          uint64_t v202 = a2 + v200;
          uint64_t v203 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v203 - 8) + 32))(v201, v202, v203);
          break;
        default:
          uint64_t v9 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v9))
          {
            uint64_t v10 = sub_253462A5C(&qword_269CE2378);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              *(void *)a1 = *(void *)a2;
              uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              uint64_t v69 = a1 + v68;
              uint64_t v70 = a2 + v68;
              uint64_t v71 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v9 - 8) + 64));
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v9);
          }
          uint64_t v220 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
          uint64_t v221 = a1 + v220;
          uint64_t v222 = a2 + v220;
          uint64_t v223 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      goto LABEL_139;
    }
LABEL_8:
    uint64_t v11 = sub_253462A5C(&qword_269CE2360);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_139;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v73 = a1 + v72;
        uint64_t v74 = a2 + v72;
        uint64_t v75 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v76 = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v77 = *(int *)(v76 + 20);
        uint64_t v78 = (_DWORD *)(a1 + v77);
        uint64_t v79 = (_DWORD *)(a2 + v77);
        uint64_t v80 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80)) {
          goto LABEL_131;
        }
        goto LABEL_58;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v81 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v82 = v81[5];
        uint64_t v83 = (_DWORD *)(a1 + v82);
        uint64_t v84 = (_DWORD *)(a2 + v82);
        uint64_t v85 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_253462A5C(&qword_26B249528);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          *uint64_t v83 = *v84;
          *(_OWORD *)(v83 + 2) = *(_OWORD *)(v84 + 2);
          uint64_t v224 = *(int *)(v85 + 24);
          uint64_t v225 = (char *)v83 + v224;
          uint64_t v226 = (char *)v84 + v224;
          uint64_t v227 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v225, v226, v227);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v85);
        }
        uint64_t v228 = v81[6];
        uint64_t v229 = (_DWORD *)(a1 + v228);
        uint64_t v230 = (_DWORD *)(a2 + v228);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v228, 1, v85))
        {
          uint64_t v231 = sub_253462A5C(&qword_26B249528);
          memcpy(v229, v230, *(void *)(*(void *)(v231 - 8) + 64));
        }
        else
        {
          *uint64_t v229 = *v230;
          *(_OWORD *)(v229 + 2) = *(_OWORD *)(v230 + 2);
          uint64_t v281 = *(int *)(v85 + 24);
          uint64_t v282 = (char *)v229 + v281;
          uint64_t v283 = (char *)v230 + v281;
          uint64_t v284 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 32))(v282, v283, v284);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v229, 0, 1, v85);
        }
        uint64_t v285 = v81[7];
        uint64_t v286 = a1 + v285;
        uint64_t v287 = a2 + v285;
        uint64_t v288 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v288 - 8) + 32))(v286, v287, v288);
        break;
      case 4u:
        uint64_t v87 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v87))
        {
          uint64_t v88 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v232 = *(int *)(v87 + 24);
          uint64_t v233 = a1 + v232;
          uint64_t v234 = a2 + v232;
          uint64_t v235 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v87);
        }
        uint64_t v236 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v237 = *(int *)(v236 + 20);
        uint64_t v238 = (_DWORD *)(a1 + v237);
        uint64_t v239 = (_DWORD *)(a2 + v237);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v237, 1, v87))
        {
          uint64_t v240 = sub_253462A5C(&qword_26B249528);
          memcpy(v238, v239, *(void *)(*(void *)(v240 - 8) + 64));
        }
        else
        {
          *uint64_t v238 = *v239;
          *(_OWORD *)(v238 + 2) = *(_OWORD *)(v239 + 2);
          uint64_t v289 = *(int *)(v87 + 24);
          uint64_t v290 = (char *)v238 + v289;
          uint64_t v291 = (char *)v239 + v289;
          uint64_t v292 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 32))(v290, v291, v292);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v238, 0, 1, v87);
        }
        uint64_t v293 = *(int *)(v236 + 24);
        uint64_t v294 = a1 + v293;
        uint64_t v295 = a2 + v293;
        uint64_t v296 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v296 - 8) + 32))(v294, v295, v296);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v76 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v89 = *(int *)(v76 + 20);
        uint64_t v78 = (_DWORD *)(a1 + v89);
        uint64_t v79 = (_DWORD *)(a2 + v89);
        uint64_t v80 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80)) {
          goto LABEL_58;
        }
        goto LABEL_131;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t v76 = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v90 = *(int *)(v76 + 20);
        uint64_t v91 = (_OWORD *)(a1 + v90);
        uint64_t v92 = (_OWORD *)(a2 + v90);
        uint64_t v93 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v93))
        {
          uint64_t v94 = sub_253462A5C(&qword_269CE0448);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          long long v301 = v92[1];
          *uint64_t v91 = *v92;
          v91[1] = v301;
          uint64_t v302 = *(int *)(v93 + 24);
          uint64_t v303 = (char *)v91 + v302;
          uint64_t v304 = (char *)v92 + v302;
          uint64_t v305 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 32))(v303, v304, v305);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v93);
        }
        goto LABEL_132;
      case 7u:
        *(void *)a1 = *(void *)a2;
        uint64_t v95 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v96 = a1 + v95;
        uint64_t v97 = a2 + v95;
        uint64_t v98 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        uint64_t v76 = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v99 = *(int *)(v76 + 20);
        uint64_t v78 = (_DWORD *)(a1 + v99);
        uint64_t v79 = (_DWORD *)(a2 + v99);
        uint64_t v80 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80))
        {
LABEL_58:
          uint64_t v100 = sub_253462A5C(&qword_26B249528);
          memcpy(v78, v79, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
LABEL_131:
          *uint64_t v78 = *v79;
          *(_OWORD *)(v78 + 2) = *(_OWORD *)(v79 + 2);
          uint64_t v306 = *(int *)(v80 + 24);
          uint64_t v307 = (char *)v78 + v306;
          uint64_t v308 = (char *)v79 + v306;
          uint64_t v309 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 32))(v307, v308, v309);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v78, 0, 1, v80);
        }
LABEL_132:
        uint64_t v310 = *(int *)(v76 + 24);
        uint64_t v311 = a1 + v310;
        uint64_t v312 = a2 + v310;
        uint64_t v313 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v313 - 8) + 32))(v311, v312, v313);
        break;
      case 9u:
        uint64_t v101 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v101))
        {
          uint64_t v102 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v241 = *(int *)(v101 + 24);
          uint64_t v242 = a1 + v241;
          uint64_t v243 = a2 + v241;
          uint64_t v244 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v244 - 8) + 32))(v242, v243, v244);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v101);
        }
        uint64_t v245 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v246 = a1 + v245;
        uint64_t v247 = a2 + v245;
        uint64_t v248 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v248 - 8) + 32))(v246, v247, v248);
        break;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
        uint64_t v103 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v104 = a1 + v103;
        uint64_t v105 = a2 + v103;
        uint64_t v106 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v108 = a1 + v107;
        uint64_t v109 = a2 + v107;
        uint64_t v110 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
        break;
      case 0xCu:
        uint64_t v111 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v111))
        {
          uint64_t v112 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v112 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v249 = *(int *)(v111 + 24);
          uint64_t v250 = a1 + v249;
          uint64_t v251 = a2 + v249;
          uint64_t v252 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v252 - 8) + 32))(v250, v251, v252);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v111);
        }
        uint64_t v253 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v254 = a1 + v253;
        uint64_t v255 = a2 + v253;
        uint64_t v256 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
        break;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v114 = a1 + v113;
        uint64_t v115 = a2 + v113;
        uint64_t v116 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
        break;
      case 0xEu:
        uint64_t v117 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v117))
        {
          uint64_t v118 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v257 = *(int *)(v117 + 24);
          uint64_t v258 = a1 + v257;
          uint64_t v259 = a2 + v257;
          uint64_t v260 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v260 - 8) + 32))(v258, v259, v260);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v117);
        }
        uint64_t v261 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v262 = a1 + v261;
        uint64_t v263 = a2 + v261;
        uint64_t v264 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v264 - 8) + 32))(v262, v263, v264);
        break;
      case 0xFu:
        uint64_t v119 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v119))
        {
          uint64_t v120 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v265 = *(int *)(v119 + 24);
          uint64_t v266 = a1 + v265;
          uint64_t v267 = a2 + v265;
          uint64_t v268 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v268 - 8) + 32))(v266, v267, v268);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v119);
        }
        uint64_t v269 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v270 = a1 + v269;
        uint64_t v271 = a2 + v269;
        uint64_t v272 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v272 - 8) + 32))(v270, v271, v272);
        break;
      case 0x10u:
        uint64_t v121 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v121))
        {
          uint64_t v122 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v122 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v273 = *(int *)(v121 + 24);
          uint64_t v274 = a1 + v273;
          uint64_t v275 = a2 + v273;
          uint64_t v276 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v276 - 8) + 32))(v274, v275, v276);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v121);
        }
        uint64_t v277 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v278 = a1 + v277;
        uint64_t v279 = a2 + v277;
        uint64_t v280 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v280 - 8) + 32))(v278, v279, v280);
        break;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v123 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 32))(a1, a2, v123);
        break;
      case 0x15u:
        uint64_t v124 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v124))
        {
          uint64_t v125 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v314 = *(int *)(v124 + 24);
          uint64_t v315 = a1 + v314;
          uint64_t v316 = a2 + v314;
          uint64_t v317 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v317 - 8) + 32))(v315, v316, v317);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v124);
        }
        uint64_t v318 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v319 = a1 + v318;
        uint64_t v320 = a2 + v318;
        uint64_t v321 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v321 - 8) + 32))(v319, v320, v321);
        break;
      default:
        uint64_t v12 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v12))
        {
          uint64_t v13 = sub_253462A5C(&qword_269CE2378);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v297 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v298 = a1 + v297;
            uint64_t v299 = a2 + v297;
            uint64_t v300 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 32))(v298, v299, v300);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v12);
        }
        uint64_t v322 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
        uint64_t v323 = a1 + v322;
        uint64_t v324 = a2 + v322;
        uint64_t v325 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v325 - 8) + 32))(v323, v324, v325);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_139:
  uint64_t v326 = *(int *)(a3 + 20);
  uint64_t v327 = a1 + v326;
  uint64_t v328 = a2 + v326;
  uint64_t v329 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v329 - 8) + 40))(v327, v328, v329);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538F4D4C);
}

uint64_t sub_2538F4D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2360);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538F4D6C);
}

uint64_t sub_2538F4D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2360);
}

void sub_2538F4D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExpressionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v9 = a2[2];
        a1[1] = a2[1];
        a1[2] = v9;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_73;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v16 = *(int *)(updated + 20);
        uint64_t v17 = (uint64_t *)((char *)a1 + v16);
        uint64_t v18 = (uint64_t *)((char *)a2 + v16);
        uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19)) {
          goto LABEL_63;
        }
        goto LABEL_19;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v20 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v21 = v20[5];
        uint64_t v22 = (uint64_t *)((char *)a1 + v21);
        uint64_t v23 = (uint64_t *)((char *)a2 + v21);
        uint64_t v24 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_26B249528);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
          uint64_t v72 = v23[2];
          v22[1] = v23[1];
          v22[2] = v72;
          uint64_t v73 = *(int *)(v24 + 24);
          uint64_t v190 = (char *)v23 + v73;
          uint64_t v195 = (char *)v22 + v73;
          uint64_t v74 = sub_253B07160();
          uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(v195, v190, v74);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
        }
        uint64_t v76 = v20[6];
        uint64_t v77 = (uint64_t *)((char *)a1 + v76);
        uint64_t v78 = (uint64_t *)((char *)a2 + v76);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v76, 1, v24))
        {
          uint64_t v79 = sub_253462A5C(&qword_26B249528);
          memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
          uint64_t v141 = v78[2];
          v77[1] = v78[1];
          v77[2] = v141;
          uint64_t v142 = *(int *)(v24 + 24);
          uint64_t v191 = (char *)v78 + v142;
          uint64_t v196 = (char *)v77 + v142;
          uint64_t v143 = sub_253B07160();
          uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
          swift_bridgeObjectRetain();
          v144(v196, v191, v143);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v24);
        }
        uint64_t v145 = v20[7];
        uint64_t v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        uint64_t v148 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
        goto LABEL_73;
      case 4u:
        uint64_t v26 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v80 = a2[2];
          a1[1] = a2[1];
          a1[2] = v80;
          uint64_t v81 = *(int *)(v26 + 24);
          uint64_t v82 = (char *)a1 + v81;
          uint64_t v83 = (char *)a2 + v81;
          uint64_t v84 = sub_253B07160();
          uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          v85(v82, v83, v84);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
        }
        uint64_t v86 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v87 = *(int *)(v86 + 20);
        uint64_t v88 = (uint64_t *)((char *)a1 + v87);
        uint64_t v89 = (uint64_t *)((char *)a2 + v87);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v87, 1, v26))
        {
          uint64_t v90 = sub_253462A5C(&qword_26B249528);
          memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v88 = *(_DWORD *)v89;
          uint64_t v149 = v89[2];
          v88[1] = v89[1];
          v88[2] = v149;
          uint64_t v150 = *(int *)(v26 + 24);
          uint64_t v192 = (char *)v89 + v150;
          uint64_t v197 = (char *)v88 + v150;
          uint64_t v151 = sub_253B07160();
          uint64_t v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
          swift_bridgeObjectRetain();
          v152(v197, v192, v151);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v88, 0, 1, v26);
        }
        uint64_t v153 = *(int *)(v86 + 24);
        uint64_t v154 = (char *)a1 + v153;
        uint64_t v155 = (char *)a2 + v153;
        uint64_t v156 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
        goto LABEL_73;
      case 5u:
        *a1 = *a2;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v28 = *(int *)(updated + 20);
        uint64_t v17 = (uint64_t *)((char *)a1 + v28);
        uint64_t v18 = (uint64_t *)((char *)a2 + v28);
        uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19)) {
          goto LABEL_19;
        }
        goto LABEL_63;
      case 6u:
        *a1 = *a2;
        uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v29 = *(int *)(updated + 20);
        uint64_t v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        uint64_t v32 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CE0448);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          uint64_t v157 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v157;
          uint64_t v158 = v31[3];
          v30[2] = v31[2];
          v30[3] = v158;
          uint64_t v159 = *(int *)(v32 + 24);
          uint64_t v193 = (char *)v31 + v159;
          uint64_t v198 = (char *)v30 + v159;
          uint64_t v160 = sub_253B07160();
          uint64_t v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v189(v198, v193, v160);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
        }
        goto LABEL_64;
      case 7u:
        *a1 = *a2;
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v35, v36, v37);
        goto LABEL_73;
      case 8u:
        *a1 = *a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v39 = *(int *)(updated + 20);
        uint64_t v17 = (uint64_t *)((char *)a1 + v39);
        uint64_t v18 = (uint64_t *)((char *)a2 + v39);
        uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
LABEL_19:
          uint64_t v40 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
LABEL_63:
          *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
          uint64_t v161 = v18[2];
          v17[1] = v18[1];
          v17[2] = v161;
          uint64_t v162 = *(int *)(v19 + 24);
          uint64_t v194 = (char *)v18 + v162;
          uint64_t v199 = (char *)v17 + v162;
          uint64_t v163 = sub_253B07160();
          uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
          swift_bridgeObjectRetain();
          v164(v199, v194, v163);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
        }
LABEL_64:
        uint64_t v165 = *(int *)(updated + 24);
        uint64_t v166 = (char *)a1 + v165;
        uint64_t v167 = (char *)a2 + v165;
        uint64_t v168 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
        goto LABEL_73;
      case 9u:
        uint64_t v41 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v91 = a2[2];
          a1[1] = a2[1];
          a1[2] = v91;
          uint64_t v92 = *(int *)(v41 + 24);
          uint64_t v93 = (char *)a1 + v92;
          uint64_t v94 = (char *)a2 + v92;
          uint64_t v95 = sub_253B07160();
          uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v96(v93, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v41);
        }
        uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v98 = (char *)a1 + v97;
        uint64_t v99 = (char *)a2 + v97;
        uint64_t v100 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
        goto LABEL_73;
      case 0xAu:
        uint64_t v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_WORD *)((char *)a1 + 17) = *(_WORD *)((char *)a2 + 17);
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B07160();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        goto LABEL_73;
      case 0xBu:
        *a1 = *a2;
        uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v50 = (char *)a1 + v49;
        uint64_t v51 = (char *)a2 + v49;
        uint64_t v52 = sub_253B07160();
        uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v50, v51, v52);
        goto LABEL_73;
      case 0xCu:
        uint64_t v54 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v54))
        {
          uint64_t v55 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v101 = a2[2];
          a1[1] = a2[1];
          a1[2] = v101;
          uint64_t v102 = *(int *)(v54 + 24);
          uint64_t v103 = (char *)a1 + v102;
          uint64_t v104 = (char *)a2 + v102;
          uint64_t v105 = sub_253B07160();
          uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
          swift_bridgeObjectRetain();
          v106(v103, v104, v105);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v54);
        }
        uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v108 = (char *)a1 + v107;
        uint64_t v109 = (char *)a2 + v107;
        uint64_t v110 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
        goto LABEL_73;
      case 0xDu:
        *a1 = *a2;
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_253B07160();
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v57, v58, v59);
        goto LABEL_73;
      case 0xEu:
        uint64_t v61 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v61))
        {
          uint64_t v62 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v111 = a2[2];
          a1[1] = a2[1];
          a1[2] = v111;
          uint64_t v112 = *(int *)(v61 + 24);
          uint64_t v113 = (char *)a1 + v112;
          uint64_t v114 = (char *)a2 + v112;
          uint64_t v115 = sub_253B07160();
          uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
          swift_bridgeObjectRetain();
          v116(v113, v114, v115);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v61);
        }
        uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v118 = (char *)a1 + v117;
        uint64_t v119 = (char *)a2 + v117;
        uint64_t v120 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
        goto LABEL_73;
      case 0xFu:
        uint64_t v63 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v63))
        {
          uint64_t v64 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v121 = a2[2];
          a1[1] = a2[1];
          a1[2] = v121;
          uint64_t v122 = *(int *)(v63 + 24);
          uint64_t v123 = (char *)a1 + v122;
          uint64_t v124 = (char *)a2 + v122;
          uint64_t v125 = sub_253B07160();
          uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
          swift_bridgeObjectRetain();
          v126(v123, v124, v125);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v63);
        }
        uint64_t v127 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v128 = (char *)a1 + v127;
        uint64_t v129 = (char *)a2 + v127;
        uint64_t v130 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        goto LABEL_73;
      case 0x10u:
        uint64_t v65 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v65))
        {
          uint64_t v66 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v131 = a2[2];
          a1[1] = a2[1];
          a1[2] = v131;
          uint64_t v132 = *(int *)(v65 + 24);
          uint64_t v133 = (char *)a1 + v132;
          uint64_t v134 = (char *)a2 + v132;
          uint64_t v135 = sub_253B07160();
          uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
          swift_bridgeObjectRetain();
          v136(v133, v134, v135);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v65);
        }
        uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v138 = (char *)a1 + v137;
        uint64_t v139 = (char *)a2 + v137;
        uint64_t v140 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
        goto LABEL_73;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v67 = sub_253B07160();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
        goto LABEL_73;
      case 0x15u:
        uint64_t v68 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v68))
        {
          uint64_t v69 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v169 = a2[2];
          a1[1] = a2[1];
          a1[2] = v169;
          uint64_t v170 = *(int *)(v68 + 24);
          uint64_t v171 = (char *)a1 + v170;
          uint64_t v172 = (char *)a2 + v170;
          uint64_t v173 = sub_253B07160();
          uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
          swift_bridgeObjectRetain();
          v174(v171, v172, v173);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v68);
        }
        uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v176 = (char *)a1 + v175;
        uint64_t v177 = (char *)a2 + v175;
        uint64_t v178 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
        goto LABEL_73;
      default:
        uint64_t v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
        {
          uint64_t v7 = sub_253462A5C(&qword_269CE2378);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_72;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_39;
          case 4:
            *a1 = *a2;
            uint64_t v179 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v180 = (char *)a1 + v179;
            uint64_t v181 = (char *)a2 + v179;
            uint64_t v182 = sub_253B07160();
            uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16);
            swift_bridgeObjectRetain();
            v183(v180, v181, v182);
            goto LABEL_69;
          case 3:
LABEL_39:
            uint64_t v71 = a2[1];
            *a1 = *a2;
            a1[1] = v71;
            swift_bridgeObjectRetain();
LABEL_69:
            swift_storeEnumTagMultiPayload();
            goto LABEL_71;
        }
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_71:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_72:
        uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
        uint64_t v185 = (char *)a1 + v184;
        uint64_t v186 = (char *)a2 + v184;
        uint64_t v187 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16))(v185, v186, v187);
LABEL_73:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoExpressionEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v3)) {
        goto LABEL_49;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          goto LABEL_6;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v46 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          uint64_t v47 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
          break;
        case 3:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
      }
LABEL_49:
      uint64_t v25 = type metadata accessor for TranscriptProtoValueExpression(0);
      goto LABEL_50;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      goto LABEL_51;
    case 2:
      uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
      goto LABEL_24;
    case 3:
      uint64_t v7 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      uint64_t v8 = a1 + v7[5];
      uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v8 + *(int *)(v9 + 24);
        uint64_t v11 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + v7[6];
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v9))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v12 + *(int *)(v9 + 24);
        uint64_t v14 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
      uint64_t v5 = v7[7];
      goto LABEL_51;
    case 4:
      uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v15))
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = a1 + *(int *)(v15 + 24);
        uint64_t v17 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      uint64_t v18 = type metadata accessor for TranscriptProtoIndexExpression(0);
      uint64_t v19 = a1 + *(int *)(v18 + 20);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v15))
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v19 + *(int *)(v15 + 24);
        uint64_t v21 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      }
      uint64_t v5 = *(int *)(v18 + 24);
      goto LABEL_51;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      goto LABEL_24;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v22 = type metadata accessor for TranscriptProtoCallExpression(0);
      uint64_t v23 = a1 + *(int *)(v22 + 20);
      uint64_t v24 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v24)) {
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      goto LABEL_25;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for TranscriptProtoSayExpression(0);
      goto LABEL_50;
    case 8:
      uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_24:
      uint64_t v22 = updated;
      uint64_t v23 = a1 + *(int *)(updated + 20);
      uint64_t v24 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v24))
      {
LABEL_25:
        swift_bridgeObjectRelease();
        uint64_t v26 = v23 + *(int *)(v24 + 24);
        uint64_t v27 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      }
LABEL_26:
      uint64_t v5 = *(int *)(v22 + 24);
      goto LABEL_51;
    case 9:
      uint64_t v28 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v28))
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = a1 + *(int *)(v28 + 24);
        uint64_t v30 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoConfirmExpression(0);
      goto LABEL_50;
    case 10:
      swift_bridgeObjectRelease();
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
      goto LABEL_51;
    case 11:
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
      goto LABEL_50;
    case 12:
      uint64_t v31 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v31))
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = a1 + *(int *)(v31 + 24);
        uint64_t v33 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoPickOneExpression(0);
      goto LABEL_50;
    case 13:
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
      goto LABEL_50;
    case 14:
      uint64_t v34 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v34))
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = a1 + *(int *)(v34 + 24);
        uint64_t v36 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoUndoExpression(0);
      goto LABEL_50;
    case 15:
      uint64_t v37 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v37))
      {
        swift_bridgeObjectRelease();
        uint64_t v38 = a1 + *(int *)(v37 + 24);
        uint64_t v39 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoRejectExpression(0);
      goto LABEL_50;
    case 16:
      uint64_t v40 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v40))
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = a1 + *(int *)(v40 + 24);
        uint64_t v42 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoCancelExpression(0);
      goto LABEL_50;
    case 17:
    case 18:
    case 19:
    case 20:
    case 22:
      goto LABEL_52;
    case 21:
      uint64_t v43 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v43))
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = a1 + *(int *)(v43 + 24);
        uint64_t v45 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoOpenExpression(0);
LABEL_50:
      uint64_t v5 = *(int *)(v25 + 20);
LABEL_51:
      a1 += v5;
LABEL_52:
      uint64_t v48 = sub_253B07160();
      uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
      uint64_t result = v49(a1, v48);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for TranscriptProtoExpressionEnum(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v6 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      uint64_t v10 = sub_253B07160();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      goto LABEL_71;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
      uint64_t v13 = *(int *)(updated + 20);
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16)) {
        goto LABEL_61;
      }
      goto LABEL_17;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v17 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = (void *)(a1 + v18);
      uint64_t v20 = (void *)(a2 + v18);
      uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_253462A5C(&qword_26B249528);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
        uint64_t v69 = v20[2];
        v19[1] = v20[1];
        v19[2] = v69;
        uint64_t v70 = *(int *)(v21 + 24);
        uint64_t v187 = (char *)v20 + v70;
        uint64_t v192 = (char *)v19 + v70;
        uint64_t v71 = sub_253B07160();
        uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v192, v187, v71);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v73 = v17[6];
      uint64_t v74 = (void *)(a1 + v73);
      uint64_t v75 = (void *)(a2 + v73);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v73, 1, v21))
      {
        uint64_t v76 = sub_253462A5C(&qword_26B249528);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
        uint64_t v138 = v75[2];
        v74[1] = v75[1];
        v74[2] = v138;
        uint64_t v139 = *(int *)(v21 + 24);
        uint64_t v188 = (char *)v75 + v139;
        uint64_t v193 = (char *)v74 + v139;
        uint64_t v140 = sub_253B07160();
        uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
        swift_bridgeObjectRetain();
        v141(v193, v188, v140);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v21);
      }
      uint64_t v142 = v17[7];
      uint64_t v143 = a1 + v142;
      uint64_t v144 = a2 + v142;
      uint64_t v145 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
      goto LABEL_71;
    case 4u:
      uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v23))
      {
        uint64_t v24 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v77 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v77;
        uint64_t v78 = *(int *)(v23 + 24);
        uint64_t v79 = a1 + v78;
        uint64_t v80 = a2 + v78;
        uint64_t v81 = sub_253B07160();
        uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16);
        swift_bridgeObjectRetain();
        v82(v79, v80, v81);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v23);
      }
      uint64_t v83 = type metadata accessor for TranscriptProtoIndexExpression(0);
      uint64_t v84 = *(int *)(v83 + 20);
      uint64_t v85 = (void *)(a1 + v84);
      uint64_t v86 = (void *)(a2 + v84);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v84, 1, v23))
      {
        uint64_t v87 = sub_253462A5C(&qword_26B249528);
        memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
        uint64_t v146 = v86[2];
        v85[1] = v86[1];
        v85[2] = v146;
        uint64_t v147 = *(int *)(v23 + 24);
        uint64_t v189 = (char *)v86 + v147;
        uint64_t v194 = (char *)v85 + v147;
        uint64_t v148 = sub_253B07160();
        uint64_t v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
        swift_bridgeObjectRetain();
        v149(v194, v189, v148);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v85, 0, 1, v23);
      }
      uint64_t v150 = *(int *)(v83 + 24);
      uint64_t v151 = a1 + v150;
      uint64_t v152 = a2 + v150;
      uint64_t v153 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
      goto LABEL_71;
    case 5u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      uint64_t v25 = *(int *)(updated + 20);
      uint64_t v14 = (void *)(a1 + v25);
      uint64_t v15 = (void *)(a2 + v25);
      uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16)) {
        goto LABEL_17;
      }
      goto LABEL_61;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
      uint64_t v26 = *(int *)(updated + 20);
      uint64_t v27 = (void *)(a1 + v26);
      uint64_t v28 = (void *)(a2 + v26);
      uint64_t v29 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
      {
        uint64_t v30 = sub_253462A5C(&qword_269CE0448);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v154 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v154;
        uint64_t v155 = v28[3];
        v27[2] = v28[2];
        v27[3] = v155;
        uint64_t v156 = *(int *)(v29 + 24);
        uint64_t v190 = (char *)v28 + v156;
        uint64_t v195 = (char *)v27 + v156;
        uint64_t v157 = sub_253B07160();
        uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v186(v195, v190, v157);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
      }
      goto LABEL_62;
    case 7u:
      *(void *)a1 = *(void *)a2;
      uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      uint64_t v34 = sub_253B07160();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
      goto LABEL_71;
    case 8u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
      uint64_t v36 = *(int *)(updated + 20);
      uint64_t v14 = (void *)(a1 + v36);
      uint64_t v15 = (void *)(a2 + v36);
      uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
      {
LABEL_17:
        uint64_t v37 = sub_253462A5C(&qword_26B249528);
        memcpy(v14, v15, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
LABEL_61:
        *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
        uint64_t v158 = v15[2];
        v14[1] = v15[1];
        v14[2] = v158;
        uint64_t v159 = *(int *)(v16 + 24);
        uint64_t v191 = (char *)v15 + v159;
        uint64_t v196 = (char *)v14 + v159;
        uint64_t v160 = sub_253B07160();
        uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
        swift_bridgeObjectRetain();
        v161(v196, v191, v160);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
      }
LABEL_62:
      uint64_t v162 = *(int *)(updated + 24);
      uint64_t v163 = a1 + v162;
      uint64_t v164 = a2 + v162;
      uint64_t v165 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
      goto LABEL_71;
    case 9u:
      uint64_t v38 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v38))
      {
        uint64_t v39 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v88 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v88;
        uint64_t v89 = *(int *)(v38 + 24);
        uint64_t v90 = a1 + v89;
        uint64_t v91 = a2 + v89;
        uint64_t v92 = sub_253B07160();
        uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        v93(v90, v91, v92);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v38);
      }
      uint64_t v94 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
      uint64_t v95 = a1 + v94;
      uint64_t v96 = a2 + v94;
      uint64_t v97 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      goto LABEL_71;
    case 0xAu:
      uint64_t v40 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v40;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
      uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
      uint64_t v42 = a1 + v41;
      uint64_t v43 = a2 + v41;
      uint64_t v44 = sub_253B07160();
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      goto LABEL_71;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
      uint64_t v47 = a1 + v46;
      uint64_t v48 = a2 + v46;
      uint64_t v49 = sub_253B07160();
      uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      goto LABEL_71;
    case 0xCu:
      uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v51))
      {
        uint64_t v52 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v98 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v98;
        uint64_t v99 = *(int *)(v51 + 24);
        uint64_t v100 = a1 + v99;
        uint64_t v101 = a2 + v99;
        uint64_t v102 = sub_253B07160();
        uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16);
        swift_bridgeObjectRetain();
        v103(v100, v101, v102);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v51);
      }
      uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
      uint64_t v105 = a1 + v104;
      uint64_t v106 = a2 + v104;
      uint64_t v107 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
      goto LABEL_71;
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
      uint64_t v54 = a1 + v53;
      uint64_t v55 = a2 + v53;
      uint64_t v56 = sub_253B07160();
      uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      v57(v54, v55, v56);
      goto LABEL_71;
    case 0xEu:
      uint64_t v58 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v58))
      {
        uint64_t v59 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v108 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v108;
        uint64_t v109 = *(int *)(v58 + 24);
        uint64_t v110 = a1 + v109;
        uint64_t v111 = a2 + v109;
        uint64_t v112 = sub_253B07160();
        uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        v113(v110, v111, v112);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v58);
      }
      uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
      uint64_t v115 = a1 + v114;
      uint64_t v116 = a2 + v114;
      uint64_t v117 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
      goto LABEL_71;
    case 0xFu:
      uint64_t v60 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v60))
      {
        uint64_t v61 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v118 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v118;
        uint64_t v119 = *(int *)(v60 + 24);
        uint64_t v120 = a1 + v119;
        uint64_t v121 = a2 + v119;
        uint64_t v122 = sub_253B07160();
        uint64_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16);
        swift_bridgeObjectRetain();
        v123(v120, v121, v122);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v60);
      }
      uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
      uint64_t v125 = a1 + v124;
      uint64_t v126 = a2 + v124;
      uint64_t v127 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
      goto LABEL_71;
    case 0x10u:
      uint64_t v62 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v62))
      {
        uint64_t v63 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v128 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v128;
        uint64_t v129 = *(int *)(v62 + 24);
        uint64_t v130 = a1 + v129;
        uint64_t v131 = a2 + v129;
        uint64_t v132 = sub_253B07160();
        uint64_t v133 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 16);
        swift_bridgeObjectRetain();
        v133(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v62);
      }
      uint64_t v134 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
      uint64_t v135 = a1 + v134;
      uint64_t v136 = a2 + v134;
      uint64_t v137 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
      goto LABEL_71;
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x16u:
      uint64_t v64 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
      goto LABEL_71;
    case 0x15u:
      uint64_t v65 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v65))
      {
        uint64_t v66 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v166 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v166;
        uint64_t v167 = *(int *)(v65 + 24);
        uint64_t v168 = a1 + v167;
        uint64_t v169 = a2 + v167;
        uint64_t v170 = sub_253B07160();
        uint64_t v171 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 16);
        swift_bridgeObjectRetain();
        v171(v168, v169, v170);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v65);
      }
      uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
      uint64_t v173 = a1 + v172;
      uint64_t v174 = a2 + v172;
      uint64_t v175 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
      goto LABEL_71;
    default:
      uint64_t v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v4))
      {
        uint64_t v5 = sub_253462A5C(&qword_269CE2378);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_70;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          goto LABEL_37;
        case 4:
          *(void *)a1 = *(void *)a2;
          uint64_t v176 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          uint64_t v177 = a1 + v176;
          uint64_t v178 = a2 + v176;
          uint64_t v179 = sub_253B07160();
          uint64_t v180 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 16);
          swift_bridgeObjectRetain();
          v180(v177, v178, v179);
          goto LABEL_67;
        case 3:
LABEL_37:
          uint64_t v68 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v68;
          swift_bridgeObjectRetain();
LABEL_67:
          swift_storeEnumTagMultiPayload();
          goto LABEL_69;
      }
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v4 - 8) + 64));
LABEL_69:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v4);
LABEL_70:
      uint64_t v181 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
      uint64_t v182 = a1 + v181;
      uint64_t v183 = a2 + v181;
      uint64_t v184 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16))(v182, v183, v184);
LABEL_71:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithCopy for TranscriptProtoExpressionEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_253B07160();
        uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_72;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v12 = *(int *)(updated + 20);
        uint64_t v13 = (void *)(a1 + v12);
        uint64_t v14 = (void *)(a2 + v12);
        uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15)) {
          goto LABEL_62;
        }
        goto LABEL_18;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v16 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v17 = v16[5];
        uint64_t v18 = (void *)(a1 + v17);
        uint64_t v19 = (void *)(a2 + v17);
        uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_26B249528);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
          v18[1] = v19[1];
          v18[2] = v19[2];
          uint64_t v66 = *(int *)(v20 + 24);
          uint64_t v171 = (char *)v19 + v66;
          uint64_t v176 = (char *)v18 + v66;
          uint64_t v67 = sub_253B07160();
          uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v68(v176, v171, v67);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        uint64_t v69 = v16[6];
        uint64_t v70 = (void *)(a1 + v69);
        uint64_t v71 = (void *)(a2 + v69);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v69, 1, v20))
        {
          uint64_t v72 = sub_253462A5C(&qword_26B249528);
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
          v70[1] = v71[1];
          v70[2] = v71[2];
          uint64_t v128 = *(int *)(v20 + 24);
          uint64_t v172 = (char *)v71 + v128;
          uint64_t v177 = (char *)v70 + v128;
          uint64_t v129 = sub_253B07160();
          uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
          swift_bridgeObjectRetain();
          v130(v177, v172, v129);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v70, 0, 1, v20);
        }
        uint64_t v131 = v16[7];
        uint64_t v132 = a1 + v131;
        uint64_t v133 = a2 + v131;
        uint64_t v134 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
        goto LABEL_72;
      case 4u:
        uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v73 = *(int *)(v22 + 24);
          uint64_t v74 = a1 + v73;
          uint64_t v75 = a2 + v73;
          uint64_t v76 = sub_253B07160();
          uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16);
          swift_bridgeObjectRetain();
          v77(v74, v75, v76);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v22);
        }
        uint64_t v78 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v79 = *(int *)(v78 + 20);
        uint64_t v80 = (void *)(a1 + v79);
        uint64_t v81 = (void *)(a2 + v79);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v79, 1, v22))
        {
          uint64_t v82 = sub_253462A5C(&qword_26B249528);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v80 = *(_DWORD *)v81;
          v80[1] = v81[1];
          v80[2] = v81[2];
          uint64_t v135 = *(int *)(v22 + 24);
          uint64_t v173 = (char *)v81 + v135;
          uint64_t v178 = (char *)v80 + v135;
          uint64_t v136 = sub_253B07160();
          uint64_t v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
          swift_bridgeObjectRetain();
          v137(v178, v173, v136);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v80, 0, 1, v22);
        }
        uint64_t v138 = *(int *)(v78 + 24);
        uint64_t v139 = a1 + v138;
        uint64_t v140 = a2 + v138;
        uint64_t v141 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
        goto LABEL_72;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v24 = *(int *)(updated + 20);
        uint64_t v13 = (void *)(a1 + v24);
        uint64_t v14 = (void *)(a2 + v24);
        uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15)) {
          goto LABEL_18;
        }
        goto LABEL_62;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v25 = *(int *)(updated + 20);
        uint64_t v26 = (void *)(a1 + v25);
        uint64_t v27 = (void *)(a2 + v25);
        uint64_t v28 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE0448);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          void *v26 = *v27;
          v26[1] = v27[1];
          v26[2] = v27[2];
          v26[3] = v27[3];
          uint64_t v142 = *(int *)(v28 + 24);
          uint64_t v174 = (char *)v27 + v142;
          uint64_t v179 = (char *)v26 + v142;
          uint64_t v143 = sub_253B07160();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v170(v179, v174, v143);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
        }
        goto LABEL_63;
      case 7u:
        *(void *)a1 = *(void *)a2;
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        uint64_t v33 = sub_253B07160();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        goto LABEL_72;
      case 8u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v35 = *(int *)(updated + 20);
        uint64_t v13 = (void *)(a1 + v35);
        uint64_t v14 = (void *)(a2 + v35);
        uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
        {
LABEL_18:
          uint64_t v36 = sub_253462A5C(&qword_26B249528);
          memcpy(v13, v14, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
LABEL_62:
          *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
          v13[1] = v14[1];
          v13[2] = v14[2];
          uint64_t v144 = *(int *)(v15 + 24);
          uint64_t v175 = (char *)v14 + v144;
          uint64_t v180 = (char *)v13 + v144;
          uint64_t v145 = sub_253B07160();
          uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
          swift_bridgeObjectRetain();
          v146(v180, v175, v145);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
        }
LABEL_63:
        uint64_t v147 = *(int *)(updated + 24);
        uint64_t v148 = a1 + v147;
        uint64_t v149 = a2 + v147;
        uint64_t v150 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
        goto LABEL_72;
      case 9u:
        uint64_t v37 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v37))
        {
          uint64_t v38 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v83 = *(int *)(v37 + 24);
          uint64_t v84 = a1 + v83;
          uint64_t v85 = a2 + v83;
          uint64_t v86 = sub_253B07160();
          uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16);
          swift_bridgeObjectRetain();
          v87(v84, v85, v86);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v37);
        }
        uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v89 = a1 + v88;
        uint64_t v90 = a2 + v88;
        uint64_t v91 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
        goto LABEL_72;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
        *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
        uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v40 = a1 + v39;
        uint64_t v41 = a2 + v39;
        uint64_t v42 = sub_253B07160();
        uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        v43(v40, v41, v42);
        goto LABEL_72;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        uint64_t v47 = sub_253B07160();
        uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        goto LABEL_72;
      case 0xCu:
        uint64_t v49 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v92 = *(int *)(v49 + 24);
          uint64_t v93 = a1 + v92;
          uint64_t v94 = a2 + v92;
          uint64_t v95 = sub_253B07160();
          uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v96(v93, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v49);
        }
        uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v98 = a1 + v97;
        uint64_t v99 = a2 + v97;
        uint64_t v100 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
        goto LABEL_72;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v52 = a1 + v51;
        uint64_t v53 = a2 + v51;
        uint64_t v54 = sub_253B07160();
        uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v52, v53, v54);
        goto LABEL_72;
      case 0xEu:
        uint64_t v56 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v56))
        {
          uint64_t v57 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v101 = *(int *)(v56 + 24);
          uint64_t v102 = a1 + v101;
          uint64_t v103 = a2 + v101;
          uint64_t v104 = sub_253B07160();
          uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16);
          swift_bridgeObjectRetain();
          v105(v102, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v56);
        }
        uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v107 = a1 + v106;
        uint64_t v108 = a2 + v106;
        uint64_t v109 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
        goto LABEL_72;
      case 0xFu:
        uint64_t v58 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v58))
        {
          uint64_t v59 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v110 = *(int *)(v58 + 24);
          uint64_t v111 = a1 + v110;
          uint64_t v112 = a2 + v110;
          uint64_t v113 = sub_253B07160();
          uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16);
          swift_bridgeObjectRetain();
          v114(v111, v112, v113);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v58);
        }
        uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v116 = a1 + v115;
        uint64_t v117 = a2 + v115;
        uint64_t v118 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
        goto LABEL_72;
      case 0x10u:
        uint64_t v60 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v60))
        {
          uint64_t v61 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v119 = *(int *)(v60 + 24);
          uint64_t v120 = a1 + v119;
          uint64_t v121 = a2 + v119;
          uint64_t v122 = sub_253B07160();
          uint64_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16);
          swift_bridgeObjectRetain();
          v123(v120, v121, v122);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v60);
        }
        uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v125 = a1 + v124;
        uint64_t v126 = a2 + v124;
        uint64_t v127 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
        goto LABEL_72;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v62 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
        goto LABEL_72;
      case 0x15u:
        uint64_t v63 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v63))
        {
          uint64_t v64 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v151 = *(int *)(v63 + 24);
          uint64_t v152 = a1 + v151;
          uint64_t v153 = a2 + v151;
          uint64_t v154 = sub_253B07160();
          uint64_t v155 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16);
          swift_bridgeObjectRetain();
          v155(v152, v153, v154);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v63);
        }
        uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v157 = a1 + v156;
        uint64_t v158 = a2 + v156;
        uint64_t v159 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
        goto LABEL_72;
      default:
        uint64_t v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v4))
        {
          uint64_t v5 = sub_253462A5C(&qword_269CE2378);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
          goto LABEL_71;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_38;
          case 4:
            *(void *)a1 = *(void *)a2;
            uint64_t v160 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v161 = a1 + v160;
            uint64_t v162 = a2 + v160;
            uint64_t v163 = sub_253B07160();
            uint64_t v164 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 16);
            swift_bridgeObjectRetain();
            v164(v161, v162, v163);
            goto LABEL_68;
          case 3:
LABEL_38:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            swift_bridgeObjectRetain();
LABEL_68:
            swift_storeEnumTagMultiPayload();
            goto LABEL_70;
        }
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v4 - 8) + 64));
LABEL_70:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v4);
LABEL_71:
        uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
        uint64_t v166 = a1 + v165;
        uint64_t v167 = a2 + v165;
        uint64_t v168 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
LABEL_72:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoExpressionEnum(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      break;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
      uint64_t v11 = *(int *)(updated + 20);
      uint64_t v12 = (_DWORD *)(a1 + v11);
      uint64_t v13 = (_DWORD *)(a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
        goto LABEL_59;
      }
      goto LABEL_17;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v15 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (_DWORD *)(a1 + v16);
      uint64_t v18 = (_DWORD *)(a2 + v16);
      uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_253462A5C(&qword_26B249528);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        *uint64_t v17 = *v18;
        *(_OWORD *)(v17 + 2) = *(_OWORD *)(v18 + 2);
        uint64_t v64 = *(int *)(v19 + 24);
        uint64_t v65 = (char *)v17 + v64;
        uint64_t v66 = (char *)v18 + v64;
        uint64_t v67 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v68 = v15[6];
      uint64_t v69 = (_DWORD *)(a1 + v68);
      uint64_t v70 = (_DWORD *)(a2 + v68);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v68, 1, v19))
      {
        uint64_t v71 = sub_253462A5C(&qword_26B249528);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        *uint64_t v69 = *v70;
        *(_OWORD *)(v69 + 2) = *(_OWORD *)(v70 + 2);
        uint64_t v121 = *(int *)(v19 + 24);
        uint64_t v122 = (char *)v69 + v121;
        uint64_t v123 = (char *)v70 + v121;
        uint64_t v124 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v69, 0, 1, v19);
      }
      uint64_t v125 = v15[7];
      uint64_t v126 = a1 + v125;
      uint64_t v127 = a2 + v125;
      uint64_t v128 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
      break;
    case 4u:
      uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v21))
      {
        uint64_t v22 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v72 = *(int *)(v21 + 24);
        uint64_t v73 = a1 + v72;
        uint64_t v74 = a2 + v72;
        uint64_t v75 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v21);
      }
      uint64_t v76 = type metadata accessor for TranscriptProtoIndexExpression(0);
      uint64_t v77 = *(int *)(v76 + 20);
      uint64_t v78 = (_DWORD *)(a1 + v77);
      uint64_t v79 = (_DWORD *)(a2 + v77);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v77, 1, v21))
      {
        uint64_t v80 = sub_253462A5C(&qword_26B249528);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        *uint64_t v78 = *v79;
        *(_OWORD *)(v78 + 2) = *(_OWORD *)(v79 + 2);
        uint64_t v129 = *(int *)(v21 + 24);
        uint64_t v130 = (char *)v78 + v129;
        uint64_t v131 = (char *)v79 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v78, 0, 1, v21);
      }
      uint64_t v133 = *(int *)(v76 + 24);
      uint64_t v134 = a1 + v133;
      uint64_t v135 = a2 + v133;
      uint64_t v136 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
      break;
    case 5u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      uint64_t v23 = *(int *)(updated + 20);
      uint64_t v12 = (_DWORD *)(a1 + v23);
      uint64_t v13 = (_DWORD *)(a2 + v23);
      uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
        goto LABEL_17;
      }
      goto LABEL_59;
    case 6u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
      uint64_t v24 = *(int *)(updated + 20);
      uint64_t v25 = (_OWORD *)(a1 + v24);
      uint64_t v26 = (_OWORD *)(a2 + v24);
      uint64_t v27 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = sub_253462A5C(&qword_269CE0448);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        long long v137 = v26[1];
        _OWORD *v25 = *v26;
        v25[1] = v137;
        uint64_t v138 = *(int *)(v27 + 24);
        uint64_t v139 = (char *)v25 + v138;
        uint64_t v140 = (char *)v26 + v138;
        uint64_t v141 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
      }
      goto LABEL_60;
    case 7u:
      *(void *)a1 = *(void *)a2;
      uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = a2 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      break;
    case 8u:
      *(void *)a1 = *(void *)a2;
      uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
      uint64_t v33 = *(int *)(updated + 20);
      uint64_t v12 = (_DWORD *)(a1 + v33);
      uint64_t v13 = (_DWORD *)(a2 + v33);
      uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
LABEL_17:
        uint64_t v34 = sub_253462A5C(&qword_26B249528);
        memcpy(v12, v13, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
LABEL_59:
        _DWORD *v12 = *v13;
        *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
        uint64_t v142 = *(int *)(v14 + 24);
        uint64_t v143 = (char *)v12 + v142;
        uint64_t v144 = (char *)v13 + v142;
        uint64_t v145 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
LABEL_60:
      uint64_t v146 = *(int *)(updated + 24);
      uint64_t v147 = a1 + v146;
      uint64_t v148 = a2 + v146;
      uint64_t v149 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
      break;
    case 9u:
      uint64_t v35 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v35))
      {
        uint64_t v36 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v81 = *(int *)(v35 + 24);
        uint64_t v82 = a1 + v81;
        uint64_t v83 = a2 + v81;
        uint64_t v84 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v35);
      }
      uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
      uint64_t v86 = a1 + v85;
      uint64_t v87 = a2 + v85;
      uint64_t v88 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
      break;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
      uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
      uint64_t v38 = a1 + v37;
      uint64_t v39 = a2 + v37;
      uint64_t v40 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      break;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
      uint64_t v42 = a1 + v41;
      uint64_t v43 = a2 + v41;
      uint64_t v44 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      break;
    case 0xCu:
      uint64_t v45 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v45))
      {
        uint64_t v46 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v89 = *(int *)(v45 + 24);
        uint64_t v90 = a1 + v89;
        uint64_t v91 = a2 + v89;
        uint64_t v92 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v45);
      }
      uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
      uint64_t v94 = a1 + v93;
      uint64_t v95 = a2 + v93;
      uint64_t v96 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      break;
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
      uint64_t v48 = a1 + v47;
      uint64_t v49 = a2 + v47;
      uint64_t v50 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      break;
    case 0xEu:
      uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v51))
      {
        uint64_t v52 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v97 = *(int *)(v51 + 24);
        uint64_t v98 = a1 + v97;
        uint64_t v99 = a2 + v97;
        uint64_t v100 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v51);
      }
      uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
      uint64_t v102 = a1 + v101;
      uint64_t v103 = a2 + v101;
      uint64_t v104 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
      break;
    case 0xFu:
      uint64_t v53 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v53))
      {
        uint64_t v54 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v105 = *(int *)(v53 + 24);
        uint64_t v106 = a1 + v105;
        uint64_t v107 = a2 + v105;
        uint64_t v108 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v53);
      }
      uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
      uint64_t v110 = a1 + v109;
      uint64_t v111 = a2 + v109;
      uint64_t v112 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
      break;
    case 0x10u:
      uint64_t v55 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v55))
      {
        uint64_t v56 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v113 = *(int *)(v55 + 24);
        uint64_t v114 = a1 + v113;
        uint64_t v115 = a2 + v113;
        uint64_t v116 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v55);
      }
      uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
      uint64_t v118 = a1 + v117;
      uint64_t v119 = a2 + v117;
      uint64_t v120 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
      break;
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x16u:
      uint64_t v57 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
      break;
    case 0x15u:
      uint64_t v58 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v58))
      {
        uint64_t v59 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v150 = *(int *)(v58 + 24);
        uint64_t v151 = a1 + v150;
        uint64_t v152 = a2 + v150;
        uint64_t v153 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v58);
      }
      uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
      uint64_t v155 = a1 + v154;
      uint64_t v156 = a2 + v154;
      uint64_t v157 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
      break;
    default:
      uint64_t v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v4))
      {
        uint64_t v5 = sub_253462A5C(&qword_269CE2378);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          uint64_t v61 = a1 + v60;
          uint64_t v62 = a2 + v60;
          uint64_t v63 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v4 - 8) + 64));
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v4);
      }
      uint64_t v158 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
      uint64_t v159 = a1 + v158;
      uint64_t v160 = a2 + v158;
      uint64_t v161 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 32))(v159, v160, v161);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TranscriptProtoExpressionEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v11 = *(int *)(updated + 20);
        uint64_t v12 = (_DWORD *)(a1 + v11);
        uint64_t v13 = (_DWORD *)(a2 + v11);
        uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
          goto LABEL_60;
        }
        goto LABEL_18;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v15 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v16 = v15[5];
        uint64_t v17 = (_DWORD *)(a1 + v16);
        uint64_t v18 = (_DWORD *)(a2 + v16);
        uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          *(_OWORD *)(v17 + 2) = *(_OWORD *)(v18 + 2);
          uint64_t v60 = *(int *)(v19 + 24);
          uint64_t v61 = (char *)v17 + v60;
          uint64_t v62 = (char *)v18 + v60;
          uint64_t v63 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v64 = v15[6];
        uint64_t v65 = (_DWORD *)(a1 + v64);
        uint64_t v66 = (_DWORD *)(a2 + v64);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v64, 1, v19))
        {
          uint64_t v67 = sub_253462A5C(&qword_26B249528);
          memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          *uint64_t v65 = *v66;
          *(_OWORD *)(v65 + 2) = *(_OWORD *)(v66 + 2);
          uint64_t v117 = *(int *)(v19 + 24);
          uint64_t v118 = (char *)v65 + v117;
          uint64_t v119 = (char *)v66 + v117;
          uint64_t v120 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v65, 0, 1, v19);
        }
        uint64_t v121 = v15[7];
        uint64_t v122 = a1 + v121;
        uint64_t v123 = a2 + v121;
        uint64_t v124 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
        break;
      case 4u:
        uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v68 = *(int *)(v21 + 24);
          uint64_t v69 = a1 + v68;
          uint64_t v70 = a2 + v68;
          uint64_t v71 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v21);
        }
        uint64_t v72 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v73 = *(int *)(v72 + 20);
        uint64_t v74 = (_DWORD *)(a1 + v73);
        uint64_t v75 = (_DWORD *)(a2 + v73);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v73, 1, v21))
        {
          uint64_t v76 = sub_253462A5C(&qword_26B249528);
          memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          *uint64_t v74 = *v75;
          *(_OWORD *)(v74 + 2) = *(_OWORD *)(v75 + 2);
          uint64_t v125 = *(int *)(v21 + 24);
          uint64_t v126 = (char *)v74 + v125;
          uint64_t v127 = (char *)v75 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v21);
        }
        uint64_t v129 = *(int *)(v72 + 24);
        uint64_t v130 = a1 + v129;
        uint64_t v131 = a2 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v23 = *(int *)(updated + 20);
        uint64_t v12 = (_DWORD *)(a1 + v23);
        uint64_t v13 = (_DWORD *)(a2 + v23);
        uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14)) {
          goto LABEL_18;
        }
        goto LABEL_60;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v24 = *(int *)(updated + 20);
        uint64_t v25 = (_OWORD *)(a1 + v24);
        uint64_t v26 = (_OWORD *)(a2 + v24);
        uint64_t v27 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = sub_253462A5C(&qword_269CE0448);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          long long v137 = v26[1];
          _OWORD *v25 = *v26;
          v25[1] = v137;
          uint64_t v138 = *(int *)(v27 + 24);
          uint64_t v139 = (char *)v25 + v138;
          uint64_t v140 = (char *)v26 + v138;
          uint64_t v141 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v27);
        }
        goto LABEL_61;
      case 7u:
        *(void *)a1 = *(void *)a2;
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v30 = a1 + v29;
        uint64_t v31 = a2 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v33 = *(int *)(updated + 20);
        uint64_t v12 = (_DWORD *)(a1 + v33);
        uint64_t v13 = (_DWORD *)(a2 + v33);
        uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
LABEL_18:
          uint64_t v34 = sub_253462A5C(&qword_26B249528);
          memcpy(v12, v13, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
LABEL_60:
          _DWORD *v12 = *v13;
          *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
          uint64_t v142 = *(int *)(v14 + 24);
          uint64_t v143 = (char *)v12 + v142;
          uint64_t v144 = (char *)v13 + v142;
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
LABEL_61:
        uint64_t v146 = *(int *)(updated + 24);
        uint64_t v147 = a1 + v146;
        uint64_t v148 = a2 + v146;
        uint64_t v149 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
        break;
      case 9u:
        uint64_t v35 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v35))
        {
          uint64_t v36 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v77 = *(int *)(v35 + 24);
          uint64_t v78 = a1 + v77;
          uint64_t v79 = a2 + v77;
          uint64_t v80 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v35);
        }
        uint64_t v81 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v82 = a1 + v81;
        uint64_t v83 = a2 + v81;
        uint64_t v84 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        break;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v38 = a1 + v37;
        uint64_t v39 = a2 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v42 = a1 + v41;
        uint64_t v43 = a2 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      case 0xCu:
        uint64_t v45 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v45))
        {
          uint64_t v46 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v85 = *(int *)(v45 + 24);
          uint64_t v86 = a1 + v85;
          uint64_t v87 = a2 + v85;
          uint64_t v88 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v45);
        }
        uint64_t v89 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v90 = a1 + v89;
        uint64_t v91 = a2 + v89;
        uint64_t v92 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
        break;
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v48 = a1 + v47;
        uint64_t v49 = a2 + v47;
        uint64_t v50 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        break;
      case 0xEu:
        uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v51))
        {
          uint64_t v52 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v93 = *(int *)(v51 + 24);
          uint64_t v94 = a1 + v93;
          uint64_t v95 = a2 + v93;
          uint64_t v96 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v51);
        }
        uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v98 = a1 + v97;
        uint64_t v99 = a2 + v97;
        uint64_t v100 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        break;
      case 0xFu:
        uint64_t v53 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v101 = *(int *)(v53 + 24);
          uint64_t v102 = a1 + v101;
          uint64_t v103 = a2 + v101;
          uint64_t v104 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v53);
        }
        uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v106 = a1 + v105;
        uint64_t v107 = a2 + v105;
        uint64_t v108 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
        break;
      case 0x10u:
        uint64_t v55 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v55))
        {
          uint64_t v56 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v109 = *(int *)(v55 + 24);
          uint64_t v110 = a1 + v109;
          uint64_t v111 = a2 + v109;
          uint64_t v112 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v55);
        }
        uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v114 = a1 + v113;
        uint64_t v115 = a2 + v113;
        uint64_t v116 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
        break;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v57 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
        break;
      case 0x15u:
        uint64_t v58 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v58))
        {
          uint64_t v59 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v150 = *(int *)(v58 + 24);
          uint64_t v151 = a1 + v150;
          uint64_t v152 = a2 + v150;
          uint64_t v153 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v58);
        }
        uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v155 = a1 + v154;
        uint64_t v156 = a2 + v154;
        uint64_t v157 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
        break;
      default:
        uint64_t v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v4))
        {
          uint64_t v5 = sub_253462A5C(&qword_269CE2378);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v134 = a1 + v133;
            uint64_t v135 = a2 + v133;
            uint64_t v136 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v4 - 8) + 64));
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v4);
        }
        uint64_t v158 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
        uint64_t v159 = a1 + v158;
        uint64_t v160 = a2 + v158;
        uint64_t v161 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 32))(v159, v160, v161);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2538FC404()
{
  uint64_t result = type metadata accessor for TranscriptProtoValueExpression(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoStatementID(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoPrefixExpression(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TranscriptProtoInfixExpression(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoIndexExpression(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for TranscriptProtoUpdateParametersExpression(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for TranscriptProtoCallExpression(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for TranscriptProtoSayExpression(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for TranscriptProtoPickExpression(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for TranscriptProtoConfirmExpression(319);
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for TranscriptProtoSearchExpression(319);
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for TranscriptProtoStructuredSearchExpression(319);
                        if (v12 <= 0x3F)
                        {
                          uint64_t result = type metadata accessor for TranscriptProtoPickOneExpression(319);
                          if (v13 <= 0x3F)
                          {
                            uint64_t result = type metadata accessor for TranscriptProtoResolveToolExpression(319);
                            if (v14 <= 0x3F)
                            {
                              uint64_t result = type metadata accessor for TranscriptProtoUndoExpression(319);
                              if (v15 <= 0x3F)
                              {
                                uint64_t result = type metadata accessor for TranscriptProtoRejectExpression(319);
                                if (v16 <= 0x3F)
                                {
                                  uint64_t result = type metadata accessor for TranscriptProtoCancelExpression(319);
                                  if (v17 <= 0x3F)
                                  {
                                    uint64_t result = sub_253B07160();
                                    if (v18 <= 0x3F)
                                    {
                                      uint64_t result = type metadata accessor for TranscriptProtoOpenExpression(319);
                                      if (v19 <= 0x3F)
                                      {
                                        swift_initEnumMetadataMultiPayload();
                                        return 0;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoValueExpression(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2378);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_14:
      uint64_t v17 = *(int *)(a3 + 20);
      unint64_t v18 = (char *)a1 + v17;
      unint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      return a1;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        unint64_t v13 = (char *)a1 + v12;
        unint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253B07160();
        unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        goto LABEL_11;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_13;
      }
    }
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    goto LABEL_14;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoValueExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload != 4)
    {
      if (EnumCaseMultiPayload != 3) {
        goto LABEL_7;
      }
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
LABEL_7:
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = sub_253B07160();
  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoValueExpression(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        unint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_9;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_11;
      }
    }
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE2378);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_12:
  uint64_t v15 = *(int *)(a3 + 20);
  unint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

void *assignWithCopy for TranscriptProtoValueExpression(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 5)
      {
        if (EnumCaseMultiPayload == 4)
        {
          *a1 = *a2;
          uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          uint64_t v13 = (char *)a1 + v12;
          unint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = sub_253B07160();
          unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          goto LABEL_18;
        }
        if (EnumCaseMultiPayload != 3)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_20;
        }
      }
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_18:
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2) {
      goto LABEL_24;
    }
    sub_2536FA73C();
    int v11 = swift_getEnumCaseMultiPayload();
    if (v11 != 5)
    {
      if (v11 == 4)
      {
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        uint64_t v18 = (char *)a1 + v17;
        unint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_23;
      }
      if (v11 != 3)
      {
        size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
        goto LABEL_10;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
LABEL_23:
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  sub_2536FA73C();
LABEL_9:
  size_t v10 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2378) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v10);
LABEL_24:
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

void *initializeWithTake for TranscriptProtoValueExpression(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2378);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      size_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  unint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

void *assignWithTake for TranscriptProtoValueExpression(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_2536FA73C();
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        unint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v13 = *(void *)(*(void *)(v6 - 8) + 64);
      goto LABEL_8;
    }
    sub_2536FA73C();
LABEL_7:
    size_t v13 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2378) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    goto LABEL_14;
  }
  if (v8) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    size_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_14:
  uint64_t v18 = *(int *)(a3 + 20);
  unint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538FD588);
}

uint64_t sub_2538FD588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2378);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538FD5A8);
}

uint64_t sub_2538FD5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2378);
}

void sub_2538FD5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoValueExpressionEnum(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_9;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
    }
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoValueExpressionEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 5)
  {
LABEL_4:
    return swift_bridgeObjectRelease();
  }
  if (result != 4)
  {
    if (result != 3) {
      return result;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
  uint64_t v4 = sub_253B07160();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(v3, v4);
}

void *initializeWithCopy for TranscriptProtoValueExpressionEnum(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_253B07160();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload != 3)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoValueExpressionEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253B07160();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        goto LABEL_8;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoValueExpressionEnum(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TranscriptProtoValueExpressionEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2538FDC84()
{
  uint64_t result = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueExpressionArrayVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538FDD44);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueExpressionArrayVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538FDD5C);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPrefixExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_26B249528);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v13 = v9[2];
      v8[1] = v9[1];
      v8[2] = v13;
      uint64_t v14 = *(int *)(v10 + 24);
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v23 = (char *)v9 + v14;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v23, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    unint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

unsigned char *initializeWithCopy for TranscriptProtoPrefixExpression(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    uint64_t v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v21 = (char *)v8 + v12;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v13, v21, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoPrefixExpression(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v9 + 24);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v26 = (char *)v8 + v12;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v13, v26, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoPrefixExpression(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    _DWORD *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoPrefixExpression(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)&a1[v6];
  uint64_t v8 = (uint64_t)&a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      uint64_t v22 = *(void *)(v8 + 16);
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      *(void *)(v7 + 16) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v9 + 24);
      uint64_t v24 = v7 + v23;
      uint64_t v25 = v8 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPrefixExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538FE644);
}

uint64_t sub_2538FE644(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_253901838(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPrefixExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538FE664);
}

void sub_2538FE664()
{
}

void sub_2538FE670(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoInfixExpression(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_26B249528);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v13 = v9[2];
      v8[1] = v9[1];
      v8[2] = v13;
      uint64_t v14 = *(int *)(v10 + 24);
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v32 = (char *)v9 + v14;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v32, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v18 = a3[6];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v18, 1, v10))
    {
      uint64_t v21 = sub_253462A5C(&qword_26B249528);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      uint64_t v22 = v20[2];
      v19[1] = v20[1];
      v19[2] = v22;
      uint64_t v23 = *(int *)(v10 + 24);
      uint64_t v24 = (char *)v19 + v23;
      uint64_t v33 = (char *)v20 + v23;
      uint64_t v25 = sub_253B07160();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v24, v33, v25);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v10);
    }
    uint64_t v27 = a3[7];
    uint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoInfixExpression(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + *(int *)(v5 + 24);
    uint64_t v10 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + a2[7];
  uint64_t v12 = sub_253B07160();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

unsigned char *initializeWithCopy for TranscriptProtoInfixExpression(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    uint64_t v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v30 = (char *)v8 + v12;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v13, v30, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a2[v16], 1, v9))
  {
    uint64_t v19 = sub_253462A5C(&qword_26B249528);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    uint64_t v20 = v18[2];
    v17[1] = v18[1];
    v17[2] = v20;
    uint64_t v21 = *(int *)(v9 + 24);
    uint64_t v22 = (char *)v17 + v21;
    uint64_t v31 = (char *)v18 + v21;
    uint64_t v23 = sub_253B07160();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v22, v31, v23);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v9);
  }
  uint64_t v25 = a3[7];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoInfixExpression(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v40 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v40, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(int *)(v9 + 24);
  uint64_t v33 = (char *)v7 + v32;
  uint64_t v34 = (char *)v8 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a1[v17], 1, v9);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v18[1] = v19[1];
      v18[2] = v19[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v36 = *(int *)(v9 + 24);
      uint64_t v37 = (char *)v18 + v36;
      uint64_t v38 = (char *)v19 + v36;
      uint64_t v39 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v26 = sub_253462A5C(&qword_26B249528);
    memcpy(v18, v19, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  uint64_t v22 = *(int *)(v9 + 24);
  uint64_t v23 = (char *)v18 + v22;
  uint64_t v41 = (char *)v19 + v22;
  uint64_t v24 = sub_253B07160();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v23, v41, v24);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v9);
LABEL_13:
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoInfixExpression(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    _DWORD *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a2[v15], 1, v9))
  {
    uint64_t v18 = sub_253462A5C(&qword_26B249528);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    uint64_t v19 = *(int *)(v9 + 24);
    int v20 = (char *)v16 + v19;
    int v21 = (char *)v17 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v9);
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoInfixExpression(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  uint64_t v32 = v8[2];
  v7[1] = v8[1];
  v7[2] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(v9 + 24);
  uint64_t v34 = (char *)v7 + v33;
  uint64_t v35 = (char *)v8 + v33;
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = (uint64_t)&a1[v17];
  uint64_t v19 = (uint64_t)&a2[v17];
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a1[v17], 1, v9);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      uint64_t v37 = *(void *)(v19 + 16);
      *(void *)(v18 + 8) = *(void *)(v19 + 8);
      *(void *)(v18 + 16) = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = *(int *)(v9 + 24);
      uint64_t v39 = v18 + v38;
      uint64_t v40 = v19 + v38;
      uint64_t v41 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v26 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
  uint64_t v22 = *(int *)(v9 + 24);
  uint64_t v23 = v18 + v22;
  uint64_t v24 = v19 + v22;
  uint64_t v25 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v9);
LABEL_13:
  uint64_t v27 = a3[7];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInfixExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538FF5F0);
}

uint64_t sub_2538FF5F0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_2538FF5FC(a1, a2, a3, &qword_26B249528);
}

uint64_t sub_2538FF5FC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2 == 237)
  {
    unsigned int v5 = *a1;
    if (v5 >= 0x13) {
      return v5 - 18;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_253944DB4((uint64_t)a1, a2, a3, a4);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v4)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253B07160();
      sub_2535E256C();
    }
    uint64_t v9 = sub_2535E22C8(v8);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, v10, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInfixExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538FF6A0);
}

void sub_2538FF6A0()
{
}

void sub_2538FF6AC()
{
  sub_2534DA0C4();
  if (v5 == 237)
  {
    *unint64_t v1 = v0 + 18;
  }
  else
  {
    sub_253944D7C(v3, v4, v5, v6, v7);
    sub_2535782A8();
    if (*(_DWORD *)(v8 + 84) == v2)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26E4();
    }
    uint64_t v10 = sub_2535E2234(v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, v11, v12, v13);
  }
}

void sub_2538FF734()
{
}

void sub_2538FF754()
{
  uint64_t v0 = sub_253945F00();
  sub_253760A08(v0, v1, v2);
  if (v3 <= 0x3F)
  {
    sub_253B07160();
    if (v4 <= 0x3F)
    {
      sub_2539448CC();
      sub_2535E2578();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprPrefixVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CE22E0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CDCBA8);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            uint64_t v15 = v9[1];
            *uint64_t v8 = *v9;
            v8[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *uint64_t v8 = *v9;
            uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v35 = (char *)v9 + v16;
            uint64_t v38 = (char *)v8 + v16;
            uint64_t v17 = sub_253B07160();
            uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v32(v38, v35, v17);
            goto LABEL_13;
          case 5u:
            *uint64_t v8 = *v9;
            uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v36 = (char *)v9 + v18;
            uint64_t v39 = (char *)v8 + v18;
            uint64_t v19 = sub_253B07160();
            uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v33(v39, v36, v19);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
            uint64_t v20 = v9[2];
            v8[1] = v9[1];
            v8[2] = v20;
            uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v37 = (char *)v9 + v21;
            uint64_t v40 = (char *)v8 + v21;
            uint64_t v22 = sub_253B07160();
            uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v40, v37, v22);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v13);
      }
      uint64_t v23 = *(int *)(v10 + 20);
      uint64_t v24 = (char *)v8 + v23;
      uint64_t v25 = (char *)v9 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v27 = *(int *)(a3 + 24);
    uint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprPrefixVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          uint64_t v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          uint64_t v9 = v4 + v8;
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    uint64_t v11 = v4 + *(int *)(v5 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  return v15(v13, v14);
}

unsigned char *initializeWithCopy for TranscriptProtoASTFlatExprPrefixVariant(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          uint64_t v13 = v8[1];
          void *v7 = *v8;
          v7[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          void *v7 = *v8;
          uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          uint64_t v33 = (char *)v8 + v14;
          uint64_t v36 = (char *)v7 + v14;
          uint64_t v15 = sub_253B07160();
          uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v30(v36, v33, v15);
          goto LABEL_11;
        case 5u:
          void *v7 = *v8;
          uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          uint64_t v34 = (char *)v8 + v16;
          uint64_t v37 = (char *)v7 + v16;
          uint64_t v17 = sub_253B07160();
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v37, v34, v17);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
          uint64_t v18 = v8[2];
          v7[1] = v8[1];
          v7[2] = v18;
          uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          uint64_t v35 = (char *)v8 + v19;
          uint64_t v38 = (char *)v7 + v19;
          uint64_t v20 = sub_253B07160();
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v38, v35, v20);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v21 = *(int *)(v9 + 20);
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoASTFlatExprPrefixVariant(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            void *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            void *v7 = *v8;
            uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v62 = (char *)v8 + v29;
            uint64_t v71 = (char *)v7 + v29;
            uint64_t v30 = sub_253B07160();
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v71, v62, v30);
            goto LABEL_32;
          case 5u:
            void *v7 = *v8;
            uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v63 = (char *)v8 + v31;
            uint64_t v72 = (char *)v7 + v31;
            uint64_t v32 = sub_253B07160();
            uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v72, v63, v32);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v64 = (char *)v8 + v33;
            uint64_t v73 = (char *)v7 + v33;
            uint64_t v34 = sub_253B07160();
            uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v73, v64, v34);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        uint64_t v41 = *(int *)(v9 + 20);
        uint64_t v42 = (char *)v7 + v41;
        uint64_t v43 = (char *)v8 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              void *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              void *v7 = *v8;
              uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              uint64_t v65 = (char *)v8 + v35;
              uint64_t v74 = (char *)v7 + v35;
              uint64_t v36 = sub_253B07160();
              uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
              swift_bridgeObjectRetain();
              v56(v74, v65, v36);
              break;
            case 5u:
              void *v7 = *v8;
              uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              uint64_t v66 = (char *)v8 + v37;
              uint64_t v75 = (char *)v7 + v37;
              uint64_t v38 = sub_253B07160();
              uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
              swift_bridgeObjectRetain();
              v57(v75, v66, v38);
              break;
            case 9u:
              *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              uint64_t v67 = (char *)v8 + v39;
              uint64_t v76 = (char *)v7 + v39;
              uint64_t v40 = sub_253B07160();
              uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
              swift_bridgeObjectRetain();
              v58(v76, v67, v40);
              break;
            default:
              size_t v18 = *(void *)(*(void *)(v15 - 8) + 64);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2536FA73C();
    }
    size_t v18 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_17:
    memcpy(v7, v8, v18);
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        void *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        void *v7 = *v8;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v59 = (char *)v8 + v19;
        uint64_t v68 = (char *)v7 + v19;
        uint64_t v20 = sub_253B07160();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v68, v59, v20);
        goto LABEL_25;
      case 5u:
        void *v7 = *v8;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v60 = (char *)v8 + v21;
        uint64_t v69 = (char *)v7 + v21;
        uint64_t v22 = sub_253B07160();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v69, v60, v22);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v61 = (char *)v8 + v23;
        uint64_t v70 = (char *)v7 + v23;
        uint64_t v24 = sub_253B07160();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v70, v61, v24);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v25 = *(int *)(v9 + 20);
  uint64_t v26 = (char *)v7 + v25;
  uint64_t v27 = (char *)v8 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  uint64_t v45 = *(int *)(a3 + 24);
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoASTFlatExprPrefixVariant(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBA8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_14:
      uint64_t v26 = *(int *)(v9 + 20);
      uint64_t v27 = (char *)v7 + v26;
      uint64_t v28 = (char *)v8 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        _DWORD *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v19 = (char *)v7 + v18;
        uint64_t v20 = (char *)v8 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v23 = (char *)v7 + v22;
        uint64_t v24 = (char *)v8 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v15 = (char *)v7 + v14;
        int v16 = (char *)v8 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  uint64_t v10 = sub_253462A5C(&qword_269CE22E0);
  memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_15:
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoASTFlatExprPrefixVariant(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)&a1[v6];
  uint64_t v8 = (uint64_t)&a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v47 = v7 + v46;
            uint64_t v48 = v8 + v46;
            uint64_t v49 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
            break;
          case 5:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v51 = v7 + v50;
            uint64_t v52 = v8 + v50;
            uint64_t v53 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
            break;
          case 4:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v20 = v7 + v19;
            uint64_t v21 = v8 + v19;
            uint64_t v22 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
            break;
          default:
            memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v15 - 8) + 64));
            goto LABEL_37;
        }
        swift_storeEnumTagMultiPayload();
LABEL_37:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v15);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 == a2) {
          goto LABEL_41;
        }
        sub_2536FA73C();
        int v41 = swift_getEnumCaseMultiPayload();
        switch(v41)
        {
          case 9:
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            uint64_t v55 = v7 + v54;
            uint64_t v56 = v8 + v54;
            uint64_t v57 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
            break;
          case 5:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            uint64_t v59 = v7 + v58;
            uint64_t v60 = v8 + v58;
            uint64_t v61 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
            break;
          case 4:
            *(void *)uint64_t v7 = *(void *)v8;
            uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            uint64_t v43 = v7 + v42;
            uint64_t v44 = v8 + v42;
            uint64_t v45 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            break;
          default:
            size_t v28 = *(void *)(*(void *)(v15 - 8) + 64);
            goto LABEL_21;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_41;
      }
      sub_2536FA73C();
    }
    size_t v28 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCBA8) - 8) + 64);
LABEL_21:
    memcpy((void *)v7, (const void *)v8, v28);
LABEL_41:
    uint64_t v62 = *(int *)(v9 + 20);
    uint64_t v63 = v7 + v62;
    uint64_t v64 = v8 + v62;
    uint64_t v65 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
    goto LABEL_42;
  }
  if (!v11)
  {
    uint64_t v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CDCBA8);
      memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_27:
      uint64_t v37 = *(int *)(v9 + 20);
      uint64_t v38 = v7 + v37;
      uint64_t v39 = v8 + v37;
      uint64_t v40 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
      goto LABEL_42;
    }
    int v23 = swift_getEnumCaseMultiPayload();
    switch(v23)
    {
      case 9:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        uint64_t v30 = v7 + v29;
        uint64_t v31 = v8 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      case 5:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        uint64_t v34 = v7 + v33;
        uint64_t v35 = v8 + v33;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        break;
      case 4:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        uint64_t v25 = v7 + v24;
        uint64_t v26 = v8 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        break;
      default:
        memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_26;
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v12);
    goto LABEL_27;
  }
LABEL_7:
  uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
  memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_42:
  uint64_t v66 = *(int *)(a3 + 24);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  uint64_t v69 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPrefixVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25390182C);
}

uint64_t sub_25390182C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_253901838(a1, a2, a3, &qword_269CE22E0);
}

uint64_t sub_253901838(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2 == 253)
  {
    unsigned int v5 = *a1;
    if (v5 >= 3) {
      return v5 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_253944DB4((uint64_t)a1, a2, a3, a4);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v4)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253B07160();
      sub_2535E2560();
    }
    uint64_t v9 = sub_2535E22C8(v8);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, v10, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPrefixVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539018DC);
}

void sub_2539018DC()
{
}

void sub_2539018E8()
{
  sub_253945ADC();
  if (v8)
  {
    *unint64_t v1 = v0 + 2;
  }
  else
  {
    sub_253944D7C(v3, v4, v5, v6, v7);
    sub_2535782A8();
    if (*(_DWORD *)(v9 + 84) == v2)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
    uint64_t v11 = sub_2535E2234(v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, v12, v13, v14);
  }
}

void sub_25390196C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoIndexExpressionVwCP_0()
{
  sub_2535E2390();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2535782A8();
  if ((*(_DWORD *)(v5 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    uint64_t v6 = v4;
    type metadata accessor for TranscriptProtoStatementID(0);
    if (sub_2539443F0((uint64_t)v1))
    {
      uint64_t v7 = sub_253462A5C(&qword_26B249528);
      uint64_t v8 = sub_25346CB4C(v7);
      sub_2539445E4(v8, v10, *(void *)(v9 + 64));
    }
    else
    {
      sub_25394476C();
      sub_25346CAF4();
      uint64_t v12 = *(void (**)(uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_253944670();
      v12(v13);
      sub_2536D4030(v3);
    }
    uint64_t v14 = *(int *)(v6 + 20);
    uint64_t v15 = v3 + v14;
    if (sub_2539443F0((uint64_t)v1 + v14))
    {
      uint64_t v16 = sub_253462A5C(&qword_26B249528);
      uint64_t v17 = sub_25346CB4C(v16);
      sub_2539449C8(v17, v19, *(void *)(v18 + 64));
    }
    else
    {
      sub_25394439C();
      sub_25346CAF4();
      uint64_t v21 = *(void (**)(uint64_t))(v20 + 16);
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_253944658();
      v21(v22);
      sub_2536D4030(v15);
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v23 = sub_25354710C();
    v24(v23);
  }
  sub_2535E2374();
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoIndexExpressionVwxx_0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_253944F38(v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v1 + 24);
    sub_253B07160();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  if (!sub_253945BA0())
  {
    swift_bridgeObjectRelease();
    sub_253B07160();
    sub_25346CAF4();
    uint64_t v6 = sub_253945338();
    v7(v6);
  }
  sub_253944B84();
  sub_25346CAF4();
  uint64_t v8 = sub_2539446BC();
  return v9(v8);
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoIndexExpressionVwcp_0()
{
  sub_2535E2390();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_2539443F0(v3))
  {
    uint64_t v6 = sub_253462A5C(&qword_26B249528);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_2539445E4(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    sub_25394476C();
    sub_25346CAF4();
    uint64_t v11 = *(void (**)(uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_253944670();
    v11(v12);
    sub_2536D4030(v5);
  }
  uint64_t v13 = *(int *)(v1 + 20);
  uint64_t v14 = v5 + v13;
  if (sub_2539443F0(v3 + v13))
  {
    uint64_t v15 = sub_253462A5C(&qword_26B249528);
    uint64_t v16 = sub_25346CB4C(v15);
    sub_2539449C8(v16, v18, *(void *)(v17 + 64));
  }
  else
  {
    sub_25394439C();
    sub_25346CAF4();
    uint64_t v20 = *(void (**)(uint64_t))(v19 + 16);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_253944B34();
    v20(v21);
    sub_2536D4030(v14);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v22();
  sub_2535E2374();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoIndexExpressionVwca_0()
{
  sub_2535E2390();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6);
  int v8 = sub_2539443F0(v3);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)uint64_t v5 = *(_DWORD *)v3;
      *(void *)(v5 + 8) = *(void *)(v3 + 8);
      *(void *)(v5 + 16) = *(void *)(v3 + 16);
      sub_2539448FC();
      sub_25346CAF4();
      uint64_t v10 = *(void (**)(uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_253944670();
      v10(v11);
      sub_2536D4030(v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v12 = sub_253462A5C(&qword_26B249528);
    uint64_t v13 = sub_25346CB4C(v12);
    sub_2539445E4(v13, v15, *(void *)(v14 + 64));
    goto LABEL_7;
  }
  sub_25394546C();
  swift_bridgeObjectRelease();
  sub_253944930();
  sub_25346CAF4();
  sub_253944540();
  v29();
LABEL_7:
  uint64_t v16 = *(int *)(v1 + 20);
  uint64_t v17 = v5 + v16;
  uint64_t v18 = v3 + v16;
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5 + v16, 1, v6);
  int v20 = sub_2539443F0(v18);
  if (!v19)
  {
    if (!v20)
    {
      sub_253944B08();
      swift_bridgeObjectRelease();
      sub_253944EAC();
      sub_25346CAF4();
      sub_253944540();
      v30();
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v24 = sub_253462A5C(&qword_26B249528);
    uint64_t v25 = sub_25346CB4C(v24);
    sub_2539449C8(v25, v27, *(void *)(v26 + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  sub_2539444CC();
  sub_25346CAF4();
  uint64_t v22 = *(void (**)(uint64_t))(v21 + 16);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_253944B34();
  v22(v23);
  sub_2536D4030(v17);
LABEL_13:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v28();
  sub_2535E2374();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoIndexExpressionVwtk_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_2539443F0(v3))
  {
    uint64_t v6 = sub_253462A5C(&qword_26B249528);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_2539445E4(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    sub_25394479C();
    sub_25346CAF4();
    sub_2534D8E14();
    v10();
    sub_2536D4030(v5);
  }
  uint64_t v11 = *(int *)(v1 + 20);
  uint64_t v12 = v5 + v11;
  if (sub_2539443F0(v3 + v11))
  {
    uint64_t v13 = sub_253462A5C(&qword_26B249528);
    uint64_t v14 = sub_25346CB4C(v13);
    sub_2539449C8(v14, v16, *(void *)(v15 + 64));
  }
  else
  {
    sub_253944460();
    sub_25346CAF4();
    sub_2534D8E14();
    v17();
    sub_2536D4030(v12);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v18();
  sub_25346CD04();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoIndexExpressionVwta_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6);
  int v8 = sub_2539443F0(v3);
  if (v7)
  {
    if (!v8)
    {
      sub_25394479C();
      sub_25346CAF4();
      sub_2534D8E14();
      v9();
      sub_2536D4030(v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    uint64_t v11 = sub_25346CB4C(v10);
    sub_2539445E4(v11, v13, *(void *)(v12 + 64));
    goto LABEL_7;
  }
  sub_253945AEC();
  sub_253944930();
  sub_25346CAF4();
  sub_253944534();
  v25();
LABEL_7:
  uint64_t v14 = *(int *)(v1 + 20);
  uint64_t v15 = v5 + v14;
  uint64_t v16 = v3 + v14;
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5 + v14, 1, v6);
  int v18 = sub_2539443F0(v16);
  if (!v17)
  {
    if (!v18)
    {
      sub_253945058();
      sub_253944EAC();
      sub_25346CAF4();
      sub_253944534();
      v26();
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = sub_253462A5C(&qword_26B249528);
    uint64_t v21 = sub_25346CB4C(v20);
    sub_2539449C8(v21, v23, *(void *)(v22 + 64));
    goto LABEL_13;
  }
  sub_253944460();
  sub_25346CAF4();
  sub_2534D8E14();
  v19();
  sub_2536D4030(v15);
LABEL_13:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v24();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIndexExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253902334);
}

uint64_t sub_253902334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253902340(a1, a2, a3, &qword_26B249528);
}

uint64_t sub_253902340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_253944F84(a1, a2, a3, a4);
  sub_2535782A8();
  if (*(_DWORD *)(v7 + 84) == v4)
  {
    uint64_t v8 = sub_253945320();
  }
  else
  {
    uint64_t v9 = sub_253B07160();
    uint64_t v8 = v5 + *(int *)(v6 + 24);
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v4, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIndexExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539023C0);
}

uint64_t sub_2539023C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2539023CC(a1, a2, a3, a4, &qword_26B249528);
}

uint64_t sub_2539023CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_253944B60(a1, a2, a3, a4, a5);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v5) {
    sub_253944FD8();
  }
  else {
    sub_253B07160();
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, v8, v9, v10);
}

void sub_253902438(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_253944F18(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_253B07160();
    if (v6 <= 0x3F)
    {
      sub_2535E2794();
      sub_2535E2578();
    }
  }
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwca_0()
{
  sub_2535E2390();
  sub_2539457A0(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  int v4 = sub_2539442E4(v3);
  if (!v0)
  {
    if (!v4)
    {
      sub_2539453E0();
      swift_bridgeObjectRelease();
      sub_253944ECC();
      sub_25346CAF4();
      sub_253944540();
      v13();
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    uint64_t v8 = sub_253462A5C(&qword_26B249528);
    uint64_t v9 = sub_25346CB4C(v8);
    sub_253944A48(v9, v11, *(void *)(v10 + 64));
    goto LABEL_7;
  }
  sub_253944CD4();
  sub_25346CAF4();
  unint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_253945A94();
  v6(v7);
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v12();
  sub_2535E2374();
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwta_0()
{
  sub_2535B3C98();
  sub_253945778(v1, v2);
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  int v4 = sub_2539442E4(v3);
  if (!v0)
  {
    if (!v4)
    {
      sub_253945A00();
      sub_253944ECC();
      sub_25346CAF4();
      sub_253944534();
      v11();
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    uint64_t v6 = sub_253462A5C(&qword_26B249528);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_253944A48(v7, v9, *(void *)(v8 + 64));
    goto LABEL_7;
  }
  sub_253945214();
  sub_25346CAF4();
  sub_2534D8E14();
  v5();
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v10();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUpdateParametersExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253902754);
}

uint64_t sub_253902754()
{
  return sub_253903F38();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUpdateParametersExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253902774);
}

void sub_253902774()
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v27 = (char *)v10 + v15;
      uint64_t v17 = sub_253B07160();
      int v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v27, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)v4 + v19;
    uint64_t v22 = (uint64_t)a2 + v19;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = *(unsigned char *)(v22 + 8);
    uint64_t v23 = (char *)v4 + v20;
    uint64_t v24 = (uint64_t)a2 + v20;
    uint64_t v25 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v25 = (char *)v9 + v13;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v25, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  uint64_t v23 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v26 = *(int *)(v9 + 24);
      uint64_t v27 = (char *)v7 + v26;
      size_t v28 = (char *)v8 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v30 = (char *)v8 + v12;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v13, v30, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  *(unsigned char *)(v18 + 8) = *((unsigned char *)v19 + 8);
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    _DWORD *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v26 = *(void *)(v9 + 16);
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(void *)(v8 + 16) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(int *)(v10 + 24);
      uint64_t v28 = v8 + v27;
      uint64_t v29 = v9 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  uint64_t v24 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253903224);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25390323C);
}

void sub_253903240()
{
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoGlobalToolIdentifierVwCP_0()
{
  sub_2535B3C98();
  sub_2535782A8();
  if ((*(_DWORD *)(v2 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    sub_253945F6C(v0, v1);
    sub_253945F40();
    sub_25346CAF4();
    uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_253944804();
    v4(v5);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoGlobalToolIdentifierVwxx_0()
{
  sub_253944D98();
  swift_bridgeObjectRelease();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoGlobalToolIdentifierVwcp_0()
{
  sub_2535B3C98();
  sub_253945CA0(v0, v1);
  sub_253944E74();
  sub_25346CAF4();
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_253944804();
  v3(v4);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoGlobalToolIdentifierVwca_0(void *a1, void *a2)
{
  sub_253944580(a1, a2);
  swift_bridgeObjectRelease();
  sub_253945978();
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v3();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoGlobalToolIdentifierVwtk_0(_OWORD *a1, uint64_t a2)
{
  sub_253945CB8(a1, a2);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoGlobalToolIdentifierVwta_0(void *a1, void *a2)
{
  sub_2539445FC(a1, a2);
  sub_253945BD4();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v3();
  return v2;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoGlobalToolIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539034DC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoGlobalToolIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539034F4);
}

uint64_t sub_2539034F8()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoCallExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0448);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v13;
      uint64_t v14 = v10[3];
      v9[2] = v10[2];
      v9[3] = v14;
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v23 = (char *)v10 + v15;
      uint64_t v24 = (char *)v9 + v15;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17(v24, v23, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoCallExpression(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoCallExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0448);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = v8[1];
    void *v7 = *v8;
    v7[1] = v11;
    uint64_t v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    uint64_t v13 = *(int *)(v9 + 24);
    uint64_t v21 = (char *)v8 + v13;
    uint64_t v22 = (char *)v7 + v13;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v22, v21, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for TranscriptProtoCallExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      void *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(v9 + 24);
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v23 = (char *)v8 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CE0448);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  void *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v25 = (char *)v8 + v12;
  uint64_t v26 = (char *)v7 + v12;
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v26, v25, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

void *initializeWithTake for TranscriptProtoCallExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0448);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v8[1];
    _OWORD *v7 = *v8;
    v7[1] = v11;
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

void *assignWithTake for TranscriptProtoCallExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v23 = v8[1];
      void *v7 = *v8;
      v7[1] = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = v8[3];
      v7[2] = v8[2];
      v7[3] = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v9 + 24);
      uint64_t v26 = (char *)v7 + v25;
      uint64_t v27 = (char *)v8 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE0448);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  long long v12 = *((_OWORD *)v8 + 1);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v12;
  uint64_t v13 = *(int *)(v9 + 24);
  uint64_t v14 = (char *)v7 + v13;
  uint64_t v15 = (char *)v8 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCallExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253903F2C);
}

uint64_t sub_253903F2C()
{
  return sub_253903F38();
}

uint64_t sub_253903F38()
{
  sub_2535E2298();
  if (v6) {
    return sub_2534F89A0(*v1);
  }
  sub_253944DB4(v2, v3, v4, v5);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253B07160();
    sub_2535E2560();
  }
  uint64_t v10 = sub_2535E22C8(v9);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, v11, v12);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCallExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253903FD0);
}

void sub_253903FD0()
{
}

void sub_253903FDC()
{
  sub_2535E2244();
  if (v6)
  {
    sub_2535E2538();
  }
  else
  {
    sub_253944D7C(v1, v2, v3, v4, v5);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
    uint64_t v9 = sub_2535E2234(v8);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
  }
}

void sub_25390405C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSayExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25390409C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSayExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539040B4);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPickExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_26B249528);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v13 = v9[2];
      v8[1] = v9[1];
      v8[2] = v13;
      uint64_t v14 = *(int *)(v10 + 24);
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v23 = (char *)v9 + v14;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v23, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t _s30IntelligenceFlowPlannerSupport31TranscriptProtoPrefixExpressionVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_2539443F0(v2))
  {
    swift_bridgeObjectRelease();
    sub_253945244();
    sub_25346CAF4();
    uint64_t v3 = sub_253945338();
    v4(v3);
  }
  sub_253944B84();
  sub_25346CAF4();
  uint64_t v5 = sub_2539446BC();
  return v6(v5);
}

void *initializeWithCopy for TranscriptProtoPickExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    uint64_t v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v21 = (char *)v8 + v12;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v13, v21, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for TranscriptProtoPickExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v9 + 24);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v26 = (char *)v8 + v12;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v13, v26, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

void *assignWithTake for TranscriptProtoPickExpression(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      uint64_t v22 = *(void *)(v8 + 16);
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      *(void *)(v7 + 16) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v9 + 24);
      uint64_t v24 = v7 + v23;
      uint64_t v25 = v8 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPickExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539048F0);
}

uint64_t sub_2539048F0()
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253B07160();
    sub_2535E2560();
  }
  uint64_t v3 = sub_2535E22C8(v2);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPickExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253904978);
}

uint64_t sub_253904978(uint64_t a1, uint64_t a2, int a3)
{
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) != a3) {
    sub_253B07160();
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
}

void sub_253904A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoConfirmExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253904A58);
}

uint64_t sub_253904A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoConfirmExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253904A78);
}

uint64_t sub_253904A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_26B249528);
}

void sub_253904A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoSearchExpression(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_253B07160();
    int v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253904EB4);
}

uint64_t sub_253904EB8()
{
  sub_2535E2298();
  if (v1) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  sub_2535E27E4();
  uint64_t v4 = sub_2535E22C8(v3);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253904F2C);
}

void sub_253904F30()
{
  sub_2535E2244();
  if (v0)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    sub_2535E2830();
    uint64_t v2 = sub_2535E2234(v1);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_253904F8C()
{
  return sub_253904F98();
}

uint64_t sub_253904F98()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_25394507C();
    return sub_2535E2578();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStructuredSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253905030);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStructuredSearchExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253905048);
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwCP_0()
{
  sub_2534B3258();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2535782A8();
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    type metadata accessor for TranscriptProtoStatementID(0);
    if (sub_2539443F0((uint64_t)v1))
    {
      uint64_t v5 = sub_253462A5C(&qword_26B249528);
      uint64_t v6 = sub_25346CB4C(v5);
      sub_2539445E4(v6, v8, *(void *)(v7 + 64));
    }
    else
    {
      sub_25394476C();
      sub_25346CAF4();
      uint64_t v10 = *(void (**)(uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_253944670();
      v10(v11);
      sub_2536D4030(v3);
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v12 = sub_25354710C();
    v13(v12);
  }
  sub_253465A14();
}

uint64_t _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwxx_0()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_253944F38(v0))
  {
    swift_bridgeObjectRelease();
    sub_253B07160();
    sub_25346CAF4();
    uint64_t v1 = sub_253945338();
    v2(v1);
  }
  sub_253944D10();
  sub_25346CAF4();
  uint64_t v3 = sub_2539446BC();
  return v4(v3);
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwcp_0()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_2539443F0(v1))
  {
    uint64_t v4 = sub_253462A5C(&qword_26B249528);
    uint64_t v5 = sub_25346CB4C(v4);
    sub_2539445E4(v5, v7, *(void *)(v6 + 64));
  }
  else
  {
    sub_25394476C();
    sub_25346CAF4();
    uint64_t v9 = *(void (**)(uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_253944670();
    v9(v10);
    sub_2536D4030(v3);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v11();
  sub_253465A14();
}

uint64_t _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwtk_0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_2539443F0(a2))
  {
    uint64_t v4 = sub_253462A5C(&qword_26B249528);
    uint64_t v5 = sub_25346CB4C(v4);
    sub_2539445E4(v5, v7, *(void *)(v6 + 64));
  }
  else
  {
    sub_25394479C();
    sub_25346CAF4();
    sub_2534D8E14();
    v8();
    sub_2536D4030(a1);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v9();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPickOneExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539053BC);
}

uint64_t sub_2539053BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPickOneExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539053DC);
}

uint64_t sub_2539053DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_26B249528);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResolveToolExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539053FC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResolveToolExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253905414);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25390542C);
}

uint64_t sub_25390542C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25390544C);
}

uint64_t sub_25390544C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_26B249528);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRejectExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25390546C);
}

uint64_t sub_25390546C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRejectExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25390548C);
}

uint64_t sub_25390548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_26B249528);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCancelExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539054AC);
}

uint64_t sub_2539054AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCancelExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539054CC);
}

uint64_t sub_2539054CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_26B249528);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoNoMatchingToolExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CC0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoNoMatchingToolExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C68);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContinuePlanningExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CC4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContinuePlanningExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C6C);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEndOfPlanExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CC8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEndOfPlanExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C70);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoGetMentionedAppsExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CCC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoGetMentionedAppsExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C74);
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwca_0()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  int v5 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v3, 1, v4);
  int v6 = sub_2539443F0(v1);
  if (!v5)
  {
    if (!v6)
    {
      sub_25394546C();
      swift_bridgeObjectRelease();
      sub_2539454DC();
      sub_25346CAF4();
      sub_253944540();
      v15();
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    uint64_t v11 = sub_25346CB4C(v10);
    sub_2539445E4(v11, v13, *(void *)(v12 + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v3 = *(_DWORD *)v1;
  *(void *)(v3 + 8) = *(void *)(v1 + 8);
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  sub_2539448FC();
  sub_25346CAF4();
  uint64_t v8 = *(void (**)(uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_253944670();
  v8(v9);
  sub_2536D4030(v3);
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v14();
  sub_253465A14();
}

uint64_t _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  int v5 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4);
  int v6 = sub_2539443F0(a2);
  if (!v5)
  {
    if (!v6)
    {
      sub_253945AEC();
      sub_2539454DC();
      sub_25346CAF4();
      sub_253944534();
      v14();
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_253462A5C(&qword_26B249528);
    uint64_t v9 = sub_25346CB4C(v8);
    sub_2539445E4(v9, v11, *(void *)(v10 + 64));
    goto LABEL_7;
  }
  sub_25394479C();
  sub_25346CAF4();
  sub_2534D8E14();
  v7();
  sub_2536D4030(a1);
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v12();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoOpenExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253905840);
}

uint64_t sub_253905840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoOpenExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253905860);
}

uint64_t sub_253905860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_26B249528);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExplicitResolutionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CD0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExplicitResolutionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C78);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoToolParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE2490);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_253B08E50();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_253B08E50();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *initializeWithCopy for TranscriptProtoToolParameterValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2490);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

void *assignWithCopy for TranscriptProtoToolParameterValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_253B08E50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CE2490);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoToolParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE2490);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_253B08E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoToolParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_2536FA73C();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_253B08E50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
      goto LABEL_8;
    }
    sub_2536FA73C();
LABEL_7:
    size_t v10 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2490) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v10);
    goto LABEL_14;
  }
  if (v8) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_253B08E50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_14:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539062A0);
}

uint64_t sub_2539062A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE2490);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolParameterValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539062C0);
}

uint64_t sub_2539062C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE2490);
}

void sub_2539062CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoToolParameterValueEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253B08E50();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolParameterValueEnum(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_253B08E50();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *initializeWithCopy for TranscriptProtoToolParameterValueEnum(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253B08E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoToolParameterValueEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoToolParameterValueEnum(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_253B08E50();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TranscriptProtoToolParameterValueEnum(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253B08E50();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25390679C()
{
  uint64_t result = sub_253B08E50();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEntitySpanMatchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253906844);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEntitySpanMatchResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25390685C);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253906874);
}

uint64_t sub_253906878()
{
  sub_2535E2298();
  if (v1) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  sub_253945148();
  uint64_t v4 = sub_2535E22C8(v3);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539068EC);
}

void sub_2539068F0()
{
  sub_2535E2244();
  if (v0)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    sub_25394519C();
    uint64_t v2 = sub_2535E2234(v1);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_25390694C()
{
  return sub_25390696C();
}

uint64_t sub_25390696C()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return sub_2535E2578();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemResponse(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v6 = a3;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = a3[7];
  size_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  a1[4] = a2[4];
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_89:
      uint64_t v163 = *(int *)(v12 + 20);
      uint64_t v164 = (char *)v10 + v163;
      uint64_t v165 = (char *)v11 + v163;
      uint64_t v166 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      goto LABEL_90;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *size_t v10 = *v11;
        uint64_t v322 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v22 = *(int *)(v322 + 20);
        uint64_t v23 = (void *)((char *)v10 + v22);
        uint64_t v24 = (char *)v11 + v22;
        uint64_t v25 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CE0480);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          uint64_t v59 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v60 = (uint64_t)v24;
          uint64_t v61 = v59;
          __src = (void *)v60;
          __dstb = (void *)v25;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v60, 1, v59))
          {
            uint64_t v62 = sub_253462A5C(&qword_269CE0478);
            uint64_t v63 = __src;
            memcpy(v23, __src, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            uint64_t v290 = v61;
            uint64_t v63 = __src;
            uint64_t v87 = __src[1];
            *uint64_t v23 = *__src;
            v23[1] = v87;
            *((unsigned char *)v23 + 16) = *((unsigned char *)__src + 16);
            uint64_t v285 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v88 = *(int *)(v285 + 24);
            uint64_t v294 = (uint64_t)v23;
            uint64_t v282 = (char *)v23 + v88;
            uint64_t v89 = (char *)__src + v88;
            uint64_t v90 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
            {
              uint64_t v91 = sub_253462A5C(&qword_269CE0470);
              memcpy(v282, v89, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
              *uint64_t v282 = *v89;
              uint64_t v109 = *(int *)(v90 + 20);
              uint64_t v281 = &v282[v109];
              uint64_t v284 = &v89[v109];
              uint64_t v110 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v110 - 8) + 16))(v281, v284, v110);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v282, 0, 1, v90);
            }
            uint64_t v111 = *(int *)(v285 + 28);
            uint64_t v23 = (void *)v294;
            uint64_t v112 = v294 + v111;
            uint64_t v287 = (char *)__src + v111;
            uint64_t v113 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v112, v287, v113);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v294, 0, 1, v290);
            uint64_t v25 = (uint64_t)__dstb;
          }
          uint64_t v114 = *(int *)(v25 + 20);
          uint64_t v115 = (char *)v23 + v114;
          uint64_t v116 = (char *)v63 + v114;
          uint64_t v117 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, (uint64_t)__dstb);
        }
        uint64_t v118 = *(int *)(v322 + 24);
        uint64_t v119 = (char *)v10 + v118;
        uint64_t v120 = (char *)v11 + v118;
        uint64_t v121 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
        goto LABEL_88;
      case 2u:
        uint64_t v27 = v11[1];
        *size_t v10 = *v11;
        v10[1] = v27;
        uint64_t v28 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_27;
      case 3u:
        uint64_t v29 = v11[1];
        *size_t v10 = *v11;
        v10[1] = v29;
        v10[2] = v11[2];
        *((unsigned char *)v10 + 24) = *((unsigned char *)v11 + 24);
        uint64_t v30 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_16;
      case 4u:
        uint64_t v31 = v11[1];
        *size_t v10 = *v11;
        v10[1] = v31;
        uint64_t v32 = v11[3];
        v10[2] = v11[2];
        v10[3] = v32;
        *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_23;
      case 5u:
        uint64_t v34 = v11[1];
        *size_t v10 = *v11;
        v10[1] = v34;
        *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
        uint64_t v30 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_16:
        uint64_t v35 = *(int *)(v30 + 24);
        __dst = (char *)v10 + v35;
        uint64_t v323 = v30;
        uint64_t v36 = (char *)v11 + v35;
        uint64_t v37 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
        {
          uint64_t v38 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(__dst, v36, v37);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v37);
        }
        uint64_t v53 = *(int *)(v323 + 28);
        goto LABEL_87;
      case 6u:
        uint64_t v39 = v11[1];
        *size_t v10 = *v11;
        v10[1] = v39;
        uint64_t v40 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v41 = *(int *)(v40 + 20);
        __dsta = (char *)v10 + v41;
        uint64_t v324 = v40;
        uint64_t v42 = (char *)v11 + v41;
        uint64_t v43 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dsta, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(__dsta, v42, v43);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v43);
        }
        uint64_t v53 = *(int *)(v324 + 24);
        goto LABEL_87;
      case 7u:
        uint64_t v45 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v45))
        {
          uint64_t v46 = sub_253462A5C(&qword_269CE0498);
          memcpy(v10, v11, *(void *)(*(void *)(v46 - 8) + 64));
          goto LABEL_85;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)size_t v10 = *(unsigned char *)v11;
            uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v97 = (char *)v10 + v96;
            uint64_t v98 = (char *)v11 + v96;
            uint64_t v99 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
            goto LABEL_58;
          }
          if (!EnumCaseMultiPayload)
          {
            *(unsigned char *)size_t v10 = *(unsigned char *)v11;
            uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v66 = (char *)v10 + v65;
            uint64_t v67 = (char *)v11 + v65;
            uint64_t v68 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            goto LABEL_84;
          }
          memcpy(v10, v11, *(void *)(*(void *)(v45 - 8) + 64));
LABEL_84:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v45);
LABEL_85:
          uint64_t v108 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_86:
          uint64_t v53 = *(int *)(v108 + 20);
LABEL_87:
          uint64_t v160 = (char *)v10 + v53;
          uint64_t v161 = (char *)v11 + v53;
          uint64_t v162 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
LABEL_88:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v15);
          goto LABEL_89;
        }
        uint64_t v94 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v94))
        {
          uint64_t v95 = sub_253462A5C(&qword_269CE0490);
          memcpy(v10, v11, *(void *)(*(void *)(v95 - 8) + 64));
LABEL_83:
          uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v157 = (char *)v10 + v156;
          uint64_t v158 = (char *)v11 + v156;
          uint64_t v159 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
          swift_storeEnumTagMultiPayload();
          goto LABEL_84;
        }
        int v145 = swift_getEnumCaseMultiPayload();
        if (v145 == 1)
        {
          uint64_t v149 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v149))
          {
            uint64_t v150 = sub_253462A5C(&qword_269CE0488);
            memcpy(v10, v11, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            *(unsigned char *)size_t v10 = *(unsigned char *)v11;
            uint64_t v151 = *(int *)(v149 + 20);
            __dstj = (char *)v11 + v151;
            uint64_t v329 = (char *)v10 + v151;
            uint64_t v152 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v329, __dstj, v152);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v149);
          }
          uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v154 = (char *)v10 + v153;
          uint64_t v330 = (char *)v11 + v153;
          uint64_t v155 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v154, v330, v155);
        }
        else
        {
          if (v145)
          {
            memcpy(v10, v11, *(void *)(*(void *)(v94 - 8) + 64));
LABEL_82:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v94);
            goto LABEL_83;
          }
          uint64_t v146 = v11[1];
          *size_t v10 = *v11;
          v10[1] = v146;
          uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          __srce = (char *)v11 + v147;
          __dsti = (char *)v10 + v147;
          uint64_t v148 = sub_253B07160();
          uint64_t v296 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
          swift_bridgeObjectRetain();
          v296(__dsti, __srce, v148);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_82;
      case 8u:
        uint64_t v47 = v11[1];
        *size_t v10 = *v11;
        v10[1] = v47;
        v10[2] = v11[2];
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_23:
        __dstd = (char *)v11 + v33;
        uint64_t v325 = (char *)v10 + v33;
        uint64_t v48 = sub_253B07160();
        __srcb = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
        uint64_t v335 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __srcb(v325, __dstd, v48);
        goto LABEL_28;
      case 9u:
        uint64_t v49 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v10, v11, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v69 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v69))
          {
            uint64_t v70 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v10, v11, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            uint64_t v86 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 16, v86))
            {
              memcpy(v10, v11, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              uint64_t v100 = v11[1];
              *size_t v10 = *v11;
              v10[1] = v100;
              uint64_t v101 = v11[3];
              v10[2] = v11[2];
              v10[3] = v101;
              v10[4] = v11[4];
              uint64_t v102 = *(int *)(v86 + 28);
              __srcd = (char *)v11 + v102;
              __dstg = (char *)v10 + v102;
              uint64_t v327 = v86;
              uint64_t v103 = sub_253B07160();
              uint64_t v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v286(__dstg, __srcd, v103);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 16, v327);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v69);
          }
          uint64_t v104 = *(int *)(v49 + 20);
          uint64_t v105 = (char *)v10 + v104;
          uint64_t v106 = (char *)v11 + v104;
          uint64_t v107 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v49);
        }
        uint64_t v108 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_86;
      case 0xAu:
        *size_t v10 = *v11;
        uint64_t v28 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_27:
        uint64_t v51 = *(int *)(v28 + 20);
        uint64_t v339 = (char *)v10 + v51;
        uint64_t v326 = (char *)v11 + v51;
        uint64_t v52 = sub_253B07160();
        uint64_t v335 = v15;
        __dste = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        __dste(v339, v326, v52);
LABEL_28:
        uint64_t v15 = v335;
        goto LABEL_88;
      default:
        *(unsigned char *)size_t v10 = *(unsigned char *)v11;
        *(_WORD *)((char *)v10 + 1) = *(_WORD *)((char *)v11 + 1);
        uint64_t v321 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v17 = v321[7];
        uint64_t v18 = (char *)v10 + v17;
        uint64_t v19 = (char *)v11 + v17;
        uint64_t v20 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        uint64_t v54 = v321[8];
        uint64_t v55 = (void *)((char *)v10 + v54);
        uint64_t v56 = (void *)((char *)v11 + v54);
        uint64_t v57 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v57))
        {
          uint64_t v58 = sub_253462A5C(&qword_269CE0450);
          memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          uint64_t v71 = v56[1];
          *uint64_t v55 = *v56;
          v55[1] = v71;
          uint64_t v72 = v56[3];
          v55[2] = v56[2];
          v55[3] = v72;
          uint64_t v73 = v56[5];
          v55[4] = v56[4];
          v55[5] = v73;
          uint64_t v74 = *(int *)(v57 + 28);
          __srcc = (char *)v56 + v74;
          __dstf = (char *)v55 + v74;
          uint64_t v75 = sub_253B07160();
          uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v283(__dstf, __srcc, v75);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v55, 0, 1, v57);
        }
        uint64_t v76 = v321[9];
        uint64_t v77 = (void *)((char *)v10 + v76);
        uint64_t v78 = (char *)v11 + v76;
        uint64_t v79 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        uint64_t v336 = v15;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_253462A5C(&qword_269CE0468);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          uint64_t v81 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v82 = (uint64_t)v78;
          uint64_t v83 = v81;
          __dstc = (void *)v82;
          __srca = (void *)v79;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v82, 1, v81))
          {
            uint64_t v84 = sub_253462A5C(&qword_269CE0460);
            uint64_t v85 = __dstc;
            memcpy(v77, __dstc, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            uint64_t v291 = v83;
            uint64_t v92 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v295 = v77;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstc, 1, v92))
            {
              uint64_t v93 = sub_253462A5C(&qword_269CE0458);
              memcpy(v77, __dstc, *(void *)(*(void *)(v93 - 8) + 64));
            }
            else
            {
              uint64_t v288 = v92;
              uint64_t v122 = __dstc[1];
              *uint64_t v77 = *__dstc;
              v77[1] = v122;
              uint64_t v123 = __dstc[2];
              unint64_t v124 = __dstc[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v123, v124);
              v295[2] = v123;
              v295[3] = v124;
              v295[4] = __dstc[4];
              uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v126 = (char *)v295 + v125;
              uint64_t v127 = (char *)__dstc + v125;
              uint64_t v128 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v295, 0, 1, v288);
            }
            uint64_t v129 = *(int *)(v291 + 20);
            uint64_t v130 = (char *)v295 + v129;
            uint64_t v85 = __dstc;
            uint64_t v289 = (char *)__dstc + v129;
            uint64_t v131 = sub_253B07160();
            uint64_t v132 = v130;
            uint64_t v77 = v295;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v132, v289, v131);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v295, 0, 1, v291);
            uint64_t v79 = (uint64_t)__srca;
          }
          uint64_t v133 = *(int *)(v79 + 20);
          uint64_t v134 = (uint64_t)v77;
          uint64_t v135 = (char *)v77 + v133;
          uint64_t v136 = (char *)v85 + v133;
          uint64_t v137 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v134, 0, 1, (uint64_t)__srca);
        }
        uint64_t v138 = v321[10];
        uint64_t v139 = (void *)((char *)v10 + v138);
        uint64_t v140 = (void *)((char *)v11 + v138);
        uint64_t v141 = v140[1];
        void *v139 = *v140;
        v139[1] = v141;
        uint64_t v142 = v321[11];
        __dsth = (char *)v11 + v142;
        uint64_t v328 = (char *)v10 + v142;
        uint64_t v143 = sub_253B07160();
        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
        swift_bridgeObjectRetain();
        v144(v328, __dsth, v143);
        uint64_t v15 = v336;
        goto LABEL_88;
    }
  }
  uint64_t v13 = sub_253462A5C(&qword_269CE0388);
  memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_90:
  uint64_t v167 = v6[8];
  uint64_t v168 = (void *)((char *)v4 + v167);
  uint64_t v169 = (void *)((char *)v3 + v167);
  uint64_t v170 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v169, 1, (uint64_t)v170))
  {
    uint64_t v171 = sub_253462A5C(&qword_269CE24C8);
    memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
  }
  else
  {
    uint64_t v340 = v6;
    *uint64_t v168 = *v169;
    *((unsigned char *)v168 + 8) = *((unsigned char *)v169 + 8);
    v168[2] = v169[2];
    uint64_t v172 = v170[7];
    uint64_t v173 = (void *)((char *)v168 + v172);
    uint64_t v174 = (void *)((char *)v169 + v172);
    uint64_t v175 = type metadata accessor for TranscriptProtoDialogType(0);
    swift_bridgeObjectRetain();
    uint64_t v176 = v175;
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v174, 1, v175))
    {
      uint64_t v177 = sub_253462A5C(&qword_269CE2010);
      memcpy(v173, v174, *(void *)(*(void *)(v177 - 8) + 64));
    }
    else
    {
      uint64_t v178 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v174, 1, v178))
      {
        uint64_t v179 = sub_253462A5C(&qword_269CE2050);
        memcpy(v173, v174, *(void *)(*(void *)(v179 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v183 = v174[1];
            *uint64_t v173 = *v174;
            v173[1] = v183;
            uint64_t v182 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_102;
          case 2u:
            uint64_t v184 = v174[1];
            *uint64_t v173 = *v174;
            v173[1] = v184;
            uint64_t v182 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_102;
          case 3u:
          case 4u:
            uint64_t v180 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v180 - 8) + 16))(v173, v174, v180);
            goto LABEL_103;
          case 5u:
            uint64_t v185 = v174[1];
            *uint64_t v173 = *v174;
            v173[1] = v185;
            uint64_t v182 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_102;
          default:
            uint64_t v181 = v174[1];
            *uint64_t v173 = *v174;
            v173[1] = v181;
            uint64_t v182 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_102:
            uint64_t v186 = *(int *)(v182 + 20);
            uint64_t v297 = (char *)v174 + v186;
            __srcf = (char *)v173 + v186;
            uint64_t v187 = sub_253B07160();
            uint64_t v292 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v188 = v187;
            uint64_t v176 = v175;
            v292(__srcf, v297, v188);
LABEL_103:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v173, 0, 1, v178);
            break;
        }
      }
      uint64_t v189 = *(int *)(v176 + 20);
      uint64_t v190 = v176;
      uint64_t v191 = (char *)v173 + v189;
      uint64_t v192 = (char *)v174 + v189;
      uint64_t v193 = sub_253B07160();
      uint64_t v194 = v191;
      uint64_t v176 = v190;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v194, v192, v193);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v173, 0, 1, v190);
    }
    uint64_t v195 = v170[8];
    uint64_t v196 = (void *)((char *)v168 + v195);
    uint64_t v197 = (void *)((char *)v169 + v195);
    uint64_t v198 = v340;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v169 + v195, 1, v176))
    {
      uint64_t v199 = sub_253462A5C(&qword_269CE2010);
      memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
    }
    else
    {
      uint64_t v200 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v200))
      {
        uint64_t v201 = sub_253462A5C(&qword_269CE2050);
        memcpy(v196, v197, *(void *)(*(void *)(v201 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v205 = v197[1];
            void *v196 = *v197;
            v196[1] = v205;
            uint64_t v204 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_115;
          case 2u:
            uint64_t v206 = v197[1];
            void *v196 = *v197;
            v196[1] = v206;
            uint64_t v204 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_115;
          case 3u:
          case 4u:
            uint64_t v202 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v202 - 8) + 16))(v196, v197, v202);
            goto LABEL_116;
          case 5u:
            uint64_t v207 = v197[1];
            void *v196 = *v197;
            v196[1] = v207;
            uint64_t v204 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_115;
          default:
            uint64_t v203 = v197[1];
            void *v196 = *v197;
            v196[1] = v203;
            uint64_t v204 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_115:
            uint64_t v208 = *(int *)(v204 + 20);
            uint64_t v298 = (char *)v197 + v208;
            __srcg = (char *)v196 + v208;
            uint64_t v209 = v176;
            uint64_t v210 = sub_253B07160();
            uint64_t v293 = *(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v211 = v210;
            uint64_t v176 = v209;
            v293(__srcg, v298, v211);
LABEL_116:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v200);
            break;
        }
      }
      uint64_t v212 = *(int *)(v176 + 20);
      uint64_t v213 = v176;
      uint64_t v214 = (char *)v196 + v212;
      uint64_t v215 = (char *)v197 + v212;
      uint64_t v216 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v214, v215, v216);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v213);
      uint64_t v198 = v340;
    }
    uint64_t v217 = v170[9];
    uint64_t v218 = (char *)v168 + v217;
    uint64_t v219 = (char *)v169 + v217;
    uint64_t v220 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v220))
    {
      uint64_t v221 = sub_253462A5C(&qword_269CE2000);
      memcpy(v218, v219, *(void *)(*(void *)(v221 - 8) + 64));
    }
    else
    {
      unsigned char *v218 = *v219;
      uint64_t v222 = *(int *)(v220 + 20);
      uint64_t v223 = &v218[v222];
      uint64_t v224 = &v219[v222];
      uint64_t v225 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v218, 0, 1, v220);
    }
    uint64_t v226 = v170[10];
    uint64_t v227 = (void *)((char *)v168 + v226);
    uint64_t v228 = (void *)((char *)v169 + v226);
    uint64_t v229 = type metadata accessor for TranscriptProtoVisualOutput(0);
    uint64_t v337 = (uint64_t)v168;
    uint64_t v338 = v3;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v228, 1, v229))
    {
      uint64_t v230 = (uint64_t)v170;
      uint64_t v231 = v198;
      uint64_t v232 = sub_253462A5C(&qword_269CE1FF0);
      memcpy(v227, v228, *(void *)(*(void *)(v232 - 8) + 64));
    }
    else
    {
      uint64_t v233 = type metadata accessor for TranscriptProtoVisualOutputType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v228, 1, v233))
      {
        uint64_t v230 = (uint64_t)v170;
        uint64_t v234 = sub_253462A5C(&qword_269CDCC18);
        memcpy(v227, v228, *(void *)(*(void *)(v234 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v230 = (uint64_t)v170;
            uint64_t v237 = v228[1];
            void *v227 = *v228;
            v227[1] = v237;
            uint64_t v236 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_128;
          case 2u:
            uint64_t v230 = (uint64_t)v170;
            uint64_t v239 = *v228;
            unint64_t v331 = v228[1];
            sub_25348A9C8(*v228, v331);
            void *v227 = v239;
            v227[1] = v331;
            uint64_t v240 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
            uint64_t v241 = (char *)v227 + v240;
            uint64_t v332 = (char *)v228 + v240;
            uint64_t v242 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 16))(v241, v332, v242);
            goto LABEL_132;
          case 3u:
            uint64_t v230 = (uint64_t)v170;
            uint64_t v243 = *v228;
            unint64_t v333 = v228[1];
            sub_25348A9C8(*v228, v333);
            void *v227 = v243;
            v227[1] = v333;
            uint64_t v244 = v228[3];
            v227[2] = v228[2];
            v227[3] = v244;
            uint64_t v238 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
            goto LABEL_131;
          default:
            uint64_t v230 = (uint64_t)v170;
            uint64_t v235 = v228[1];
            void *v227 = *v228;
            v227[1] = v235;
            uint64_t v236 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_128:
            uint64_t v238 = *(int *)(v236 + 20);
LABEL_131:
            __dstk = (char *)v228 + v238;
            uint64_t v334 = (char *)v227 + v238;
            __srch = (void *)sub_253B07160();
            uint64_t v299 = *(void (**)(char *, char *, void *))(*(__srch - 1) + 16);
            swift_bridgeObjectRetain();
            v299(v334, __dstk, __srch);
LABEL_132:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v227, 0, 1, v233);
            break;
        }
      }
      uint64_t v231 = v198;
      uint64_t v245 = *(int *)(v229 + 20);
      uint64_t v246 = (char *)v227 + v245;
      uint64_t v247 = (char *)v228 + v245;
      uint64_t v248 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 16))(v246, v247, v248);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v227, 0, 1, v229);
    }
    uint64_t v249 = *(int *)(v230 + 44);
    uint64_t v250 = (void *)(v337 + v249);
    uint64_t v251 = (void *)((char *)v169 + v249);
    uint64_t v252 = v251[1];
    *uint64_t v250 = *v251;
    v250[1] = v252;
    uint64_t v253 = *(int *)(v230 + 48);
    uint64_t v254 = v337 + v253;
    uint64_t v255 = (char *)v169 + v253;
    uint64_t v256 = sub_253B07160();
    uint64_t v257 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v256 - 8) + 16);
    swift_bridgeObjectRetain();
    v257(v254, v255, v256);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v337, 0, 1, v230);
    uint64_t v6 = v231;
    uint64_t v3 = v338;
  }
  uint64_t v258 = v6[9];
  uint64_t v259 = (void *)((char *)v4 + v258);
  uint64_t v260 = (void *)((char *)v3 + v258);
  uint64_t v261 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v260, 1, v261))
  {
    uint64_t v262 = sub_253462A5C(&qword_26B249528);
    memcpy(v259, v260, *(void *)(*(void *)(v262 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v259 = *(_DWORD *)v260;
    uint64_t v263 = v260[2];
    v259[1] = v260[1];
    v259[2] = v263;
    uint64_t v264 = *(int *)(v261 + 24);
    uint64_t v265 = (char *)v259 + v264;
    uint64_t v341 = (char *)v260 + v264;
    uint64_t v266 = sub_253B07160();
    uint64_t v267 = v4;
    uint64_t v268 = v3;
    uint64_t v269 = v6;
    uint64_t v270 = *(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16);
    swift_bridgeObjectRetain();
    v270(v265, v341, v266);
    uint64_t v6 = v269;
    uint64_t v3 = v268;
    uint64_t v4 = v267;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v259, 0, 1, v261);
  }
  uint64_t v271 = v6[10];
  uint64_t v272 = v6[11];
  uint64_t v273 = (void *)((char *)v4 + v271);
  uint64_t v274 = (void *)((char *)v3 + v271);
  uint64_t v275 = v274[1];
  *uint64_t v273 = *v274;
  v273[1] = v275;
  uint64_t v276 = (char *)v4 + v272;
  uint64_t v277 = (char *)v3 + v272;
  uint64_t v278 = sub_253B07160();
  uint64_t v279 = *(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16);
  swift_bridgeObjectRetain();
  v279(v276, v277, v278);
  return v4;
}

uint64_t destroy for TranscriptProtoSystemResponse(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
LABEL_58:
      uint64_t v67 = v4 + *(int *)(v5 + 20);
      uint64_t v68 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
      goto LABEL_59;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v8 = v4 + v7[7];
        uint64_t v9 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
        }
        uint64_t v10 = v4 + v7[8];
        uint64_t v11 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = v10 + *(int *)(v11 + 28);
          uint64_t v13 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        uint64_t v14 = v4 + v7[9];
        uint64_t v15 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15))
        {
          uint64_t v16 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v16))
          {
            uint64_t v17 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v17))
            {
              swift_bridgeObjectRelease();
              sub_253487D84(*(void *)(v14 + 16), *(void *)(v14 + 24));
              uint64_t v18 = v14
                  + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              uint64_t v19 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
            }
            uint64_t v20 = v14 + *(int *)(v16 + 20);
            uint64_t v21 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
          }
          uint64_t v22 = v14 + *(int *)(v15 + 20);
          uint64_t v23 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = v7[11];
        goto LABEL_57;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v25 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v26 = v4 + *(int *)(v25 + 20);
        uint64_t v27 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v27))
        {
          uint64_t v28 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v28))
          {
            swift_bridgeObjectRelease();
            uint64_t v29 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v30 = v26 + *(int *)(v29 + 24);
            uint64_t v31 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v30, 1, v31))
            {
              uint64_t v32 = v30 + *(int *)(v31 + 20);
              uint64_t v33 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
            }
            uint64_t v34 = v26 + *(int *)(v29 + 28);
            uint64_t v35 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
          }
          uint64_t v36 = v26 + *(int *)(v27 + 20);
          uint64_t v37 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
        }
        goto LABEL_30;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_56;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v39 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_25;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_57;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v39 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_25:
        uint64_t v40 = v39;
        uint64_t v41 = v4 + *(int *)(v39 + 24);
        uint64_t v42 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v41, 1, v42)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        }
        uint64_t v24 = *(int *)(v40 + 28);
        goto LABEL_57;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v25 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v43 = v4 + *(int *)(v25 + 20);
        uint64_t v44 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v43, 1, v44)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
        }
LABEL_30:
        uint64_t v24 = *(int *)(v25 + 24);
        goto LABEL_57;
      case 7u:
        uint64_t v45 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v45)) {
          goto LABEL_55;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v47 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_55;
            }
            uint64_t v47 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_54:
          uint64_t v63 = v4 + *(int *)(v47 + 20);
          uint64_t v64 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
LABEL_55:
          uint64_t v38 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_56:
          uint64_t v24 = *(int *)(v38 + 20);
LABEL_57:
          uint64_t v65 = v4 + v24;
          uint64_t v66 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
          goto LABEL_58;
        }
        uint64_t v55 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v55)) {
          goto LABEL_53;
        }
        int v56 = swift_getEnumCaseMultiPayload();
        if (v56 == 1)
        {
          uint64_t v58 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v58))
          {
            uint64_t v59 = v4 + *(int *)(v58 + 20);
            uint64_t v60 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
          }
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v56)
          {
LABEL_53:
            uint64_t v47 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_54;
          }
          swift_bridgeObjectRelease();
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        uint64_t v61 = v4 + *(int *)(v57 + 20);
        uint64_t v62 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
        goto LABEL_53;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_57;
      case 9u:
        uint64_t v48 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v48))
        {
          uint64_t v49 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v49))
          {
            uint64_t v50 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 16, v50))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v51 = v4 + *(int *)(v50 + 28);
              uint64_t v52 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
            }
          }
          uint64_t v53 = v4 + *(int *)(v48 + 20);
          uint64_t v54 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
        }
        uint64_t v38 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_56;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_56;
      default:
        goto LABEL_58;
    }
  }
LABEL_59:
  uint64_t v69 = a1 + a2[8];
  uint64_t v70 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v69, 1, (uint64_t)v70))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v69 + v70[7];
    uint64_t v72 = type metadata accessor for TranscriptProtoDialogType(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v71, 1, v72))
    {
      uint64_t v73 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v71, 1, v73))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            uint64_t v75 = type metadata accessor for TranscriptProtoStaticText(0);
            goto LABEL_68;
          case 1u:
            swift_bridgeObjectRelease();
            uint64_t v75 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_68;
          case 2u:
            swift_bridgeObjectRelease();
            uint64_t v75 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_68;
          case 3u:
          case 4u:
            uint64_t v74 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v71, v74);
            break;
          case 5u:
            swift_bridgeObjectRelease();
            uint64_t v75 = type metadata accessor for TranscriptProtoCATDialog(0);
LABEL_68:
            uint64_t v76 = v71 + *(int *)(v75 + 20);
            uint64_t v77 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v76, v77);
            break;
          default:
            break;
        }
      }
      uint64_t v78 = v71 + *(int *)(v72 + 20);
      uint64_t v79 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v78, v79);
    }
    uint64_t v80 = v69 + v70[8];
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v80, 1, v72))
    {
      uint64_t v81 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v80, 1, v81))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            uint64_t v83 = type metadata accessor for TranscriptProtoStaticText(0);
            goto LABEL_78;
          case 1u:
            swift_bridgeObjectRelease();
            uint64_t v83 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_78;
          case 2u:
            swift_bridgeObjectRelease();
            uint64_t v83 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_78;
          case 3u:
          case 4u:
            uint64_t v82 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v80, v82);
            break;
          case 5u:
            swift_bridgeObjectRelease();
            uint64_t v83 = type metadata accessor for TranscriptProtoCATDialog(0);
LABEL_78:
            uint64_t v84 = v80 + *(int *)(v83 + 20);
            uint64_t v85 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(v84, v85);
            break;
          default:
            break;
        }
      }
      uint64_t v86 = v80 + *(int *)(v72 + 20);
      uint64_t v87 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v86, v87);
    }
    uint64_t v88 = v69 + v70[9];
    uint64_t v89 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v88, 1, v89))
    {
      uint64_t v90 = v88 + *(int *)(v89 + 20);
      uint64_t v91 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8))(v90, v91);
    }
    uint64_t v92 = v69 + v70[10];
    uint64_t v93 = type metadata accessor for TranscriptProtoVisualOutput(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v92, 1, v93))
    {
      uint64_t v94 = type metadata accessor for TranscriptProtoVisualOutputType(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v92, 1, v94))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            uint64_t v95 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
            goto LABEL_88;
          case 1u:
            swift_bridgeObjectRelease();
            uint64_t v95 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_88;
          case 2u:
            sub_253487D84(*(void *)v92, *(void *)(v92 + 8));
            uint64_t v95 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
LABEL_88:
            uint64_t v96 = *(int *)(v95 + 20);
            goto LABEL_90;
          case 3u:
            sub_253487D84(*(void *)v92, *(void *)(v92 + 8));
            swift_bridgeObjectRelease();
            uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
LABEL_90:
            uint64_t v97 = v92 + v96;
            uint64_t v98 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v98 - 8) + 8))(v97, v98);
            break;
          default:
            break;
        }
      }
      uint64_t v99 = v92 + *(int *)(v93 + 20);
      uint64_t v100 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v100 - 8) + 8))(v99, v100);
    }
    swift_bridgeObjectRelease();
    uint64_t v101 = v69 + v70[12];
    uint64_t v102 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v102 - 8) + 8))(v101, v102);
  }
  uint64_t v103 = a1 + a2[9];
  uint64_t v104 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v103, 1, v104))
  {
    swift_bridgeObjectRelease();
    uint64_t v105 = v103 + *(int *)(v104 + 24);
    uint64_t v106 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v106 - 8) + 8))(v105, v106);
  }
  swift_bridgeObjectRelease();
  uint64_t v107 = a1 + a2[11];
  uint64_t v108 = sub_253B07160();
  uint64_t v109 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v108 - 8) + 8);
  return v109(v107, v108);
}

void *initializeWithCopy for TranscriptProtoSystemResponse(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE0388);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_87;
  }
  uint64_t v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v13))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v9 = *v10;
        uint64_t v333 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v20 = *(int *)(v333 + 20);
        uint64_t v21 = (void *)((char *)v9 + v20);
        uint64_t v22 = (char *)v10 + v20;
        uint64_t v23 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_269CE0480);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v65 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v66 = (uint64_t)v22;
          uint64_t v67 = v65;
          __src = (void *)v66;
          __dstc = (void *)v23;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v66, 1, v65))
          {
            uint64_t v68 = sub_253462A5C(&qword_269CE0478);
            uint64_t v69 = __src;
            memcpy(v21, __src, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            uint64_t v291 = v67;
            uint64_t v69 = __src;
            uint64_t v94 = __src[1];
            *uint64_t v21 = *__src;
            v21[1] = v94;
            *((unsigned char *)v21 + 16) = *((unsigned char *)__src + 16);
            uint64_t v288 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v95 = *(int *)(v288 + 24);
            uint64_t v296 = (uint64_t)v21;
            uint64_t v285 = (char *)v21 + v95;
            uint64_t v96 = (char *)__src + v95;
            uint64_t v97 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v96, 1, v97))
            {
              uint64_t v98 = sub_253462A5C(&qword_269CE0470);
              memcpy(v285, v96, *(void *)(*(void *)(v98 - 8) + 64));
            }
            else
            {
              unsigned char *v285 = *v96;
              uint64_t v118 = *(int *)(v97 + 20);
              uint64_t v284 = &v285[v118];
              uint64_t v287 = &v96[v118];
              uint64_t v119 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v119 - 8) + 16))(v284, v287, v119);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v285, 0, 1, v97);
            }
            uint64_t v120 = *(int *)(v288 + 28);
            uint64_t v21 = (void *)v296;
            uint64_t v121 = v296 + v120;
            uint64_t v289 = (char *)__src + v120;
            uint64_t v122 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v121, v289, v122);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v296, 0, 1, v291);
            uint64_t v23 = (uint64_t)__dstc;
          }
          uint64_t v123 = *(int *)(v23 + 20);
          unint64_t v124 = (char *)v21 + v123;
          uint64_t v125 = (char *)v69 + v123;
          uint64_t v126 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, (uint64_t)__dstc);
        }
        uint64_t v127 = *(int *)(v333 + 24);
        uint64_t v128 = (char *)v9 + v127;
        uint64_t v129 = (char *)v10 + v127;
        uint64_t v130 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        goto LABEL_85;
      case 2u:
        uint64_t v25 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v25;
        uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        __dste = (char *)v10 + v26;
        uint64_t v330 = (char *)v9 + v26;
        uint64_t v27 = sub_253B07160();
        uint64_t v334 = v5;
        uint64_t v28 = v4;
        uint64_t v29 = v3;
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v330, __dste, v27);
        uint64_t v3 = v29;
        uint64_t v4 = v28;
        uint64_t v5 = v334;
        goto LABEL_85;
      case 3u:
        uint64_t v31 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v31;
        v9[2] = v10[2];
        *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
        uint64_t v32 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_14;
      case 4u:
        uint64_t v33 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v33;
        uint64_t v34 = v10[3];
        v9[2] = v10[2];
        v9[3] = v34;
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_21;
      case 5u:
        uint64_t v36 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v36;
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        uint64_t v32 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_14:
        uint64_t v335 = v32;
        uint64_t v37 = *(int *)(v32 + 24);
        __dst = (char *)v9 + v37;
        uint64_t v38 = (char *)v10 + v37;
        uint64_t v39 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(__dst, v38, v39);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v39);
        }
        uint64_t v59 = *(int *)(v335 + 28);
        goto LABEL_84;
      case 6u:
        uint64_t v41 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v41;
        uint64_t v336 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v42 = *(int *)(v336 + 20);
        __dsta = (char *)v9 + v42;
        uint64_t v43 = (char *)v10 + v42;
        uint64_t v44 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dsta, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(__dsta, v43, v44);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v44);
        }
        uint64_t v59 = *(int *)(v336 + 24);
        goto LABEL_84;
      case 7u:
        uint64_t v46 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v46))
        {
          uint64_t v47 = sub_253462A5C(&qword_269CE0498);
          memcpy(v9, v10, *(void *)(*(void *)(v47 - 8) + 64));
          goto LABEL_82;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v103 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v104 = (char *)v9 + v103;
            uint64_t v105 = (char *)v10 + v103;
            uint64_t v106 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
            goto LABEL_55;
          }
          if (!EnumCaseMultiPayload)
          {
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v72 = (char *)v9 + v71;
            uint64_t v73 = (char *)v10 + v71;
            uint64_t v74 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            goto LABEL_81;
          }
          memcpy(v9, v10, *(void *)(*(void *)(v46 - 8) + 64));
LABEL_81:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v46);
LABEL_82:
          uint64_t v117 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_83:
          uint64_t v59 = *(int *)(v117 + 20);
LABEL_84:
          uint64_t v172 = (char *)v9 + v59;
          uint64_t v173 = (char *)v10 + v59;
          uint64_t v174 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
LABEL_85:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v13);
          goto LABEL_86;
        }
        uint64_t v101 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v101))
        {
          uint64_t v102 = sub_253462A5C(&qword_269CE0490);
          memcpy(v9, v10, *(void *)(*(void *)(v102 - 8) + 64));
LABEL_80:
          uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v169 = (char *)v9 + v168;
          uint64_t v170 = (char *)v10 + v168;
          uint64_t v171 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          swift_storeEnumTagMultiPayload();
          goto LABEL_81;
        }
        int v155 = swift_getEnumCaseMultiPayload();
        if (v155 == 1)
        {
          uint64_t v161 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v161))
          {
            uint64_t v162 = sub_253462A5C(&qword_269CE0488);
            memcpy(v9, v10, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v163 = *(int *)(v161 + 20);
            uint64_t v339 = (char *)v9 + v163;
            __dstj = (char *)v10 + v163;
            uint64_t v164 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v339, __dstj, v164);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v161);
          }
          uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v166 = (char *)v9 + v165;
          uint64_t v340 = (char *)v10 + v165;
          uint64_t v167 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v166, v340, v167);
        }
        else
        {
          if (v155)
          {
            memcpy(v9, v10, *(void *)(*(void *)(v101 - 8) + 64));
LABEL_79:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v101);
            goto LABEL_80;
          }
          uint64_t v156 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v156;
          uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v294 = (char *)v10 + v157;
          uint64_t v299 = (char *)v9 + v157;
          uint64_t v158 = sub_253B07160();
          __dsti = v4;
          uint64_t v159 = v3;
          uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
          swift_bridgeObjectRetain();
          v160(v299, v294, v158);
          uint64_t v3 = v159;
          uint64_t v4 = __dsti;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_79;
      case 8u:
        uint64_t v48 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v48;
        v9[2] = v10[2];
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_21:
        uint64_t v295 = (char *)v10 + v35;
        __srcb = (char *)v9 + v35;
        uint64_t v49 = sub_253B07160();
        uint64_t v337 = v5;
        __dstb = v4;
        uint64_t v50 = v3;
        uint64_t v51 = *(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v53 = v295;
        uint64_t v52 = __srcb;
        uint64_t v54 = v49;
        goto LABEL_25;
      case 9u:
        uint64_t v55 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v55))
        {
          uint64_t v56 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v9, v10, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          uint64_t v75 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v75))
          {
            uint64_t v76 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v9, v10, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            uint64_t v93 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 16, v93))
            {
              memcpy(v9, v10, *(void *)(*(void *)(v75 - 8) + 64));
            }
            else
            {
              uint64_t v107 = v10[1];
              *uint64_t v9 = *v10;
              v9[1] = v107;
              uint64_t v108 = v10[3];
              v9[2] = v10[2];
              v9[3] = v108;
              v9[4] = v10[4];
              uint64_t v109 = *(int *)(v93 + 28);
              uint64_t v293 = (char *)v10 + v109;
              uint64_t v298 = (char *)v9 + v109;
              __srce = (void *)v93;
              uint64_t v110 = sub_253B07160();
              __dstg = v4;
              uint64_t v111 = v3;
              uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v112(v298, v293, v110);
              uint64_t v3 = v111;
              uint64_t v4 = __dstg;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 16, (uint64_t)__srce);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v75);
          }
          uint64_t v113 = *(int *)(v55 + 20);
          uint64_t v114 = (char *)v9 + v113;
          uint64_t v115 = (char *)v10 + v113;
          uint64_t v116 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v55);
        }
        uint64_t v117 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_83;
      case 0xAu:
        *uint64_t v9 = *v10;
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        unint64_t v331 = (char *)v9 + v57;
        __srcc = (char *)v10 + v57;
        uint64_t v58 = sub_253B07160();
        uint64_t v337 = v5;
        __dstb = v4;
        uint64_t v50 = v3;
        uint64_t v51 = *(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v52 = v331;
        uint64_t v53 = __srcc;
        uint64_t v54 = v58;
LABEL_25:
        v51(v52, v53, v54);
        uint64_t v3 = v50;
        uint64_t v4 = __dstb;
        uint64_t v5 = v337;
        goto LABEL_85;
      default:
        *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
        *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
        uint64_t v332 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v15 = v332[7];
        uint64_t v16 = (char *)v9 + v15;
        uint64_t v17 = (char *)v10 + v15;
        uint64_t v18 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
        }
        uint64_t v60 = v332[8];
        uint64_t v61 = (void *)((char *)v9 + v60);
        uint64_t v62 = (void *)((char *)v10 + v60);
        uint64_t v63 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v312 = v13;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_253462A5C(&qword_269CE0450);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          uint64_t v77 = v62[1];
          void *v61 = *v62;
          v61[1] = v77;
          uint64_t v78 = v62[3];
          v61[2] = v62[2];
          v61[3] = v78;
          uint64_t v79 = v62[5];
          v61[4] = v62[4];
          v61[5] = v79;
          uint64_t v80 = *(int *)(v63 + 28);
          __dstf = (char *)v61 + v80;
          __srcd = (char *)v62 + v80;
          uint64_t v81 = sub_253B07160();
          uint64_t v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v286(__dstf, __srcd, v81);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v63);
        }
        uint64_t v82 = v332[9];
        uint64_t v83 = (void *)((char *)v9 + v82);
        uint64_t v84 = (char *)v10 + v82;
        uint64_t v85 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = v3;
          uint64_t v87 = sub_253462A5C(&qword_269CE0468);
          memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          uint64_t v88 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v89 = (uint64_t)v84;
          uint64_t v90 = v88;
          __dstd = (void *)v89;
          __srca = (void *)v85;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v89, 1, v88))
          {
            uint64_t v91 = sub_253462A5C(&qword_269CE0460);
            uint64_t v92 = __dstd;
            memcpy(v83, __dstd, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            uint64_t v292 = v90;
            uint64_t v99 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v297 = v83;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstd, 1, v99))
            {
              uint64_t v100 = sub_253462A5C(&qword_269CE0458);
              memcpy(v83, __dstd, *(void *)(*(void *)(v100 - 8) + 64));
            }
            else
            {
              uint64_t v290 = v99;
              uint64_t v131 = __dstd[1];
              *uint64_t v83 = *__dstd;
              v83[1] = v131;
              uint64_t v132 = __dstd[2];
              unint64_t v133 = __dstd[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v132, v133);
              v297[2] = v132;
              v297[3] = v133;
              v297[4] = __dstd[4];
              uint64_t v134 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v135 = (char *)v297 + v134;
              uint64_t v136 = (char *)__dstd + v134;
              uint64_t v137 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v297, 0, 1, v290);
            }
            uint64_t v138 = *(int *)(v292 + 20);
            uint64_t v139 = (char *)v297 + v138;
            uint64_t v92 = __dstd;
            uint64_t v140 = (char *)__dstd + v138;
            uint64_t v141 = sub_253B07160();
            uint64_t v142 = v139;
            uint64_t v83 = v297;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v142, v140, v141);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v297, 0, 1, v292);
            uint64_t v85 = (uint64_t)__srca;
          }
          uint64_t v86 = v3;
          uint64_t v143 = *(int *)(v85 + 20);
          uint64_t v144 = (uint64_t)v83;
          int v145 = (char *)v83 + v143;
          uint64_t v146 = (char *)v92 + v143;
          uint64_t v147 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v144, 0, 1, (uint64_t)__srca);
        }
        uint64_t v148 = v332[10];
        uint64_t v149 = (void *)((char *)v9 + v148);
        uint64_t v150 = (void *)((char *)v10 + v148);
        uint64_t v151 = v150[1];
        *uint64_t v149 = *v150;
        v149[1] = v151;
        uint64_t v152 = v332[11];
        uint64_t v338 = (char *)v9 + v152;
        __dsth = (char *)v10 + v152;
        uint64_t v153 = sub_253B07160();
        uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
        swift_bridgeObjectRetain();
        v154(v338, __dsth, v153);
        uint64_t v3 = v86;
        uint64_t v13 = v312;
        goto LABEL_85;
    }
  }
  uint64_t v14 = sub_253462A5C(&qword_269CE04B0);
  memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_86:
  uint64_t v175 = *(int *)(v11 + 20);
  uint64_t v176 = (char *)v9 + v175;
  uint64_t v177 = (char *)v10 + v175;
  uint64_t v178 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_87:
  uint64_t v179 = v3[8];
  uint64_t v180 = (void *)((char *)v5 + v179);
  uint64_t v181 = (void *)((char *)v4 + v179);
  uint64_t v182 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v181, 1, (uint64_t)v182))
  {
    uint64_t v183 = sub_253462A5C(&qword_269CE24C8);
    memcpy(v180, v181, *(void *)(*(void *)(v183 - 8) + 64));
  }
  else
  {
    uint64_t v341 = v3;
    void *v180 = *v181;
    *((unsigned char *)v180 + 8) = *((unsigned char *)v181 + 8);
    v180[2] = v181[2];
    uint64_t v184 = v182[7];
    uint64_t v185 = (void *)((char *)v180 + v184);
    uint64_t v186 = (void *)((char *)v181 + v184);
    uint64_t v187 = type metadata accessor for TranscriptProtoDialogType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v187))
    {
      uint64_t v188 = sub_253462A5C(&qword_269CE2010);
      memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
    }
    else
    {
      uint64_t v189 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v189))
      {
        uint64_t v190 = sub_253462A5C(&qword_269CE2050);
        memcpy(v185, v186, *(void *)(*(void *)(v190 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v194 = v186[1];
            void *v185 = *v186;
            v185[1] = v194;
            uint64_t v193 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_99;
          case 2u:
            uint64_t v195 = v186[1];
            void *v185 = *v186;
            v185[1] = v195;
            uint64_t v193 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_99;
          case 3u:
          case 4u:
            uint64_t v191 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v191 - 8) + 16))(v185, v186, v191);
            goto LABEL_100;
          case 5u:
            uint64_t v196 = v186[1];
            void *v185 = *v186;
            v185[1] = v196;
            uint64_t v193 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_99;
          default:
            uint64_t v192 = v186[1];
            void *v185 = *v186;
            v185[1] = v192;
            uint64_t v193 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_99:
            uint64_t v197 = *(int *)(v193 + 20);
            __srcf = (char *)v186 + v197;
            uint64_t v313 = (char *)v185 + v197;
            uint64_t v198 = sub_253B07160();
            uint64_t v300 = *(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16);
            swift_bridgeObjectRetain();
            v300(v313, __srcf, v198);
LABEL_100:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v185, 0, 1, v189);
            break;
        }
      }
      uint64_t v199 = *(int *)(v187 + 20);
      uint64_t v200 = (char *)v185 + v199;
      uint64_t v201 = (char *)v186 + v199;
      uint64_t v202 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v185, 0, 1, v187);
    }
    uint64_t v203 = v182[8];
    uint64_t v204 = (void *)((char *)v180 + v203);
    uint64_t v205 = (void *)((char *)v181 + v203);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v181 + v203, 1, v187))
    {
      uint64_t v206 = sub_253462A5C(&qword_269CE2010);
      memcpy(v204, v205, *(void *)(*(void *)(v206 - 8) + 64));
    }
    else
    {
      uint64_t v207 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v205, 1, v207))
      {
        uint64_t v208 = sub_253462A5C(&qword_269CE2050);
        memcpy(v204, v205, *(void *)(*(void *)(v208 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v212 = v205[1];
            void *v204 = *v205;
            v204[1] = v212;
            uint64_t v211 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_112;
          case 2u:
            uint64_t v213 = v205[1];
            void *v204 = *v205;
            v204[1] = v213;
            uint64_t v211 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_112;
          case 3u:
          case 4u:
            uint64_t v209 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v209 - 8) + 16))(v204, v205, v209);
            goto LABEL_113;
          case 5u:
            uint64_t v214 = v205[1];
            void *v204 = *v205;
            v204[1] = v214;
            uint64_t v211 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_112;
          default:
            uint64_t v210 = v205[1];
            void *v204 = *v205;
            v204[1] = v210;
            uint64_t v211 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_112:
            uint64_t v215 = *(int *)(v211 + 20);
            __srcg = (char *)v205 + v215;
            uint64_t v314 = (char *)v204 + v215;
            uint64_t v216 = sub_253B07160();
            long long v301 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
            swift_bridgeObjectRetain();
            v301(v314, __srcg, v216);
LABEL_113:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v204, 0, 1, v207);
            break;
        }
      }
      uint64_t v217 = *(int *)(v187 + 20);
      uint64_t v218 = (char *)v204 + v217;
      uint64_t v219 = (char *)v205 + v217;
      uint64_t v220 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16))(v218, v219, v220);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v204, 0, 1, v187);
    }
    uint64_t v221 = v182[9];
    uint64_t v222 = (char *)v180 + v221;
    uint64_t v223 = (char *)v181 + v221;
    uint64_t v224 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v223, 1, v224))
    {
      uint64_t v225 = sub_253462A5C(&qword_269CE2000);
      memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
    }
    else
    {
      unsigned char *v222 = *v223;
      uint64_t v226 = *(int *)(v224 + 20);
      uint64_t v227 = &v222[v226];
      uint64_t v228 = &v223[v226];
      uint64_t v229 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v222, 0, 1, v224);
    }
    uint64_t v230 = v182[10];
    uint64_t v231 = (void *)((char *)v180 + v230);
    uint64_t v232 = (void *)((char *)v181 + v230);
    uint64_t v233 = type metadata accessor for TranscriptProtoVisualOutput(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v232, 1, v233))
    {
      uint64_t v234 = sub_253462A5C(&qword_269CE1FF0);
      memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
    }
    else
    {
      uint64_t v235 = type metadata accessor for TranscriptProtoVisualOutputType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v232, 1, v235))
      {
        uint64_t v236 = sub_253462A5C(&qword_269CDCC18);
        memcpy(v231, v232, *(void *)(*(void *)(v236 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v239 = v232[1];
            void *v231 = *v232;
            v231[1] = v239;
            uint64_t v238 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_125;
          case 2u:
            uint64_t v241 = *v232;
            __dstk = (void *)v232[1];
            sub_25348A9C8(*v232, (unint64_t)__dstk);
            void *v231 = v241;
            v231[1] = __dstk;
            uint64_t v242 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
            uint64_t v243 = (char *)v231 + v242;
            __dstl = (char *)v232 + v242;
            uint64_t v244 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16))(v243, __dstl, v244);
            goto LABEL_129;
          case 3u:
            uint64_t v245 = *v232;
            __dstm = (void *)v232[1];
            sub_25348A9C8(*v232, (unint64_t)__dstm);
            void *v231 = v245;
            v231[1] = __dstm;
            uint64_t v246 = v232[3];
            v231[2] = v232[2];
            v231[3] = v246;
            uint64_t v240 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
            goto LABEL_128;
          default:
            uint64_t v237 = v232[1];
            void *v231 = *v232;
            v231[1] = v237;
            uint64_t v238 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_125:
            uint64_t v240 = *(int *)(v238 + 20);
LABEL_128:
            __srch = (char *)v232 + v240;
            uint64_t v315 = (char *)v231 + v240;
            uint64_t v247 = sub_253B07160();
            uint64_t v302 = *(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16);
            swift_bridgeObjectRetain();
            v302(v315, __srch, v247);
LABEL_129:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v231, 0, 1, v235);
            break;
        }
      }
      uint64_t v248 = *(int *)(v233 + 20);
      uint64_t v249 = (char *)v231 + v248;
      uint64_t v250 = (char *)v232 + v248;
      uint64_t v251 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 16))(v249, v250, v251);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v231, 0, 1, v233);
    }
    uint64_t v252 = v182[11];
    uint64_t v253 = (void *)((char *)v180 + v252);
    uint64_t v254 = (void *)((char *)v181 + v252);
    uint64_t v255 = v254[1];
    *uint64_t v253 = *v254;
    v253[1] = v255;
    uint64_t v256 = v182[12];
    uint64_t v257 = (char *)v180 + v256;
    uint64_t v258 = (char *)v181 + v256;
    uint64_t v259 = sub_253B07160();
    uint64_t v260 = *(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16);
    swift_bridgeObjectRetain();
    v260(v257, v258, v259);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v180, 0, 1, (uint64_t)v182);
    uint64_t v3 = v341;
  }
  uint64_t v261 = v3[9];
  uint64_t v262 = (void *)((char *)v5 + v261);
  uint64_t v263 = (void *)((char *)v4 + v261);
  uint64_t v264 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v263, 1, v264))
  {
    uint64_t v265 = sub_253462A5C(&qword_26B249528);
    memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v262 = *(_DWORD *)v263;
    uint64_t v342 = v5;
    uint64_t v266 = v4;
    uint64_t v267 = v3;
    uint64_t v268 = v263[2];
    v262[1] = v263[1];
    v262[2] = v268;
    uint64_t v269 = *(int *)(v264 + 24);
    uint64_t v270 = (char *)v262 + v269;
    uint64_t v271 = (char *)v263 + v269;
    uint64_t v272 = sub_253B07160();
    uint64_t v273 = *(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16);
    uint64_t v3 = v267;
    uint64_t v4 = v266;
    uint64_t v5 = v342;
    swift_bridgeObjectRetain();
    v273(v270, v271, v272);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v262, 0, 1, v264);
  }
  uint64_t v274 = v3[10];
  uint64_t v275 = v3[11];
  uint64_t v276 = (void *)((char *)v5 + v274);
  uint64_t v277 = (void *)((char *)v4 + v274);
  uint64_t v278 = v277[1];
  *uint64_t v276 = *v277;
  v276[1] = v278;
  uint64_t v279 = (char *)v5 + v275;
  uint64_t v280 = (char *)v4 + v275;
  uint64_t v281 = sub_253B07160();
  uint64_t v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
  swift_bridgeObjectRetain();
  v282(v279, v280, v281);
  return v5;
}

void *assignWithCopy for TranscriptProtoSystemResponse(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[3] = v4[3];
  v5[4] = v4[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_161:
        uint64_t v286 = *(int *)(v9 + 20);
        uint64_t v287 = (char *)v7 + v286;
        uint64_t v288 = (char *)v8 + v286;
        uint64_t v289 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 16))(v287, v288, v289);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_195;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v884 = a3;
          void *v7 = *v8;
          uint64_t v835 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v35 = *(int *)(v835 + 20);
          uint64_t v36 = (void *)((char *)v7 + v35);
          uint64_t v37 = (void *)((char *)v8 + v35);
          uint64_t v38 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
          {
            uint64_t v39 = sub_253462A5C(&qword_269CE0480);
            memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            uint64_t v105 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v105))
            {
              uint64_t v106 = sub_253462A5C(&qword_269CE0478);
              memcpy(v36, v37, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              uint64_t v761 = v105;
              uint64_t v804 = v38;
              *uint64_t v36 = *v37;
              v36[1] = v37[1];
              *((unsigned char *)v36 + 16) = *((unsigned char *)v37 + 16);
              uint64_t v729 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v186 = *(int *)(v729 + 24);
              uint64_t v712 = (char *)v36 + v186;
              uint64_t v187 = (char *)v37 + v186;
              uint64_t v188 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v187, 1, v188))
              {
                uint64_t v189 = sub_253462A5C(&qword_269CE0470);
                memcpy(v712, v187, *(void *)(*(void *)(v189 - 8) + 64));
              }
              else
              {
                unsigned char *v712 = *v187;
                uint64_t v240 = *(int *)(v188 + 20);
                v709 = &v712[v240];
                v717 = &v187[v240];
                uint64_t v241 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v241 - 8) + 16))(v709, v717, v241);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v712, 0, 1, v188);
              }
              uint64_t v242 = *(int *)(v729 + 28);
              uint64_t v243 = (char *)v36 + v242;
              uint64_t v244 = (char *)v37 + v242;
              uint64_t v245 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v243, v244, v245);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v761);
              uint64_t v38 = v804;
            }
            uint64_t v246 = *(int *)(v38 + 20);
            uint64_t v247 = v38;
            uint64_t v248 = (char *)v36 + v246;
            uint64_t v249 = (char *)v37 + v246;
            uint64_t v250 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16))(v248, v249, v250);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v247);
          }
          uint64_t v251 = *(int *)(v835 + 24);
          uint64_t v252 = (char *)v7 + v251;
          uint64_t v253 = (char *)v8 + v251;
          uint64_t v254 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16))(v252, v253, v254);
          a3 = v884;
          goto LABEL_160;
        case 2u:
          void *v7 = *v8;
          v7[1] = v8[1];
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          v885 = (char *)v7 + v40;
          v836 = (char *)v8 + v40;
          uint64_t v41 = sub_253B07160();
          v796 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          uint64_t v42 = v12;
          swift_bridgeObjectRetain();
          v796(v885, v836, v41);
          goto LABEL_40;
        case 3u:
          v886 = a3;
          void *v7 = *v8;
          v7[1] = v8[1];
          uint64_t v43 = v8[2];
          *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
          v7[2] = v43;
          uint64_t v44 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_29;
        case 4u:
          void *v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          uint64_t v45 = v8[3];
          *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
          v7[3] = v45;
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_36;
        case 5u:
          v886 = a3;
          void *v7 = *v8;
          v7[1] = v8[1];
          *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
          uint64_t v44 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_29:
          uint64_t v837 = v44;
          uint64_t v47 = *(int *)(v44 + 24);
          uint64_t v48 = (char *)v7 + v47;
          uint64_t v49 = (char *)v8 + v47;
          uint64_t v50 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v50))
          {
            uint64_t v51 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, v50);
          }
          a3 = v886;
          uint64_t v67 = *(int *)(v837 + 28);
          goto LABEL_68;
        case 6u:
          v887 = a3;
          void *v7 = *v8;
          v7[1] = v8[1];
          uint64_t v838 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v52 = *(int *)(v838 + 20);
          uint64_t v53 = (char *)v7 + v52;
          uint64_t v54 = (char *)v8 + v52;
          uint64_t v55 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
          }
          a3 = v887;
          uint64_t v67 = *(int *)(v838 + 24);
LABEL_68:
          uint64_t v107 = (char *)v7 + v67;
          uint64_t v108 = (char *)v8 + v67;
          uint64_t v109 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
          goto LABEL_160;
        case 7u:
          uint64_t v57 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v57))
          {
            uint64_t v58 = sub_253462A5C(&qword_269CE0498);
            memcpy(v7, v8, *(void *)(*(void *)(v58 - 8) + 64));
            goto LABEL_411;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
              uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v206 = (char *)v7 + v205;
              uint64_t v207 = a3;
              uint64_t v208 = (char *)v8 + v205;
              uint64_t v209 = sub_253B07160();
              uint64_t v210 = v208;
              a3 = v207;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v206, v210, v209);
              goto LABEL_126;
            }
            if (!EnumCaseMultiPayload)
            {
              *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
              uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v112 = (char *)v7 + v111;
              uint64_t v113 = a3;
              uint64_t v114 = (char *)v8 + v111;
              uint64_t v115 = sub_253B07160();
              uint64_t v116 = v114;
              a3 = v113;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v112, v116, v115);
LABEL_126:
              swift_storeEnumTagMultiPayload();
              goto LABEL_410;
            }
            memcpy(v7, v8, *(void *)(*(void *)(v57 - 8) + 64));
LABEL_410:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v57);
LABEL_411:
            uint64_t v261 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_412:
            uint64_t v672 = *(int *)(v261 + 20);
            v673 = (char *)v7 + v672;
            v674 = (char *)v8 + v672;
            uint64_t v675 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v675 - 8) + 16))(v673, v674, v675);
LABEL_160:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
            goto LABEL_161;
          }
          uint64_t v202 = a3;
          uint64_t v203 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v203))
          {
            uint64_t v204 = sub_253462A5C(&qword_269CE0490);
            memcpy(v7, v8, *(void *)(*(void *)(v204 - 8) + 64));
LABEL_409:
            uint64_t v668 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v669 = (char *)v7 + v668;
            v670 = (char *)v8 + v668;
            uint64_t v671 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v669, v670, v671);
            swift_storeEnumTagMultiPayload();
            a3 = v202;
            goto LABEL_410;
          }
          int v310 = swift_getEnumCaseMultiPayload();
          if (v310 == 1)
          {
            uint64_t v613 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v613))
            {
              uint64_t v614 = sub_253462A5C(&qword_269CE0488);
              memcpy(v7, v8, *(void *)(*(void *)(v614 - 8) + 64));
            }
            else
            {
              *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
              uint64_t v663 = *(int *)(v613 + 20);
              v906 = (char *)v7 + v663;
              v858 = (char *)v8 + v663;
              uint64_t v664 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v664 - 8) + 16))(v906, v858, v664);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v613);
            }
            uint64_t v665 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v666 = (char *)v7 + v665;
            v907 = (char *)v8 + v665;
            uint64_t v667 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v667 - 8) + 16))(v666, v907, v667);
          }
          else
          {
            if (v310)
            {
              memcpy(v7, v8, *(void *)(*(void *)(v203 - 8) + 64));
LABEL_408:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v203);
              goto LABEL_409;
            }
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v311 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            v767 = (char *)v8 + v311;
            v808 = (char *)v7 + v311;
            uint64_t v312 = sub_253B07160();
            v734 = *(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16);
            swift_bridgeObjectRetain();
            v734(v808, v767, v312);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_408;
        case 8u:
          void *v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_36:
          v797 = (char *)v8 + v46;
          v839 = (char *)v7 + v46;
          v888 = a3;
          uint64_t v59 = sub_253B07160();
          v758 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
          uint64_t v42 = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v60 = v59;
          a3 = v888;
          v758(v839, v797, v60);
          goto LABEL_40;
        case 9u:
          uint64_t v61 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v61))
          {
            uint64_t v62 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v7, v8, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            uint64_t v117 = a3;
            uint64_t v118 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v118))
            {
              uint64_t v119 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v7, v8, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              uint64_t v190 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v190))
              {
                memcpy(v7, v8, *(void *)(*(void *)(v118 - 8) + 64));
              }
              else
              {
                void *v7 = *v8;
                v7[1] = v8[1];
                v7[2] = v8[2];
                v7[3] = v8[3];
                v7[4] = v8[4];
                uint64_t v255 = *(int *)(v190 + 28);
                v765 = (char *)v8 + v255;
                v806 = (char *)v7 + v255;
                uint64_t v847 = v190;
                uint64_t v256 = sub_253B07160();
                v714 = *(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v714(v806, v765, v256);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, v847);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v118);
            }
            uint64_t v257 = *(int *)(v61 + 20);
            uint64_t v258 = (char *)v7 + v257;
            uint64_t v259 = (char *)v8 + v257;
            uint64_t v260 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16))(v258, v259, v260);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v61);
            a3 = v117;
          }
          uint64_t v261 = type metadata accessor for TranscriptProtoActionFailure(0);
          goto LABEL_412;
        case 0xAu:
          void *v7 = *v8;
          uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          v840 = (char *)v7 + v63;
          v889 = a3;
          uint64_t v64 = (char *)v8 + v63;
          uint64_t v65 = sub_253B07160();
          v798 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
          uint64_t v42 = v12;
          swift_bridgeObjectRetain();
          uint64_t v66 = v64;
          a3 = v889;
          v798(v840, v66, v65);
LABEL_40:
          uint64_t v12 = v42;
          goto LABEL_160;
        default:
          uint64_t v795 = v12;
          v882 = a3;
          *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
          *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
          *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
          v834 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v23 = v834[7];
          uint64_t v24 = (char *)v7 + v23;
          uint64_t v25 = (char *)v8 + v23;
          uint64_t v26 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
          }
          uint64_t v100 = v834[8];
          uint64_t v101 = (void *)((char *)v7 + v100);
          uint64_t v102 = (void *)((char *)v8 + v100);
          uint64_t v103 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v103))
          {
            uint64_t v104 = sub_253462A5C(&qword_269CE0450);
            memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            *uint64_t v101 = *v102;
            v101[1] = v102[1];
            v101[2] = v102[2];
            v101[3] = v102[3];
            v101[4] = v102[4];
            v101[5] = v102[5];
            uint64_t v120 = *(int *)(v103 + 28);
            v728 = (char *)v102 + v120;
            v760 = (char *)v101 + v120;
            uint64_t v121 = sub_253B07160();
            v707 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v707(v760, v728, v121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v101, 0, 1, v103);
          }
          uint64_t v122 = v834[9];
          uint64_t v123 = (void *)((char *)v7 + v122);
          unint64_t v124 = (void *)((char *)v8 + v122);
          uint64_t v125 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v124, 1, v125))
          {
            uint64_t v126 = sub_253462A5C(&qword_269CE0468);
            memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            uint64_t v127 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v124, 1, v127))
            {
              uint64_t v128 = sub_253462A5C(&qword_269CE0460);
              memcpy(v123, v124, *(void *)(*(void *)(v128 - 8) + 64));
            }
            else
            {
              uint64_t v730 = v125;
              uint64_t v191 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              v762 = v123;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v124, 1, v191))
              {
                uint64_t v192 = sub_253462A5C(&qword_269CE0458);
                memcpy(v123, v124, *(void *)(*(void *)(v192 - 8) + 64));
              }
              else
              {
                void *v123 = *v124;
                v123[1] = v124[1];
                uint64_t v718 = v191;
                uint64_t v262 = v124[2];
                unint64_t v263 = v124[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v262, v263);
                v762[2] = v262;
                v762[3] = v263;
                v762[4] = v124[4];
                uint64_t v264 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v265 = (char *)v762 + v264;
                uint64_t v266 = (char *)v124 + v264;
                uint64_t v267 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v265, v266, v267);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v762, 0, 1, v718);
              }
              uint64_t v268 = *(int *)(v127 + 20);
              uint64_t v269 = (char *)v762 + v268;
              uint64_t v270 = (char *)v124 + v268;
              uint64_t v271 = sub_253B07160();
              uint64_t v272 = v269;
              uint64_t v123 = v762;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v272, v270, v271);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v762, 0, 1, v127);
              uint64_t v125 = v730;
            }
            uint64_t v273 = *(int *)(v125 + 20);
            uint64_t v274 = (uint64_t)v123;
            uint64_t v275 = (char *)v123 + v273;
            uint64_t v276 = v125;
            uint64_t v277 = (char *)v124 + v273;
            uint64_t v278 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v275, v277, v278);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v276);
          }
          uint64_t v279 = v834[10];
          uint64_t v280 = (void *)((char *)v7 + v279);
          uint64_t v281 = (void *)((char *)v8 + v279);
          void *v280 = *v281;
          v280[1] = v281[1];
          uint64_t v282 = v834[11];
          uint64_t v283 = (char *)v7 + v282;
          v848 = (char *)v8 + v282;
          uint64_t v284 = sub_253B07160();
          uint64_t v285 = *(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16);
          swift_bridgeObjectRetain();
          v285(v283, v848, v284);
          a3 = v882;
          uint64_t v12 = v795;
          goto LABEL_160;
      }
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE0388);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_195;
  }
  if (v11)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
  if (!v16)
  {
    if (v17)
    {
      sub_2536FA73C();
      goto LABEL_18;
    }
    if (v5 == v4) {
      goto LABEL_194;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v896 = a3;
        void *v7 = *v8;
        uint64_t v859 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v135 = *(int *)(v859 + 20);
        uint64_t v136 = (void *)((char *)v7 + v135);
        uint64_t v137 = (void *)((char *)v8 + v135);
        uint64_t v138 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138))
        {
          uint64_t v139 = sub_253462A5C(&qword_269CE0480);
          memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          uint64_t v216 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v216))
          {
            uint64_t v217 = sub_253462A5C(&qword_269CE0478);
            memcpy(v136, v137, *(void *)(*(void *)(v217 - 8) + 64));
          }
          else
          {
            uint64_t v810 = v216;
            uint64_t v850 = v138;
            *uint64_t v136 = *v137;
            v136[1] = v137[1];
            *((unsigned char *)v136 + 16) = *((unsigned char *)v137 + 16);
            uint64_t v769 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v321 = *(int *)(v769 + 24);
            v719 = (char *)v136 + v321;
            uint64_t v322 = (char *)v137 + v321;
            uint64_t v323 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v322, 1, v323))
            {
              uint64_t v324 = sub_253462A5C(&qword_269CE0470);
              memcpy(v719, v322, *(void *)(*(void *)(v324 - 8) + 64));
            }
            else
            {
              unsigned char *v719 = *v322;
              uint64_t v624 = *(int *)(v323 + 20);
              uint64_t v711 = &v719[v624];
              v757 = &v322[v624];
              uint64_t v625 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v625 - 8) + 16))(v711, v757, v625);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v719, 0, 1, v323);
            }
            uint64_t v626 = *(int *)(v769 + 28);
            uint64_t v627 = (char *)v136 + v626;
            uint64_t v628 = (char *)v137 + v626;
            uint64_t v629 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v629 - 8) + 16))(v627, v628, v629);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v810);
            uint64_t v138 = v850;
          }
          uint64_t v630 = *(int *)(v138 + 20);
          uint64_t v631 = v138;
          v632 = (char *)v136 + v630;
          v633 = (char *)v137 + v630;
          uint64_t v634 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v634 - 8) + 16))(v632, v633, v634);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v631);
        }
        a3 = v896;
        uint64_t v635 = *(int *)(v859 + 24);
        v636 = (char *)v7 + v635;
        v637 = (char *)v8 + v635;
        uint64_t v638 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v638 - 8) + 16))(v636, v637, v638);
        goto LABEL_432;
      case 2u:
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v140 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        v860 = (char *)v8 + v140;
        v897 = (char *)v7 + v140;
        uint64_t v141 = sub_253B07160();
        uint64_t v142 = *(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16);
        swift_bridgeObjectRetain();
        v142(v897, v860, v141);
        goto LABEL_432;
      case 3u:
        v883 = a3;
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v143 = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        v7[2] = v143;
        uint64_t v861 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v144 = *(int *)(v861 + 24);
        int v145 = (char *)v7 + v144;
        uint64_t v146 = (char *)v8 + v144;
        uint64_t v147 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v146, 1, v147)) {
          goto LABEL_89;
        }
        goto LABEL_133;
      case 4u:
        void *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v149 = v8[3];
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v7[3] = v149;
        uint64_t v150 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        v862 = (char *)v8 + v150;
        v898 = (char *)v7 + v150;
        uint64_t v151 = a3;
        uint64_t v152 = sub_253B07160();
        v802 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v153 = v152;
        a3 = v151;
        v802(v898, v862, v153);
        goto LABEL_432;
      case 5u:
        v883 = a3;
        void *v7 = *v8;
        v7[1] = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        uint64_t v861 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v154 = *(int *)(v861 + 24);
        int v145 = (char *)v7 + v154;
        uint64_t v146 = (char *)v8 + v154;
        uint64_t v147 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v146, 1, v147))
        {
LABEL_89:
          uint64_t v148 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v145, v146, *(void *)(*(void *)(v148 - 8) + 64));
        }
        else
        {
LABEL_133:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v145, 0, 1, v147);
        }
        uint64_t v218 = *(int *)(v861 + 28);
        uint64_t v219 = (char *)v7 + v218;
        uint64_t v220 = (char *)v8 + v218;
        uint64_t v221 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16))(v219, v220, v221);
        goto LABEL_398;
      case 6u:
        v883 = a3;
        void *v7 = *v8;
        v7[1] = v8[1];
        uint64_t v863 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v155 = *(int *)(v863 + 20);
        uint64_t v156 = (char *)v7 + v155;
        uint64_t v157 = (char *)v8 + v155;
        uint64_t v158 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v157, 1, v158))
        {
          uint64_t v159 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v156, v157, *(void *)(*(void *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v156, 0, 1, v158);
        }
        uint64_t v222 = *(int *)(v863 + 24);
        uint64_t v223 = (char *)v7 + v222;
        uint64_t v224 = (char *)v8 + v222;
        uint64_t v225 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
        goto LABEL_398;
      case 7u:
        uint64_t v160 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v160))
        {
          uint64_t v161 = sub_253462A5C(&qword_269CE0498);
          memcpy(v7, v8, *(void *)(*(void *)(v161 - 8) + 64));
          goto LABEL_431;
        }
        int v226 = swift_getEnumCaseMultiPayload();
        uint64_t v227 = a3;
        if (v226 != 2)
        {
          if (v226 == 1)
          {
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v605 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            v606 = (char *)v7 + v605;
            uint64_t v607 = (char *)v8 + v605;
            uint64_t v608 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v608 - 8) + 16))(v606, v607, v608);
          }
          else
          {
            if (v226)
            {
              memcpy(v7, v8, *(void *)(*(void *)(v160 - 8) + 64));
              goto LABEL_430;
            }
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v228 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v229 = (char *)v7 + v228;
            uint64_t v230 = (char *)v8 + v228;
            uint64_t v231 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
          }
LABEL_429:
          swift_storeEnumTagMultiPayload();
LABEL_430:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v160);
          a3 = v227;
LABEL_431:
          uint64_t v703 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v704 = (char *)v7 + v703;
          v705 = (char *)v8 + v703;
          uint64_t v706 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v706 - 8) + 16))(v704, v705, v706);
LABEL_432:
          swift_storeEnumTagMultiPayload();
          goto LABEL_194;
        }
        uint64_t v603 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v603))
        {
          uint64_t v604 = sub_253462A5C(&qword_269CE0490);
          memcpy(v7, v8, *(void *)(*(void *)(v604 - 8) + 64));
LABEL_428:
          uint64_t v699 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          v700 = (char *)v7 + v699;
          v701 = (char *)v8 + v699;
          uint64_t v702 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v702 - 8) + 16))(v700, v701, v702);
          goto LABEL_429;
        }
        int v658 = swift_getEnumCaseMultiPayload();
        if (v658 == 1)
        {
          uint64_t v676 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v676))
          {
            uint64_t v677 = sub_253462A5C(&qword_269CE0488);
            memcpy(v7, v8, *(void *)(*(void *)(v677 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v694 = *(int *)(v676 + 20);
            v880 = (char *)v8 + v694;
            v908 = (char *)v7 + v694;
            uint64_t v695 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v695 - 8) + 16))(v908, v880, v695);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v676);
          }
          uint64_t v696 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          v697 = (char *)v7 + v696;
          v909 = (char *)v8 + v696;
          uint64_t v698 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v698 - 8) + 16))(v697, v909, v698);
        }
        else
        {
          if (v658)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v603 - 8) + 64));
LABEL_427:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v603);
            goto LABEL_428;
          }
          void *v7 = *v8;
          v7[1] = v8[1];
          uint64_t v659 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v857 = (char *)v8 + v659;
          v879 = (char *)v7 + v659;
          uint64_t v660 = sub_253B07160();
          v832 = *(void (**)(char *, char *, uint64_t))(*(void *)(v660 - 8) + 16);
          swift_bridgeObjectRetain();
          v832(v879, v857, v660);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_427;
      case 8u:
        void *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v162 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        v864 = (char *)v8 + v162;
        v899 = (char *)v7 + v162;
        uint64_t v163 = a3;
        uint64_t v164 = sub_253B07160();
        v803 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v165 = v164;
        a3 = v163;
        v803(v899, v864, v165);
        goto LABEL_432;
      case 9u:
        uint64_t v166 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v166))
        {
          uint64_t v167 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v7, v8, *(void *)(*(void *)(v167 - 8) + 64));
        }
        else
        {
          uint64_t v232 = a3;
          uint64_t v233 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v233))
          {
            uint64_t v234 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v7, v8, *(void *)(*(void *)(v234 - 8) + 64));
          }
          else
          {
            uint64_t v313 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v313))
            {
              memcpy(v7, v8, *(void *)(*(void *)(v233 - 8) + 64));
            }
            else
            {
              void *v7 = *v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v7[3] = v8[3];
              v7[4] = v8[4];
              uint64_t v615 = *(int *)(v313 + 28);
              v877 = (char *)v8 + v615;
              v905 = (char *)v7 + v615;
              uint64_t v791 = sub_253B07160();
              v756 = *(void (**)(char *, char *, uint64_t))(*(void *)(v791 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v756(v905, v877, v791);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, v313);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v233);
          }
          uint64_t v616 = *(int *)(v166 + 20);
          uint64_t v617 = (char *)v7 + v616;
          uint64_t v618 = (char *)v8 + v616;
          uint64_t v619 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v619 - 8) + 16))(v617, v618, v619);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v166);
          a3 = v232;
        }
        uint64_t v620 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v621 = (char *)v7 + v620;
        v622 = (char *)v8 + v620;
        uint64_t v623 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v623 - 8) + 16))(v621, v622, v623);
        goto LABEL_432;
      case 0xAu:
        void *v7 = *v8;
        uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        v865 = (char *)v8 + v168;
        v900 = (char *)v7 + v168;
        uint64_t v169 = sub_253B07160();
        uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
        swift_bridgeObjectRetain();
        v170(v900, v865, v169);
        goto LABEL_432;
      default:
        v883 = a3;
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
        *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
        uint64_t v29 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v30 = v29[7];
        uint64_t v31 = (char *)v7 + v30;
        uint64_t v32 = (char *)v8 + v30;
        uint64_t v33 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
          uint64_t v34 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
        }
        uint64_t v211 = v29[8];
        uint64_t v212 = (void *)((char *)v7 + v211);
        uint64_t v213 = (void *)((char *)v8 + v211);
        uint64_t v214 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v213, 1, v214))
        {
          uint64_t v215 = sub_253462A5C(&qword_269CE0450);
          memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
        }
        else
        {
          void *v212 = *v213;
          v212[1] = v213[1];
          v212[2] = v213[2];
          v212[3] = v213[3];
          v212[4] = v213[4];
          v212[5] = v213[5];
          uint64_t v292 = *(int *)(v214 + 28);
          v866 = (char *)v212 + v292;
          v807 = (char *)v213 + v292;
          uint64_t v293 = sub_253B07160();
          uint64_t v715 = *(void (**)(char *, char *, uint64_t))(*(void *)(v293 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v715(v866, v807, v293);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v212, 0, 1, v214);
        }
        uint64_t v294 = v29[9];
        uint64_t v295 = (void *)((char *)v7 + v294);
        uint64_t v296 = (void *)((char *)v8 + v294);
        uint64_t v297 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v296, 1, v297))
        {
          uint64_t v298 = sub_253462A5C(&qword_269CE0468);
          memcpy(v295, v296, *(void *)(*(void *)(v298 - 8) + 64));
        }
        else
        {
          uint64_t v299 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v296, 1, v299))
          {
            uint64_t v300 = sub_253462A5C(&qword_269CE0460);
            memcpy(v295, v296, *(void *)(*(void *)(v300 - 8) + 64));
          }
          else
          {
            uint64_t v829 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v876 = v299;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v296, 1, v829))
            {
              uint64_t v602 = sub_253462A5C(&qword_269CE0458);
              memcpy(v295, v296, *(void *)(*(void *)(v602 - 8) + 64));
            }
            else
            {
              void *v295 = *v296;
              v295[1] = v296[1];
              uint64_t v639 = v296[2];
              unint64_t v792 = v296[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v639, v792);
              v295[2] = v639;
              v295[3] = v792;
              v295[4] = v296[4];
              uint64_t v640 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              v641 = (char *)v295 + v640;
              v793 = (char *)v296 + v640;
              uint64_t v642 = sub_253B07160();
              v643 = v641;
              uint64_t v299 = v876;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v642 - 8) + 16))(v643, v793, v642);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v295, 0, 1, v829);
            }
            uint64_t v644 = *(int *)(v299 + 20);
            v645 = (char *)v295 + v644;
            v831 = (char *)v296 + v644;
            uint64_t v646 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v646 - 8) + 16))(v645, v831, v646);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v295, 0, 1, v876);
          }
          uint64_t v647 = *(int *)(v297 + 20);
          v648 = (char *)v295 + v647;
          v649 = (char *)v296 + v647;
          uint64_t v650 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v650 - 8) + 16))(v648, v649, v650);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v295, 0, 1, v297);
        }
        uint64_t v651 = v29[10];
        uint64_t v652 = (void *)((char *)v7 + v651);
        uint64_t v653 = (void *)((char *)v8 + v651);
        *uint64_t v652 = *v653;
        v652[1] = v653[1];
        uint64_t v654 = v29[11];
        v655 = (char *)v7 + v654;
        v878 = (char *)v8 + v654;
        uint64_t v656 = sub_253B07160();
        uint64_t v657 = *(void (**)(char *, char *, uint64_t))(*(void *)(v656 - 8) + 16);
        swift_bridgeObjectRetain();
        v657(v655, v878, v656);
LABEL_398:
        swift_storeEnumTagMultiPayload();
        a3 = v883;
        goto LABEL_194;
    }
  }
  if (v17)
  {
LABEL_18:
    uint64_t v28 = sub_253462A5C(&qword_269CE04B0);
    memcpy(v7, v8, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_194;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v890 = a3;
      void *v7 = *v8;
      uint64_t v841 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v68 = *(int *)(v841 + 20);
      uint64_t v69 = (void *)((char *)v7 + v68);
      uint64_t v70 = (void *)((char *)v8 + v68);
      uint64_t v71 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v71))
      {
        uint64_t v72 = sub_253462A5C(&qword_269CE0480);
        memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        uint64_t v171 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v171))
        {
          uint64_t v172 = sub_253462A5C(&qword_269CE0478);
          memcpy(v69, v70, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          uint64_t v764 = v171;
          uint64_t v805 = v71;
          *uint64_t v69 = *v70;
          v69[1] = v70[1];
          *((unsigned char *)v69 + 16) = *((unsigned char *)v70 + 16);
          uint64_t v732 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v235 = *(int *)(v732 + 24);
          uint64_t v713 = (char *)v69 + v235;
          uint64_t v236 = (char *)v70 + v235;
          uint64_t v237 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v236, 1, v237))
          {
            uint64_t v238 = sub_253462A5C(&qword_269CE0470);
            memcpy(v713, v236, *(void *)(*(void *)(v238 - 8) + 64));
          }
          else
          {
            unsigned char *v713 = *v236;
            uint64_t v325 = *(int *)(v237 + 20);
            v710 = &v713[v325];
            v720 = &v236[v325];
            uint64_t v326 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v326 - 8) + 16))(v710, v720, v326);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v713, 0, 1, v237);
          }
          uint64_t v327 = *(int *)(v732 + 28);
          uint64_t v328 = (char *)v69 + v327;
          uint64_t v329 = (char *)v70 + v327;
          uint64_t v330 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v330 - 8) + 16))(v328, v329, v330);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v69, 0, 1, v764);
          uint64_t v71 = v805;
        }
        uint64_t v331 = *(int *)(v71 + 20);
        uint64_t v332 = v71;
        uint64_t v333 = (char *)v69 + v331;
        uint64_t v334 = (char *)v70 + v331;
        uint64_t v335 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v69, 0, 1, v332);
      }
      uint64_t v336 = *(int *)(v841 + 24);
      uint64_t v337 = (char *)v7 + v336;
      uint64_t v338 = (char *)v8 + v336;
      uint64_t v339 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 16))(v337, v338, v339);
      a3 = v890;
      goto LABEL_193;
    case 2u:
      void *v7 = *v8;
      v7[1] = v8[1];
      uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      v891 = (char *)v7 + v73;
      v842 = (char *)v8 + v73;
      uint64_t v74 = sub_253B07160();
      v799 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
      uint64_t v75 = v15;
      swift_bridgeObjectRetain();
      v799(v891, v842, v74);
      goto LABEL_60;
    case 3u:
      v892 = a3;
      void *v7 = *v8;
      v7[1] = v8[1];
      uint64_t v76 = v8[2];
      *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
      v7[2] = v76;
      uint64_t v77 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_49;
    case 4u:
      void *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v78 = v8[3];
      *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
      v7[3] = v78;
      uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_56;
    case 5u:
      v892 = a3;
      void *v7 = *v8;
      v7[1] = v8[1];
      *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
      uint64_t v77 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_49:
      uint64_t v843 = v77;
      uint64_t v80 = *(int *)(v77 + 24);
      uint64_t v81 = (char *)v7 + v80;
      uint64_t v82 = (char *)v8 + v80;
      uint64_t v83 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v81, 0, 1, v83);
      }
      a3 = v892;
      uint64_t v129 = *(int *)(v843 + 28);
      goto LABEL_105;
    case 6u:
      v893 = a3;
      void *v7 = *v8;
      v7[1] = v8[1];
      uint64_t v844 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v85 = *(int *)(v844 + 20);
      uint64_t v86 = (char *)v7 + v85;
      uint64_t v87 = (char *)v8 + v85;
      uint64_t v88 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88))
      {
        uint64_t v89 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, v88);
      }
      a3 = v893;
      uint64_t v129 = *(int *)(v844 + 24);
LABEL_105:
      uint64_t v173 = (char *)v7 + v129;
      uint64_t v174 = (char *)v8 + v129;
      uint64_t v175 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
      goto LABEL_193;
    case 7u:
      uint64_t v90 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v90))
      {
        uint64_t v91 = sub_253462A5C(&qword_269CE0498);
        memcpy(v7, v8, *(void *)(*(void *)(v91 - 8) + 64));
        goto LABEL_422;
      }
      int v176 = swift_getEnumCaseMultiPayload();
      switch(v176)
      {
        case 2:
          long long v301 = a3;
          uint64_t v302 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v302))
          {
            uint64_t v303 = sub_253462A5C(&qword_269CE0490);
            memcpy(v7, v8, *(void *)(*(void *)(v303 - 8) + 64));
LABEL_420:
            uint64_t v686 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v687 = (char *)v7 + v686;
            v688 = (char *)v8 + v686;
            uint64_t v689 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v689 - 8) + 16))(v687, v688, v689);
            swift_storeEnumTagMultiPayload();
            a3 = v301;
            goto LABEL_421;
          }
          v830 = v5;
          v904 = v4;
          int v609 = swift_getEnumCaseMultiPayload();
          if (v609 == 1)
          {
            uint64_t v661 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v661))
            {
              uint64_t v662 = sub_253462A5C(&qword_269CE0488);
              memcpy(v7, v8, *(void *)(*(void *)(v662 - 8) + 64));
            }
            else
            {
              *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
              uint64_t v678 = *(int *)(v661 + 20);
              v679 = (char *)v7 + v678;
              v680 = (char *)v8 + v678;
              uint64_t v681 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v681 - 8) + 16))(v679, v680, v681);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v661);
            }
            uint64_t v682 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v683 = (char *)v7 + v682;
            v684 = (char *)v8 + v682;
            uint64_t v685 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 16))(v683, v684, v685);
          }
          else
          {
            if (v609)
            {
              memcpy(v7, v8, *(void *)(*(void *)(v302 - 8) + 64));
LABEL_419:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v302);
              uint64_t v4 = v904;
              uint64_t v5 = v830;
              goto LABEL_420;
            }
            void *v7 = *v8;
            v7[1] = v8[1];
            uint64_t v610 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            v755 = (char *)v8 + v610;
            v790 = (char *)v7 + v610;
            uint64_t v611 = sub_253B07160();
            v612 = *(void (**)(char *, char *, uint64_t))(*(void *)(v611 - 8) + 16);
            swift_bridgeObjectRetain();
            v612(v790, v755, v611);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_419;
        case 1:
          *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
          uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          uint64_t v305 = (char *)v7 + v304;
          uint64_t v306 = a3;
          uint64_t v307 = (char *)v8 + v304;
          uint64_t v308 = sub_253B07160();
          uint64_t v309 = v307;
          a3 = v306;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16))(v305, v309, v308);
          goto LABEL_172;
        case 0:
          *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
          uint64_t v177 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          uint64_t v178 = (char *)v7 + v177;
          uint64_t v179 = a3;
          uint64_t v180 = (char *)v8 + v177;
          uint64_t v181 = sub_253B07160();
          uint64_t v182 = v180;
          a3 = v179;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v178, v182, v181);
LABEL_172:
          swift_storeEnumTagMultiPayload();
          goto LABEL_421;
      }
      memcpy(v7, v8, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_421:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v90);
LABEL_422:
      uint64_t v320 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_423:
      uint64_t v690 = *(int *)(v320 + 20);
      v691 = (char *)v7 + v690;
      v692 = (char *)v8 + v690;
      uint64_t v693 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v693 - 8) + 16))(v691, v692, v693);
LABEL_193:
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_194:
      uint64_t v364 = *(int *)(v9 + 20);
      uint64_t v365 = (char *)v7 + v364;
      uint64_t v366 = (char *)v8 + v364;
      uint64_t v367 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 24))(v365, v366, v367);
LABEL_195:
      uint64_t v368 = a3[8];
      uint64_t v369 = (uint64_t)v5 + v368;
      uint64_t v370 = (uint64_t)v4 + v368;
      uint64_t v371 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
      int v372 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v369, 1, (uint64_t)v371);
      int v373 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v370, 1, (uint64_t)v371);
      if (!v372)
      {
        if (v373)
        {
          sub_2536FA73C();
          goto LABEL_201;
        }
        v902 = a3;
        *(void *)uint64_t v369 = *(void *)v370;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v369 + 8) = *(unsigned char *)(v370 + 8);
        *(void *)(v369 + 16) = *(void *)(v370 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v380 = v371[7];
        uint64_t v381 = (void *)(v369 + v380);
        uint64_t v382 = (void *)(v370 + v380);
        uint64_t v383 = type metadata accessor for TranscriptProtoDialogType(0);
        int v384 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v381, 1, v383);
        int v385 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v382, 1, v383);
        if (v384)
        {
          if (!v385)
          {
            uint64_t v386 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v382, 1, v386))
            {
              uint64_t v387 = sub_253462A5C(&qword_269CE2050);
              memcpy(v381, v382, *(void *)(*(void *)(v387 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v457 = type metadata accessor for TranscriptProtoSonicText(0);
                  goto LABEL_266;
                case 2u:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v457 = type metadata accessor for TranscriptProtoGeneratedText(0);
                  goto LABEL_266;
                case 3u:
                case 4u:
                  uint64_t v396 = sub_253B07160();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v396 - 8) + 16))(v381, v382, v396);
                  goto LABEL_267;
                case 5u:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v457 = type metadata accessor for TranscriptProtoCATDialog(0);
                  goto LABEL_266;
                default:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v457 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_266:
                  uint64_t v458 = *(int *)(v457 + 20);
                  v774 = (char *)v382 + v458;
                  v816 = (char *)v381 + v458;
                  uint64_t v739 = sub_253B07160();
                  v722 = *(void (**)(char *, char *, uint64_t))(*(void *)(v739 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v722(v816, v774, v739);
LABEL_267:
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v381, 0, 1, v386);
                  break;
              }
            }
            uint64_t v459 = *(int *)(v383 + 20);
            uint64_t v460 = (char *)v381 + v459;
            uint64_t v461 = (char *)v382 + v459;
            uint64_t v462 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v460, v461, v462);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v381, 0, 1, v383);
LABEL_281:
            uint64_t v477 = v371[8];
            uint64_t v478 = (void *)(v369 + v477);
            uint64_t v479 = (void *)(v370 + v477);
            int v480 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v369 + v477, 1, v383);
            int v481 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v479, 1, v383);
            if (v480)
            {
              if (!v481)
              {
                uint64_t v482 = type metadata accessor for TranscriptProtoDialogFormat(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v479, 1, v482))
                {
                  uint64_t v483 = sub_253462A5C(&qword_269CE2050);
                  memcpy(v478, v479, *(void *)(*(void *)(v483 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v493 = type metadata accessor for TranscriptProtoSonicText(0);
                      goto LABEL_304;
                    case 2u:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v493 = type metadata accessor for TranscriptProtoGeneratedText(0);
                      goto LABEL_304;
                    case 3u:
                    case 4u:
                      uint64_t v489 = sub_253B07160();
                      (*(void (**)(void *, void *, uint64_t))(*(void *)(v489 - 8) + 16))(v478, v479, v489);
                      goto LABEL_305;
                    case 5u:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v493 = type metadata accessor for TranscriptProtoCATDialog(0);
                      goto LABEL_304;
                    default:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v493 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_304:
                      uint64_t v494 = *(int *)(v493 + 20);
                      v780 = (char *)v479 + v494;
                      v821 = (char *)v478 + v494;
                      uint64_t v745 = sub_253B07160();
                      v724 = *(void (**)(char *, char *, uint64_t))(*(void *)(v745 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v724(v821, v780, v745);
LABEL_305:
                      swift_storeEnumTagMultiPayload();
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v478, 0, 1, v482);
                      break;
                  }
                }
                uint64_t v495 = *(int *)(v383 + 20);
                uint64_t v496 = (char *)v478 + v495;
                uint64_t v497 = (char *)v479 + v495;
                uint64_t v498 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v498 - 8) + 16))(v496, v497, v498);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v478, 0, 1, v383);
LABEL_319:
                uint64_t v513 = v371[9];
                uint64_t v514 = (unsigned char *)(v369 + v513);
                uint64_t v515 = (unsigned char *)(v370 + v513);
                uint64_t v516 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
                int v517 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v514, 1, v516);
                int v518 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v515, 1, v516);
                if (v517)
                {
                  if (!v518)
                  {
                    *uint64_t v514 = *v515;
                    uint64_t v519 = *(int *)(v516 + 20);
                    uint64_t v520 = &v514[v519];
                    uint64_t v521 = &v515[v519];
                    uint64_t v522 = sub_253B07160();
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v522 - 8) + 16))(v520, v521, v522);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v514, 0, 1, v516);
                    goto LABEL_325;
                  }
                }
                else
                {
                  if (!v518)
                  {
                    *uint64_t v514 = *v515;
                    uint64_t v533 = *(int *)(v516 + 20);
                    uint64_t v534 = &v514[v533];
                    uint64_t v535 = &v515[v533];
                    uint64_t v536 = sub_253B07160();
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v536 - 8) + 24))(v534, v535, v536);
LABEL_325:
                    uint64_t v524 = v371[10];
                    unint64_t v525 = (void *)(v369 + v524);
                    uint64_t v526 = (void *)(v370 + v524);
                    uint64_t v527 = type metadata accessor for TranscriptProtoVisualOutput(0);
                    int v528 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v525, 1, v527);
                    int v529 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v526, 1, v527);
                    if (v528)
                    {
                      if (!v529)
                      {
                        uint64_t v530 = type metadata accessor for TranscriptProtoVisualOutputType(0);
                        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v526, 1, v530))
                        {
                          uint64_t v531 = sub_253462A5C(&qword_269CDCC18);
                          memcpy(v525, v526, *(void *)(*(void *)(v531 - 8) + 64));
                        }
                        else
                        {
                          switch(swift_getEnumCaseMultiPayload())
                          {
                            case 1u:
                              *unint64_t v525 = *v526;
                              v525[1] = v526[1];
                              uint64_t v541 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
                              goto LABEL_343;
                            case 2u:
                              unint64_t v854 = v526[1];
                              uint64_t v867 = *v526;
                              sub_25348A9C8(*v526, v854);
                              *unint64_t v525 = v867;
                              v525[1] = v854;
                              uint64_t v544 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0)
                                            + 20);
                              v855 = (char *)v526 + v544;
                              v868 = (char *)v525 + v544;
                              uint64_t v545 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v545 - 8) + 16))(v868, v855, v545);
                              goto LABEL_347;
                            case 3u:
                              unint64_t v856 = v526[1];
                              uint64_t v869 = *v526;
                              sub_25348A9C8(*v526, v856);
                              *unint64_t v525 = v869;
                              v525[1] = v856;
                              v525[2] = v526[2];
                              v525[3] = v526[3];
                              uint64_t v543 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0)
                                            + 24);
                              goto LABEL_346;
                            default:
                              *unint64_t v525 = *v526;
                              v525[1] = v526[1];
                              uint64_t v541 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_343:
                              uint64_t v543 = *(int *)(v541 + 20);
LABEL_346:
                              v785 = (char *)v526 + v543;
                              v825 = (char *)v525 + v543;
                              uint64_t v750 = sub_253B07160();
                              v726 = *(void (**)(char *, char *, uint64_t))(*(void *)(v750 - 8) + 16);
                              swift_bridgeObjectRetain();
                              v726(v825, v785, v750);
LABEL_347:
                              swift_storeEnumTagMultiPayload();
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v525, 0, 1, v530);
                              break;
                          }
                        }
                        uint64_t v546 = *(int *)(v527 + 20);
                        uint64_t v547 = (char *)v525 + v546;
                        uint64_t v548 = (char *)v526 + v546;
                        uint64_t v549 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v549 - 8) + 16))(v547, v548, v549);
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v525, 0, 1, v527);
                        goto LABEL_349;
                      }
LABEL_331:
                      uint64_t v532 = sub_253462A5C(&qword_269CE1FF0);
                      memcpy(v525, v526, *(void *)(*(void *)(v532 - 8) + 64));
LABEL_349:
                      a3 = v902;
LABEL_350:
                      uint64_t v550 = v371[11];
                      uint64_t v551 = (void *)(v369 + v550);
                      uint64_t v552 = (void *)(v370 + v550);
                      *uint64_t v551 = *v552;
                      v551[1] = v552[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      uint64_t v553 = v371[12];
                      uint64_t v554 = v369 + v553;
                      uint64_t v555 = v370 + v553;
                      uint64_t v556 = sub_253B07160();
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v556 - 8) + 24))(v554, v555, v556);
                      goto LABEL_351;
                    }
                    if (v529)
                    {
                      sub_2536FA73C();
                      goto LABEL_331;
                    }
                    uint64_t v537 = type metadata accessor for TranscriptProtoVisualOutputType(0);
                    int v538 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v525, 1, v537);
                    int v539 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v526, 1, v537);
                    if (v538)
                    {
                      if (!v539)
                      {
                        switch(swift_getEnumCaseMultiPayload())
                        {
                          case 1u:
                            *unint64_t v525 = *v526;
                            v525[1] = v526[1];
                            uint64_t v540 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
                            goto LABEL_363;
                          case 2u:
                            uint64_t v583 = *v526;
                            unint64_t v870 = v526[1];
                            sub_25348A9C8(*v526, v870);
                            *unint64_t v525 = v583;
                            v525[1] = v870;
                            uint64_t v584 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0)
                                          + 20);
                            uint64_t v585 = (char *)v525 + v584;
                            v871 = (char *)v526 + v584;
                            uint64_t v586 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v586 - 8) + 16))(v585, v871, v586);
                            goto LABEL_367;
                          case 3u:
                            uint64_t v587 = *v526;
                            unint64_t v872 = v526[1];
                            sub_25348A9C8(*v526, v872);
                            *unint64_t v525 = v587;
                            v525[1] = v872;
                            v525[2] = v526[2];
                            v525[3] = v526[3];
                            uint64_t v582 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0)
                                          + 24);
                            goto LABEL_366;
                          default:
                            *unint64_t v525 = *v526;
                            v525[1] = v526[1];
                            uint64_t v540 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_363:
                            uint64_t v582 = *(int *)(v540 + 20);
LABEL_366:
                            v752 = (char *)v526 + v582;
                            v787 = (char *)v525 + v582;
                            uint64_t v588 = sub_253B07160();
                            v727 = *(void (**)(char *, char *, uint64_t))(*(void *)(v588 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v727(v787, v752, v588);
LABEL_367:
                            swift_storeEnumTagMultiPayload();
                            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v525, 0, 1, v537);
                            break;
                        }
                        goto LABEL_372;
                      }
                    }
                    else
                    {
                      if (!v539)
                      {
                        a3 = v902;
                        if (v5 == v4)
                        {
LABEL_373:
                          uint64_t v598 = *(int *)(v527 + 20);
                          int v599 = (char *)v525 + v598;
                          uint64_t v600 = (char *)v526 + v598;
                          uint64_t v601 = sub_253B07160();
                          (*(void (**)(char *, char *, uint64_t))(*(void *)(v601 - 8) + 24))(v599, v600, v601);
                          goto LABEL_350;
                        }
                        sub_2536FA73C();
                        switch(swift_getEnumCaseMultiPayload())
                        {
                          case 1u:
                            *unint64_t v525 = *v526;
                            v525[1] = v526[1];
                            uint64_t v589 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0)
                                          + 20);
                            v788 = (char *)v526 + v589;
                            v827 = (char *)v525 + v589;
                            uint64_t v590 = sub_253B07160();
                            v753 = *(void (**)(char *, char *, uint64_t))(*(void *)(v590 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v753(v827, v788, v590);
                            break;
                          case 2u:
                            uint64_t v591 = *v526;
                            unint64_t v873 = v526[1];
                            sub_25348A9C8(*v526, v873);
                            *unint64_t v525 = v591;
                            v525[1] = v873;
                            uint64_t v592 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0)
                                          + 20);
                            v593 = (char *)v525 + v592;
                            v874 = (char *)v526 + v592;
                            uint64_t v594 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v594 - 8) + 16))(v593, v874, v594);
                            break;
                          case 3u:
                            uint64_t v595 = *v526;
                            unint64_t v875 = v526[1];
                            sub_25348A9C8(*v526, v875);
                            *unint64_t v525 = v595;
                            v525[1] = v875;
                            v525[2] = v526[2];
                            v525[3] = v526[3];
                            uint64_t v596 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0)
                                          + 24);
                            v789 = (char *)v526 + v596;
                            v828 = (char *)v525 + v596;
                            uint64_t v597 = sub_253B07160();
                            v754 = *(void (**)(char *, char *, uint64_t))(*(void *)(v597 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v754(v828, v789, v597);
                            break;
                          default:
                            *unint64_t v525 = *v526;
                            v525[1] = v526[1];
                            uint64_t v580 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
                            v786 = (char *)v526 + v580;
                            v826 = (char *)v525 + v580;
                            uint64_t v581 = sub_253B07160();
                            v751 = *(void (**)(char *, char *, uint64_t))(*(void *)(v581 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v751(v826, v786, v581);
                            break;
                        }
                        swift_storeEnumTagMultiPayload();
LABEL_372:
                        a3 = v902;
                        goto LABEL_373;
                      }
                      sub_2536FA73C();
                    }
                    uint64_t v542 = sub_253462A5C(&qword_269CDCC18);
                    memcpy(v525, v526, *(void *)(*(void *)(v542 - 8) + 64));
                    goto LABEL_372;
                  }
                  sub_2536FA73C();
                }
                uint64_t v523 = sub_253462A5C(&qword_269CE2000);
                memcpy(v514, v515, *(void *)(*(void *)(v523 - 8) + 64));
                goto LABEL_325;
              }
LABEL_287:
              uint64_t v484 = sub_253462A5C(&qword_269CE2010);
              memcpy(v478, v479, *(void *)(*(void *)(v484 - 8) + 64));
              goto LABEL_319;
            }
            if (v481)
            {
              sub_2536FA73C();
              goto LABEL_287;
            }
            uint64_t v485 = type metadata accessor for TranscriptProtoDialogFormat(0);
            int v486 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v478, 1, v485);
            int v487 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v479, 1, v485);
            if (v486)
            {
              if (!v487)
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    *uint64_t v478 = *v479;
                    v478[1] = v479[1];
                    uint64_t v499 = type metadata accessor for TranscriptProtoSonicText(0);
                    goto LABEL_311;
                  case 2u:
                    *uint64_t v478 = *v479;
                    v478[1] = v479[1];
                    uint64_t v499 = type metadata accessor for TranscriptProtoGeneratedText(0);
                    goto LABEL_311;
                  case 3u:
                  case 4u:
                    uint64_t v488 = sub_253B07160();
                    (*(void (**)(void *, void *, uint64_t))(*(void *)(v488 - 8) + 16))(v478, v479, v488);
                    goto LABEL_312;
                  case 5u:
                    *uint64_t v478 = *v479;
                    v478[1] = v479[1];
                    uint64_t v499 = type metadata accessor for TranscriptProtoCATDialog(0);
                    goto LABEL_311;
                  default:
                    *uint64_t v478 = *v479;
                    v478[1] = v479[1];
                    uint64_t v499 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_311:
                    uint64_t v500 = *(int *)(v499 + 20);
                    v746 = (char *)v479 + v500;
                    v781 = (char *)v478 + v500;
                    uint64_t v501 = sub_253B07160();
                    v725 = *(void (**)(char *, char *, uint64_t))(*(void *)(v501 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v725(v781, v746, v501);
LABEL_312:
                    swift_storeEnumTagMultiPayload();
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v478, 0, 1, v485);
                    break;
                }
                goto LABEL_318;
              }
            }
            else
            {
              if (!v487)
              {
                if (v5 != v4)
                {
                  sub_2536FA73C();
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v502 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
                      v782 = (char *)v479 + v502;
                      v822 = (char *)v478 + v502;
                      uint64_t v503 = sub_253B07160();
                      v747 = *(void (**)(char *, char *, uint64_t))(*(void *)(v503 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v747(v822, v782, v503);
                      break;
                    case 2u:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v504 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
                      v783 = (char *)v479 + v504;
                      v823 = (char *)v478 + v504;
                      uint64_t v505 = sub_253B07160();
                      v748 = *(void (**)(char *, char *, uint64_t))(*(void *)(v505 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v748(v823, v783, v505);
                      break;
                    case 3u:
                    case 4u:
                      uint64_t v506 = sub_253B07160();
                      (*(void (**)(void *, void *, uint64_t))(*(void *)(v506 - 8) + 16))(v478, v479, v506);
                      break;
                    case 5u:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v507 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
                      v784 = (char *)v479 + v507;
                      v824 = (char *)v478 + v507;
                      uint64_t v508 = sub_253B07160();
                      v749 = *(void (**)(char *, char *, uint64_t))(*(void *)(v508 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v749(v824, v784, v508);
                      break;
                    default:
                      *uint64_t v478 = *v479;
                      v478[1] = v479[1];
                      uint64_t v491 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
                      v779 = (char *)v479 + v491;
                      v820 = (char *)v478 + v491;
                      uint64_t v492 = sub_253B07160();
                      v744 = *(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v744(v820, v779, v492);
                      break;
                  }
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_318;
              }
              sub_2536FA73C();
            }
            uint64_t v490 = sub_253462A5C(&qword_269CE2050);
            memcpy(v478, v479, *(void *)(*(void *)(v490 - 8) + 64));
LABEL_318:
            uint64_t v509 = *(int *)(v383 + 20);
            uint64_t v510 = (char *)v478 + v509;
            uint64_t v511 = (char *)v479 + v509;
            uint64_t v512 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v512 - 8) + 24))(v510, v511, v512);
            goto LABEL_319;
          }
LABEL_210:
          uint64_t v390 = sub_253462A5C(&qword_269CE2010);
          memcpy(v381, v382, *(void *)(*(void *)(v390 - 8) + 64));
          goto LABEL_281;
        }
        if (v385)
        {
          sub_2536FA73C();
          goto LABEL_210;
        }
        uint64_t v392 = type metadata accessor for TranscriptProtoDialogFormat(0);
        int v393 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v381, 1, v392);
        int v394 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v382, 1, v392);
        if (v393)
        {
          if (!v394)
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                *uint64_t v381 = *v382;
                v381[1] = v382[1];
                uint64_t v463 = type metadata accessor for TranscriptProtoSonicText(0);
                goto LABEL_273;
              case 2u:
                *uint64_t v381 = *v382;
                v381[1] = v382[1];
                uint64_t v463 = type metadata accessor for TranscriptProtoGeneratedText(0);
                goto LABEL_273;
              case 3u:
              case 4u:
                uint64_t v395 = sub_253B07160();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v395 - 8) + 16))(v381, v382, v395);
                goto LABEL_274;
              case 5u:
                *uint64_t v381 = *v382;
                v381[1] = v382[1];
                uint64_t v463 = type metadata accessor for TranscriptProtoCATDialog(0);
                goto LABEL_273;
              default:
                *uint64_t v381 = *v382;
                v381[1] = v382[1];
                uint64_t v463 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_273:
                uint64_t v464 = *(int *)(v463 + 20);
                v740 = (char *)v382 + v464;
                v775 = (char *)v381 + v464;
                uint64_t v465 = sub_253B07160();
                v723 = *(void (**)(char *, char *, uint64_t))(*(void *)(v465 - 8) + 16);
                swift_bridgeObjectRetain();
                v723(v775, v740, v465);
LABEL_274:
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v381, 0, 1, v392);
                break;
            }
            goto LABEL_280;
          }
        }
        else
        {
          if (!v394)
          {
            if (v5 != v4)
            {
              sub_2536FA73C();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v466 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
                  v776 = (char *)v382 + v466;
                  v817 = (char *)v381 + v466;
                  uint64_t v467 = sub_253B07160();
                  v741 = *(void (**)(char *, char *, uint64_t))(*(void *)(v467 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v741(v817, v776, v467);
                  break;
                case 2u:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v468 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
                  v777 = (char *)v382 + v468;
                  v818 = (char *)v381 + v468;
                  uint64_t v469 = sub_253B07160();
                  v742 = *(void (**)(char *, char *, uint64_t))(*(void *)(v469 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v742(v818, v777, v469);
                  break;
                case 3u:
                case 4u:
                  uint64_t v470 = sub_253B07160();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v470 - 8) + 16))(v381, v382, v470);
                  break;
                case 5u:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v471 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
                  v778 = (char *)v382 + v471;
                  v819 = (char *)v381 + v471;
                  uint64_t v472 = sub_253B07160();
                  v743 = *(void (**)(char *, char *, uint64_t))(*(void *)(v472 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v743(v819, v778, v472);
                  break;
                default:
                  *uint64_t v381 = *v382;
                  v381[1] = v382[1];
                  uint64_t v455 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
                  v773 = (char *)v382 + v455;
                  v815 = (char *)v381 + v455;
                  uint64_t v456 = sub_253B07160();
                  v738 = *(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v738(v815, v773, v456);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_280;
          }
          sub_2536FA73C();
        }
        uint64_t v397 = sub_253462A5C(&qword_269CE2050);
        memcpy(v381, v382, *(void *)(*(void *)(v397 - 8) + 64));
LABEL_280:
        uint64_t v473 = *(int *)(v383 + 20);
        uint64_t v474 = (char *)v381 + v473;
        uint64_t v475 = (char *)v382 + v473;
        uint64_t v476 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v476 - 8) + 24))(v474, v475, v476);
        goto LABEL_281;
      }
      if (v373)
      {
LABEL_201:
        uint64_t v379 = sub_253462A5C(&qword_269CE24C8);
        memcpy((void *)v369, (const void *)v370, *(void *)(*(void *)(v379 - 8) + 64));
        goto LABEL_351;
      }
      v901 = a3;
      *(void *)uint64_t v369 = *(void *)v370;
      *(unsigned char *)(v369 + 8) = *(unsigned char *)(v370 + 8);
      *(void *)(v369 + 16) = *(void *)(v370 + 16);
      uint64_t v374 = v371[7];
      uint64_t v375 = (void *)(v369 + v374);
      uint64_t v376 = (void *)(v370 + v374);
      uint64_t v377 = type metadata accessor for TranscriptProtoDialogType(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v376, 1, v377))
      {
        uint64_t v378 = sub_253462A5C(&qword_269CE2010);
        memcpy(v375, v376, *(void *)(*(void *)(v378 - 8) + 64));
      }
      else
      {
        uint64_t v388 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v376, 1, v388))
        {
          uint64_t v389 = sub_253462A5C(&qword_269CE2050);
          memcpy(v375, v376, *(void *)(*(void *)(v389 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v375 = *v376;
              v375[1] = v376[1];
              uint64_t v398 = type metadata accessor for TranscriptProtoSonicText(0);
              goto LABEL_226;
            case 2u:
              *uint64_t v375 = *v376;
              v375[1] = v376[1];
              uint64_t v398 = type metadata accessor for TranscriptProtoGeneratedText(0);
              goto LABEL_226;
            case 3u:
            case 4u:
              uint64_t v391 = sub_253B07160();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v391 - 8) + 16))(v375, v376, v391);
              goto LABEL_227;
            case 5u:
              *uint64_t v375 = *v376;
              v375[1] = v376[1];
              uint64_t v398 = type metadata accessor for TranscriptProtoCATDialog(0);
              goto LABEL_226;
            default:
              *uint64_t v375 = *v376;
              v375[1] = v376[1];
              uint64_t v398 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_226:
              uint64_t v399 = *(int *)(v398 + 20);
              v770 = (char *)v376 + v399;
              v812 = (char *)v375 + v399;
              uint64_t v400 = sub_253B07160();
              v735 = *(void (**)(char *, char *, uint64_t))(*(void *)(v400 - 8) + 16);
              swift_bridgeObjectRetain();
              v735(v812, v770, v400);
LABEL_227:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v375, 0, 1, v388);
              break;
          }
        }
        uint64_t v401 = *(int *)(v377 + 20);
        uint64_t v402 = (char *)v375 + v401;
        uint64_t v403 = (char *)v376 + v401;
        uint64_t v404 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v404 - 8) + 16))(v402, v403, v404);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v375, 0, 1, v377);
      }
      uint64_t v405 = v371[8];
      uint64_t v406 = (void *)(v369 + v405);
      uint64_t v407 = (void *)(v370 + v405);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v370 + v405, 1, v377))
      {
        uint64_t v408 = sub_253462A5C(&qword_269CE2010);
        memcpy(v406, v407, *(void *)(*(void *)(v408 - 8) + 64));
      }
      else
      {
        uint64_t v409 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v407, 1, v409))
        {
          uint64_t v410 = sub_253462A5C(&qword_269CE2050);
          memcpy(v406, v407, *(void *)(*(void *)(v410 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v406 = *v407;
              v406[1] = v407[1];
              uint64_t v412 = type metadata accessor for TranscriptProtoSonicText(0);
              goto LABEL_239;
            case 2u:
              *uint64_t v406 = *v407;
              v406[1] = v407[1];
              uint64_t v412 = type metadata accessor for TranscriptProtoGeneratedText(0);
              goto LABEL_239;
            case 3u:
            case 4u:
              uint64_t v411 = sub_253B07160();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v411 - 8) + 16))(v406, v407, v411);
              goto LABEL_240;
            case 5u:
              *uint64_t v406 = *v407;
              v406[1] = v407[1];
              uint64_t v412 = type metadata accessor for TranscriptProtoCATDialog(0);
              goto LABEL_239;
            default:
              *uint64_t v406 = *v407;
              v406[1] = v407[1];
              uint64_t v412 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_239:
              uint64_t v413 = *(int *)(v412 + 20);
              v771 = (char *)v407 + v413;
              v813 = (char *)v406 + v413;
              uint64_t v414 = sub_253B07160();
              v736 = *(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 16);
              swift_bridgeObjectRetain();
              v736(v813, v771, v414);
LABEL_240:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v406, 0, 1, v409);
              break;
          }
        }
        uint64_t v415 = *(int *)(v377 + 20);
        uint64_t v416 = (char *)v406 + v415;
        uint64_t v417 = (char *)v407 + v415;
        uint64_t v418 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v418 - 8) + 16))(v416, v417, v418);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v406, 0, 1, v377);
      }
      uint64_t v419 = v371[9];
      uint64_t v420 = (unsigned char *)(v369 + v419);
      uint64_t v421 = (unsigned char *)(v370 + v419);
      uint64_t v422 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v421, 1, v422))
      {
        uint64_t v423 = sub_253462A5C(&qword_269CE2000);
        memcpy(v420, v421, *(void *)(*(void *)(v423 - 8) + 64));
      }
      else
      {
        *uint64_t v420 = *v421;
        uint64_t v424 = *(int *)(v422 + 20);
        uint64_t v425 = &v420[v424];
        uint64_t v426 = &v421[v424];
        uint64_t v427 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v427 - 8) + 16))(v425, v426, v427);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v420, 0, 1, v422);
      }
      uint64_t v428 = v371[10];
      uint64_t v429 = (void *)(v369 + v428);
      v430 = (void *)(v370 + v428);
      uint64_t v431 = type metadata accessor for TranscriptProtoVisualOutput(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v430, 1, v431))
      {
        uint64_t v432 = sub_253462A5C(&qword_269CE1FF0);
        memcpy(v429, v430, *(void *)(*(void *)(v432 - 8) + 64));
      }
      else
      {
        uint64_t v433 = type metadata accessor for TranscriptProtoVisualOutputType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v430, 1, v433))
        {
          uint64_t v434 = sub_253462A5C(&qword_269CDCC18);
          memcpy(v429, v430, *(void *)(*(void *)(v434 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v429 = *v430;
              v429[1] = v430[1];
              uint64_t v435 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
              goto LABEL_252;
            case 2u:
              uint64_t v437 = *v430;
              unint64_t v851 = v430[1];
              sub_25348A9C8(*v430, v851);
              *uint64_t v429 = v437;
              v429[1] = v851;
              uint64_t v438 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0) + 20);
              uint64_t v439 = (char *)v429 + v438;
              v852 = (char *)v430 + v438;
              uint64_t v440 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16))(v439, v852, v440);
              goto LABEL_256;
            case 3u:
              uint64_t v441 = *v430;
              unint64_t v853 = v430[1];
              sub_25348A9C8(*v430, v853);
              *uint64_t v429 = v441;
              v429[1] = v853;
              v429[2] = v430[2];
              v429[3] = v430[3];
              uint64_t v436 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
              goto LABEL_255;
            default:
              *uint64_t v429 = *v430;
              v429[1] = v430[1];
              uint64_t v435 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_252:
              uint64_t v436 = *(int *)(v435 + 20);
LABEL_255:
              v772 = (char *)v430 + v436;
              v814 = (char *)v429 + v436;
              uint64_t v442 = sub_253B07160();
              v737 = *(void (**)(char *, char *, uint64_t))(*(void *)(v442 - 8) + 16);
              swift_bridgeObjectRetain();
              v737(v814, v772, v442);
LABEL_256:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v429, 0, 1, v433);
              break;
          }
        }
        uint64_t v443 = *(int *)(v431 + 20);
        uint64_t v444 = (char *)v429 + v443;
        uint64_t v445 = (char *)v430 + v443;
        uint64_t v446 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 16))(v444, v445, v446);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v429, 0, 1, v431);
      }
      uint64_t v447 = v371[11];
      uint64_t v448 = (void *)(v369 + v447);
      uint64_t v449 = (void *)(v370 + v447);
      *uint64_t v448 = *v449;
      v448[1] = v449[1];
      uint64_t v450 = v371[12];
      uint64_t v451 = v369 + v450;
      uint64_t v452 = v370 + v450;
      uint64_t v453 = sub_253B07160();
      uint64_t v454 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v453 - 8) + 16);
      swift_bridgeObjectRetain();
      v454(v451, v452, v453);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v369, 0, 1, (uint64_t)v371);
      a3 = v901;
LABEL_351:
      uint64_t v557 = a3[9];
      uint64_t v558 = (void *)((char *)v5 + v557);
      uint64_t v559 = (void *)((char *)v4 + v557);
      uint64_t v560 = type metadata accessor for TranscriptProtoStatementID(0);
      int v561 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v558, 1, v560);
      int v562 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v559, 1, v560);
      if (!v561)
      {
        if (!v562)
        {
          *(_DWORD *)uint64_t v558 = *(_DWORD *)v559;
          v558[1] = v559[1];
          v558[2] = v559[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v576 = *(int *)(v560 + 24);
          uint64_t v577 = (char *)v558 + v576;
          v578 = (char *)v559 + v576;
          uint64_t v579 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v579 - 8) + 24))(v577, v578, v579);
          goto LABEL_357;
        }
        sub_2536FA73C();
        goto LABEL_356;
      }
      if (v562)
      {
LABEL_356:
        uint64_t v567 = sub_253462A5C(&qword_26B249528);
        memcpy(v558, v559, *(void *)(*(void *)(v567 - 8) + 64));
        goto LABEL_357;
      }
      *(_DWORD *)uint64_t v558 = *(_DWORD *)v559;
      v558[1] = v559[1];
      v558[2] = v559[2];
      uint64_t v563 = *(int *)(v560 + 24);
      v564 = (char *)v558 + v563;
      v903 = (char *)v559 + v563;
      uint64_t v565 = sub_253B07160();
      uint64_t v566 = *(void (**)(char *, char *, uint64_t))(*(void *)(v565 - 8) + 16);
      swift_bridgeObjectRetain();
      v566(v564, v903, v565);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v558, 0, 1, v560);
LABEL_357:
      uint64_t v568 = a3[10];
      uint64_t v569 = (void *)((char *)v5 + v568);
      uint64_t v570 = (void *)((char *)v4 + v568);
      *uint64_t v569 = *v570;
      v569[1] = v570[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v571 = a3[11];
      uint64_t v572 = (char *)v5 + v571;
      uint64_t v573 = (char *)v4 + v571;
      uint64_t v574 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v574 - 8) + 24))(v572, v573, v574);
      return v5;
    case 8u:
      void *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_56:
      v800 = (char *)v8 + v79;
      v845 = (char *)v7 + v79;
      v894 = a3;
      uint64_t v92 = sub_253B07160();
      v759 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
      uint64_t v75 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v93 = v92;
      a3 = v894;
      v759(v845, v800, v93);
      goto LABEL_60;
    case 9u:
      uint64_t v94 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v94))
      {
        uint64_t v95 = sub_253462A5C(&qword_269CE04A8);
        memcpy(v7, v8, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        uint64_t v183 = a3;
        uint64_t v184 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v184))
        {
          uint64_t v185 = sub_253462A5C(&qword_269CE04A0);
          memcpy(v7, v8, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          uint64_t v239 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v239))
          {
            memcpy(v7, v8, *(void *)(*(void *)(v184 - 8) + 64));
          }
          else
          {
            void *v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v7[3] = v8[3];
            v7[4] = v8[4];
            uint64_t v314 = *(int *)(v239 + 28);
            v768 = (char *)v8 + v314;
            v809 = (char *)v7 + v314;
            uint64_t v849 = v239;
            uint64_t v315 = sub_253B07160();
            v716 = *(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v716(v809, v768, v315);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, v849);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v184);
        }
        uint64_t v316 = *(int *)(v94 + 20);
        uint64_t v317 = (char *)v7 + v316;
        uint64_t v318 = (char *)v8 + v316;
        uint64_t v319 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v317, v318, v319);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v94);
        a3 = v183;
      }
      uint64_t v320 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_423;
    case 0xAu:
      void *v7 = *v8;
      uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      v846 = (char *)v7 + v96;
      v895 = a3;
      uint64_t v97 = (char *)v8 + v96;
      uint64_t v98 = sub_253B07160();
      v801 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
      uint64_t v75 = v15;
      swift_bridgeObjectRetain();
      uint64_t v99 = v97;
      a3 = v895;
      v801(v846, v99, v98);
LABEL_60:
      uint64_t v15 = v75;
      goto LABEL_193;
    default:
      uint64_t v833 = v15;
      v881 = a3;
      *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
      *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
      *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
      v794 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v18 = v794[7];
      uint64_t v19 = (char *)v7 + v18;
      uint64_t v20 = (char *)v8 + v18;
      uint64_t v21 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v130 = v794[8];
      uint64_t v131 = (void *)((char *)v7 + v130);
      uint64_t v132 = (void *)((char *)v8 + v130);
      uint64_t v133 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v132, 1, v133))
      {
        uint64_t v134 = sub_253462A5C(&qword_269CE0450);
        memcpy(v131, v132, *(void *)(*(void *)(v134 - 8) + 64));
      }
      else
      {
        *uint64_t v131 = *v132;
        v131[1] = v132[1];
        v131[2] = v132[2];
        v131[3] = v132[3];
        v131[4] = v132[4];
        v131[5] = v132[5];
        uint64_t v193 = *(int *)(v133 + 28);
        v731 = (char *)v132 + v193;
        v763 = (char *)v131 + v193;
        uint64_t v194 = sub_253B07160();
        uint64_t v708 = *(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v708(v763, v731, v194);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v131, 0, 1, v133);
      }
      uint64_t v195 = v794[9];
      uint64_t v196 = (void *)((char *)v7 + v195);
      uint64_t v197 = (void *)((char *)v8 + v195);
      uint64_t v198 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v198))
      {
        uint64_t v199 = sub_253462A5C(&qword_269CE0468);
        memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
      }
      else
      {
        uint64_t v200 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v200))
        {
          uint64_t v201 = sub_253462A5C(&qword_269CE0460);
          memcpy(v196, v197, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          uint64_t v733 = v198;
          uint64_t v290 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          v766 = v196;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v290))
          {
            uint64_t v291 = sub_253462A5C(&qword_269CE0458);
            memcpy(v196, v197, *(void *)(*(void *)(v291 - 8) + 64));
          }
          else
          {
            void *v196 = *v197;
            v196[1] = v197[1];
            uint64_t v721 = v290;
            uint64_t v340 = v197[2];
            unint64_t v341 = v197[3];
            swift_bridgeObjectRetain();
            sub_25348A9C8(v340, v341);
            v766[2] = v340;
            v766[3] = v341;
            v766[4] = v197[4];
            uint64_t v342 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v343 = (char *)v766 + v342;
            uint64_t v344 = (char *)v197 + v342;
            uint64_t v345 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v345 - 8) + 16))(v343, v344, v345);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v766, 0, 1, v721);
          }
          uint64_t v346 = *(int *)(v200 + 20);
          uint64_t v347 = (char *)v766 + v346;
          uint64_t v348 = (char *)v197 + v346;
          uint64_t v349 = sub_253B07160();
          uint64_t v350 = v347;
          uint64_t v196 = v766;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 16))(v350, v348, v349);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v766, 0, 1, v200);
          uint64_t v198 = v733;
        }
        uint64_t v351 = *(int *)(v198 + 20);
        uint64_t v352 = (uint64_t)v196;
        uint64_t v353 = (char *)v196 + v351;
        uint64_t v354 = v198;
        uint64_t v355 = (char *)v197 + v351;
        uint64_t v356 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v353, v355, v356);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v352, 0, 1, v354);
      }
      uint64_t v357 = v794[10];
      uint64_t v358 = (void *)((char *)v7 + v357);
      uint64_t v359 = (void *)((char *)v8 + v357);
      *uint64_t v358 = *v359;
      v358[1] = v359[1];
      uint64_t v360 = v794[11];
      uint64_t v361 = (char *)v7 + v360;
      v811 = (char *)v8 + v360;
      uint64_t v362 = sub_253B07160();
      uint64_t v363 = *(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 16);
      swift_bridgeObjectRetain();
      v363(v361, v811, v362);
      a3 = v881;
      uint64_t v15 = v833;
      goto LABEL_193;
  }
}